# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD BF 8E     	call Frame
  15  A104
  16  A104 3A 40 8A     	ld a,(Contador_de_frames)
  17  A107 FE E7        	cp $e7	; 1er FRAME, (sin mover AMADEUS), donde nos pasamos del FRAME RATE.!!!!!
  18  A109 28 FE        	jr z,$
  19  A10B
  20  A10B
  21  A10B              ;	ld a,(Ctrl_1)
  22  A10B              ;	bit 5,a
  23  A10B              ;	ret nz
  24  A10B
  25  A10B              ;	ei
  26  A10B
  27  A10B ED 4D        	reti
  28  A10D
  29  A10D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  30  A10D
  31  A10D              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A10D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A10D              ;
   3+ A10D              ;	17/02/23
   4+ A10D              ;
   5+ A10D              ;	Sprites e índices.
   6+ A10D
   7+ A10D              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 84 70        	defw Album_de_fotos_1
 259+ 84F0 07 71        	defw Album_de_fotos_2
 260+ 84F2 8A 71        	defw Album_de_fotos_3
 261+ 84F4 0D 72        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 90 72        	defw Album_de_fotos_disparos_1
 263+ 84F8 19 73        	defw Album_de_fotos_disparos_2
 264+ 84FA 96 73         	defw Album_de_fotos_disparos_3
 265+ 84FC 11 8A        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 15 8A        	defw End_Snapshot_1
 267+ 8500 19 8A        	defw End_Snapshot_2
 268+ 8502 1D 8A        	defw End_Snapshot_3
 269+ 8504 13 8A        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 17 8A        	defw End_Snapshot_disparos_1
 271+ 8508 1B 8A        	defw End_Snapshot_disparos_2
 272+ 850A 1F 8A        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  32  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 67 Bytes por entidad.
  96+ 858C
  97+ 858C E7 85        	defw Caja_1
  98+ 858E 2A 86        	defw Caja_2
  99+ 8590 6D 86        	defw Caja_3
 100+ 8592 B0 86        	defw Caja_4
 101+ 8594 F3 86        	defw Caja_5
 102+ 8596 36 87        	defw Caja_6
 103+ 8598 79 87        	defw Caja_7
 104+ 859A BC 87        	defw Caja_8
 105+ 859C FF 87        	defw Caja_9
 106+ 859E 42 88        	defw Caja_10
 107+ 85A0              ;	...
 108+ 85A0              ;	...
 109+ 85A0              ;	+ entidades ...
 110+ 85A0 00 00        	defw 0
 111+ 85A2 00 00        	defw 0
 112+ 85A4
 113+ 85A4              ; ---------- ---------- ---------- ---------- ----------
 114+ 85A4
 115+ 85A4 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 85A6 00 00        	defw 0		 									; (Posicion_actual).
 117+ 85A8 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 85AA 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 85AD
 120+ 85AD 05           	db %00000101									; (Attr).
 121+ 85AE 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 85B0 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 85B2
 124+ 85B2 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 85B4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 85B6
 127+ 85B6 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85B8 04           	db 4 											; (Cuad_objeto).
 129+ 85B9 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85BD
 131+ 85BD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85BE
 133+ 85BE 00 00        	db 0,0											; Variables_de_borrado
 134+ 85C0 00 00        	defw 0											;	" " " " " " "
 135+ 85C2 00 00        	defw 0											;	" " " " " " "
 136+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85C8
 138+ 85C8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85CA 00 00        	defw 0											;	" " " " " " "
 140+ 85CC 00 00        	defw 0											;	" " " " " " "
 141+ 85CE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85D2
 143+ 85D2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85D4
 145+ 85D4 00           	db 0											; (Autoriza_movimiento).
 146+ 85D5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85D9 00 00
 147+ 85DB 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 148+ 85DE
 149+ 85DE 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 150+ 85E0 00           	db 0											; (Cola_de_desplazamiento).
 151+ 85E1
 152+ 85E1 00           	db 0 											; (Columnas).
 153+ 85E2 00 00        	defw 0											; (Limite_horizontal).
 154+ 85E4 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 155+ 85E7
 156+ 85E7              ; ---------- ---------- ---------- ---------- ----------
 157+ 85E7
 158+ 85E7 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 159+ 85E9 00 00        	defw 0											; (Posicion_actual).
 160+ 85EB 00 00        	defw 0 											; (Puntero_objeto).
 161+ 85ED 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 162+ 85F0
 163+ 85F0 00           	db %00000000 									; (Attr).
 164+ 85F1
 165+ 85F1 00 00        	defw 0											; (Indice_Sprite_der).
 166+ 85F3 00 00        	defw 0											; (Indice_Sprite_izq).
 167+ 85F5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 168+ 85F7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 169+ 85F9
 170+ 85F9 00 00        	defw 0											; (Posicion_inicio).
 171+ 85FB 00           	db 0											; (Cuad_objeto).
 172+ 85FC
 173+ 85FC 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 174+ 8600
 175+ 8600 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 176+ 8601
 177+ 8601 00 00        	db 0,0										    ; Variables_de_borrado
 178+ 8603 00 00        	defw 0											;	" " " " " " "
 179+ 8605 00 00        	defw 0											;	" " " " " " "
 180+ 8607 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 860B
 182+ 860B 00 00        	db 0,0											; Variables_de_pintado
 183+ 860D 00 00        	defw 0											;	" " " " " " "
 184+ 860F 00 00        	defw 0											;	" " " " " " "
 185+ 8611 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 8615
 187+ 8615 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 188+ 8617
 189+ 8617 00           	db 0											; (Autoriza_movimiento).
 190+ 8618 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 190+ 861C 00 00
 191+ 861E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 192+ 8621
 193+ 8621 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 194+ 8623 00           	db 0											; (Cola_de_desplazamiento).
 195+ 8624
 196+ 8624 00           	db 0 											; (Columnas).
 197+ 8625 00 00        	defw 0											; (Limite_horizontal).
 198+ 8627 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 199+ 862A
 200+ 862A              ; ---------- ---------- ---------- ---------- ----------
 201+ 862A
 202+ 862A 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 203+ 862C 00 00        	defw 0											; (Posicion_actual).
 204+ 862E 00 00        	defw 0 											; (Puntero_objeto).
 205+ 8630 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 206+ 8633
 207+ 8633 00           	db %00000000 									; (Attr).
 208+ 8634
 209+ 8634 00 00        	defw 0											; (Indice_Sprite_der).
 210+ 8636 00 00        	defw 0											; (Indice_Sprite_izq).
 211+ 8638 00 00        	defw 0											; (Puntero_DESPLZ_der).
 212+ 863A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 213+ 863C
 214+ 863C 00 00        	defw 0											; (Posicion_inicio).
 215+ 863E 00           	db 0											; (Cuad_objeto).
 216+ 863F
 217+ 863F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 218+ 8643
 219+ 8643 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 220+ 8644
 221+ 8644 00 00        	db 0,0										    ; Variables_de_borrado
 222+ 8646 00 00        	defw 0											;	" " " " " " "
 223+ 8648 00 00        	defw 0											;	" " " " " " "
 224+ 864A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 225+ 864E
 226+ 864E 00 00        	db 0,0											; Variables_de_pintado
 227+ 8650 00 00        	defw 0											;	" " " " " " "
 228+ 8652 00 00        	defw 0											;	" " " " " " "
 229+ 8654 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 230+ 8658
 231+ 8658 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 232+ 865A
 233+ 865A 00           	db 0											; (Autoriza_movimiento).
 234+ 865B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 234+ 865F 00 00
 235+ 8661 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 236+ 8664
 237+ 8664 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 238+ 8666 00           	db 0											; (Cola_de_desplazamiento).
 239+ 8667
 240+ 8667 00           	db 0 											; (Columnas).
 241+ 8668 00 00        	defw 0											; (Limite_horizontal).
 242+ 866A 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 243+ 866D
 244+ 866D              ; ---------- ---------- ---------- ---------- ----------
 245+ 866D
 246+ 866D 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 247+ 866F 00 00        	defw 0											; (Posicion_actual).
 248+ 8671 00 00        	defw 0 											; (Puntero_objeto).
 249+ 8673 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 250+ 8676
 251+ 8676 00           	db %00000000 									; (Attr).
 252+ 8677
 253+ 8677 00 00        	defw 0											; (Indice_Sprite_der).
 254+ 8679 00 00        	defw 0											; (Indice_Sprite_izq).
 255+ 867B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 256+ 867D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 257+ 867F
 258+ 867F 00 00        	defw 0											; (Posicion_inicio).
 259+ 8681 00           	db 0											; (Cuad_objeto).
 260+ 8682
 261+ 8682 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 262+ 8686
 263+ 8686 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 264+ 8687
 265+ 8687 00 00        	db 0,0										    ; Variables_de_borrado
 266+ 8689 00 00        	defw 0											;	" " " " " " "
 267+ 868B 00 00        	defw 0											;	" " " " " " "
 268+ 868D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 269+ 8691
 270+ 8691 00 00        	db 0,0											; Variables_de_pintado
 271+ 8693 00 00        	defw 0											;	" " " " " " "
 272+ 8695 00 00        	defw 0											;	" " " " " " "
 273+ 8697 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 274+ 869B
 275+ 869B 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 276+ 869D
 277+ 869D 00           	db 0											; (Autoriza_movimiento).
 278+ 869E 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 278+ 86A2 00 00
 279+ 86A4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 280+ 86A7
 281+ 86A7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 282+ 86A9 00           	db 0											; (Cola_de_desplazamiento).
 283+ 86AA
 284+ 86AA 00           	db 0 											; (Columnas).
 285+ 86AB 00 00        	defw 0											; (Limite_horizontal).
 286+ 86AD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 287+ 86B0
 288+ 86B0              ; ---------- ---------- ---------- ---------- ----------
 289+ 86B0
 290+ 86B0 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 291+ 86B2 00 00        	defw 0											; (Posicion_actual).
 292+ 86B4 00 00        	defw 0 											; (Puntero_objeto).
 293+ 86B6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 294+ 86B9
 295+ 86B9 00           	db %00000000 									; (Attr).
 296+ 86BA
 297+ 86BA 00 00        	defw 0											; (Indice_Sprite_der).
 298+ 86BC 00 00        	defw 0											; (Indice_Sprite_izq).
 299+ 86BE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 300+ 86C0 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 301+ 86C2
 302+ 86C2 00 00        	defw 0											; (Posicion_inicio).
 303+ 86C4 00           	db 0											; (Cuad_objeto).
 304+ 86C5
 305+ 86C5 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 306+ 86C9
 307+ 86C9 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 308+ 86CA
 309+ 86CA 00 00        	db 0,0										    ; Variables_de_borrado
 310+ 86CC 00 00        	defw 0											;	" " " " " " "
 311+ 86CE 00 00        	defw 0											;	" " " " " " "
 312+ 86D0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 313+ 86D4
 314+ 86D4 00 00        	db 0,0											; Variables_de_pintado
 315+ 86D6 00 00        	defw 0											;	" " " " " " "
 316+ 86D8 00 00        	defw 0											;	" " " " " " "
 317+ 86DA 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 318+ 86DE
 319+ 86DE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 320+ 86E0
 321+ 86E0 00           	db 0											; (Autoriza_movimiento).
 322+ 86E1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 322+ 86E5 00 00
 323+ 86E7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 324+ 86EA
 325+ 86EA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 326+ 86EC 00           	db 0											; (Cola_de_desplazamiento).
 327+ 86ED
 328+ 86ED 00           	db 0 											; (Columnas).
 329+ 86EE 00 00        	defw 0											; (Limite_horizontal).
 330+ 86F0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 331+ 86F3
 332+ 86F3              ; ---------- ---------- ---------- ---------- ----------
 333+ 86F3
 334+ 86F3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 335+ 86F5 00 00        	defw 0											; (Posicion_actual).
 336+ 86F7 00 00        	defw 0 											; (Puntero_objeto).
 337+ 86F9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 338+ 86FC
 339+ 86FC 00           	db %00000000 									; (Attr).
 340+ 86FD
 341+ 86FD 00 00        	defw 0											; (Indice_Sprite_der).
 342+ 86FF 00 00        	defw 0											; (Indice_Sprite_izq).
 343+ 8701 00 00        	defw 0											; (Puntero_DESPLZ_der).
 344+ 8703 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 345+ 8705
 346+ 8705 00 00        	defw 0											; (Posicion_inicio).
 347+ 8707 00           	db 0											; (Cuad_objeto).
 348+ 8708
 349+ 8708 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 350+ 870C
 351+ 870C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 352+ 870D
 353+ 870D 00 00        	db 0,0										    ; Variables_de_borrado
 354+ 870F 00 00        	defw 0											;	" " " " " " "
 355+ 8711 00 00        	defw 0											;	" " " " " " "
 356+ 8713 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8717
 358+ 8717 00 00        	db 0,0											; Variables_de_pintado
 359+ 8719 00 00        	defw 0											;	" " " " " " "
 360+ 871B 00 00        	defw 0											;	" " " " " " "
 361+ 871D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 362+ 8721
 363+ 8721 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 364+ 8723
 365+ 8723 00           	db 0											; (Autoriza_movimiento).
 366+ 8724 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 366+ 8728 00 00
 367+ 872A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 368+ 872D
 369+ 872D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 370+ 872F 00           	db 0											; (Cola_de_desplazamiento).
 371+ 8730
 372+ 8730 00           	db 0 											; (Columnas).
 373+ 8731 00 00        	defw 0											; (Limite_horizontal).
 374+ 8733 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 375+ 8736
 376+ 8736              ; ---------- ---------- ---------- ---------- ----------
 377+ 8736
 378+ 8736 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 379+ 8738 00 00        	defw 0											; (Posicion_actual).
 380+ 873A 00 00        	defw 0 											; (Puntero_objeto).
 381+ 873C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 382+ 873F
 383+ 873F 00           	db %00000000 									; (Attr).
 384+ 8740
 385+ 8740 00 00        	defw 0											; (Indice_Sprite_der).
 386+ 8742 00 00        	defw 0											; (Indice_Sprite_izq).
 387+ 8744 00 00        	defw 0											; (Puntero_DESPLZ_der).
 388+ 8746 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 389+ 8748
 390+ 8748 00 00        	defw 0											; (Posicion_inicio).
 391+ 874A 00           	db 0											; (Cuad_objeto).
 392+ 874B
 393+ 874B 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 394+ 874F
 395+ 874F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 396+ 8750
 397+ 8750 00 00        	db 0,0										    ; Variables_de_borrado
 398+ 8752 00 00        	defw 0											;	" " " " " " "
 399+ 8754 00 00        	defw 0											;	" " " " " " "
 400+ 8756 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 401+ 875A
 402+ 875A 00 00        	db 0,0											; Variables_de_pintado
 403+ 875C 00 00        	defw 0											;	" " " " " " "
 404+ 875E 00 00        	defw 0											;	" " " " " " "
 405+ 8760 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 406+ 8764
 407+ 8764 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 408+ 8766
 409+ 8766 00           	db 0											; (Autoriza_movimiento).
 410+ 8767 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 410+ 876B 00 00
 411+ 876D 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 412+ 8770
 413+ 8770 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 414+ 8772 00           	db 0											; (Cola_de_desplazamiento).
 415+ 8773
 416+ 8773 00           	db 0 											; (Columnas).
 417+ 8774 00 00        	defw 0											; (Limite_horizontal).
 418+ 8776 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 419+ 8779
 420+ 8779              ; ---------- ---------- ---------- ---------- ----------
 421+ 8779
 422+ 8779 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 423+ 877B 00 00        	defw 0											; (Posicion_actual).
 424+ 877D 00 00        	defw 0 											; (Puntero_objeto).
 425+ 877F 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 426+ 8782
 427+ 8782 00           	db %00000000 									; (Attr).
 428+ 8783
 429+ 8783 00 00        	defw 0											; (Indice_Sprite_der).
 430+ 8785 00 00        	defw 0											; (Indice_Sprite_izq).
 431+ 8787 00 00        	defw 0											; (Puntero_DESPLZ_der).
 432+ 8789 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 433+ 878B
 434+ 878B 00 00        	defw 0											; (Posicion_inicio).
 435+ 878D 00           	db 0											; (Cuad_objeto).
 436+ 878E
 437+ 878E 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 438+ 8792
 439+ 8792 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 440+ 8793
 441+ 8793 00 00        	db 0,0										    ; Variables_de_borrado
 442+ 8795 00 00        	defw 0											;	" " " " " " "
 443+ 8797 00 00        	defw 0											;	" " " " " " "
 444+ 8799 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 445+ 879D
 446+ 879D 00 00        	db 0,0											; Variables_de_pintado
 447+ 879F 00 00        	defw 0											;	" " " " " " "
 448+ 87A1 00 00        	defw 0											;	" " " " " " "
 449+ 87A3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 450+ 87A7
 451+ 87A7 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 452+ 87A9
 453+ 87A9 00           	db 0											; (Autoriza_movimiento).
 454+ 87AA 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 454+ 87AE 00 00
 455+ 87B0 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 456+ 87B3
 457+ 87B3 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 458+ 87B5 00           	db 0											; (Cola_de_desplazamiento).
 459+ 87B6
 460+ 87B6 00           	db 0 											; (Columnas).
 461+ 87B7 00 00        	defw 0											; (Limite_horizontal).
 462+ 87B9 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 463+ 87BC
 464+ 87BC              ; ---------- ---------- ---------- ---------- ----------
 465+ 87BC
 466+ 87BC 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 467+ 87BE 00 00        	defw 0											; (Posicion_actual).
 468+ 87C0 00 00        	defw 0 											; (Puntero_objeto).
 469+ 87C2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 470+ 87C5
 471+ 87C5 00           	db %00000000 									; (Attr).
 472+ 87C6
 473+ 87C6 00 00        	defw 0											; (Indice_Sprite_der).
 474+ 87C8 00 00        	defw 0											; (Indice_Sprite_izq).
 475+ 87CA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 476+ 87CC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 477+ 87CE
 478+ 87CE 00 00        	defw 0											; (Posicion_inicio).
 479+ 87D0 00           	db 0											; (Cuad_objeto).
 480+ 87D1
 481+ 87D1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 482+ 87D5
 483+ 87D5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 484+ 87D6
 485+ 87D6 00 00        	db 0,0										    ; Variables_de_borrado
 486+ 87D8 00 00        	defw 0											;	" " " " " " "
 487+ 87DA 00 00        	defw 0											;	" " " " " " "
 488+ 87DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 489+ 87E0
 490+ 87E0 00 00        	db 0,0											; Variables_de_pintado
 491+ 87E2 00 00        	defw 0											;	" " " " " " "
 492+ 87E4 00 00        	defw 0											;	" " " " " " "
 493+ 87E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 494+ 87EA
 495+ 87EA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 496+ 87EC
 497+ 87EC 00           	db 0											; (Autoriza_movimiento).
 498+ 87ED 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 498+ 87F1 00 00
 499+ 87F3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 500+ 87F6
 501+ 87F6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 502+ 87F8 00           	db 0											; (Cola_de_desplazamiento).
 503+ 87F9
 504+ 87F9 00           	db 0 											; (Columnas).
 505+ 87FA 00 00        	defw 0											; (Limite_horizontal).
 506+ 87FC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 507+ 87FF
 508+ 87FF              ; ---------- ---------- ---------- ---------- ----------
 509+ 87FF
 510+ 87FF 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 511+ 8801 00 00        	defw 0											; (Posicion_actual).
 512+ 8803 00 00        	defw 0 											; (Puntero_objeto).
 513+ 8805 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 514+ 8808
 515+ 8808 00           	db %00000000 									; (Attr).
 516+ 8809
 517+ 8809 00 00        	defw 0											; (Indice_Sprite_der).
 518+ 880B 00 00        	defw 0											; (Indice_Sprite_izq).
 519+ 880D 00 00        	defw 0											; (Puntero_DESPLZ_der).
 520+ 880F 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 521+ 8811
 522+ 8811 00 00        	defw 0											; (Posicion_inicio).
 523+ 8813 00           	db 0											; (Cuad_objeto).
 524+ 8814
 525+ 8814 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 526+ 8818
 527+ 8818 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 528+ 8819
 529+ 8819 00 00        	db 0,0										    ; Variables_de_borrado
 530+ 881B 00 00        	defw 0											;	" " " " " " "
 531+ 881D 00 00        	defw 0											;	" " " " " " "
 532+ 881F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 533+ 8823
 534+ 8823 00 00        	db 0,0											; Variables_de_pintado
 535+ 8825 00 00        	defw 0											;	" " " " " " "
 536+ 8827 00 00        	defw 0											;	" " " " " " "
 537+ 8829 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 538+ 882D
 539+ 882D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 540+ 882F
 541+ 882F 00           	db 0											; (Autoriza_movimiento).
 542+ 8830 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 542+ 8834 00 00
 543+ 8836 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 544+ 8839
 545+ 8839 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 546+ 883B 00           	db 0											; (Cola_de_desplazamiento).
 547+ 883C
 548+ 883C 00           	db 0 											; (Columnas).
 549+ 883D 00 00        	defw 0											; (Limite_horizontal).
 550+ 883F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 551+ 8842
 552+ 8842              ; ---------- ---------- ---------- ---------- ----------
 553+ 8842
 554+ 8842 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 555+ 8844 00 00        	defw 0											; (Posicion_actual).
 556+ 8846 00 00        	defw 0 											; (Puntero_objeto).
 557+ 8848 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 558+ 884B
 559+ 884B 00           	db %00000000 									; (Attr).
 560+ 884C
 561+ 884C 00 00        	defw 0											; (Indice_Sprite_der).
 562+ 884E 00 00        	defw 0											; (Indice_Sprite_izq).
 563+ 8850 00 00        	defw 0											; (Puntero_DESPLZ_der).
 564+ 8852 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 565+ 8854
 566+ 8854 00 00        	defw 0											; (Posicion_inicio).
 567+ 8856 00           	db 0											; (Cuad_objeto).
 568+ 8857
 569+ 8857 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 570+ 885B
 571+ 885B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 572+ 885C
 573+ 885C 00 00        	db 0,0										    ; Variables_de_borrado
 574+ 885E 00 00        	defw 0											;	" " " " " " "
 575+ 8860 00 00        	defw 0											;	" " " " " " "
 576+ 8862 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 577+ 8866
 578+ 8866 00 00        	db 0,0											; Variables_de_pintado
 579+ 8868 00 00        	defw 0											;	" " " " " " "
 580+ 886A 00 00        	defw 0											;	" " " " " " "
 581+ 886C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 582+ 8870
 583+ 8870 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 584+ 8872
 585+ 8872 00           	db 0											; (Autoriza_movimiento).
 586+ 8873 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 586+ 8877 00 00
 587+ 8879 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 588+ 887C
 589+ 887C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 590+ 887E 00           	db 0											; (Cola_de_desplazamiento).
 591+ 887F
 592+ 887F 00           	db 0 											; (Columnas).
 593+ 8880 00 00        	defw 0											; (Limite_horizontal).
 594+ 8882 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 595+ 8885
 596+ 8885              ; -------------------------------------------------------------------------------------
 597+ 8885              ;
 598+ 8885              ;	20/05/23
 599+ 8885              ;
 600+ 8885              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 601+ 8885              ;
 602+ 8885              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 603+ 8885              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 604+ 8885              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 605+ 8885              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 606+ 8885
 607+ 8885              Indice_de_entidades
 608+ 8885
 609+ 8885 89 88        	defw Entidad_1
 610+ 8887 99 88        	defw Entidad_2
 611+ 8889
 612+ 8889              ;	BADSAT, (Satélite malvado).
 613+ 8889
 614+ 8889 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 615+ 888B 04           	db %00000100									; (Attr).
 616+ 888C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 617+ 888E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 618+ 8890 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 619+ 8892 01           	db 1											; (Cuad_objeto).
 620+ 8893 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 621+ 8897 8E 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 622+ 8899
 623+ 8899 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 624+ 889B 02           	db %00000010									; (Attr).
 625+ 889C A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 626+ 889E 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 627+ 88A0 40 50        	defw $5040                                      ; (Posicion_inicio).
 628+ 88A2 01           	db 1											; (Cuad_objeto).
 629+ 88A3 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 630+ 88A7 8E 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 631+ 88A9
# file closed: Cajas_y_disparos.asm
  33  88A9              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88A9              ; 13/05/23
   2+ 88A9
   3+ 88A9              Indice_de_niveles
   4+ 88A9
   5+ 88A9 B7 88        	defw Nivel_1
   6+ 88AB BB 88        	defw Nivel_2
   7+ 88AD C8 88        	defw Nivel_3
   8+ 88AF D8 88        	defw Nivel_4
   9+ 88B1 EA 88        	defw Nivel_5
  10+ 88B3
  11+ 88B3              ;	...
  12+ 88B3              ;	...
  13+ 88B3              ;	+ Niveles ...
  14+ 88B3
  15+ 88B3 00 00        	defw 0
  16+ 88B5 00 00        	defw 0
  17+ 88B7
  18+ 88B7 03           Nivel_1 db 3	                                ; Nº de entidades.
  19+ 88B8 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88BB 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88BC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C0 01 02
  22+ 88C2 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88C6 01 02
  23+ 88C8 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88C9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88CD 01
  25+ 88CE 03 01 01 01  	db 3,1,1,1,1
  25+ 88D2 01
  26+ 88D3 03 01 01 01  	db 3,1,1,1,1
  26+ 88D7 01
  27+ 88D8 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88D9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88DD 01
  29+ 88DE 04 01 01 01  	db 4,1,1,1,1
  29+ 88E2 01
  30+ 88E3 04 01 01 01  	db 4,1,1,1,1
  30+ 88E7 01
  31+ 88E8 02 03        	db 2,3
  32+ 88EA 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88EB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88EF 01
  34+ 88F0 05 01 01 01  	db 5,1,1,1,1
  34+ 88F4 01
  35+ 88F5 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 88F9 01
  36+ 88FA 05 01 01 01  	db 5,1,1,1,1
  36+ 88FE 01
  37+ 88FF
  38+ 88FF              ;---------------------------------------------------------------------------------------------------------------
  39+ 88FF              ;
  40+ 88FF              ;   21/5/23
  41+ 88FF              ;
  42+ 88FF              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 88FF              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 88FF              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 88FF              ;	_en la caja DRAW correspondiente.
  46+ 88FF              ;
  47+ 88FF              ;	MODIFICA: HL,DE y A.
  48+ 88FF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 88FF
  50+ 88FF              Inicializa_Punteros_de_nivel
  51+ 88FF
  52+ 88FF 21 A9 88     	ld hl,Indice_de_niveles
  53+ 8902 22 4B 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8905 CD 95 8D     	call Extrae_address
  55+ 8908 7E           	ld a,(hl)
  56+ 8909 32 01 8A     	ld (Numero_de_entidades),a
  57+ 890C 23           	inc hl
  58+ 890D 22 4D 8A     	ld (Datos_de_nivel),hl
  59+ 8910 C9           	ret
  60+ 8911
  61+ 8911              ;---------------------------------------------------------------------------------------------------------------
  62+ 8911              ;
  63+ 8911              ;   13/5/23
  64+ 8911              ;
  65+ 8911              ;	Destruye A,BC,HL,DE
  66+ 8911
  67+ 8911              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8911              ;	_del juego.
  69+ 8911
  70+ 8911              Prepara_cajas
  71+ 8911
  72+ 8911              ; Preparamos los punteros de las cajas.
  73+ 8911
  74+ 8911 21 8C 85     	ld hl,Indice_de_cajas
  75+ 8914 CD 95 8D     	call Extrae_address
  76+ 8917 CD 54 89     	call Avanza_caja
  77+ 891A
  78+ 891A CD 98 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 891D
  80+ 891D 2A 4D 8A     	ld hl,(Datos_de_nivel)
  81+ 8920
  82+ 8920              ; HL está en los datos del nivel correspondiente.
  83+ 8920              ; B actuará como contador de cajas.
  84+ 8920
  85+ 8920 C5           1 push bc
  86+ 8921
  87+ 8921 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8922 CD 45 89     	call PreparaBC
  89+ 8925
  90+ 8925 21 85 88     	ld hl,Indice_de_entidades
  91+ 8928 CD 4D 89     	call SBC_HL_con_BC_y_Extrae
  92+ 892B 22 07 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 892E
  94+ 892E CD 5E 89     	call Datos_de_entidad_a_caja
  95+ 8931
  96+ 8931 2A FF 89     	ld hl,(Indice_restore_caja)
  97+ 8934 CD 95 8D     	call Extrae_address
  98+ 8937 CD 54 89     	call Avanza_caja
  99+ 893A
 100+ 893A 2A 4D 8A     	ld hl,(Datos_de_nivel)
 101+ 893D 23           	inc hl
 102+ 893E 22 4D 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8941
 104+ 8941 C1           	pop bc
 105+ 8942 10 DC        	djnz 1B
 106+ 8944 C9           	ret
 107+ 8945
 108+ 8945 CB 27        PreparaBC sla a
 109+ 8947 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8949 4F           	ld c,a
 111+ 894A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 894C C9           	ret
 113+ 894D
 114+ 894D A7           SBC_HL_con_BC_y_Extrae and a
 115+ 894E ED 4A        	adc hl,bc
 116+ 8950 CD 95 8D     	call Extrae_address
 117+ 8953 C9           	ret
 118+ 8954
 119+ 8954 22 FB 89     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8957 13           	inc de
 121+ 8958 13           	inc de
 122+ 8959 EB           	ex de,hl
 123+ 895A 22 FF 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 895D C9           	ret
 125+ 895E
 126+ 895E              Datos_de_entidad_a_caja
 127+ 895E
 128+ 895E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 895E
 130+ 895E
 131+ 895E ED 5B FB 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8962
 133+ 8962 01 02 00     	ld bc,2
 134+ 8965 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8967
 136+ 8967 01 07 00     	ld bc,7
 137+ 896A CD 92 89     	call Situa_DE
 138+ 896D
 139+ 896D 01 05 00     	ld bc,5
 140+ 8970 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8972
 142+ 8972 01 04 00     	ld bc,4
 143+ 8975 CD 92 89     	call Situa_DE
 144+ 8978
 145+ 8978 01 07 00     	ld bc,7
 146+ 897B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 897D
 148+ 897D 01 18 00     	ld bc,24
 149+ 8980 CD 92 89     	call Situa_DE
 150+ 8983
 151+ 8983 01 02 00     	ld bc,2
 152+ 8986 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8988
 154+ 8988              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8988              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8988
 157+ 8988 01 0F 00     	ld bc,15									; *****
 158+ 898B CD 92 89     	call Situa_DE
 159+ 898E
 160+ 898E 3E 03        	ld a,3
 161+ 8990 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 8991
 163+ 8991 C9           	ret
 164+ 8992
 165+ 8992 EB           Situa_DE ex de,hl
 166+ 8993 A7           	and a
 167+ 8994 ED 4A        	adc hl,bc
 168+ 8996 EB           	ex de,hl
 169+ 8997 C9           	ret
 170+ 8998
 171+ 8998              ;---------------------------------------------------------------------------------------------------------------
 172+ 8998              ;
 173+ 8998              ;	21/5/23
 174+ 8998              ;
 175+ 8998              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 8998              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 8998              ;
 178+ 8998              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 8998              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 8998              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 8998              ;
 182+ 8998              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 8998              ;	MODIFICA: A y B.
 184+ 8998              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 8998
 186+ 8998              Admin_num_entidades
 187+ 8998
 188+ 8998              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 8998
 190+ 8998 3A 01 8A     	ld a,(Numero_de_entidades)
 191+ 899B A7           	and a
 192+ 899C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 899C              ;	jr z,$
 194+ 899C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 899C
 196+ 899C 20 03        	jr nz,3F
 197+ 899E
 198+ 899E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 899E
 200+ 899E CD FF 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89A1
 202+ 89A1
 203+ 89A1 3A 01 8A     3 ld a,(Numero_de_entidades)
 204+ 89A4 FE 0A        	cp 10
 205+ 89A6 38 08        	jr c,1F
 206+ 89A8
 207+ 89A8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89A8              ; Actualizamos variables.
 209+ 89A8
 210+ 89A8 3E 0A        	ld a,10
 211+ 89AA 32 02 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89AD 47           	ld b,a
 213+ 89AE 18 04        	jr 2F
 214+ 89B0
 215+ 89B0              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89B0              ; (Numero_de_entidades)="0".
 217+ 89B0
 218+ 89B0 32 02 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89B3 47           	ld b,a
 220+ 89B4 C9           2 ret
# file closed: Niveles.asm
  34  89B5
  35  89B5              ; ******************************************************************************************************************************************************************************************
  36  89B5              ; Constantes.
  37  89B5              ; ******************************************************************************************************************************************************************************************
  38  89B5              ;
  39  89B5              ; 25/05/23
  40  89B5              ;
  41  89B5              ; Constantes generales.
  42  89B5              ;
  43  89B5
  44  89B5              Sprite_vacio equ $f000
  45  89B5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  46  89B5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  47  89B5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  48  89B5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  49  89B5
  50  89B5              Album_de_fotos equ $7000	;	(7000h - 7083h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  51  89B5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  52  89B5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  53  89B5              Album_de_fotos_disparos equ $720d ; (720dh - 728fh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  54  89B5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  55  89B5              ;                               				        ; De momento situamos este almacén en $7060.
  56  89B5              Album_de_fotos_1 equ $7084	; (7084h - 7106h).
  57  89B5              Album_de_fotos_disparos_1 equ $7290	; (7290h - 7312h).
  58  89B5              Album_de_fotos_2 equ $7107	; (7107h - 7189h).
  59  89B5              Album_de_fotos_disparos_2 equ $7319	; (7313h - 7395h).
  60  89B5              Album_de_fotos_3 equ $718a	; (718ah - 720ch).
  61  89B5              Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  62  89B5
  63  89B5              ; 84h es el espacio necesario en (Album_de_fotos) para 10 entidades en pantalla.
  64  89B5
  65  89B5              ; ******************************************************************************************************************************************************************************************
  66  89B5              ; Variables.
  67  89B5              ; ******************************************************************************************************************************************************************************************
  68  89B5              ;
  69  89B5              ; 28/07/23
  70  89B5              ;
  71  89B5              ; Variables de DRAW. (Motor principal).
  72  89B5              ;
  73  89B5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  74  89B5
  75  89B5 00           Filas db 0												; Filas. [DRAW]
  76  89B6 00           Columns db 0  											; Nº de columnas. [DRAW]
  77  89B7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  78  89B9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  79  89BB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  80  89BC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  81  89BD
  82  89BD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  83  89BD
  84  89BD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  85  89BE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  86  89BE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  87  89BE 00           Attr db 0												; Atributos de la entidad:
  88  89BF
  89  89BF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  90  89BF              ;
  91  89BF              ;	COLORES: 0 ..... NEGRO
  92  89BF              ;    		 1 ..... AZUL
  93  89BF              ; 			 2 ..... ROJO
  94  89BF              ;			 3 ..... MAGENTA
  95  89BF              ; 			 4 ..... VERDE
  96  89BF              ; 			 5 ..... CIAN
  97  89BF              ;			 6 ..... AMARILLO
  98  89BF              ; 			 7 ..... BLANCO
  99  89BF
 100  89BF 00 00        Indice_Sprite_der defw 0
 101  89C1 00 00        Indice_Sprite_izq defw 0
 102  89C3 00 00        Puntero_DESPLZ_der defw 0
 103  89C5 00 00        Puntero_DESPLZ_izq defw 0
 104  89C7
 105  89C7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 106  89C9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 107  89CA
 108  89CA              ; Variables de objeto. (Características).
 109  89CA
 110  89CA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 111  89CB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 112  89CC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 113  89CD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 114  89CE
 115  89CE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 116  89CF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 117  89CF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 118  89CF
 119  89CF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 120  89D1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 121  89D3 00 00        	defw 0
 122  89D5 00 00 00 00  	db 0,0,0,0
 123  89D9
 124  89D9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 125  89DB 00 00        	defw 0
 126  89DD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 127  89DF 00 00 00 00  	db 0,0,0,0
 128  89E3
 129  89E3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 130  89E3
 131  89E3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 132  89E4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 133  89E4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 134  89E4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 135  89E4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 136  89E4              ;
 137  89E4              ; 														DESCRIPCIÖN:
 138  89E4              ;
 139  89E4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 140  89E4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 141  89E4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 142  89E4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 143  89E4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 144  89E4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 145  89E4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 146  89E4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 147  89E4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 148  89E4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 149  89E4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 150  89E4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 151  89E4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 152  89E4              ;
 153  89E4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 154  89E4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 155  89E4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 156  89E4
 157  89E4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 158  89E5
 159  89E5              ; Movimiento. ------------------------------------------------------------------------------------------------------
 160  89E5
 161  89E5 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 162  89E6 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 163  89E8 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 164  89EA 00 00        Puntero_indice_mov_bucle defw 0							;
 165  89EC              ;
 166  89EC              ;
 167  89EC 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 168  89ED              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 169  89ED              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 170  89ED 00           Incrementa_puntero_backup db 0
 171  89EE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 172  89EF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 173  89EF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 174  89F0 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 175  89F1 00           Cola_de_desplazamiento db 0								; Este byte indica:
 176  89F2              ;
 177  89F2              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 178  89F2              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 179  89F2              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 180  89F2              ;
 181  89F2              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 182  89F2              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 183  89F2              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 184  89F2              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 185  89F2              ;
 186  89F2              ;														;	"$ff" ..... Bucle infinito de repetición.
 187  89F2              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 188  89F2              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 189  89F2
 190  89F2
 191  89F2              ; Variables de funcionamiento. [DRAW].
 192  89F2
 193  89F2 00           Columnas db 0
 194  89F3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 195  89F5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 196  89F5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 197  89F6
 198  89F6              ; variables de control general.
 199  89F6
 200  89F6 00           Ctrl_2 db 0
 201  89F7              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 202  89F7              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 203  89F7              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 204  89F7              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 205  89F7              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 206  89F7              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 207  89F7              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 208  89F7              ;
 209  89F7              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 210  89F7              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 211  89F7              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 212  89F7              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 213  89F7              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 214  89F7
 215  89F7 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 216  89F8
 217  89F8              ;! 67 Bytes por entidad.
 218  89F8
 219  89F8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 220  89F8              ;					         		---------;      ;---------
 221  89F8
 222  89F8
 223  89F8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 224  89F8
 225  89F8 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 226  89F9
 227  89F9              ;														DESCRIPCIÓN:
 228  89F9              ;
 229  89F9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 230  89F9              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 231  89F9              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 232  89F9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 233  89F9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 234  89F9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 235  89F9
 236  89F9              ;														BIT 3, Recarga de nueva oleada.
 237  89F9              ;														BIT 4, Recarga de nueva oleada.
 238  89F9              ;														BIT 5, ****
 239  89F9
 240  89F9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 241  89FB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 242  89FB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 243  89FB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 244  89FB
 245  89FB
 246  89FB
 247  89FB              ; Gestión de ENTIDADES y CAJAS.
 248  89FB
 249  89FB 00 00        Puntero_store_caja defw 0
 250  89FD 00 00        Puntero_restore_caja defw 0
 251  89FF 00 00        Indice_restore_caja defw 0
 252  8A01 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 253  8A02 00           Numero_parcial_de_entidades db 0
 254  8A03 00           Entidades_en_curso db 0									; ..... ..... .....
 255  8A04 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 256  8A05              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 257  8A05              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 258  8A05              ;														; _ (Numero_de_malotes)="0".
 259  8A05 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 260  8A07 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 261  8A09              ;														; _ puntero (Indice_entidades).
 262  8A09
 263  8A09
 264  8A09              ;---------------------------------------------------------------------------------------------------------------
 265  8A09              ;
 266  8A09              ;	9/8/23
 267  8A09              ;
 268  8A09              ;	Álbumes.
 269  8A09
 270  8A09 00 00        Stack defw 0 												; La rutinas de pintado, utilizan esta_
 271  8A0B              ;															; _variable para almacenar lo posición del puntero_
 272  8A0B              ; 															; _de pila, SP.
 273  8A0B 00 00        Stack_2 defw 0												; 2º variable destinada a almacenar el puntero de pila, SP.
 274  8A0D              ;															; La utiliza la rutina [Extrae_foto_registros].
 275  8A0D 00 00        Stack_snapshot defw 0
 276  8A0F 00 00        Stack_snapshot_disparos defw 0
 277  8A11
 278  8A11 00 00        End_Snapshot defw 0
 279  8A13              ;															; Inicialmente está situado el la posición $7000, Album_de_fotos.
 280  8A13 00 00        End_Snapshot_disparos defw 0								; Puntero que indica la posición de memoria donde vamos a guardar_
 281  8A15              ;															; _el snapshot de los registros del siguiente disparo.
 282  8A15              ;															; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 283  8A15 00 00        End_Snapshot_1 defw 0
 284  8A17 00 00        End_Snapshot_disparos_1 defw 0
 285  8A19 00 00        End_Snapshot_2 defw 0
 286  8A1B 00 00        End_Snapshot_disparos_2 defw 0
 287  8A1D 00 00        End_Snapshot_3 defw 0
 288  8A1F 00 00        End_Snapshot_disparos_3 defw 0
 289  8A21
 290  8A21 00 00        Puntero_indice_album_de_fotos defw 0
 291  8A23 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 292  8A25
 293  8A25 00 00        Puntero_indice_End_Snapshot defw 0
 294  8A27 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 295  8A29 00 00        Puntero_de_End_Snapshot defw 0
 296  8A2B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 297  8A2D
 298  8A2D              ;---------------------------------------------------------------------------------------------------------------
 299  8A2D
 300  8A2D              ; Gestión de Disparos.
 301  8A2D
 302  8A2D 00           Numero_de_disparotes db 0
 303  8A2E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 304  8A30 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 305  8A32 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 306  8A33              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 307  8A33              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 308  8A33 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 309  8A35              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 310  8A35              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 311  8A35              ;														; _produzca colisión.
 312  8A35 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 313  8A37              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 314  8A37 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 315  8A3A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 316  8A3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 317  8A3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 318  8A3D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 319  8A3F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 320  8A40
 321  8A40              ;---------------------------------------------------------------------------------------------------------------
 322  8A40
 323  8A40              ; Relojes y temporizaciones.
 324  8A40
 325  8A40 00           Contador_de_frames db 0
 326  8A41 04           Clock_explosion db 4
 327  8A42 1E           Clock_Entidades_en_curso db 30
 328  8A43 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 329  8A44              ;														; Repite la oleada de entidades.
 330  8A44 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 331  8A45 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 332  8A46 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 333  8A47
 334  8A47 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 335  8A48 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 336  8A49 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 337  8A4A
 338  8A4A              ;---------------------------------------------------------------------------------------------------------------
 339  8A4A
 340  8A4A              ; Gestión de NIVELES.
 341  8A4A
 342  8A4A 00           Nivel db 0												; Nivel actual del juego.
 343  8A4B 00 00        Puntero_indice_NIVELES defw 0
 344  8A4D 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 345  8A4F              ; 														; _ que definen el NIVEL.
 346  8A4F              ; Y todo comienza aquí .....
 347  8A4F              ;
 348  8A4F              ; Rutina principal *************************************************************************************************************************************************************************
 349  8A4F              ;
 350  8A4F              ;	14/11/22
 351  8A4F
 352  8A4F              START
 353  8A4F
 354  8A4F 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 355  8A52 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 356  8A54 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 357  8A56 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 358  8A58 F3           	DI
 359  8A59
 360  8A59 3E 07        	ld a,%00000111
 361  8A5B CD CA 99     	call Cls
 362  8A5E
 363  8A5E CD 6E 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 364  8A61
 365  8A61              ; INICIALIZACIÓN.
 366  8A61
 367  8A61 CD FF 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 368  8A64
 369  8A64 CD 11 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 370  8A67
 371  8A67 CD E1 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 372  8A6A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 373  8A6A CD F7 8C     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 374  8A6D              ;													     ; _ malotes antes de guardar ninguna foto.
 375  8A6D              ; ----------
 376  8A6D
 377  8A6D CD 1E 8E     	call Restore_entidad
 378  8A70
 379  8A70 21 02 8A     	ld hl,Numero_parcial_de_entidades
 380  8A73 46           	ld b,(hl)
 381  8A74 04           	inc b
 382  8A75 05           	dec b
 383  8A76 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 384  8A78
 385  8A78              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 386  8A78              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 387  8A78              ;	Pintamos el resto de entidades:
 388  8A78
 389  8A78              ;	INICIA ENTIDADES !!!!!
 390  8A78
 391  8A78 C5           1 push bc  												; Guardo el contador de entidades.
 392  8A79
 393  8A79 CD 88 8C     	call Inicia_entidad
 394  8A7C
 395  8A7C C1           	pop bc
 396  8A7D 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 397  8A7F
 398  8A7F              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 399  8A7F              ; (Esto se dá cuando se inicia una nueva oleada).
 400  8A7F
 401  8A7F 3A F8 89     	ld a,(Ctrl_1)
 402  8A82 CB 5F        	bit 3,a
 403  8A84 20 18        	jr nz,5F											; Loop
 404  8A86
 405  8A86              ; 	INICIA AMADEUS !!!!!
 406  8A86
 407  8A86 CD 45 8E     3 call Restore_Amadeus
 408  8A89 CD 9B 8D     	call Inicia_Puntero_objeto
 409  8A8C CD 04 94     	call Draw
 410  8A8F CD A0 7F     	call Guarda_foto_registros
 411  8A92 11 A4 85     	ld de,Amadeus_db
 412  8A95 CD 57 8E     	call Store_Amadeus
 413  8A98
 414  8A98              ; 	INICIA DISPAROS !!!!!
 415  8A98
 416  8A98 CD 57 8D     	call Inicia_Puntero_Disparo_Entidades
 417  8A9B CD 5E 8D     	call Inicia_Puntero_Disparo_Amadeus
 418  8A9E
 419  8A9E              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 420  8A9E
 421  8A9E CD E1 8C     5 call Inicia_punteros_de_cajas
 422  8AA1 CD 1E 8E     	call Restore_entidad
 423  8AA4
 424  8AA4 3A F8 89     	ld a,(Ctrl_1)
 425  8AA7 CB 5F        	bit 3,a
 426  8AA9 28 0A        	jr z,6F
 427  8AAB
 428  8AAB              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 429  8AAB
 430  8AAB 21 F8 89     	ld hl,Ctrl_1
 431  8AAE CB 9E        	res 3,(hl)
 432  8AB0 CD 65 8D     	call Calcula_numero_de_malotes
 433  8AB3 18 0A        	jr Main
 434  8AB5
 435  8AB5              ; ----------
 436  8AB5
 437  8AB5 3A 02 8A     6 ld a,(Numero_parcial_de_entidades)
 438  8AB8 3C           	inc a
 439  8AB9 32 04 8A     	ld (Numero_de_malotes),a
 440  8ABC
 441  8ABC              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos y tb_
 442  8ABC              ; _ tenemos calculado (Numero_de_malotes).
 443  8ABC              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 444  8ABC              ; _ para situarnos en el siguiente album.
 445  8ABC
 446  8ABC CD 28 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 447  8ABF
 448  8ABF              ; ------------------------------------
 449  8ABF
 450  8ABF              Main
 451  8ABF
 452  8ABF FB           	ei ; Interrupciones habilitadas.
 453  8AC0
 454  8AC0              ; -----------------------------------------------------------------------
 455  8AC0              ;
 456  8AC0              ;	3/8/23
 457  8AC0
 458  8AC0 3A 42 8A     	ld a,(Clock_Entidades_en_curso)
 459  8AC3 47           	ld b,a
 460  8AC4 3A 40 8A     	ld a,(Contador_de_frames)
 461  8AC7 B8           	cp b
 462  8AC8 20 18        	jr nz,13F
 463  8ACA              ;
 464  8ACA              ;!debuggg
 465  8ACA              ;    ld a,(Contador_de_frames)
 466  8ACA              ;    ld hl,(Stack_snapshot)
 467  8ACA              ;    jr $
 468  8ACA              ;!debuggg
 469  8ACA
 470  8ACA 3A 02 8A     	ld a,(Numero_parcial_de_entidades)
 471  8ACD 47           	ld b,a
 472  8ACE 3A 03 8A     	ld a,(Entidades_en_curso)
 473  8AD1 B8           	cp b
 474  8AD2 28 0E        	jr z,13F
 475  8AD4 30 0C        	jr nc,13F
 476  8AD6
 477  8AD6 3C           	inc a
 478  8AD7 32 03 8A     	ld (Entidades_en_curso),a
 479  8ADA
 480  8ADA 3A 42 8A     	ld a,(Clock_Entidades_en_curso)
 481  8ADD
 482  8ADD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 483  8ADD              ;! _ IMPREDECIBLE !!!!
 484  8ADD
 485  8ADD C6 64        	add 100
 486  8ADF 32 42 8A     	ld (Clock_Entidades_en_curso),a
 487  8AE2
 488  8AE2              ; Habilita disparos.
 489  8AE2
 490  8AE2 21 44 8A     13 ld hl,Disparo_Amadeus
 491  8AE5 11 46 8A     	ld de,CLOCK_repone_disparo_Amadeus
 492  8AE8 CD 8F A0     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 493  8AEB
 494  8AEB 21 47 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 495  8AEE 11 49 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 496  8AF1 CD 8F A0     	call Habilita_disparos
 497  8AF4
 498  8AF4              ; COLISIONES.
 499  8AF4
 500  8AF4 CD E6 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 501  8AF7
 502  8AF7              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 503  8AF7              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 504  8AF7              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 505  8AF7
 506  8AF7 AF           	xor a
 507  8AF8 32 32 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 508  8AFB
 509  8AFB CD E1 8C     	call Inicia_punteros_de_cajas
 510  8AFE CD 1E 8E     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 511  8B01              ; 														; _ en DRAW.
 512  8B01 3A B5 89     	ld a,(Filas)
 513  8B04 A7           	and a
 514  8B05 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 515  8B07 CD 30 8E     	call Incrementa_punteros_de_cajas
 516  8B0A 18 F2        	jr 12B
 517  8B0C
 518  8B0C              ; ---------------------------------------------------------------------------------------
 519  8B0C
 520  8B0C 3A 02 8A     10 ld a,(Numero_parcial_de_entidades)
 521  8B0F 47               ld b,a
 522  8B10 A7           	and a
 523  8B11 20 14        	jr nz,11F
 524  8B13
 525  8B13 21 F8 89     	ld hl,Ctrl_1
 526  8B16 CB 66        	bit 4,(hl)
 527  8B18 C2 A4 8B     	jp nz,16F
 528  8B1B
 529  8B1B 21 F8 89     	ld hl,Ctrl_1
 530  8B1E CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 531  8B20
 532  8B20 3A 40 8A     	ld a,(Contador_de_frames)
 533  8B23 3C           	inc a
 534  8B24 32 43 8A     	ld (Activa_recarga_cajas),a
 535  8B27
 536  8B27              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 537  8B27
 538  8B27 3A 03 8A     11 ld a,(Entidades_en_curso)
 539  8B2A A7           	and a
 540  8B2B CA A4 8B     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 541  8B2E 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 542  8B2F
 543  8B2F              ; Código que ejecutamos con cada entidad:
 544  8B2F              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 545  8B2F
 546  8B2F C5           15 push bc 												; Nº de entidades en curso.
 547  8B30
 548  8B30              ; Impacto ???
 549  8B30
 550  8B30 3A CE 89     	ld a,(Impacto)
 551  8B33 A7           	and a
 552  8B34 28 2D        	jr z,8F
 553  8B36
 554  8B36              ; Hay Impacto en esta entidad.
 555  8B36
 556  8B36 21 41 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 557  8B39 35           	dec (hl)
 558  8B3A 20 62        	jr nz,17F
 559  8B3C
 560  8B3C              ;! Velocidad de la animación de la explosión.
 561  8B3C
 562  8B3C 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 563  8B3E              ;														; _,(velocidad de la explosión).
 564  8B3E CD 98 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 565  8B41
 566  8B41              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 567  8B41
 568  8B41 3A F6 89     	ld a,(Ctrl_2)
 569  8B44 CB 4F        	bit 1,a
 570  8B46 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 571  8B48
 572  8B48              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 573  8B48
 574  8B48 3A BD 89     	ld a,(CTRL_DESPLZ)
 575  8B4B A7           	and a
 576  8B4C 20 08        	jr nz,18F
 577  8B4E
 578  8B4E 21 84 84     	ld hl,Indice_Explosion_2x2-2
 579  8B51 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 580  8B54 18 06        	jr 19F
 581  8B56
 582  8B56 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 583  8B59 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 584  8B5C
 585  8B5C 21 F6 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 586  8B5F CB CE        	set 1,(hl)
 587  8B61 18 22        	jr 7F
 588  8B63
 589  8B63              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 590  8B63              ; _con las coordenadas de la entidad almacenada en DRAW.
 591  8B63
 592  8B63 3A F8 89     8 ld a,(Ctrl_1)
 593  8B66 CB 57        	bit 2,a
 594  8B68 28 1B        	jr z,7F
 595  8B6A
 596  8B6A 2A 35 8A     	ld hl,(Coordenadas_disparo_certero)
 597  8B6D EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 598  8B6E              ;														; E contiene la coordenada_X del disparo.
 599  8B6E 2A BB 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 600  8B71              ;														; H FILA, (Coordenada_y de la entidad).
 601  8B71 A7           	and a
 602  8B72 ED 52        	sbc hl,de
 603  8B74
 604  8B74 CD 1D 93     	call Determina_resultado_comparativa
 605  8B77
 606  8B77 78           	ld a,b
 607  8B78 A7           	and a
 608  8B79 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 609  8B7B
 610  8B7B              ; ----- ----- -----
 611  8B7B
 612  8B7B 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 613  8B7D 32 CE 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 614  8B80
 615  8B80 21 F8 89     	ld hl,Ctrl_1
 616  8B83 CB 96        	res 2,(hl)
 617  8B85
 618  8B85 CD 0A 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 619  8B88
 620  8B88 3A E3 89     	ld a,(Ctrl_0)
 621  8B8B CB 67        	bit 4,a
 622  8B8D 28 0F        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 623  8B8F
 624  8B8F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 625  8B8F              ; [[[
 626  8B8F CD B9 8E     	call Detecta_disparo_entidad
 627  8B92              ; ]]]
 628  8B92 CD A8 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 629  8B95
 630  8B95 21 E3 89     	ld hl,Ctrl_0
 631  8B98 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 632  8B9A AF           	xor a
 633  8B9B 32 E4 89     	ld (Obj_dibujado),a
 634  8B9E
 635  8B9E CD E3 8D     17 call Store_Restore_cajas
 636  8BA1
 637  8BA1 C1           	pop bc
 638  8BA2 10 8B        	djnz 15B
 639  8BA4
 640  8BA4              ; ------------------------------------
 641  8BA4
 642  8BA4              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 643  8BA4              ; Hemos gestionado todas las unidades.
 644  8BA4              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 645  8BA4
 646  8BA4              ;	ld hl,Ctrl_1
 647  8BA4              ;	res 2,(hl)
 648  8BA4
 649  8BA4              ; ------------------------------------
 650  8BA4
 651  8BA4              ; Tras la gestión de las entidades, ... AMADEUS.
 652  8BA4
 653  8BA4 CD 45 8E     16 call Restore_Amadeus
 654  8BA7
 655  8BA7 3A CE 89     	ld a,(Impacto)
 656  8BAA A7           	and a
 657  8BAB 20 FE        	jr nz,$
 658  8BAD
 659  8BAD CD 69 8C     	call Mov_Amadeus
 660  8BB0
 661  8BB0 3A E3 89     	ld a,(Ctrl_0)
 662  8BB3 CB 67        	bit 4,a
 663  8BB5 28 03        	jr z,14F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 664  8BB7
 665  8BB7 CD A8 8C     	call Guarda_foto_entidad_a_pintar
 666  8BBA
 667  8BBA 21 E3 89     14 ld hl,Ctrl_0
 668  8BBD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 669  8BBF AF           	xor a
 670  8BC0 32 E4 89     	ld (Obj_dibujado),a
 671  8BC3
 672  8BC3 11 A4 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 673  8BC6 CD 57 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 674  8BC9
 675  8BC9 CD 7A 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 676  8BCC
 677  8BCC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 678  8BCC
 679  8BCC CD 7D 8D     	call Calcula_numero_de_disparotes
 680  8BCF CD 65 8D     9 call Calcula_numero_de_malotes
 681  8BD2
 682  8BD2 CD 28 8D     	call Avanza_puntero_de_album_de_fotos_y_malotes
 683  8BD5
 684  8BD5 21 F8 89     	ld hl,Ctrl_1
 685  8BD8 CB AE        	res 5,(hl)
 686  8BDA
 687  8BDA 3E 04        	ld a,4
 688  8BDC D3 FE        	out ($fe),a
 689  8BDE
 690  8BDE              ; ----------------------------------------
 691  8BDE
 692  8BDE 3A F8 89     	ld a,(Ctrl_1) 										; Existe Loop?
 693  8BE1 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 694  8BE3 CA BF 8A     	jp z,Main
 695  8BE6
 696  8BE6              ; -----
 697  8BE6              ;	(((
 698  8BE6
 699  8BE6 3A 40 8A     	ld a,(Contador_de_frames)
 700  8BE9 47           	ld b,a
 701  8BEA 3A 43 8A     	ld a,(Activa_recarga_cajas)
 702  8BED B8           	cp b
 703  8BEE 28 08        	jr z,20F
 704  8BF0
 705  8BF0 21 F8 89     	ld hl,Ctrl_1
 706  8BF3 CB E6        	set 4,(hl)
 707  8BF5 C3 BF 8A     	jp Main
 708  8BF8
 709  8BF8 21 F8 89     20 ld hl,Ctrl_1
 710  8BFB CB A6        	res 4,(hl)
 711  8BFD F3           	di
 712  8BFE
 713  8BFE 3A 40 8A     	ld a,(Contador_de_frames)
 714  8C01
 715  8C01              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 716  8C01              ;! _ IMPREDECIBLE !!!!
 717  8C01
 718  8C01 C6 0A        	add 10
 719  8C03 32 42 8A     	ld (Clock_Entidades_en_curso),a
 720  8C06
 721  8C06 C3 64 8A     	jp 4B
 722  8C09
 723  8C09 C9           	ret
 724  8C0A
 725  8C0A              ; --------------------------------------------------------------------------------------------------------------
 726  8C0A              ;
 727  8C0A              ;	27/05/23
 728  8C0A
 729  8C0A              Mov_obj
 730  8C0A
 731  8C0A              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 732  8C0A
 733  8C0A 3A F6 89     	ld a,(Ctrl_2)
 734  8C0D CB 4F        	bit 1,a
 735  8C0F 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 736  8C11
 737  8C11              ; Explosión:
 738  8C11
 739  8C11 3A F7 89     	ld a,(Frames_explosion)
 740  8C14 A7           	and a
 741  8C15 20 11        	jr nz,4F
 742  8C17
 743  8C17              ; Una alimaña menos!!!!!!!!!1
 744  8C17
 745  8C17 CD 60 8E     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 746  8C1A 21 02 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 747  8C1D 35           	dec (hl)
 748  8C1E 21 03 8A     	ld hl,Entidades_en_curso
 749  8C21 35           	dec (hl)
 750  8C22 21 01 8A     	ld hl,Numero_de_entidades
 751  8C25 35           	dec (hl)
 752  8C26 18 40        	jr 3F
 753  8C28
 754  8C28              ; -----
 755  8C28
 756  8C28              ;	`Movemos´ la explosión.
 757  8C28
 758  8C28 2A C3 89     4 ld hl,(Puntero_DESPLZ_der)
 759  8C2B 23           	inc hl
 760  8C2C 23           	inc hl
 761  8C2D 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 762  8C30 CD 95 8D     	call Extrae_address
 763  8C33 22 B9 89     	ld (Puntero_objeto),hl
 764  8C36
 765  8C36 21 F7 89     	ld hl,Frames_explosion
 766  8C39 35           	dec (hl)
 767  8C3A
 768  8C3A CD 98 8C     	call Guarda_foto_entidad_a_borrar
 769  8C3D 18 29        	jr 3F
 770  8C3F
 771  8C3F AF           2 xor a
 772  8C40 32 E4 89     	ld (Obj_dibujado),a
 773  8C43 32 E3 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 774  8C46              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 775  8C46              ; 														; _de la entidad.
 776  8C46 CD B2 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 777  8C49              ;														; Obj_dibujado="0".
 778  8C49              ; Movemos Entidades malignas.
 779  8C49
 780  8C49              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 781  8C49              ;	and a 												; _a movernos. (Limitador_de_entidades).
 782  8C49              ;	ret z
 783  8C49
 784  8C49 CD 2A 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 785  8C4C
 786  8C4C 3A E3 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 787  8C4F CB 67        	bit 4,a
 788  8C51 C8           	ret z
 789  8C52
 790  8C52              ; Ha habido desplazamiento de la entidad maligna.
 791  8C52              ; Ha llegado a zona de AMADEUS ???
 792  8C52
 793  8C52 3A BC 89     	ld a,(Coordenada_y)
 794  8C55 FE 14        	cp $14
 795  8C57 D4 AB 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 796  8C5A              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 797  8C5A              ; ---------
 798  8C5A
 799  8C5A 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 800  8C5C 32 E4 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 801  8C5F CD B2 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 802  8C62 CD C9 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 803  8C65 CD 98 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 804  8C68 C9           3 ret													; _de la misma.
 805  8C69
 806  8C69              ; --------------------------------------------------------------------------------------------------------------
 807  8C69              ;
 808  8C69              ;	29/1/23
 809  8C69
 810  8C69              Mov_Amadeus
 811  8C69
 812  8C69 AF           	xor a
 813  8C6A 32 E4 89     	ld (Obj_dibujado),a
 814  8C6D CD B2 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 815  8C70              ;														; Obj_dibujado="0".
 816  8C70              ; Movemos Amadeus.
 817  8C70
 818  8C70 CD 82 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 819  8C73 3A E3 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 820  8C76 CB 67        	bit 4,a
 821  8C78 C8           	ret z
 822  8C79
 823  8C79              ; ---------
 824  8C79
 825  8C79 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 826  8C7B 32 E4 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 827  8C7E CD B2 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 828  8C81 CD C9 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 829  8C84 CD 98 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 830  8C87 C9           	ret													; _de la nave.
 831  8C88
 832  8C88              ; -----------------------------------------------------------------------------------
 833  8C88
 834  8C88 CD 9B 8D     Inicia_entidad	call Inicia_Puntero_objeto
 835  8C8B CD DE 99     	call Recompone_posicion_inicio
 836  8C8E CD 04 94     	call Draw
 837  8C91 CD A0 7F     	call Guarda_foto_registros
 838  8C94 CD E3 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 839  8C97 C9           	ret
 840  8C98
 841  8C98              ; --------------------------------------------------------------------------------------------------------------
 842  8C98              ;
 843  8C98              ;	31/01/23
 844  8C98              ;
 845  8C98              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 846  8C98
 847  8C98              Guarda_foto_entidad_a_borrar
 848  8C98
 849  8C98 CD E8 96     	call Prepara_draw
 850  8C9B CD 18 96     	call calcula_CColumnass
 851  8C9E CD 4F 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 852  8CA1 CD AE 96     	call Define_rutina_de_impresion
 853  8CA4 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 854  8CA7 C9           	ret
 855  8CA8
 856  8CA8              ; --------------------------------------------------------------------------------------------------------------
 857  8CA8              ;
 858  8CA8              ;	31/01/23
 859  8CA8              ;
 860  8CA8              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 861  8CA8              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 862  8CA8
 863  8CA8              Guarda_foto_entidad_a_pintar
 864  8CA8
 865  8CA8 CD D5 8C     	call Repone_pintar
 866  8CAB CD 04 94     	call Draw
 867  8CAE CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 868  8CB1 C9           	ret
 869  8CB2
 870  8CB2              ; --------------------------------------------------------------------------------------------------------------
 871  8CB2              ;
 872  8CB2              ;
 873  8CB2
 874  8CB2 21 B5 89     Prepara_var_pintado_borrado	ld hl,Filas
 875  8CB5 3A E4 89     	ld a,(Obj_dibujado)
 876  8CB8 A7           	and a
 877  8CB9 28 05        	jr z,1F
 878  8CBB 11 D9 89     	ld de,Variables_de_pintado
 879  8CBE 18 03        	jr 2F
 880  8CC0 11 CF 89     1 ld de,Variables_de_borrado
 881  8CC3 01 08 00     2 ld bc,8
 882  8CC6 ED B0        	ldir
 883  8CC8 C9           	ret
 884  8CC9
 885  8CC9              ; --------------------------------------------------------------------------------------------------------------
 886  8CC9
 887  8CC9 21 CF 89     Repone_borrar ld hl,Variables_de_borrado
 888  8CCC 11 B5 89     	ld de,Filas
 889  8CCF 01 08 00     	ld bc,8
 890  8CD2 ED B0        	ldir
 891  8CD4 C9           	ret
 892  8CD5
 893  8CD5 21 D9 89     Repone_pintar ld hl,Variables_de_pintado
 894  8CD8 11 B5 89     	ld de,Filas
 895  8CDB 01 08 00     	ld bc,8
 896  8CDE ED B0        	ldir
 897  8CE0 C9           	ret
 898  8CE1
 899  8CE1              ; *************************************************************************************************************************************************************
 900  8CE1              ;
 901  8CE1              ; 8/1/23
 902  8CE1              ;
 903  8CE1              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 904  8CE1              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 905  8CE1              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 906  8CE1
 907  8CE1              ; Destruye HL y DE !!!!!
 908  8CE1
 909  8CE1              Inicia_punteros_de_cajas
 910  8CE1
 911  8CE1 21 8C 85     	ld hl,Indice_de_cajas
 912  8CE4 CD 95 8D         call Extrae_address
 913  8CE7 22 FB 89         ld (Puntero_store_caja),hl
 914  8CEA 21 8E 85     	ld hl,Indice_de_cajas+2
 915  8CED 22 FF 89     	ld (Indice_restore_caja),hl
 916  8CF0 CD 95 8D     	call Extrae_address
 917  8CF3 22 FD 89     	ld (Puntero_restore_caja),hl
 918  8CF6 C9               ret
 919  8CF7
 920  8CF7              ; ---------------------------------------------------------------
 921  8CF7              ;
 922  8CF7              ;	9/8/23
 923  8CF7              ;
 924  8CF7              ;	Inicialización y gestión de álbumes de fotos y cajas.
 925  8CF7
 926  8CF7              Inicia_punteros_de_albumes_y_malotes
 927  8CF7
 928  8CF7 21 EC 84     	ld hl,Indice_album_de_fotos
 929  8CFA 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
 930  8CFD CD 95 8D     	call Extrae_address
 931  8D00 22 0D 8A     	ld (Stack_snapshot),hl
 932  8D03
 933  8D03 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 934  8D06 22 23 8A     	ld (Puntero_indice_album_de_fotos_disparos),hl
 935  8D09 CD 95 8D     	call Extrae_address
 936  8D0C 22 0F 8A     	ld (Stack_snapshot_disparos),hl
 937  8D0F
 938  8D0F 21 FC 84     	ld hl,Indice_End_Snapshot
 939  8D12 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
 940  8D15 CD 95 8D     	call Extrae_address
 941  8D18 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
 942  8D1B
 943  8D1B 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 944  8D1E 22 27 8A     	ld (Puntero_indice_End_Snapshot_disparos),hl
 945  8D21 CD 95 8D     	call Extrae_address
 946  8D24 22 2B 8A     	ld (Puntero_de_End_Snapshot_disparos),hl
 947  8D27
 948  8D27 C9           	ret
 949  8D28
 950  8D28              ;	12/8/23
 951  8D28
 952  8D28              Avanza_puntero_de_album_de_fotos_y_malotes
 953  8D28
 954  8D28              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 955  8D28
 956  8D28              ; Estamos en el último álbum del índice???.
 957  8D28
 958  8D28 2A 21 8A     	ld hl,(Puntero_indice_album_de_fotos)
 959  8D2B 01 F2 84     	ld bc,Indice_album_de_fotos+6
 960  8D2E A7           	and a
 961  8D2F ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 962  8D31 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 963  8D33
 964  8D33 21 F8 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 965  8D36 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 966  8D38
 967  8D38 76           	halt
 968  8D39 C9           	ret
 969  8D3A
 970  8D3A 2A 21 8A     1 ld hl,(Puntero_indice_album_de_fotos)
 971  8D3D 23           	inc hl
 972  8D3E 23           	inc hl
 973  8D3F 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
 974  8D42 CD 95 8D     	call Extrae_address
 975  8D45 22 0D 8A     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
 976  8D48
 977  8D48 2A 25 8A     	ld hl,(Puntero_indice_End_Snapshot)
 978  8D4B 23           	inc hl
 979  8D4C 23           	inc hl
 980  8D4D 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
 981  8D50 CD 95 8D     	call Extrae_address
 982  8D53 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
 983  8D56
 984  8D56 C9           	ret
 985  8D57
 986  8D57              ; *************************************************************************************************************************************************************
 987  8D57              ;
 988  8D57              ; 8/1/23
 989  8D57              ;
 990  8D57              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 991  8D57
 992  8D57 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 993  8D5A 22 2E 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 994  8D5D C9           	ret
 995  8D5E 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 996  8D61 22 30 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 997  8D64 C9           	ret
 998  8D65
 999  8D65              ; -------------------------------------------------------------------------------------------------------------
1000  8D65              ;
1001  8D65              ; 3/8/23
1002  8D65              ;
1003  8D65
1004  8D65              Calcula_numero_de_malotes
1005  8D65
1006  8D65 21 00 70     	ld hl,Album_de_fotos
1007  8D68 EB           	ex de,hl
1008  8D69 2A 11 8A     	ld hl,(End_Snapshot)
1009  8D6C
1010  8D6C 06 00        	ld b,0
1011  8D6E 7D           	ld a,l
1012  8D6F 93           	sub e
1013  8D70 28 07        	jr z,1F
1014  8D72
1015  8D72              ; Nº de malotes no es "0".
1016  8D72
1017  8D72 D6 06        2 sub 6
1018  8D74 04           	inc b
1019  8D75 A7           	and a
1020  8D76 20 FA        	jr nz,2B
1021  8D78 78           	ld a,b
1022  8D79
1023  8D79 32 04 8A     1 ld (Numero_de_malotes),a
1024  8D7C C9           	ret
1025  8D7D
1026  8D7D              ; -------------------------------------------------------------------------------------------------------------
1027  8D7D              ;
1028  8D7D              ; 28/2/23
1029  8D7D              ;
1030  8D7D
1031  8D7D              Calcula_numero_de_disparotes
1032  8D7D
1033  8D7D 21 0D 72     	ld hl,Album_de_fotos_disparos
1034  8D80 EB           	ex de,hl
1035  8D81 2A 2B 8A     	ld hl,(Puntero_de_End_Snapshot_disparos)
1036  8D84
1037  8D84 06 00        	ld b,0
1038  8D86 7D           	ld a,l
1039  8D87 93           	sub e
1040  8D88 28 07        	jr z,1F
1041  8D8A
1042  8D8A              ; Nº de malotes no es "0".
1043  8D8A
1044  8D8A D6 06        2 sub 6
1045  8D8C 04           	inc b
1046  8D8D A7           	and a
1047  8D8E 20 FA        	jr nz,2B
1048  8D90 78           	ld a,b
1049  8D91
1050  8D91 32 2D 8A     1 ld (Numero_de_disparotes),a
1051  8D94 C9           	ret
1052  8D95
1053  8D95              ; *************************************************************************************************************************************************************
1054  8D95              ;
1055  8D95              ; 20/10/22
1056  8D95              ;
1057  8D95              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1058  8D95              ;
1059  8D95              ; Destruye el puntero y DE !!!!!
1060  8D95
1061  8D95 5E           Extrae_address ld e,(hl)
1062  8D96 23           	inc hl
1063  8D97 56           	ld d,(hl)
1064  8D98 2B           	dec hl
1065  8D99 EB           	ex de,hl
1066  8D9A C9           	ret
1067  8D9B
1068  8D9B              ; *************************************************************************************************************************************************************
1069  8D9B              ;
1070  8D9B              ;	7/2/23
1071  8D9B              ;
1072  8D9B              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1073  8D9B              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1074  8D9B              ;
1075  8D9B              ;   Destruye HL y BC !!!!!,
1076  8D9B              ;
1077  8D9B              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1078  8D9B              ;					"0" ..... Izquierda.
1079  8D9B
1080  8D9B              Inicia_Puntero_objeto
1081  8D9B
1082  8D9B 3A C9 89     	ld a,(Cuad_objeto)
1083  8D9E E6 01        	and 1
1084  8DA0 F5           	push af
1085  8DA1 CC BF 8D     	call z,Inicia_puntero_objeto_izq
1086  8DA4 F1           	pop af
1087  8DA5 28 2B        	jr z,1F
1088  8DA7 CD AC 8D     	call Inicia_puntero_objeto_der
1089  8DAA 18 26        	jr 1F
1090  8DAC
1091  8DAC              ; Arrancamos desde la parte izquierda de la pantalla.
1092  8DAC              ; Iniciamos (Indice_Sprite_der).
1093  8DAC
1094  8DAC 2A BF 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1095  8DAF 22 C3 89     	ld (Puntero_DESPLZ_der),hl
1096  8DB2 CD 95 8D     	call Extrae_address
1097  8DB5 22 B9 89     	ld (Puntero_objeto),hl
1098  8DB8
1099  8DB8 2A C1 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1100  8DBB 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
1101  8DBE C9           	ret
1102  8DBF
1103  8DBF              ; Arrancamos desde la parte derecha de la pantalla.
1104  8DBF              ; Iniciamos (Indice_Sprite_izq).
1105  8DBF
1106  8DBF 2A C1 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1107  8DC2 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
1108  8DC5 CD 95 8D     	call Extrae_address
1109  8DC8 22 B9 89     	ld (Puntero_objeto),hl
1110  8DCB
1111  8DCB 2A BF 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1112  8DCE 22 C3 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1113  8DD1 C9           	ret
1114  8DD2
1115  8DD2              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1116  8DD2
1117  8DD2 21 40 83     1 ld hl,Amadeus
1118  8DD5 ED 4B B9 89  	ld bc,(Puntero_objeto)
1119  8DD9 B7 ED 42     	sub hl,bc
1120  8DDC C0           	ret nz
1121  8DDD 21 E3 89     	ld hl,Ctrl_0
1122  8DE0 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1123  8DE2 C9           	ret 												; _de nuestra nave en los extremos.
1124  8DE3
1125  8DE3              ; *************************************************************************************************************************************************************
1126  8DE3              ;
1127  8DE3              ;	14/5/23
1128  8DE3              ;
1129  8DE3              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1130  8DE3              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1131  8DE3
1132  8DE3              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1133  8DE3              ;	_de la 2ª y 3ª entidad respectivamente.
1134  8DE3
1135  8DE3              Store_Restore_cajas
1136  8DE3
1137  8DE3 E5           	push hl
1138  8DE4 D5           	push de
1139  8DE5 C5            	push bc
1140  8DE6
1141  8DE6              ;	STORE !!!!!
1142  8DE6              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1143  8DE6
1144  8DE6 21 B5 89     	ld hl,Filas
1145  8DE9 ED 5B FB 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1146  8DED 01 43 00     	ld bc,67
1147  8DF0 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1148  8DF2
1149  8DF2              ; 	Entidad_sospechosa. 20/4/23
1150  8DF2
1151  8DF2 3A CE 89     	ld a,(Impacto)
1152  8DF5 A7           	and a
1153  8DF6 28 0C        	jr z,1F
1154  8DF8
1155  8DF8 2A FB 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1156  8DFB 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1157  8DFE A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1158  8DFF ED 4A        	adc hl,bc 											; _ "0" más adelante.
1159  8E01 22 33 8A     	ld (Entidad_sospechosa_de_colision),hl
1160  8E04
1161  8E04              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1162  8E04
1163  8E04 2A FD 89     1 ld hl,(Puntero_restore_caja)
1164  8E07 7E           	ld a,(hl)
1165  8E08 A7           	and a
1166  8E09 F5           	push af
1167  8E0A 28 08        	jr z,2F
1168  8E0C
1169  8E0C 11 B5 89     	ld de,Filas
1170  8E0F 01 43 00     	ld bc,67
1171  8E12 ED B0        	ldir
1172  8E14
1173  8E14 CD 30 8E     2 call Incrementa_punteros_de_cajas
1174  8E17 F1           	pop af
1175  8E18 28 EA        	jr z,1B
1176  8E1A
1177  8E1A C1           	pop bc
1178  8E1B D1           	pop de
1179  8E1C E1           	pop hl
1180  8E1D
1181  8E1D C9           	ret
1182  8E1E
1183  8E1E              ; **************************************************************************************************
1184  8E1E              ;
1185  8E1E              ;	12/05/23
1186  8E1E              ;
1187  8E1E              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1188  8E1E
1189  8E1E E5           Restore_entidad push hl
1190  8E1F D5           	push de
1191  8E20 C5            	push bc
1192  8E21
1193  8E21 2A FB 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1194  8E24 11 B5 89     	ld de,Filas
1195  8E27 01 43 00     	ld bc,67
1196  8E2A ED B0        	ldir
1197  8E2C
1198  8E2C C1           	pop bc
1199  8E2D D1           	pop de
1200  8E2E E1           	pop hl
1201  8E2F C9           	ret
1202  8E30
1203  8E30
1204  8E30              ; **************************************************************************************************
1205  8E30              ;
1206  8E30              ;	08/05/23
1207  8E30              ;
1208  8E30              ;	Incrementamos los dos punteros de entidades. (+1).
1209  8E30
1210  8E30 2A FD 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1211  8E33 22 FB 89     	ld (Puntero_store_caja),hl
1212  8E36 2A FF 89     	ld hl,(Indice_restore_caja)
1213  8E39 23           	inc hl
1214  8E3A 23           	inc hl
1215  8E3B 22 FF 89     	ld (Indice_restore_caja),hl
1216  8E3E CD 95 8D         call Extrae_address
1217  8E41 22 FD 89         ld (Puntero_restore_caja),hl
1218  8E44 C9               ret
1219  8E45
1220  8E45              ; **************************************************************************************************
1221  8E45              ;
1222  8E45              ;	25/01/23
1223  8E45              ;
1224  8E45              ;	Restore_Amadeus
1225  8E45              ;
1226  8E45              ;	Cargamos en DRAW los parámetros de Amadeus.
1227  8E45              ;
1228  8E45
1229  8E45 E5           Restore_Amadeus	push hl
1230  8E46 D5           	push de
1231  8E47 C5            	push bc
1232  8E48 21 A4 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1233  8E4B 11 B5 89     	ld de,Filas
1234  8E4E 01 43 00     	ld bc,67
1235  8E51 ED B0        	ldir
1236  8E53 C1           	pop bc
1237  8E54 D1           	pop de
1238  8E55 E1           	pop hl
1239  8E56 C9           	ret
1240  8E57
1241  8E57              ; *************************************************************************************************************************************************************
1242  8E57              ;
1243  8E57              ;	29/04/23
1244  8E57              ;
1245  8E57              ;	Store_Amadeus
1246  8E57              ;
1247  8E57              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1248  8E57              ;
1249  8E57              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1250  8E57              ;
1251  8E57              ;	DESTRUYE: HL y BC y DE.
1252  8E57
1253  8E57 21 B5 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1254  8E5A 01 43 00     	ld bc,67
1255  8E5D ED B0        	ldir
1256  8E5F C9           	ret
1257  8E60
1258  8E60              ; -----------------------------------------------------------
1259  8E60              ;
1260  8E60              ;	27/04/23
1261  8E60              ;
1262  8E60              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1263  8E60              ;
1264  8E60              ;	Destruye: HL,BC,DE,A
1265  8E60
1266  8E60 21 B5 89     Borra_datos_entidad ld hl,Filas
1267  8E63 01 42 00     	ld bc,66
1268  8E66 AF           	xor a
1269  8E67 77           	ld (hl),a
1270  8E68 11 B6 89     	ld de,Filas+1
1271  8E6B ED B0        	ldir
1272  8E6D C9           	ret
1273  8E6E
1274  8E6E              ; -----------------------------------------------------------
1275  8E6E
1276  8E6E              ; Teclado.
1277  8E6E
1278  8E6E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1279  8E70 DB FE        	in a,($fe)
1280  8E72 E6 01        	and $01
1281  8E74 28 02        	jr z,1f
1282  8E76 18 F6        	jr Pulsa_ENTER
1283  8E78 C9           1 ret
1284  8E79
1285  8E79              ; **************************************************************************************************
1286  8E79              ;
1287  8E79              ; Temporización.
1288  8E79
1289  8E79              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1290  8E79              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1291  8E79              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1292  8E79              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1293  8E79
1294  8E79              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1295  8E79              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1296  8E79              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1297  8E79
1298  8E79              ; A partir de $4f61 no hace falta DELAY.
1299  8E79
1300  8E79              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1301  8E79
1302  8E79 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1303  8E7C 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1304  8E7D 78           	LD A,B
1305  8E7E A7           	AND A
1306  8E7F 20 FB        	JR NZ,wait
1307  8E81 C9           	RET
1308  8E82
1309  8E82              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1310  8E82              ;
1311  8E82              ;	5/3/23
1312  8E82              ;
1313  8E82              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1314  8E82
1315  8E82              Movimiento_Amadeus
1316  8E82
1317  8E82              ; Disparo.
1318  8E82
1319  8E82 3A 44 8A     	ld a,(Disparo_Amadeus)
1320  8E85 A7           	and a
1321  8E86 20 02        	jr nz,1F
1322  8E88 18 15        	jr 2F
1323  8E8A
1324  8E8A 3E F7        1 ld a,$f7													; "5" para disparar.
1325  8E8C DB FE        	in a,($fe)
1326  8E8E E6 10        	and $10
1327  8E90
1328  8E90 F5           	push af
1329  8E91 CC 0E 8F     	call z,Genera_disparo
1330  8E94 F1           	pop af
1331  8E95 20 08        	jr nz,2F
1332  8E97
1333  8E97 3A 44 8A     	ld a,(Disparo_Amadeus)
1334  8E9A EE 01        	xor 1
1335  8E9C 32 44 8A     	ld (Disparo_Amadeus),a
1336  8E9F
1337  8E9F 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1338  8EA1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1339  8EA3 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1340  8EA5 CC 98 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1341  8EA8 3E F7        	ld a,$f7
1342  8EAA DB FE        	in a,($fe)
1343  8EAC E6 01        	and $01
1344  8EAE C8           	ret z
1345  8EAF
1346  8EAF 3E F7        	ld a,$f7
1347  8EB1 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1348  8EB3 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1349  8EB5 CC 7A 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1350  8EB8 C9           	ret
1351  8EB9
1352  8EB9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1353  8EB9              ;
1354  8EB9              ;	Rutina provisional para que los malotes cagen balas.
1355  8EB9
1356  8EB9              Detecta_disparo_entidad
1357  8EB9
1358  8EB9 3A 47 8A     	ld a,(Disparo_entidad)
1359  8EBC A7           	and a
1360  8EBD C8           	ret z
1361  8EBE
1362  8EBE              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1363  8EBE
1364  8EBE              ;	ld a,$7f				; Detecta SPACE.
1365  8EBE              ;	in a,($fe)
1366  8EBE              ;	and 1
1367  8EBE              ;	ret nz
1368  8EBE
1369  8EBE              ;	call Genera_disparo
1370  8EBE C9           	ret
1371  8EBF
1372  8EBF              ; ----------------------------------------------------------------------
1373  8EBF              ;
1374  8EBF              ;	11/8/23
1375  8EBF
1376  8EBF              Frame
1377  8EBF
1378  8EBF              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1379  8EBF              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1380  8EBF
1381  8EBF              ; PINTAMOS.
1382  8EBF
1383  8EBF F5           	push af
1384  8EC0 C5           	push bc
1385  8EC1 D5           	push de
1386  8EC2 E5           	push hl
1387  8EC3
1388  8EC3 3E 02            ld a,2
1389  8EC5 D3 FE            out ($fe),a											; Rojo.
1390  8EC7 CD 12 97     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1391  8ECA CD 51 97     	call Extrae_foto_disparos
1392  8ECD 3E 01            ld a,1
1393  8ECF D3 FE            out ($fe),a											; Azul.
1394  8ED1
1395  8ED1              ; 	Gestiona los álbumes de fotos.
1396  8ED1
1397  8ED1 CD 5C 91     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1398  8ED4 CD 19 74     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1399  8ED7
1400  8ED7              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1401  8ED7
1402  8ED7              ;	ld a,(Contador_de_frames)
1403  8ED7              ;	cp $e6	; 1er FRAME, (sin mover AMADEUS), donde nos pasamos del FRAME RATE.!!!!!
1404  8ED7              ;	jr z,$
1405  8ED7
1406  8ED7 3A F8 89     	ld a,(Ctrl_1)
1407  8EDA CB 6F        	bit 5,a
1408  8EDC 20 1E        	jr nz,1F
1409  8EDE
1410  8EDE              ; No hemos terminado de guardar el último FRAME.
1411  8EDE
1412  8EDE 2A 21 8A     	ld hl,(Puntero_indice_album_de_fotos)
1413  8EE1 2B           	dec hl
1414  8EE2 2B           	dec hl
1415  8EE3 22 21 8A     	ld (Puntero_indice_album_de_fotos),hl
1416  8EE6
1417  8EE6 2A 25 8A     	ld hl,(Puntero_indice_End_Snapshot)
1418  8EE9 2B           	dec hl
1419  8EEA 2B           	dec hl
1420  8EEB 22 25 8A     	ld (Puntero_indice_End_Snapshot),hl
1421  8EEE CD 95 8D     	call Extrae_address
1422  8EF1 22 29 8A     	ld (Puntero_de_End_Snapshot),hl
1423  8EF4 CD 95 8D     	call Extrae_address
1424  8EF7 22 0D 8A     	ld (Stack_snapshot),hl
1425  8EFA
1426  8EFA 18 09        	jr 2F
1427  8EFC
1428  8EFC              ; FRAME completo.
1429  8EFC
1430  8EFC 2A 21 8A     1 ld hl,(Puntero_indice_album_de_fotos)
1431  8EFF CD 95 8D     	call Extrae_address
1432  8F02 22 0D 8A     	ld (Stack_snapshot),hl
1433  8F05
1434  8F05              ;	En este punto:
1435  8F05
1436  8F05              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1437  8F05              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1438  8F05
1439  8F05              ; RELOJES.
1440  8F05
1441  8F05 21 40 8A     2 ld hl,Contador_de_frames
1442  8F08 34           	inc (hl)											; 0 - 255
1443  8F09
1444  8F09 E1           	pop hl
1445  8F0A D1           	pop de
1446  8F0B C1           	pop bc
1447  8F0C F1           	pop af
1448  8F0D
1449  8F0D C9           	ret
1450  8F0E
1451  8F0E              ; ---------------------------------------------------------------
1452  8F0E
1453  8F0E              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8F0E              ; ******************************************************************************************************************************************************************************************
   2+ 8F0E              ;
   3+ 8F0E              ;   21/07/23
   4+ 8F0E              ;
   5+ 8F0E              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8F0E              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8F0E              ;
   8+ 8F0E              ;
   9+ 8F0E              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8F0E              ;
  11+ 8F0E              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8F0E              ;               _ hacen las entidades hacia abajo.
  13+ 8F0E              ;
  14+ 8F0E              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8F0E              ;
  16+ 8F0E              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8F0E              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8F0E              ;
  19+ 8F0E              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8F0E              ;           _ la bala.
  21+ 8F0E              ;
  22+ 8F0E              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8F0E              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8F0E              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8F0E              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8F0E              ;           _ en el momento de generarse la bala)).
  27+ 8F0E
  28+ 8F0E              Genera_disparo
  29+ 8F0E
  30+ 8F0E              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8F0E              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8F0E              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8F0E              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8F0E              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8F0E              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8F0E              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8F0E
  38+ 8F0E              ; Exclusiones:
  39+ 8F0E
  40+ 8F0E 3A CD 89         ld a,(Vel_down)
  41+ 8F11 47               ld b,a
  42+ 8F12 3A 3F 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8F15 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8F16 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8F17 3A F2 89         ld a,(Columnas)
  46+ 8F1A 47               ld b,a
  47+ 8F1B 3A B6 89         ld a,(Columns)
  48+ 8F1E B8               cp b
  49+ 8F1F C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8F20
  51+ 8F20              ; ----- ----- -----
  52+ 8F20
  53+ 8F20 3A E3 89         ld a,(Ctrl_0)
  54+ 8F23 CB 77            bit 6,a
  55+ 8F25 20 06            jr nz,14F
  56+ 8F27
  57+ 8F27 3A BC 89         ld a,(Coordenada_y)
  58+ 8F2A FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F2C D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F2D
  61+ 8F2D 21 00 80     14 ld hl,Indice_disparo
  62+ 8F30 3A BD 89         ld a,(CTRL_DESPLZ)
  63+ 8F33 4F               ld c,a
  64+ 8F34 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F36              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F36              ;                                            ""        ""       "f9", B="1"
  67+ 8F36              ;                                            ""        ""       "fb", B="2"
  68+ 8F36              ;                                            ""        ""       "fb", B="3"
  69+ 8F36 A7               and a
  70+ 8F37 28 10            jr z,1F
  71+ 8F39 E6 01            and 1
  72+ 8F3B C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F3C
  74+ 8F3C 79               ld a,c
  75+ 8F3D 16 F9            ld d,$f9
  76+ 8F3F 23           2 inc hl
  77+ 8F40 23               inc hl
  78+ 8F41 04               inc b
  79+ 8F42 BA               cp d
  80+ 8F43 28 04            jr z,1F
  81+ 8F45 14               inc d
  82+ 8F46 14               inc d
  83+ 8F47 18 F6            jr 2B
  84+ 8F49
  85+ 8F49 CD 95 8D     1 call Extrae_address
  86+ 8F4C E5               push hl
  87+ 8F4D FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F4F DD 21 93 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F53
  90+ 8F53              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F53              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F53
  93+ 8F53 3A E3 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F56 CB 77            bit 6,a
  95+ 8F58 20 04            jr nz,19F
  96+ 8F5A
  97+ 8F5A AF               xor a
  98+ 8F5B 32 47 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F5E
 100+ 8F5E 3A C9 89     19 ld a,(Cuad_objeto)
 101+ 8F61 FE 02            cp 2
 102+ 8F63 38 66            jr c,3F
 103+ 8F65 28 64            jr z,3F
 104+ 8F67
 105+ 8F67              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F67
 107+ 8F67 E6 01            and 1
 108+ 8F69 28 30            jr z,4F
 109+ 8F6B
 110+ 8F6B              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F6B              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F6B              ;
 113+ 8F6B              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F6B              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F6B              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F6B
 117+ 8F6B 2A B7 89     	ld hl,(Posicion_actual)
 118+ 8F6E
 119+ 8F6E              ;   Amadeus o entidad ???.
 120+ 8F6E
 121+ 8F6E 3A E3 89         ld a,(Ctrl_0)
 122+ 8F71 CB 77            bit 6,a
 123+ 8F73 28 0A            jr z,8F
 124+ 8F75
 125+ 8F75              ; 	Dispara Amadeus.
 126+ 8F75
 127+ 8F75 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F77 CD 03 97         call PreviousScan
 129+ 8F7A CD 03 97         call PreviousScan
 130+ 8F7D
 131+ 8F7D              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F7D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F7D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F7D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F7D
 136+ 8F7D 18 11            jr 10F
 137+ 8F7F
 138+ 8F7F              ; 	Dispara Entidad.
 139+ 8F7F
 140+ 8F7F 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F82              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F82
 143+ 8F82              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F82              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F82
 146+ 8F82 C5               push bc
 147+ 8F83 06 10            ld b,16
 148+ 8F85 CD F4 96     9 call NextScan
 149+ 8F88 10 FB            djnz 9B
 150+ 8F8A C1               pop bc
 151+ 8F8B CD F5 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F8E 18 06            jr 17F
 153+ 8F90
 154+ 8F90              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F90              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F90              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F90              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F90
 159+ 8F90 CD F5 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F93 CD 6A 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F96              ;                                                      ; _al generar el disparo.
 162+ 8F96
 163+ 8F96              ; 	LLegados a este punto tendremos:
 164+ 8F96              ;
 165+ 8F96              ;       Puntero_objeto_disparo en IY.
 166+ 8F96              ;       Rutinas_de_impresion en IX.
 167+ 8F96              ;       Puntero_de_impresion en HL.
 168+ 8F96              ;       Impacto/Dirección en BC.
 169+ 8F96
 170+ 8F96 CD FD 8F     17 call Almacena_disparo
 171+ 8F99 18 52            jr 6F                                             ; RET.
 172+ 8F9B
 173+ 8F9B              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F9B              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F9B              ;
 176+ 8F9B              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F9B              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F9B              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F9B
 180+ 8F9B 2A B7 89     4 ld hl,(Posicion_actual)
 181+ 8F9E
 182+ 8F9E              ;   Amadeus o entidad ???.
 183+ 8F9E
 184+ 8F9E 3A E3 89         ld a,(Ctrl_0)
 185+ 8FA1 CB 77            bit 6,a
 186+ 8FA3 28 0A            jr z,11F
 187+ 8FA5
 188+ 8FA5              ; 	Dispara Amadeus.
 189+ 8FA5
 190+ 8FA5 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8FA7 CD 03 97         call PreviousScan
 192+ 8FAA CD 03 97         call PreviousScan
 193+ 8FAD
 194+ 8FAD              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8FAD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8FAD              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8FAD              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8FAD
 199+ 8FAD 18 11            jr 13F
 200+ 8FAF
 201+ 8FAF              ; 	Dispara Entidad.
 202+ 8FAF
 203+ 8FAF 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8FB2              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8FB2
 206+ 8FB2              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8FB2              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8FB2
 209+ 8FB2 C5               push bc
 210+ 8FB3 06 10            ld b,16
 211+ 8FB5 CD F4 96     12 call NextScan
 212+ 8FB8 10 FB            djnz 12B
 213+ 8FBA C1               pop bc
 214+ 8FBB
 215+ 8FBB CD EE 8F         call Ajusta_disparo_parte_derecha
 216+ 8FBE 18 06            jr 18F
 217+ 8FC0
 218+ 8FC0              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8FC0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8FC0              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8FC0              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8FC0
 223+ 8FC0 CD EE 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8FC3 CD 6A 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8FC6              ;                                                       ; _al generar el disparo.
 226+ 8FC6
 227+ 8FC6              ; LLegados a este punto tendremos:
 228+ 8FC6              ;
 229+ 8FC6              ;       Puntero_objeto_disparo en IY.
 230+ 8FC6              ;       Rutinas_de_impresion en IX.
 231+ 8FC6              ;       Puntero_de_impresion en HL.
 232+ 8FC6              ;       Impacto/Dirección en BC.
 233+ 8FC6
 234+ 8FC6 CD FD 8F     18 call Almacena_disparo
 235+ 8FC9 18 22            jr 6F                                               ; RET.
 236+ 8FCB
 237+ 8FCB              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FCB
 239+ 8FCB 28 11        3 jr z,5F
 240+ 8FCD
 241+ 8FCD              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FCD              ;
 243+ 8FCD              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FCD              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FCD              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FCD              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FCD
 248+ 8FCD              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FCD              ;	   ""        ""       "f9", B="1"
 250+ 8FCD              ;	   ""        ""       "fb", B="2"
 251+ 8FCD              ; 	   ""        ""       "fb", B="3"
 252+ 8FCD
 253+ 8FCD 2A B7 89     	ld hl,(Posicion_actual)
 254+ 8FD0 CD F4 96     	call NextScan
 255+ 8FD3
 256+ 8FD3              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FD3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FD3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FD3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FD3
 261+ 8FD3 CD F5 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FD6
 263+ 8FD6              ; 	No se produce impacto. B="$80"
 264+ 8FD6              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FD6
 266+ 8FD6 01 80 80         ld bc,$8080
 267+ 8FD9
 268+ 8FD9              ; 	LLegados a este punto tendremos:
 269+ 8FD9              ;
 270+ 8FD9              ;       Puntero_objeto_disparo en IY.
 271+ 8FD9              ;       Rutinas_de_impresion en IX.
 272+ 8FD9              ;       Puntero_de_impresion en HL.
 273+ 8FD9              ;       Impacto/Dirección en BC.
 274+ 8FD9
 275+ 8FD9 CD FD 8F         call Almacena_disparo
 276+ 8FDC 18 0F            jr 6F                                           ; RET.
 277+ 8FDE
 278+ 8FDE              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FDE              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FDE              ;
 281+ 8FDE              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FDE              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FDE              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FDE              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FDE
 286+ 8FDE 2A B7 89     5 ld hl,(Posicion_actual)
 287+ 8FE1 CD F4 96     	call NextScan
 288+ 8FE4
 289+ 8FE4              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FE4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FE4              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FE4              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FE4
 294+ 8FE4 CD EE 8F         call Ajusta_disparo_parte_derecha
 295+ 8FE7
 296+ 8FE7              ; 	No se produce impacto. B="$80"
 297+ 8FE7              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FE7
 299+ 8FE7 01 80 80     15 ld bc,$8080
 300+ 8FEA
 301+ 8FEA              ; 	LLegados a este punto tendremos:
 302+ 8FEA              ;
 303+ 8FEA              ;       Puntero_objeto_disparo en IY.
 304+ 8FEA              ;       Rutinas_de_impresion en IX.
 305+ 8FEA              ;       Puntero_de_impresion en HL.
 306+ 8FEA              ;       Impacto/Dirección en BC.
 307+ 8FEA
 308+ 8FEA CD FD 8F         call Almacena_disparo
 309+ 8FED
 310+ 8FED C9           6 ret
 311+ 8FEE
 312+ 8FEE              ; ----------------------------------------------------------------
 313+ 8FEE              ;
 314+ 8FEE              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FEE              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FEE              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FEE
 318+ 8FEE 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FEF FE 02            cp 2
 320+ 8FF1 38 01            jr c,1F
 321+ 8FF3 23               inc hl
 322+ 8FF4 C9           1 ret
 323+ 8FF5
 324+ 8FF5 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FF6 FE 01        	cp 1
 326+ 8FF8 20 01        	jr nz,1F
 327+ 8FFA 2B           	dec hl
 328+ 8FFB 2B           1 dec hl
 329+ 8FFC C9               ret
 330+ 8FFD
 331+ 8FFD              ; ----------------------------------------------------------------
 332+ 8FFD              ;
 333+ 8FFD              ;   25/02/23
 334+ 8FFD              ;
 335+ 8FFD              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FFD              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FFD              ;
 338+ 8FFD              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FFD              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FFD
 341+ 8FFD              Almacena_disparo
 342+ 8FFD
 343+ 8FFD E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FFE F1               pop af
 345+ 8FFF 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9000
 347+ 9000 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9001 E6 01            and 1
 349+ 9003 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9005              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9005              ; 	Dispara AMADEUS.
 352+ 9005
 353+ 9005              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9005              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9005              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9005              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9005
 358+ 9005 C5               push bc
 359+ 9006 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9009 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 900C A7               and a
 362+ 900D ED 42            sbc hl,bc
 363+ 900F CC 5E 8D         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9012 C1               pop bc
 365+ 9013 28 54            jr z,4F
 366+ 9015
 367+ 9015 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9018 23               inc hl
 369+ 9019 23               inc hl
 370+ 901A 22 30 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 901D              ;                                                   ; _ Disparo_(+1).
 372+ 901D 18 18            jr 2F
 373+ 901F
 374+ 901F              ; Dispara una entidad.
 375+ 901F
 376+ 901F C5           1 push bc
 377+ 9020 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9023 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9026 A7               and a
 380+ 9027 ED 42            sbc hl,bc
 381+ 9029 CC 57 8D         call z,Inicia_Puntero_Disparo_Entidades
 382+ 902C C1               pop bc
 383+ 902D 28 3A            jr z,4F
 384+ 902F
 385+ 902F 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9032 23               inc hl
 387+ 9033 23               inc hl
 388+ 9034 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9037              ;                                                   ; _ Disparo_(+1).
 390+ 9037 CD 95 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 903A              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 903A              ;
 393+ 903A              ;                                                     Puntero_objeto_disparo en IY.
 394+ 903A              ;                                                     Rutinas_de_impresion en IX.
 395+ 903A              ;                                                     Puntero_de_impresion en HL.
 396+ 903A              ;                                                     Impacto/Dirección en BC.
 397+ 903A
 398+ 903A 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 903B 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 903C 23               inc hl                                          ; _ al siguiente.
 401+ 903D A7               and a
 402+ 903E 20 C0            jr nz,3B
 403+ 9040
 404+ 9040 08               ex af,af
 405+ 9041 ED 73 09 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9045 F9               ld sp,hl
 407+ 9046
 408+ 9046 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9048 F5               push af                                         ; Puntero de impresión.
 410+ 9049 FD E5            push iy                                         ; Puntero objeto.
 411+ 904B C5               push bc                                         ; Control.
 412+ 904C
 413+ 904C ED 7B 09 8A      ld sp,(Stack)
 414+ 9050
 415+ 9050              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9050
 417+ 9050 21 F8 89     	ld hl,Ctrl_1
 418+ 9053 CB C6        	set 0,(hl)
 419+ 9055
 420+ 9055 DD E5        	push ix
 421+ 9057 E1               pop hl
 422+ 9058 F5               push af
 423+ 9059 DD E1            pop ix
 424+ 905B
 425+ 905B CD A0 7F     	call Guarda_foto_registros
 426+ 905E
 427+ 905E 21 F8 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9061 CB 86        	res 0,(hl)
 429+ 9063
 430+ 9063              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9063              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9063
 433+ 9063 CD 5E 8D         call Inicia_Puntero_Disparo_Amadeus
 434+ 9066 CD 57 8D         call Inicia_Puntero_Disparo_Entidades
 435+ 9069
 436+ 9069 C9           4 ret
 437+ 906A
 438+ 906A              ; ----------------------------------------------------------------
 439+ 906A              ;
 440+ 906A              ;   4/3/23
 441+ 906A              ;
 442+ 906A              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 906A              ;   _ al generarse el disparo.
 444+ 906A              ;
 445+ 906A              ;       "$80" ..... No se produce colisión.
 446+ 906A              ;       "$81" ..... Se produce colisión.
 447+ 906A              ;
 448+ 906A              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 906A              ;         _ que forman el disparo.
 450+ 906A
 451+ 906A
 452+ 906A              Comprueba_Colision
 453+ 906A
 454+ 906A              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 906A
 456+ 906A FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 906C E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 906D
 459+ 906D CD A3 90         call Modifica_H_Velocidad_disparo
 460+ 9070
 461+ 9070 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9071 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9073 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9075
 465+ 9075 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9077 CD 93 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 907A
 468+ 907A 7B               ld a,e
 469+ 907B E6 01            and 1
 470+ 907D 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 907F              ;                                                  ; _ para activar IMPACTO.
 472+ 907F E1               pop hl
 473+ 9080 E5               push hl
 474+ 9081 CD F4 96         call NextScan
 475+ 9084
 476+ 9084 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9085 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9087 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9089              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9089 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 908B CD 93 90         call Bucle_2
 482+ 908E
 483+ 908E 43           1 ld b,e
 484+ 908F E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9090 FD E1            pop iy
 486+ 9092 C9               ret
 487+ 9093
 488+ 9093              ; ---------- ----------
 489+ 9093
 490+ 9093 06 02        Bucle_2 ld b,2
 491+ 9095 FD 7E 00     2 ld a,(iy)
 492+ 9098 A6               and (hl)
 493+ 9099 28 02            jr z,1F
 494+ 909B 1E 81            ld e,$81
 495+ 909D 23           1 inc hl
 496+ 909E FD 23            inc iy
 497+ 90A0 10 F3            djnz 2B
 498+ 90A2 C9               ret
 499+ 90A3
 500+ 90A3              ; ---------- ----------
 501+ 90A3              ;
 502+ 90A3              ;   21/7/23
 503+ 90A3
 504+ 90A3              Modifica_H_Velocidad_disparo
 505+ 90A3
 506+ 90A3 3A 3F 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 90A6 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 90A8 D0               ret nc                                         ; _ incrementamos H.
 509+ 90A9 24               inc h
 510+ 90AA
 511+ 90AA C9               ret
 512+ 90AB
 513+ 90AB              ; -------------------------------------------------------------------------------------------------------------
 514+ 90AB              ;
 515+ 90AB              ;   11/04/23
 516+ 90AB              ;
 517+ 90AB              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 90AB              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 90AB              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 90AB              ;
 521+ 90AB              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 90AB
 523+ 90AB              Compara_coordenadas_X
 524+ 90AB
 525+ 90AB              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 90AB              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 90AB
 528+ 90AB              ; Preparamos registros:
 529+ 90AB
 530+ 90AB 21 BB 89         ld hl,Filas+6
 531+ 90AE 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 90AF 23               inc hl
 533+ 90B0 23               inc hl
 534+ 90B1 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 90B2 43               ld b,e
 536+ 90B3
 537+ 90B3 21 C9 89         ld hl,Filas+20
 538+ 90B6 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 90B7 21 3A 8A         ld hl,Coordenadas_X_Entidad
 540+ 90BA CD D6 92         call Guarda_coordenadas_X
 541+ 90BD
 542+ 90BD              ; Preparamos registros:
 543+ 90BD
 544+ 90BD 21 AA 85         ld hl,Amadeus_db+6
 545+ 90C0 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 90C1 23               inc hl
 547+ 90C2 23               inc hl
 548+ 90C3 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 90C4 7B               ld a,e
 550+ 90C5 08               ex af,af'
 551+ 90C6 21 B8 85         ld hl,Amadeus_db+20
 552+ 90C9 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 90CA 21 37 8A         ld hl,Coordenadas_X_Amadeus
 554+ 90CD CD D6 92         call Guarda_coordenadas_X
 555+ 90D0
 556+ 90D0              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 90D0              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 90D0
 559+ 90D0 04               inc b
 560+ 90D1 05               dec b
 561+ 90D2 28 04            jr z,1F
 562+ 90D4 06 03            ld b,3
 563+ 90D6 18 02            jr 2F
 564+ 90D8 06 02        1 ld b,2
 565+ 90DA 08           2 ex af,af'
 566+ 90DB 3C               inc a
 567+ 90DC 3D               dec a
 568+ 90DD 28 04            jr z,5F
 569+ 90DF 0E 03            ld c,3
 570+ 90E1 18 02            jr 6F
 571+ 90E3 0E 02        5 ld c,2
 572+ 90E5 79           6 ld a,c
 573+ 90E6 08               ex af,af'
 574+ 90E7 11 3A 8A         ld de,Coordenadas_X_Entidad
 575+ 90EA 1A           4 ld a,(de)
 576+ 90EB 21 37 8A         ld hl,Coordenadas_X_Amadeus
 577+ 90EE BE           3 cp (hl)
 578+ 90EF 28 0E            jr z,7F
 579+ 90F1 23               inc hl
 580+ 90F2 0D               dec c
 581+ 90F3 20 F9            jr nz,3B
 582+ 90F5 13               inc de
 583+ 90F6 08               ex af,af'
 584+ 90F7 4F               ld c,a
 585+ 90F8 08               ex af,af'
 586+ 90F9 10 EF            djnz 4B
 587+ 90FB
 588+ 90FB              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90FB
 590+ 90FB CD 12 93     8 call Limpia_Coordenadas_X
 591+ 90FE C9               ret
 592+ 90FF
 593+ 90FF 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9101 32 CE 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9104 21 32 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9107 CB D6            set 2,(hl)
 597+ 9109 18 F0            jr 8B
 598+ 910B
 599+ 910B              ; -----------------------------------------------------------------------
 600+ 910B              ;
 601+ 910B              ;   17/04/23
 602+ 910B              ;
 603+ 910B
 604+ 910B              Detecta_colision_nave_entidad
 605+ 910B
 606+ 910B              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 910B
 608+ 910B 2A B7 89         ld hl,(Posicion_actual)
 609+ 910E CD 4F 96         call Calcula_puntero_de_impresion
 610+ 9111
 611+ 9111              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9111              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9111
 614+ 9111 DD E5            push ix
 615+ 9113 E1               pop hl
 616+ 9114 E5               push hl
 617+ 9115
 618+ 9115              ; ----- ----- -----
 619+ 9115 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9117 06 0A            ld b,10
 621+ 9119 CD 49 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 911C 7B               ld a,e
 623+ 911D FE 05            cp 5
 624+ 911F 38 0E            jr c,3F
 625+ 9121
 626+ 9121              ; LLegados a este punto:
 627+ 9121              ;
 628+ 9121              ;   HAY COLISIÓN !!!!!.
 629+ 9121              ;
 630+ 9121              ;   .db (Impacto) de Amadeus a "1".
 631+ 9121              ;   SET el bit3 de (Impacto2).
 632+ 9121              ;
 633+ 9121              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9121
 635+ 9121 21 BD 85         ld hl,Amadeus_db+25
 636+ 9124 36 01            ld (hl),1
 637+ 9126 21 32 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 9129 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 912B CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 912D 18 18            jr 1F
 641+ 912F
 642+ 912F              ; -----
 643+ 912F
 644+ 912F E1           3 pop hl
 645+ 9130 CD F4 96         call NextScan
 646+ 9133 E5               push hl
 647+ 9134 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9135 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9137 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 9139 30 0C            jr nc,1F
 651+ 913B              ;                                                  ; _ 2º scanline si esto es así.
 652+ 913B 10 DC            djnz 2B
 653+ 913D
 654+ 913D              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 913D
 656+ 913D              ; LLegados a este punto:
 657+ 913D              ;
 658+ 913D              ;   NO HAY COLISIÓN !!!!!.
 659+ 913D              ;
 660+ 913D              ;   .db (Impacto) de Amadeus a "0".
 661+ 913D              ;   RES el bit2 de (Impacto2).
 662+ 913D              ;
 663+ 913D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 913D              ;   Lo colocamos a "0".
 665+ 913D
 666+ 913D 21 32 8A         ld hl,Impacto2
 667+ 9140 CB 96            res 2,(hl)
 668+ 9142 2A 33 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9145 36 00            ld (hl),0
 670+ 9147
 671+ 9147 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9148 C9               ret
 673+ 9149
 674+ 9149               ; ---------- ----------
 675+ 9149
 676+ 9149 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 914A 3A B6 89         ld a,(Columns)
 678+ 914D 47               ld b,a
 679+ 914E FD 7E 00     2 ld a,(iy)
 680+ 9151 BE               cp (hl)
 681+ 9152 28 01            jr z,1F
 682+ 9154
 683+ 9154 1C               inc e
 684+ 9155
 685+ 9155 23           1 inc hl
 686+ 9156 FD 23            inc iy
 687+ 9158 10 F4            djnz 2B
 688+ 915A C1               pop bc
 689+ 915B C9               ret
 690+ 915C
 691+ 915C              ; -------------------------------------------------------------------------------------------------------------
 692+ 915C              ;
 693+ 915C              ;   13/03/23
 694+ 915C              ;
 695+ 915C              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 915C              ;
 697+ 915C              ;   DESTRUYE: HL,BC,DE y A.
 698+ 915C
 699+ 915C 21 0D 72     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 915F 7E               ld a,(hl)
 701+ 9160 A7               and a
 702+ 9161 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9162
 704+ 9162 44               ld b,h
 705+ 9163 4D               ld c,l
 706+ 9164 2A 0F 8A         ld hl,(Stack_snapshot_disparos)
 707+ 9167 E5               push hl
 708+ 9168 A7               and a
 709+ 9169 ED 42            sbc hl,bc
 710+ 916B E5               push hl
 711+ 916C C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 916D
 713+ 916D E1               pop hl
 714+ 916E 54               ld d,h
 715+ 916F 5D               ld e,l
 716+ 9170 1B               dec de
 717+ 9171 ED B8            lddr                                                ; Limpiamos.
 718+ 9173
 719+ 9173 21 0D 72         ld hl,Album_de_fotos_disparos
 720+ 9176 22 0F 8A         ld (Stack_snapshot_disparos),hl
 721+ 9179
 722+ 9179 C9               ret
 723+ 917A
 724+ 917A              ; -------------------------------------------------------------------------------------------------------------
 725+ 917A              ;
 726+ 917A              ;   18/07/23
 727+ 917A              ;
 728+ 917A
 729+ 917A              Motor_de_disparos
 730+ 917A
 731+ 917A              ; Gestiona DISPAROS DE AMADEUS.
 732+ 917A
 733+ 917A 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 917D 2A 30 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9180
 736+ 9180 CD 95 8D     2 call Extrae_address
 737+ 9183 7E               ld a,(hl)
 738+ 9184 A7               and a
 739+ 9185 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9187
 741+ 9187              ; ----- ----- ----- ----- ----- -----
 742+ 9187
 743+ 9187 C5               push bc
 744+ 9188 CD 4C 92         call foto_disparo_a_borrar
 745+ 918B
 746+ 918B              ; Existe colisión con este disparo???
 747+ 918B
 748+ 918B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 918C 7E               ld a,(hl)
 750+ 918D 2B               dec hl
 751+ 918E E6 01            and 1
 752+ 9190 28 1D            jr z,9F
 753+ 9192
 754+ 9192              ;   En este punto:
 755+ 9192              ;
 756+ 9192              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9192              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9192              ;   _con la entidad).
 759+ 9192              ;
 760+ 9192              ;   Disparo_2A defw 0                                ; Control.
 761+ 9192              ;    defw 0                                          ; Puntero objeto.
 762+ 9192              ;    defw 0                                          ; Puntero de impresión.
 763+ 9192              ;    defw 0                                          ; Rutina de impresión.
 764+ 9192
 765+ 9192 E5               push hl
 766+ 9193
 767+ 9193 06 04            ld b,4
 768+ 9195 23           19 inc hl
 769+ 9196 10 FD            djnz 19B
 770+ 9198
 771+ 9198 CD 95 8D         call Extrae_address
 772+ 919B CD 76 9D         call Genera_coordenadas_disparo
 773+ 919E
 774+ 919E              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 919E
 776+ 919E 21 35 8A         ld hl,Coordenadas_disparo_certero
 777+ 91A1 72               ld (hl),d
 778+ 91A2 23               inc hl
 779+ 91A3 73               ld (hl),e
 780+ 91A4
 781+ 91A4              ; Elimino el disparo de la base de datos.
 782+ 91A4
 783+ 91A4 E1               pop hl
 784+ 91A5 CD CB 92         call Elimina_disparo_de_base_de_datos
 785+ 91A8 21 32 8A         ld hl,Impacto2
 786+ 91AB CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 91AD
 788+ 91AD 18 06            jr 11F
 789+ 91AF
 790+ 91AF CD 75 92     9 call Mueve_disparo
 791+ 91B2 CD 4C 92         call foto_disparo_a_borrar
 792+ 91B5
 793+ 91B5 C1           11 pop bc
 794+ 91B6 18 04            jr 7F
 795+ 91B8
 796+ 91B8              ; ----- ----- ----- ----- ----- -----
 797+ 91B8
 798+ 91B8 ED 42        1 sbc hl,bc
 799+ 91BA 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 91BC
 801+ 91BC 2A 30 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 91BF 23               inc hl
 803+ 91C0 23               inc hl
 804+ 91C1 22 30 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 91C4 18 BA            jr 2B
 806+ 91C6
 807+ 91C6 CD 5E 8D     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 91C9              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 91C9
 810+ 91C9              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 91C9
 812+ 91C9 01 8A 85         ld bc,Disparo_11
 813+ 91CC 2A 2E 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 91CF
 815+ 91CF CD 95 8D     5 call Extrae_address
 816+ 91D2 7E               ld a,(hl)
 817+ 91D3 A7               and a
 818+ 91D4 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 91D6
 820+ 91D6              ; ----- ----- ----- ----- ----- -----
 821+ 91D6
 822+ 91D6 C5               push bc
 823+ 91D7 CD 4C 92         call foto_disparo_a_borrar
 824+ 91DA
 825+ 91DA              ; Existe colisión con este disparo???
 826+ 91DA
 827+ 91DA 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 91DB 7E               ld a,(hl)
 829+ 91DC 2B               dec hl
 830+ 91DD E6 01            and 1
 831+ 91DF 28 4D            jr z,10F
 832+ 91E1
 833+ 91E1              ;! La colisión se produce con Amadeus???
 834+ 91E1              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91E1
 836+ 91E1 E5               push hl
 837+ 91E2
 838+ 91E2 06 04            ld b,4
 839+ 91E4 23           16 inc hl
 840+ 91E5 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 91E7
 842+ 91E7 CD 95 8D         call Extrae_address
 843+ 91EA CD 76 9D         call Genera_coordenadas_disparo
 844+ 91ED
 845+ 91ED 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 91EE FE 16            cp $16
 847+ 91F0 38 2A            jr c,15F
 848+ 91F2
 849+ 91F2
 850+ 91F2              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 91F2
 852+ 91F2 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91F3
 854+ 91F3              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91F3
 856+ 91F3
 857+ 91F3 2A 3D 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91F6
 859+ 91F6              ; Coordenada X de Amadeus en D.
 860+ 91F6
 861+ 91F6 7D               ld a,l
 862+ 91F7 E6 1F            and $1F
 863+ 91F9 57               ld d,a
 864+ 91FA
 865+ 91FA 21 AC 85         ld hl,Amadeus_db+8
 866+ 91FD 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91FE
 868+ 91FE 21 37 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9201 CD D6 92         call Guarda_coordenadas_X
 870+ 9204
 871+ 9204 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9205
 873+ 9205              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9205
 875+ 9205 06 02            ld b,2
 876+ 9207 C5           20 push bc
 877+ 9208
 878+ 9208 06 03            ld b,3
 879+ 920A 21 37 8A         ld hl,Coordenadas_X_Amadeus
 880+ 920D 7E           18 ld a,(hl)
 881+ 920E BA               cp d
 882+ 920F 20 04            jr nz,17F
 883+ 9211
 884+ 9211              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9211
 886+ 9211 C1               pop bc
 887+ 9212 E1               pop hl
 888+ 9213 18 0D            jr 14F
 889+ 9215
 890+ 9215 23           17 inc hl
 891+ 9216 10 F5            djnz 18B
 892+ 9218
 893+ 9218 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 9219
 895+ 9219 C1               pop bc
 896+ 921A 10 EB            djnz 20B
 897+ 921C
 898+ 921C
 899+ 921C              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 921C              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 921C
 902+ 921C E1           15 pop hl
 903+ 921D 23               inc hl
 904+ 921E 35               dec (hl)
 905+ 921F 2B               dec hl
 906+ 9220 18 0C            jr 10F
 907+ 9222
 908+ 9222              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9222              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9222
 911+ 9222 E5           14 push hl
 912+ 9223 CD CB 92         call Elimina_disparo_de_base_de_datos
 913+ 9226 21 32 8A         ld hl,Impacto2
 914+ 9229 CB CE            set 1,(hl)
 915+ 922B E1               pop hl
 916+ 922C 18 06            jr 12F
 917+ 922E
 918+ 922E              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 922E
 920+ 922E CD 75 92     10 call Mueve_disparo
 921+ 9231 CD 4C 92         call foto_disparo_a_borrar
 922+ 9234 C1           12 pop bc
 923+ 9235
 924+ 9235 18 04            jr 8F
 925+ 9237
 926+ 9237              ; ----- ----- ----- ----- ----- -----
 927+ 9237
 928+ 9237 ED 42        4 sbc hl,bc
 929+ 9239 28 0A            jr z,6F
 930+ 923B
 931+ 923B 2A 2E 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 923E 23               inc hl
 933+ 923F 23               inc hl
 934+ 9240 22 2E 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9243 18 8A            jr 5B
 936+ 9245
 937+ 9245 CD 57 8D     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9248 CD 12 93         call Limpia_Coordenadas_X
 939+ 924B C9               ret
 940+ 924C
 941+ 924C              ; ------------------------------------------------------------------
 942+ 924C
 943+ 924C              foto_disparo_a_borrar
 944+ 924C
 945+ 924C 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 924D A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 924E C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 924F
 949+ 924F E5               push hl
 950+ 9250 23               inc hl
 951+ 9251 23               inc hl
 952+ 9252 ED 73 09 8A      ld (Stack),sp
 953+ 9256 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9257 FD E1            pop iy
 955+ 9259 DD E1            pop ix
 956+ 925B E1               pop hl
 957+ 925C ED 7B 09 8A      ld sp,(Stack)
 958+ 9260 3A F8 89         ld a,(Ctrl_1)
 959+ 9263 CB C7            set 0,a
 960+ 9265 32 F8 89         ld (Ctrl_1),a
 961+ 9268 CD A0 7F         call Guarda_foto_registros
 962+ 926B 3A F8 89         ld a,(Ctrl_1)
 963+ 926E CB 87            res 0,a
 964+ 9270 32 F8 89         ld (Ctrl_1),a
 965+ 9273 E1               pop hl
 966+ 9274 C9               ret
 967+ 9275
 968+ 9275              ;---------------------------------------------------
 969+ 9275              ;
 970+ 9275              ;   18/07/23
 971+ 9275              ;
 972+ 9275
 973+ 9275              Mueve_disparo
 974+ 9275
 975+ 9275              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9275              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9275              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9275
 979+ 9275 E5               push hl
 980+ 9276
 981+ 9276 7E               ld a,(hl)
 982+ 9277
 983+ 9277 06 04            ld b,4
 984+ 9279 23           1 inc hl
 985+ 927A 10 FD            djnz 1B
 986+ 927C
 987+ 927C              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 927C
 989+ 927C CD 95 8D         call Extrae_address
 990+ 927F
 991+ 927F E6 01            and 1
 992+ 9281 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9283
 994+ 9283              ; Disparo hacia arriba, (Amadeus).
 995+ 9283
 996+ 9283              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9283              ; _ de la dificultad.
 998+ 9283
 999+ 9283 CD 03 97         call PreviousScan
1000+ 9286 CD 03 97         call PreviousScan
1001+ 9289 CD 03 97         call PreviousScan
1002+ 928C CD 03 97         call PreviousScan
1003+ 928F
1004+ 928F              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 928F
1006+ 928F 7C               ld a,h
1007+ 9290 FE 40            cp $40
1008+ 9292 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9294
1010+ 9294              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9294
1012+ 9294 EB               ex de,hl
1013+ 9295 06 04            ld b,4
1014+ 9297 2B           6 dec hl
1015+ 9298 10 FD            djnz 6B
1016+ 929A
1017+ 929A CD CB 92         call Elimina_disparo_de_base_de_datos
1018+ 929D E1               pop hl
1019+ 929E 18 10            jr 7F
1020+ 92A0
1021+ 92A0              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 92A0              ; HL contiene el puntero de impresión del disparo.
1023+ 92A0              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 92A0
1025+ 92A0 D5           3 push de
1026+ 92A1 C5               push bc
1027+ 92A2
1028+ 92A2 CD 6A 90         call Comprueba_Colision
1029+ 92A5
1030+ 92A5              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 92A5
1032+ 92A5 78               ld a,b
1033+ 92A6
1034+ 92A6 C1               pop bc
1035+ 92A7 D1               pop de
1036+ 92A8
1037+ 92A8 EB               ex de,hl
1038+ 92A9
1039+ 92A9 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 92AA 23               inc hl                                      ; _ movimiento.
1041+ 92AB 72               ld (hl),d
1042+ 92AC
1043+ 92AC E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 92AD
1045+ 92AD 23               inc hl                                      ; _ en curso.
1046+ 92AE 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 92AF 2B               dec hl
1048+ 92B0
1049+ 92B0 C9           7 ret
1050+ 92B1
1051+ 92B1              ; Disparo hacia abajo, (Entidad).
1052+ 92B1
1053+ 92B1 3A 3F 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 92B4 47               ld b,a
1055+ 92B5
1056+ 92B5 CD F4 96     4 call NextScan
1057+ 92B8 10 FB            djnz 4B
1058+ 92BA
1059+ 92BA              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 92BA
1061+ 92BA 7C               ld a,h
1062+ 92BB FE 58            cp $58
1063+ 92BD 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 92BF
1065+ 92BF EB               ex de,hl
1066+ 92C0 06 04            ld b,4
1067+ 92C2 2B           5 dec hl
1068+ 92C3 10 FD            djnz 5B
1069+ 92C5
1070+ 92C5 CD CB 92         call Elimina_disparo_de_base_de_datos
1071+ 92C8 E1               pop hl
1072+ 92C9 18 E5            jr 7B
1073+ 92CB
1074+ 92CB              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 92CB
1076+ 92CB 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 92CE AF               xor a
1078+ 92CF 77               ld (hl),a
1079+ 92D0 54               ld d,h
1080+ 92D1 5D               ld e,l
1081+ 92D2 13               inc de
1082+ 92D3 ED B0            ldir
1083+ 92D5 C9               ret
1084+ 92D6
1085+ 92D6              ; -----------------------------------------------------------------
1086+ 92D6              ;
1087+ 92D6              ;   19/7/23
1088+ 92D6              ;
1089+ 92D6              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 92D6              ;
1091+ 92D6              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 92D6              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 92D6              ;
1094+ 92D6              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 92D6              ;
1096+ 92D6              ;   INPUTS:
1097+ 92D6              ;
1098+ 92D6              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 92D6              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 92D6
1101+ 92D6              ;   MODIFICA: A, HL, BC y DE.
1102+ 92D6
1103+ 92D6              Guarda_coordenadas_X
1104+ 92D6
1105+ 92D6 7B               ld a,e
1106+ 92D7 A7               and a
1107+ 92D8 20 04            jr nz,1F
1108+ 92DA
1109+ 92DA 06 02            ld b,2
1110+ 92DC 18 02            jr 2F
1111+ 92DE
1112+ 92DE 06 03        1 ld b,3
1113+ 92E0 72           2 ld (hl),d
1114+ 92E1 23               inc hl
1115+ 92E2 14               inc d
1116+ 92E3 10 FB            djnz 2B
1117+ 92E5
1118+ 92E5 C9               ret
1119+ 92E6
1120+ 92E6              ; -----------------------------------------------------------------
1121+ 92E6              ;
1122+ 92E6              ;   12/04/23
1123+ 92E6              ;
1124+ 92E6
1125+ 92E6 3A 32 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 92E9 A7               and a
1127+ 92EA C8               ret z
1128+ 92EB
1129+ 92EB FE 04            cp 4
1130+ 92ED 20 09            jr nz,1F
1131+ 92EF
1132+ 92EF
1133+ 92EF              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 92EF
1135+ 92EF CD 0B 91         call Detecta_colision_nave_entidad
1136+ 92F2
1137+ 92F2 21 32 8A         ld hl,Impacto2
1138+ 92F5 CB 5E            bit 3,(hl)
1139+ 92F7 C0               ret nz                                               ; Existe colisión, RET.
1140+ 92F8
1141+ 92F8              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92F8              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92F8
1144+ 92F8 21 32 8A     1 ld hl,Impacto2
1145+ 92FB CB 4E            bit 1,(hl)
1146+ 92FD 28 07            jr z,2F
1147+ 92FF
1148+ 92FF 21 BD 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9302 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9304 18 0B            jr 3F
1151+ 9306
1152+ 9306 21 32 8A     2 ld hl,Impacto2
1153+ 9309 CB 46            bit 0,(hl)
1154+ 930B C8               ret z
1155+ 930C
1156+ 930C              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 930C
1158+ 930C 21 F8 89         ld hl,Ctrl_1
1159+ 930F CB D6            set 2,(hl)
1160+ 9311
1161+ 9311 C9           3 ret
1162+ 9312
1163+ 9312              ; -----------------------------------------------------------------
1164+ 9312              ;
1165+ 9312              ;   19/7/23
1166+ 9312              ;
1167+ 9312              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9312
1169+ 9312 AF           Limpia_Coordenadas_X xor a
1170+ 9313 06 06            ld b,6
1171+ 9315 21 37 8A         ld hl,Coordenadas_X_Amadeus
1172+ 9318 77           1 ld (hl),a
1173+ 9319 23               inc hl
1174+ 931A 10 FC            djnz 1B
1175+ 931C C9               ret
1176+ 931D
1177+ 931D              ; -----------------------------------------------------------------
1178+ 931D              ;
1179+ 931D              ;   25/04/23
1180+ 931D              ;
1181+ 931D
1182+ 931D              Determina_resultado_comparativa
1183+ 931D
1184+ 931D              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 931D              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 931D              ;
1187+ 931D              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 931D              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 931D              ;
1190+ 931D              ;   SBC HL,DE
1191+ 931D
1192+ 931D              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 931D              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 931D
1195+ 931D              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 931D              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 931D
1198+ 931D
1199+ 931D 3A C9 89         ld a,(Cuad_objeto)
1200+ 9320 FE 02            cp 2
1201+ 9322 28 26            jr z,2F
1202+ 9324 38 24            jr c,2F
1203+ 9326
1204+ 9326              ; Cuadrantes 3º y 4º
1205+ 9326
1206+ 9326 E6 01            and 1
1207+ 9328 28 10            jr z,4F
1208+ 932A
1209+ 932A              ; Cuadrante 3º
1210+ 932A
1211+ 932A 7C               ld a,h
1212+ 932B 06 00            ld b,0
1213+ 932D
1214+ 932D CD B8 93         call Compara_cositas_H3
1215+ 9330
1216+ 9330 04               inc b
1217+ 9331 05               dec b
1218+ 9332 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9333
1220+ 9333 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9334 06 00            ld b,0
1222+ 9336
1223+ 9336 CD CA 93         call Compara_cositas_L3
1224+ 9339 C9               ret
1225+ 933A
1226+ 933A              ; Cuadrante 4º
1227+ 933A
1228+ 933A 7C           4 ld a,h
1229+ 933B 06 00            ld b,0
1230+ 933D
1231+ 933D CD DC 93         call Compara_cositas_H4
1232+ 9340
1233+ 9340 04               inc b
1234+ 9341 05               dec b
1235+ 9342 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9343
1237+ 9343 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9344 06 00            ld b,0
1239+ 9346
1240+ 9346 CD F2 93         call Compara_cositas_L4
1241+ 9349 C9               ret
1242+ 934A
1243+ 934A              ; Cuadrantes 1º y 2º.
1244+ 934A
1245+ 934A 28 10        2 jr z,3F
1246+ 934C
1247+ 934C              ; 1er Cuadrante
1248+ 934C
1249+ 934C 7C               ld a,h
1250+ 934D 06 00            ld b,0
1251+ 934F
1252+ 934F CD 90 93         call Compara_cositas_H1
1253+ 9352
1254+ 9352 04               inc b
1255+ 9353 05               dec b
1256+ 9354 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9355
1258+ 9355 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9356 06 00            ld b,0
1260+ 9358
1261+ 9358 CD A6 93         call Compara_cositas_L1
1262+ 935B C9               ret
1263+ 935C
1264+ 935C
1265+ 935C              ; 2º Cuadrante
1266+ 935C
1267+ 935C 7C           3 ld a,h
1268+ 935D 06 00            ld b,0
1269+ 935F
1270+ 935F CD 6C 93         call Compara_cositas_H2
1271+ 9362
1272+ 9362 04               inc b
1273+ 9363 05               dec b
1274+ 9364 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9365
1276+ 9365 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9366 06 00            ld b,0
1278+ 9368
1279+ 9368 CD 7E 93         call Compara_cositas_L2
1280+ 936B C9               ret
1281+ 936C
1282+ 936C A7           Compara_cositas_H2 and a
1283+ 936D 28 0D            jr z,1F
1284+ 936F              ;    cp $fd
1285+ 936F              ;    jr z,1F
1286+ 936F              ;    cp $fe
1287+ 936F              ;    jr z,1F
1288+ 936F FE FF            cp $ff
1289+ 9371 28 09            jr z,1F
1290+ 9373 FE 01            cp $01
1291+ 9375 28 05            jr z,1F
1292+ 9377 FE 02            cp $02
1293+ 9379 28 01            jr z,1F
1294+ 937B C0               ret nz
1295+ 937C 04           1 inc b
1296+ 937D C9               ret
1297+ 937E
1298+ 937E A7           Compara_cositas_L2 and a
1299+ 937F 28 0D            jr z,1F
1300+ 9381              ;    cp $fd
1301+ 9381              ;    jr z,1F
1302+ 9381 FE FE            cp $fe
1303+ 9383 28 09            jr z,1F
1304+ 9385 FE FF            cp $ff
1305+ 9387 28 05            jr z,1F
1306+ 9389 FE 01            cp $01
1307+ 938B 28 01            jr z,1F
1308+ 938D              ;    cp $02
1309+ 938D              ;    jr z,1F
1310+ 938D C0               ret nz
1311+ 938E 04           1 inc b
1312+ 938F C9               ret
1313+ 9390
1314+ 9390 A7           Compara_cositas_H1 and a
1315+ 9391 28 11            jr z,1F
1316+ 9393              ;    cp $fd
1317+ 9393              ;    jr z,1F
1318+ 9393              ;    cp $fe
1319+ 9393              ;    jr z,1F
1320+ 9393 FE FF            cp $ff
1321+ 9395 28 0D            jr z,1F
1322+ 9397 FE 01            cp $01
1323+ 9399 28 09            jr z,1F
1324+ 939B FE 02            cp $02
1325+ 939D 28 05            jr z,1F
1326+ 939F FE 03            cp $03
1327+ 93A1 28 01            jr z,1F
1328+ 93A3 C0               ret nz
1329+ 93A4 04           1 inc b
1330+ 93A5 C9               ret
1331+ 93A6
1332+ 93A6 A7           Compara_cositas_L1 and a
1333+ 93A7 28 0D            jr z,1F
1334+ 93A9              ;    cp $fd
1335+ 93A9              ;    jr z,1F
1336+ 93A9              ;    cp $fe
1337+ 93A9              ;    jr z,1F
1338+ 93A9              ;    cp $ff
1339+ 93A9              ;    jr z,1F
1340+ 93A9 FE 01            cp $01
1341+ 93AB 28 09            jr z,1F
1342+ 93AD FE 02            cp $02
1343+ 93AF 28 05            jr z,1F
1344+ 93B1 FE 03            cp $03
1345+ 93B3 28 01            jr z,1F
1346+ 93B5 C0               ret nz
1347+ 93B6 04           1 inc b
1348+ 93B7 C9               ret
1349+ 93B8
1350+ 93B8 A7           Compara_cositas_H3 and a
1351+ 93B9 28 0D            jr z,1F
1352+ 93BB              ;    cp $fd
1353+ 93BB              ;    jr z,1F
1354+ 93BB FE FE            cp $fe
1355+ 93BD 28 09            jr z,1F
1356+ 93BF FE FF            cp $ff
1357+ 93C1 28 05            jr z,1F
1358+ 93C3 FE 01            cp $01
1359+ 93C5 28 01            jr z,1F
1360+ 93C7              ;    cp $02
1361+ 93C7              ;    jr z,1F
1362+ 93C7              ;    cp $03
1363+ 93C7              ;    jr z,1F
1364+ 93C7 C0               ret nz
1365+ 93C8 04           1 inc b
1366+ 93C9 C9               ret
1367+ 93CA
1368+ 93CA A7           Compara_cositas_L3 and a
1369+ 93CB 28 0D            jr z,1F
1370+ 93CD              ;    cp $fd
1371+ 93CD              ;    jr z,1F
1372+ 93CD              ;    cp $fe
1373+ 93CD              ;    jr z,1F
1374+ 93CD              ;    cp $ff
1375+ 93CD              ;    jr z,1F
1376+ 93CD FE 01            cp $01
1377+ 93CF 28 09            jr z,1F
1378+ 93D1 FE 02            cp $02
1379+ 93D3 28 05            jr z,1F
1380+ 93D5 FE 03            cp $03
1381+ 93D7 28 01            jr z,1F
1382+ 93D9 C0               ret nz
1383+ 93DA 04           1 inc b
1384+ 93DB C9               ret
1385+ 93DC
1386+ 93DC A7           Compara_cositas_H4 and a
1387+ 93DD 28 11            jr z,1F
1388+ 93DF FE FD            cp $fd
1389+ 93E1 28 0D            jr z,1F
1390+ 93E3 FE FE            cp $fe
1391+ 93E5 28 09            jr z,1F
1392+ 93E7 FE FF            cp $ff
1393+ 93E9 28 05            jr z,1F
1394+ 93EB FE 01            cp $01
1395+ 93ED 28 01            jr z,1F
1396+ 93EF              ;    cp $02
1397+ 93EF              ;    jr z,1F
1398+ 93EF              ;    cp $03
1399+ 93EF              ;    jr z,1F
1400+ 93EF C0               ret nz
1401+ 93F0 04           1 inc b
1402+ 93F1 C9               ret
1403+ 93F2
1404+ 93F2 A7           Compara_cositas_L4 and a
1405+ 93F3 28 0D            jr z,1F
1406+ 93F5              ;    cp $fd
1407+ 93F5              ;    jr z,1F
1408+ 93F5 FE FE            cp $fe
1409+ 93F7 28 09            jr z,1F
1410+ 93F9 FE FF            cp $ff
1411+ 93FB 28 05            jr z,1F
1412+ 93FD FE 01            cp $01
1413+ 93FF 28 01            jr z,1F
1414+ 9401              ;    cp $02
1415+ 9401              ;    jr z,1F
1416+ 9401              ;    cp $03
1417+ 9401              ;    jr z,1F
1418+ 9401 C0               ret nz
1419+ 9402 04           1 inc b
1420+ 9403 C9               ret
# file closed: Disparo.asm
1454  9404              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9404              ; ******************************************************************************************************************************************************************************************
   2+ 9404              ;
   3+ 9404              ; 26/06/23
   4+ 9404              ;
   5+ 9404              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9404
   7+ 9404 CD E8 96     Draw call Prepara_draw
   8+ 9407 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9408 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9409 28 05        	jr z,2F
  11+ 940B
  12+ 940B 3A C9 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 940E 18 0C        	jr 1F
  14+ 9410
  15+ 9410 2A C7 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9413 22 B7 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9416 CD A5 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 9419              ;													; _la esquina superior izquierda de la pantalla.
  19+ 9419 CD F2 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 941C
  21+ 941C 3A E3 89     1 ld a,(Ctrl_0)
  22+ 941F CB 6F        	bit 5,a
  23+ 9421 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9423
  25+ 9423 CD 3B 94     	call Comprueba_limite_horizontal
  26+ 9426 CD CB 94     	call Comprueba_limite_vertical
  27+ 9429
  28+ 9429              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 9429              ; -----------------------
  30+ 9429              ; -----------------------
  31+ 9429              ; -----------------------
  32+ 9429
  33+ 9429 CD 18 96     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 942C CD 4F 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 942F CD AE 96     	call Define_rutina_de_impresion
  36+ 9432
  37+ 9432 3A E3 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9435 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9437 32 E3 89     	ld (Ctrl_0),a
  40+ 943A
  41+ 943A C9           	ret
  42+ 943B
  43+ 943B              ; *******************************************************************************************************************************************************************************************
  44+ 943B              ;	21/01/23
  45+ 943B              ;
  46+ 943B              ; 	Comprueba_limite_horizontal.
  47+ 943B              ;
  48+ 943B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 943B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 943B              ;
  51+ 943B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 943B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 943B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 943B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 943B
  56+ 943B
  57+ 943B
  58+ 943B 3A E3 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 943E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9440 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9442 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9444 32 E3 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9447 18 09            jr 6F
  64+ 9449 CB 5F        1 bit 3,a
  65+ 944B 28 0A            jr z,2F
  66+ 944D E6 F7            and $f7
  67+ 944F 32 E3 89         ld (Ctrl_0),a
  68+ 9452 CD A5 95     6 call Inicializacion
  69+ 9455 18 5B            jr 5F
  70+ 9457 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9458
  72+ 9458              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9458              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9458
  75+ 9458 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 9459 2A F3 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 945C CD C0 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 945F 67           	ld h,a
  79+ 9460 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9461 CD C0 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9464 67           	ld h,a
  82+ 9465 A7           	and a
  83+ 9466 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9468 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 9469 3A C9 89     	ld a,(Cuad_objeto)
  86+ 946C FE 02        	cp 2
  87+ 946E 38 1E        	jr c,3F
  88+ 9470 28 1C        	jr z,3F
  89+ 9472 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9473 28 23            jr z,7F
  91+ 9475 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9477 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9479 E1           	pop hl
  94+ 947A
  95+ 947A              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 947A              ; _para indicar con E="2" en caso necesario.
  97+ 947A
  98+ 947A E5               push hl
  99+ 947B C5               push bc
 100+ 947C CD C0 99     	call calcula_tercio
 101+ 947F FE 01        	cp 1
 102+ 9481 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9483 CD B3 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9486 28 26            jr z,9F
 105+ 9488 38 24            jr c,9F
 106+ 948A 1E 00        11 ld e,0
 107+ 948C 18 22            jr 8F
 108+ 948E 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 948F 28 07        	jr z, 7F
 110+ 9491 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9493 1E 00         	ld e,0
 112+ 9495 E1           	pop hl
 113+ 9496 18 04        	jr 4F
 114+ 9498 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 949A 18 15            jr 10F
 116+ 949C
 117+ 949C              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 949C              ; _para indicar con E="2" en caso necesario.
 119+ 949C
 120+ 949C E5           4 push hl
 121+ 949D C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 949E CD C0 99     	call calcula_tercio
 123+ 94A1 FE 01        	cp 1
 124+ 94A3 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 94A5 CD B3 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 94A8 28 04            jr z,9F
 127+ 94AA 30 02            jr nc,9F
 128+ 94AC 18 02        	jr 8F
 129+ 94AE 1E 02        9 ld e,2
 130+ 94B0 C1           8 pop bc
 131+ 94B1 E1           10 pop hl
 132+ 94B2 C9           5 ret
 133+ 94B3
 134+ 94B3              ; --------------------
 135+ 94B3              ;
 136+ 94B3              ; 25/08/22
 137+ 94B3
 138+ 94B3 CD C0 99     Comprueba_centro call calcula_tercio
 139+ 94B6 67               ld h,a
 140+ 94B7 08           	ex af,af
 141+ 94B8 FE 02        	cp 2
 142+ 94BA 38 07        	jr c,1F
 143+ 94BC 28 05        	jr z,1F
 144+ 94BE 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 94C1 18 03        	jr 2F
 146+ 94C3 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 94C6 08           2 ex af,af
 148+ 94C7 A7               and a
 149+ 94C8 ED 42            sbc hl,bc
 150+ 94CA C9               ret
 151+ 94CB
 152+ 94CB              ; *********************************************************************************************************************************************************************************************
 153+ 94CB              ;
 154+ 94CB              ;   16/8/22
 155+ 94CB              ;
 156+ 94CB              ;	Comprueba_limite_vertical
 157+ 94CB              ;
 158+ 94CB              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 94CB              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 94CB              ;
 161+ 94CB
 162+ 94CB 2A B7 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 94CE 7D           	ld a,l
 164+ 94CF E6 1F        	and $1F
 165+ 94D1 57           	ld d,a
 166+ 94D2 3A F5 89     	ld a,(Limite_vertical)
 167+ 94D5 BA           	cp d 											; Límite - Posición.
 168+ 94D6 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 94D7 3A C9 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 94DA CB 47        	bit 0,a
 171+ 94DC 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94DE
 173+ 94DE              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94DE
 175+ 94DE 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94DF 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94E1
 178+ 94E1              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94E1              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94E1
 181+ 94E1 3A BB 89         ld a,(Coordenada_X)
 182+ 94E4 16 0F            ld d,Centro_izquierda
 183+ 94E6 A7               and a
 184+ 94E7 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 94E8 28 1E            jr z,3F
 186+ 94EA 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 94EC              ;                                                    ; _salimos sin modificar nada.
 188+ 94EC 18 0E            jr 2F
 189+ 94EE 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 94EF 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 94F1
 192+ 94F1              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 94F1              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 94F1
 195+ 94F1 3A BB 89         ld a,(Coordenada_X)
 196+ 94F4 16 10            ld d,Centro_derecha
 197+ 94F6 A7               and a
 198+ 94F7 92               sub d
 199+ 94F8 28 0E            jr z,3F
 200+ 94FA 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94FC              ;                                                    ; _salimos sin modificar nada.
 202+ 94FC CB 43        2 bit 0,e
 203+ 94FE 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9500 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9501 CD 95 95         call Modificaccionne
 206+ 9504 C1           	pop bc
 207+ 9505 CD A5 95         call Inicializacion
 208+ 9508 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9509
 210+ 9509              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9509
 212+ 9509 C5           4 push bc
 213+ 950A 01 B6 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 950D 0A           	ld a,(bc)
 215+ 950E 3D           	dec a
 216+ 950F 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9510 7D           	ld a,l
 218+ 9511 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9512 CB 47        	bit 0,a
 220+ 9514 28 03        	jr z,5F
 221+ 9516 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9517 18 2E        	jr 7F
 223+ 9519
 224+ 9519              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 9519
 226+ 9519 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 951A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 951B 3A E3 89     	ld a,(Ctrl_0)
 229+ 951E CB 4F        	bit 1,a
 230+ 9520 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9522 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9523
 233+ 9523              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9523
 235+ 9523 1C               inc e
 236+ 9524 1D               dec e
 237+ 9525 20 07            jr nz,12F
 238+ 9527 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9528 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 9529 22 B7 89     	ld (Posicion_actual),hl
 241+ 952C 18 44        13 jr 9F
 242+ 952E CB 43        12 bit 0,e
 243+ 9530 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9532              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9532 C1           	pop bc
 246+ 9533 18 D3        	jr 3B
 247+ 9535 80           14 add b
 248+ 9536 6F               ld l,a
 249+ 9537 22 B7 89     	ld (Posicion_actual),hl
 250+ 953A CD 95 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 953D 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 953F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9541 32 E3 89         ld (Ctrl_0),a
 254+ 9544 F1           	pop af
 255+ 9545 18 2B        	jr 9F
 256+ 9547
 257+ 9547              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9547
 259+ 9547 F5           7 push af
 260+ 9548 3A E3 89     	ld a,(Ctrl_0)
 261+ 954B CB 47        	bit 0,a
 262+ 954D 20 1D        	jr nz,8F
 263+ 954F F1           	pop af
 264+ 9550
 265+ 9550              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9550
 267+ 9550 1C           	inc e
 268+ 9551 1D               dec e
 269+ 9552 20 07            jr nz,10F
 270+ 9554 90           	sub b
 271+ 9555 6F               ld l,a
 272+ 9556 22 B7 89     	ld (Posicion_actual),hl
 273+ 9559 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 955B              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 955B CB 43        10 bit 0,e
 276+ 955D 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 955F              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 955F C1           	pop bc
 279+ 9560 18 A6        	jr 3B
 280+ 9562 90           16 sub b
 281+ 9563 6F               ld l,a
 282+ 9564 22 B7 89     	ld (Posicion_actual),hl
 283+ 9567 CD 95 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 956A 18 06            jr 9F
 285+ 956C E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 956E 32 E3 89         ld (Ctrl_0),a
 287+ 9571 F1           	pop af
 288+ 9572 C1           9 pop bc
 289+ 9573 1E 00        	ld e,0
 290+ 9575 CD A5 95         call Inicializacion
 291+ 9578 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9579 08           	ex af,af
 293+ 957A F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 957B 18 8B            jr 3B
 295+ 957D
 296+ 957D              ; --------------------
 297+ 957D
 298+ 957D 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 957F CD 03 97     1 call PreviousScan
 300+ 9582 10 FB            djnz 1B
 301+ 9584 22 B7 89     	ld (Posicion_actual),hl
 302+ 9587 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9588 C9           	ret
 304+ 9589
 305+ 9589              ; --------------------
 306+ 9589
 307+ 9589 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 958B CD F4 96     1 call NextScan
 309+ 958E 10 FB            djnz 1B
 310+ 9590 22 B7 89     	ld (Posicion_actual),hl
 311+ 9593 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9594 C9           	ret
 313+ 9595
 314+ 9595              ; --------------------
 315+ 9595              ;
 316+ 9595              ;	22/01/23
 317+ 9595              ;
 318+ 9595              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9595              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9595              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9595
 322+ 9595
 323+ 9595              Modificaccionne
 324+ 9595
 325+ 9595 3A C9 89     	ld a,(Cuad_objeto)
 326+ 9598 FE 02        	cp 2
 327+ 959A CC 7D 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 959D DC 7D 95         call c,Modifica_Pos_actual
 329+ 95A0 C8           	ret z
 330+ 95A1 CD 89 95         call Modifica_Pos_actual2
 331+ 95A4 C9               ret
 332+ 95A5
 333+ 95A5              ; *************************************************************************************************************************************************************************************************
 334+ 95A5              ;
 335+ 95A5              ;	13/8/22
 336+ 95A5              ;
 337+ 95A5              ;	Inicializacion
 338+ 95A5              ;
 339+ 95A5              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 95A5              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 95A5              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 95A5              ;
 343+ 95A5              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 95A5              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 95A5              ;	_ desaparece/aparece.
 346+ 95A5
 347+ 95A5              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 95A5              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 95A5              ;
 350+ 95A5              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 95A5              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 95A5              ; 		   [E] ="0"
 353+ 95A5
 354+ 95A5              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 95A5
 356+ 95A5 CD C0 99     Inicializacion call calcula_tercio
 357+ 95A8 28 36        	jr z,primit
 358+ 95AA E6 02        	and 2
 359+ 95AC 20 07        	jr nz,segmit
 360+ 95AE 7D           	ld a,l
 361+ 95AF FE 7F        	cp $7f
 362+ 95B1 38 2D        	jr c,primit
 363+ 95B3 28 2B        	jr z,primit
 364+ 95B5 CD 12 96     segmit call column
 365+ 95B8 38 13        	jr c,tercuad
 366+ 95BA 3E 04        cuarcuad ld a,4
 367+ 95BC 32 C9 89     	ld (Cuad_objeto),a
 368+ 95BF 21 20 48     	ld hl,$4820
 369+ 95C2 22 F3 89     	ld (Limite_horizontal),hl
 370+ 95C5 21 F5 89     	ld hl,Limite_vertical
 371+ 95C8 36 0D        	ld (hl),$0d
 372+ 95CA 08           	ex af,af
 373+ 95CB 18 3C        	jr 1F
 374+ 95CD              tercuad
 375+ 95CD 3E 03        	ld a,3
 376+ 95CF 32 C9 89     	ld (Cuad_objeto),a
 377+ 95D2 21 20 48     	ld hl,$4820
 378+ 95D5 22 F3 89     	ld (Limite_horizontal),hl
 379+ 95D8 21 F5 89     	ld hl,Limite_vertical
 380+ 95DB 36 12        	ld (hl),$12
 381+ 95DD 08           	ex af,af
 382+ 95DE 18 29        	jr 1F
 383+ 95E0 CD 12 96     primit call column
 384+ 95E3 38 13        	jr c, primcuad
 385+ 95E5              segcuad
 386+ 95E5 3E 02        	ld a,2
 387+ 95E7 32 C9 89     	ld (Cuad_objeto),a
 388+ 95EA 21 C0 4F     	ld hl,$4fc0
 389+ 95ED 22 F3 89     	ld (Limite_horizontal),hl
 390+ 95F0 21 F5 89     	ld hl,Limite_vertical
 391+ 95F3 36 0D        	ld (hl),$0d
 392+ 95F5 08           	ex af,af
 393+ 95F6 18 11        	jr 1F
 394+ 95F8              primcuad
 395+ 95F8 3E 01        	ld a,1
 396+ 95FA 32 C9 89     	ld (Cuad_objeto),a
 397+ 95FD 21 C0 4F     	ld hl,$4fc0
 398+ 9600 22 F3 89     	ld (Limite_horizontal),hl
 399+ 9603 21 F5 89     	ld hl,Limite_vertical
 400+ 9606 36 12        	ld (hl),$12
 401+ 9608 08           	ex af,af
 402+ 9609 CD 4B 9D     1 call Genera_coordenadas
 403+ 960C 21 E3 89     	ld hl,Ctrl_0
 404+ 960F CB EE        	set 5,(hl)
 405+ 9611 C9           	ret
 406+ 9612
 407+ 9612              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9612
 409+ 9612              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9612              ;
 411+ 9612              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9612
 413+ 9612 7D           column ld a,l
 414+ 9613 E6 1F        	and $1f
 415+ 9615 FE 10         	cp $10
 416+ 9617 C9            	ret
 417+ 9618
 418+ 9618              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9618              ;
 420+ 9618              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9618              ;
 422+ 9618              ; 14/12/22
 423+ 9618              ;
 424+ 9618              ;	Modifica: A y BC.
 425+ 9618
 426+ 9618 3A C9 89     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 961B E6 01        	and 1
 428+ 961D 28 17        	jr z,1F
 429+ 961F
 430+ 961F              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 961F
 432+ 961F 3A BB 89     	ld a,(Coordenada_X)
 433+ 9622 47           	ld b,a
 434+ 9623 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9624 79           	ld a,c
 436+ 9625 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9626 38 08        	jr c,2F
 438+ 9628 47           	ld b,a
 439+ 9629 79           	ld a,c
 440+ 962A 90           	sub b
 441+ 962B 32 F2 89     	ld (Columnas),a
 442+ 962E 18 1B        	jr 4F
 443+ 9630 79           2 ld a,c
 444+ 9631 32 F2 89     	ld (Columnas),a
 445+ 9634 18 15        	jr 4F
 446+ 9636
 447+ 9636              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9636
 449+ 9636 3A BB 89     1 ld a,(Coordenada_X)
 450+ 9639 81           	add c
 451+ 963A 3D           	dec a
 452+ 963B D6 1F        	sub $1f
 453+ 963D 38 08        	jr c,3F
 454+ 963F 47           	ld b,a
 455+ 9640 79           	ld a,c
 456+ 9641 90           	sub b
 457+ 9642 32 F2 89     	ld (Columnas),a
 458+ 9645 18 04        	jr 4F
 459+ 9647 79           3 ld a,c
 460+ 9648 32 F2 89     	ld (Columnas),a
 461+ 964B D9           4 exx
 462+ 964C 4F           	ld c,a
 463+ 964D D9           	exx
 464+ 964E C9            ret
 465+ 964F
 466+ 964F              ; --------------------------------------------------------------------------------------------------------------------
 467+ 964F              ;
 468+ 964F              ;   19/7/23
 469+ 964F              ;
 470+ 964F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 964F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 964F              ;
 473+ 964F              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 964F              ;			HL e IY Contienen (Puntero_objeto).
 475+ 964F              ;
 476+ 964F              ;	DESTRUYE: HL,B Y A.
 477+ 964F
 478+ 964F 3A C9 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9652 FE 02        	cp 2
 480+ 9654 38 18        	jr c,1F
 481+ 9656 28 16        	jr z,1F
 482+ 9658 E6 01        	and 1
 483+ 965A 28 0D        	jr z,3F
 484+ 965C
 485+ 965C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 965C
 487+ 965C CD A2 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 965F
 489+ 965F 7D           9 ld a,l
 490+ 9660 E6 1F        	and $1f
 491+ 9662 28 2A        	jr z,7F
 492+ 9664 2B           	dec hl
 493+ 9665 10 F8        	djnz 9B
 494+ 9667 18 25        	jr 7F
 495+ 9669
 496+ 9669              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 9669
 498+ 9669 2A B7 89     3 ld hl,(Posicion_actual)
 499+ 966C 18 20        	jr 7F
 500+ 966E
 501+ 966E 28 14        1 jr z,2F
 502+ 9670
 503+ 9670              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9670
 505+ 9670 CD A2 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9673
 507+ 9673 7D           4 ld a,l
 508+ 9674 E6 1F        	and $1f
 509+ 9676 28 03        	jr z,6F
 510+ 9678 2B           	dec hl
 511+ 9679 10 F8        	djnz 4B
 512+ 967B 06 0F        6 ld b,15
 513+ 967D CD 03 97     5 call PreviousScan
 514+ 9680 10 FB        	djnz 5B
 515+ 9682 18 0A        	jr 7F
 516+ 9684
 517+ 9684              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9684
 519+ 9684 CD A2 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9687 06 0F        	ld b,15
 521+ 9689 CD 03 97     8 call PreviousScan
 522+ 968C 10 FB        	djnz 8B
 523+ 968E
 524+ 968E E5           7 push hl
 525+ 968F DD E1        	pop ix
 526+ 9691
 527+ 9691 2A B9 89     	ld hl,(Puntero_objeto)
 528+ 9694 E5           	push hl
 529+ 9695 FD E1        	pop iy
 530+ 9697
 531+ 9697              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9697
 533+ 9697 3A E3 89     	ld a,(Ctrl_0)
 534+ 969A CB 77        	bit 6,a
 535+ 969C C8           	ret z
 536+ 969D
 537+ 969D              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 969D              ; _ entidad / Amadeus´.
 539+ 969D
 540+ 969D DD 22 3D 8A  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 96A1
 542+ 96A1 C9           	ret
 543+ 96A2
 544+ 96A2              ; --------------------------------------------------------------------------------------------------------------------
 545+ 96A2              ;
 546+ 96A2              ;	2/1/23
 547+ 96A2              ;
 548+ 96A2              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 96A2              ;
 550+ 96A2              ;	Tras esta rutina tenemos:
 551+ 96A2              ;
 552+ 96A2              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 96A2              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 96A2              ;
 555+ 96A2              ;	DESTRUYE!!!!! HL,B y A.
 556+ 96A2
 557+ 96A2 2A B7 89     Operandos ld hl,(Posicion_actual)
 558+ 96A5 3A F2 89     	ld a,(Columnas)
 559+ 96A8 3D           	dec a
 560+ 96A9 20 01        	jr nz,1F
 561+ 96AB 3C           	inc a
 562+ 96AC 47           1 ld b,a
 563+ 96AD C9           	ret
 564+ 96AE
 565+ 96AE              ; --------------------------------------------------------------------------------------------------------------------
 566+ 96AE              ;
 567+ 96AE              ;	3/1/23
 568+ 96AE              ;
 569+ 96AE              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 96AE              ;
 571+ 96AE              ;	Destruye: A,B,HL y DE.
 572+ 96AE
 573+ 96AE              Define_rutina_de_impresion
 574+ 96AE
 575+ 96AE 3A B6 89     	ld a,(Columns)
 576+ 96B1 47           	ld b,a
 577+ 96B2 3A F2 89     	ld a,(Columnas)
 578+ 96B5 B8           	cp b
 579+ 96B6 20 0D        	jr nz,2f
 580+ 96B8
 581+ 96B8              ;	La entidad se imprime entera.
 582+ 96B8
 583+ 96B8 21 90 97     	ld hl, Indice_entidades_completas
 584+ 96BB E6 01        	and 1
 585+ 96BD 28 02        	jr z,1F
 586+ 96BF
 587+ 96BF 23           	inc hl
 588+ 96C0 23           	inc hl
 589+ 96C1
 590+ 96C1 CD 95 8D     1 call Extrae_address
 591+ 96C4 C9           	ret		;	ret
 592+ 96C5
 593+ 96C5              ;	La entidad no se imprime entera en pantalla.
 594+ 96C5
 595+ 96C5 3A C9 89     2 ld a,(Cuad_objeto)
 596+ 96C8 E6 01        	and 1
 597+ 96CA 28 17        	jr z,3F
 598+ 96CC
 599+ 96CC              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 96CC
 601+ 96CC 21 94 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 96CF 3A B6 89     4 ld a,(Columns)
 603+ 96D2 E6 01        	and 1
 604+ 96D4 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 96D6
 606+ 96D6 23           	inc hl
 607+ 96D7 23           	inc hl
 608+ 96D8
 609+ 96D8 3A F2 89     	ld a,(Columnas)
 610+ 96DB E6 01        	and 1
 611+ 96DD 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96DF
 613+ 96DF 23           	inc hl
 614+ 96E0 23           	inc hl
 615+ 96E1
 616+ 96E1 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96E3
 618+ 96E3 21 9A 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 96E6 18 E7        	jr 4B
 620+ 96E8
 621+ 96E8              ; --------------------------------------------------------------------------------------------------------------------
 622+ 96E8              ;
 623+ 96E8              ;	Prepara_draw
 624+ 96E8              ;
 625+ 96E8              ;	Es una rutina de carga.
 626+ 96E8              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 96E8              ;
 628+ 96E8              ;	FUNCIONAMIENTO:
 629+ 96E8              ;
 630+ 96E8              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 96E8              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 96E8              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 96E8              ;
 634+ 96E8              ;	DESTRUYE:
 635+ 96E8              ;
 636+ 96E8              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 96E8
 638+ 96E8 21 B5 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 96EB 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 96EC 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 96ED 4E           	ld c,(hl)
 642+ 96EE 2A B7 89     	ld hl,(Posicion_actual)
 643+ 96F1 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96F3 C9           	ret
 645+ 96F4
 646+ 96F4              ;----------------------------------------------------------------------------------------------------------------
 647+ 96F4              ;
 648+ 96F4              ;	5/08/22
 649+ 96F4              ;
 650+ 96F4              ;   NextScan.
 651+ 96F4              ;
 652+ 96F4              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96F4              ;
 654+ 96F4              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96F4              ;
 656+ 96F4              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96F4              ;
 658+ 96F4              ;       DESTRUIDOS: AF y HL !!!
 659+ 96F4              ;
 660+ 96F4              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96F4              ;
 662+ 96F4
 663+ 96F4 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96F5 7C               ld a,h
 665+ 96F6 E6 07            and 7
 666+ 96F8 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96F9
 668+ 96F9 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96FA C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96FC 6F               ld l,a
 671+ 96FD D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96FE
 673+ 96FE 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96FF D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9701 67               ld h,a
 676+ 9702 C9               ret
 677+ 9703
 678+ 9703              ;----------------------------------------------------------------------------------------------------------------
 679+ 9703              ;
 680+ 9703              ;	5/08/22
 681+ 9703              ;
 682+ 9703              ;   PreviousScan.
 683+ 9703              ;
 684+ 9703              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9703              ;
 686+ 9703              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9703              ;
 688+ 9703              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9703              ;
 690+ 9703              ;       DESTRUIDOS: AF y HL !!!
 691+ 9703              ;
 692+ 9703              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9703              ;
 694+ 9703
 695+ 9703 7C           PreviousScan ld a,h
 696+ 9704 25               dec h               ; Dec H.
 697+ 9705 E6 07            and 7
 698+ 9707 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9708
 700+ 9708 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9709 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 970B 6F               ld l,a
 703+ 970C D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 970D
 705+ 970D 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 970E C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9710 67               ld h,a
 708+ 9711 C9               ret
 709+ 9712
 710+ 9712              ; -----------------------------------------------------------------------------------
 711+ 9712              ;
 712+ 9712              ;	31/7/23
 713+ 9712              ;
 714+ 9712              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 9712              ;	Extrae fotos de Album_de_fotos.
 716+ 9712
 717+ 9712              Extrae_foto_entidades
 718+ 9712
 719+ 9712              ;	ld a,(Contador_de_frames)
 720+ 9712              ;	cp $1e
 721+ 9712              ;	jr z,$
 722+ 9712
 723+ 9712 21 01 70     	ld hl,Album_de_fotos+1
 724+ 9715 7E           	ld a,(hl)
 725+ 9716 A7           	and a
 726+ 9717 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 727+ 9718
 728+ 9718 3A 04 8A     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 971B A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 730+ 971C C8           	ret z
 731+ 971D
 732+ 971D              ; -----------------------------------
 733+ 971D
 734+ 971D ED 73 09 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 9721 31 00 70     	ld sp,Album_de_fotos
 736+ 9724
 737+ 9724 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 9726 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 9727 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 9728
 741+ 9728 ED 73 0B 8A  	ld (Stack_2),sp
 742+ 972C ED 7B 09 8A  	ld sp,(Stack)
 743+ 9730
 744+ 9730              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 9730
 746+ 9730 3E CD        	ld a,$cd
 747+ 9732 32 3A 97     	ld (Imprime),a
 748+ 9735 EB           	ex de,hl
 749+ 9736 22 3B 97     	ld (Imprime+1),hl
 750+ 9739 EB           	ex de,hl
 751+ 973A
 752+ 973A              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 973A
 754+ 973A 00 00 00     Imprime db 0,0,0
 755+ 973D
 756+ 973D 3A 04 8A     	ld a,(Numero_de_malotes)
 757+ 9740 3D           	dec a
 758+ 9741 28 09        	jr z,1F
 759+ 9743 32 04 8A      	ld (Numero_de_malotes),a
 760+ 9746
 761+ 9746 ED 7B 0B 8A   	ld sp,(Stack_2)
 762+ 974A 18 D8        	jr 2B
 763+ 974C
 764+ 974C AF           1 xor a
 765+ 974D 32 0B 8A     	ld (Stack_2),a
 766+ 9750 C9           	ret
 767+ 9751
 768+ 9751              ; -----------------------------------------------------------------------------------
 769+ 9751              ;
 770+ 9751              ;	28/2/23
 771+ 9751              ;
 772+ 9751              ;	Pinta los disparos generados.
 773+ 9751
 774+ 9751              Extrae_foto_disparos
 775+ 9751
 776+ 9751 21 0E 72     	ld hl,Album_de_fotos_disparos+1
 777+ 9754 7E               ld a,(hl)
 778+ 9755 A7               and a
 779+ 9756 C8               ret z
 780+ 9757
 781+ 9757 3A 2D 8A     	ld a,(Numero_de_disparotes)
 782+ 975A A7           	and a
 783+ 975B C8           	ret z
 784+ 975C ED 73 09 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 785+ 9760 31 0D 72     	ld sp,Album_de_fotos_disparos
 786+ 9763
 787+ 9763 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 788+ 9765 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 789+ 9766 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 790+ 9767
 791+ 9767 ED 73 0B 8A  	ld (Stack_2),sp
 792+ 976B ED 7B 09 8A  	ld sp,(Stack)
 793+ 976F
 794+ 976F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 795+ 976F
 796+ 976F 3E CD        	ld a,$cd
 797+ 9771 32 79 97     	ld (Imprime2),a
 798+ 9774 EB           	ex de,hl
 799+ 9775 22 7A 97     	ld (Imprime2+1),hl
 800+ 9778 EB           	ex de,hl
 801+ 9779
 802+ 9779              ; Ejecuta la llamada:	CALL $xx,xx
 803+ 9779
 804+ 9779 00 00 00     Imprime2 db 0,0,0
 805+ 977C
 806+ 977C 3A 2D 8A     	ld a,(Numero_de_disparotes)
 807+ 977F 3D           	dec a
 808+ 9780 28 09        	jr z,1F
 809+ 9782 32 2D 8A      	ld (Numero_de_disparotes),a
 810+ 9785
 811+ 9785 ED 7B 0B 8A  	ld sp,(Stack_2)
 812+ 9789 18 D8        	jr 2B
 813+ 978B
 814+ 978B AF           1 xor a
 815+ 978C 32 0B 8A     	ld (Stack_2),a
 816+ 978F C9           	ret
 817+ 9790
# file closed: Draw_XOR.asm
1455  9790              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9790              ;   índices de Rutinas de impresión.
   2+ 9790
   3+ 9790 A0 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9792 CD 97            defw Pinta_Amadeus_3x2
   5+ 9794
   6+ 9794 23 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9796 C3 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9798 77 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 979A
  10+ 979A 4D 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 979C 51 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 979E 05 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97A0
  14+ 97A0
  15+ 97A0              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97A0              ;
  17+ 97A0              ;   12/12/22
  18+ 97A0              ;
  19+ 97A0              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97A0              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97A0              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97A0              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97A0              ;
  24+ 97A0              ;   Modifica: DE y HL.
  25+ 97A0
  26+ 97A0 ED 73 09 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97A4 FD F9        	ld sp,iy
  28+ 97A6 06 10            ld b,16
  29+ 97A8 D1           1 pop de
  30+ 97A9 7B               ld a,e
  31+ 97AA AE               xor (hl)
  32+ 97AB 77           	ld (hl),a
  33+ 97AC 23           	inc hl
  34+ 97AD 7A               ld a,d
  35+ 97AE AE               xor (hl)
  36+ 97AF 77           	ld (hl),a
  37+ 97B0 2B           	dec hl
  38+ 97B1 24           	inc h
  39+ 97B2 7C               ld a,h
  40+ 97B3 E6 07            and 7
  41+ 97B5 20 0A            jr nz,2F
  42+ 97B7 7D               ld a,l
  43+ 97B8 C6 20            add a,$20
  44+ 97BA 6F               ld l,a
  45+ 97BB 38 04            jr c,2F
  46+ 97BD 7C               ld a,h
  47+ 97BE D6 08            sub 8
  48+ 97C0 67               ld h,a
  49+ 97C1 7C           2 ld a,h
  50+ 97C2 FE 58            cp $58
  51+ 97C4 28 02            jr z,3F
  52+ 97C6 10 E0            djnz 1B
  53+ 97C8 ED 7B 09 8A  3 ld sp,(Stack)
  54+ 97CC C9           	ret
  55+ 97CD
  56+ 97CD ED 73 09 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97D1 FD F9        	ld sp,iy
  58+ 97D3 06 08            ld b,8
  59+ 97D5 D1           1 pop de
  60+ 97D6 7B               ld a,e
  61+ 97D7 AE               xor (hl)
  62+ 97D8 77           	ld (hl),a
  63+ 97D9 23           	inc hl
  64+ 97DA 7A               ld a,d
  65+ 97DB AE               xor (hl)
  66+ 97DC 77           	ld (hl),a
  67+ 97DD 23           	inc hl
  68+ 97DE D1           	pop de
  69+ 97DF 7B               ld a,e
  70+ 97E0 AE               xor (hl)
  71+ 97E1 77           	ld (hl),a
  72+ 97E2 2B           	dec hl
  73+ 97E3 2B           	dec hl
  74+ 97E4 24           	inc h
  75+ 97E5 7C               ld a,h
  76+ 97E6 E6 07            and 7
  77+ 97E8 20 0A            jr nz,2F
  78+ 97EA 7D               ld a,l
  79+ 97EB C6 20            add a,$20
  80+ 97ED 6F               ld l,a
  81+ 97EE 38 04            jr c,2F
  82+ 97F0 7C               ld a,h
  83+ 97F1 D6 08            sub 8
  84+ 97F3 67               ld h,a
  85+ 97F4 7C           2 ld a,h
  86+ 97F5 FE 58            cp $58
  87+ 97F7 28 25            jr z,4F
  88+ 97F9 7A               ld a,d
  89+ 97FA AE               xor (hl)
  90+ 97FB 77               ld (hl),a
  91+ 97FC D1           	pop de
  92+ 97FD 23           	inc hl
  93+ 97FE 7B               ld a,e
  94+ 97FF AE               xor (hl)
  95+ 9800 77           	ld (hl),a
  96+ 9801 23           	inc hl
  97+ 9802 7A               ld a,d
  98+ 9803 AE               xor (hl)
  99+ 9804 77           	ld (hl),a
 100+ 9805 2B           	dec hl
 101+ 9806 2B           	dec hl
 102+ 9807 24           	inc h
 103+ 9808 7C               ld a,h
 104+ 9809 E6 07            and 7
 105+ 980B 20 0A            jr nz,3F
 106+ 980D 7D               ld a,l
 107+ 980E C6 20            add a,$20
 108+ 9810 6F               ld l,a
 109+ 9811 38 04            jr c,3F
 110+ 9813 7C               ld a,h
 111+ 9814 D6 08            sub 8
 112+ 9816 67               ld h,a
 113+ 9817 7C           3 ld a,h
 114+ 9818 FE 58            cp $58
 115+ 981A 28 02            jr z,4F
 116+ 981C 10 B7            djnz 1B
 117+ 981E ED 7B 09 8A  4 ld sp,(Stack)
 118+ 9822 C9           	ret
 119+ 9823
 120+ 9823              ; ---------------------------------------------------
 121+ 9823
 122+ 9823 ED 73 09 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9827 FD F9        	ld sp,iy
 124+ 9829
 125+ 9829              ; >>>
 126+ 9829
 127+ 9829 06 10            ld b,16
 128+ 982B D1           1 pop de
 129+ 982C 7A           	ld a,d
 130+ 982D AE           	xor (hl)
 131+ 982E 77           	ld (hl),a
 132+ 982F 24           	inc h
 133+ 9830 7C               ld a,h
 134+ 9831 E6 07            and 7
 135+ 9833 20 0C            jr nz,2F
 136+ 9835 7D               ld a,l
 137+ 9836 C6 20            add a,$20
 138+ 9838 6F               ld l,a
 139+ 9839 38 06            jr c,2F
 140+ 983B 7C               ld a,h
 141+ 983C D6 08            sub 8
 142+ 983E 67               ld h,a
 143+ 983F 18 00            jr 2F
 144+ 9841 7C           2 ld a,h
 145+ 9842 FE 58            cp $58
 146+ 9844 28 02            jr z,3F
 147+ 9846 10 E3            djnz 1B
 148+ 9848 ED 7B 09 8A  3 ld sp,(Stack)
 149+ 984C C9           	ret
 150+ 984D
 151+ 984D ED 73 09 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9851 FD F9        	ld sp,iy
 153+ 9853
 154+ 9853              ; >>>
 155+ 9853
 156+ 9853 06 10            ld b,16
 157+ 9855 D1           1 pop de
 158+ 9856 7B           	ld a,e
 159+ 9857 AE           	xor (hl)
 160+ 9858 77           	ld (hl),a
 161+ 9859 24           	inc h
 162+ 985A 7C               ld a,h
 163+ 985B E6 07            and 7
 164+ 985D 20 0C            jr nz,2F
 165+ 985F 7D               ld a,l
 166+ 9860 C6 20            add a,$20
 167+ 9862 6F               ld l,a
 168+ 9863 38 06            jr c,2F
 169+ 9865 7C               ld a,h
 170+ 9866 D6 08            sub 8
 171+ 9868 67               ld h,a
 172+ 9869 18 00            jr 2F
 173+ 986B 7C           2 ld a,h
 174+ 986C FE 58            cp $58
 175+ 986E 28 02            jr z,3F
 176+ 9870 10 E3            djnz 1B
 177+ 9872 ED 7B 09 8A  3 ld sp,(Stack)
 178+ 9876 C9           	ret
 179+ 9877
 180+ 9877              ; ---------------------------------------------------
 181+ 9877
 182+ 9877 ED 73 09 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 987B FD F9        	ld sp,iy
 184+ 987D 06 08            ld b,8
 185+ 987F D1           1 pop de
 186+ 9880 7A           	ld a,d
 187+ 9881 AE           	xor (hl)
 188+ 9882 77           	ld (hl),a
 189+ 9883 23           	inc hl
 190+ 9884 D1           	pop de
 191+ 9885 7B           	ld a,e
 192+ 9886 AE           	xor (hl)
 193+ 9887 77           	ld (hl),a
 194+ 9888 2B           	dec hl
 195+ 9889 24            	inc h
 196+ 988A 7C               ld a,h
 197+ 988B E6 07            and 7
 198+ 988D 20 0A            jr nz,2F
 199+ 988F 7D               ld a,l
 200+ 9890 C6 20            add a,$20
 201+ 9892 6F               ld l,a
 202+ 9893 38 04            jr c,2F
 203+ 9895 7C               ld a,h
 204+ 9896 D6 08            sub 8
 205+ 9898 67               ld h,a
 206+ 9899 7C           2 ld a,h
 207+ 989A FE 58            cp $58
 208+ 989C 28 20            jr z,4F
 209+ 989E D1               pop de
 210+ 989F 7B           	ld a,e
 211+ 98A0 AE           	xor (hl)
 212+ 98A1 77           	ld (hl),a
 213+ 98A2 23           	inc hl
 214+ 98A3 7A           	ld a,d
 215+ 98A4 AE           	xor (hl)
 216+ 98A5 77           	ld (hl),a
 217+ 98A6 2B           	dec hl
 218+ 98A7 24           	inc h
 219+ 98A8 7C               ld a,h
 220+ 98A9 E6 07            and 7
 221+ 98AB 20 0A            jr nz,3F
 222+ 98AD 7D               ld a,l
 223+ 98AE C6 20            add a,$20
 224+ 98B0 6F               ld l,a
 225+ 98B1 38 04            jr c,3F
 226+ 98B3 7C               ld a,h
 227+ 98B4 D6 08            sub 8
 228+ 98B6 67               ld h,a
 229+ 98B7 7C           3 ld a,h
 230+ 98B8 FE 58            cp $58
 231+ 98BA 28 02            jr z,4F
 232+ 98BC 10 C1            djnz 1B
 233+ 98BE ED 7B 09 8A  4 ld sp,(Stack)
 234+ 98C2 C9           	ret
 235+ 98C3
 236+ 98C3 ED 73 09 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98C7 FD F9        	ld sp,iy
 238+ 98C9 06 08            ld b,8
 239+ 98CB D1           1 pop de
 240+ 98CC D1           	pop de
 241+ 98CD 7B           	ld a,e
 242+ 98CE AE           	xor (hl)
 243+ 98CF 77           	ld (hl),a
 244+ 98D0 24            	inc h
 245+ 98D1 7C               ld a,h
 246+ 98D2 E6 07            and 7
 247+ 98D4 20 0A            jr nz,2F
 248+ 98D6 7D               ld a,l
 249+ 98D7 C6 20            add a,$20
 250+ 98D9 6F               ld l,a
 251+ 98DA 38 04            jr c,2F
 252+ 98DC 7C               ld a,h
 253+ 98DD D6 08            sub 8
 254+ 98DF 67               ld h,a
 255+ 98E0 7C           2 ld a,h
 256+ 98E1 FE 58            cp $58
 257+ 98E3 28 1B            jr z,4F
 258+ 98E5 D1               pop de
 259+ 98E6 7A           	ld a,d
 260+ 98E7 AE           	xor (hl)
 261+ 98E8 77           	ld (hl),a
 262+ 98E9 24           	inc h
 263+ 98EA 7C               ld a,h
 264+ 98EB E6 07            and 7
 265+ 98ED 20 0A            jr nz,3F
 266+ 98EF 7D               ld a,l
 267+ 98F0 C6 20            add a,$20
 268+ 98F2 6F               ld l,a
 269+ 98F3 38 04            jr c,3F
 270+ 98F5 7C               ld a,h
 271+ 98F6 D6 08            sub 8
 272+ 98F8 67               ld h,a
 273+ 98F9 7C           3 ld a,h
 274+ 98FA FE 58            cp $58
 275+ 98FC 28 02            jr z,4F
 276+ 98FE 10 CB            djnz 1B
 277+ 9900 ED 7B 09 8A  4 ld sp,(Stack)
 278+ 9904 C9           	ret
 279+ 9905
 280+ 9905 ED 73 09 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9909 FD F9        	ld sp,iy
 282+ 990B 06 08            ld b,8
 283+ 990D D1           1 pop de
 284+ 990E 7B           	ld a,e
 285+ 990F AE           	xor (hl)
 286+ 9910 77           	ld (hl),a
 287+ 9911 23           	inc hl
 288+ 9912 7A           	ld a,d
 289+ 9913 AE           	xor (hl)
 290+ 9914 77           	ld (hl),a
 291+ 9915 2B           	dec hl
 292+ 9916 24             	inc h
 293+ 9917 7C               ld a,h
 294+ 9918 E6 07            and 7
 295+ 991A 20 0A            jr nz,2F
 296+ 991C 7D               ld a,l
 297+ 991D C6 20            add a,$20
 298+ 991F 6F               ld l,a
 299+ 9920 38 04            jr c,2F
 300+ 9922 7C               ld a,h
 301+ 9923 D6 08            sub 8
 302+ 9925 67               ld h,a
 303+ 9926 7C           2 ld a,h
 304+ 9927 FE 58            cp $58
 305+ 9929 28 21            jr z,4F
 306+ 992B D1               pop de
 307+ 992C 7A           	ld a,d
 308+ 992D AE           	xor (hl)
 309+ 992E 77           	ld (hl),a
 310+ 992F 23           	inc hl
 311+ 9930 D1               pop de
 312+ 9931 7B           	ld a,e
 313+ 9932 AE           	xor (hl)
 314+ 9933 77           	ld (hl),a
 315+ 9934 2B           	dec hl
 316+ 9935 24           	inc h
 317+ 9936 7C               ld a,h
 318+ 9937 E6 07            and 7
 319+ 9939 20 0A            jr nz,3F
 320+ 993B 7D               ld a,l
 321+ 993C C6 20            add a,$20
 322+ 993E 6F               ld l,a
 323+ 993F 38 04            jr c,3F
 324+ 9941 7C               ld a,h
 325+ 9942 D6 08            sub 8
 326+ 9944 67               ld h,a
 327+ 9945 7C           3 ld a,h
 328+ 9946 FE 58            cp $58
 329+ 9948 28 02            jr z,4F
 330+ 994A 10 C1            djnz 1B
 331+ 994C ED 7B 09 8A  4 ld sp,(Stack)
 332+ 9950 C9           	ret
 333+ 9951
 334+ 9951 ED 73 09 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9955 FD F9        	ld sp,iy
 336+ 9957 06 08            ld b,8
 337+ 9959 D1           1 pop de
 338+ 995A 7B           	ld a,e
 339+ 995B AE           	xor (hl)
 340+ 995C 77           	ld (hl),a
 341+ 995D 24            	inc h
 342+ 995E 7C               ld a,h
 343+ 995F E6 07            and 7
 344+ 9961 20 0A            jr nz,2F
 345+ 9963 7D               ld a,l
 346+ 9964 C6 20            add a,$20
 347+ 9966 6F               ld l,a
 348+ 9967 38 04            jr c,2F
 349+ 9969 7C               ld a,h
 350+ 996A D6 08            sub 8
 351+ 996C 67               ld h,a
 352+ 996D 7C           2 ld a,h
 353+ 996E FE 58            cp $58
 354+ 9970 28 1C            jr z,4F
 355+ 9972 D1               pop de
 356+ 9973 7A           	ld a,d
 357+ 9974 AE           	xor (hl)
 358+ 9975 77           	ld (hl),a
 359+ 9976 24           	inc h
 360+ 9977 7C               ld a,h
 361+ 9978 E6 07            and 7
 362+ 997A 20 0A            jr nz,3F
 363+ 997C 7D               ld a,l
 364+ 997D C6 20            add a,$20
 365+ 997F 6F               ld l,a
 366+ 9980 38 04            jr c,3F
 367+ 9982 7C               ld a,h
 368+ 9983 D6 08            sub 8
 369+ 9985 67               ld h,a
 370+ 9986 7C           3 ld a,h
 371+ 9987 FE 58            cp $58
 372+ 9989 28 03            jr z,4F
 373+ 998B D1               pop de
 374+ 998C 10 CB            djnz 1B
 375+ 998E ED 7B 09 8A  4 ld sp,(Stack)
 376+ 9992 C9           	ret
 377+ 9993
 378+ 9993              ; ---------------------------------------------------
 379+ 9993              ;
 380+ 9993              ;   27/02/23
 381+ 9993              ;
 382+ 9993              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9993              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9993              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9993
 386+ 9993 ED 73 09 8A  Pinta_Disparo ld (Stack),sp
 387+ 9997 FD F9            ld sp,iy
 388+ 9999 06 03            ld b,3
 389+ 999B D1           1 pop de
 390+ 999C 7B               ld a,e
 391+ 999D AE               xor (hl)
 392+ 999E 77               ld (hl),a
 393+ 999F 23               inc hl
 394+ 99A0 7A               ld a,d
 395+ 99A1 AE               xor (hl)
 396+ 99A2 77               ld (hl),a
 397+ 99A3 2B               dec hl
 398+ 99A4
 399+ 99A4 24               inc h
 400+ 99A5 7C               ld a,h
 401+ 99A6 E6 07            and 7
 402+ 99A8 20 0A            jr nz,2F
 403+ 99AA 7D               ld a,l
 404+ 99AB C6 20            add a,$20
 405+ 99AD 6F               ld l,a
 406+ 99AE 38 04            jr c,2F
 407+ 99B0 7C               ld a,h
 408+ 99B1 D6 08            sub 8
 409+ 99B3 67               ld h,a
 410+ 99B4 7C           2 ld a,h
 411+ 99B5 FE 58            cp $58
 412+ 99B7 28 02            jr z,3F
 413+ 99B9
 414+ 99B9 10 E0            djnz 1B
 415+ 99BB ED 7B 09 8A  3 ld sp,(Stack)
 416+ 99BF C9               ret
 417+ 99C0
# file closed: Rutinas_de_impresion_sprites.asm
1456  99C0              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99C0              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99C0              ;
   3+ 99C0              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99C0              ;
   5+ 99C0              ; *****************************************************************************************************************************************************************************************
   6+ 99C0              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99C0
   8+ 99C0 7C           calcula_tercio ld a,h
   9+ 99C1 E6 18        	and $18
  10+ 99C3 CB 2F        	sra a
  11+ 99C5 CB 2F        	sra a
  12+ 99C7 CB 2F        	sra a
  13+ 99C9 C9           	ret
  14+ 99CA
# file closed: calcula_tercio.asm
1457  99CA              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99CA              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99CA              ;
   3+ 99CA              ;
   4+ 99CA              ;	CLS.
   5+ 99CA              ;
   6+ 99CA              ;	Limpia la pantalla y define sus atributos.
   7+ 99CA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99CA              ;
   9+ 99CA              ;	COLORES: 0 ..... NEGRO
  10+ 99CA              ;    		 1 ..... AZUL
  11+ 99CA              ; 			 2 ..... ROJO
  12+ 99CA              ;			 3 ..... MAGENTA
  13+ 99CA              ; 			 4 ..... VERDE
  14+ 99CA              ; 			 5 ..... CIAN
  15+ 99CA              ;			 6 ..... AMARILLO
  16+ 99CA              ; 			 7 ..... BLANCO
  17+ 99CA              ;
  18+ 99CA              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99CA              ;
  20+ 99CA              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99CA
  22+ 99CA
  23+ 99CA 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99CD 11 01 40     	LD DE,$4001
  25+ 99D0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99D3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99D5 ED B0        	LDIR
  28+ 99D7 01 FF 02     	LD BC,767
  29+ 99DA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99DB ED B0        	LDIR
  31+ 99DD C9           	ret
  32+ 99DE
# file closed: Cls.asm
1458  99DE              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99DE              ; ******************************************************************************************************************************************************************************************
   2+ 99DE              ;
   3+ 99DE              ;   20/05/23
   4+ 99DE              ;
   5+ 99DE              ;	Recompone_posicion_inicio
   6+ 99DE              ;
   7+ 99DE              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99DE              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99DE              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99DE              ;	_ a una u otra rutina.
  11+ 99DE
  12+ 99DE              Recompone_posicion_inicio
  13+ 99DE
  14+ 99DE 2A C7 89     	ld hl,(Posicion_inicio)
  15+ 99E1 7D           	ld a,l
  16+ 99E2 E6 1F        	and $1f
  17+ 99E4 28 16        	jr z,1F
  18+ 99E6
  19+ 99E6 FE 1F        	cp $1f
  20+ 99E8 28 0D        	jr z,3F
  21+ 99EA
  22+ 99EA 21 F6 89     	ld hl,Ctrl_2
  23+ 99ED CB C6        	set 0,(hl)
  24+ 99EF 2A B9 89     	ld hl,(Puntero_objeto)
  25+ 99F2 22 F9 89     	ld (Repone_puntero_objeto),hl
  26+ 99F5 18 08        	jr 2F
  27+ 99F7
  28+ 99F7 CD 98 9B     3 call Mov_left
  29+ 99FA 18 03        	jr 2F
  30+ 99FC
  31+ 99FC CD 7A 9A     1 call Mov_right
  32+ 99FF 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A02 22 B9 89     	ld (Puntero_objeto),hl
  34+ 9A05 C9           	ret
  35+ 9A06
  36+ 9A06              ; ******************************************************************************************************************************************************************************************
  37+ 9A06              ;
  38+ 9A06              ;   27/05/23
  39+ 9A06              ;
  40+ 9A06              ;	Mov_down
  41+ 9A06              ;
  42+ 9A06              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A06              ;
  44+ 9A06              ;
  45+ 9A06              Mov_down
  46+ 9A06
  47+ 9A06 CD 68 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A09              ;																	; _ repone (Puntero_objeto).
  49+ 9A09 21 E3 89     	ld hl,Ctrl_0
  50+ 9A0C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A0E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A0E              ; 																	; _ en el caso de que no lo haya.
  53+ 9A0E 3A CD 89     	ld a,(Vel_down)
  54+ 9A11 47           	ld b,a
  55+ 9A12 2A B7 89         ld hl,(Posicion_actual)
  56+ 9A15 CD C0 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A18 E6 02        	and 2
  58+ 9A1A 28 0F        	jr z,1F
  59+ 9A1C
  60+ 9A1C              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A1C              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A1C
  63+ 9A1C 7C           	ld a,h
  64+ 9A1D FE 57        	cp $57
  65+ 9A1F 20 0A        	jr nz,1F
  66+ 9A21
  67+ 9A21 7D           	ld a,l
  68+ 9A22 C6 20        	add $20
  69+ 9A24 30 05        	jr nc,1F
  70+ 9A26
  71+ 9A26              ; ------------------------------
  72+ 9A26              ;	call Reaparece_arriba
  73+ 9A26 CD 25 9D     	call Reinicio
  74+ 9A29              ; ------------------------------
  75+ 9A29
  76+ 9A29 18 08        	jr 3F
  77+ 9A2B CD F4 96     1 call NextScan
  78+ 9A2E 22 B7 89     	ld (Posicion_actual),hl
  79+ 9A31 10 E2            djnz 2B
  80+ 9A33 CD 4B 9D     3 call Genera_coordenadas
  81+ 9A36 C9           	ret
  82+ 9A37
  83+ 9A37              ; ******************************************************************************************************************************************************************************************
  84+ 9A37              ;
  85+ 9A37              ;   27/05/23
  86+ 9A37              ;
  87+ 9A37              ;	Mov_up
  88+ 9A37              ;
  89+ 9A37              ; 	Mueve el Sprite hacia arriba.
  90+ 9A37              ;
  91+ 9A37              ;
  92+ 9A37              Mov_up
  93+ 9A37
  94+ 9A37 CD 68 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A3A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A3A 21 E3 89     	ld hl,Ctrl_0
  97+ 9A3D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A3F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A3F              ; 																		; _ en el caso de que no lo haya.
 100+ 9A3F 3A CC 89     	ld a,(Vel_up)
 101+ 9A42 47           	ld b,a
 102+ 9A43 2A B7 89     	ld hl,(Posicion_actual)
 103+ 9A46 CD C0 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A49 A7           	and a
 105+ 9A4A 20 10        	jr nz,1F
 106+ 9A4C
 107+ 9A4C              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A4C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A4C
 110+ 9A4C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A4D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A4F 20 0B            jr nz,1F
 113+ 9A51 7D               ld a,l
 114+ 9A52 D6 20            sub $20
 115+ 9A54 30 06            jr nc,1F
 116+ 9A56 25               dec h
 117+ 9A57
 118+ 9A57              ; -----------------------------
 119+ 9A57 CD 06 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A5A              ;	call Reinicio
 121+ 9A5A              ; -----------------------------
 122+ 9A5A
 123+ 9A5A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A5C CD 03 97     1 call PreviousScan
 125+ 9A5F 22 B7 89     	ld (Posicion_actual),hl
 126+ 9A62 10 E2            djnz 3B
 127+ 9A64 CD 4B 9D     2 call Genera_coordenadas
 128+ 9A67 C9           	ret
 129+ 9A68
 130+ 9A68              ; -----------------------------
 131+ 9A68              ;
 132+ 9A68              ;	27/5/23
 133+ 9A68              ;
 134+ 9A68              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A68              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A68              ;
 137+ 9A68              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A68              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A68              ;
 140+ 9A68              ;	Modifica: A y (Puntero_objeto).
 141+ 9A68
 142+ 9A68 3A F6 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A6B CB 47        	bit 0,a
 144+ 9A6D C8           	ret z
 145+ 9A6E CB 87        	res 0,a
 146+ 9A70 32 F6 89     	ld (Ctrl_2),a
 147+ 9A73 2A F9 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A76 22 B9 89     	ld (Puntero_objeto),hl
 149+ 9A79 C9           	ret
 150+ 9A7A
 151+ 9A7A              ; ******************************************************************************************************************************************************************************************
 152+ 9A7A              ;
 153+ 9A7A              ;	19/10/22
 154+ 9A7A              ;
 155+ 9A7A              ;	Mov_right.
 156+ 9A7A              ;
 157+ 9A7A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A7A              ;
 159+ 9A7A
 160+ 9A7A 21 E3 89     Mov_right ld hl,Ctrl_0
 161+ 9A7D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A7F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A7F              ; 																	; _ en el caso de que no lo haya.
 164+ 9A7F 3A E3 89     	ld a,(Ctrl_0)
 165+ 9A82 CB 77        	bit 6,a
 166+ 9A84 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A86
 168+ 9A86 CD B4 9C     	call Stop_Amadeus_right
 169+ 9A89 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A8A 18 4D        	jr 8F
 171+ 9A8C
 172+ 9A8C 3A BB 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A8F FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A91 20 46        	jr nz,8F
 175+ 9A93
 176+ 9A93 3A BD 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A96 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A97 28 40        	jr z,8F
 179+ 9A99
 180+ 9A99              ; ---------- ---------- ----------
 181+ 9A99              ;
 182+ 9A99              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A99
 184+ 9A99 3A CB 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A9C FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A9E 28 11        	jr z,1F
 187+ 9AA0 38 06        	jr c,6F
 188+ 9AA2 FE 04        	cp 4
 189+ 9AA4 28 14        	jr z,7F
 190+ 9AA6 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AA8
 192+ 9AA8              ; ---------- ---------- ----------
 193+ 9AA8              ;
 194+ 9AA8              ; Perfiles de velocidad
 195+ 9AA8              ;
 196+ 9AA8
 197+ 9AA8 3A BD 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AAB FE FE        	cp $fe
 199+ 9AAD 20 2A        	jr nz,8F
 200+ 9AAF 18 10        	jr 3F
 201+ 9AB1 3A BD 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9AB4 FE FD        	cp $fd
 203+ 9AB6 20 21        	jr nz,8F
 204+ 9AB8 18 07        	jr 3F
 205+ 9ABA 3A BD 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9ABD FE FB        	cp $fb
 207+ 9ABF 20 18        	jr nz,8F
 208+ 9AC1
 209+ 9AC1              ; ---------- ---------- ----------
 210+ 9AC1
 211+ 9AC1              3
 212+ 9AC1 CD F4 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9AC4              ;	call Reinicio
 214+ 9AC4
 215+ 9AC4              ; ---------- ---------- ----------
 216+ 9AC4              ;
 217+ 9AC4              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9AC4
 219+ 9AC4 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9AC6 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AC7 CD E0 9A     	call DESPLZ_DER
 222+ 9ACA C1           	pop bc
 223+ 9ACB 10 F9        	djnz 5B
 224+ 9ACD 2A B7 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AD0 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9AD1 22 B7 89     	ld (Posicion_actual),hl
 227+ 9AD4 CD 4B 9D     	call Genera_coordenadas
 228+ 9AD7 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AD9
 230+ 9AD9              ; ---------- ---------- ----------
 231+ 9AD9
 232+ 9AD9 2A B7 89     8 ld hl,(Posicion_actual)
 233+ 9ADC CD E0 9A     	call DESPLZ_DER
 234+ 9ADF C9           2 ret
 235+ 9AE0
 236+ 9AE0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AE0              ;
 238+ 9AE0              ;	22/9/22
 239+ 9AE0              ;
 240+ 9AE0
 241+ 9AE0 CD EF 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AE3 CD 3B 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AE6 CD 64 9B         call Ciclo_completo
 244+ 9AE9 21 E3 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AEC CB FE        	set 7,(hl)
 246+ 9AEE C9           	ret
 247+ 9AEF
 248+ 9AEF              ; ******************************************************************************************************************************************************************************************
 249+ 9AEF              ;	15/02/23
 250+ 9AEF              ;
 251+ 9AEF
 252+ 9AEF 3A CB 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9AF2 47           	ld b,a
 254+ 9AF3 2A C3 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AF6 23           1 inc hl
 256+ 9AF7 23           	inc hl
 257+ 9AF8 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9AFA 22 C3 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9AFD CD 95 8D     	call Extrae_address
 260+ 9B00 22 B9 89     	ld (Puntero_objeto),hl
 261+ 9B03
 262+ 9B03              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B03
 264+ 9B03              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B03              ; Cuántos movimientos hemos hecho ??
 266+ 9B03              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B03
 268+ 9B03 2A BF 89     7 ld hl,(Indice_Sprite_der)
 269+ 9B06 EB           	ex de,hl
 270+ 9B07 A7           	and a
 271+ 9B08 ED 52        	sbc hl,de
 272+ 9B0A CB 3D        	srl l
 273+ 9B0C 3E 08        6 ld a,8
 274+ 9B0E 95           	sub l
 275+ 9B0F 30 1E        	jr nc,3F
 276+ 9B11
 277+ 9B11              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B11              ; B="0".
 279+ 9B11
 280+ 9B11 04           4 inc b
 281+ 9B12 3C           	inc a
 282+ 9B13 20 FC        	jr nz,4B
 283+ 9B15 78           	ld a,b
 284+ 9B16 08           	ex af,af
 285+ 9B17 2A BF 89     	ld hl,(Indice_Sprite_der)
 286+ 9B1A 23           5 inc hl
 287+ 9B1B 23           	inc hl
 288+ 9B1C 10 FC        	djnz 5B
 289+ 9B1E 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9B21 CD 95 8D     	call Extrae_address
 291+ 9B24 22 B9 89     	ld (Puntero_objeto),hl
 292+ 9B27
 293+ 9B27              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B27              ; _(Posicion_actual).
 295+ 9B27
 296+ 9B27 21 B7 89     	ld hl,Posicion_actual
 297+ 9B2A 34           	inc (hl)
 298+ 9B2B 08               ex af,af
 299+ 9B2C 6F           	ld l,a
 300+ 9B2D 18 DD        	jr 6B
 301+ 9B2F
 302+ 9B2F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B2F
 304+ 9B2F 47           3 ld b,a
 305+ 9B30 2A C1 89     	ld hl,(Indice_Sprite_izq)
 306+ 9B33 23           2 inc hl
 307+ 9B34 23           	inc hl
 308+ 9B35 10 FC        	djnz 2B
 309+ 9B37 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B3A C9           8 ret
 311+ 9B3B
 312+ 9B3B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B3B              ;
 314+ 9B3B              ;	24/7/22
 315+ 9B3B              ;
 316+ 9B3B              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B3B              ;
 318+ 9B3B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B3B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B3B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B3B
 322+ 9B3B 3A BD 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B3E A7           	and a
 324+ 9B3F 20 1F        	jr nz,1F
 325+ 9B41 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B43 32 BD 89         ld (CTRL_DESPLZ),a
 327+ 9B46
 328+ 9B46 21 B6 89     	ld hl,Columns
 329+ 9B49 34           	inc (hl)
 330+ 9B4A 3A C9 89     	ld a,(Cuad_objeto)
 331+ 9B4D E6 01        	and 1
 332+ 9B4F 28 0F        	jr z,1F
 333+ 9B51 2A B7 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B54 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B55 22 B7 89     	ld (Posicion_actual),hl
 336+ 9B58 CD 4B 9D     	call Genera_coordenadas
 337+ 9B5B CD C0 9C     	call Inc_CTRL_DESPLZ
 338+ 9B5E 18 03        	jr 2F
 339+ 9B60 CD C0 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B63 C9           2 ret
 341+ 9B64
 342+ 9B64              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B64              ;
 344+ 9B64              ;	24/7/22
 345+ 9B64              ;
 346+ 9B64              ;	Ciclo_completo.
 347+ 9B64              ;
 348+ 9B64              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B64              ;
 350+ 9B64              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B64              ; 	Decrementamos (Columns).
 352+ 9B64              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B64              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B64
 355+ 9B64
 356+ 9B64 3A BD 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B67 FE FF        	cp $ff
 358+ 9B69 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B6B E6 F0        	and $f0
 360+ 9B6D 20 28        	jr nz,3F
 361+ 9B6F
 362+ 9B6F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B6F
 364+ 9B6F 3A BD 89     	ld a,(CTRL_DESPLZ)
 365+ 9B72 47           	ld b,a
 366+ 9B73 3E F8        	ld a,$f8
 367+ 9B75 80           	add b
 368+ 9B76 32 BD 89     	ld (CTRL_DESPLZ),a
 369+ 9B79 18 1C        	jr 3F
 370+ 9B7B 21 B6 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B7E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B7F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B80 32 BD 89     	ld (CTRL_DESPLZ),a
 374+ 9B83 3A C9 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B86 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B88 20 0A        	jr nz,2F
 377+ 9B8A 2A B7 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B8D 23           	inc hl
 379+ 9B8E 22 B7 89     	ld (Posicion_actual),hl
 380+ 9B91 CD 4B 9D     	call Genera_coordenadas
 381+ 9B94
 382+ 9B94              ; Inicia el puntero de Sprite.
 383+ 9B94
 384+ 9B94 CD AC 8D     2 call Inicia_puntero_objeto_der
 385+ 9B97 C9           3 ret
 386+ 9B98
 387+ 9B98              ; ******************************************************************************************************************************************************************************************
 388+ 9B98              ;
 389+ 9B98              ;	15/02/23
 390+ 9B98              ;
 391+ 9B98              ;	Mov_left.
 392+ 9B98              ;
 393+ 9B98              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B98              ;
 395+ 9B98 21 E3 89     Mov_left ld hl,Ctrl_0
 396+ 9B9B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9B9D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9B9D              ; 																	; _ en el caso de que no lo haya.
 399+ 9B9D 3A E3 89     	ld a,(Ctrl_0)
 400+ 9BA0 CB 77        	bit 6,a
 401+ 9BA2 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9BA4
 403+ 9BA4 CD BA 9C     	call Stop_Amadeus_left
 404+ 9BA7 C8           	ret z
 405+ 9BA8 20 4A        	jr nz,8F
 406+ 9BAA
 407+ 9BAA 3A BB 89     11 ld a,(Coordenada_X)
 408+ 9BAD A7           	and a
 409+ 9BAE 20 44        	jr nz,8F
 410+ 9BB0
 411+ 9BB0 3A BD 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9BB3 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9BB4 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9BB6
 415+ 9BB6              ; ---------- ---------- ----------
 416+ 9BB6
 417+ 9BB6 3A CA 89     	ld a,(Vel_left)
 418+ 9BB9 FE 02        	cp 2
 419+ 9BBB 28 0F        	jr z,1F
 420+ 9BBD 38 04        	jr c,6F
 421+ 9BBF FE 04        	cp 4
 422+ 9BC1 28 12        	jr z,7F
 423+ 9BC3
 424+ 9BC3              ; ---------- ---------- ----------
 425+ 9BC3
 426+ 9BC3 3A BD 89     6 ld a,(CTRL_DESPLZ)
 427+ 9BC6 FE F8        	cp $f8
 428+ 9BC8 20 2A        	jr nz,8F
 429+ 9BCA 18 10        	jr 4F
 430+ 9BCC 3A BD 89     1 ld a,(CTRL_DESPLZ)
 431+ 9BCF FE F9        	cp $f9
 432+ 9BD1 20 21        	jr nz,8F
 433+ 9BD3 18 07        	jr 4F
 434+ 9BD5 3A BD 89     7 ld a,(CTRL_DESPLZ)
 435+ 9BD8 FE FB        	cp $fb
 436+ 9BDA 20 18        	jr nz,8F
 437+ 9BDC
 438+ 9BDC              ; ---------- ---------- ----------
 439+ 9BDC
 440+ 9BDC              4
 441+ 9BDC CD E2 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9BDF              ;	call Reinicio
 443+ 9BDF
 444+ 9BDF              ; ---------- ---------- ----------
 445+ 9BDF
 446+ 9BDF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9BE1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9BE2
 449+ 9BE2              ;	ld hl,(Indice_Sprite_izq)
 450+ 9BE2              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9BE2
 452+ 9BE2 CD FB 9B     	call DESPLZ_IZQ
 453+ 9BE5 C1           	pop bc
 454+ 9BE6 10 F9        	djnz 5B
 455+ 9BE8 2A B7 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9BEB 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9BEC 22 B7 89     	ld (Posicion_actual),hl
 458+ 9BEF CD 4B 9D     	call Genera_coordenadas
 459+ 9BF2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9BF4
 461+ 9BF4              ; ---------- ---------- ----------
 462+ 9BF4
 463+ 9BF4              ; Movemos, no hay recolocación.
 464+ 9BF4
 465+ 9BF4 2A B7 89     8 ld hl,(Posicion_actual)
 466+ 9BF7 CD FB 9B     	call DESPLZ_IZQ
 467+ 9BFA C9           2 ret
 468+ 9BFB
 469+ 9BFB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9BFB              ;
 471+ 9BFB              ;	22/9/22
 472+ 9BFB
 473+ 9BFB              DESPLZ_IZQ
 474+ 9BFB
 475+ 9BFB CD 0A 9C     	call Desplaza_izquierda
 476+ 9BFE CD 56 9C         call modifica_parametros_1er_DESPLZ
 477+ 9C01 CD 7E 9C     	call Ciclo_completo_2
 478+ 9C04 21 E3 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9C07 CB BE        	res 7,(hl)
 480+ 9C09 C9           	ret
 481+ 9C0A
 482+ 9C0A              Desplaza_izquierda
 483+ 9C0A
 484+ 9C0A 3A CA 89     	ld a,(Vel_left)
 485+ 9C0D 47           	ld b,a
 486+ 9C0E 2A C5 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9C11 23           1 inc hl
 488+ 9C12 23           	inc hl
 489+ 9C13 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9C15 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9C18 CD 95 8D     	call Extrae_address
 492+ 9C1B 22 B9 89     	ld (Puntero_objeto),hl
 493+ 9C1E
 494+ 9C1E              ; Modifica (Puntero_DESPLZ_der).
 495+ 9C1E
 496+ 9C1E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9C1E              ; Cuántos movimientos hemos hecho ??
 498+ 9C1E              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9C1E
 500+ 9C1E 2A C1 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9C21 EB           	ex de,hl
 502+ 9C22 A7           	and a
 503+ 9C23 ED 52        	sbc hl,de
 504+ 9C25 CB 3D        	srl l
 505+ 9C27 3E 08        6 ld a,8
 506+ 9C29 95           	sub l
 507+ 9C2A 30 1E        	jr nc,3F
 508+ 9C2C
 509+ 9C2C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9C2C              ; B="0".
 511+ 9C2C
 512+ 9C2C 04           4 inc b
 513+ 9C2D 3C           	inc a
 514+ 9C2E 20 FC        	jr nz,4B
 515+ 9C30 78           	ld a,b
 516+ 9C31 08           	ex af,af
 517+ 9C32 2A C1 89     	ld hl,(Indice_Sprite_izq)
 518+ 9C35 23           5 inc hl
 519+ 9C36 23           	inc hl
 520+ 9C37 10 FC        	djnz 5B
 521+ 9C39 22 C5 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9C3C CD 95 8D     	call Extrae_address
 523+ 9C3F 22 B9 89     	ld (Puntero_objeto),hl
 524+ 9C42
 525+ 9C42              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9C42              ; _(Posicion_actual).
 527+ 9C42
 528+ 9C42 21 B7 89     	ld hl,Posicion_actual
 529+ 9C45 35           	dec (hl)
 530+ 9C46 08           	ex af,af
 531+ 9C47 6F           	ld l,a
 532+ 9C48 18 DD        	jr 6B
 533+ 9C4A
 534+ 9C4A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9C4A
 536+ 9C4A 47           3 ld b,a
 537+ 9C4B 2A BF 89     	ld hl,(Indice_Sprite_der)
 538+ 9C4E 23           2 inc hl
 539+ 9C4F 23           	inc hl
 540+ 9C50 10 FC        	djnz 2B
 541+ 9C52 22 C3 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9C55 C9           8 ret
 543+ 9C56
 544+ 9C56              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9C56              ;
 546+ 9C56              ;	modifica_parametros_1er_DESPLZ
 547+ 9C56              ;
 548+ 9C56              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9C56              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9C56              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9C56
 552+ 9C56 3A BD 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9C59 A7           	and a
 554+ 9C5A 20 1E        	jr nz,1F
 555+ 9C5C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9C5D 32 BD 89         ld (CTRL_DESPLZ),a
 557+ 9C60 21 B6 89     	ld hl,Columns
 558+ 9C63 34           	inc (hl)
 559+ 9C64 3A C9 89     	ld a,(Cuad_objeto)
 560+ 9C67 E6 01        	and 1
 561+ 9C69 20 0F        	jr nz,1F
 562+ 9C6B 2A B7 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9C6E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9C6F 22 B7 89     	ld (Posicion_actual),hl
 565+ 9C72 CD 4B 9D     	call Genera_coordenadas
 566+ 9C75 CD D1 9C     	call Dec_CTRL_DESPLZ
 567+ 9C78 18 03        	jr 2F
 568+ 9C7A CD D1 9C     1 call Dec_CTRL_DESPLZ
 569+ 9C7D C9           2 ret
 570+ 9C7E
 571+ 9C7E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9C7E
 573+ 9C7E 3A BD 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9C81 FE F7        	cp $f7
 575+ 9C83 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9C85 30 2C        	jr nc,3F
 577+ 9C87
 578+ 9C87              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9C87
 580+ 9C87 06 00        	ld b,0
 581+ 9C89 04           4 inc b
 582+ 9C8A 3C           	inc a
 583+ 9C8B FE F7        	cp $f7
 584+ 9C8D 20 FA        	jr nz,4B
 585+ 9C8F 3E FF        	ld a,$ff
 586+ 9C91 90           	sub b
 587+ 9C92 32 BD 89     	ld (CTRL_DESPLZ),a
 588+ 9C95 18 1C        	jr 3F
 589+ 9C97
 590+ 9C97              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9C97
 592+ 9C97 21 B6 89     1 ld hl,Columns
 593+ 9C9A 35           	dec (hl)
 594+ 9C9B AF           	xor a
 595+ 9C9C 32 BD 89     	ld (CTRL_DESPLZ),a
 596+ 9C9F 3A C9 89     	ld a,(Cuad_objeto)
 597+ 9CA2 E6 01        	and 1
 598+ 9CA4 28 0A        	jr z,2F
 599+ 9CA6 2A B7 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9CA9 2B           	dec hl
 601+ 9CAA 22 B7 89     	ld (Posicion_actual),hl
 602+ 9CAD CD 4B 9D     	call Genera_coordenadas
 603+ 9CB0
 604+ 9CB0              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9CB0
 606+ 9CB0 CD BF 8D     2 call Inicia_puntero_objeto_izq
 607+ 9CB3 C9           3 ret
 608+ 9CB4
 609+ 9CB4              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9CB4              ;
 611+ 9CB4              ;	19/10/22
 612+ 9CB4              ;
 613+ 9CB4              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9CB4              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9CB4
 616+ 9CB4 3A BB 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9CB7 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9CB9 C9           	ret
 619+ 9CBA
 620+ 9CBA              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9CBA              ;
 622+ 9CBA              ;	19/10/22
 623+ 9CBA              ;
 624+ 9CBA              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9CBA              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9CBA
 627+ 9CBA 3A BB 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9CBD FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9CBF C9           	ret
 630+ 9CC0
 631+ 9CC0              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9CC0              ;
 633+ 9CC0              ;	24/7/22
 634+ 9CC0              ;
 635+ 9CC0              ;	Inc_CTRL_DESPLZ
 636+ 9CC0              ;
 637+ 9CC0              ;
 638+ 9CC0              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9CC0
 640+ 9CC0 21 BD 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9CC3 3A CB 89     	ld a,(Vel_right)
 642+ 9CC6 A7           	and a
 643+ 9CC7 28 06        	jr z,1F
 644+ 9CC9 47           	ld b,a
 645+ 9CCA 34           3 inc (hl)
 646+ 9CCB 10 FD        	djnz 3B
 647+ 9CCD 18 01        	jr 2F
 648+ 9CCF 34           1 inc (hl)
 649+ 9CD0 C9           2 ret
 650+ 9CD1
 651+ 9CD1              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9CD1              ;
 653+ 9CD1              ;	5/2/23
 654+ 9CD1              ;
 655+ 9CD1              ;	Dec_CTRL_DESPLZ
 656+ 9CD1              ;
 657+ 9CD1              ;
 658+ 9CD1              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9CD1
 660+ 9CD1 21 BD 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9CD4 3A CA 89     	ld a,(Vel_left)
 662+ 9CD7 A7           	and a
 663+ 9CD8 28 06        	jr z,1F
 664+ 9CDA 47           	ld b,a
 665+ 9CDB 35           3 dec (hl)
 666+ 9CDC 10 FD        	djnz 3B
 667+ 9CDE 18 01        	jr 2F
 668+ 9CE0 35           1 dec (hl)
 669+ 9CE1 C9           2 ret
 670+ 9CE2
 671+ 9CE2              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9CE2
 673+ 9CE2 2A B7 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9CE5 01 1F 00     	ld bc,31
 675+ 9CE8 A7           	and a
 676+ 9CE9 ED 4A        	adc hl,bc
 677+ 9CEB 22 B7 89     	ld (Posicion_actual),hl
 678+ 9CEE 21 E3 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9CF1 CB C6        	set 0,(hl)
 680+ 9CF3 C9           	ret
 681+ 9CF4
 682+ 9CF4              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9CF4
 684+ 9CF4 2A B7 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9CF7 01 1F 00     	ld bc,31
 686+ 9CFA A7           	and a
 687+ 9CFB ED 42        	sbc hl,bc
 688+ 9CFD 22 B7 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9D00 21 E3 89     	ld hl,Ctrl_0
 690+ 9D03 CB CE        	set 1,(hl)
 691+ 9D05 C9           	ret
 692+ 9D06
 693+ 9D06              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9D06
 695+ 9D06 24           Reaparece_abajo inc h
 696+ 9D07 01 E0 17     	ld bc,$17e0
 697+ 9D0A A7           	and a
 698+ 9D0B ED 4A        	adc hl,bc
 699+ 9D0D 22 B7 89     	ld (Posicion_actual),hl
 700+ 9D10 21 E3 89     	ld hl,Ctrl_0
 701+ 9D13 CB D6        	set 2,(hl)
 702+ 9D15 C9           	ret
 703+ 9D16
 704+ 9D16              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9D16
 706+ 9D16 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9D19 A7           	and a
 708+ 9D1A ED 42        	sbc hl,bc
 709+ 9D1C 22 B7 89     	ld (Posicion_actual),hl
 710+ 9D1F 21 E3 89     	ld hl,Ctrl_0
 711+ 9D22 CB DE        	set 3,(hl)
 712+ 9D24 C9           	ret
 713+ 9D25
 714+ 9D25              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9D25              ;
 716+ 9D25              ;	15/07/23
 717+ 9D25
 718+ 9D25              Reinicio
 719+ 9D25
 720+ 9D25              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9D25
 722+ 9D25 AF           	xor a
 723+ 9D26 21 EA 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9D29 CD 47 9D     	call Limpia_contenido_hl
 725+ 9D2C
 726+ 9D2C 21 B7 89     	ld hl,Posicion_actual
 727+ 9D2F CD 47 9D     	call Limpia_contenido_hl
 728+ 9D32
 729+ 9D32 CD 68 A0     	call Inicializa_Puntero_indice_mov
 730+ 9D35 CD F2 9F     	call Inicia_Puntero_mov
 731+ 9D38
 732+ 9D38 21 EC 89     	ld hl,Incrementa_puntero
 733+ 9D3B 06 05        	ld b,5
 734+ 9D3D 77           1 ld (hl),a
 735+ 9D3E 23           	inc hl
 736+ 9D3F 10 FC        	djnz 1B
 737+ 9D41
 738+ 9D41 21 F6 89     	ld hl,Ctrl_2
 739+ 9D44 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9D46
 741+ 9D46 C9           	ret
 742+ 9D47
 743+ 9D47 77           Limpia_contenido_hl	ld (hl),a
 744+ 9D48 23           	inc hl
 745+ 9D49 77           	ld (hl),a
 746+ 9D4A C9           	ret
 747+ 9D4B
 748+ 9D4B
# file closed: Direcciones.asm
1459  9D4B              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D4B              ; ------------------------------------------------------------------------
   2+ 9D4B              ;
   3+ 9D4B              ;	02/04/23
   4+ 9D4B              ;
   5+ 9D4B              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D4B              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D4B              ;
   8+ 9D4B              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D4B              ;
  10+ 9D4B              ;	Modifica: A,BC y DE.
  11+ 9D4B
  12+ 9D4B C5           Genera_coordenadas push bc
  13+ 9D4C E5           	push hl
  14+ 9D4D D5           	push de
  15+ 9D4E
  16+ 9D4E 2A B7 89     	ld hl,(Posicion_actual)
  17+ 9D51
  18+ 9D51 7D           	ld a,l
  19+ 9D52 E6 1F        	and $1f
  20+ 9D54 32 BB 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D57
  22+ 9D57 CD C0 99     	call calcula_tercio
  23+ 9D5A 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D5B
  25+ 9D5B 1E 00        	ld e,0
  26+ 9D5D 7D           	ld a,l
  27+ 9D5E E6 E0        	and $e0
  28+ 9D60 28 01        	jr z,1F
  29+ 9D62 04           	inc b
  30+ 9D63
  31+ 9D63 04           1 inc b
  32+ 9D64 05           	dec b
  33+ 9D65 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D67              ;														; _ , salimos.
  35+ 9D67 1C           3 inc e
  36+ 9D68 D6 20        	sub 32
  37+ 9D6A 20 FB        	jr nz,3B
  38+ 9D6C 10 F5        	djnz 1B
  39+ 9D6E
  40+ 9D6E 7B           2 ld a,e
  41+ 9D6F 32 BC 89     	ld (Coordenada_y),a
  42+ 9D72
  43+ 9D72 D1           	pop de
  44+ 9D73 E1           	pop hl
  45+ 9D74 C1           	pop bc
  46+ 9D75
  47+ 9D75 C9           	ret
  48+ 9D76
  49+ 9D76              ; ------------------------------------------------------------------------
  50+ 9D76              ;	28/05/23
  51+ 9D76              ;
  52+ 9D76              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D76              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D76              ;
  55+ 9D76              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D76              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D76              ;
  58+ 9D76              ;		DE="$120d"
  59+ 9D76              ;
  60+ 9D76              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D76              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D76              ;
  63+ 9D76              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D76
  65+ 9D76              ;	Modifica: A,BC y DE.
  66+ 9D76
  67+ 9D76
  68+ 9D76              Genera_coordenadas_disparo
  69+ 9D76
  70+ 9D76              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D76
  72+ 9D76 7D           	ld a,l
  73+ 9D77 E6 1F        	and $1f
  74+ 9D79 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D7A CD C0 99     	call calcula_tercio
  76+ 9D7D 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D7E 1E 00        	ld e,0
  78+ 9D80 7D           	ld a,l
  79+ 9D81 E6 E0        	and $e0
  80+ 9D83 28 01        	jr z,1F
  81+ 9D85 04           	inc b
  82+ 9D86 1C           1 inc e
  83+ 9D87 D6 20        	sub 32
  84+ 9D89 20 FB        	jr nz,1B
  85+ 9D8B 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D8D C9           	ret
  87+ 9D8E
# file closed: Genera_coordenadas.asm
1460  9D8E              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D8E
   2+ 9D8E
   3+ 9D8E              ;   07/07/23
   4+ 9D8E              ;
   5+ 9D8E              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D8E              ;
   7+ 9D8E              ;   Codificación:
   8+ 9D8E              ;
   9+ 9D8E              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D8E              ;
  11+ 9D8E              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D8E              ;
  13+ 9D8E              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D8E              ;
  15+ 9D8E              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D8E              ;
  17+ 9D8E              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D8E              ;                               ..... %01000010 Vel_up 4
  19+ 9D8E              ;                                               Vel_down 2
  20+ 9D8E              ;                               ..... $42
  21+ 9D8E              ;
  22+ 9D8E              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D8E              ;
  24+ 9D8E              ;                               ..... %01000010 Vel_left 4
  25+ 9D8E              ;                                               Vel_right 2
  26+ 9D8E              ;                               ..... $42
  27+ 9D8E              ;
  28+ 9D8E              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D8E              ;
  30+ 9D8E              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D8E              ;
  32+ 9D8E              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D8E              ;
  34+ 9D8E              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D8E              ;                                     $53
  36+ 9D8E              ;
  37+ 9D8E              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D8E              ;
  39+ 9D8E              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D8E              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D8E              ;
  42+ 9D8E              ;                       Arriba ..... $81
  43+ 9D8E              ;                       Arriba - izquierda ..... $a1
  44+ 9D8E              ;                       Arriba - derecha ..... $91
  45+ 9D8E              ;
  46+ 9D8E              ;                       Abajo ..... $41
  47+ 9D8E              ;                       Abajo - izquierda ..... $61
  48+ 9D8E              ;                       Abajo - derecha ..... $51
  49+ 9D8E              ;
  50+ 9D8E              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D8E              ;
  52+ 9D8E              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D8E              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D8E              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D8E              ;
  56+ 9D8E              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D8E              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D8E              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D8E              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D8E              ;
  61+ 9D8E              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D8E              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D8E              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D8E              ;
  65+ 9D8E              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D8E              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D8E              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D8E              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D8E
  70+ 9D8E              ; ----- ----- ----- ----- -----
  71+ 9D8E
  72+ 9D8E BA 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D90 C2 9D            defw F_1
  74+ 9D92 CC 9D            defw F_2
  75+ 9D94 D6 9D            defw Codo_abajo_derecha
  76+ 9D96 0A 9E            defw Derecha_y_subiendo
  77+ 9D98 14 9E            defw Derecha_y_subiendo_1
  78+ 9D9A 1E 9E            defw F_3
  79+ 9D9C 28 9E            defw F_4
  80+ 9D9E 32 9E            defw Derecha_y_bajando
  81+ 9DA0 3C 9E            defw Derecha_y_bajando_1
  82+ 9DA2 46 9E            defw Derecha_y_bajando_2
  83+ 9DA4 50 9E            defw Codo_derecha_abajo
  84+ 9DA6 80 9E            defw Codo_abajo_izq.
  85+ 9DA8 B4 9E            defw Izquierda_y_subiendo
  86+ 9DAA BE 9E            defw Izquierda_y_subiendo_1
  87+ 9DAC C8 9E            defw F_5
  88+ 9DAE D2 9E            defw F_6
  89+ 9DB0 DC 9E            defw Izquierda_y_bajando
  90+ 9DB2 E6 9E            defw Izquierda_y_bajando_1
  91+ 9DB4 F0 9E            defw Izquierda_y_bajando_2
  92+ 9DB6 FA 9E            defw Codo_izquierda_abajo
  93+ 9DB8 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DBA
  95+ 9DBA 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DBE 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DC2
  98+ 9DC2 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DC6 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DCA 08 00
 100+ 9DCC 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DD0 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DD4 0F FE
 102+ 9DD6
 103+ 9DD6 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DDA 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DDE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DE2 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DE6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9DEA 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9DEE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9DF2 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9DF6 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9DFA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9DFE 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E02 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E06 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E0A
 117+ 9E0A 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E0E 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E12 06 00
 119+ 9E14
 120+ 9E14 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E18 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E1C 02 00
 122+ 9E1E
 123+ 9E1E 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E22 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E26 04 00
 125+ 9E28 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E2C 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E30 08 00
 127+ 9E32
 128+ 9E32 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E36 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E3A 02 00
 130+ 9E3C
 131+ 9E3C 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E40 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E44 06 00
 133+ 9E46
 134+ 9E46 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E4A 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E4E 06 00
 136+ 9E50
 137+ 9E50              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E50
 139+ 9E50 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E54 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E58 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E60 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E64 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E68 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E6C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E70 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E74 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E78 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E7C 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E80
 152+ 9E80 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E84 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E88 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E8C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E90 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E94 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E98 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E9C 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EA0 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EA4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EA8 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EAC 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EB0 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9EB4
 166+ 9EB4 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9EB8 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9EBC 06 00
 168+ 9EBE
 169+ 9EBE 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EC2 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EC6 02 00
 171+ 9EC8
 172+ 9EC8 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9ECC 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9ED0 04 00
 174+ 9ED2 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9ED6 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EDA 08 00
 176+ 9EDC
 177+ 9EDC 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EE0 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EE4 02 00
 179+ 9EE6
 180+ 9EE6 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9EEA 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9EEE 06 00
 182+ 9EF0
 183+ 9EF0 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9EF4 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9EF8 06 00
 185+ 9EFA
 186+ 9EFA 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9EFE 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F02 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F06 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F0A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F0E 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F12 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F16 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F1A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F1E 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F22 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F26 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F2A
 199+ 9F2A              ; ----- ----- ----- ----- -----
 200+ 9F2A              ;
 201+ 9F2A              ;   27/06/23
 202+ 9F2A
 203+ 9F2A              Movimiento
 204+ 9F2A
 205+ 9F2A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F2A
 207+ 9F2A              ;    ld hl,(Posicion_actual)
 208+ 9F2A
 209+ 9F2A 3A F6 89         ld a,(Ctrl_2)
 210+ 9F2D CB 57            bit 2,a
 211+ 9F2F 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9F31
 213+ 9F31 2A E8 89         ld hl,(Puntero_mov)
 214+ 9F34 7E               ld a,(hl)
 215+ 9F35
 216+ 9F35              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9F35
 218+ 9F35              Inicia_desplazamiento.
 219+ 9F35
 220+ 9F35              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9F35
 222+ 9F35 CD 29 A0         call Ajusta_velocidad_desplazamiento
 223+ 9F38
 224+ 9F38              ; Iniciamos (Repetimos_mov).
 225+ 9F38
 226+ 9F38 7E               ld a,(hl)
 227+ 9F39 E6 0F            and $0f
 228+ 9F3B 32 EE 89         ld (Repetimos_desplazamiento),a
 229+ 9F3E 32 EF 89         ld (Repetimos_desplazamiento_backup),a
 230+ 9F41
 231+ 9F41              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9F41
 233+ 9F41 23               inc hl
 234+ 9F42 7E               ld a,(hl)
 235+ 9F43 32 F1 89         ld (Cola_de_desplazamiento),a
 236+ 9F46 2B               dec hl
 237+ 9F47
 238+ 9F47 21 F6 89         ld hl,Ctrl_2
 239+ 9F4A CB D6            set 2,(hl)
 240+ 9F4C
 241+ 9F4C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9F4C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9F4C
 244+ 9F4C              Desplazamiento_iniciado
 245+ 9F4C
 246+ 9F4C CD FD 9F         call Aplica_desplazamiento
 247+ 9F4F
 248+ 9F4F 3A F6 89         ld a,(Ctrl_2)
 249+ 9F52 CB 67            bit 4,a
 250+ 9F54 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9F55
 252+ 9F55 21 EE 89     3 ld hl,Repetimos_desplazamiento
 253+ 9F58 35               dec (hl)
 254+ 9F59 C0               ret nz
 255+ 9F5A
 256+ 9F5A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9F5A              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9F5A              ; Analiza (Cola_de_desplazamiento).
 259+ 9F5A
 260+ 9F5A 3A F1 89     Cola ld a,(Cola_de_desplazamiento)
 261+ 9F5D A7               and a
 262+ 9F5E CC 52 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9F61 28 30            jr z,Reinicia_el_movimiento
 264+ 9F63
 265+ 9F63 FE FF            cp $ff
 266+ 9F65 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9F67
 268+ 9F67 FE FE            cp $fe
 269+ 9F69 CC D6 9F         call z,Fijamos_bucle
 270+ 9F6C 28 25            jr z,Reinicia_el_movimiento
 271+ 9F6E
 272+ 9F6E FE FD            cp $fd
 273+ 9F70 20 11            jr nz,1F
 274+ 9F72
 275+ 9F72              ; ---
 276+ 9F72              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9F72
 278+ 9F72 3A F6 89         ld a,(Ctrl_2)
 279+ 9F75 CB 5F            bit 3,a
 280+ 9F77 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F79
 282+ 9F79              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F79
 284+ 9F79 21 F6 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F7C CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F7E
 287+ 9F7E CD E7 9F         call Inicia_Repetimos_movimiento
 288+ 9F81 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F83              ; ---
 290+ 9F83
 291+ 9F83 FE 01        1 cp 1
 292+ 9F85 CA C0 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F88
 294+ 9F88 3D               dec a
 295+ 9F89 32 F1 89         ld (Cola_de_desplazamiento),a
 296+ 9F8C
 297+ 9F8C 3A EF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F8F 32 EE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F92              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F92 C9               ret
 301+ 9F93
 302+ 9F93              Reinicia_el_movimiento
 303+ 9F93
 304+ 9F93 3A F6 89         ld a,(Ctrl_2)
 305+ 9F96 CB 5F            bit 3,a
 306+ 9F98 28 1B            jr z,2F
 307+ 9F9A
 308+ 9F9A              ; (Cola_de_desplazamiento)="254".
 309+ 9F9A
 310+ 9F9A 21 F0 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F9D 35               dec (hl)
 312+ 9F9E 20 15            jr nz,2F
 313+ 9FA0
 314+ 9FA0              ; Fin de las repeticiones del último movimiento.
 315+ 9FA0
 316+ 9FA0 21 F6 89         ld hl,Ctrl_2
 317+ 9FA3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9FA5
 319+ 9FA5 2A E8 89         ld hl,(Puntero_mov)
 320+ 9FA8 23               inc hl
 321+ 9FA9 23               inc hl
 322+ 9FAA 23               inc hl
 323+ 9FAB 22 E8 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9FAE              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9FAE 7E               ld a,(hl)
 326+ 9FAF 32 F1 89         ld (Cola_de_desplazamiento),a
 327+ 9FB2
 328+ 9FB2 C3 5A 9F         jp Cola
 329+ 9FB5
 330+ 9FB5
 331+ 9FB5 CD F2 9F     2 call Inicia_Puntero_mov
 332+ 9FB8
 333+ 9FB8 21 F6 89         ld hl,Ctrl_2
 334+ 9FBB CB 96            res 2,(hl)
 335+ 9FBD
 336+ 9FBD C3 2A 9F         jp Movimiento
 337+ 9FC0
 338+ 9FC0              Siguiente_desplazamiento
 339+ 9FC0
 340+ 9FC0              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 341+ 9FC0              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 342+ 9FC0
 343+ 9FC0 21 F6 89         ld hl,Ctrl_2
 344+ 9FC3 CB 96            res 2,(hl)
 345+ 9FC5
 346+ 9FC5 2A E8 89         ld hl,(Puntero_mov)
 347+ 9FC8 23               inc hl
 348+ 9FC9 23               inc hl
 349+ 9FCA 22 E8 89         ld (Puntero_mov),hl
 350+ 9FCD
 351+ 9FCD 7E               ld a,(hl)
 352+ 9FCE A7               and a
 353+ 9FCF CC 52 A0         call z,Incrementa_Puntero_indice_mov
 354+ 9FD2 CA 93 9F         jp z,Reinicia_el_movimiento
 355+ 9FD5
 356+ 9FD5 C9               ret
 357+ 9FD6              ; Subrutinas -----------------------------------------
 358+ 9FD6              ; ---------- --------- --------- ---------- ----------
 359+ 9FD6              ;
 360+ 9FD6              ;   24/07/23
 361+ 9FD6              ;
 362+ 9FD6              ;   Fijamos_bucle
 363+ 9FD6              ;
 364+ 9FD6              ;
 365+ 9FD6
 366+ 9FD6              Fijamos_bucle
 367+ 9FD6
 368+ 9FD6 3A EC 89         ld a,(Incrementa_puntero)
 369+ 9FD9 3C               inc a
 370+ 9FDA 32 ED 89         ld (Incrementa_puntero_backup),a
 371+ 9FDD
 372+ 9FDD CD 52 A0         call Incrementa_Puntero_indice_mov
 373+ 9FE0 2A E6 89         ld hl,(Puntero_indice_mov)
 374+ 9FE3 22 EA 89         ld (Puntero_indice_mov_bucle),hl
 375+ 9FE6 C9               ret
 376+ 9FE7
 377+ 9FE7              ; ---------- --------- --------- ---------- ----------
 378+ 9FE7              ;
 379+ 9FE7              ;   07/7/23
 380+ 9FE7              ;
 381+ 9FE7              ;   Inicia_Repetimos_movimiento
 382+ 9FE7              ;
 383+ 9FE7              ;
 384+ 9FE7
 385+ 9FE7              Inicia_Repetimos_movimiento
 386+ 9FE7
 387+ 9FE7              ; Iniciamos (Repetimos_movimiento).
 388+ 9FE7
 389+ 9FE7 DD 2A E8 89      ld ix,(Puntero_mov)
 390+ 9FEB DD 7E 02         ld a,(ix+2)
 391+ 9FEE 32 F0 89         ld (Repetimos_movimiento),a
 392+ 9FF1
 393+ 9FF1 C9               ret
 394+ 9FF2
 395+ 9FF2              ; ---------- --------- --------- ---------- ----------
 396+ 9FF2              ;
 397+ 9FF2              ;   26/6/23
 398+ 9FF2              ;
 399+ 9FF2              ;   Inicia_Puntero_mov
 400+ 9FF2              ;
 401+ 9FF2              ;
 402+ 9FF2
 403+ 9FF2 2A E6 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9FF5 5E               ld e,(hl)
 405+ 9FF6 23               inc hl
 406+ 9FF7 56               ld d,(hl)
 407+ 9FF8 EB               ex de,hl
 408+ 9FF9 22 E8 89         ld (Puntero_mov),hl
 409+ 9FFC C9               ret
 410+ 9FFD
 411+ 9FFD              ; ---------- --------- --------- ---------- ----------
 412+ 9FFD              ;
 413+ 9FFD              ;   27/06/23
 414+ 9FFD              ;
 415+ 9FFD              ;   Aplica_movimiento.
 416+ 9FFD
 417+ 9FFD              Aplica_desplazamiento
 418+ 9FFD
 419+ 9FFD              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9FFD
 421+ 9FFD 2A E8 89         ld hl, (Puntero_mov)
 422+ A000
 423+ A000 7E               ld a,(hl)
 424+ A001 E6 F0            and $f0
 425+ A003 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ A004
 427+ A004 CB 7E            bit 7,(hl)
 428+ A006 28 03            jr z,1F
 429+ A008 CD 37 9A         call Mov_up
 430+ A00B 2A E8 89     1 ld hl, (Puntero_mov)
 431+ A00E CB 76            bit 6,(hl)
 432+ A010 28 03            jr z,2F
 433+ A012 CD 06 9A         call Mov_down
 434+ A015 2A E8 89     2 ld hl, (Puntero_mov)
 435+ A018 CB 6E            bit 5,(hl)
 436+ A01A 28 03            jr z,3F
 437+ A01C CD 98 9B         call Mov_left
 438+ A01F 2A E8 89     3 ld hl, (Puntero_mov)
 439+ A022 CB 66            bit 4,(hl)
 440+ A024 C8               ret z
 441+ A025 CD 7A 9A         call Mov_right
 442+ A028 C9               ret
 443+ A029
 444+ A029              ; ---------- --------- --------- ---------- ----------
 445+ A029              ;
 446+ A029              ;   26/06/23
 447+ A029              ;
 448+ A029              ;   Ajusta_velocidad_desplazamiento.
 449+ A029
 450+ A029              Ajusta_velocidad_desplazamiento
 451+ A029
 452+ A029              ; 1er byte de la cadena de movimiento.
 453+ A029              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ A029
 455+ A029 CD 47 A0         call Extrae_nibble_alto
 456+ A02C
 457+ A02C 32 CC 89         ld (Vel_up),a
 458+ A02F 79               ld a,c
 459+ A030 E6 0F            and $0f
 460+ A032 32 CD 89         ld (Vel_down),a
 461+ A035
 462+ A035              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ A035              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ A035
 465+ A035 23               inc hl
 466+ A036 CD 47 A0         call Extrae_nibble_alto
 467+ A039
 468+ A039 32 CA 89         ld (Vel_left),a
 469+ A03C 79               ld a,c
 470+ A03D E6 0F            and $0f
 471+ A03F 32 CB 89         ld (Vel_right),a
 472+ A042
 473+ A042              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ A042
 475+ A042 23               inc hl
 476+ A043 22 E8 89         ld (Puntero_mov),hl
 477+ A046 C9               ret
 478+ A047
 479+ A047 06 04        Extrae_nibble_alto ld b,4
 480+ A049 7E               ld a,(hl)
 481+ A04A 4F               ld c,a
 482+ A04B E6 F0            and $f0
 483+ A04D CB 3F        1 srl a
 484+ A04F 10 FC            djnz 1B
 485+ A051 C9               ret
 486+ A052
 487+ A052              ; ---------- --------- --------- ---------- ----------
 488+ A052              ;
 489+ A052              ;   5/7/23
 490+ A052              ;
 491+ A052              ;   Incrementa_Puntero_indice_mov
 492+ A052
 493+ A052              Incrementa_Puntero_indice_mov
 494+ A052
 495+ A052 21 EC 89         ld hl,Incrementa_puntero
 496+ A055 34               inc (hl)
 497+ A056
 498+ A056 2A E6 89         ld hl,(Puntero_indice_mov)
 499+ A059 01 02 00         ld bc,2
 500+ A05C A7               and a
 501+ A05D 09               add hl,bc
 502+ A05E 22 E6 89         ld (Puntero_indice_mov),hl
 503+ A061
 504+ A061 7E               ld a,(hl)
 505+ A062 A7               and a
 506+ A063
 507+ A063              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ A063
 509+ A063              ;    jr z,$
 510+ A063
 511+ A063              ;! Reinicia el Patrón de movimiento.
 512+ A063
 513+ A063 CC 68 A0         call z,Inicializa_Puntero_indice_mov
 514+ A066
 515+ A066 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ A067
 517+ A067 C9               ret
 518+ A068
 519+ A068
 520+ A068              ; ---------- --------- --------- ---------- ----------
 521+ A068              ;
 522+ A068              ;   24/07/23
 523+ A068              ;
 524+ A068              ;   Inicializa_Puntero_indice_mov
 525+ A068
 526+ A068              Inicializa_Puntero_indice_mov
 527+ A068
 528+ A068              ; Existe etiqueta de bucle principal???
 529+ A068
 530+ A068 2A EA 89         ld hl,(Puntero_indice_mov_bucle)
 531+ A06B 24               inc h
 532+ A06C 25               dec h
 533+ A06D 28 05            jr z,2F
 534+ A06F
 535+ A06F 22 E6 89         ld (Puntero_indice_mov),hl
 536+ A072 18 14            jr 3F
 537+ A074
 538+ A074              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ A074
 540+ A074 3A EC 89     2 ld a,(Incrementa_puntero)
 541+ A077 47               ld b,a
 542+ A078
 543+ A078 2A E6 89         ld hl,(Puntero_indice_mov)
 544+ A07B 2B           1 dec hl
 545+ A07C 2B               dec hl
 546+ A07D 10 FC            djnz 1B
 547+ A07F 22 E6 89         ld (Puntero_indice_mov),hl
 548+ A082
 549+ A082 AF               xor a
 550+ A083 32 EC 89         ld (Incrementa_puntero),a
 551+ A086 18 06            jr 4F
 552+ A088
 553+ A088 3A ED 89     3 ld a,(Incrementa_puntero_backup)
 554+ A08B 32 EC 89         ld (Incrementa_puntero),a
 555+ A08E C9           4 ret
 556+ A08F
 557+ A08F
 558+ A08F
# file closed: Patrones_de_mov.asm
1461  A08F              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A08F              ; Relojes y temporizaciones.
   2+ A08F
   3+ A08F              ; ------------------------------------------------------
   4+ A08F              ;
   5+ A08F              ;	16/7/23
   6+ A08F              ;
   7+ A08F              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A08F              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A08F              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A08F              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A08F              ;
  12+ A08F              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A08F              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A08F
  15+ A08F              ; Disparo_entidad db 1
  16+ A08F              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A08F              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A08F
  19+ A08F              Habilita_disparos
  20+ A08F
  21+ A08F 7E           	ld a,(hl)
  22+ A090 A7           	and a
  23+ A091 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A092
  25+ A092 EB           	ex de,hl
  26+ A093
  27+ A093 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A094 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A095
  30+ A095              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A095
  32+ A095 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A096 7E           	ld a,(hl)
  34+ A097 23           	inc hl
  35+ A098 77           	ld (hl),a
  36+ A099
  37+ A099 EB           	ex de,hl						; Habilitamos disparo.
  38+ A09A 3E 01        	ld a,1
  39+ A09C 77           	ld (hl),a
  40+ A09D C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1462  A09E              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A09E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A09E              ;
   3+ A09E              ;	9/8/23
   4+ A09E              ;
   5+ A09E              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A09E
   7+ A09E              ;	ADC HL,SP	LD (addr),SP
   8+ A09E              ;	ADD HL,SP	LD SP,(addr)
   9+ A09E              ;	ADD IX,SP	LD SP,nn
  10+ A09E              ; 	ADD IY,SP	LD SP,HL
  11+ A09E              ;				LD SP,IX
  12+ A09E              ;	DEC SP		LD SP,IY
  13+ A09E
  14+ A09E              ;	EX (SP),HL
  15+ A09E              ;	EX (SP),IX
  16+ A09E              ;	EX (SP),IY
  17+ A09E
  18+ A09E              ;	INC SP
  19+ A09E
  20+ A09E                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 3A 40 8A     	ld a,(Contador_de_frames)
  32+ 7FA3 FE E7        	cp $e7
  33+ 7FA5 28 FE        	jr z,$
  34+ 7FA7
  35+ 7FA7
  36+ 7FA7 ED 73 09 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FAB 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  38+ 7FAE
  39+ 7FAE E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  40+ 7FAF DD E5            push ix                                       ; IX contiene el puntero de impresión.
  41+ 7FB1 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  42+ 7FB3
  43+ 7FB3 3A F8 89         ld a,(Ctrl_1)
  44+ 7FB6 CB 47            bit 0,a
  45+ 7FB8 28 05            jr z,2F
  46+ 7FBA
  47+ 7FBA 2A 0F 8A         ld hl,(Stack_snapshot_disparos)
  48+ 7FBD 18 03            jr 4F
  49+ 7FBF
  50+ 7FBF 2A 0D 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  51+ 7FC2
  52+ 7FC2 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  53+ 7FC4
  54+ 7FC4 D1           1 pop de
  55+ 7FC5 73               ld (hl),e
  56+ 7FC6 23               inc hl
  57+ 7FC7 72               ld (hl),d
  58+ 7FC8 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  59+ 7FC9 10 F9            djnz 1B
  60+ 7FCB
  61+ 7FCB CB 47            bit 0,a
  62+ 7FCD 28 05            jr z,5F
  63+ 7FCF
  64+ 7FCF 22 0F 8A         ld (Stack_snapshot_disparos),hl
  65+ 7FD2 18 03            jr 6F
  66+ 7FD4
  67+ 7FD4 22 0D 8A     5 ld (Stack_snapshot),hl
  68+ 7FD7 ED 7B 09 8A  6 ld sp,(Stack)
  69+ 7FDB
  70+ 7FDB              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  71+ 7FDB
  72+ 7FDB 5D               ld e,l
  73+ 7FDC 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  74+ 7FDD
  75+ 7FDD 2A 29 8A         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  76+ 7FE0 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  77+ 7FE1 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  78+ 7FE2 72               ld (hl),d                                     ; _ álbum a otro.
  79+ 7FE3
  80+ 7FE3 C9               ret
  81+ 7FE4
  82+ 7FE4              ; ------------------------------------------------
  83+ 7FE4              ;
  84+ 7FE4              ;   3/08/23
  85+ 7FE4              ;
  86+ 7FE4              ;   La rutina estará situada justo después de:
  87+ 7FE4              ;   Album_de_fotos_disparos_3 equ $7396	; (7396h - 7418h).
  88+ 7FE4              ;
  89+ 7FE4              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
  90+ 7FE4              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
  91+ 7FE4
  92+ 7FE4                  org $7419
  93+ 7419
  94+ 7419              Gestiona_albumes_de_fotos
  95+ 7419
  96+ 7419              ;   En 1er lugar limpiamos el FRAME pintado.
  97+ 7419              ;   Vaciamos Album_de_fotos.
  98+ 7419
  99+ 7419              ;   Album_de_fotos. Contiene datos ???
 100+ 7419
 101+ 7419 21 01 70         ld hl,Album_de_fotos+1
 102+ 741C 7E               ld a,(hl)
 103+ 741D A7               and a
 104+ 741E 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 105+ 7420
 106+ 7420 2A 11 8A         ld hl,(End_Snapshot)
 107+ 7423 01 00 70         ld bc,Album_de_fotos
 108+ 7426 11 01 70         ld de,Album_de_fotos+1
 109+ 7429 AF               xor a
 110+ 742A 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 111+ 742B
 112+ 742B CD BB 74         call Limpia_album
 113+ 742E
 114+ 742E 21 00 00         ld hl,0
 115+ 7431 22 11 8A         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 116+ 7434
 117+ 7434              ; ----- ----- ----- -----
 118+ 7434
 119+ 7434              ;   Album_de_fotos_1. Contiene datos ???
 120+ 7434
 121+ 7434 21 85 70     3 ld hl,Album_de_fotos_1+1
 122+ 7437 7E               ld a,(hl)
 123+ 7438 A7               and a
 124+ 7439 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 125+ 743B              ;                               ; _ información del album2 al album1.
 126+ 743B
 127+ 743B              ; ----- ----- ----- -----
 128+ 743B              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 129+ 743B
 130+ 743B 2A 15 8A         ld hl,(End_Snapshot_1)      ; Final, (origen).
 131+ 743E 01 84 70         ld bc,Album_de_fotos_1      ; Origen.
 132+ 7441 11 00 70         ld de,Album_de_fotos        ; Destino.
 133+ 7444
 134+ 7444 CD BB 74         call Limpia_album
 135+ 7447
 136+ 7447              ;   Calculamos (End_Snapshot)
 137+ 7447
 138+ 7447 A7               and a
 139+ 7448 ED 4A            adc hl,bc
 140+ 744A 22 11 8A         ld (End_Snapshot),hl
 141+ 744D
 142+ 744D              ;   Limpiamos Album_de_fotos_1.
 143+ 744D
 144+ 744D 2A 15 8A         ld hl,(End_Snapshot_1)
 145+ 7450 01 84 70         ld bc,Album_de_fotos_1
 146+ 7453 11 85 70         ld de,Album_de_fotos_1+1
 147+ 7456 AF               xor a
 148+ 7457 02               ld (bc),a
 149+ 7458
 150+ 7458 CD BB 74         call Limpia_album
 151+ 745B
 152+ 745B 21 00 00         ld hl,0
 153+ 745E 22 15 8A         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 154+ 7461
 155+ 7461              ; ----- ----- ----- -----
 156+ 7461
 157+ 7461              ;   Album_de_fotos_2. Contiene datos ???
 158+ 7461
 159+ 7461 21 08 71     1 ld hl,Album_de_fotos_2+1
 160+ 7464 7E               ld a,(hl)
 161+ 7465 A7               and a
 162+ 7466 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 163+ 7468              ;                               ; _ información del album3 al album2.
 164+ 7468              ; ----- ----- ----- -----
 165+ 7468              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 166+ 7468
 167+ 7468 2A 19 8A         ld hl,(End_Snapshot_2)      ; Final, (origen).
 168+ 746B 01 07 71         ld bc,Album_de_fotos_2      ; Origen.
 169+ 746E 11 84 70         ld de,Album_de_fotos_1      ; Destino.
 170+ 7471
 171+ 7471 CD BB 74         call Limpia_album
 172+ 7474
 173+ 7474              ;   Calculamos (End_Snapshot_1):
 174+ 7474
 175+ 7474 A7               and a
 176+ 7475 ED 4A            adc hl,bc
 177+ 7477 22 15 8A         ld (End_Snapshot_1),hl
 178+ 747A
 179+ 747A              ;   Limpiamos Album_de_fotos_2.
 180+ 747A
 181+ 747A 2A 19 8A         ld hl,(End_Snapshot_2)
 182+ 747D 01 07 71         ld bc,Album_de_fotos_2
 183+ 7480 11 08 71         ld de,Album_de_fotos_2+1
 184+ 7483 AF               xor a
 185+ 7484 02               ld (bc),a
 186+ 7485
 187+ 7485 CD BB 74         call Limpia_album
 188+ 7488
 189+ 7488 21 00 00         ld hl,0
 190+ 748B 22 19 8A         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 191+ 748E
 192+ 748E              ; ----- ----- ----- -----
 193+ 748E
 194+ 748E              ;   Album_de_fotos_3. Contiene datos ???
 195+ 748E
 196+ 748E 21 8B 71     2 ld hl,Album_de_fotos_3+1
 197+ 7491 7E               ld a,(hl)
 198+ 7492 A7               and a
 199+ 7493 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 200+ 7494
 201+ 7494              ; ----- ----- ----- -----
 202+ 7494              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 203+ 7494
 204+ 7494 2A 1D 8A         ld hl,(End_Snapshot_3)      ; Final, (origen).
 205+ 7497 01 8A 71         ld bc,Album_de_fotos_3      ; Origen.
 206+ 749A 11 07 71         ld de,Album_de_fotos_2      ; Destino.
 207+ 749D
 208+ 749D CD BB 74         call Limpia_album
 209+ 74A0
 210+ 74A0              ;   Calculamos (End_Snapshot_2):
 211+ 74A0
 212+ 74A0 A7               and a
 213+ 74A1 ED 4A            adc hl,bc
 214+ 74A3 22 19 8A         ld (End_Snapshot_2),hl
 215+ 74A6
 216+ 74A6              ;   Limpiamos Album_de_fotos_3.
 217+ 74A6
 218+ 74A6 2A 1D 8A         ld hl,(End_Snapshot_3)
 219+ 74A9 01 8A 71         ld bc,Album_de_fotos_3
 220+ 74AC 11 8B 71         ld de,Album_de_fotos_3+1
 221+ 74AF AF               xor a
 222+ 74B0 02               ld (bc),a
 223+ 74B1
 224+ 74B1 CD BB 74         call Limpia_album
 225+ 74B4
 226+ 74B4 21 00 00         ld hl,0
 227+ 74B7 22 1D 8A         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 228+ 74BA C9               ret
 229+ 74BB
 230+ 74BB              ; ----------------------------------------------------
 231+ 74BB              ;
 232+ 74BB              ;   10/8/23
 233+ 74BB              ;
 234+ 74BB              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 235+ 74BB              ;
 236+ 74BB              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 237+ 74BB              ;           BC ..... Dirección de inicio del álbum.
 238+ 74BB              ;           DE ..... Dirección de inicio del álbum. +1
 239+ 74BB
 240+ 74BB              ;    ld hl,(End_Snapshot)
 241+ 74BB              ;    ld bc,Album_de_fotos
 242+ 74BB              ;    ld de,Album_de_fotos+1
 243+ 74BB
 244+ 74BB              ;   MODIFICA: A,HL,BC y DE.
 245+ 74BB
 246+ 74BB              Limpia_album
 247+ 74BB D5               push de            ; Guardo DESTINO.
 248+ 74BC C5               push bc            ; Guardo ORIGEN.
 249+ 74BD ED 42            sbc hl,bc
 250+ 74BF 4D               ld c,l
 251+ 74C0 44               ld b,h
 252+ 74C1 E1               pop hl
 253+ 74C2 C5               push bc
 254+ 74C3 ED B0            ldir
 255+ 74C5 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 256+ 74C6 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 257+ 74C7 C9               ret                         ; _ a otro).
 258+ 74C8              ;
 259+ 74C8
 260+ 74C8              ; -----------------------------------------------
 261+ 74C8
 262+ 74C8
 263+ 74C8
 264+ 74C8
 265+ 74C8
# file closed: Guarda_foto_registros.asm
1463  74C8
1464  74C8              	SAVESNA "Pruebas.sna", START
1465  74C8
1466  74C8
1467  74C8
1468  74C8
# file closed: Banco_de_pruebas.asm
