# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 CB 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A DE 89     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 2A        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20 CB 57        	bit 2,a
  41  AA22 28 26        	jr z,1F                                                 ; No pintamos si no hay movimiento. El último FRAME impreso NO SE HA MODIFICADO!!.
  42  AA24
  43  AA24
  44  AA24 18 FE        	jr $
  45  AA26
  46  AA26              Borrando
  47  AA26
  48  AA26 2A D8 89     	ld hl,(Scanlines_album_SP)
  49  AA29 CD 4E 8C     	call Extrae_address
  50  AA2C
  51  AA2C 24           	inc h
  52  AA2D 25           	dec h
  53  AA2E 28 05        	jr z,Pintando
  54  AA30
  55  AA30 CD 19 91     	call Pinta_Sprites
  56  AA33 18 F1        	jr Borrando
  57  AA35
  58  AA35
  59  AA35              Pintando
  60  AA35
  61  AA35 2A DA 89     	ld hl,(India_SP)
  62  AA38 2C           	inc l
  63  AA39 CD 4E 8C     	call Extrae_address
  64  AA3C
  65  AA3C 24           	inc h
  66  AA3D 25           	dec h
  67  AA3E C8           	ret z
  68  AA3F
  69  AA3F 1C           	inc e
  70  AA40 1C           	inc e
  71  AA41
  72  AA41 ED 53 DA 89  	ld (India_SP),de
  73  AA45 CD 19 91     	call Pinta_Sprites
  74  AA48 18 EB        	jr Pintando
  75  AA4A
  76  AA4A              ; Posible colisión Entidad-Amadeus ???
  77  AA4A
  78  AA4A              ;	ld a,(Impacto2)
  79  AA4A              ;	bit 2,a
  80  AA4A              ;	jr z,1F
  81  AA4A
  82  AA4A              ;	call Detecta_colision_nave_entidad
  83  AA4A
  84  AA4A              ;1 ld a,4
  85  AA4A              ;	out ($fe),a
  86  AA4A              ;	call Gestiona_Amadeus
  87  AA4A
  88  AA4A              ;	ld a,7
  89  AA4A              ;	out ($fe),a											; Borde blanco.
  90  AA4A              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  91  AA4A              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  92  AA4A
  93  AA4A              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  94  AA4A
  95  AA4A              ;	call Recupera_parametros_DRAW
  96  AA4A
  97  AA4A CD D9 8C     1 call Actualiza_relojes
  98  AA4D
  99  AA4D 21 DE 89     	ld hl,Ctrl_3
 100  AA50 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
 101  AA52 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
 102  AA54
 103  AA54 FD E1        	pop iy
 104  AA56 DD E1        	pop ix
 105  AA58 F1           	pop af
 106  AA59 C1           	pop bc
 107  AA5A D1           	pop de
 108  AA5B E1           	pop hl
 109  AA5C D9           	exx
 110  AA5D C1           	pop bc
 111  AA5E D1           	pop de
 112  AA5F E1           	pop hl
 113  AA60 08           	ex af,af'
 114  AA61 F1           	pop af
 115  AA62 08           	ex af,af'
 116  AA63 D9           	exx
 117  AA64
 118  AA64 ED 7B CB 89  	ld sp,(Stack_3)
 119  AA68
 120  AA68 FB           	ei
 121  AA69
 122  AA69 3E 01        	ld a,1												; Borde azul.
 123  AA6B D3 FE        	out ($fe),a
 124  AA6D
 125  AA6D C9           	ret
 126  AA6E
 127  AA6E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 128  AA6E
 129  AA6E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA6E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA6E              ;
   3+ AA6E              ;	17/02/23
   4+ AA6E              ;
   5+ AA6E              ;	Sprites e índices.
   6+ AA6E
   7+ AA6E              	org $8119
   8+ 8119
   9+ 8119              ; Disparo.
  10+ 8119
  11+ 8119 21 81        Indice_disparo defw Disparo_0
  12+ 811B 27 81        	defw Disparo_f9
  13+ 811D 2D 81        	defw Disparo_fb
  14+ 811F 33 81        	defw Disparo_fd
  15+ 8121
  16+ 8121              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8121 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 8125 01 80
  18+ 8127              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8127 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 812B 00 60
  20+ 812D              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 812D 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8131 18 00
  22+ 8133              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8133 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8137 06 00
  24+ 8139
  25+ 8139              ; ----------------------------------------------------------------------------------------
  26+ 8139
  27+ 8139              ; Badsat_izq. 2x2.
  28+ 8139
  29+ 8139 49 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 813B C0 82        	defw Badsat_izq_fe
  31+ 813D 90 82        	defw Badsat_izq_fd
  32+ 813F 60 82        	defw Badsat_izq_fc
  33+ 8141 30 82        	defw Badsat_izq_fb
  34+ 8143 00 82        	defw Badsat_izq_fa
  35+ 8145 A9 81        	defw Badsat_izq_f9
  36+ 8147 79 81        	defw Badsat_izq_f8
  37+ 8149
  38+ 8149 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 814C 02 14 00     	DEFB 	$02,$14,$00
  40+ 814F 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8152 02 55 00     	DEFB 	$02,$55,$00
  42+ 8155 02 AA 00     	DEFB	$02,$AA,$00
  43+ 8158 02 54 00     	DEFB 	$02,$54,$00
  44+ 815B 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 815E 03 60 00     	DEFB 	$03,$60,$00
  46+ 8161 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 8164 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 8167 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 816A 54 40 00     	DEFB 	$54,$40,$00
  50+ 816D AA 60 00     	DEFB	$AA,$60,$00
  51+ 8170 54 00 00     	DEFB 	$54,$00,$00
  52+ 8173 28 00 00     	DEFB 	$28,$00,$00
  53+ 8176 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 8179
  55+ 8179 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 817D 0A 00 01 15
  56+ 8181 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 8185 01 55 00 01
  57+ 8189 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 818D 00 01 B0 00
  58+ 8191 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 8195 FC 00 15 F4
  59+ 8199 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 819D 55 30 00 2A
  60+ 81A1 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 81A5 00 08 00 00
  61+ 81A9
  62+ 81A9 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  62+ 81AD 85 00 00 8A
  63+ 81B1 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  63+ 81B5 00 AA 80 00
  64+ 81B9 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  64+ 81BD 00 00 D8 00
  65+ 81C1 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  65+ 81C5 FE 00 0A FA
  66+ 81C9 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  66+ 81CD 2A 98 00 15
  67+ 81D1 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  67+ 81D5 00 04 00 00
  68+ 81D9
  69+ 81D9
  70+ 81D9              ;! 39 bytes libres aquí !!!!!
  71+ 81D9
  72+ 81D9              	org $8200
  73+ 8200
  74+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  74+ 8204 42 80 00 45
  75+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  75+ 820C 00 55 40 00
  76+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  76+ 8214 00 00 6C 00
  77+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  77+ 821C FF 00 05 7D
  78+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  78+ 8224 15 4C 00 0A
  79+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  79+ 822C 00 02 00 00
  80+ 8230
  81+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  81+ 8234 21 40 00 22
  82+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  82+ 823C 00 2A A0 00
  83+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  83+ 8244 80 00 36 00
  84+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  84+ 824C 7F 80 02 BE
  85+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  85+ 8254 0A A6 00 05
  86+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  86+ 825C 00 01 00 00
  87+ 8260
  88+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  88+ 8264 10 A0 00 11
  89+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  89+ 826C 00 15 50 00
  90+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  90+ 8274 40 00 1B 00
  91+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  91+ 827C BF C0 01 5F
  92+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  92+ 8284 05 53 00 02
  93+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  93+ 828C 00 00 80 00
  94+ 8290
  95+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  95+ 8294 08 50 00 08
  96+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  96+ 829C 00 0A A8 00
  97+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  97+ 82A4 A0 00 0D 80
  98+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  98+ 82AC 5F F8 00 AF
  99+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  99+ 82B4 02 A9 00 01
 100+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 100+ 82BC 00 00 40 00
 101+ 82C0
 102+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 102+ 82C4 04 28 00 04
 103+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 103+ 82CC 00 05 54 00
 104+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 104+ 82D4 D0 00 06 C0
 105+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 105+ 82DC 2F FC 00 57
 106+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 106+ 82E4 01 54 80 00
 107+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 107+ 82EC 00 00 20 00
 108+ 82F0
 109+ 82F0
 110+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
 111+ 82F2 30 83        	defw Badsat_der_f8
 112+ 82F4 60 83        	defw Badsat_der_f9
 113+ 82F6 90 83        	defw Badsat_der_fa
 114+ 82F8 C0 83        	defw Badsat_der_fb
 115+ 82FA 00 84        	defw Badsat_der_fc
 116+ 82FC 30 84        	defw Badsat_der_fd
 117+ 82FE 60 84        	defw Badsat_der_fe
 118+ 8300
 119+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 120+ 8303 28 40 00     	DEFB    $28,$40,$00
 121+ 8306 54 40 00     	DEFB	$54,$40,$00
 122+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 123+ 830C 55 40 00     	DEFB	$55,$40,$00
 124+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 125+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 126+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 127+ 8318 07 50 00     	DEFB	$07,$50,$00
 128+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 129+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 130+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 131+ 8324 06 55 00     	DEFB	$06,$55,$00
 132+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 133+ 832A 00 14 00     	DEFB	$00,$14,$00
 134+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 135+ 8330
 136+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 136+ 8334 20 00 2A 20
 137+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 137+ 833C 2A A0 00 15
 138+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 138+ 8344 00 03 60 00
 139+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 139+ 834C F4 00 0B EA
 140+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 140+ 8354 03 2A 80 00
 141+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 141+ 835C 00 00 04 00
 142+ 8360
 143+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 143+ 8364 10 00 15 10
 144+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 144+ 836C 15 50 00 0A
 145+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 145+ 8374 80 01 B0 00
 146+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 146+ 837C FA 00 05 F5
 147+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 147+ 8384 01 95 40 00
 148+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 148+ 838C 00 00 02 00
 149+ 8390
 150+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 150+ 8394 08 00 0A 88
 151+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 151+ 839C 0A A8 00 05
 152+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 152+ 83A4 C0 00 D8 00
 153+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 153+ 83AC FD 00 02 FA
 154+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 154+ 83B4 00 CA A0 00
 155+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 155+ 83BC 80 00 01 00
 156+ 83C0
 157+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 157+ 83C4 84 00 05 44
 158+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 158+ 83CC 05 54 00 02
 159+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 159+ 83D4 E0 00 6C 00
 160+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 160+ 83DC FE 80 01 7D
 161+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 161+ 83E4 00 65 50 00
 162+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 162+ 83EC 40 00 00 80
 163+ 83F0
 164+ 83F0              ;! 16 bytes libres aquí !!!!!
 165+ 83F0
 166+ 83F0              	org $8400
 167+ 8400
 168+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 168+ 8404 42 00 02 A2
 169+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 169+ 840C 02 AA 00 01
 170+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 170+ 8414 F0 00 36 00
 171+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 171+ 841C FF 40 00 BE
 172+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 172+ 8424 00 32 A8 00
 173+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 173+ 842C A0 00 00 40
 174+ 8430
 175+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 175+ 8434 A1 00 01 51
 176+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 176+ 843C 01 55 00 00
 177+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 177+ 8444 F8 00 1B 00
 178+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 178+ 844C FF A0 00 1F
 179+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 179+ 8454 00 09 54 00
 180+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 180+ 845C 50 00 00 20
 181+ 8460
 182+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 182+ 8464 50 80 00 A8
 183+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 183+ 846C 00 AA 80 00
 184+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 184+ 8474 FC 00 0D 80
 185+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 185+ 847C FF D0 00 0F
 186+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 186+ 8484 00 04 AA 00
 187+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 187+ 848C 28 00 00 10
 188+ 8490
 189+ 8490              ; ----------------------------------------------------------------------------------------
 190+ 8490
 191+ 8490              ; Amadeus. 2x2.
 192+ 8490
 193+ 8490              ;	org $8119
 194+ 8490
 195+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 196+ 8492 00 00        	defw 0
 197+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 198+ 8496 00 00        	defw 0
 199+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 200+ 849A 00 00        	defw 0
 201+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 202+ 849E 00 00        	defw 0	 								; (Fín de índice).
 203+ 84A0
 204+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 205+ 84A2 00 00        	defw 0
 206+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 207+ 84A6 00 00        	defw 0
 208+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 209+ 84AA 00 00        	defw 0
 210+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 211+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 212+ 84B0
 213+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 213+ 84B4 26 64 24 24
 214+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 214+ 84BC 6F F6 67 E6
 215+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 215+ 84C4 F7 EF FF FF
 216+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 216+ 84CC 8B D1 71 8E
 217+ 84D0
 218+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 218+ 84D4 F1 00 09 99
 219+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 219+ 84DC 0B 0D 00 1B
 220+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 220+ 84E4 80 19 F9 80
 221+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 221+ 84EC F3 C0 3D FB
 222+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 222+ 84F4 3E F7 C0 3E
 223+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 223+ 84FC 40 1C 63 80
 224+ 8500
 225+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 225+ 8504 3C 40 02 66
 226+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 226+ 850C 02 C3 40 06
 227+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 227+ 8514 60 06 7E 60
 228+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 228+ 851C 3C F0 0F 7E
 229+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 229+ 8524 0F BD F0 0F
 230+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 230+ 852C 10 07 18 E0
 231+ 8530
 232+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 232+ 8534 8F 10 00 99
 233+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 233+ 853C 00 B0 D0 01
 234+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 234+ 8544 D8 01 9F 98
 235+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 235+ 854C CF 3C 03 DF
 236+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 236+ 8554 03 EF 7C 03
 237+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 237+ 855C 44 01 C6 38
 238+ 8560
 239+ 8560              ; ----------------------------------------------------------------------------------------
 240+ 8560
 241+ 8560              ;	org $8690
 242+ 8560
 243+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 244+ 8562 96 85        	defw Explosion_2x3_2
 245+ 8564 C6 85        	defw Explosion_2x3_3
 246+ 8566
 247+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 247+ 856A 10 00 04 38
 248+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 248+ 8572 02 E6 80 01
 249+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 249+ 857A 00 03 DD 80
 250+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 250+ 8582 3B 80 01 9D
 251+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 251+ 858A 02 FD 80 03
 252+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 252+ 8592 00 08 00 00
 253+ 8596
 254+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 254+ 859A 38 10 03 BC
 255+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 255+ 85A2 04 06 C0 00
 256+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 256+ 85AA 00 03 DD 80
 257+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 257+ 85B2 3A 70 01 9C
 258+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 258+ 85BA 04 F8 80 06
 259+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 259+ 85C2 00 00 00 00
 260+ 85C6
 261+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 261+ 85CA 00 20 08 00
 262+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 262+ 85D2 00 06 00 00
 263+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 263+ 85DA 00 00 14 30
 264+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 264+ 85E2 38 00 01 08
 265+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 265+ 85EA 00 80 00 04
 266+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 266+ 85F2 10 08 00 20
 267+ 85F6
 268+ 85F6              ; ------------------------------------------
 269+ 85F6
 270+ 85F6 FC 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 271+ 85F8 1C 86        	defw Explosion_2x2_2
 272+ 85FA 3C 86        	defw Explosion_2x2_3
 273+ 85FC
 274+ 85FC 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 274+ 8600 43 84 37 D8
 275+ 8604 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 275+ 8608 17 F0 3D D8
 276+ 860C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 276+ 8610 19 D0 1F 60
 277+ 8614 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 277+ 8618 40 00 80 00
 278+ 861C
 279+ 861C
 280+ 861C 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 280+ 8620 3B C2 60 0C
 281+ 8624 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 281+ 8628 07 F0 3D D8
 282+ 862C 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 282+ 8630 19 C6 1F 64
 283+ 8634 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 283+ 8638 80 00 00 00
 284+ 863C
 285+ 863C 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 285+ 8640 88 04 10 0C
 286+ 8644 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 286+ 8648 81 E0 01 43
 287+ 864C 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 287+ 8650 10 80 18 00
 288+ 8654 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 288+ 8658 60 01 80 02
 289+ 865C
 290+ 865C
 291+ 865C
 292+ 865C
 293+ 865C
# file closed: Sprites_e_indices.asm
 130  865C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 865C              ; ---------------------------------------------------------------------
   2+ 865C              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 865C              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 865C              ; ---------------------------------------------------------------------
   5+ 865C
   6+ 865C              ; 27/03/24
   7+ 865C              ;
   8+ 865C              ;	En esta tabla iremos almacenando:
   9+ 865C              ;
  10+ 865C              ;	(Columna_Y),(mem.address de los scanlines masticados en el Scanlines_album) de cada entidad en curso.
  11+ 865C
  12+ 865C 00 00 00...  Tabla_de_pintado ds 24
  13+ 8674
  14+ 8674              ;	db 0, defw 0
  15+ 8674              ;	db 0, defw 0
  16+ 8674              ;	db 0, defw 0
  17+ 8674              ;	db 0, defw 0
  18+ 8674              ;	db 0, defw 0
  19+ 8674              ;	db 0, defw 0
  20+ 8674              ;	db 0, defw 0
  21+ 8674
  22+ 8674 B9 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  23+ 8676              ;	defw ...
  24+ 8676              ; 	defw ...
  25+ 8676 00 00        	defw 0
  26+ 8678
  27+ 8678              ; Control. %00000001 00000001
  28+ 8678              ;
  29+ 8678              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  30+ 8678              ;                    _ hacen las entidades hacia abajo.
  31+ 8678              ;
  32+ 8678              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  33+ 8678
  34+ 8678 7E 86        Indice_de_disparos_Amadeus defw Disparo_1A
  35+ 867A 86 86        	defw Disparo_2A
  36+ 867C 8E 86        	defw Disparo_3A
  37+ 867E
  38+ 867E 00 00        Disparo_1A defw 0									; Control.
  39+ 8680 00 00        	defw 0											; Puntero objeto.
  40+ 8682 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  41+ 8684 00 00        	defw 0											; Rutina de impresión.
  42+ 8686
  43+ 8686 00 00        Disparo_2A defw 0									; Control.
  44+ 8688 00 00        	defw 0											; Puntero objeto.
  45+ 868A 00 00        	defw 0											; Puntero de impresión.
  46+ 868C 00 00        	defw 0											; Rutina de impresión.
  47+ 868E
  48+ 868E 00 00        Disparo_3A defw 0
  49+ 8690
  50+ 8690 A6 86        Indice_de_disparos_entidades defw Disparo_1
  51+ 8692 AE 86        	defw Disparo_2
  52+ 8694 B6 86        	defw Disparo_3
  53+ 8696 BE 86        	defw Disparo_4
  54+ 8698 C6 86        	defw Disparo_5
  55+ 869A CE 86        	defw Disparo_6
  56+ 869C D6 86        	defw Disparo_7
  57+ 869E DE 86        	defw Disparo_8
  58+ 86A0 E6 86        	defw Disparo_9
  59+ 86A2 EE 86        	defw Disparo_10
  60+ 86A4 F6 86        	defw Disparo_11
  61+ 86A6
  62+ 86A6 00 00        Disparo_1 defw 0									; Control.
  63+ 86A8 00 00        	defw 0											; Puntero objeto.
  64+ 86AA 00 00        	defw 0											; Puntero de impresión.
  65+ 86AC 00 00        	defw 0											; Rutina de impresión.
  66+ 86AE
  67+ 86AE 00 00        Disparo_2 defw 0									; Control.
  68+ 86B0 00 00        	defw 0											; Puntero objeto.
  69+ 86B2 00 00        	defw 0											; Puntero de impresión.
  70+ 86B4 00 00        	defw 0											; Rutina de impresión.
  71+ 86B6
  72+ 86B6 00 00        Disparo_3 defw 0									; Control.
  73+ 86B8 00 00        	defw 0											; Puntero objeto.
  74+ 86BA 00 00        	defw 0											; Puntero de impresión.
  75+ 86BC 00 00        	defw 0											; Rutina de impresión.
  76+ 86BE
  77+ 86BE 00 00        Disparo_4 defw 0									; Control.
  78+ 86C0 00 00        	defw 0											; Puntero objeto.
  79+ 86C2 00 00        	defw 0											; Puntero de impresión.
  80+ 86C4 00 00        	defw 0											; Rutina de impresión.
  81+ 86C6
  82+ 86C6 00 00        Disparo_5 defw 0									; Control.
  83+ 86C8 00 00        	defw 0											; Puntero objeto.
  84+ 86CA 00 00        	defw 0											; Puntero de impresión.
  85+ 86CC 00 00        	defw 0											; Rutina de impresión.
  86+ 86CE
  87+ 86CE 00 00        Disparo_6 defw 0									; Control.
  88+ 86D0 00 00        	defw 0											; Puntero objeto.
  89+ 86D2 00 00        	defw 0											; Puntero de impresión.
  90+ 86D4 00 00        	defw 0											; Rutina de impresión.
  91+ 86D6
  92+ 86D6 00 00        Disparo_7 defw 0									; Control.
  93+ 86D8 00 00        	defw 0											; Puntero objeto.
  94+ 86DA 00 00        	defw 0											; Puntero de impresión.
  95+ 86DC 00 00        	defw 0											; Rutina de impresión.
  96+ 86DE
  97+ 86DE 00 00        Disparo_8 defw 0									; Control.
  98+ 86E0 00 00        	defw 0											; Puntero objeto.
  99+ 86E2 00 00        	defw 0											; Puntero de impresión.
 100+ 86E4 00 00        	defw 0											; Rutina de impresión.
 101+ 86E6
 102+ 86E6 00 00        Disparo_9 defw 0									; Control.
 103+ 86E8 00 00        	defw 0											; Puntero objeto.
 104+ 86EA 00 00        	defw 0											; Puntero de impresión.
 105+ 86EC 00 00        	defw 0											; Rutina de impresión.
 106+ 86EE
 107+ 86EE 00 00        Disparo_10 defw 0									; Control.
 108+ 86F0 00 00        	defw 0											; Puntero objeto.
 109+ 86F2 00 00        	defw 0											; Puntero de impresión.
 110+ 86F4 00 00        	defw 0											; Rutina de impresión.
 111+ 86F6
 112+ 86F6 00 00        Disparo_11 defw 0
 113+ 86F8
 114+ 86F8              ; -------------------------------------------------------------------------------------
 115+ 86F8              ;
 116+ 86F8              ;	Índice de cajas de entidades.
 117+ 86F8              ;
 118+ 86F8              ;	18/1/24
 119+ 86F8              ;
 120+ 86F8
 121+ 86F8              Indice_de_cajas_de_entidades
 122+ 86F8
 123+ 86F8 40 87        	defw Caja_1
 124+ 86FA 4D 87        	defw Caja_2
 125+ 86FC 5A 87        	defw Caja_3
 126+ 86FE 67 87        	defw Caja_4
 127+ 8700 74 87        	defw Caja_5
 128+ 8702 81 87        	defw Caja_6
 129+ 8704 8E 87        	defw Caja_7
 130+ 8706
 131+ 8706 00 00        	defw 0
 132+ 8708 00 00        	defw 0
 133+ 870A
 134+ 870A              ; ---------- ---------- ---------- ---------- ----------
 135+ 870A
 136+ 870A 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 137+ 870D 00 00        	defw 0		 										; (Posicion_actual).
 138+ 870F 00 00        	defw 0	 											; (Puntero_objeto).
 139+ 8711 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 140+ 8713
 141+ 8713 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 142+ 8714 05           	db %00000101										; (Attr).
 143+ 8715 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 144+ 8717 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 145+ 8719 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 146+ 871B 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 147+ 871D C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 148+ 871F 04           	db 4 												; (Cuad_objeto).
 149+ 8720 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 150+ 8721 00 00 00...  	ds 6												; Variables_de_borrado
 151+ 8727
 152+ 8727 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 153+ 8729
 154+ 8729              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 155+ 8729 00 00        	defw 0
 156+ 872B 00 00        	defw 0 												; Contador_de_mov_masticados
 157+ 872D 40           	db $40												; (Ctrl_0).
 158+ 872E 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 158+ 8732 00 00
 159+ 8734 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 160+ 8737 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 161+ 8739 00           	db 0												; (Cola_de_desplazamiento).
 162+ 873A 00           	db 0 												; (Columnas).
 163+ 873B 00 00        	defw 0												; (Limite_horizontal).
 164+ 873D 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 165+ 8740
 166+ 8740              ; ---------- ---------- ---------- ---------- ----------
 167+ 8740              ;
 168+ 8740              ;	22/01/24
 169+ 8740              ;
 170+ 8740              ; 	Cada caja tiene 13 bytes !!!
 171+ 8740
 172+ 8740 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 173+ 8743 00           	db %00000000										; (Attr).
 174+ 8744 00           	db 0												; (Impacto).
 175+ 8745 00 00        	defw 0												; (Puntero_de_impresion).
 176+ 8747 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 177+ 8749 00 00        	defw 0 												; (Contador_de_mov_masticados).
 178+ 874B 00           	db 0												; (Ctrl_0).
 179+ 874C 00           	db 0												; (Ctrl_2).
 180+ 874D
 181+ 874D              ; ---------- ---------- ---------- ---------- ----------
 182+ 874D
 183+ 874D 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 184+ 8750 00           	db %00000000										; (Attr).
 185+ 8751 00           	db 0												; (Impacto).
 186+ 8752 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 8754 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 8756 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 8758 00           	db 0												; (Ctrl_0).
 190+ 8759 00           	db 0												; (Ctrl_2).
 191+ 875A
 192+ 875A              ; ---------- ---------- ---------- ---------- ----------
 193+ 875A
 194+ 875A 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 195+ 875D 00           	db %00000000										; (Attr).
 196+ 875E 00           	db 0												; (Impacto).
 197+ 875F 00 00        	defw 0												; (Puntero_de_impresion).
 198+ 8761 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 199+ 8763 00 00        	defw 0 												; (Contador_de_mov_masticados).
 200+ 8765 00           	db 0												; (Ctrl_0).
 201+ 8766 00           	db 0												; (Ctrl_2).
 202+ 8767
 203+ 8767              ; ---------- ---------- ---------- ---------- ----------
 204+ 8767
 205+ 8767 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 206+ 876A 00           	db %00000000										; (Attr).
 207+ 876B 00           	db 0												; (Impacto).
 208+ 876C 00 00        	defw 0												; (Puntero_de_impresion).
 209+ 876E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 210+ 8770 00 00        	defw 0 												; (Contador_de_mov_masticados).
 211+ 8772 00           	db 0												; (Ctrl_0).
 212+ 8773 00           	db 0												; (Ctrl_2).
 213+ 8774
 214+ 8774              ; ---------- ---------- ---------- ---------- ----------
 215+ 8774
 216+ 8774 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 217+ 8777 00           	db %00000000										; (Attr).
 218+ 8778 00           	db 0												; (Impacto).
 219+ 8779 00 00        	defw 0												; (Puntero_de_impresion).
 220+ 877B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 221+ 877D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 222+ 877F 00           	db 0												; (Ctrl_0).
 223+ 8780 00           	db 0												; (Ctrl_2).
 224+ 8781
 225+ 8781              ; ---------- ---------- ---------- ---------- ----------
 226+ 8781
 227+ 8781 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 228+ 8784 00           	db %00000000										; (Attr).
 229+ 8785 00           	db 0												; (Impacto).
 230+ 8786 00 00        	defw 0												; (Puntero_de_impresion).
 231+ 8788 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 232+ 878A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 233+ 878C 00           	db 0												; (Ctrl_0).
 234+ 878D 00           	db 0												; (Ctrl_2).
 235+ 878E
 236+ 878E              ; ---------- ---------- ---------- ---------- ----------
 237+ 878E
 238+ 878E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 239+ 8791 00           	db %00000000										; (Attr).
 240+ 8792 00           	db 0												; (Impacto).
 241+ 8793 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 8795 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 8797 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 8799 00           	db 0												; (Ctrl_0).
 245+ 879A 00           	db 0												; (Ctrl_2).
 246+ 879B
 247+ 879B              ; -------------------------------------------------------------------------------------
 248+ 879B              ;
 249+ 879B              ;	11/1/24
 250+ 879B              ;
 251+ 879B              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 879B              ;
 253+ 879B              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 879B              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 879B              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 879B              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 879B
 258+ 879B              Indice_de_definiciones_de_entidades
 259+ 879B
 260+ 879B 9F 87        	defw Entidad_1
 261+ 879D AC 87        	defw Entidad_2
 262+ 879F
 263+ 879F              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 879F
 265+ 879F              ;	BADSAT, (Satélite malvado).
 266+ 879F
 267+ 879F 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 87A2 04           	db %00000100										; (Attr).
 269+ 87A3 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87A5 39 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87A7 03 40        	defw $4003	                                     	; (Posicion_inicio).
 272+ 87A9 01           	db 1												; (Cuad_objeto).
 273+ 87AA 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87AC
 275+ 87AC 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87AF 02           	db %00000010										; (Attr).
 277+ 87B0 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87B2 39 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87B4 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87B6 01           	db 1												; (Cuad_objeto).
 281+ 87B7 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87B9
# file closed: Cajas_y_disparos.asm
 131  87B9              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87B9
   2+ 87B9
   3+ 87B9              ;   07/07/23
   4+ 87B9              ;
   5+ 87B9              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87B9              ;
   7+ 87B9              ;   Codificación:
   8+ 87B9              ;
   9+ 87B9              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87B9              ;
  11+ 87B9              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87B9              ;
  13+ 87B9              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87B9              ;
  15+ 87B9              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87B9              ;
  17+ 87B9              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87B9              ;                               ..... %01000010 Vel_up 4
  19+ 87B9              ;                                               Vel_down 2
  20+ 87B9              ;                               ..... $42
  21+ 87B9              ;
  22+ 87B9              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87B9              ;
  24+ 87B9              ;                               ..... %01000010 Vel_left 4
  25+ 87B9              ;                                               Vel_right 2
  26+ 87B9              ;                               ..... $42
  27+ 87B9              ;
  28+ 87B9              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87B9              ;
  30+ 87B9              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87B9              ;
  32+ 87B9              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87B9              ;
  34+ 87B9              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87B9              ;                                     $53
  36+ 87B9              ;
  37+ 87B9              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87B9              ;
  39+ 87B9              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87B9              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87B9              ;
  42+ 87B9              ;                       Arriba ..... $81
  43+ 87B9              ;                       Arriba - izquierda ..... $a1
  44+ 87B9              ;                       Arriba - derecha ..... $91
  45+ 87B9              ;
  46+ 87B9              ;                       Abajo ..... $41
  47+ 87B9              ;                       Abajo - izquierda ..... $61
  48+ 87B9              ;                       Abajo - derecha ..... $51
  49+ 87B9              ;
  50+ 87B9              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87B9              ;
  52+ 87B9              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87B9              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87B9              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87B9              ;
  56+ 87B9              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87B9              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87B9              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87B9              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87B9              ;
  61+ 87B9              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87B9              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87B9              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87B9              ;
  65+ 87B9              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87B9              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87B9              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87B9              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87B9
  70+ 87B9              ; ----- ----- ----- ----- -----
  71+ 87B9
  72+ 87B9 E5 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87BB ED 87            defw F_1
  74+ 87BD F7 87            defw F_2
  75+ 87BF 01 88            defw Codo_abajo_derecha
  76+ 87C1 35 88            defw Derecha_y_subiendo
  77+ 87C3 3F 88            defw Derecha_y_subiendo_1
  78+ 87C5 49 88            defw F_3
  79+ 87C7 53 88            defw F_4
  80+ 87C9 5D 88            defw Derecha_y_bajando
  81+ 87CB 67 88            defw Derecha_y_bajando_1
  82+ 87CD 71 88            defw Derecha_y_bajando_2
  83+ 87CF 7B 88            defw Codo_derecha_abajo
  84+ 87D1 AB 88            defw Codo_abajo_izq.
  85+ 87D3 DF 88            defw Izquierda_y_subiendo
  86+ 87D5 E9 88            defw Izquierda_y_subiendo_1
  87+ 87D7 F3 88            defw F_5
  88+ 87D9 FD 88            defw F_6
  89+ 87DB 07 89            defw Izquierda_y_bajando
  90+ 87DD 11 89            defw Izquierda_y_bajando_1
  91+ 87DF 1B 89            defw Izquierda_y_bajando_2
  92+ 87E1 25 89            defw Codo_izquierda_abajo
  93+ 87E3 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87E5
  95+ 87E5 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87E9 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87ED
  98+ 87ED 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87F1 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87F5 08 00
 100+ 87F7
 101+ 87F7 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87FB 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87FF 0F FE
 103+ 8801
 104+ 8801 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8805 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8809 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 880D 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8811 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8815 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8819 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 881D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8821 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8825 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8829 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 882D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8831 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8835
 118+ 8835 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8839 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 883D 06 00
 120+ 883F
 121+ 883F 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8843 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8847 02 00
 123+ 8849
 124+ 8849 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 884D 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8851 04 00
 126+ 8853
 127+ 8853 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8857 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 885B 08 00
 129+ 885D
 130+ 885D 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8861 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8865 02 00
 132+ 8867
 133+ 8867 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 886B 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 886F 06 00
 135+ 8871
 136+ 8871 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8875 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8879 06 00
 138+ 887B
 139+ 887B              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 887B
 141+ 887B 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 887F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8883 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8887 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 888B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 888F 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8893 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8897 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 889B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 889F 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88A3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88A7 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88AB
 154+ 88AB 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88AF 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88B3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88B7 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88BB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88BF 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88C3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88C7 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88CB 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88CF 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88D3 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88D7 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88DB 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88DF
 168+ 88DF 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88E3 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88E7 06 00
 170+ 88E9
 171+ 88E9 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88ED 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88F1 02 00
 173+ 88F3
 174+ 88F3 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88F7 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88FB 04 00
 176+ 88FD
 177+ 88FD 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8901 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8905 08 00
 179+ 8907
 180+ 8907 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 890B 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 890F 02 00
 182+ 8911
 183+ 8911 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8915 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8919 06 00
 185+ 891B
 186+ 891B 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 891F 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8923 06 00
 188+ 8925
 189+ 8925 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8929 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 892D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8931 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8935 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8939 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 893D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8941 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8945 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8949 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 894D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8951 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8955
 202+ 8955
 203+ 8955
 204+ 8955
 205+ 8955
 206+ 8955
 207+ 8955
 208+ 8955
 209+ 8955
 210+ 8955
# file closed: Patrones_de_mov.asm
 132  8955              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8955              ; 19/1/24
   2+ 8955
   3+ 8955              Indice_de_niveles
   4+ 8955
   5+ 8955 5D 89        	defw Nivel_1
   6+ 8957 69 89        	defw Nivel_2
   7+ 8959
   8+ 8959              ;	...
   9+ 8959              ;	...
  10+ 8959              ;	+ Niveles ...
  11+ 8959
  12+ 8959 00 00        	defw 0
  13+ 895B 00 00        	defw 0
  14+ 895D
  15+ 895D 07           Nivel_1 db 7									; Nº de entidades.
  16+ 895E 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8962 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8966 01 01 01
  18+ 8969
  19+ 8969 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 896A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 896E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8972 01 02
  22+ 8974 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8978 01 02
  23+ 897A
# file closed: Niveles.asm
 133  897A
 134  897A              ; ******************************************************************************************************************************************************************************************
 135  897A              ; Constantes.
 136  897A              ; ******************************************************************************************************************************************************************************************
 137  897A              ;
 138  897A              ; 09/03/24
 139  897A
 140  897A              ;
 141  897A              ; Constantes.
 142  897A              ;
 143  897A
 144  897A              Sprite_vacio equ $eae0									; ($eae0 - $eb10) 48 Bytes de "0".
 145  897A
 146  897A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 147  897A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 148  897A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 149  897A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 150  897A
 151  897A              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20	; $eb00 - $f87b ..... 3419 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 152  897A
 153  897A              Scanlines_album equ $8000	;	($8000 - $8118) 		; Inicialmente 280 bytes.
 154  897A
 155  897A              ;                                                       ; 35 bytes por entidad.
 156  897A              ;														; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 157  897A              ;                                                       ; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 158  897A              ;														; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 159  897A              ; 														; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 160  897A
 161  897A              Scanlines_album_2 equ $9000    ;    ($9000 - $9118)
 162  897A
 163  897A
 164  897A              ; ******************************************************************************************************************************************************************************************
 165  897A              ; Variables.
 166  897A              ; ******************************************************************************************************************************************************************************************
 167  897A              ;
 168  897A              ; 18/01/24
 169  897A              ;
 170  897A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 171  897A              ;
 172  897A
 173  897A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 174  897A
 175  897A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 176  897B              ;															- Patrón de movimiento.
 177  897B              ;															- Aspecto
 178  897B 00           Filas db 0												; Filas. [DRAW]
 179  897C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 180  897D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 181  897F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 182  8981 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 183  8982 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 184  8983
 185  8983              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 186  8983
 187  8983 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 188  8984              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 189  8984              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 190  8984 00           Attr db 0												; Atributos de la entidad:
 191  8985
 192  8985              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 193  8985              ;
 194  8985              ;	COLORES: 0 ..... NEGRO
 195  8985              ;    		 1 ..... AZUL
 196  8985              ; 			 2 ..... ROJO
 197  8985              ;			 3 ..... MAGENTA
 198  8985              ; 			 4 ..... VERDE
 199  8985              ; 			 5 ..... CIAN
 200  8985              ;			 6 ..... AMARILLO
 201  8985              ; 			 7 ..... BLANCO
 202  8985
 203  8985 00 00        Indice_Sprite_der defw 0
 204  8987 00 00        Indice_Sprite_izq defw 0
 205  8989 00 00        Puntero_DESPLZ_der defw 0
 206  898B 00 00        Puntero_DESPLZ_izq defw 0
 207  898D
 208  898D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 209  898F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 210  8990
 211  8990              ; Variables de objeto. (Características).
 212  8990
 213  8990 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 214  8991              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 215  8991              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 216  8991              ; Variables_de_borrado ds 6
 217  8991
 218  8991 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 219  8993              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 220  8993
 221  8993 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 222  8995
 223  8995              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 224  8995              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 225  8995
 226  8995 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 227  8997              ;														; _palabras que componen el "movimiento_masticado".
 228  8997
 229  8997              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 230  8997
 231  8997 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 232  8998              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 233  8998              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 234  8998              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 235  8998              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 236  8998              ;
 237  8998              ; 														DESCRIPCIÖN:
 238  8998              ;
 239  8998              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 240  8998              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 241  8998              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 242  8998              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 243  8998              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 244  8998              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 245  8998              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 246  8998              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 247  8998              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 248  8998              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 249  8998              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 250  8998              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 251  8998              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 252  8998              ;
 253  8998              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 254  8998              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 255  8998              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 256  8998
 257  8998              ; Variables de funcionamiento. [DRAW].
 258  8998
 259  8998 00           Columnas db 0
 260  8999 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 261  899B              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 262  899B 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 263  899C
 264  899C              ; variables de control general.
 265  899C
 266  899C 00           Ctrl_2 db 0
 267  899D              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 268  899D              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 269  899D              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 270  899D              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 271  899D              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 272  899D              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 273  899D              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 274  899D              ;
 275  899D              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 276  899D              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 277  899D              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 278  899D              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 279  899D              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 280  899D              ;														BIT 4, ???
 281  899D              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 282  899D
 283  899D 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  899E
 285  899E              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 286  899E
 287  899E              ;					         		---------;      ;---------
 288  899E
 289  899E              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 290  899E
 291  899E              Perfiles_de_velocidad
 292  899E
 293  899E 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 294  899F 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 295  89A0 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 296  89A1 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 297  89A2
 298  89A2              ; Contadores de 16 bits.
 299  89A2
 300  89A2 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 301  89A4 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 302  89A6 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 303  89A8 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 304  89AA
 305  89AA              ; Movimiento. ------------------------------------------------------------------------------------------------------
 306  89AA
 307  89AA 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 308  89AC 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 309  89AE 00 00        Puntero_indice_mov_bucle defw 0							;
 310  89B0              ;
 311  89B0              ;
 312  89B0 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 313  89B1              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 314  89B1              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 315  89B1 00           Incrementa_puntero_backup db 0
 316  89B2 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 317  89B3              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 318  89B3 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 319  89B4 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 320  89B5 00           Cola_de_desplazamiento db 0								; Este byte indica:
 321  89B6              ;
 322  89B6              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 323  89B6              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 324  89B6              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 325  89B6              ;
 326  89B6              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 327  89B6              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 328  89B6              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 329  89B6              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 330  89B6              ;
 331  89B6              ;														;	"$ff" ..... Bucle infinito de repetición.
 332  89B6              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 333  89B6              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 334  89B6              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 335  89B6
 336  89B6 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 337  89B7
 338  89B7              ;														DESCRIPCIÓN:
 339  89B7              ;
 340  89B7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 341  89B7              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 342  89B7              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 343  89B7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 344  89B7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 345  89B7              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 346  89B7
 347  89B7              ;														BIT 3, Recarga de nueva oleada.
 348  89B7              ;														BIT 4, Recarga de nueva oleada.
 349  89B7              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 350  89B7              ;														BIT 6, **** Frame completo.
 351  89B7              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 352  89B7
 353  89B7 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 354  89B9              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 355  89B9              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 356  89B9              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 357  89B9
 358  89B9              ; Gestión de ENTIDADES y CAJAS.
 359  89B9
 360  89B9 00 00        Puntero_store_caja defw 0
 361  89BB 00 00        Puntero_restore_caja defw 0
 362  89BD 00 00        Indice_restore_caja defw 0
 363  89BF 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 364  89C0 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 365  89C1 00           Entidades_en_curso db 0									; ..... ..... .....
 366  89C2 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 367  89C3              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 368  89C3              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 369  89C3              ;														; _ (Numero_de_malotes)="0".
 370  89C3 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 371  89C5 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 372  89C7              ;														; _ puntero (Indice_entidades).
 373  89C7
 374  89C7              ;---------------------------------------------------------------------------------------------------------------
 375  89C7              ;
 376  89C7              ;	11/01/24
 377  89C7              ;
 378  89C7              ;	Álbumes.
 379  89C7
 380  89C7 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 381  89C9              ;														; _variable para almacenar lo posición del puntero_
 382  89C9              ; 														; _de pila, SP.
 383  89C9 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 384  89CB              ;														; La utiliza la rutina [Extrae_foto_registros].
 385  89CB 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 386  89CD
 387  89CD
 388  89CD              ; Impresión. ----------------------------------------------------------------------------------------------------
 389  89CD
 390  89CD 00 00        Album_de_pintado defw 0
 391  89CF 00 00        Album_de_borrado defw 0
 392  89D1 00 00        Techo_Scanlines_album defw 0
 393  89D3 00 00        Techo_Scanlines_album_2 defw 0
 394  89D5 00           Switch db 0
 395  89D6 00 00        Techo defw 0
 396  89D8 00 00        Scanlines_album_SP defw 0
 397  89DA 5C 86        India_SP defw Tabla_de_pintado
 398  89DC 5F 86        India_2_SP defw Tabla_de_pintado+3
 399  89DE
 400  89DE 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 401  89DF              ;
 402  89DF              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 403  89DF              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 404  89DF              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 405  89DF              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 406  89DF              ;																Habilita el borrado/pintado de sprites.
 407  89DF              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 408  89DF              ;																_ a la baja.
 409  89DF              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 410  89DF
 411  89DF
 412  89DF
 413  89DF 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 414  89E0              ;
 415  89E0              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 416  89E0              ;
 417  89E0              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 418  89E0              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 419  89E0              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 420  89E0              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 421  89E0              ;
 422  89E0              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 423  89E0              ;															_ masticados ya generados.
 424  89E0              ;
 425  89E0              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 426  89E0              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 427  89E0              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 428  89E0              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 429  89E0
 430  89E0
 431  89E0              ; Gestión de Disparos.
 432  89E0
 433  89E0              ;;Numero_de_disparotes db 0
 434  89E0              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 435  89E0              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 436  89E0              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 437  89E0              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 438  89E0              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 439  89E0              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 440  89E0              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 441  89E0              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 442  89E0              ;														; _produzca colisión.
 443  89E0              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 444  89E0              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 445  89E0              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 446  89E0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 447  89E0 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 448  89E3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 449  89E3              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 450  89E3
 451  89E3              ;---------------------------------------------------------------------------------------------------------------
 452  89E3
 453  89E3              ; Relojes y temporizaciones.
 454  89E3
 455  89E3 00           Contador_de_frames db 0
 456  89E4 00           Contador_de_frames_2 db 0
 457  89E5
 458  89E5              ;Clock_explosion db 4
 459  89E5 14           Clock_Entidades_en_curso db 20
 460  89E6 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 461  89E7              ;														; Repite la oleada de entidades.
 462  89E7              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 463  89E7              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 464  89E7              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 465  89E7
 466  89E7              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 467  89E7              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 468  89E7              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 469  89E7
 470  89E7              ;---------------------------------------------------------------------------------------------------------------
 471  89E7
 472  89E7              ; Gestión de NIVELES.
 473  89E7
 474  89E7 00           Nivel db 0												; Nivel actual del juego.
 475  89E8 00 00        Puntero_indice_NIVELES defw 0
 476  89EA 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 477  89EC              ; 														; _ que definen el NIVEL.
 478  89EC              ; Y todo comienza aquí .....
 479  89EC              ;
 480  89EC              ; 	INICIO  *************************************************************************************************************************************************************************
 481  89EC              ;
 482  89EC              ;	5/1/24
 483  89EC
 484  89EC              START
 485  89EC
 486  89EC 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 487  89EF 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 488  89F1 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 489  89F3 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 490  89F5 F3           	DI
 491  89F6
 492  89F6              ;	ld a,%00000111
 493  89F6              ;	call Cls
 494  89F6 CD C5 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 495  89F9
 496  89F9              ; INICIALIZACIÓN.
 497  89F9
 498  89F9              ;	Inicializa 1er Nivel.
 499  89F9
 500  89F9 21 55 89     	ld hl,Indice_de_niveles
 501  89FC 22 E8 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 502  89FF CD 54 AA     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 503  8A02              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 504  8A02              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 505  8A02              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 506  8A02
 507  8A02              ;	Provisional, (para desarrollo).
 508  8A02              	;-
 509  8A02              ;	ld hl,Numero_parcial_de_entidades
 510  8A02              ;	ld b,(hl)
 511  8A02              ;	inc b
 512  8A02              ;	dec b
 513  8A02              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 514  8A02
 515  8A02 CD 28 8C     	call Inicia_albumes_de_lineas
 516  8A05
 517  8A05 CD 99 AA     4 call Inicia_Entidades
 518  8A08
 519  8A08 CD 38 8C     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 520  8A0B              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 521  8A0B              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 522  8A0B              ; (Esto se dá cuando se inicia una nueva oleada).
 523  8A0B
 524  8A0B              ;	ld a,(Ctrl_1)
 525  8A0B              ;	bit 3,a
 526  8A0B              ;	jr nz,5F											 ; Loop
 527  8A0B
 528  8A0B              ; 	INICIA AMADEUS !!!!!
 529  8A0B
 530  8A0B              ;3 call Restore_Amadeus
 531  8A0B              ;	call Inicia_Puntero_objeto
 532  8A0B              ;	call Draw
 533  8A0B
 534  8A0B              ;	call Guarda_movimiento_masticado	;! Provisional
 535  8A0B
 536  8A0B              ;	call Genera_datos_de_impresion
 537  8A0B              ;	call Guarda_datos_de_borrado_Amadeus
 538  8A0B
 539  8A0B              ;	ld de,Amadeus_db
 540  8A0B              ;	call Store_Amadeus
 541  8A0B
 542  8A0B              ; 	INICIA DISPAROS !!!!!
 543  8A0B
 544  8A0B              ;	call Inicia_Puntero_Disparo_Entidades
 545  8A0B              ;	call Inicia_Puntero_Disparo_Amadeus
 546  8A0B
 547  8A0B              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 548  8A0B
 549  8A0B              ;5 call Inicia_punteros_de_cajas
 550  8A0B              ;	call Restore_entidad
 551  8A0B
 552  8A0B              ;	ld a,(Ctrl_1)
 553  8A0B              ;	bit 3,a
 554  8A0B              ;	jr z,6F
 555  8A0B
 556  8A0B              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 557  8A0B
 558  8A0B              ;	ld hl,Ctrl_1
 559  8A0B              ;	res 3,(hl)
 560  8A0B              ;	jr Main
 561  8A0B
 562  8A0B              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 563  8A0B
 564  8A0B              6
 565  8A0B
 566  8A0B              ;	call Calcula_numero_de_malotes
 567  8A0B
 568  8A0B              ; Damos por concluida la construcción del FRAME.
 569  8A0B              ; Inicializamos (Scanlines_album_SP). Se sitúa al comienzo del álbum que acabamos de completar.
 570  8A0B
 571  8A0B 2A D8 89     	ld hl,(Scanlines_album_SP)
 572  8A0E 22 D1 89     	ld (Techo_Scanlines_album),hl
 573  8A11
 574  8A11 2A CF 89     	ld hl,(Album_de_borrado)
 575  8A14 22 D8 89     	ld (Scanlines_album_SP),hl
 576  8A17
 577  8A17 21 DE 89     	ld hl,Ctrl_3
 578  8A1A CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 579  8A1C CB D6        	set 2,(hl)
 580  8A1E
 581  8A1E FB           	ei
 582  8A1F 76           	halt
 583  8A20
 584  8A20              ; ------------------------------------
 585  8A20
 586  8A20              Main
 587  8A20              ;
 588  8A20              ;	11/12/23
 589  8A20
 590  8A20              ; Aparece nueva entidad ???
 591  8A20
 592  8A20              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 593  8A20              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 594  8A20              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 595  8A20              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 596  8A20              ;														; _un 2º bloque.
 597  8A20
 598  8A20              ;	call Genera_scanlines_masticados_a_borrar
 599  8A20              ;	call Limpia_Almacen_de_scanlines_masticados
 600  8A20
 601  8A20              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 602  8A20              ; 													 	; _(Scanlines_album_SP).
 603  8A20
 604  8A20 3A E5 89     	ld a,(Clock_Entidades_en_curso)
 605  8A23 47           	ld b,a
 606  8A24 3A E3 89     	ld a,(Contador_de_frames)
 607  8A27 B8           	cp b
 608  8A28 20 18        	jr nz,13F
 609  8A2A
 610  8A2A              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 611  8A2A              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 612  8A2A
 613  8A2A 3A C0 89     21 ld a,(Numero_parcial_de_entidades)
 614  8A2D 47           	ld b,a
 615  8A2E 3A C1 89     	ld a,(Entidades_en_curso)
 616  8A31 B8           	cp b
 617  8A32 28 0E        	jr z,13F
 618  8A34 30 0C        	jr nc,13F
 619  8A36
 620  8A36 3C           	inc a
 621  8A37 32 C1 89     	ld (Entidades_en_curso),a
 622  8A3A
 623  8A3A              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 624  8A3A
 625  8A3A 3A E5 89     	ld a,(Clock_Entidades_en_curso)
 626  8A3D              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 627  8A3D              ;! _ IMPREDECIBLE !!!!
 628  8A3D C6 64        	add 100
 629  8A3F 32 E5 89     	ld (Clock_Entidades_en_curso),a
 630  8A42
 631  8A42              ; -------------------------------------------------------------------------------------------------------------
 632  8A42
 633  8A42              ; Habilita disparos.
 634  8A42
 635  8A42              13
 636  8A42
 637  8A42              ;	ld hl,Disparo_Amadeus
 638  8A42              ;	ld de,CLOCK_repone_disparo_Amadeus
 639  8A42              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 640  8A42
 641  8A42              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 642  8A42              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 643  8A42              ;	call Habilita_disparos
 644  8A42
 645  8A42              ; COLISIONES.
 646  8A42
 647  8A42              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 648  8A42
 649  8A42              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 650  8A42              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 651  8A42              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 652  8A42
 653  8A42              ;	xor a
 654  8A42              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 655  8A42
 656  8A42              ;	call Inicia_punteros_de_cajas
 657  8A42              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 658  8A42              ; 														; _ en DRAW.
 659  8A42
 660  8A42              ;	ld a,(Filas)
 661  8A42              ;	and a
 662  8A42              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 663  8A42              ;	call Incrementa_punteros_de_cajas
 664  8A42              ;	jr 12B
 665  8A42
 666  8A42              ; ---------------------------------------------------------------------------------------
 667  8A42
 668  8A42 3A C0 89     10 ld a,(Numero_parcial_de_entidades)
 669  8A45 47               ld b,a
 670  8A46 A7           	and a
 671  8A47 20 00        	jr nz,11F
 672  8A49
 673  8A49              ;	ld hl,Ctrl_1;
 674  8A49              ;	bit 4,(hl)
 675  8A49              ;	jp nz,16F
 676  8A49
 677  8A49              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 678  8A49
 679  8A49              ;	ld hl,Ctrl_1
 680  8A49              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 681  8A49
 682  8A49              ;	ld a,(Contador_de_frames)
 683  8A49              ;	inc a
 684  8A49              ;	ld (Activa_recarga_cajas),a
 685  8A49
 686  8A49              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 687  8A49
 688  8A49 3A C1 89     11 ld a,(Entidades_en_curso)
 689  8A4C A7           	and a
 690  8A4D 28 36        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 691  8A4F 47           	ld b,a												; No hay entidades que gestionar.
 692  8A50
 693  8A50              ; ( Código que ejecutamos con cada entidad: ).
 694  8A50
 695  8A50              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 696  8A50              ;
 697  8A50              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 698  8A50
 699  8A50 21 DE 89     	ld hl,Ctrl_3
 700  8A53 CB D6        	set 2,(hl)
 701  8A55 CD 9C 8A     	call Change
 702  8A58
 703  8A58 C5           15 push bc 												; Nº de entidades en curso.
 704  8A59
 705  8A59 CD 89 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 706  8A5C
 707  8A5C CD E6 8A     	call Recauda_informacion_de_entidad_en_curso		; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 708  8A5F
 709  8A5F
 710  8A5F              ; Existe "Entidad_guía" ???.
 711  8A5F              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 712  8A5F
 713  8A5F              ;	ld a,(Ctrl_3)
 714  8A5F              ;	bit 1,a
 715  8A5F              ;	jr nz,22F
 716  8A5F
 717  8A5F              ; Almacén de "Movimientos_masticados" lleno ???
 718  8A5F              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 719  8A5F              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 720  8A5F
 721  8A5F              ;;	ld a,(Ctrl_3)
 722  8A5F              ;;	bit 3,a
 723  8A5F              ;;	jr nz,22F
 724  8A5F
 725  8A5F              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 726  8A5F
 727  8A5F              ;	ld hl,Ctrl_2
 728  8A5F              ;	set 5,(hl)
 729  8A5F              ;	ld hl,Ctrl_3
 730  8A5F              ;	set 1,(hl)
 731  8A5F
 732  8A5F              ; Impacto ???
 733  8A5F
 734  8A5F              ;22 ld a,(Impacto)
 735  8A5F              ;	and a
 736  8A5F              ;	jr z,8F
 737  8A5F
 738  8A5F              ; Hay Impacto en esta entidad.
 739  8A5F
 740  8A5F              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 741  8A5F              ;	dec (hl)
 742  8A5F              ;	jp nz,17F
 743  8A5F
 744  8A5F              ;! Velocidad de la animación de la explosión.
 745  8A5F
 746  8A5F              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 747  8A5F              ;														; _,(velocidad de la explosión).
 748  8A5F              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 749  8A5F
 750  8A5F              ;	call Repone_datos_de_borrado
 751  8A5F              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 752  8A5F
 753  8A5F              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 754  8A5F
 755  8A5F              ;	ld a,(Ctrl_2)
 756  8A5F              ;	bit 1,a
 757  8A5F              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 758  8A5F
 759  8A5F              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 760  8A5F
 761  8A5F              ;	ld a,(CTRL_DESPLZ)
 762  8A5F              ;	and a
 763  8A5F              ;	jr nz,18F
 764  8A5F
 765  8A5F              ;	ld hl,Indice_Explosion_2x2-2
 766  8A5F              ;	ld (Puntero_DESPLZ_der),hl
 767  8A5F              ;	jr 19F
 768  8A5F
 769  8A5F              ;18 ld hl,Indice_Explosion_2x3-2
 770  8A5F              ;	ld (Puntero_DESPLZ_der),hl
 771  8A5F
 772  8A5F              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 773  8A5F              ;	set 1,(hl)
 774  8A5F              ;	jr 7F
 775  8A5F
 776  8A5F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 777  8A5F              ; _con las coordenadas de la entidad almacenada en DRAW.
 778  8A5F
 779  8A5F              ;8 ld a,(Ctrl_1)
 780  8A5F              ;	bit 2,a
 781  8A5F              ;	jr z,7F
 782  8A5F
 783  8A5F              ;	ld hl,(Coordenadas_disparo_certero)
 784  8A5F              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 785  8A5F              ;														; E contiene la coordenada_X del disparo.
 786  8A5F              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 787  8A5F              ;														; H FILA, (Coordenada_y de la entidad).
 788  8A5F              ;	and a
 789  8A5F              ;	sbc hl,de
 790  8A5F
 791  8A5F              ;	call Determina_resultado_comparativa
 792  8A5F
 793  8A5F              ;	ld a,b
 794  8A5F              ;	and a
 795  8A5F              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 796  8A5F
 797  8A5F              ; ----- ----- -----
 798  8A5F
 799  8A5F              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 800  8A5F              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 801  8A5F
 802  8A5F              ;	ld hl,Ctrl_1
 803  8A5F              ;	res 2,(hl)
 804  8A5F
 805  8A5F              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 806  8A5F
 807  8A5F              ;	ld a,(Ctrl_0)
 808  8A5F              ;	bit 4,a
 809  8A5F              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 810  8A5F
 811  8A5F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 812  8A5F              ; [[[
 813  8A5F              ;	call Detecta_disparo_entidad
 814  8A5F              ; ]]]
 815  8A5F
 816  8A5F CD 02 AB     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 817  8A62
 818  8A62              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 819  8A62
 820  8A62 2A 91 89     	ld hl,(Puntero_de_impresion)
 821  8A65 CD 4C AC     	call Genera_coordenadas
 822  8A68
 823  8A68              ;	ld hl,Ctrl_0
 824  8A68              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 825  8A68
 826  8A68 CD F8 AA     17 call Store_Restore_cajas
 827  8A6B
 828  8A6B C1           	pop bc
 829  8A6C
 830  8A6C 10 EA        	djnz 15B
 831  8A6E
 832  8A6E              ; Hemos terminado de gestionar TODAS las ENTIDADES.
 833  8A6E
 834  8A6E CD FA 8A     	call Inicializa_India_y_limpia_Tabla_de_impresion 	; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 835  8A71 CD 11 8B     	call Ordena_tabla_de_impresion
 836  8A74 CD 38 8C     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 837  8A77
 838  8A77              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 839  8A77              ; Hemos gestionado todas las unidades.
 840  8A77              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 841  8A77
 842  8A77              ;	ld hl,Ctrl_1
 843  8A77              ;	res 2,(hl)
 844  8A77
 845  8A77
 846  8A77 CD B7 8A     	call Borra_diferencia
 847  8A7A
 848  8A7A 3A DE 89     	ld a,(Ctrl_3)
 849  8A7D CB 5F        	bit 3,a
 850  8A7F 20 04        	jr nz,16F
 851  8A81
 852  8A81 EB           	ex de,hl
 853  8A82 71           	ld (hl),c
 854  8A83 2C           	inc l
 855  8A84 70           	ld (hl),b											; Nuevo techo, mayor que el anterior.
 856  8A85
 857  8A85              ; Aquí situaremos la rutina que ordena el índice Masa.
 858  8A85
 859  8A85 2A CF 89     16 ld hl,(Album_de_borrado)
 860  8A88 22 D8 89     	ld (Scanlines_album_SP),hl
 861  8A8B
 862  8A8B 21 DE 89     	ld hl,Ctrl_3
 863  8A8E CB C6        	set 0,(hl) 											; Indica Frame completo.
 864  8A90
 865  8A90 CB 9E        	res 3,(hl)
 866  8A92 CB A6        	res 4,(hl)
 867  8A94
 868  8A94 AF           	xor a
 869  8A95 D3 FE        	out ($fe),a
 870  8A97 76           	halt
 871  8A98
 872  8A98              ; ----------------------------------------
 873  8A98
 874  8A98              ;	ld a,(Ctrl_1) 										; Existe Loop?
 875  8A98              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 876  8A98 CA 20 8A     	jp z,Main
 877  8A9B
 878  8A9B              ; RECARGA DE NUEVA OLEADA.
 879  8A9B
 880  8A9B              ;	ld a,(Contador_de_frames)
 881  8A9B              ;	ld b,a
 882  8A9B              ;	ld a,(Activa_recarga_cajas)
 883  8A9B              ;	cp b
 884  8A9B              ;	jr z,20F
 885  8A9B
 886  8A9B              ;	ld hl,Ctrl_1
 887  8A9B              ;	set 4,(hl)
 888  8A9B              ;	jp Main
 889  8A9B
 890  8A9B              ;20 ld hl,Ctrl_1
 891  8A9B              ;	res 4,(hl)
 892  8A9B
 893  8A9B              ;	ld a,(Contador_de_frames)
 894  8A9B
 895  8A9B              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 896  8A9B              ;! _ IMPREDECIBLE !!!!
 897  8A9B
 898  8A9B              ;	add 10
 899  8A9B              ;	ld (Clock_Entidades_en_curso),a
 900  8A9B
 901  8A9B              ;	jp 4B
 902  8A9B
 903  8A9B C9           	ret
 904  8A9C
 905  8A9C              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 906  8A9C              ;
 907  8A9C              ;	16/11/23
 908  8A9C
 909  8A9C              ;;Gestiona_Amadeus
 910  8A9C
 911  8A9C              ;! Activa/desactiva impacto con Amadeus.
 912  8A9C
 913  8A9C              ;	ld a,(Impacto)
 914  8A9C              ;	and a
 915  8A9C              ;	jr nz,2F
 916  8A9C
 917  8A9C              ;;	call Mov_Amadeus
 918  8A9C
 919  8A9C              ;;2 ld a,(Ctrl_0)
 920  8A9C              ;;	bit 4,a
 921  8A9C              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 922  8A9C
 923  8A9C              ;;	call Guarda_foto_entidad_a_pintar
 924  8A9C              ;;	call Guarda_datos_de_borrado_Amadeus
 925  8A9C
 926  8A9C              ;;1 ld hl,Ctrl_0
 927  8A9C              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 928  8A9C
 929  8A9C              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 930  8A9C
 931  8A9C              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 932  8A9C
 933  8A9C              ;	call Calcula_numero_de_disparotes
 934  8A9C
 935  8A9C              ;;	ret
 936  8A9C
 937  8A9C              ; -----------------------------
 938  8A9C              ;
 939  8A9C              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 940  8A9C              ;
 941  8A9C              ;	INPUTS: B a de estar a "0".
 942  8A9C
 943  8A9C              ;Prepara_Borra_sprites
 944  8A9C
 945  8A9C              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 946  8A9C              ;	ld a,l
 947  8A9C              ;	ret z
 948  8A9C
 949  8A9C              ;	srl a
 950  8A9C
 951  8A9C              ;2 sub 16
 952  8A9C              ;	jr z,1F
 953  8A9C              ;	inc b
 954  8A9C              ;	jr 2B
 955  8A9C
 956  8A9C              ;1 inc b
 957  8A9C
 958  8A9C              ;	exx
 959  8A9C              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 960  8A9C              ;	exx
 961  8A9C
 962  8A9C              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 963  8A9C              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 964  8A9C
 965  8A9C              ;	ret
 966  8A9C
 967  8A9C              ; --------------------------------------------------------------------------------------------------------------
 968  8A9C              ;
 969  8A9C              ;	15/12/23
 970  8A9C
 971  8A9C              ;Mov_obj
 972  8A9C
 973  8A9C              ;	ld a,(Ctrl_2)
 974  8A9C              ;	bit 1,a
 975  8A9C              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 976  8A9C
 977  8A9C              ; Explosión:
 978  8A9C
 979  8A9C              ;	ld a,(Frames_explosion)
 980  8A9C              ;	and a
 981  8A9C              ;	jr nz,4F
 982  8A9C
 983  8A9C              ;!  Una alimaña menos!!!!!!!!!1
 984  8A9C
 985  8A9C              ; Se trataba de una Entidad_guía ???
 986  8A9C
 987  8A9C              ;	ld a,(Ctrl_2)
 988  8A9C              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 989  8A9C              ;	jr z,5F
 990  8A9C
 991  8A9C              ;	ld hl,Ctrl_3
 992  8A9C              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 993  8A9C
 994  8A9C              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 995  8A9C              ;!! _generado puede ser distinto, (aletoriedad).
 996  8A9C
 997  8A9C              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 998  8A9C              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 999  8A9C              ;	dec (hl)
1000  8A9C              ;	ld hl,Entidades_en_curso
1001  8A9C              ;	dec (hl)
1002  8A9C              ;	ld hl,Numero_de_entidades
1003  8A9C              ;	dec (hl)
1004  8A9C              ;	jr 3F
1005  8A9C
1006  8A9C              ; -----
1007  8A9C
1008  8A9C              ;	`Movemos´ la explosión.
1009  8A9C
1010  8A9C              ;4 ld hl,(Puntero_DESPLZ_der)
1011  8A9C              ;	inc hl
1012  8A9C              ;	inc hl
1013  8A9C              ;	call Extrae_address
1014  8A9C              ;;	ld (Puntero_objeto),hl
1015  8A9C
1016  8A9C              ;;	ld hl,Frames_explosion
1017  8A9C              ;;	dec (hl)
1018  8A9C
1019  8A9C              ;;	ld hl,Ctrl_0
1020  8A9C              ;;	set 4,(hl);;
1021  8A9C
1022  8A9C              ;;	jr 3F
1023  8A9C
1024  8A9C              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1025  8A9C
1026  8A9C              ;2 xor a
1027  8A9C              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1028  8A9C
1029  8A9C              ; Movemos Entidades malignas.
1030  8A9C              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1031  8A9C
1032  8A9C              ;	ld a,(Ctrl_2)
1033  8A9C              ;	bit 5,a
1034  8A9C              ;	jr nz,8F
1035  8A9C
1036  8A9C              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1037  8A9C              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1038  8A9C              ;	jr 7F
1039  8A9C
1040  8A9C              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1041  8A9C
1042  8A9C              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1043  8A9C              ;	bit 4,a
1044  8A9C              ;	ret z
1045  8A9C
1046  8A9C              ; Ha habido desplazamiento de la entidad maligna.
1047  8A9C              ; Ha llegado a zona de AMADEUS ???
1048  8A9C
1049  8A9C              ;7 ld a,(Coordenada_y)
1050  8A9C              ;	cp $14
1051  8A9C              ;	jr c,1F
1052  8A9C
1053  8A9C              ; ---------
1054  8A9C
1055  8A9C              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1056  8A9C              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1057  8A9C
1058  8A9C              ;	di
1059  8A9C              ;	call Genera_coordenadas_X
1060  8A9C              ;	call Compara_coordenadas_X
1061  8A9C              ;	ei
1062  8A9C
1063  8A9C              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1064  8A9C
1065  8A9C              ; ---------
1066  8A9C
1067  8A9C              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1068  8A9C              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1069  8A9C              ;	call Limpia_Variables_de_borrado
1070  8A9C
1071  8A9C              ;3 ret
1072  8A9C
1073  8A9C              ; --------------------------------------------------------------------------------------------------------------
1074  8A9C              ;
1075  8A9C              ;	29/1/23
1076  8A9C
1077  8A9C              ;Mov_Amadeus
1078  8A9C
1079  8A9C              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1080  8A9C
1081  8A9C              ;	call Mov_right
1082  8A9C
1083  8A9C              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1084  8A9C              ;	bit 4,a
1085  8A9C              ;	ret z
1086  8A9C
1087  8A9C              ; ---------
1088  8A9C
1089  8A9C              ;   call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1090  8A9C              ;	call Repone_datos_de_borrado_Amadeus
1091  8A9C              ;	call Limpia_Variables_de_borrado
1092  8A9C
1093  8A9C              ;	ret
1094  8A9C
1095  8A9C              ; --------------------------------------------------------------------------------------------------------------
1096  8A9C              ;
1097  8A9C              ;	17/3/24
1098  8A9C
1099  8A9C              Change
1100  8A9C
1101  8A9C 3A D5 89     	ld a,(Switch)
1102  8A9F EE 01        	xor 1
1103  8AA1 32 D5 89     	ld (Switch),a
1104  8AA4
1105  8AA4 2A CD 89     	ld hl,(Album_de_pintado)
1106  8AA7 ED 5B CF 89  	ld de,(Album_de_borrado)
1107  8AAB EB           	ex de,hl
1108  8AAC 22 CD 89     	ld (Album_de_pintado),hl
1109  8AAF 22 D8 89     	ld (Scanlines_album_SP),hl
1110  8AB2
1111  8AB2 ED 53 CF 89  	ld (Album_de_borrado),de
1112  8AB6
1113  8AB6 C9           	ret
1114  8AB7
1115  8AB7              ; ------------------------------------
1116  8AB7              ;
1117  8AB7              ; 18/03/24
1118  8AB7
1119  8AB7              Borra_diferencia
1120  8AB7
1121  8AB7 ED 4B D8 89  	ld bc,(Scanlines_album_SP)
1122  8ABB
1123  8ABB 3A D5 89     	ld a,(Switch)
1124  8ABE A7           	and a
1125  8ABF 28 08        	jr z,2F
1126  8AC1
1127  8AC1 2A D3 89     	ld hl,(Techo_Scanlines_album_2)
1128  8AC4 11 D3 89     	ld de,Techo_Scanlines_album_2
1129  8AC7 18 06        	jr 3F
1130  8AC9
1131  8AC9 2A D1 89     2 ld hl,(Techo_Scanlines_album)
1132  8ACC 11 D1 89     	ld de,Techo_Scanlines_album
1133  8ACF
1134  8ACF              ; Diferencia.
1135  8ACF
1136  8ACF ED 42        3 sbc hl,bc
1137  8AD1
1138  8AD1 C8           	ret z
1139  8AD2 D8           	ret c
1140  8AD3
1141  8AD3              ; Nuevo techo, (más bajo que el anterior).
1142  8AD3              ; Fijamos nuevo techo y borramos bytes sobrantes.
1143  8AD3
1144  8AD3 EB           	ex de,hl
1145  8AD4
1146  8AD4 71           	ld (hl),c
1147  8AD5 2C           	inc l
1148  8AD6 70           	ld (hl),b
1149  8AD7
1150  8AD7 AF           	xor a
1151  8AD8 43           	ld b,e
1152  8AD9
1153  8AD9 2A D8 89     	ld hl,(Scanlines_album_SP)
1154  8ADC
1155  8ADC 77           1 ld (hl),a
1156  8ADD 2C           	inc l
1157  8ADE 10 FC        	djnz 1B
1158  8AE0
1159  8AE0              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1160  8AE0
1161  8AE0 21 DE 89     	ld hl,Ctrl_3
1162  8AE3 CB DE        	set 3,(hl)
1163  8AE5
1164  8AE5 C9           	ret
1165  8AE6
1166  8AE6              ; --------------------------------------------------------------------------------------------------------------
1167  8AE6              ;
1168  8AE6              ;	26/3/24
1169  8AE6
1170  8AE6              Recauda_informacion_de_entidad_en_curso
1171  8AE6
1172  8AE6              ; Almacena la Coordenada Y de la entidad en curso.
1173  8AE6
1174  8AE6              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1175  8AE6
1176  8AE6 3A 82 89     	ld a,(Coordenada_y)
1177  8AE9 2A DA 89     	ld hl,(India_SP)
1178  8AEC 77           	ld (hl),a
1179  8AED 2C           	inc l
1180  8AEE
1181  8AEE              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1182  8AEE
1183  8AEE ED 5B D8 89  	ld de,(Scanlines_album_SP)
1184  8AF2
1185  8AF2 73           	ld (hl),e
1186  8AF3 2C           	inc l
1187  8AF4 72           	ld (hl),d
1188  8AF5 2C           	inc l
1189  8AF6
1190  8AF6 22 DA 89     	ld (India_SP),hl
1191  8AF9
1192  8AF9 C9           	ret
1193  8AFA
1194  8AFA              ; --------------------------------------------------------------------------------------------------------------
1195  8AFA              ;
1196  8AFA              ;	27/03/24
1197  8AFA              ;
1198  8AFA
1199  8AFA              Inicializa_India_y_limpia_Tabla_de_impresion
1200  8AFA
1201  8AFA 2A DA 89     	ld hl,(India_SP)
1202  8AFD 01 71 86     	ld bc,Tabla_de_pintado+21
1203  8B00
1204  8B00 79           	ld a,c
1205  8B01 95           	sub l
1206  8B02 28 06        	jr z,2F
1207  8B04 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1208  8B05              ;														; _ y pasamos a inicializar (India_SP).
1209  8B05 AF           	xor a
1210  8B06
1211  8B06 77           1 ld (hl),a
1212  8B07 2C           	inc l
1213  8B08 10 FC        	djnz 1B												; Limpia Tabla.
1214  8B0A
1215  8B0A 21 5C 86     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1216  8B0D 22 DA 89     	ld (India_SP),hl
1217  8B10
1218  8B10 C9           	ret
1219  8B11
1220  8B11              ; --------------------------------------------------------------------------------------------------------------
1221  8B11              ;
1222  8B11              ;	31/3/24
1223  8B11
1224  8B11              Ordena_tabla_de_impresion
1225  8B11
1226  8B11              ; 5794 T/states.
1227  8B11              ; 6278 T/states.
1228  8B11              ; 5310 T/states.
1229  8B11
1230  8B11              ; Inicializamos punteros (India_SP) e (India_2_SP).
1231  8B11              ; Inicializamos contador de comparaciones, [C].
1232  8B11              ; Cargamos los registros A y B para efectuar comparación.
1233  8B11
1234  8B11 DD 2E 00     	ld ixl,0
1235  8B14
1236  8B14 3A C1 89     	ld a,(Entidades_en_curso)
1237  8B17 FE 04        	cp 4 	;	4
1238  8B19 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1239  8B1A
1240  8B1A 3D           	dec a
1241  8B1B 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1242  8B1C 51           	ld d,c 										; Copia de respaldo.
1243  8B1D
1244  8B1D 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1245  8B1E
1246  8B1E 21 5F 86     	ld hl,Tabla_de_pintado+3
1247  8B21 46           	ld b,(hl)
1248  8B22 22 DC 89     	ld (India_2_SP),hl
1249  8B25
1250  8B25 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1251  8B26 DC 4E 8B     	call c, Avanza_India_2_SP
1252  8B29 CC 4E 8B     	call z, Avanza_India_2_SP
1253  8B2C
1254  8B2C DD 2D        	dec ixl
1255  8B2E 28 18        	jr z,2F
1256  8B30
1257  8B30
1258  8B30              ; --------------------------------------------------------------------------------------------------------------
1259  8B30              ;
1260  8B30              ;	7/4/24
1261  8B30
1262  8B30              Trueque
1263  8B30
1264  8B30              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1265  8B30              ;  			A contiene en nº de fila de (India_SP).
1266  8B30              ;			HL contiene (India_2_SP).
1267  8B30
1268  8B30 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1269  8B31 E5           	push hl										; Preservo (India_2_SP).
1270  8B32
1271  8B32 ED 5B DA 89  	ld de,(India_SP)
1272  8B36 EB           	ex de,hl
1273  8B37 70           	ld (hl),b
1274  8B38 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1275  8B39
1276  8B39 CD 78 8B     	call Intercambia_1_byte
1277  8B3C CD 78 8B     	call Intercambia_1_byte
1278  8B3F
1279  8B3F
1280  8B3F              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1281  8B3F              ; Recuperamos (India_2_SP) en HL.
1282  8B3F
1283  8B3F 2A DA 89     	ld hl,(India_SP)
1284  8B42 7E           	ld a,(hl)
1285  8B43
1286  8B43 E1           	pop hl
1287  8B44 D1           	pop de
1288  8B45
1289  8B45              ; --------------------------------------------------------------------------------------------------------------
1290  8B45
1291  8B45 CD 4E 8B     	call Avanza_India_2_SP
1292  8B48
1293  8B48 14           2 inc d
1294  8B49 15           	dec d
1295  8B4A C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1296  8B4B
1297  8B4B              ;	ld ixl,0
1298  8B4B 18 D8        	jr 1B
1299  8B4D
1300  8B4D C9           	ret
1301  8B4E
1302  8B4E              ; ----- ----- ----- ----- -----
1303  8B4E
1304  8B4E              Avanza_India_2_SP
1305  8B4E
1306  8B4E DD 2C        	inc ixl
1307  8B50
1308  8B50 2C           	inc l
1309  8B51 2C           	inc l
1310  8B52 2C           	inc l
1311  8B53
1312  8B53 22 DC 89     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1313  8B56
1314  8B56 46           	ld b,(hl)
1315  8B57
1316  8B57 0D           	dec c
1317  8B58 28 01        	jr z,Avanza_punteros_indios
1318  8B5A C9           	ret
1319  8B5B
1320  8B5B              ; ----- ----- ----- ----- -----
1321  8B5B
1322  8B5B              Avanza_punteros_indios
1323  8B5B
1324  8B5B 15           	dec d
1325  8B5C
1326  8B5C 28 13        	jr z,Prepara_salida
1327  8B5E
1328  8B5E 4A           	ld c,d
1329  8B5F
1330  8B5F 2A DA 89     	ld hl,(India_SP)
1331  8B62 2C           	inc l
1332  8B63 2C           	inc l
1333  8B64 2C           	inc l
1334  8B65 22 DA 89     	ld (India_SP),hl
1335  8B68 7E           	ld a,(hl)
1336  8B69
1337  8B69 2C           	inc l
1338  8B6A 2C           	inc l
1339  8B6B 2C           	inc l
1340  8B6C 22 DC 89     	ld (India_2_SP),hl
1341  8B6F 46           	ld b,(hl)
1342  8B70
1343  8B70 C9           	ret
1344  8B71
1345  8B71              Prepara_salida
1346  8B71
1347  8B71 21 5C 86     	ld hl,Tabla_de_pintado
1348  8B74 22 DA 89     	ld (India_SP),hl
1349  8B77 C9           	ret
1350  8B78
1351  8B78
1352  8B78 2C           Intercambia_1_byte inc l
1353  8B79 1C           	inc e
1354  8B7A 46           	ld b,(hl)
1355  8B7B 1A           	ld a,(de)
1356  8B7C EB           	ex de,hl
1357  8B7D 70           	ld (hl),b
1358  8B7E 12           	ld (de),a									; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1359  8B7F C9           	ret
1360  8B80
1361  8B80              ; -----------------------------------------------------------------------------------
1362  8B80              ;
1363  8B80              ;	20/01/24
1364  8B80              ;
1365  8B80              ;
1366  8B80
1367  8B80              Construye_movimientos_masticados_entidad
1368  8B80
1369  8B80 2A 93 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1370  8B83 E5           	push hl
1371  8B84 CD C7 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1372  8B87              ;															; _ el (Contador_de_mov_masticados).
1373  8B87 CD 54 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1374  8B8A              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1375  8B8A CD 0E 95     	call Recompone_posicion_inicio
1376  8B8D
1377  8B8D CD 34 92     1 call Draw
1378  8B90 CD AC 8B     	call Guarda_movimiento_masticado
1379  8B93
1380  8B93 CD 88 98     	call Movimiento
1381  8B96
1382  8B96 3A DE 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1383  8B99 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1384  8B9B 28 F0        	jr z,1B
1385  8B9D
1386  8B9D              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1387  8B9D              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1388  8B9D
1389  8B9D E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1390  8B9E 22 93 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1391  8BA1
1392  8BA1              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1393  8BA1
1394  8BA1 CD EC 99     	call Situa_en_contador_general_de_mov_masticados
1395  8BA4
1396  8BA4              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1397  8BA4              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1398  8BA4
1399  8BA4 ED 4B 95 89  	ld bc,(Contador_de_mov_masticados)
1400  8BA8
1401  8BA8 71           	ld (hl),c
1402  8BA9 23           	inc hl
1403  8BAA 70           	ld (hl),b
1404  8BAB
1405  8BAB C9           	ret
1406  8BAC
1407  8BAC              ; -----------------------------------------------------------------------------------
1408  8BAC              ;
1409  8BAC              ;	28/12/23
1410  8BAC              ;
1411  8BAC              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1412  8BAC              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1413  8BAC
1414  8BAC              Guarda_movimiento_masticado
1415  8BAC
1416  8BAC ED 73 C7 89  	ld (Stack),sp
1417  8BB0 ED 7B 93 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1418  8BB4
1419  8BB4              ;	push hl
1420  8BB4 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1421  8BB6 FD E5            push iy 												; Pushea Puntero_objeto.
1422  8BB8
1423  8BB8 ED 7B C7 89      ld sp,(Stack)
1424  8BBC
1425  8BBC 2A 95 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1426  8BBF 23           	inc hl
1427  8BC0 22 95 89     	ld (Contador_de_mov_masticados),hl
1428  8BC3
1429  8BC3 CD C7 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1430  8BC6              ;															; _ el (Contador_de_mov_masticados).
1431  8BC6 C9               ret
1432  8BC7
1433  8BC7              ; --------------------------------------------------------------------------------------------------------------
1434  8BC7              ;
1435  8BC7              ;	12/1/24
1436  8BC7              ;
1437  8BC7              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1438  8BC7
1439  8BC7              Actualiza_Puntero_de_almacen_de_mov_masticados
1440  8BC7
1441  8BC7 2A 93 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1442  8BCA 01 04 00     	ld bc,4
1443  8BCD A7           	and a
1444  8BCE ED 4A        	adc hl,bc
1445  8BD0 22 93 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1446  8BD3 C9           	ret
1447  8BD4
1448  8BD4              ; --------------------------------------------------------------------------------------------------------------
1449  8BD4              ;
1450  8BD4              ;	24/03/24
1451  8BD4              ;
1452  8BD4              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1453  8BD4              ;
1454  8BD4              ;	IX contiene el puntero de impresión.
1455  8BD4              ;	DE contiene (Puntero_objeto).
1456  8BD4
1457  8BD4
1458  8BD4 ED 73 C7 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1459  8BD8 ED 7B 93 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1460  8BDC
1461  8BDC D1           	pop de 															; DE contiene Puntero_objeto
1462  8BDD DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1463  8BDF
1464  8BDF ED 73 93 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1465  8BE3 ED 7B C7 89  	ld sp,(Stack)
1466  8BE7
1467  8BE7 7B           	ld a,e
1468  8BE8 82           	add d															; Comprueba si ya no hay datos en el almacén.
1469  8BE9
1470  8BE9 CC 1F AB     	call z,Reinicia_entidad_maliciosa
1471  8BEC
1472  8BEC C9           	ret
1473  8BED
1474  8BED              ; --------------------------------------------------------------------------------------------------------------
1475  8BED              ;
1476  8BED              ;	28/12/23
1477  8BED              ;
1478  8BED              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1479  8BED              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1480  8BED
1481  8BED              Guarda_foto_entidad_a_pintar
1482  8BED
1483  8BED 3A 97 89     	ld a,(Ctrl_0)
1484  8BF0 CB 77        	bit 6,a
1485  8BF2 28 04        	jr z,5F
1486  8BF4
1487  8BF4              ;	Guarda la foto de Amadeus.
1488  8BF4
1489  8BF4              ;	call Draw
1490  8BF4              ;	call Guarda_movimiento_masticado	;! Provisional
1491  8BF4 CD 9F AC     	call Genera_datos_de_impresion
1492  8BF7 C9           	ret
1493  8BF8
1494  8BF8              ; ENTIDADES!
1495  8BF8              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1496  8BF8
1497  8BF8 3A DE 89     5 ld a,(Ctrl_3)
1498  8BFB CB 5F        	bit 3,a
1499  8BFD 28 01        	jr z,1F
1500  8BFF
1501  8BFF              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1502  8BFF
1503  8BFF              4
1504  8BFF              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1505  8BFF C9           	ret
1506  8C00
1507  8C00              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1508  8C00
1509  8C00 3A DE 89     1 ld a,(Ctrl_3)
1510  8C03 CB 57        	bit 2,a
1511  8C05 20 10        	jr nz,6F
1512  8C07
1513  8C07              ; Entidad guía o fantasma ???
1514  8C07
1515  8C07 3A 9C 89     	ld a,(Ctrl_2)
1516  8C0A CB 6F        	bit 5,a
1517  8C0C 20 10        	jr nz,3F
1518  8C0E
1519  8C0E              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1520  8C0E
1521  8C0E 18 EF        	jr 4B
1522  8C10
1523  8C10              ; ENTIDAD_GUÍA:
1524  8C10              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1525  8C10              ; _guardando "movimientos_masticados".
1526  8C10
1527  8C10 3A DE 89     2 ld a,(Ctrl_3)
1528  8C13 CB 57        	bit 2,a
1529  8C15 28 07        	jr z,3F
1530  8C17
1531  8C17              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1532  8C17              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1533  8C17
1534  8C17 CB 97        6 res 2,a
1535  8C19 CB DF        	set 3,a
1536  8C1B 32 DE 89     	ld (Ctrl_3),a
1537  8C1E
1538  8C1E
1539  8C1E              ;	Esto sólo lo ejecuta una entidad guía.
1540  8C1E
1541  8C1E CD 34 92     3 	call Draw
1542  8C21 CD AC 8B     	call Guarda_movimiento_masticado
1543  8C24 CD 9F AC     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1544  8C27
1545  8C27              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1546  8C27              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1547  8C27
1548  8C27              ;	call Convierte_guia_en_fantasma
1549  8C27 C9           	ret
1550  8C28
1551  8C28              ; ---------------------------------------------------------------------------------------------------------------------
1552  8C28              ;
1553  8C28              ;	13/03/24
1554  8C28              ;
1555  8C28
1556  8C28              Inicia_albumes_de_lineas
1557  8C28
1558  8C28 21 00 80     	ld hl,Scanlines_album
1559  8C2B 22 CD 89     	ld (Album_de_pintado),hl
1560  8C2E 22 D8 89     	ld (Scanlines_album_SP),hl
1561  8C31
1562  8C31 21 00 90     	ld hl,Scanlines_album_2
1563  8C34 22 CF 89     	ld (Album_de_borrado),hl
1564  8C37
1565  8C37 C9           	ret
1566  8C38
1567  8C38
1568  8C38
1569  8C38              ; ---------------------------------------------------------------------------------------------------------------------
1570  8C38              ;
1571  8C38              ; 8/1/23
1572  8C38              ;
1573  8C38              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1574  8C38              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1575  8C38              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1576  8C38
1577  8C38              ; Destruye HL y DE !!!!!
1578  8C38
1579  8C38              Inicia_punteros_de_cajas
1580  8C38
1581  8C38 21 F8 86     	ld hl,Indice_de_cajas_de_entidades
1582  8C3B CD 4E 8C         call Extrae_address
1583  8C3E 22 B9 89         ld (Puntero_store_caja),hl
1584  8C41 21 FA 86     	ld hl,Indice_de_cajas_de_entidades+2
1585  8C44 22 BD 89     	ld (Indice_restore_caja),hl
1586  8C47 CD 4E 8C     	call Extrae_address
1587  8C4A 22 BB 89     	ld (Puntero_restore_caja),hl
1588  8C4D C9               ret
1589  8C4E
1590  8C4E              ; *************************************************************************************************************************************************************
1591  8C4E              ;
1592  8C4E              ; 8/1/23
1593  8C4E              ;
1594  8C4E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1595  8C4E
1596  8C4E              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1597  8C4E              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1598  8C4E              ;	ret
1599  8C4E              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1600  8C4E              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1601  8C4E              ;	ret
1602  8C4E
1603  8C4E              ; -------------------------------------------------------------------------------------------------------------
1604  8C4E              ;
1605  8C4E              ; 21/9/23
1606  8C4E              ;
1607  8C4E
1608  8C4E              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1609  8C4E
1610  8C4E              ;;Limpia_album_Amadeus
1611  8C4E              ;
1612  8C4E              ;;	ld hl,Scanlines_album_Amadeus
1613  8C4E              ;;	ld a,(hl)
1614  8C4E              ;;	and a
1615  8C4E              ;;	ret z
1616  8C4E
1617  8C4E              ;;	ld hl,Scanlines_album_Amadeus;
1618  8C4E              ;;	ld de,Scanlines_album_Amadeus+1
1619  8C4E              ;;	ld bc,11
1620  8C4E              ;;	xor a
1621  8C4E              ;;	ld (hl),a
1622  8C4E              ;;	ldir
1623  8C4E
1624  8C4E              ;;	ld hl,Scanlines_album_Amadeus
1625  8C4E              ;;	ld (End_Snapshot_Amadeus),hl
1626  8C4E
1627  8C4E              ;;	ret
1628  8C4E
1629  8C4E              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1630  8C4E              ;	ld de,Variables_de_borrado+1
1631  8C4E              ;	ld bc,5
1632  8C4E              ;	xor a
1633  8C4E              ;	ld (hl),a
1634  8C4E              ;	ldir
1635  8C4E              ;	ret
1636  8C4E
1637  8C4E              ; *************************************************************************************************************************************************************
1638  8C4E              ;
1639  8C4E              ; 20/10/22
1640  8C4E              ;
1641  8C4E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1642  8C4E              ;
1643  8C4E              ; Destruye el puntero y DE !!!!!
1644  8C4E
1645  8C4E 5E           Extrae_address ld e,(hl)
1646  8C4F 23           	inc hl
1647  8C50 56           	ld d,(hl)
1648  8C51 2B           	dec hl
1649  8C52 EB           	ex de,hl
1650  8C53 C9           	ret
1651  8C54
1652  8C54              ; *************************************************************************************************************************************************************
1653  8C54              ;
1654  8C54              ;	20/1/24
1655  8C54              ;
1656  8C54              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1657  8C54              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1658  8C54              ;
1659  8C54              ;   Destruye HL y BC !!!!!,
1660  8C54              ;
1661  8C54              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1662  8C54              ;					"0" ..... Izquierda.
1663  8C54
1664  8C54              Inicia_Puntero_objeto
1665  8C54
1666  8C54 3A 8F 89     	ld a,(Cuad_objeto)
1667  8C57 E6 01        	and 1
1668  8C59 F5           	push af
1669  8C5A CC 76 8C     	call z,Inicia_puntero_objeto_izq
1670  8C5D F1           	pop af
1671  8C5E C8           	ret z
1672  8C5F CD 63 8C     	call Inicia_puntero_objeto_der
1673  8C62 C9           	ret
1674  8C63
1675  8C63              ; Arrancamos desde la parte izquierda de la pantalla.
1676  8C63              ; Iniciamos (Indice_Sprite_der).
1677  8C63
1678  8C63 2A 85 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1679  8C66 22 89 89     	ld (Puntero_DESPLZ_der),hl
1680  8C69 CD 4E 8C     	call Extrae_address
1681  8C6C 22 7F 89     	ld (Puntero_objeto),hl
1682  8C6F
1683  8C6F 2A 87 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1684  8C72 22 8B 89     	ld (Puntero_DESPLZ_izq),hl
1685  8C75 C9           	ret
1686  8C76
1687  8C76              ; Arrancamos desde la parte derecha de la pantalla.
1688  8C76              ; Iniciamos (Indice_Sprite_izq).
1689  8C76
1690  8C76 2A 87 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1691  8C79 22 8B 89     	ld (Puntero_DESPLZ_izq),hl
1692  8C7C CD 4E 8C     	call Extrae_address
1693  8C7F 22 7F 89     	ld (Puntero_objeto),hl
1694  8C82
1695  8C82 2A 85 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1696  8C85 22 89 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1697  8C88 C9           	ret
1698  8C89
1699  8C89              ; **************************************************************************************************
1700  8C89              ;
1701  8C89              ;	31/01/24
1702  8C89              ;
1703  8C89              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1704  8C89
1705  8C89              Restore_entidad
1706  8C89
1707  8C89 2A B9 89     	ld hl,(Puntero_store_caja)
1708  8C8C 11 7A 89     	ld de,Bandeja_DRAW
1709  8C8F 7E           	ld a,(hl)
1710  8C90 12           	ld (de),a
1711  8C91 23           	inc hl 											; (Tipo).
1712  8C92
1713  8C92 11 81 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1714  8C95 01 02 00     	ld bc,2
1715  8C98 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1716  8C9A
1717  8C9A 13           	inc de
1718  8C9B 7E           	ld a,(hl)
1719  8C9C 12           	ld (de),a 										; Transferimos (Attr).
1720  8C9D 23           	inc hl
1721  8C9E
1722  8C9E 11 90 89     	ld de,Impacto
1723  8CA1
1724  8CA1 7E           	ld a,(hl)
1725  8CA2 12           	ld (de),a 										; Transferimos (Impacto).
1726  8CA3 23           	inc hl
1727  8CA4
1728  8CA4 13           	inc de
1729  8CA5 01 07 00     	ld bc,7
1730  8CA8 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1731  8CAA              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1732  8CAA 11 9C 89     	ld de,Ctrl_2
1733  8CAD
1734  8CAD 7E           	ld a,(hl)
1735  8CAE 12           	ld (de),a 										; Transferimos (Ctrl_2).
1736  8CAF
1737  8CAF C9           	ret
1738  8CB0
1739  8CB0              ; **************************************************************************************************
1740  8CB0              ;
1741  8CB0              ;	08/05/23
1742  8CB0              ;
1743  8CB0              ;	Incrementamos los dos punteros de entidades. (+1).
1744  8CB0
1745  8CB0              Incrementa_punteros_de_cajas
1746  8CB0
1747  8CB0 2A BB 89     	ld hl,(Puntero_restore_caja)
1748  8CB3 22 B9 89     	ld (Puntero_store_caja),hl
1749  8CB6 2A BD 89     	ld hl,(Indice_restore_caja)
1750  8CB9 23           	inc hl
1751  8CBA 23           	inc hl
1752  8CBB 22 BD 89     	ld (Indice_restore_caja),hl
1753  8CBE CD 4E 8C         call Extrae_address
1754  8CC1 22 BB 89         ld (Puntero_restore_caja),hl
1755  8CC4 C9               ret
1756  8CC5
1757  8CC5              ; **************************************************************************************************
1758  8CC5              ;
1759  8CC5              ;	21/12/23
1760  8CC5              ;
1761  8CC5              ;	Restore_Amadeus
1762  8CC5              ;
1763  8CC5              ;	Cargamos en DRAW los parámetros de Amadeus.
1764  8CC5              ;
1765  8CC5
1766  8CC5              ;Restore_Amadeus	push hl
1767  8CC5              ;	push de
1768  8CC5              ; 	push bc
1769  8CC5              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1770  8CC5              ;	ld de,Bandeja_DRAW
1771  8CC5              ;	ld bc,42
1772  8CC5              ;	ldir
1773  8CC5              ;	pop bc
1774  8CC5              ;	pop de
1775  8CC5              ;	pop hl
1776  8CC5              ;	ret
1777  8CC5
1778  8CC5              ; *************************************************************************************************************************************************************
1779  8CC5              ;
1780  8CC5              ;	21/12/23
1781  8CC5              ;
1782  8CC5              ;	Store_Amadeus
1783  8CC5              ;
1784  8CC5              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1785  8CC5              ;
1786  8CC5              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1787  8CC5              ;
1788  8CC5              ;	DESTRUYE: HL y BC y DE.
1789  8CC5
1790  8CC5              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1791  8CC5              ;	ld bc,42
1792  8CC5              ;	ldir
1793  8CC5              ;	ret
1794  8CC5
1795  8CC5              ; -----------------------------------------------------------
1796  8CC5              ;
1797  8CC5              ;	21/12/23
1798  8CC5              ;
1799  8CC5              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1800  8CC5              ;
1801  8CC5              ;	Destruye: HL,BC,DE,A
1802  8CC5
1803  8CC5              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1804  8CC5              ;	ld bc,41
1805  8CC5              ;	xor a
1806  8CC5              ;	ld (hl),a;
1807  8CC5              ;	ld de,Bandeja_DRAW+1
1808  8CC5              ;	ldir
1809  8CC5              ;	ret
1810  8CC5
1811  8CC5              ; -----------------------------------------------------------
1812  8CC5
1813  8CC5              ; Teclado.
1814  8CC5
1815  8CC5 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1816  8CC7 DB FE        	in a,($fe)
1817  8CC9 E6 01        	and $01
1818  8CCB 28 02        	jr z,1f
1819  8CCD 18 F6        	jr Pulsa_ENTER
1820  8CCF C9           1 ret
1821  8CD0
1822  8CD0              ; **************************************************************************************************
1823  8CD0              ;
1824  8CD0              ; Temporización.
1825  8CD0
1826  8CD0              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1827  8CD0              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1828  8CD0              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1829  8CD0              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1830  8CD0
1831  8CD0              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1832  8CD0              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1833  8CD0              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1834  8CD0
1835  8CD0              ; A partir de $4f61 no hace falta DELAY.
1836  8CD0
1837  8CD0              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1838  8CD0
1839  8CD0 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1840  8CD3 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1841  8CD4 78           	LD A,B
1842  8CD5 A7           	AND A
1843  8CD6 20 FB        	JR NZ,wait
1844  8CD8 C9           	RET
1845  8CD9
1846  8CD9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1847  8CD9              ;
1848  8CD9              ;	5/3/23
1849  8CD9              ;
1850  8CD9              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1851  8CD9
1852  8CD9              ;Movimiento_Amadeus
1853  8CD9
1854  8CD9              ; Disparo.
1855  8CD9
1856  8CD9              ;	ld a,(Disparo_Amadeus)
1857  8CD9              ;	and a
1858  8CD9              ;	jr nz,1F
1859  8CD9              ;	jr 2F
1860  8CD9
1861  8CD9              ;1 ld a,$f7													; "5" para disparar.
1862  8CD9              ;	in a,($fe)
1863  8CD9              ;	and $10
1864  8CD9
1865  8CD9              ;	push af
1866  8CD9              ;	call z,Genera_disparo
1867  8CD9              ;	pop af
1868  8CD9              ;	jr nz,2F
1869  8CD9
1870  8CD9              ;	ld a,(Disparo_Amadeus)
1871  8CD9              ;	xor 1
1872  8CD9              ;	ld (Disparo_Amadeus),a
1873  8CD9              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1874  8CD9              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1875  8CD9              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1876  8CD9              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1877  8CD9
1878  8CD9              ;	ld a,$f7
1879  8CD9              ;	in a,($fe)
1880  8CD9              ;	and $01
1881  8CD9              ;	ret z
1882  8CD9
1883  8CD9              ;	ld a,$f7
1884  8CD9              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1885  8CD9              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1886  8CD9              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1887  8CD9              ;	ret
1888  8CD9
1889  8CD9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1890  8CD9              ;
1891  8CD9              ;	Rutina provisional para que los malotes cagen balas.
1892  8CD9
1893  8CD9              ;Detecta_disparo_entidad
1894  8CD9
1895  8CD9              ;	ld a,(Disparo_entidad)
1896  8CD9              ;	and a
1897  8CD9              ;	ret z
1898  8CD9
1899  8CD9              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1900  8CD9
1901  8CD9              ;	ld a,$7f				; Detecta SPACE.
1902  8CD9              ;	in a,($fe)
1903  8CD9              ;	and 1
1904  8CD9              ;	ret nz
1905  8CD9
1906  8CD9              ;	call Genera_disparo
1907  8CD9              ;	ret
1908  8CD9
1909  8CD9              ; ----------------------------------------------------------------------
1910  8CD9              ;
1911  8CD9              ;	8/9/23
1912  8CD9
1913  8CD9              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1914  8CD9              ; 	dec hl
1915  8CD9              ;	ld a,(hl)
1916  8CD9              ;	and a
1917  8CD9              ;	ret z										; Salimos si es álbum está vacío.
1918  8CD9
1919  8CD9              ;	ld de,Variables_de_borrado+5
1920  8CD9              ;	ld bc,6
1921  8CD9              ;	lddr
1922  8CD9              ;	ret
1923  8CD9
1924  8CD9              ; ----------------------------------------------------------------------
1925  8CD9              ;
1926  8CD9              ;	9/9/23
1927  8CD9
1928  8CD9              ;Repone_datos_de_borrado_Amadeus
1929  8CD9
1930  8CD9              ;	ld hl,Variables_de_borrado
1931  8CD9              ;	ld de,Scanlines_album_Amadeus
1932  8CD9              ;	ld bc,6
1933  8CD9              ;	ldir
1934  8CD9
1935  8CD9              ;	ex de,hl
1936  8CD9              ;	ld (End_Snapshot_Amadeus),hl
1937  8CD9
1938  8CD9              ;	ret
1939  8CD9
1940  8CD9              ; ----------------------------------------------------------------------
1941  8CD9              ;
1942  8CD9              ;	27/10/23
1943  8CD9              ;
1944  8CD9
1945  8CD9              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1946  8CD9              ;	_ Scanlines_album correspondiente.
1947  8CD9
1948  8CD9              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1949  8CD9              ;	_ durante el proceso de escritura.
1950  8CD9
1951  8CD9              ;Repone_datos_de_borrado
1952  8CD9
1953  8CD9              ;	ld de,(Scanlines_album_SP)
1954  8CD9              ;	ld hl,Variables_de_borrado
1955  8CD9              ;	ld bc,6
1956  8CD9              ;	ldir
1957  8CD9
1958  8CD9              ;	ex de,hl
1959  8CD9              ;	ld (Scanlines_album_SP),hl
1960  8CD9
1961  8CD9              ;	ret
1962  8CD9
1963  8CD9              ; --------------------------------------------------------------------------------------
1964  8CD9
1965  8CD9              ;Pinta_Amadeus
1966  8CD9
1967  8CD9              ;   	call Calcula_malotes_Amadeus
1968  8CD9              ;	call Extrae_foto_Amadeus
1969  8CD9              ;	call Limpia_album_Amadeus
1970  8CD9
1971  8CD9              ;	ret
1972  8CD9
1973  8CD9              ; -----------------------------------------------------------------------------------
1974  8CD9              ;
1975  8CD9              ;	10/12/23
1976  8CD9              ;
1977  8CD9              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1978  8CD9
1979  8CD9              Actualiza_relojes
1980  8CD9
1981  8CD9 3A DE 89     	ld a,(Ctrl_3)
1982  8CDC CB 47        	bit 0,a
1983  8CDE C8           	ret z 						;	Salimos si no hemos pintado unidades.
1984  8CDF
1985  8CDF 21 E3 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1986  8CE2 34           	inc (hl)
1987  8CE3
1988  8CE3 34           	inc (hl)
1989  8CE4 35           	dec (hl)
1990  8CE5 C0           	ret nz
1991  8CE6
1992  8CE6 21 E4 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1993  8CE9 34           	inc (hl)
1994  8CEA C9           	ret
1995  8CEB
1996  8CEB              ; ---------------------------------------------------------------
1997  8CEB
1998  8CEB              	org $aa54
1999  AA54
2000  AA54              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ AA54              ;---------------------------------------------------------------------------------------------------------------
   2+ AA54              ;
   3+ AA54              ;   8/3/24
   4+ AA54              ;
   5+ AA54              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ AA54              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ AA54              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ AA54              ;	_ de la 1ª entidad del Nivel.
   9+ AA54              ;
  10+ AA54              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ AA54
  12+ AA54              ;	MODIFICA: HL,DE y A.
  13+ AA54              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ AA54
  15+ AA54              Inicializa_Nivel
  16+ AA54
  17+ AA54 2A E8 89     	ld hl,(Puntero_indice_NIVELES)
  18+ AA57 CD 4E 8C     	call Extrae_address
  19+ AA5A 7E           	ld a,(hl)
  20+ AA5B 32 BF 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ AA5E 23           	inc hl
  22+ AA5F CD 6C AA     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ AA62 22 EA 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ AA65 CD 75 AA     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ AA68
  26+ AA68 CD 86 AA     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ AA6B C9           	ret
  28+ AA6C
  29+ AA6C              ; ----------------------
  30+ AA6C
  31+ AA6C 11 9E 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ AA6F 01 04 00     	ld bc,4
  33+ AA72 ED B0        	ldir
  34+ AA74 C9           	ret
  35+ AA75
  36+ AA75 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ AA76 CD AD AB         call Calcula_salto_en_BC
  38+ AA79 21 74 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ AA7C A7               and a
  40+ AA7D ED 4A            adc hl,bc
  41+ AA7F CD 4E 8C         call Extrae_address
  42+ AA82 22 AA 89         ld (Puntero_indice_mov),hl
  43+ AA85 C9               ret
  44+ AA86
  45+ AA86 3A 7A 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ AA89 CD AD AB     	call Calcula_salto_en_BC
  47+ AA8C 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ AA8F A7               and a
  49+ AA90 ED 4A            adc hl,bc
  50+ AA92 CD 4E 8C         call Extrae_address
  51+ AA95 22 93 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ AA98 C9           	ret
  53+ AA99
  54+ AA99              ;---------------------------------------------------------------------------------------------------------------
  55+ AA99              ;
  56+ AA99              ;   5/1/24
  57+ AA99              ;
  58+ AA99              ;	Destruye A,BC,HL,DE
  59+ AA99
  60+ AA99              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ AA99              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ AA99
  63+ AA99              Inicia_Entidades
  64+ AA99
  65+ AA99              ; Preparamos los punteros de las cajas de entidades:
  66+ AA99
  67+ AA99 CD 38 8C     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ AA9C              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ AA9C CD 11 AC     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ AA9F
  71+ AA9F 2A EA 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ AAA2
  73+ AAA2 22 EA 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ AAA5
  75+ AAA5 CD 5B AB     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ AAA8
  77+ AAA8 2A EA 89     	ld hl,(Datos_de_nivel)
  78+ AAAB
  79+ AAAB              ; En este punto:
  80+ AAAB              ;
  81+ AAAB              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ AAAB              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ AAAB
  84+ AAAB C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ AAAC
  86+ AAAC 7E           	ld a,(hl)
  87+ AAAD CD EE AA     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ AAB0
  89+ AAB0 CD BF AB     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ AAB3
  91+ AAB3              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ AAB3
  93+ AAB3 CD 7D AB     	call Busca_mov_masticados_segun_tipo
  94+ AAB6
  95+ AAB6 A7           	and a
  96+ AAB7 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ AAB9
  98+ AAB9              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ AAB9
 100+ AAB9              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ AAB9              ;	_ de este tipo de entidad.
 102+ AAB9
 103+ AAB9 CD EC 99     	call Situa_en_contador_general_de_mov_masticados
 104+ AABC CD F9 99     	call Transfiere_datos_de_contadores
 105+ AABF
 106+ AABF 18 06        	jr 4F
 107+ AAC1
 108+ AAC1 CD 80 8B     3 call Construye_movimientos_masticados_entidad
 109+ AAC4
 110+ AAC4              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ AAC4              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ AAC4              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ AAC4              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ AAC4              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ AAC4
 116+ AAC4 CD 3B AB     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ AAC7              ;																; _ Mov_masticados ya generados.
 118+ AAC7
 119+ AAC7 CD 02 AB     4 call Guarda_foto_de_mov_masticado
 120+ AACA
 121+ AACA              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 122+ AACA
 123+ AACA 2A 91 89     	ld hl,(Puntero_de_impresion)
 124+ AACD CD 4C AC     	call Genera_coordenadas
 125+ AAD0
 126+ AAD0 18 FE        	jr $
 127+ AAD2
 128+ AAD2 CD E6 8A     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ AAD5
 130+ AAD5 CD E6 AB     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 131+ AAD8 CD 0C AB     	call Limpiamos_bandeja_DRAW
 132+ AADB CD B0 8C     	call Incrementa_punteros_de_cajas
 133+ AADE
 134+ AADE              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 135+ AADE              ; _ entidad del Nivel.
 136+ AADE
 137+ AADE 3A DF 89     	ld a,(Ctrl_4)
 138+ AAE1 E6 F0        	and $f0
 139+ AAE3 32 DF 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 140+ AAE6
 141+ AAE6              ; Siguiente entidad del Nivel.
 142+ AAE6
 143+ AAE6 2A EA 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 144+ AAE9 23           	inc hl 														; _ entidad del Nivel.
 145+ AAEA
 146+ AAEA C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 147+ AAEB
 148+ AAEB 10 B5        	djnz 2B
 149+ AAED
 150+ AAED C9           	ret
 151+ AAEE
 152+ AAEE              ; ---------------------------------------------------------------------
 153+ AAEE              ;
 154+ AAEE              ;	10/02/24
 155+ AAEE              ;
 156+ AAEE              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 157+ AAEE              ;
 158+ AAEE              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 159+ AAEE
 160+ AAEE              Definicion_segun_tipo
 161+ AAEE
 162+ AAEE CD AD AB     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 163+ AAF1 21 9B 87     	ld hl,Indice_de_definiciones_de_entidades
 164+ AAF4 CD B5 AB     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 165+ AAF7 C9           	ret
 166+ AAF8
 167+ AAF8              ; ---------------------------------------------------------------------
 168+ AAF8              ;
 169+ AAF8              ;	27/03/24
 170+ AAF8
 171+ AAF8
 172+ AAF8              Store_Restore_cajas
 173+ AAF8
 174+ AAF8 CD E6 AB     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 175+ AAFB CD 0C AB     	call Limpiamos_bandeja_DRAW
 176+ AAFE
 177+ AAFE              ; 	Entidad_sospechosa. 20/4/23
 178+ AAFE
 179+ AAFE              ;	ld a,(Impacto)
 180+ AAFE              ;	and a
 181+ AAFE              ;	jr z,1F
 182+ AAFE
 183+ AAFE              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 184+ AAFE              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 185+ AAFE              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 186+ AAFE              ;	adc hl,bc 											; _ "0" más adelante.
 187+ AAFE              ;	ld (Entidad_sospechosa_de_colision),hl
 188+ AAFE
 189+ AAFE
 190+ AAFE              ;1 ld hl,(Puntero_restore_caja)
 191+ AAFE              ;	ld a,(hl)
 192+ AAFE              ;	and a
 193+ AAFE              ;	push af
 194+ AAFE              ;	jr z,2F
 195+ AAFE
 196+ AAFE              ;	di
 197+ AAFE              ;	ld de,Bandeja_DRAW
 198+ AAFE              ;	ld bc,42
 199+ AAFE              ;	ldir
 200+ AAFE              ;	ei
 201+ AAFE
 202+ AAFE CD B0 8C     2 call Incrementa_punteros_de_cajas
 203+ AB01 C9           	ret
 204+ AB02
 205+ AB02
 206+ AB02              ; ---------------------------------------------------------------------
 207+ AB02              ;
 208+ AB02              ;	29/01/24
 209+ AB02
 210+ AB02              Guarda_foto_de_mov_masticado
 211+ AB02
 212+ AB02
 213+ AB02 CD D4 8B     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 214+ AB05 CD 9F AC     	call Genera_datos_de_impresion
 215+ AB08
 216+ AB08              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 217+ AB08              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 218+ AB08              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 219+ AB08              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 220+ AB08
 221+ AB08 CD 17 AB     	call Decrementa_Contador_de_mov_masticados
 222+ AB0B
 223+ AB0B C9           	ret
 224+ AB0C
 225+ AB0C              ; ---------------------------------------------------------------------
 226+ AB0C              ;
 227+ AB0C              ;	26/03/24
 228+ AB0C
 229+ AB0C 21 7A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 230+ AB0F 06 24        	ld b,36
 231+ AB11 AF           	xor a
 232+ AB12 77           1 ld (hl),a
 233+ AB13 23           	inc hl
 234+ AB14 10 FC        	djnz 1B
 235+ AB16 C9           	ret
 236+ AB17
 237+ AB17              ; ---------------------------------------------------------------------
 238+ AB17              ;
 239+ AB17              ;	24/03/24
 240+ AB17
 241+ AB17 2A 95 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 242+ AB1A 2B           	dec hl
 243+ AB1B 22 95 89     	ld (Contador_de_mov_masticados),hl
 244+ AB1E C9           	ret
 245+ AB1F
 246+ AB1F              ; ---------------------------------------------------------------------
 247+ AB1F              ;
 248+ AB1F              ;	10/2/24
 249+ AB1F
 250+ AB1F              Reinicia_entidad_maliciosa
 251+ AB1F
 252+ AB1F              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 253+ AB1F
 254+ AB1F CD EC 99     	call Situa_en_contador_general_de_mov_masticados
 255+ AB22 CD F9 99     	call Transfiere_datos_de_contadores
 256+ AB25
 257+ AB25              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 258+ AB25
 259+ AB25 3A 7A 89     	ld a,(Tipo)
 260+ AB28 CD EE AA     	call Definicion_segun_tipo
 261+ AB2B
 262+ AB2B E5           	push hl
 263+ AB2C DD E1        	pop ix
 264+ AB2E
 265+ AB2E DD 6E 0B     	ld l,(ix+11)
 266+ AB31 DD 66 0C     	ld h,(ix+12)
 267+ AB34
 268+ AB34 22 93 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 269+ AB37
 270+ AB37 CD D4 8B     	call Cargamos_registros_con_mov_masticado
 271+ AB3A
 272+ AB3A C9           	ret
 273+ AB3B
 274+ AB3B              ; ---------------------------------------------------------------------
 275+ AB3B              ;
 276+ AB3B              ;	22/01/24
 277+ AB3B
 278+ AB3B 21 DF 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 279+ AB3E CB 46        	bit 0,(hl)
 280+ AB40 20 0D        	jr nz,1F
 281+ AB42 CB 4E        	bit 1,(hl)
 282+ AB44 20 0C        	jr nz,2F
 283+ AB46 CB 56        	bit 2,(hl)
 284+ AB48 20 0B        	jr nz,3F
 285+ AB4A CB 5E        	bit 3,(hl)
 286+ AB4C 20 0A        	jr nz,4F
 287+ AB4E C9           	ret
 288+ AB4F
 289+ AB4F CB E6        1 set 4,(hl)
 290+ AB51 C9           	ret
 291+ AB52 CB EE        2 set 5,(hl)
 292+ AB54 C9           	ret
 293+ AB55 CB F6        3 set 6,(hl)
 294+ AB57 C9           	ret
 295+ AB58 CB FE        4 set 7,(hl)
 296+ AB5A C9           	ret
 297+ AB5B
 298+ AB5B              ; ---------------------------------------------------------------------
 299+ AB5B              ;
 300+ AB5B              ;	23/01/24
 301+ AB5B              ;
 302+ AB5B              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 303+ AB5B              ;
 304+ AB5B              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 305+ AB5B              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 306+ AB5B              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 307+ AB5B              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 308+ AB5B
 309+ AB5B              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 310+ AB5B
 311+ AB5B 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 312+ AB5C 3D           	dec a
 313+ AB5D 20 06        	jr nz,1F
 314+ AB5F
 315+ AB5F              ; --- Tipo_1
 316+ AB5F
 317+ AB5F 21 DF 89     	ld hl,Ctrl_4
 318+ AB62 CB C6        	set 0,(hl)
 319+ AB64 C9           	ret
 320+ AB65
 321+ AB65 3D           1 dec a
 322+ AB66 20 06        	jr nz,2F
 323+ AB68
 324+ AB68              ; --- Tipo_2
 325+ AB68
 326+ AB68 21 DF 89     	ld hl,Ctrl_4
 327+ AB6B CB CE        	set 1,(hl)
 328+ AB6D C9           	ret
 329+ AB6E
 330+ AB6E 3D           2 dec a
 331+ AB6F 20 06        	jr nz,3F
 332+ AB71
 333+ AB71              ; --- Tipo_3
 334+ AB71
 335+ AB71 21 DF 89     	ld hl,Ctrl_4
 336+ AB74 CB D6        	set 2,(hl)
 337+ AB76 C9           	ret
 338+ AB77
 339+ AB77              ; --- Tipo_3
 340+ AB77
 341+ AB77 21 DF 89     3 ld hl,Ctrl_4
 342+ AB7A CB D6        	set 2,(hl)
 343+ AB7C C9           	ret
 344+ AB7D
 345+ AB7D              ; ---------------------------------------------------------------------
 346+ AB7D              ;
 347+ AB7D              ;	22/01/24
 348+ AB7D
 349+ AB7D 21 DF 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 350+ AB80 CB 46        	bit 0,(hl)
 351+ AB82 20 0E        	jr nz,1F
 352+ AB84
 353+ AB84 CB 4E        	bit 1,(hl)
 354+ AB86 20 10        	jr nz,2F
 355+ AB88
 356+ AB88 CB 56        	bit 2,(hl)
 357+ AB8A 20 12        	jr nz,3F
 358+ AB8C
 359+ AB8C CB 5E        	bit 3,(hl)
 360+ AB8E 20 14        	jr nz,4F
 361+ AB90 18 19        	jr 6F
 362+ AB92
 363+ AB92              ; Entidad_de_Tipo_1.
 364+ AB92
 365+ AB92 CB 66        1 bit 4,(hl)
 366+ AB94 28 15        	jr z,6F
 367+ AB96 18 10        	jr 5F
 368+ AB98
 369+ AB98              ; Entidad_de_Tipo_2.
 370+ AB98
 371+ AB98 CB 6E        2 bit 5,(hl)
 372+ AB9A 28 0F        	jr z,6F
 373+ AB9C 18 0A        	jr 5F
 374+ AB9E
 375+ AB9E              ; Entidad_de_Tipo_3.
 376+ AB9E
 377+ AB9E CB 76        3 bit 6,(hl)
 378+ ABA0 28 09        	jr z,6F
 379+ ABA2 18 04        	jr 5F
 380+ ABA4
 381+ ABA4              ; Entidad_de_Tipo_4.
 382+ ABA4
 383+ ABA4 CB 7E        4 bit 7,(hl)
 384+ ABA6 28 03        	jr z,6F
 385+ ABA8
 386+ ABA8              ; Esta entidad TIENE MOV_MASTICADOS.
 387+ ABA8
 388+ ABA8 AF           5 xor a
 389+ ABA9 3C           	inc a
 390+ ABAA C9           	ret
 391+ ABAB
 392+ ABAB              ; Esta entidad NO TIENE MOV_MASTICADOS.
 393+ ABAB
 394+ ABAB AF           6 xor a
 395+ ABAC C9           	ret
 396+ ABAD
 397+ ABAD              ;	------------------------------------------------------------------------------------
 398+ ABAD              ;
 399+ ABAD              ;	12/01/24
 400+ ABAD              ;
 401+ ABAD              ;	INPUTS:	A contiene el (Tipo) de entidad.
 402+ ABAD              ;
 403+ ABAD              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 404+ ABAD              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 405+ ABAD
 406+ ABAD CB 27        Calcula_salto_en_BC sla a
 407+ ABAF D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 408+ ABB1 4F           	ld c,a
 409+ ABB2 06 00        	ld b,0
 410+ ABB4 C9           	ret
 411+ ABB5
 412+ ABB5              ; ------------------------------------------------------------------
 413+ ABB5              ;
 414+ ABB5              ;	19/1/24
 415+ ABB5              ;
 416+ ABB5              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 417+ ABB5              ;	Actualiza (Datos_de_entidad) con esa dirección.
 418+ ABB5
 419+ ABB5 A7           Situa_en_datos_de_definicion and a
 420+ ABB6 ED 4A        	adc hl,bc
 421+ ABB8 CD 4E 8C     	call Extrae_address
 422+ ABBB 22 C5 89         ld (Datos_de_entidad),hl
 423+ ABBE C9           	ret
 424+ ABBF
 425+ ABBF              ; ------------------------------------------------------------------
 426+ ABBF
 427+ ABBF              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 428+ ABBF              ; 	inc de
 429+ ABBF              ; 	inc de
 430+ ABBF              ; 	ex de,hl
 431+ ABBF              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 432+ ABBF              ; 	ret
 433+ ABBF
 434+ ABBF              ; ----------------------------------------------------------------------------------------------------------
 435+ ABBF              ;
 436+ ABBF              ;	31/1/24
 437+ ABBF              ;
 438+ ABBF              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 439+ ABBF              ;	_ de entidad.
 440+ ABBF              ;
 441+ ABBF              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 442+ ABBF              ;
 443+ ABBF              ;
 444+ ABBF              ;	MODIFICA: HL,DE y BC
 445+ ABBF
 446+ ABBF
 447+ ABBF              Definicion_de_entidad_a_bandeja_DRAW
 448+ ABBF
 449+ ABBF 11 7A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 450+ ABC2 01 03 00     	ld bc,3
 451+ ABC5 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 452+ ABC7              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 453+ ABC7 11 84 89     	ld de,Attr									; DE en (Attr).
 454+ ABCA 01 05 00     	ld bc,5
 455+ ABCD ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 456+ ABCF              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 457+ ABCF 11 8D 89     	ld de,Posicion_inicio
 458+ ABD2 01 03 00     	ld bc,3
 459+ ABD5 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 460+ ABD7              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 461+ ABD7 11 93 89     	ld de,Puntero_de_almacen_de_mov_masticados
 462+ ABDA 01 02 00     	ld bc,2
 463+ ABDD ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 464+ ABDF
 465+ ABDF 11 9D 89     	ld de,Frames_explosion
 466+ ABE2 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 467+ ABE4 12           	ld (de),a 									; Vuelco (Frames_explosion).
 468+ ABE5
 469+ ABE5 C9           	ret
 470+ ABE6
 471+ ABE6              ; ----------------------------------------------------------------------------------------------------------
 472+ ABE6              ;
 473+ ABE6              ;	22/01/24
 474+ ABE6              ;
 475+ ABE6              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 476+ ABE6              ;
 477+ ABE6              ;	Las cajas contienen entidades iniciadas:
 478+ ABE6              ;
 479+ ABE6              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 480+ ABE6              ;
 481+ ABE6              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 482+ ABE6              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 483+ ABE6              ;
 484+ ABE6              ;	MODIFICA: HL,DE y BC
 485+ ABE6
 486+ ABE6              Parametros_de_bandeja_DRAW_a_caja
 487+ ABE6
 488+ ABE6 21 7A 89     	ld hl,Bandeja_DRAW
 489+ ABE9 ED 5B B9 89  	ld de,(Puntero_store_caja)
 490+ ABED 7E           	ld a,(hl)
 491+ ABEE 12           	ld (de),a
 492+ ABEF 13           	inc de 													; (Tipo).
 493+ ABF0
 494+ ABF0 21 81 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 495+ ABF3 01 02 00     	ld bc,2
 496+ ABF6 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 497+ ABF8              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 498+ ABF8 23           	inc hl
 499+ ABF9 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 500+ ABFA 12           	ld (de),a
 501+ ABFB 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 502+ ABFC
 503+ ABFC 21 90 89     	ld hl,Impacto
 504+ ABFF 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 505+ AC00 12           	ld (de),a
 506+ AC01 13           	inc de 													; (Impacto), volcado a la caja.
 507+ AC02
 508+ AC02 21 91 89     	ld hl,Puntero_de_impresion								; DE situado ahora en (Puntero_de_impresión).
 509+ AC05 01 07 00     	ld bc,7
 510+ AC08 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 511+ AC0A              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 512+ AC0A              ;															; HL apunta ahora a (Columnas).
 513+ AC0A 21 9C 89     	ld hl,Ctrl_2
 514+ AC0D 7E           	ld a,(hl)
 515+ AC0E 12           	ld (de),a 												; Volcamos (Ctrl_2).
 516+ AC0F 13           	inc de
 517+ AC10
 518+ AC10 C9           	ret
 519+ AC11
 520+ AC11              ;---------------------------------------------------------------------------------------------------------------
 521+ AC11              ;
 522+ AC11              ;	5/1/24
 523+ AC11              ;
 524+ AC11              ;	INICIALIZA (Numero_parcial_de_entidades).
 525+ AC11              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 526+ AC11              ;
 527+ AC11              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 528+ AC11              ;
 529+ AC11              ;	(Numero_parcial_de_entidades)="7".
 530+ AC11              ;
 531+ AC11              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 532+ AC11              ;
 533+ AC11              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 534+ AC11              ;
 535+ AC11              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 536+ AC11              ;	MODIFICA: A y B.
 537+ AC11              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 538+ AC11
 539+ AC11              Inicializa_Numero_parcial_de_entidades
 540+ AC11
 541+ AC11              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 542+ AC11
 543+ AC11 3A BF 89     	ld a,(Numero_de_entidades)
 544+ AC14 A7           	and a
 545+ AC15
 546+ AC15              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 547+ AC15              ;	jr z,$
 548+ AC15              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 549+ AC15
 550+ AC15 20 03        	jr nz,3F
 551+ AC17
 552+ AC17              ; ---------- ---------- ----------
 553+ AC17
 554+ AC17              ;! RESET para pruebas. Omitir esta línea en modo normal.
 555+ AC17              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 556+ AC17
 557+ AC17 CD 54 AA     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 558+ AC1A
 559+ AC1A              ; ---------- ---------- ----------
 560+ AC1A
 561+ AC1A 3A BF 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 562+ AC1D FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 563+ AC1F 38 08        	jr c,1F
 564+ AC21
 565+ AC21              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 566+ AC21              ; Actualizamos variables.
 567+ AC21
 568+ AC21 3E 07        	ld a,7
 569+ AC23 32 C0 89     	ld (Numero_parcial_de_entidades),a
 570+ AC26 47           	ld b,a
 571+ AC27 18 04        	jr 2F
 572+ AC29
 573+ AC29              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 574+ AC29              ; (Numero_de_entidades)="0".
 575+ AC29
 576+ AC29 32 C0 89     1 ld (Numero_parcial_de_entidades),a
 577+ AC2C 47           	ld b,a
 578+ AC2D C9           2 ret
 579+ AC2E
# file closed: Rutinas_de_inicio_y_niveles.asm
2001  AC2E              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ AC2E              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ AC2E              ;
   3+ AC2E              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ AC2E              ;
   5+ AC2E              ; *****************************************************************************************************************************************************************************************
   6+ AC2E              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ AC2E
   8+ AC2E 7C           calcula_tercio ld a,h
   9+ AC2F E6 18        	and $18
  10+ AC31 CB 2F        	sra a
  11+ AC33 CB 2F        	sra a
  12+ AC35 CB 2F        	sra a
  13+ AC37 C9           	ret
  14+ AC38
# file closed: calcula_tercio.asm
2002  AC38              	include "Cls.asm"
# file opened: Cls.asm
   1+ AC38              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ AC38              ;
   3+ AC38              ;
   4+ AC38              ;	CLS.
   5+ AC38              ;
   6+ AC38              ;	Limpia la pantalla y define sus atributos.
   7+ AC38              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ AC38              ;
   9+ AC38              ;	COLORES: 0 ..... NEGRO
  10+ AC38              ;    		 1 ..... AZUL
  11+ AC38              ; 			 2 ..... ROJO
  12+ AC38              ;			 3 ..... MAGENTA
  13+ AC38              ; 			 4 ..... VERDE
  14+ AC38              ; 			 5 ..... CIAN
  15+ AC38              ;			 6 ..... AMARILLO
  16+ AC38              ; 			 7 ..... BLANCO
  17+ AC38              ;
  18+ AC38              ;	INPUT: A contiene los atributos de pantalla.
  19+ AC38              ;
  20+ AC38              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ AC38
  22+ AC38
  23+ AC38 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ AC3B 11 01 40     	LD DE,$4001
  25+ AC3E 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ AC41 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ AC43 ED B0        	LDIR
  28+ AC45 01 FF 02     	LD BC,767
  29+ AC48 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ AC49 ED B0        	LDIR
  31+ AC4B C9           	ret
  32+ AC4C
# file closed: Cls.asm
2003  AC4C              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ AC4C              ; ------------------------------------------------------------------------
   2+ AC4C              ;
   3+ AC4C              ;	30/1/24
   4+ AC4C              ;
   5+ AC4C              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ AC4C              ;	Fila superior "0", Columna izquierda "0".
   7+ AC4C              ;
   8+ AC4C              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ AC4C              ;
  10+ AC4C              ;	Modifica: A,BC y DE.
  11+ AC4C
  12+ AC4C 7D           Genera_coordenadas ld a,l
  13+ AC4D E6 1F        	and $1f
  14+ AC4F 32 81 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ AC52
  16+ AC52 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ AC53 FE 40        	cp $40
  18+ AC55 38 1C        	jr c,4F
  19+ AC57
  20+ AC57 CD 2E AC     	call calcula_tercio
  21+ AC5A 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ AC5B
  23+ AC5B 1E 00        	ld e,0
  24+ AC5D 7D           	ld a,l
  25+ AC5E E6 E0        	and $e0
  26+ AC60 28 01        	jr z,1F
  27+ AC62 04           	inc b
  28+ AC63
  29+ AC63 04           1 inc b
  30+ AC64 05           	dec b
  31+ AC65 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ AC67              ;														; _ , salimos.
  33+ AC67 1C           3 inc e
  34+ AC68 D6 20        	sub 32
  35+ AC6A 20 FB        	jr nz,3B
  36+ AC6C 10 F5        	djnz 1B
  37+ AC6E
  38+ AC6E 7B           2 ld a,e
  39+ AC6F 32 82 89     	ld (Coordenada_y),a
  40+ AC72 C9           	ret
  41+ AC73
  42+ AC73 AF           4 xor a
  43+ AC74 32 82 89     	ld (Coordenada_y),a
  44+ AC77 C9           	ret
  45+ AC78
  46+ AC78              ; ------------------------------------------------------------------------
  47+ AC78              ;	28/05/23
  48+ AC78              ;
  49+ AC78              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ AC78              ;	Fila superior "0", Columna izquierda "0".
  51+ AC78              ;
  52+ AC78              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ AC78              ;	Output: DE contendrá las coordenadas del disparo:
  54+ AC78              ;
  55+ AC78              ;		DE="$120d"
  56+ AC78              ;
  57+ AC78              ;		D, (Coordenada_X), Columnas, $12
  58+ AC78              ;		E, (Coordenada_y), Filas, $0d
  59+ AC78              ;
  60+ AC78              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ AC78
  62+ AC78              ;	Modifica: A,BC y DE.
  63+ AC78
  64+ AC78
  65+ AC78              Genera_coordenadas_disparo
  66+ AC78
  67+ AC78              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ AC78
  69+ AC78 7D           	ld a,l
  70+ AC79 E6 1F        	and $1f
  71+ AC7B 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ AC7C CD 2E AC     	call calcula_tercio
  73+ AC7F 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ AC80 1E 00        	ld e,0
  75+ AC82 7D           	ld a,l
  76+ AC83 E6 E0        	and $e0
  77+ AC85 28 01        	jr z,1F
  78+ AC87 04           	inc b
  79+ AC88 1C           1 inc e
  80+ AC89 D6 20        	sub 32
  81+ AC8B 20 FB        	jr nz,1B
  82+ AC8D 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ AC8F C9           	ret
  84+ AC90
# file closed: Genera_coordenadas.asm
2004  AC90              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ AC90              ; Relojes y temporizaciones.
   2+ AC90
   3+ AC90              ; ------------------------------------------------------
   4+ AC90              ;
   5+ AC90              ;	16/7/23
   6+ AC90              ;
   7+ AC90              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ AC90              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ AC90              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ AC90              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ AC90              ;
  12+ AC90              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ AC90              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ AC90
  15+ AC90              ; Disparo_entidad db 1
  16+ AC90              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ AC90              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ AC90
  19+ AC90              Habilita_disparos
  20+ AC90
  21+ AC90 7E           	ld a,(hl)
  22+ AC91 A7           	and a
  23+ AC92 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ AC93
  25+ AC93 EB           	ex de,hl
  26+ AC94
  27+ AC94 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ AC95 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ AC96
  30+ AC96              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ AC96
  32+ AC96 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ AC97 7E           	ld a,(hl)
  34+ AC98 23           	inc hl
  35+ AC99 77           	ld (hl),a
  36+ AC9A
  37+ AC9A EB           	ex de,hl						; Habilitamos disparo.
  38+ AC9B 3E 01        	ld a,1
  39+ AC9D 77           	ld (hl),a
  40+ AC9E C9           	ret
# file closed: Relojes_y_temporizaciones.asm
2005  AC9F              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ AC9F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AC9F              ;
   3+ AC9F              ;	11/03/24
   4+ AC9F              ;
   5+ AC9F              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ AC9F              ;   DE contiene Puntero_objeto.
   7+ AC9F              ;   IX contiene el Puntero de impresión.
   8+ AC9F
   9+ AC9F              Genera_datos_de_impresion
  10+ AC9F
  11+ AC9F ED 73 C7 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ ACA3 31 93 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ ACA6 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ ACA8
  15+ ACA8 2A D8 89         ld hl,(Scanlines_album_SP)
  16+ ACAB
  17+ ACAB 3E 05            ld a,5
  18+ ACAD 85               add l
  19+ ACAE 6F               ld l,a
  20+ ACAF
  21+ ACAF F9               ld sp,hl
  22+ ACB0 22 D8 89         ld (Scanlines_album_SP),hl
  23+ ACB3
  24+ ACB3 21 00 00         ld hl,0
  25+ ACB6
  26+ ACB6 DD E5            push ix
  27+ ACB8 3B               dec sp
  28+ ACB9 ED 7A            adc hl,sp
  29+ ACBB D5               push de
  30+ ACBC
  31+ ACBC              ; Recuperamos SP.
  32+ ACBC
  33+ ACBC ED 7B C7 89      ld sp,(Stack)
  34+ ACC0
  35+ ACC0 E5               push hl
  36+ ACC1 F1               pop af
  37+ ACC2 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ ACC3
  39+ ACC3              ; Tenemos el encabezado listo.
  40+ ACC3              ; Preparamos registros para generar los scanlines.
  41+ ACC3
  42+ ACC3 DD E5            push ix
  43+ ACC5 E1               pop hl                                          ; 1er scanline en HL.
  44+ ACC6
  45+ ACC6 ED 5B D8 89      ld de,(Scanlines_album_SP)
  46+ ACCA
  47+ ACCA              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ ACCA              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ ACCA
  50+ ACCA 7C               ld a,h
  51+ ACCB FE 50            cp $50
  52+ ACCD 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ ACCF
  54+ ACCF 20 05            jr nz,2F
  55+ ACD1
  56+ ACD1 7D               ld a,l
  57+ ACD2 FE E0            cp $e0
  58+ ACD4 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ ACD6
  60+ ACD6 7D           2 ld a,l
  61+ ACD7 FE C0            cp $c0
  62+ ACD9 D2 6B AD         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ ACDC
  64+ ACDC              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ ACDC
  66+ ACDC CD F0 94         call NextScan
  67+ ACDF EB               ex de,hl
  68+ ACE0
  69+ ACE0 73               ld (hl),e
  70+ ACE1 23               inc hl
  71+ ACE2 72               ld (hl),d
  72+ ACE3 23               inc hl
  73+ ACE4
  74+ ACE4 EB               ex de,hl
  75+ ACE5
  76+ ACE5 CD F0 94         call NextScan
  77+ ACE8 EB               ex de,hl
  78+ ACE9
  79+ ACE9 73               ld (hl),e
  80+ ACEA 23               inc hl
  81+ ACEB 72               ld (hl),d
  82+ ACEC 23               inc hl
  83+ ACED
  84+ ACED EB               ex de,hl
  85+ ACEE
  86+ ACEE CD F0 94         call NextScan
  87+ ACF1 EB               ex de,hl
  88+ ACF2
  89+ ACF2 73               ld (hl),e
  90+ ACF3 23               inc hl
  91+ ACF4 72               ld (hl),d
  92+ ACF5 23               inc hl
  93+ ACF6
  94+ ACF6 EB               ex de,hl
  95+ ACF7
  96+ ACF7 CD F0 94         call NextScan
  97+ ACFA EB               ex de,hl
  98+ ACFB
  99+ ACFB 73               ld (hl),e
 100+ ACFC 23               inc hl
 101+ ACFD 72               ld (hl),d
 102+ ACFE 23               inc hl
 103+ ACFF
 104+ ACFF EB               ex de,hl
 105+ AD00
 106+ AD00 CD F0 94         call NextScan
 107+ AD03 EB               ex de,hl
 108+ AD04
 109+ AD04 73               ld (hl),e
 110+ AD05 23               inc hl
 111+ AD06 72               ld (hl),d
 112+ AD07 23               inc hl
 113+ AD08
 114+ AD08 EB               ex de,hl
 115+ AD09
 116+ AD09 CD F0 94         call NextScan
 117+ AD0C EB               ex de,hl
 118+ AD0D
 119+ AD0D 73               ld (hl),e
 120+ AD0E 23               inc hl
 121+ AD0F 72               ld (hl),d
 122+ AD10 23               inc hl
 123+ AD11
 124+ AD11 EB               ex de,hl
 125+ AD12
 126+ AD12 CD F0 94         call NextScan
 127+ AD15 EB               ex de,hl
 128+ AD16
 129+ AD16 73               ld (hl),e
 130+ AD17 23               inc hl
 131+ AD18 72               ld (hl),d
 132+ AD19 23               inc hl
 133+ AD1A
 134+ AD1A EB               ex de,hl
 135+ AD1B
 136+ AD1B CD F0 94         call NextScan
 137+ AD1E EB               ex de,hl
 138+ AD1F
 139+ AD1F 73               ld (hl),e
 140+ AD20 23               inc hl
 141+ AD21 72               ld (hl),d
 142+ AD22 23               inc hl
 143+ AD23
 144+ AD23 EB               ex de,hl
 145+ AD24
 146+ AD24 CD F0 94         call NextScan
 147+ AD27 EB               ex de,hl
 148+ AD28
 149+ AD28 73               ld (hl),e
 150+ AD29 23               inc hl
 151+ AD2A 72               ld (hl),d
 152+ AD2B 23               inc hl
 153+ AD2C
 154+ AD2C EB               ex de,hl
 155+ AD2D
 156+ AD2D CD F0 94         call NextScan
 157+ AD30 EB               ex de,hl
 158+ AD31
 159+ AD31 73               ld (hl),e
 160+ AD32 23               inc hl
 161+ AD33 72               ld (hl),d
 162+ AD34 23               inc hl
 163+ AD35
 164+ AD35 EB               ex de,hl
 165+ AD36
 166+ AD36 CD F0 94         call NextScan
 167+ AD39 EB               ex de,hl
 168+ AD3A
 169+ AD3A 73               ld (hl),e
 170+ AD3B 23               inc hl
 171+ AD3C 72               ld (hl),d
 172+ AD3D 23               inc hl
 173+ AD3E
 174+ AD3E EB               ex de,hl
 175+ AD3F
 176+ AD3F CD F0 94         call NextScan
 177+ AD42 EB               ex de,hl
 178+ AD43
 179+ AD43 73               ld (hl),e
 180+ AD44 23               inc hl
 181+ AD45 72               ld (hl),d
 182+ AD46 23               inc hl
 183+ AD47
 184+ AD47 EB               ex de,hl
 185+ AD48
 186+ AD48 CD F0 94         call NextScan
 187+ AD4B EB               ex de,hl
 188+ AD4C
 189+ AD4C 73               ld (hl),e
 190+ AD4D 23               inc hl
 191+ AD4E 72               ld (hl),d
 192+ AD4F 23               inc hl
 193+ AD50
 194+ AD50 EB               ex de,hl
 195+ AD51
 196+ AD51 CD F0 94         call NextScan
 197+ AD54 EB               ex de,hl
 198+ AD55
 199+ AD55 73               ld (hl),e
 200+ AD56 23               inc hl
 201+ AD57 72               ld (hl),d
 202+ AD58 23               inc hl
 203+ AD59
 204+ AD59 EB               ex de,hl
 205+ AD5A
 206+ AD5A CD F0 94         call NextScan
 207+ AD5D EB               ex de,hl
 208+ AD5E
 209+ AD5E 73               ld (hl),e
 210+ AD5F 23               inc hl
 211+ AD60 72               ld (hl),d
 212+ AD61 23               inc hl
 213+ AD62
 214+ AD62              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ AD62
 216+ AD62 22 D8 89         ld (Scanlines_album_SP),hl
 217+ AD65
 218+ AD65              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ AD65
 220+ AD65 08               ex af,af
 221+ AD66
 222+ AD66 F5               push af
 223+ AD67 E1               pop hl
 224+ AD68
 225+ AD68 36 10            ld (hl),16
 226+ AD6A
 227+ AD6A C9               ret
 228+ AD6B
 229+ AD6B              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ AD6B
 231+ AD6B              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ AD6B
 233+ AD6B 3E 57            ld a,$57
 234+ AD6D 94               sub h
 235+ AD6E 47               ld b,a
 236+ AD6F
 237+ AD6F 3E DF            ld a,$df
 238+ AD71 BD               cp l
 239+ AD72 38 04            jr c,1F
 240+ AD74
 241+ AD74 3E 08            ld a,8
 242+ AD76 80               add b
 243+ AD77 47               ld b,a
 244+ AD78
 245+ AD78              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 246+ AD78              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 247+ AD78
 248+ AD78 48           1 ld c,b
 249+ AD79 0C               inc c
 250+ AD7A
 251+ AD7A 04               inc b
 252+ AD7B 05               dec b
 253+ AD7C 20 02            jr nz,3F
 254+ AD7E
 255+ AD7E 18 0B            jr 6F
 256+ AD80
 257+ AD80 CD F0 94     3 call NextScan
 258+ AD83 EB               ex de,hl
 259+ AD84
 260+ AD84 73               ld (hl),e
 261+ AD85 23               inc hl
 262+ AD86 72               ld (hl),d
 263+ AD87 23               inc hl
 264+ AD88
 265+ AD88 EB               ex de,hl
 266+ AD89 10 F5            djnz 3B
 267+ AD8B
 268+ AD8B ED 53 D8 89  6 ld (Scanlines_album_SP),de
 269+ AD8F
 270+ AD8F 08           5 ex af,af
 271+ AD90 F5               push af
 272+ AD91 E1               pop hl
 273+ AD92
 274+ AD92 71               ld (hl),c
 275+ AD93
 276+ AD93 C9               ret
 277+ AD94
# file closed: Genera_datos_de_impresion.asm
2006  AD94
2007  AD94              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ AD94              ; -----------------------------------------------------------------------------
   2+ AD94              ;
   3+ AD94              ;   11/03/24
   4+ AD94              ;
   5+ AD94
   6+ AD94                  org $9119
   7+ 9119
   8+ 9119              Pinta_Sprites
   9+ 9119
  10+ 9119              ;    ld hl,(Scanlines_album_SP)
  11+ 9119              ;    call Extrae_address
  12+ 9119
  13+ 9119              ;    inc h
  14+ 9119              ;    dec h
  15+ 9119              ;    ret z                               ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  16+ 9119
  17+ 9119 ED 73 C7 89      ld (Stack),sp
  18+ 911D
  19+ 911D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  20+ 911E              ;                                       ; DE se encuentra en los datos del sprite.
  21+ 911E 2C               inc l
  22+ 911F 2C               inc l
  23+ 9120
  24+ 9120 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  25+ 9121
  26+ 9121 2C               inc l
  27+ 9122 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  28+ 9123
  29+ 9123              ;   Seleccionamos rutina de impresión:
  30+ 9123
  31+ 9123 3E 10            ld a,16
  32+ 9125 B8               cp b
  33+ 9126 C2 1E 92         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  34+ 9129
  35+ 9129              ;   Rutinas:
  36+ 9129
  37+ 9129              Pinta_rapido    ;   1520 t/states.
  38+ 9129
  39+ 9129 E1               pop hl
  40+ 912A
  41+ 912A 1A               ld a,(de)
  42+ 912B AE               xor (hl)
  43+ 912C 77               ld (hl),a
  44+ 912D 2C               inc l
  45+ 912E 1C               inc e
  46+ 912F 1A               ld a,(de)
  47+ 9130 AE               xor (hl)
  48+ 9131 77               ld (hl),a
  49+ 9132 2C               inc l
  50+ 9133 1C               inc e
  51+ 9134 1A               ld a,(de)
  52+ 9135 AE               xor (hl)
  53+ 9136 77               ld (hl),a
  54+ 9137 13               inc de
  55+ 9138
  56+ 9138 E1               pop hl
  57+ 9139
  58+ 9139 1A               ld a,(de)
  59+ 913A AE               xor (hl)
  60+ 913B 77               ld (hl),a
  61+ 913C 2C               inc l
  62+ 913D 1C               inc e
  63+ 913E 1A               ld a,(de)
  64+ 913F AE               xor (hl)
  65+ 9140 77               ld (hl),a
  66+ 9141 2C               inc l
  67+ 9142 1C               inc e
  68+ 9143 1A               ld a,(de)
  69+ 9144 AE               xor (hl)
  70+ 9145 77               ld (hl),a
  71+ 9146 13               inc de
  72+ 9147
  73+ 9147 E1               pop hl
  74+ 9148
  75+ 9148 1A               ld a,(de)
  76+ 9149 AE               xor (hl)
  77+ 914A 77               ld (hl),a
  78+ 914B 2C               inc l
  79+ 914C 1C               inc e
  80+ 914D 1A               ld a,(de)
  81+ 914E AE               xor (hl)
  82+ 914F 77               ld (hl),a
  83+ 9150 2C               inc l
  84+ 9151 1C               inc e
  85+ 9152 1A               ld a,(de)
  86+ 9153 AE               xor (hl)
  87+ 9154 77               ld (hl),a
  88+ 9155 13               inc de
  89+ 9156
  90+ 9156 E1               pop hl
  91+ 9157
  92+ 9157 1A               ld a,(de)
  93+ 9158 AE               xor (hl)
  94+ 9159 77               ld (hl),a
  95+ 915A 2C               inc l
  96+ 915B 1C               inc e
  97+ 915C 1A               ld a,(de)
  98+ 915D AE               xor (hl)
  99+ 915E 77               ld (hl),a
 100+ 915F 2C               inc l
 101+ 9160 1C               inc e
 102+ 9161 1A               ld a,(de)
 103+ 9162 AE               xor (hl)
 104+ 9163 77               ld (hl),a
 105+ 9164 13               inc de
 106+ 9165
 107+ 9165 E1               pop hl
 108+ 9166
 109+ 9166 1A               ld a,(de)
 110+ 9167 AE               xor (hl)
 111+ 9168 77               ld (hl),a
 112+ 9169 2C               inc l
 113+ 916A 1C               inc e
 114+ 916B 1A               ld a,(de)
 115+ 916C AE               xor (hl)
 116+ 916D 77               ld (hl),a
 117+ 916E 2C               inc l
 118+ 916F 1C               inc e
 119+ 9170 1A               ld a,(de)
 120+ 9171 AE               xor (hl)
 121+ 9172 77               ld (hl),a
 122+ 9173 13               inc de
 123+ 9174
 124+ 9174 E1               pop hl
 125+ 9175
 126+ 9175 1A               ld a,(de)
 127+ 9176 AE               xor (hl)
 128+ 9177 77               ld (hl),a
 129+ 9178 2C               inc l
 130+ 9179 1C               inc e
 131+ 917A 1A               ld a,(de)
 132+ 917B AE               xor (hl)
 133+ 917C 77               ld (hl),a
 134+ 917D 2C               inc l
 135+ 917E 1C               inc e
 136+ 917F 1A               ld a,(de)
 137+ 9180 AE               xor (hl)
 138+ 9181 77               ld (hl),a
 139+ 9182 13               inc de
 140+ 9183
 141+ 9183 E1               pop hl
 142+ 9184
 143+ 9184 1A               ld a,(de)
 144+ 9185 AE               xor (hl)
 145+ 9186 77               ld (hl),a
 146+ 9187 2C               inc l
 147+ 9188 1C               inc e
 148+ 9189 1A               ld a,(de)
 149+ 918A AE               xor (hl)
 150+ 918B 77               ld (hl),a
 151+ 918C 2C               inc l
 152+ 918D 1C               inc e
 153+ 918E 1A               ld a,(de)
 154+ 918F AE               xor (hl)
 155+ 9190 77               ld (hl),a
 156+ 9191 13               inc de
 157+ 9192
 158+ 9192 E1               pop hl
 159+ 9193
 160+ 9193 1A               ld a,(de)
 161+ 9194 AE               xor (hl)
 162+ 9195 77               ld (hl),a
 163+ 9196 2C               inc l
 164+ 9197 1C               inc e
 165+ 9198 1A               ld a,(de)
 166+ 9199 AE               xor (hl)
 167+ 919A 77               ld (hl),a
 168+ 919B 2C               inc l
 169+ 919C 1C               inc e
 170+ 919D 1A               ld a,(de)
 171+ 919E AE               xor (hl)
 172+ 919F 77               ld (hl),a
 173+ 91A0 13               inc de
 174+ 91A1
 175+ 91A1 E1               pop hl
 176+ 91A2
 177+ 91A2 1A               ld a,(de)
 178+ 91A3 AE               xor (hl)
 179+ 91A4 77               ld (hl),a
 180+ 91A5 2C               inc l
 181+ 91A6 1C               inc e
 182+ 91A7 1A               ld a,(de)
 183+ 91A8 AE               xor (hl)
 184+ 91A9 77               ld (hl),a
 185+ 91AA 2C               inc l
 186+ 91AB 1C               inc e
 187+ 91AC 1A               ld a,(de)
 188+ 91AD AE               xor (hl)
 189+ 91AE 77               ld (hl),a
 190+ 91AF 13               inc de
 191+ 91B0
 192+ 91B0 E1               pop hl
 193+ 91B1
 194+ 91B1 1A               ld a,(de)
 195+ 91B2 AE               xor (hl)
 196+ 91B3 77               ld (hl),a
 197+ 91B4 2C               inc l
 198+ 91B5 1C               inc e
 199+ 91B6 1A               ld a,(de)
 200+ 91B7 AE               xor (hl)
 201+ 91B8 77               ld (hl),a
 202+ 91B9 2C               inc l
 203+ 91BA 1C               inc e
 204+ 91BB 1A               ld a,(de)
 205+ 91BC AE               xor (hl)
 206+ 91BD 77               ld (hl),a
 207+ 91BE 13               inc de
 208+ 91BF
 209+ 91BF E1               pop hl
 210+ 91C0
 211+ 91C0 1A               ld a,(de)
 212+ 91C1 AE               xor (hl)
 213+ 91C2 77               ld (hl),a
 214+ 91C3 2C               inc l
 215+ 91C4 1C               inc e
 216+ 91C5 1A               ld a,(de)
 217+ 91C6 AE               xor (hl)
 218+ 91C7 77               ld (hl),a
 219+ 91C8 2C               inc l
 220+ 91C9 1C               inc e
 221+ 91CA 1A               ld a,(de)
 222+ 91CB AE               xor (hl)
 223+ 91CC 77               ld (hl),a
 224+ 91CD 13               inc de
 225+ 91CE
 226+ 91CE E1               pop hl
 227+ 91CF
 228+ 91CF 1A               ld a,(de)
 229+ 91D0 AE               xor (hl)
 230+ 91D1 77               ld (hl),a
 231+ 91D2 2C               inc l
 232+ 91D3 1C               inc e
 233+ 91D4 1A               ld a,(de)
 234+ 91D5 AE               xor (hl)
 235+ 91D6 77               ld (hl),a
 236+ 91D7 2C               inc l
 237+ 91D8 1C               inc e
 238+ 91D9 1A               ld a,(de)
 239+ 91DA AE               xor (hl)
 240+ 91DB 77               ld (hl),a
 241+ 91DC 13               inc de
 242+ 91DD
 243+ 91DD E1               pop hl
 244+ 91DE
 245+ 91DE 1A               ld a,(de)
 246+ 91DF AE               xor (hl)
 247+ 91E0 77               ld (hl),a
 248+ 91E1 2C               inc l
 249+ 91E2 1C               inc e
 250+ 91E3 1A               ld a,(de)
 251+ 91E4 AE               xor (hl)
 252+ 91E5 77               ld (hl),a
 253+ 91E6 2C               inc l
 254+ 91E7 1C               inc e
 255+ 91E8 1A               ld a,(de)
 256+ 91E9 AE               xor (hl)
 257+ 91EA 77               ld (hl),a
 258+ 91EB 13               inc de
 259+ 91EC
 260+ 91EC E1               pop hl
 261+ 91ED
 262+ 91ED 1A               ld a,(de)
 263+ 91EE AE               xor (hl)
 264+ 91EF 77               ld (hl),a
 265+ 91F0 2C               inc l
 266+ 91F1 1C               inc e
 267+ 91F2 1A               ld a,(de)
 268+ 91F3 AE               xor (hl)
 269+ 91F4 77               ld (hl),a
 270+ 91F5 2C               inc l
 271+ 91F6 1C               inc e
 272+ 91F7 1A               ld a,(de)
 273+ 91F8 AE               xor (hl)
 274+ 91F9 77               ld (hl),a
 275+ 91FA 13               inc de
 276+ 91FB
 277+ 91FB E1               pop hl
 278+ 91FC
 279+ 91FC 1A               ld a,(de)
 280+ 91FD AE               xor (hl)
 281+ 91FE 77               ld (hl),a
 282+ 91FF 2C               inc l
 283+ 9200 1C               inc e
 284+ 9201 1A               ld a,(de)
 285+ 9202 AE               xor (hl)
 286+ 9203 77               ld (hl),a
 287+ 9204 2C               inc l
 288+ 9205 1C               inc e
 289+ 9206 1A               ld a,(de)
 290+ 9207 AE               xor (hl)
 291+ 9208 77               ld (hl),a
 292+ 9209 13               inc de
 293+ 920A
 294+ 920A E1               pop hl
 295+ 920B
 296+ 920B 1A               ld a,(de)
 297+ 920C AE               xor (hl)
 298+ 920D 77               ld (hl),a
 299+ 920E 2C               inc l
 300+ 920F 1C               inc e
 301+ 9210 1A               ld a,(de)
 302+ 9211 AE               xor (hl)
 303+ 9212 77               ld (hl),a
 304+ 9213 2C               inc l
 305+ 9214 1C               inc e
 306+ 9215 1A               ld a,(de)
 307+ 9216 AE               xor (hl)
 308+ 9217 77               ld (hl),a
 309+ 9218 13               inc de
 310+ 9219
 311+ 9219 ED 7B C7 89      ld sp,(Stack)
 312+ 921D C9               ret
 313+ 921E
 314+ 921E              Pinta_lento
 315+ 921E
 316+ 921E E1           1 pop hl
 317+ 921F
 318+ 921F 1A               ld a,(de)
 319+ 9220 AE               xor (hl)
 320+ 9221 77               ld (hl),a
 321+ 9222 2C               inc l
 322+ 9223 1C               inc e
 323+ 9224 1A               ld a,(de)
 324+ 9225 AE               xor (hl)
 325+ 9226 77               ld (hl),a
 326+ 9227 2C               inc l
 327+ 9228 1C               inc e
 328+ 9229 1A               ld a,(de)
 329+ 922A AE               xor (hl)
 330+ 922B 77               ld (hl),a
 331+ 922C 13               inc de
 332+ 922D
 333+ 922D 10 EF            djnz 1B
 334+ 922F
 335+ 922F ED 7B C7 89      ld sp,(Stack)
 336+ 9233 C9               ret
# file closed: Pinta_Sprites.asm
2008  9234              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9234              ; ******************************************************************************************************************************************************************************************
   2+ 9234              ;
   3+ 9234              ; 26/06/23
   4+ 9234              ;
   5+ 9234              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9234
   7+ 9234              Draw
   8+ 9234
   9+ 9234 CD E4 94     	call Prepara_draw
  10+ 9237 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9238 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9239 28 05        	jr z,2F
  13+ 923B
  14+ 923B 3A 8F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 923E 18 0C        	jr 1F
  16+ 9240
  17+ 9240 2A 8D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9243 22 7D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9246 CD D2 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9249              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9249
  22+ 9249 CD 50 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 924C
  24+ 924C 3A 97 89     1 ld a,(Ctrl_0)
  25+ 924F CB 6F        	bit 5,a
  26+ 9251 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9253
  28+ 9253 CD 68 92     	call Comprueba_limite_horizontal
  29+ 9256 CD F8 92     	call Comprueba_limite_vertical
  30+ 9259
  31+ 9259              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9259              ; -----------------------
  33+ 9259              ; -----------------------
  34+ 9259              ; -----------------------
  35+ 9259
  36+ 9259 CD 4E 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 925C CD 85 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 925F
  39+ 925F 3A 97 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9262 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9264 32 97 89     	ld (Ctrl_0),a
  42+ 9267
  43+ 9267 C9           	ret
  44+ 9268
  45+ 9268              ; *******************************************************************************************************************************************************************************************
  46+ 9268              ;	21/01/23
  47+ 9268              ;
  48+ 9268              ; 	Comprueba_limite_horizontal.
  49+ 9268              ;
  50+ 9268              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9268              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9268              ;
  53+ 9268              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9268              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9268              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9268              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9268
  58+ 9268
  59+ 9268
  60+ 9268 3A 97 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 926B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 926D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 926F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9271 32 97 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9274 18 09            jr 6F
  66+ 9276 CB 5F        1 bit 3,a
  67+ 9278 28 0A            jr z,2F
  68+ 927A E6 F7            and $f7
  69+ 927C 32 97 89         ld (Ctrl_0),a
  70+ 927F CD D2 93     6 call Inicializacion
  71+ 9282 18 5B            jr 5F
  72+ 9284 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9285
  74+ 9285              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9285              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9285
  77+ 9285 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 9286 2A 99 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9289 CD 2E AC     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 928C 67           	ld h,a
  81+ 928D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 928E CD 2E AC     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9291 67           	ld h,a
  84+ 9292 A7           	and a
  85+ 9293 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9295 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 9296 3A 8F 89     	ld a,(Cuad_objeto)
  88+ 9299 FE 02        	cp 2
  89+ 929B 38 1E        	jr c,3F
  90+ 929D 28 1C        	jr z,3F
  91+ 929F 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 92A0 28 23            jr z,7F
  93+ 92A2 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 92A4 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92A6 E1           	pop hl
  96+ 92A7
  97+ 92A7              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92A7              ; _para indicar con E="2" en caso necesario.
  99+ 92A7
 100+ 92A7 E5               push hl
 101+ 92A8 C5               push bc
 102+ 92A9 CD 2E AC     	call calcula_tercio
 103+ 92AC FE 01        	cp 1
 104+ 92AE 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92B0 CD E0 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92B3 28 26            jr z,9F
 107+ 92B5 38 24            jr c,9F
 108+ 92B7 1E 00        11 ld e,0
 109+ 92B9 18 22            jr 8F
 110+ 92BB 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92BC 28 07        	jr z, 7F
 112+ 92BE 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92C0 1E 00         	ld e,0
 114+ 92C2 E1           	pop hl
 115+ 92C3 18 04        	jr 4F
 116+ 92C5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92C7 18 15            jr 10F
 118+ 92C9
 119+ 92C9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92C9              ; _para indicar con E="2" en caso necesario.
 121+ 92C9
 122+ 92C9 E5           4 push hl
 123+ 92CA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92CB CD 2E AC     	call calcula_tercio
 125+ 92CE FE 01        	cp 1
 126+ 92D0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92D2 CD E0 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92D5 28 04            jr z,9F
 129+ 92D7 30 02            jr nc,9F
 130+ 92D9 18 02        	jr 8F
 131+ 92DB 1E 02        9 ld e,2
 132+ 92DD C1           8 pop bc
 133+ 92DE E1           10 pop hl
 134+ 92DF C9           5 ret
 135+ 92E0
 136+ 92E0              ; --------------------
 137+ 92E0              ;
 138+ 92E0              ; 25/08/22
 139+ 92E0
 140+ 92E0 CD 2E AC     Comprueba_centro call calcula_tercio
 141+ 92E3 67               ld h,a
 142+ 92E4 08           	ex af,af
 143+ 92E5 FE 02        	cp 2
 144+ 92E7 38 07        	jr c,1F
 145+ 92E9 28 05        	jr z,1F
 146+ 92EB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92EE 18 03        	jr 2F
 148+ 92F0 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92F3 08           2 ex af,af
 150+ 92F4 A7               and a
 151+ 92F5 ED 42            sbc hl,bc
 152+ 92F7 C9               ret
 153+ 92F8
 154+ 92F8              ; *********************************************************************************************************************************************************************************************
 155+ 92F8              ;
 156+ 92F8              ;   16/8/22
 157+ 92F8              ;
 158+ 92F8              ;	Comprueba_limite_vertical
 159+ 92F8              ;
 160+ 92F8              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 92F8              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 92F8              ;
 163+ 92F8
 164+ 92F8 2A 7D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 92FB 7D           	ld a,l
 166+ 92FC E6 1F        	and $1F
 167+ 92FE 57           	ld d,a
 168+ 92FF 3A 9B 89     	ld a,(Limite_vertical)
 169+ 9302 BA           	cp d 											; Límite - Posición.
 170+ 9303 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 9304 3A 8F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 9307 CB 47        	bit 0,a
 173+ 9309 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 930B
 175+ 930B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 930B
 177+ 930B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 930C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 930E
 180+ 930E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 930E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 930E
 183+ 930E 3A 81 89         ld a,(Coordenada_X)
 184+ 9311 16 0F            ld d,Centro_izquierda
 185+ 9313 A7               and a
 186+ 9314 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 9315 28 1E            jr z,3F
 188+ 9317 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9319              ;                                                    ; _salimos sin modificar nada.
 190+ 9319 18 0E            jr 2F
 191+ 931B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 931C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 931E
 194+ 931E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 931E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 931E
 197+ 931E 3A 81 89         ld a,(Coordenada_X)
 198+ 9321 16 10            ld d,Centro_derecha
 199+ 9323 A7               and a
 200+ 9324 92               sub d
 201+ 9325 28 0E            jr z,3F
 202+ 9327 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9329              ;                                                    ; _salimos sin modificar nada.
 204+ 9329 CB 43        2 bit 0,e
 205+ 932B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 932D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 932E CD C2 93         call Modificaccionne
 208+ 9331 C1           	pop bc
 209+ 9332 CD D2 93         call Inicializacion
 210+ 9335 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 9336
 212+ 9336              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 9336
 214+ 9336 C5           4 push bc
 215+ 9337 01 7C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 933A 0A           	ld a,(bc)
 217+ 933B 3D           	dec a
 218+ 933C 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 933D 7D           	ld a,l
 220+ 933E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 933F CB 47        	bit 0,a
 222+ 9341 28 03        	jr z,5F
 223+ 9343 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 9344 18 2E        	jr 7F
 225+ 9346
 226+ 9346              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 9346
 228+ 9346 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9347 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9348 3A 97 89     	ld a,(Ctrl_0)
 231+ 934B CB 4F        	bit 1,a
 232+ 934D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 934F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9350
 235+ 9350              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9350
 237+ 9350 1C               inc e
 238+ 9351 1D               dec e
 239+ 9352 20 07            jr nz,12F
 240+ 9354 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 9355 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 9356 22 7D 89     	ld (Posicion_actual),hl
 243+ 9359 18 44        13 jr 9F
 244+ 935B CB 43        12 bit 0,e
 245+ 935D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 935F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 935F C1           	pop bc
 248+ 9360 18 D3        	jr 3B
 249+ 9362 80           14 add b
 250+ 9363 6F               ld l,a
 251+ 9364 22 7D 89     	ld (Posicion_actual),hl
 252+ 9367 CD C2 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 936A 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 936C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 936E 32 97 89         ld (Ctrl_0),a
 256+ 9371 F1           	pop af
 257+ 9372 18 2B        	jr 9F
 258+ 9374
 259+ 9374              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9374
 261+ 9374 F5           7 push af
 262+ 9375 3A 97 89     	ld a,(Ctrl_0)
 263+ 9378 CB 47        	bit 0,a
 264+ 937A 20 1D        	jr nz,8F
 265+ 937C F1           	pop af
 266+ 937D
 267+ 937D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 937D
 269+ 937D 1C           	inc e
 270+ 937E 1D               dec e
 271+ 937F 20 07            jr nz,10F
 272+ 9381 90           	sub b
 273+ 9382 6F               ld l,a
 274+ 9383 22 7D 89     	ld (Posicion_actual),hl
 275+ 9386 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9388              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9388 CB 43        10 bit 0,e
 278+ 938A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 938C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 938C C1           	pop bc
 281+ 938D 18 A6        	jr 3B
 282+ 938F 90           16 sub b
 283+ 9390 6F               ld l,a
 284+ 9391 22 7D 89     	ld (Posicion_actual),hl
 285+ 9394 CD C2 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9397 18 06            jr 9F
 287+ 9399 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 939B 32 97 89         ld (Ctrl_0),a
 289+ 939E F1           	pop af
 290+ 939F C1           9 pop bc
 291+ 93A0 1E 00        	ld e,0
 292+ 93A2 CD D2 93         call Inicializacion
 293+ 93A5 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93A6 08           	ex af,af
 295+ 93A7 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93A8 18 8B            jr 3B
 297+ 93AA
 298+ 93AA              ; --------------------
 299+ 93AA
 300+ 93AA 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93AC CD FF 94     1 call PreviousScan
 302+ 93AF 10 FB            djnz 1B
 303+ 93B1 22 7D 89     	ld (Posicion_actual),hl
 304+ 93B4 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93B5 C9           	ret
 306+ 93B6
 307+ 93B6              ; --------------------
 308+ 93B6
 309+ 93B6 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93B8 CD F0 94     1 call NextScan
 311+ 93BB 10 FB            djnz 1B
 312+ 93BD 22 7D 89     	ld (Posicion_actual),hl
 313+ 93C0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93C1 C9           	ret
 315+ 93C2
 316+ 93C2              ; --------------------
 317+ 93C2              ;
 318+ 93C2              ;	22/01/23
 319+ 93C2              ;
 320+ 93C2              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93C2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93C2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93C2
 324+ 93C2
 325+ 93C2              Modificaccionne
 326+ 93C2
 327+ 93C2 3A 8F 89     	ld a,(Cuad_objeto)
 328+ 93C5 FE 02        	cp 2
 329+ 93C7 CC AA 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93CA DC AA 93         call c,Modifica_Pos_actual
 331+ 93CD C8           	ret z
 332+ 93CE CD B6 93         call Modifica_Pos_actual2
 333+ 93D1 C9               ret
 334+ 93D2
 335+ 93D2              ; *************************************************************************************************************************************************************************************************
 336+ 93D2              ;
 337+ 93D2              ;	13/8/22
 338+ 93D2              ;
 339+ 93D2              ;	Inicializacion
 340+ 93D2              ;
 341+ 93D2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93D2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93D2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93D2              ;
 345+ 93D2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93D2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93D2              ;	_ desaparece/aparece.
 348+ 93D2
 349+ 93D2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93D2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93D2              ;
 352+ 93D2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93D2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93D2              ; 		   [E] ="0"
 355+ 93D2
 356+ 93D2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93D2
 358+ 93D2 CD 2E AC     Inicializacion call calcula_tercio
 359+ 93D5 28 36        	jr z,primit
 360+ 93D7 E6 02        	and 2
 361+ 93D9 20 07        	jr nz,segmit
 362+ 93DB 7D           	ld a,l
 363+ 93DC FE 7F        	cp $7f
 364+ 93DE 38 2D        	jr c,primit
 365+ 93E0 28 2B        	jr z,primit
 366+ 93E2 CD 48 94     segmit call column
 367+ 93E5 38 13        	jr c,tercuad
 368+ 93E7 3E 04        cuarcuad ld a,4
 369+ 93E9 32 8F 89     	ld (Cuad_objeto),a
 370+ 93EC 21 20 48     	ld hl,$4820
 371+ 93EF 22 99 89     	ld (Limite_horizontal),hl
 372+ 93F2 21 9B 89     	ld hl,Limite_vertical
 373+ 93F5 36 0D        	ld (hl),$0d
 374+ 93F7 08           	ex af,af
 375+ 93F8 18 3C        	jr 1F
 376+ 93FA              tercuad
 377+ 93FA 3E 03        	ld a,3
 378+ 93FC 32 8F 89     	ld (Cuad_objeto),a
 379+ 93FF 21 20 48     	ld hl,$4820
 380+ 9402 22 99 89     	ld (Limite_horizontal),hl
 381+ 9405 21 9B 89     	ld hl,Limite_vertical
 382+ 9408 36 12        	ld (hl),$12
 383+ 940A 08           	ex af,af
 384+ 940B 18 29        	jr 1F
 385+ 940D CD 48 94     primit call column
 386+ 9410 38 13        	jr c, primcuad
 387+ 9412              segcuad
 388+ 9412 3E 02        	ld a,2
 389+ 9414 32 8F 89     	ld (Cuad_objeto),a
 390+ 9417 21 C0 4F     	ld hl,$4fc0
 391+ 941A 22 99 89     	ld (Limite_horizontal),hl
 392+ 941D 21 9B 89     	ld hl,Limite_vertical
 393+ 9420 36 0D        	ld (hl),$0d
 394+ 9422 08           	ex af,af
 395+ 9423 18 11        	jr 1F
 396+ 9425              primcuad
 397+ 9425 3E 01        	ld a,1
 398+ 9427 32 8F 89     	ld (Cuad_objeto),a
 399+ 942A 21 C0 4F     	ld hl,$4fc0
 400+ 942D 22 99 89     	ld (Limite_horizontal),hl
 401+ 9430 21 9B 89     	ld hl,Limite_vertical
 402+ 9433 36 12        	ld (hl),$12
 403+ 9435 08           	ex af,af
 404+ 9436
 405+ 9436 C5           1 push bc
 406+ 9437 E5           	push hl
 407+ 9438 D5           	push de
 408+ 9439
 409+ 9439 2A 7D 89     	ld hl,(Posicion_actual)
 410+ 943C CD 4C AC     	call Genera_coordenadas
 411+ 943F
 412+ 943F D1           	pop de
 413+ 9440 E1           	pop hl
 414+ 9441 C1           	pop bc
 415+ 9442
 416+ 9442 21 97 89     	ld hl,Ctrl_0
 417+ 9445 CB EE        	set 5,(hl)
 418+ 9447 C9           	ret
 419+ 9448
 420+ 9448              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9448
 422+ 9448              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9448              ;
 424+ 9448              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9448
 426+ 9448 7D           column ld a,l
 427+ 9449 E6 1F        	and $1f
 428+ 944B FE 10         	cp $10
 429+ 944D C9            	ret
 430+ 944E
 431+ 944E              ; --------------------------------------------------------------------------------------------------------------------
 432+ 944E              ;
 433+ 944E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 944E              ;
 435+ 944E              ; 14/12/22
 436+ 944E              ;
 437+ 944E              ;	Modifica: A y BC.
 438+ 944E
 439+ 944E 3A 8F 89     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9451 E6 01        	and 1
 441+ 9453 28 17        	jr z,1F
 442+ 9455
 443+ 9455              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 9455
 445+ 9455 3A 81 89     	ld a,(Coordenada_X)
 446+ 9458 47           	ld b,a
 447+ 9459 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 945A 79           	ld a,c
 449+ 945B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 945C 38 08        	jr c,2F
 451+ 945E 47           	ld b,a
 452+ 945F 79           	ld a,c
 453+ 9460 90           	sub b
 454+ 9461 32 98 89     	ld (Columnas),a
 455+ 9464 18 1B        	jr 4F
 456+ 9466 79           2 ld a,c
 457+ 9467 32 98 89     	ld (Columnas),a
 458+ 946A 18 15        	jr 4F
 459+ 946C
 460+ 946C              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 946C
 462+ 946C 3A 81 89     1 ld a,(Coordenada_X)
 463+ 946F 81           	add c
 464+ 9470 3D           	dec a
 465+ 9471 D6 1F        	sub $1f
 466+ 9473 38 08        	jr c,3F
 467+ 9475 47           	ld b,a
 468+ 9476 79           	ld a,c
 469+ 9477 90           	sub b
 470+ 9478 32 98 89     	ld (Columnas),a
 471+ 947B 18 04        	jr 4F
 472+ 947D 79           3 ld a,c
 473+ 947E 32 98 89     	ld (Columnas),a
 474+ 9481 D9           4 exx
 475+ 9482 4F           	ld c,a
 476+ 9483 D9           	exx
 477+ 9484 C9            ret
 478+ 9485
 479+ 9485              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9485              ;
 481+ 9485              ;   19/7/23
 482+ 9485              ;
 483+ 9485              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9485              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9485              ;
 486+ 9485              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9485              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9485              ;
 489+ 9485              ;	DESTRUYE: HL,B Y A.
 490+ 9485
 491+ 9485 3A 8F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9488 FE 02        	cp 2
 493+ 948A 38 18        	jr c,1F
 494+ 948C 28 16        	jr z,1F
 495+ 948E E6 01        	and 1
 496+ 9490 28 0D        	jr z,3F
 497+ 9492
 498+ 9492              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9492
 500+ 9492 CD D8 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9495
 502+ 9495 7D           9 ld a,l
 503+ 9496 E6 1F        	and $1f
 504+ 9498 28 2A        	jr z,7F
 505+ 949A 2B           	dec hl
 506+ 949B 10 F8        	djnz 9B
 507+ 949D 18 25        	jr 7F
 508+ 949F
 509+ 949F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 949F
 511+ 949F 2A 7D 89     3 ld hl,(Posicion_actual)
 512+ 94A2 18 20        	jr 7F
 513+ 94A4
 514+ 94A4 28 14        1 jr z,2F
 515+ 94A6
 516+ 94A6              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 94A6
 518+ 94A6 CD D8 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 94A9
 520+ 94A9 7D           4 ld a,l
 521+ 94AA E6 1F        	and $1f
 522+ 94AC 28 03        	jr z,6F
 523+ 94AE 2B           	dec hl
 524+ 94AF 10 F8        	djnz 4B
 525+ 94B1 06 0F        6 ld b,15
 526+ 94B3 CD FF 94     5 call PreviousScan
 527+ 94B6 10 FB        	djnz 5B
 528+ 94B8 18 0A        	jr 7F
 529+ 94BA
 530+ 94BA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 94BA
 532+ 94BA CD D8 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 94BD 06 0F        	ld b,15
 534+ 94BF CD FF 94     8 call PreviousScan
 535+ 94C2 10 FB        	djnz 8B
 536+ 94C4
 537+ 94C4 E5           7 push hl
 538+ 94C5 DD E1        	pop ix
 539+ 94C7
 540+ 94C7 2A 7F 89     	ld hl,(Puntero_objeto)
 541+ 94CA E5           	push hl
 542+ 94CB FD E1        	pop iy
 543+ 94CD
 544+ 94CD              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 545+ 94CD
 546+ 94CD 3A 97 89     	ld a,(Ctrl_0)
 547+ 94D0 CB 77        	bit 6,a
 548+ 94D2 C8           	ret z
 549+ 94D3
 550+ 94D3              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 551+ 94D3              ; _ entidad / Amadeus´.
 552+ 94D3
 553+ 94D3 DD 22 27 87  	ld (p.imp.amadeus),ix
 554+ 94D7
 555+ 94D7 C9           	ret
 556+ 94D8
 557+ 94D8              ; --------------------------------------------------------------------------------------------------------------------
 558+ 94D8              ;
 559+ 94D8              ;	2/1/23
 560+ 94D8              ;
 561+ 94D8              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 562+ 94D8              ;
 563+ 94D8              ;	Tras esta rutina tenemos:
 564+ 94D8              ;
 565+ 94D8              ;	OUTPUT: HL contiene (Posicion_actual).
 566+ 94D8              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 567+ 94D8              ;
 568+ 94D8              ;	DESTRUYE!!!!! HL,B y A.
 569+ 94D8
 570+ 94D8 2A 7D 89     Operandos ld hl,(Posicion_actual)
 571+ 94DB 3A 98 89     	ld a,(Columnas)
 572+ 94DE 3D           	dec a
 573+ 94DF 20 01        	jr nz,1F
 574+ 94E1 3C           	inc a
 575+ 94E2 47           1 ld b,a
 576+ 94E3 C9           	ret
 577+ 94E4
 578+ 94E4              ; --------------------------------------------------------------------------------------------------------------------
 579+ 94E4              ;
 580+ 94E4              ;	Prepara_draw
 581+ 94E4              ;
 582+ 94E4              ;	Es una rutina de carga.
 583+ 94E4              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 584+ 94E4              ;
 585+ 94E4              ;	FUNCIONAMIENTO:
 586+ 94E4              ;
 587+ 94E4              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 588+ 94E4              ;	- LD (Posicion_actual) del objeto en [HL].
 589+ 94E4              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 590+ 94E4              ;
 591+ 94E4              ;	DESTRUYE:
 592+ 94E4              ;
 593+ 94E4              ;	Logicamente, BC,HL y E quedan destruidos.
 594+ 94E4
 595+ 94E4 21 7B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 596+ 94E7 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 597+ 94E8 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 598+ 94E9 4E           	ld c,(hl)
 599+ 94EA 2A 7D 89     	ld hl,(Posicion_actual)
 600+ 94ED 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 601+ 94EF C9           	ret
 602+ 94F0
 603+ 94F0              ;----------------------------------------------------------------------------------------------------------------
 604+ 94F0              ;
 605+ 94F0              ;	5/08/22
 606+ 94F0              ;
 607+ 94F0              ;   NextScan.
 608+ 94F0              ;
 609+ 94F0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 610+ 94F0              ;
 611+ 94F0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 612+ 94F0              ;
 613+ 94F0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 614+ 94F0              ;
 615+ 94F0              ;       DESTRUIDOS: AF y HL !!!
 616+ 94F0              ;
 617+ 94F0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 618+ 94F0              ;
 619+ 94F0
 620+ 94F0 24           NextScan inc h          ; Incrementamos el scanline.
 621+ 94F1 7C               ld a,h
 622+ 94F2 E6 07            and 7
 623+ 94F4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 624+ 94F5
 625+ 94F5 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 626+ 94F6 C6 20            add a,$20           ; Vamos a comprobarlo...
 627+ 94F8 6F               ld l,a
 628+ 94F9 D8               ret c               ; Salimos si se produce el cambio de tercio.
 629+ 94FA
 630+ 94FA 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 631+ 94FB D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 632+ 94FD 67               ld h,a
 633+ 94FE C9               ret
 634+ 94FF
 635+ 94FF              ;----------------------------------------------------------------------------------------------------------------
 636+ 94FF              ;
 637+ 94FF              ;	5/08/22
 638+ 94FF              ;
 639+ 94FF              ;   PreviousScan.
 640+ 94FF              ;
 641+ 94FF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 642+ 94FF              ;
 643+ 94FF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 644+ 94FF              ;
 645+ 94FF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 646+ 94FF              ;
 647+ 94FF              ;       DESTRUIDOS: AF y HL !!!
 648+ 94FF              ;
 649+ 94FF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 650+ 94FF              ;
 651+ 94FF
 652+ 94FF 7C           PreviousScan ld a,h
 653+ 9500 25               dec h               ; Dec H.
 654+ 9501 E6 07            and 7
 655+ 9503 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 656+ 9504
 657+ 9504 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 658+ 9505 D6 20            sub $20             ; Vamos a comprobarlo...
 659+ 9507 6F               ld l,a
 660+ 9508 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 661+ 9509
 662+ 9509 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 663+ 950A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 664+ 950C 67               ld h,a
 665+ 950D C9               ret
 666+ 950E
 667+ 950E
 668+ 950E
 669+ 950E
 670+ 950E
 671+ 950E
 672+ 950E
 673+ 950E
 674+ 950E
 675+ 950E
 676+ 950E
 677+ 950E
# file closed: Draw_XOR.asm
2009  950E              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 950E
   2+ 950E              ; ******************************************************************************************************************************************************************************************
   3+ 950E              ;
   4+ 950E              ;   20/05/23
   5+ 950E              ;
   6+ 950E              ;	Recompone_posicion_inicio
   7+ 950E              ;
   8+ 950E              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 950E              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 950E              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 950E              ;	_ a una u otra rutina.
  12+ 950E
  13+ 950E              Recompone_posicion_inicio
  14+ 950E
  15+ 950E 2A 8D 89     	ld hl,(Posicion_inicio)
  16+ 9511 7D           	ld a,l
  17+ 9512 E6 1F        	and $1f
  18+ 9514 28 16        	jr z,1F
  19+ 9516
  20+ 9516 FE 1F        	cp $1f
  21+ 9518 28 0D        	jr z,3F
  22+ 951A
  23+ 951A 21 9C 89     	ld hl,Ctrl_2
  24+ 951D CB C6        	set 0,(hl)
  25+ 951F 2A 7F 89     	ld hl,(Puntero_objeto)
  26+ 9522 22 B7 89     	ld (Repone_puntero_objeto),hl
  27+ 9525 18 08        	jr 2F
  28+ 9527
  29+ 9527 CD D5 96     3 call Mov_left
  30+ 952A 18 03        	jr 2F
  31+ 952C
  32+ 952C CD B2 95     1 call Mov_right
  33+ 952F 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9532 22 7F 89     	ld (Puntero_objeto),hl
  35+ 9535 C9           	ret
  36+ 9536
  37+ 9536              ; ******************************************************************************************************************************************************************************************
  38+ 9536              ;
  39+ 9536              ;   27/05/23
  40+ 9536              ;
  41+ 9536              ;	Mov_down
  42+ 9536              ;
  43+ 9536              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9536              ;
  45+ 9536              ;
  46+ 9536              Mov_down
  47+ 9536
  48+ 9536 CD A0 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9539              ;																	; _ repone (Puntero_objeto).
  50+ 9539 21 97 89     	ld hl,Ctrl_0
  51+ 953C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 953E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 953E              ; 																	; _ en el caso de que no lo haya.
  54+ 953E 3A A1 89     	ld a,(Vel_down)
  55+ 9541 47           	ld b,a
  56+ 9542 2A 7D 89         ld hl,(Posicion_actual)
  57+ 9545 CD 2E AC     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9548 E6 02        	and 2
  59+ 954A 28 17        	jr z,1F
  60+ 954C
  61+ 954C              ; Nos encontramos en el último tercio de pantalla.
  62+ 954C              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 954C
  64+ 954C 7C           	ld a,h
  65+ 954D FE 57        	cp $57
  66+ 954F 20 12        	jr nz,1F
  67+ 9551
  68+ 9551 7D           	ld a,l
  69+ 9552 C6 20        	add $20
  70+ 9554 30 0D        	jr nc,1F
  71+ 9556
  72+ 9556              ; ------------------------------
  73+ 9556              ;
  74+ 9556              ;	12/01/24
  75+ 9556
  76+ 9556              ;	call Reaparece_arriba
  77+ 9556 CD 62 98     	call Reinicio
  78+ 9559
  79+ 9559              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9559
  81+ 9559 3A DE 89     	ld a,(Ctrl_3)
  82+ 955C CB CF        	set 1,a
  83+ 955E 32 DE 89     	ld (Ctrl_3),a
  84+ 9561
  85+ 9561 18 08        	jr 3F
  86+ 9563              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9563              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9563              ; ------------------------------
  89+ 9563
  90+ 9563 CD F0 94     1 call NextScan
  91+ 9566 22 7D 89     	ld (Posicion_actual),hl
  92+ 9569 10 DA            djnz 2B
  93+ 956B CD 4C AC     3 call Genera_coordenadas
  94+ 956E C9           	ret
  95+ 956F
  96+ 956F              ; ******************************************************************************************************************************************************************************************
  97+ 956F              ;
  98+ 956F              ;   27/05/23
  99+ 956F              ;
 100+ 956F              ;	Mov_up
 101+ 956F              ;
 102+ 956F              ; 	Mueve el Sprite hacia arriba.
 103+ 956F              ;
 104+ 956F              ;
 105+ 956F              Mov_up
 106+ 956F
 107+ 956F CD A0 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9572              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9572 21 97 89     	ld hl,Ctrl_0
 110+ 9575 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9577              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9577              ; 																		; _ en el caso de que no lo haya.
 113+ 9577 3A A0 89     	ld a,(Vel_up)
 114+ 957A 47           	ld b,a
 115+ 957B 2A 7D 89     	ld hl,(Posicion_actual)
 116+ 957E CD 2E AC     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9581 A7           	and a
 118+ 9582 20 10        	jr nz,1F
 119+ 9584
 120+ 9584              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9584              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9584
 123+ 9584 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9585 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9587 20 0B            jr nz,1F
 126+ 9589 7D               ld a,l
 127+ 958A D6 20            sub $20
 128+ 958C 30 06            jr nc,1F
 129+ 958E 25               dec h
 130+ 958F
 131+ 958F              ; -----------------------------
 132+ 958F CD 43 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9592              ;	call Reinicio
 134+ 9592              ; -----------------------------
 135+ 9592
 136+ 9592 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9594 CD FF 94     1 call PreviousScan
 138+ 9597 22 7D 89     	ld (Posicion_actual),hl
 139+ 959A 10 E2            djnz 3B
 140+ 959C CD 4C AC     2 call Genera_coordenadas
 141+ 959F C9           	ret
 142+ 95A0
 143+ 95A0              ; -----------------------------
 144+ 95A0              ;
 145+ 95A0              ;	27/5/23
 146+ 95A0              ;
 147+ 95A0              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95A0              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95A0              ;
 150+ 95A0              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95A0              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95A0              ;
 153+ 95A0              ;	Modifica: A y (Puntero_objeto).
 154+ 95A0
 155+ 95A0 3A 9C 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95A3 CB 47        	bit 0,a
 157+ 95A5 C8           	ret z
 158+ 95A6 CB 87        	res 0,a
 159+ 95A8 32 9C 89     	ld (Ctrl_2),a
 160+ 95AB 2A B7 89     	ld hl,(Repone_puntero_objeto)
 161+ 95AE 22 7F 89     	ld (Puntero_objeto),hl
 162+ 95B1 C9           	ret
 163+ 95B2
 164+ 95B2              ; ******************************************************************************************************************************************************************************************
 165+ 95B2              ;
 166+ 95B2              ;	19/10/22
 167+ 95B2              ;
 168+ 95B2              ;	Mov_right.
 169+ 95B2              ;
 170+ 95B2              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95B2              ;
 172+ 95B2
 173+ 95B2 3A 97 89     Mov_right ld a,(Ctrl_0)
 174+ 95B5 CB 77        	bit 6,a
 175+ 95B7 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95B9
 177+ 95B9 CD F1 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95BC C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95BD
 180+ 95BD 21 97 89     	ld hl,Ctrl_0
 181+ 95C0 CB E6        	set 4,(hl)
 182+ 95C2 18 52        	jr 8F
 183+ 95C4
 184+ 95C4 21 97 89     10 ld hl,Ctrl_0
 185+ 95C7 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95C9              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95C9              ; 																	; _ en el caso de que no lo haya.
 188+ 95C9 3A 81 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95CC FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95CE 20 46        	jr nz,8F
 191+ 95D0
 192+ 95D0 3A 83 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95D3 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95D4 28 40        	jr z,8F
 195+ 95D6
 196+ 95D6              ; ---------- ---------- ----------
 197+ 95D6              ;
 198+ 95D6              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95D6
 200+ 95D6 3A 9F 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95D9 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95DB 28 11        	jr z,1F
 203+ 95DD 38 06        	jr c,6F
 204+ 95DF FE 04        	cp 4
 205+ 95E1 28 14        	jr z,7F
 206+ 95E3 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95E5
 208+ 95E5              ; ---------- ---------- ----------
 209+ 95E5              ;
 210+ 95E5              ; Perfiles de velocidad
 211+ 95E5              ;
 212+ 95E5
 213+ 95E5 3A 83 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95E8 FE FE        	cp $fe
 215+ 95EA 20 2A        	jr nz,8F
 216+ 95EC 18 10        	jr 3F
 217+ 95EE 3A 83 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95F1 FE FD        	cp $fd
 219+ 95F3 20 21        	jr nz,8F
 220+ 95F5 18 07        	jr 3F
 221+ 95F7 3A 83 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 95FA FE FB        	cp $fb
 223+ 95FC 20 18        	jr nz,8F
 224+ 95FE
 225+ 95FE              ; ---------- ---------- ----------
 226+ 95FE
 227+ 95FE              3
 228+ 95FE CD 31 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9601              ;	call Reinicio
 230+ 9601
 231+ 9601              ; ---------- ---------- ----------
 232+ 9601              ;
 233+ 9601              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9601
 235+ 9601 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9603 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9604 CD 1D 96     	call DESPLZ_DER
 238+ 9607 C1           	pop bc
 239+ 9608 10 F9        	djnz 5B
 240+ 960A 2A 7D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 960D 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 960E 22 7D 89     	ld (Posicion_actual),hl
 243+ 9611 CD 4C AC     	call Genera_coordenadas
 244+ 9614 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9616
 246+ 9616              ; ---------- ---------- ----------
 247+ 9616
 248+ 9616 2A 7D 89     8 ld hl,(Posicion_actual)
 249+ 9619 CD 1D 96     	call DESPLZ_DER
 250+ 961C C9           2 ret
 251+ 961D
 252+ 961D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 961D              ;
 254+ 961D              ;	22/9/22
 255+ 961D              ;
 256+ 961D
 257+ 961D CD 2C 96     DESPLZ_DER call Desplaza_derecha
 258+ 9620 CD 78 96         call modifica_parametros_1er_DESPLZ_2
 259+ 9623 CD A1 96         call Ciclo_completo
 260+ 9626 21 97 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9629 CB FE        	set 7,(hl)
 262+ 962B C9           	ret
 263+ 962C
 264+ 962C              ; ******************************************************************************************************************************************************************************************
 265+ 962C              ;	15/02/23
 266+ 962C              ;
 267+ 962C
 268+ 962C 3A 9F 89     Desplaza_derecha ld a,(Vel_right)
 269+ 962F 47           	ld b,a
 270+ 9630 2A 89 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9633 23           1 inc hl
 272+ 9634 23           	inc hl
 273+ 9635 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9637 22 89 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 963A CD 4E 8C     	call Extrae_address
 276+ 963D 22 7F 89     	ld (Puntero_objeto),hl
 277+ 9640
 278+ 9640              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9640
 280+ 9640              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9640              ; Cuántos movimientos hemos hecho ??
 282+ 9640              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9640
 284+ 9640 2A 85 89     7 ld hl,(Indice_Sprite_der)
 285+ 9643 EB           	ex de,hl
 286+ 9644 A7           	and a
 287+ 9645 ED 52        	sbc hl,de
 288+ 9647 CB 3D        	srl l
 289+ 9649 3E 08        6 ld a,8
 290+ 964B 95           	sub l
 291+ 964C 30 1E        	jr nc,3F
 292+ 964E
 293+ 964E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 964E              ; B="0".
 295+ 964E
 296+ 964E 04           4 inc b
 297+ 964F 3C           	inc a
 298+ 9650 20 FC        	jr nz,4B
 299+ 9652 78           	ld a,b
 300+ 9653 08           	ex af,af
 301+ 9654 2A 85 89     	ld hl,(Indice_Sprite_der)
 302+ 9657 23           5 inc hl
 303+ 9658 23           	inc hl
 304+ 9659 10 FC        	djnz 5B
 305+ 965B 22 89 89     	ld (Puntero_DESPLZ_der),hl
 306+ 965E CD 4E 8C     	call Extrae_address
 307+ 9661 22 7F 89     	ld (Puntero_objeto),hl
 308+ 9664
 309+ 9664              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9664              ; _(Posicion_actual).
 311+ 9664
 312+ 9664 21 7D 89     	ld hl,Posicion_actual
 313+ 9667 34           	inc (hl)
 314+ 9668 08               ex af,af
 315+ 9669 6F           	ld l,a
 316+ 966A 18 DD        	jr 6B
 317+ 966C
 318+ 966C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 966C
 320+ 966C 47           3 ld b,a
 321+ 966D 2A 87 89     	ld hl,(Indice_Sprite_izq)
 322+ 9670 23           2 inc hl
 323+ 9671 23           	inc hl
 324+ 9672 10 FC        	djnz 2B
 325+ 9674 22 8B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9677 C9           8 ret
 327+ 9678
 328+ 9678              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9678              ;
 330+ 9678              ;	24/7/22
 331+ 9678              ;
 332+ 9678              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9678              ;
 334+ 9678              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9678              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9678              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9678
 338+ 9678 3A 83 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 967B A7           	and a
 340+ 967C 20 1F        	jr nz,1F
 341+ 967E D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9680 32 83 89         ld (CTRL_DESPLZ),a
 343+ 9683
 344+ 9683 21 7C 89     	ld hl,Columns
 345+ 9686 34           	inc (hl)
 346+ 9687 3A 8F 89     	ld a,(Cuad_objeto)
 347+ 968A E6 01        	and 1
 348+ 968C 28 0F        	jr z,1F
 349+ 968E 2A 7D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9691 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9692 22 7D 89     	ld (Posicion_actual),hl
 352+ 9695 CD 4C AC     	call Genera_coordenadas
 353+ 9698 CD FD 97     	call Inc_CTRL_DESPLZ
 354+ 969B 18 03        	jr 2F
 355+ 969D CD FD 97     1 call Inc_CTRL_DESPLZ
 356+ 96A0 C9           2 ret
 357+ 96A1
 358+ 96A1              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96A1              ;
 360+ 96A1              ;	24/7/22
 361+ 96A1              ;
 362+ 96A1              ;	Ciclo_completo.
 363+ 96A1              ;
 364+ 96A1              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96A1              ;
 366+ 96A1              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96A1              ; 	Decrementamos (Columns).
 368+ 96A1              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96A1              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96A1
 371+ 96A1
 372+ 96A1 3A 83 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96A4 FE FF        	cp $ff
 374+ 96A6 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96A8 E6 F0        	and $f0
 376+ 96AA 20 28        	jr nz,3F
 377+ 96AC
 378+ 96AC              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96AC
 380+ 96AC 3A 83 89     	ld a,(CTRL_DESPLZ)
 381+ 96AF 47           	ld b,a
 382+ 96B0 3E F8        	ld a,$f8
 383+ 96B2 80           	add b
 384+ 96B3 32 83 89     	ld (CTRL_DESPLZ),a
 385+ 96B6 18 1C        	jr 3F
 386+ 96B8 21 7C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96BB 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96BC AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96BD 32 83 89     	ld (CTRL_DESPLZ),a
 390+ 96C0 3A 8F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96C3 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96C5 20 0A        	jr nz,2F
 393+ 96C7 2A 7D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96CA 23           	inc hl
 395+ 96CB 22 7D 89     	ld (Posicion_actual),hl
 396+ 96CE CD 4C AC     	call Genera_coordenadas
 397+ 96D1
 398+ 96D1              ; Inicia el puntero de Sprite.
 399+ 96D1
 400+ 96D1 CD 63 8C     2 call Inicia_puntero_objeto_der
 401+ 96D4 C9           3 ret
 402+ 96D5
 403+ 96D5              ; ******************************************************************************************************************************************************************************************
 404+ 96D5              ;
 405+ 96D5              ;	15/02/23
 406+ 96D5              ;
 407+ 96D5              ;	Mov_left.
 408+ 96D5              ;
 409+ 96D5              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96D5              ;
 411+ 96D5              Mov_left
 412+ 96D5
 413+ 96D5 21 97 89     	ld hl,Ctrl_0
 414+ 96D8 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96DA              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96DA              ; 																	; _ en el caso de que no lo haya.
 417+ 96DA 3A 97 89     	ld a,(Ctrl_0)
 418+ 96DD CB 77        	bit 6,a
 419+ 96DF 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96E1
 421+ 96E1 CD F7 97     	call Stop_Amadeus_left
 422+ 96E4 C8           	ret z
 423+ 96E5 20 4A        	jr nz,8F
 424+ 96E7
 425+ 96E7 3A 81 89     11 ld a,(Coordenada_X)
 426+ 96EA A7           	and a
 427+ 96EB 20 44        	jr nz,8F
 428+ 96ED
 429+ 96ED 3A 83 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96F0 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96F1 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96F3
 433+ 96F3              ; ---------- ---------- ----------
 434+ 96F3
 435+ 96F3 3A 9E 89     	ld a,(Vel_left)
 436+ 96F6 FE 02        	cp 2
 437+ 96F8 28 0F        	jr z,1F
 438+ 96FA 38 04        	jr c,6F
 439+ 96FC FE 04        	cp 4
 440+ 96FE 28 12        	jr z,7F
 441+ 9700
 442+ 9700              ; ---------- ---------- ----------
 443+ 9700
 444+ 9700 3A 83 89     6 ld a,(CTRL_DESPLZ)
 445+ 9703 FE F8        	cp $f8
 446+ 9705 20 2A        	jr nz,8F
 447+ 9707 18 10        	jr 4F
 448+ 9709 3A 83 89     1 ld a,(CTRL_DESPLZ)
 449+ 970C FE F9        	cp $f9
 450+ 970E 20 21        	jr nz,8F
 451+ 9710 18 07        	jr 4F
 452+ 9712 3A 83 89     7 ld a,(CTRL_DESPLZ)
 453+ 9715 FE FB        	cp $fb
 454+ 9717 20 18        	jr nz,8F
 455+ 9719
 456+ 9719              ; ---------- ---------- ----------
 457+ 9719
 458+ 9719              4
 459+ 9719 CD 1F 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 971C              ;	call Reinicio
 461+ 971C
 462+ 971C              ; ---------- ---------- ----------
 463+ 971C
 464+ 971C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 971E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 971F
 467+ 971F              ;	ld hl,(Indice_Sprite_izq)
 468+ 971F              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 971F
 470+ 971F CD 38 97     	call DESPLZ_IZQ
 471+ 9722 C1           	pop bc
 472+ 9723 10 F9        	djnz 5B
 473+ 9725 2A 7D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9728 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9729 22 7D 89     	ld (Posicion_actual),hl
 476+ 972C CD 4C AC     	call Genera_coordenadas
 477+ 972F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9731
 479+ 9731              ; ---------- ---------- ----------
 480+ 9731
 481+ 9731              ; Movemos, no hay recolocación.
 482+ 9731
 483+ 9731 2A 7D 89     8 ld hl,(Posicion_actual)
 484+ 9734 CD 38 97     	call DESPLZ_IZQ
 485+ 9737 C9           2 ret
 486+ 9738
 487+ 9738              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9738              ;
 489+ 9738              ;	22/9/22
 490+ 9738
 491+ 9738              DESPLZ_IZQ
 492+ 9738
 493+ 9738 CD 47 97     	call Desplaza_izquierda
 494+ 973B CD 93 97         call modifica_parametros_1er_DESPLZ
 495+ 973E CD BB 97     	call Ciclo_completo_2
 496+ 9741 21 97 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9744 CB BE        	res 7,(hl)
 498+ 9746 C9           	ret
 499+ 9747
 500+ 9747              Desplaza_izquierda
 501+ 9747
 502+ 9747 3A 9E 89     	ld a,(Vel_left)
 503+ 974A 47           	ld b,a
 504+ 974B 2A 8B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 974E 23           1 inc hl
 506+ 974F 23           	inc hl
 507+ 9750 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9752 22 8B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9755 CD 4E 8C     	call Extrae_address
 510+ 9758 22 7F 89     	ld (Puntero_objeto),hl
 511+ 975B
 512+ 975B              ; Modifica (Puntero_DESPLZ_der).
 513+ 975B
 514+ 975B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 975B              ; Cuántos movimientos hemos hecho ??
 516+ 975B              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 975B
 518+ 975B 2A 87 89     7 ld hl,(Indice_Sprite_izq)
 519+ 975E EB           	ex de,hl
 520+ 975F A7           	and a
 521+ 9760 ED 52        	sbc hl,de
 522+ 9762 CB 3D        	srl l
 523+ 9764 3E 08        6 ld a,8
 524+ 9766 95           	sub l
 525+ 9767 30 1E        	jr nc,3F
 526+ 9769
 527+ 9769              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9769              ; B="0".
 529+ 9769
 530+ 9769 04           4 inc b
 531+ 976A 3C           	inc a
 532+ 976B 20 FC        	jr nz,4B
 533+ 976D 78           	ld a,b
 534+ 976E 08           	ex af,af
 535+ 976F 2A 87 89     	ld hl,(Indice_Sprite_izq)
 536+ 9772 23           5 inc hl
 537+ 9773 23           	inc hl
 538+ 9774 10 FC        	djnz 5B
 539+ 9776 22 8B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9779 CD 4E 8C     	call Extrae_address
 541+ 977C 22 7F 89     	ld (Puntero_objeto),hl
 542+ 977F
 543+ 977F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 977F              ; _(Posicion_actual).
 545+ 977F
 546+ 977F 21 7D 89     	ld hl,Posicion_actual
 547+ 9782 35           	dec (hl)
 548+ 9783 08           	ex af,af
 549+ 9784 6F           	ld l,a
 550+ 9785 18 DD        	jr 6B
 551+ 9787
 552+ 9787              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9787
 554+ 9787 47           3 ld b,a
 555+ 9788 2A 85 89     	ld hl,(Indice_Sprite_der)
 556+ 978B 23           2 inc hl
 557+ 978C 23           	inc hl
 558+ 978D 10 FC        	djnz 2B
 559+ 978F 22 89 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9792 C9           8 ret
 561+ 9793
 562+ 9793              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9793              ;
 564+ 9793              ;	modifica_parametros_1er_DESPLZ
 565+ 9793              ;
 566+ 9793              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9793              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9793              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9793
 570+ 9793 3A 83 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9796 A7           	and a
 572+ 9797 20 1E        	jr nz,1F
 573+ 9799 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 979A 32 83 89         ld (CTRL_DESPLZ),a
 575+ 979D 21 7C 89     	ld hl,Columns
 576+ 97A0 34           	inc (hl)
 577+ 97A1 3A 8F 89     	ld a,(Cuad_objeto)
 578+ 97A4 E6 01        	and 1
 579+ 97A6 20 0F        	jr nz,1F
 580+ 97A8 2A 7D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97AB 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97AC 22 7D 89     	ld (Posicion_actual),hl
 583+ 97AF CD 4C AC     	call Genera_coordenadas
 584+ 97B2 CD 0E 98     	call Dec_CTRL_DESPLZ
 585+ 97B5 18 03        	jr 2F
 586+ 97B7 CD 0E 98     1 call Dec_CTRL_DESPLZ
 587+ 97BA C9           2 ret
 588+ 97BB
 589+ 97BB              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97BB
 591+ 97BB 3A 83 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97BE FE F7        	cp $f7
 593+ 97C0 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97C2 30 2C        	jr nc,3F
 595+ 97C4
 596+ 97C4              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97C4
 598+ 97C4 06 00        	ld b,0
 599+ 97C6 04           4 inc b
 600+ 97C7 3C           	inc a
 601+ 97C8 FE F7        	cp $f7
 602+ 97CA 20 FA        	jr nz,4B
 603+ 97CC 3E FF        	ld a,$ff
 604+ 97CE 90           	sub b
 605+ 97CF 32 83 89     	ld (CTRL_DESPLZ),a
 606+ 97D2 18 1C        	jr 3F
 607+ 97D4
 608+ 97D4              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97D4
 610+ 97D4 21 7C 89     1 ld hl,Columns
 611+ 97D7 35           	dec (hl)
 612+ 97D8 AF           	xor a
 613+ 97D9 32 83 89     	ld (CTRL_DESPLZ),a
 614+ 97DC 3A 8F 89     	ld a,(Cuad_objeto)
 615+ 97DF E6 01        	and 1
 616+ 97E1 28 0A        	jr z,2F
 617+ 97E3 2A 7D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97E6 2B           	dec hl
 619+ 97E7 22 7D 89     	ld (Posicion_actual),hl
 620+ 97EA CD 4C AC     	call Genera_coordenadas
 621+ 97ED
 622+ 97ED              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97ED
 624+ 97ED CD 76 8C     2 call Inicia_puntero_objeto_izq
 625+ 97F0 C9           3 ret
 626+ 97F1
 627+ 97F1              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97F1              ;
 629+ 97F1              ;	19/10/22
 630+ 97F1              ;
 631+ 97F1              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97F1              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97F1
 634+ 97F1 3A 81 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97F4 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97F6 C9           	ret
 637+ 97F7
 638+ 97F7              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97F7              ;
 640+ 97F7              ;	19/10/22
 641+ 97F7              ;
 642+ 97F7              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97F7              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97F7
 645+ 97F7 3A 81 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 97FA FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 97FC C9           	ret
 648+ 97FD
 649+ 97FD              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 97FD              ;
 651+ 97FD              ;	24/7/22
 652+ 97FD              ;
 653+ 97FD              ;	Inc_CTRL_DESPLZ
 654+ 97FD              ;
 655+ 97FD              ;
 656+ 97FD              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 97FD
 658+ 97FD 21 83 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9800 3A 9F 89     	ld a,(Vel_right)
 660+ 9803 A7           	and a
 661+ 9804 28 06        	jr z,1F
 662+ 9806 47           	ld b,a
 663+ 9807 34           3 inc (hl)
 664+ 9808 10 FD        	djnz 3B
 665+ 980A 18 01        	jr 2F
 666+ 980C 34           1 inc (hl)
 667+ 980D C9           2 ret
 668+ 980E
 669+ 980E              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 980E              ;
 671+ 980E              ;	5/2/23
 672+ 980E              ;
 673+ 980E              ;	Dec_CTRL_DESPLZ
 674+ 980E              ;
 675+ 980E              ;
 676+ 980E              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 980E
 678+ 980E 21 83 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9811 3A 9E 89     	ld a,(Vel_left)
 680+ 9814 A7           	and a
 681+ 9815 28 06        	jr z,1F
 682+ 9817 47           	ld b,a
 683+ 9818 35           3 dec (hl)
 684+ 9819 10 FD        	djnz 3B
 685+ 981B 18 01        	jr 2F
 686+ 981D 35           1 dec (hl)
 687+ 981E C9           2 ret
 688+ 981F
 689+ 981F              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 981F
 691+ 981F 2A 7D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9822 01 1F 00     	ld bc,31
 693+ 9825 A7           	and a
 694+ 9826 ED 4A        	adc hl,bc
 695+ 9828 22 7D 89     	ld (Posicion_actual),hl
 696+ 982B 21 97 89     	ld hl,Ctrl_0														; $xxx1
 697+ 982E CB C6        	set 0,(hl)
 698+ 9830 C9           	ret
 699+ 9831
 700+ 9831              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9831
 702+ 9831 2A 7D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9834 01 1F 00     	ld bc,31
 704+ 9837 A7           	and a
 705+ 9838 ED 42        	sbc hl,bc
 706+ 983A 22 7D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 983D 21 97 89     	ld hl,Ctrl_0
 708+ 9840 CB CE        	set 1,(hl)
 709+ 9842 C9           	ret
 710+ 9843
 711+ 9843              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9843
 713+ 9843 24           Reaparece_abajo inc h
 714+ 9844 01 E0 17     	ld bc,$17e0
 715+ 9847 A7           	and a
 716+ 9848 ED 4A        	adc hl,bc
 717+ 984A 22 7D 89     	ld (Posicion_actual),hl
 718+ 984D 21 97 89     	ld hl,Ctrl_0
 719+ 9850 CB D6        	set 2,(hl)
 720+ 9852 C9           	ret
 721+ 9853
 722+ 9853              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9853
 724+ 9853 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9856 A7           	and a
 726+ 9857 ED 42        	sbc hl,bc
 727+ 9859 22 7D 89     	ld (Posicion_actual),hl
 728+ 985C 21 97 89     	ld hl,Ctrl_0
 729+ 985F CB DE        	set 3,(hl)
 730+ 9861 C9           	ret
 731+ 9862
 732+ 9862              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9862              ;
 734+ 9862              ;	15/07/23
 735+ 9862
 736+ 9862              Reinicio
 737+ 9862
 738+ 9862              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9862
 740+ 9862 AF           	xor a
 741+ 9863 21 AE 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9866 CD 84 98     	call Limpia_contenido_hl
 743+ 9869
 744+ 9869 21 7D 89     	ld hl,Posicion_actual
 745+ 986C CD 84 98     	call Limpia_contenido_hl
 746+ 986F
 747+ 986F CD 75 AA     	call Inicializa_Puntero_indice_mov
 748+ 9872 CD 50 99     	call Inicia_Puntero_mov
 749+ 9875
 750+ 9875 21 B0 89     	ld hl,Incrementa_puntero
 751+ 9878 06 05        	ld b,5
 752+ 987A 77           1 ld (hl),a
 753+ 987B 23           	inc hl
 754+ 987C 10 FC        	djnz 1B
 755+ 987E
 756+ 987E 21 9C 89     	ld hl,Ctrl_2
 757+ 9881 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9883
 759+ 9883 C9           	ret
 760+ 9884
 761+ 9884 77           Limpia_contenido_hl	ld (hl),a
 762+ 9885 23           	inc hl
 763+ 9886 77           	ld (hl),a
 764+ 9887 C9           	ret
 765+ 9888
 766+ 9888
# file closed: Direcciones.asm
2010  9888              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9888              ; ----- ----- ----- ----- -----
   2+ 9888              ;
   3+ 9888              ;   28/12/23
   4+ 9888
   5+ 9888              Movimiento
   6+ 9888
   7+ 9888              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9888
   9+ 9888 3A 9C 89         ld a,(Ctrl_2)
  10+ 988B CB 57            bit 2,a
  11+ 988D 20 1B            jr nz, Desplazamiento_iniciado
  12+ 988F
  13+ 988F 2A AC 89         ld hl,(Puntero_mov)
  14+ 9892 7E               ld a,(hl)
  15+ 9893
  16+ 9893              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9893
  18+ 9893              Inicia_desplazamiento.
  19+ 9893
  20+ 9893              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9893
  22+ 9893 CD 86 99         call Ajusta_velocidad_desplazamiento
  23+ 9896
  24+ 9896              ; Iniciamos (Repetimos_mov).
  25+ 9896
  26+ 9896 7E               ld a,(hl)
  27+ 9897 E6 0F            and $0f
  28+ 9899 32 B2 89         ld (Repetimos_desplazamiento),a
  29+ 989C 32 B3 89         ld (Repetimos_desplazamiento_backup),a
  30+ 989F
  31+ 989F              ; Iniciamos (Cola_de_desplazamiento).
  32+ 989F
  33+ 989F 23               inc hl
  34+ 98A0 7E               ld a,(hl)
  35+ 98A1 32 B5 89         ld (Cola_de_desplazamiento),a
  36+ 98A4 2B               dec hl
  37+ 98A5
  38+ 98A5 21 9C 89         ld hl,Ctrl_2
  39+ 98A8 CB D6            set 2,(hl)
  40+ 98AA
  41+ 98AA              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98AA              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98AA
  44+ 98AA              Desplazamiento_iniciado
  45+ 98AA
  46+ 98AA CD 5A 99         call Aplica_desplazamiento
  47+ 98AD
  48+ 98AD              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98AD
  50+ 98AD 3A DE 89         ld a,(Ctrl_3)
  51+ 98B0 CB 4F            bit 1,a
  52+ 98B2 C0               ret nz
  53+ 98B3
  54+ 98B3 21 B2 89     3 ld hl,Repetimos_desplazamiento
  55+ 98B6 35               dec (hl)
  56+ 98B7 C0               ret nz
  57+ 98B8
  58+ 98B8              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98B8              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98B8              ; Analiza (Cola_de_desplazamiento).
  61+ 98B8
  62+ 98B8 3A B5 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98BB A7               and a
  64+ 98BC CC AF 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98BF 28 30            jr z,Reinicia_el_movimiento
  66+ 98C1
  67+ 98C1 FE FF            cp $ff
  68+ 98C3 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98C5
  70+ 98C5 FE FE            cp $fe
  71+ 98C7 CC 34 99         call z,Fijamos_bucle
  72+ 98CA 28 25            jr z,Reinicia_el_movimiento
  73+ 98CC
  74+ 98CC FE FD            cp $fd
  75+ 98CE 20 11            jr nz,1F
  76+ 98D0
  77+ 98D0              ; ---
  78+ 98D0              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98D0
  80+ 98D0 3A 9C 89         ld a,(Ctrl_2)
  81+ 98D3 CB 5F            bit 3,a
  82+ 98D5 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98D7
  84+ 98D7              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98D7
  86+ 98D7 21 9C 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98DA CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98DC
  89+ 98DC CD 45 99         call Inicia_Repetimos_movimiento
  90+ 98DF 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98E1              ; ---
  92+ 98E1
  93+ 98E1 FE 01        1 cp 1
  94+ 98E3 CA 1E 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98E6
  96+ 98E6 3D               dec a
  97+ 98E7 32 B5 89         ld (Cola_de_desplazamiento),a
  98+ 98EA
  99+ 98EA 3A B3 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98ED 32 B2 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98F0              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98F0 C9               ret
 103+ 98F1
 104+ 98F1              Reinicia_el_movimiento
 105+ 98F1
 106+ 98F1 3A 9C 89         ld a,(Ctrl_2)
 107+ 98F4 CB 5F            bit 3,a
 108+ 98F6 28 1B            jr z,2F
 109+ 98F8
 110+ 98F8              ; (Cola_de_desplazamiento)="254".
 111+ 98F8
 112+ 98F8 21 B4 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 98FB 35               dec (hl)
 114+ 98FC 20 15            jr nz,2F
 115+ 98FE
 116+ 98FE              ; Fin de las repeticiones del último movimiento.
 117+ 98FE
 118+ 98FE 21 9C 89         ld hl,Ctrl_2
 119+ 9901 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9903
 121+ 9903 2A AC 89         ld hl,(Puntero_mov)
 122+ 9906 23               inc hl
 123+ 9907 23               inc hl
 124+ 9908 23               inc hl
 125+ 9909 22 AC 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 990C              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 990C 7E               ld a,(hl)
 128+ 990D 32 B5 89         ld (Cola_de_desplazamiento),a
 129+ 9910
 130+ 9910 C3 B8 98         jp Cola
 131+ 9913
 132+ 9913 CD 50 99     2 call Inicia_Puntero_mov
 133+ 9916
 134+ 9916 21 9C 89         ld hl,Ctrl_2
 135+ 9919 CB 96            res 2,(hl)
 136+ 991B
 137+ 991B C3 88 98         jp Movimiento
 138+ 991E
 139+ 991E              Siguiente_desplazamiento
 140+ 991E
 141+ 991E              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 991E              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 991E
 144+ 991E 21 9C 89         ld hl,Ctrl_2
 145+ 9921 CB 96            res 2,(hl)
 146+ 9923
 147+ 9923 2A AC 89         ld hl,(Puntero_mov)
 148+ 9926 23               inc hl
 149+ 9927 23               inc hl
 150+ 9928 22 AC 89         ld (Puntero_mov),hl
 151+ 992B
 152+ 992B 7E               ld a,(hl)
 153+ 992C A7               and a
 154+ 992D CC AF 99         call z,Incrementa_Puntero_indice_mov
 155+ 9930 CA F1 98         jp z,Reinicia_el_movimiento
 156+ 9933
 157+ 9933 C9               ret
 158+ 9934
 159+ 9934              ; Subrutinas -----------------------------------------
 160+ 9934              ; ---------- --------- --------- ---------- ----------
 161+ 9934              ;
 162+ 9934              ;   24/07/23
 163+ 9934              ;
 164+ 9934              ;   Fijamos_bucle
 165+ 9934              ;
 166+ 9934              ;
 167+ 9934
 168+ 9934              Fijamos_bucle
 169+ 9934
 170+ 9934 3A B0 89         ld a,(Incrementa_puntero)
 171+ 9937 3C               inc a
 172+ 9938 32 B1 89         ld (Incrementa_puntero_backup),a
 173+ 993B
 174+ 993B CD AF 99         call Incrementa_Puntero_indice_mov
 175+ 993E 2A AA 89         ld hl,(Puntero_indice_mov)
 176+ 9941 22 AE 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9944 C9               ret
 178+ 9945
 179+ 9945              ; ---------- --------- --------- ---------- ----------
 180+ 9945              ;
 181+ 9945              ;   07/7/23
 182+ 9945              ;
 183+ 9945              ;   Inicia_Repetimos_movimiento
 184+ 9945              ;
 185+ 9945              ;
 186+ 9945
 187+ 9945              Inicia_Repetimos_movimiento
 188+ 9945
 189+ 9945              ; Iniciamos (Repetimos_movimiento).
 190+ 9945
 191+ 9945 DD 2A AC 89      ld ix,(Puntero_mov)
 192+ 9949 DD 7E 02         ld a,(ix+2)
 193+ 994C 32 B4 89         ld (Repetimos_movimiento),a
 194+ 994F
 195+ 994F C9               ret
 196+ 9950
 197+ 9950              ; ---------- --------- --------- ---------- ----------
 198+ 9950              ;
 199+ 9950              ;   26/6/23
 200+ 9950              ;
 201+ 9950              ;   Inicia_Puntero_mov
 202+ 9950              ;
 203+ 9950              ;
 204+ 9950
 205+ 9950 2A AA 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9953 CD 4E 8C         call Extrae_address
 207+ 9956 22 AC 89         ld (Puntero_mov),hl
 208+ 9959 C9               ret
 209+ 995A
 210+ 995A              ; ---------- --------- --------- ---------- ----------
 211+ 995A              ;
 212+ 995A              ;   27/06/23
 213+ 995A              ;
 214+ 995A              ;   Aplica_movimiento.
 215+ 995A
 216+ 995A              Aplica_desplazamiento
 217+ 995A
 218+ 995A              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 995A
 220+ 995A 2A AC 89         ld hl, (Puntero_mov)
 221+ 995D
 222+ 995D 7E               ld a,(hl)
 223+ 995E E6 F0            and $f0
 224+ 9960 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9961
 226+ 9961 CB 7E            bit 7,(hl)
 227+ 9963 28 03            jr z,1F
 228+ 9965 CD 6F 95         call Mov_up
 229+ 9968 2A AC 89     1 ld hl, (Puntero_mov)
 230+ 996B CB 76            bit 6,(hl)
 231+ 996D 28 03            jr z,2F
 232+ 996F CD 36 95         call Mov_down
 233+ 9972
 234+ 9972              ; Se ha aplicado reinicio ???
 235+ 9972              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9972
 237+ 9972              ;    ld a,(Ctrl_3)
 238+ 9972              ;    bit 1,a
 239+ 9972              ;    ret nz
 240+ 9972
 241+ 9972 2A AC 89     2 ld hl, (Puntero_mov)
 242+ 9975 CB 6E            bit 5,(hl)
 243+ 9977 28 03            jr z,3F
 244+ 9979 CD D5 96         call Mov_left
 245+ 997C 2A AC 89     3 ld hl, (Puntero_mov)
 246+ 997F CB 66            bit 4,(hl)
 247+ 9981 C8               ret z
 248+ 9982 CD B2 95         call Mov_right
 249+ 9985 C9               ret
 250+ 9986
 251+ 9986              ; ---------- --------- --------- ---------- ----------
 252+ 9986              ;
 253+ 9986              ;   26/06/23
 254+ 9986              ;
 255+ 9986              ;   Ajusta_velocidad_desplazamiento.
 256+ 9986
 257+ 9986              Ajusta_velocidad_desplazamiento
 258+ 9986
 259+ 9986              ; 1er byte de la cadena de movimiento.
 260+ 9986              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9986
 262+ 9986 CD A4 99         call Extrae_nibble_alto
 263+ 9989
 264+ 9989 32 A0 89         ld (Vel_up),a
 265+ 998C 79               ld a,c
 266+ 998D E6 0F            and $0f
 267+ 998F 32 A1 89         ld (Vel_down),a
 268+ 9992
 269+ 9992              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9992              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9992
 272+ 9992 23               inc hl
 273+ 9993 CD A4 99         call Extrae_nibble_alto
 274+ 9996
 275+ 9996 32 9E 89         ld (Vel_left),a
 276+ 9999 79               ld a,c
 277+ 999A E6 0F            and $0f
 278+ 999C 32 9F 89         ld (Vel_right),a
 279+ 999F
 280+ 999F              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 999F
 282+ 999F 23               inc hl
 283+ 99A0 22 AC 89         ld (Puntero_mov),hl
 284+ 99A3 C9               ret
 285+ 99A4
 286+ 99A4 06 04        Extrae_nibble_alto ld b,4
 287+ 99A6 7E               ld a,(hl)
 288+ 99A7 4F               ld c,a
 289+ 99A8 E6 F0            and $f0
 290+ 99AA CB 3F        1 srl a
 291+ 99AC 10 FC            djnz 1B
 292+ 99AE C9               ret
 293+ 99AF
 294+ 99AF              ; ---------- --------- --------- ---------- ----------
 295+ 99AF              ;
 296+ 99AF              ;   5/7/23
 297+ 99AF              ;
 298+ 99AF              ;   Incrementa_Puntero_indice_mov
 299+ 99AF
 300+ 99AF              Incrementa_Puntero_indice_mov
 301+ 99AF
 302+ 99AF 21 B0 89         ld hl,Incrementa_puntero
 303+ 99B2 34               inc (hl)
 304+ 99B3
 305+ 99B3 2A AA 89         ld hl,(Puntero_indice_mov)
 306+ 99B6 01 02 00         ld bc,2
 307+ 99B9 A7               and a
 308+ 99BA 09               add hl,bc
 309+ 99BB 22 AA 89         ld (Puntero_indice_mov),hl
 310+ 99BE
 311+ 99BE 7E               ld a,(hl)
 312+ 99BF A7               and a
 313+ 99C0
 314+ 99C0              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99C0
 316+ 99C0              ;    jr z,$
 317+ 99C0
 318+ 99C0              ;! Reinicia el Patrón de movimiento.
 319+ 99C0
 320+ 99C0 CC C5 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99C3
 322+ 99C3 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99C4
 324+ 99C4 C9               ret
 325+ 99C5
 326+ 99C5              ; ---------- --------- --------- ---------- ----------
 327+ 99C5              ;
 328+ 99C5              ;   15/01/24
 329+ 99C5              ;
 330+ 99C5              ;   Inicializa_Puntero_indice_mov
 331+ 99C5
 332+ 99C5              Inicializa_Puntero_indice_mov_2
 333+ 99C5
 334+ 99C5              ; Existe etiqueta de bucle principal???
 335+ 99C5
 336+ 99C5 2A AE 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99C8 24               inc h
 338+ 99C9 25               dec h
 339+ 99CA 28 05            jr z,2F
 340+ 99CC
 341+ 99CC 22 AA 89         ld (Puntero_indice_mov),hl
 342+ 99CF 18 14            jr 3F
 343+ 99D1
 344+ 99D1              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99D1
 346+ 99D1 3A B0 89     2 ld a,(Incrementa_puntero)
 347+ 99D4 47               ld b,a
 348+ 99D5
 349+ 99D5 2A AA 89         ld hl,(Puntero_indice_mov)
 350+ 99D8 2B           1 dec hl
 351+ 99D9 2B               dec hl
 352+ 99DA 10 FC            djnz 1B
 353+ 99DC 22 AA 89         ld (Puntero_indice_mov),hl
 354+ 99DF
 355+ 99DF AF               xor a
 356+ 99E0 32 B0 89         ld (Incrementa_puntero),a
 357+ 99E3 18 06            jr 4F
 358+ 99E5
 359+ 99E5 3A B1 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99E8 32 B0 89         ld (Incrementa_puntero),a
 361+ 99EB C9           4 ret
 362+ 99EC
 363+ 99EC              ; ----------------------------------------------------------------------
 364+ 99EC              ;
 365+ 99EC              ;   30/01/24
 366+ 99EC              ;
 367+ 99EC              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99EC
 369+ 99EC 3A 7A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99EF CD AD AB         call Calcula_salto_en_BC
 371+ 99F2 21 A2 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99F5 A7               and a
 373+ 99F6 ED 4A            adc hl,bc
 374+ 99F8 C9               ret
 375+ 99F9
 376+ 99F9              ; ----------------------------------------------------------------------
 377+ 99F9              ;
 378+ 99F9              ;   30/01/24
 379+ 99F9              ;
 380+ 99F9              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 99F9              ;
 382+ 99F9              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 99F9
 384+ 99F9 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 99FA 23               inc hl
 386+ 99FB 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 99FC 69               ld l,c
 388+ 99FD 60               ld h,b
 389+ 99FE 22 95 89         ld (Contador_de_mov_masticados),hl
 390+ 9A01 C9               ret
 391+ 9A02
# file closed: Movimiento.asm
2011  9A02
2012  9A02
2013  9A02              ;	include "Disparo.asm"
2014  9A02
2015  9A02
2016  9A02              	SAVESNA "Pruebas.sna", START
2017  9A02
2018  9A02
2019  9A02
2020  9A02
# file closed: Banco_de_pruebas.asm
