# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 48 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 27 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 17 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 7E 47        Posicion_inicio defw $477e								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 02           Vel_left db 2 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 04           Vel_down db 4 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 25 96        Puntero_indice_mov defw Indice_mov_Escaloncitos_izquierda_abajo  ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7
 167  85D7
 168  85D7
 169  85D7
 170  85D7
 171  85D7
 172  85D7              ; Gestión de ENTIDADES.
 173  85D7
 174  85D7 00 00        Puntero_store_entidades defw 0
 175  85D9 00 00        Puntero_restore_entidades defw 0
 176  85DB 00 00        Indice_restore defw 0
 177  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 178  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 179  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 180  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 181  85DF              ;														; _ (Numero_de_malotes)="0".
 182  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 183  85E1              ;														; _variable para almacenar lo posición del puntero_
 184  85E1              ; 														; _de pila, SP.
 185  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 186  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 187  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 188  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 189  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 190  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 191  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 192  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 193  85E7
 194  85E7              ; Gestión de Disparos.
 195  85E7
 196  85E7 00           Numero_de_disparotes db 0
 197  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 198  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 199  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 200  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 201  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 202  85ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 203  85F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 204  85F0 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 205  85F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 206  85F3
 207  85F3
 208  85F3              ; Gestión de FRAMES.
 209  85F3
 210  85F3 00           Switch db 0
 211  85F4
 212  85F4              ; Variables de Raster y localización en pantalla.
 213  85F4
 214  85F4 00 FF        Temp_Raster defw $ff00
 215  85F6
 216  85F6              ; Rutina principal *************************************************************************************************************************************************************************
 217  85F6              ;
 218  85F6              ;	14/11/22
 219  85F6
 220  85F6 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 221  85F9
 222  85F9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 223  85FB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 224  85FD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 225  85FF F3           	DI
 226  8600
 227  8600 3E 07        	ld a,%00000111
 228  8602 CD 3B 92     	call Cls
 229  8605
 230  8605              ;	call Pinta_FILAS
 231  8605
 232  8605 CD 5C 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 233  8608
 234  8608 21 DD 85     	ld hl,Numero_de_entidades
 235  860B 46           	ld b,(hl)
 236  860C 04           	inc b
 237  860D 05           	dec b
 238  860E 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 239  8610
 240  8610              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 241  8610              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 242  8610              ;	Pintamos el resto de entidades:
 243  8610
 244  8610 CD 55 87     	call Inicia_punteros_de_entidades
 245  8613
 246  8613              ;	INICIA ENTIDADES!!!!!
 247  8613
 248  8613 C5           1 push bc  												; Guardo el contador de entidades.
 249  8614 CD AF 87      	call Inicia_Puntero_objeto
 250  8617 CD 8B 8C     	call Draw
 251  861A CD A0 7F     	call Guarda_foto_registros
 252  861D CD F7 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 253  8620 C1           	pop bc
 254  8621 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 255  8623
 256  8623              ; 	INICIA AMADEUS!!!!!
 257  8623
 258  8623 CD 38 88     3 call Restore_Amadeus
 259  8626 CD AF 87     	call Inicia_Puntero_objeto
 260  8629 CD 8B 8C     	call Draw
 261  862C CD A0 7F     	call Guarda_foto_registros
 262  862F CD 4A 88     	call Store_Amadeus
 263  8632
 264  8632              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 265  8632
 266  8632 CD 6B 87     	call Inicia_Puntero_Disparo_Entidades
 267  8635 CD 72 87     	call Inicia_Puntero_Disparo_Amadeus
 268  8638
 269  8638              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 270  8638
 271  8638 CD 55 87     	call Inicia_punteros_de_entidades
 272  863B CD 26 88     	call Restore_Primera_entidad
 273  863E
 274  863E 3A DD 85     	ld a,(Numero_de_entidades)
 275  8641 3C           	inc a
 276  8642 32 DE 85     	ld (Numero_de_malotes),a
 277  8645
 278  8645 FB           2 ei
 279  8646 18 FD        	jr 2B
 280  8648
 281  8648              ; -----------------------------------------------------------------------------------
 282  8648
 283  8648              Frame
 284  8648
 285  8648              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 286  8648              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 287  8648
 288  8648 3E 02            ld a,2
 289  864A D3 FE            out ($fe),a
 290  864C CD 8F 8F     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 291  864F CD C8 8F     	call Extrae_foto_disparos
 292  8652 3E 01            ld a,1
 293  8654 D3 FE            out ($fe),a
 294  8656
 295  8656              ; ----------------------------------------------------------------------
 296  8656
 297  8656              ;	Existe colisión?????
 298  8656
 299  8656 CD 6C 8C     	call Selector_de_impactos
 300  8659
 301  8659              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 302  8659              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 303  8659              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 304  8659
 305  8659 CD 55 87     5 call Inicia_punteros_de_entidades
 306  865C CD 26 88     	call Restore_Primera_entidad
 307  865F
 308  865F AF           	xor a
 309  8660 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 310  8663
 311  8663 CD FE 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 312  8666 21 00 70     	ld hl,Album_de_fotos
 313  8669 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 314  866C              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 315  866C 3A DD 85         ld a,(Numero_de_entidades)
 316  866F 47               ld b,a
 317  8670 A7           	and a
 318  8671 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 319  8673
 320  8673 C5           2 push bc
 321  8674 CD C0 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 322  8677
 323  8677 3A C9 85     	ld a,(Ctrl_0)
 324  867A CB 67        	bit 4,a
 325  867C 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 326  867E
 327  867E              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 328  867E              ; Las entidades sólo generan disparo cuando se mueven.
 329  867E              ; 16/02/23.
 330  867E              ; [[[
 331  867E CD 93 88     	call Detecta_disparo_entidad
 332  8681              ; ]]]
 333  8681 CD 1C 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 334  8684
 335  8684 21 C9 85     1 ld hl,Ctrl_0
 336  8687 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 337  8689 AF           	xor a
 338  868A 32 CA 85     	ld (Obj_dibujado),a
 339  868D
 340  868D CD F7 87     6 call Store_Restore_entidades
 341  8690 C1           	pop bc
 342  8691 10 E0        	djnz 2B
 343  8693
 344  8693              ; Tras la gestión de las entidades, ... AMADEUS.
 345  8693
 346  8693 CD 38 88     4 call Restore_Amadeus
 347  8696 CD ED 86     	call Mov_Amadeus
 348  8699
 349  8699 3A C9 85     	ld a,(Ctrl_0)
 350  869C CB 67        	bit 4,a
 351  869E 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 352  86A0
 353  86A0 CD 1C 87     	call Guarda_foto_entidad_a_pintar
 354  86A3
 355  86A3 21 C9 85     3 ld hl,Ctrl_0
 356  86A6 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 357  86A8 AF           	xor a
 358  86A9 32 CA 85     	ld (Obj_dibujado),a
 359  86AC CD 4A 88     	call Store_Amadeus
 360  86AF
 361  86AF CD 1C 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 362  86B2
 363  86B2              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 364  86B2
 365  86B2 CD 80 8C     	call Limpia_Coordenadas_X
 366  86B5 CD 79 87     	call Calcula_numero_de_malotes
 367  86B8 CD 91 87     	call Calcula_numero_de_disparotes
 368  86BB
 369  86BB 3E 04        	ld a,4
 370  86BD D3 FE        	out ($fe),a
 371  86BF C9           	ret
 372  86C0
 373  86C0              ; --------------------------------------------------------------------------------------------------------------
 374  86C0              ;
 375  86C0              ;	27/03/23
 376  86C0
 377  86C0              Mov_obj
 378  86C0
 379  86C0              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 380  86C0
 381  86C0 AF           	xor a
 382  86C1 32 CA 85     	ld (Obj_dibujado),a
 383  86C4 CD 26 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 384  86C7              ;														; Obj_dibujado="0".
 385  86C7              ; Movemos Entidades malignas.
 386  86C7
 387  86C7 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 388  86CA 24           	inc h                                               ; Salimos de la rutina.
 389  86CB 25           	dec h
 390  86CC C8           	ret z
 391  86CD
 392  86CD CD 29 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 393  86D0
 394  86D0 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 395  86D3 CB 67        	bit 4,a
 396  86D5 C8           	ret z
 397  86D6
 398  86D6              ; Ha habido desplazamiento de la entidad maligna.
 399  86D6              ; Ha llegado a zona de AMADEUS ???
 400  86D6
 401  86D6 3A A2 85     	ld a,(Coordenada_y)
 402  86D9 FE 14        	cp $14
 403  86DB D4 5C 8A     	call nc, Compara_coordenadas_X
 404  86DE
 405  86DE              ; ---------
 406  86DE
 407  86DE 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 408  86E0 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 409  86E3 CD 26 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 410  86E6 CD 3D 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 411  86E9 CD 0C 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 412  86EC C9           	ret													; _de la misma.
 413  86ED
 414  86ED              ; --------------------------------------------------------------------------------------------------------------
 415  86ED              ;
 416  86ED              ;	29/1/23
 417  86ED
 418  86ED              Mov_Amadeus
 419  86ED
 420  86ED AF           	xor a
 421  86EE 32 CA 85     	ld (Obj_dibujado),a
 422  86F1 CD 26 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 423  86F4              ;														; Obj_dibujado="0".
 424  86F4              ; Movemos Amadeus.
 425  86F4
 426  86F4 CD 70 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 427  86F7 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 428  86FA CB 67        	bit 4,a
 429  86FC C8           	ret z
 430  86FD
 431  86FD              ; ---------
 432  86FD
 433  86FD 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 434  86FF 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 435  8702 CD 26 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 436  8705 CD 3D 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 437  8708 CD 0C 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 438  870B C9           	ret													; _de la nave.
 439  870C
 440  870C              ; --------------------------------------------------------------------------------------------------------------
 441  870C              ;
 442  870C              ;	31/01/23
 443  870C              ;
 444  870C              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 445  870C
 446  870C              Guarda_foto_entidad_a_borrar
 447  870C
 448  870C CD 65 8F     	call Prepara_draw
 449  870F CD 9F 8E     	call calcula_CColumnass
 450  8712 CD D6 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 451  8715 CD 2B 8F     	call Define_rutina_de_impresion
 452  8718 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 453  871B C9           	ret
 454  871C
 455  871C              ; --------------------------------------------------------------------------------------------------------------
 456  871C              ;
 457  871C              ;	31/01/23
 458  871C              ;
 459  871C              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 460  871C              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 461  871C
 462  871C              Guarda_foto_entidad_a_pintar
 463  871C
 464  871C CD 49 87     	call Repone_pintar
 465  871F CD 8B 8C     	call Draw
 466  8722 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 467  8725 C9           	ret
 468  8726
 469  8726              ; --------------------------------------------------------------------------------------------------------------
 470  8726              ;
 471  8726              ;
 472  8726
 473  8726 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 474  8729 3A CA 85     	ld a,(Obj_dibujado)
 475  872C A7           	and a
 476  872D 28 05        	jr z,1F
 477  872F 11 BF 85     	ld de,Variables_de_pintado
 478  8732 18 03        	jr 2F
 479  8734 11 B5 85     1 ld de,Variables_de_borrado
 480  8737 01 08 00     2 ld bc,8
 481  873A ED B0        	ldir
 482  873C C9           	ret
 483  873D
 484  873D              ; --------------------------------------------------------------------------------------------------------------
 485  873D
 486  873D 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 487  8740 11 9B 85     	ld de,Filas
 488  8743 01 08 00     	ld bc,8
 489  8746 ED B0        	ldir
 490  8748 C9           	ret
 491  8749
 492  8749 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 493  874C 11 9B 85     	ld de,Filas
 494  874F 01 08 00     	ld bc,8
 495  8752 ED B0        	ldir
 496  8754 C9           	ret
 497  8755
 498  8755              ; *************************************************************************************************************************************************************
 499  8755              ;
 500  8755              ; 8/1/23
 501  8755              ;
 502  8755              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 503  8755              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 504  8755              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 505  8755
 506  8755              ; Destruye HL y DE !!!!!
 507  8755
 508  8755              Inicia_punteros_de_entidades
 509  8755
 510  8755 21 68 84     	ld hl,Indice_de_entidades
 511  8758 CD A9 87         call Extrae_address
 512  875B 22 D7 85         ld (Puntero_store_entidades),hl
 513  875E 21 6A 84     	ld hl,Indice_de_entidades+2
 514  8761 22 DB 85     	ld (Indice_restore),hl
 515  8764 CD A9 87     	call Extrae_address
 516  8767 22 D9 85     	ld (Puntero_restore_entidades),hl
 517  876A C9               ret
 518  876B
 519  876B              ; *************************************************************************************************************************************************************
 520  876B              ;
 521  876B              ; 8/1/23
 522  876B              ;
 523  876B              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 524  876B
 525  876B 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 526  876E 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 527  8771 C9           	ret
 528  8772 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 529  8775 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 530  8778 C9           	ret
 531  8779
 532  8779              ; -------------------------------------------------------------------------------------------------------------
 533  8779              ;
 534  8779              ; 28/2/23
 535  8779              ;
 536  8779
 537  8779              Calcula_numero_de_malotes
 538  8779
 539  8779 21 00 70     	ld hl,Album_de_fotos
 540  877C EB           	ex de,hl
 541  877D 2A E3 85     	ld hl,(Stack_snapshot)
 542  8780
 543  8780 06 00        	ld b,0
 544  8782 7D           	ld a,l
 545  8783 93           	sub e
 546  8784 28 07        	jr z,1F
 547  8786
 548  8786              ; Nº de malotes no es "0".
 549  8786
 550  8786 D6 06        2 sub 6
 551  8788 04           	inc b
 552  8789 A7           	and a
 553  878A 20 FA        	jr nz,2B
 554  878C 78           	ld a,b
 555  878D
 556  878D 32 DE 85     1 ld (Numero_de_malotes),a
 557  8790 C9           	ret
 558  8791
 559  8791              ; -------------------------------------------------------------------------------------------------------------
 560  8791              ;
 561  8791              ; 28/2/23
 562  8791              ;
 563  8791
 564  8791              Calcula_numero_de_disparotes
 565  8791
 566  8791 21 60 70     	ld hl,Album_de_fotos_disparos
 567  8794 EB           	ex de,hl
 568  8795 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 569  8798
 570  8798 06 00        	ld b,0
 571  879A 7D           	ld a,l
 572  879B 93           	sub e
 573  879C 28 07        	jr z,1F
 574  879E
 575  879E              ; Nº de malotes no es "0".
 576  879E
 577  879E D6 06        2 sub 6
 578  87A0 04           	inc b
 579  87A1 A7           	and a
 580  87A2 20 FA        	jr nz,2B
 581  87A4 78           	ld a,b
 582  87A5
 583  87A5 32 E7 85     1 ld (Numero_de_disparotes),a
 584  87A8 C9           	ret
 585  87A9              ; *************************************************************************************************************************************************************
 586  87A9              ;
 587  87A9              ; 20/10/22
 588  87A9              ;
 589  87A9              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 590  87A9              ;
 591  87A9              ; Destruye el puntero y DE !!!!!
 592  87A9
 593  87A9 5E           Extrae_address ld e,(hl)
 594  87AA 23           	inc hl
 595  87AB 56           	ld d,(hl)
 596  87AC 2B           	dec hl
 597  87AD EB           	ex de,hl
 598  87AE C9           	ret
 599  87AF
 600  87AF              ; *************************************************************************************************************************************************************
 601  87AF              ;
 602  87AF              ;	7/2/23
 603  87AF              ;
 604  87AF              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 605  87AF              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 606  87AF              ;
 607  87AF              ;   Destruye HL y BC !!!!!,
 608  87AF              ;
 609  87AF              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 610  87AF              ;					"0" ..... Izquierda.
 611  87AF
 612  87AF              Inicia_Puntero_objeto
 613  87AF
 614  87AF 3A AF 85     	ld a,(Cuad_objeto)
 615  87B2 E6 01        	and 1
 616  87B4 F5           	push af
 617  87B5 CC D3 87     	call z,Inicia_puntero_objeto_izq
 618  87B8 F1           	pop af
 619  87B9 28 2B        	jr z,1F
 620  87BB CD C0 87     	call Inicia_puntero_objeto_der
 621  87BE 18 26        	jr 1F
 622  87C0
 623  87C0              ; Arrancamos desde la parte izquierda de la pantalla.
 624  87C0              ; Iniciamos (Indice_Sprite_der).
 625  87C0
 626  87C0 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 627  87C3 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 628  87C6 CD A9 87     	call Extrae_address
 629  87C9 22 9F 85     	ld (Puntero_objeto),hl
 630  87CC
 631  87CC 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 632  87CF              ;	call Extrae_address
 633  87CF 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 634  87D2 C9           	ret
 635  87D3
 636  87D3              ; Arrancamos desde la parte derecha de la pantalla.
 637  87D3              ; Iniciamos (Indice_Sprite_izq).
 638  87D3
 639  87D3 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 640  87D6 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 641  87D9 CD A9 87     	call Extrae_address
 642  87DC 22 9F 85     	ld (Puntero_objeto),hl
 643  87DF
 644  87DF 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 645  87E2              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 646  87E2 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 647  87E5 C9           	ret
 648  87E6
 649  87E6              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 650  87E6
 651  87E6 21 38 83     1 ld hl,Amadeus
 652  87E9 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 653  87ED B7 ED 42     	sub hl,bc
 654  87F0 C0           	ret nz
 655  87F1 21 C9 85     	ld hl,Ctrl_0
 656  87F4 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 657  87F6 C9           	ret 												; _de nuestra nave en los extremos.
 658  87F7
 659  87F7              ; *************************************************************************************************************************************************************
 660  87F7              ;
 661  87F7              ;	8/1/23
 662  87F7              ;
 663  87F7              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 664  87F7              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 665  87F7
 666  87F7              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 667  87F7              ;	_de la 2ª y 3ª entidad respectivamente.
 668  87F7
 669  87F7              Store_Restore_entidades
 670  87F7
 671  87F7 E5           	push hl
 672  87F8 D5           	push de
 673  87F9 C5            	push bc
 674  87FA
 675  87FA              ;	STORE !!!!!
 676  87FA              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
 677  87FA
 678  87FA 21 9B 85     	ld hl,Filas
 679  87FD ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 680  8801 01 3B 00     	ld bc,59
 681  8804 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 682  8806
 683  8806              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 684  8806
 685  8806 2A D9 85     	ld hl,(Puntero_restore_entidades)
 686  8809 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 687  880C 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 688  880F 01 3B 00     	ld bc,59
 689  8812 ED B0        	ldir
 690  8814
 691  8814              ;	Incrementa RESTORE !!!!!
 692  8814
 693  8814 2A DB 85         ld hl,(Indice_restore)
 694  8817 23           	inc hl
 695  8818 23           	inc hl
 696  8819 22 DB 85     	ld (Indice_restore),hl
 697  881C CD A9 87         call Extrae_address
 698  881F 22 D9 85         ld (Puntero_restore_entidades),hl
 699  8822 C1           	pop bc
 700  8823 D1           	pop de
 701  8824 E1           	pop hl
 702  8825 C9           	ret
 703  8826
 704  8826              ; **************************************************************************************************
 705  8826              ;
 706  8826              ;	29/10/22
 707  8826              ;
 708  8826              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 709  8826
 710  8826 E5           Restore_Primera_entidad push hl
 711  8827 D5           	push de
 712  8828 C5            	push bc
 713  8829 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 714  882C 11 9B 85     	ld de,Filas
 715  882F 01 3B 00     	ld bc,59
 716  8832 ED B0        	ldir
 717  8834 C1           	pop bc
 718  8835 D1           	pop de
 719  8836 E1           	pop hl
 720  8837 C9           	ret
 721  8838
 722  8838              ; **************************************************************************************************
 723  8838              ;
 724  8838              ;	25/01/23
 725  8838              ;
 726  8838              ;	Restore_Amadeus
 727  8838              ;
 728  8838              ;	Cargamos en DRAW los parámetros de Amadeus.
 729  8838              ;
 730  8838
 731  8838 E5           Restore_Amadeus	push hl
 732  8839 D5           	push de
 733  883A C5            	push bc
 734  883B 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 735  883E 11 9B 85     	ld de,Filas
 736  8841 01 3B 00     	ld bc,59
 737  8844 ED B0        	ldir
 738  8846 C1           	pop bc
 739  8847 D1           	pop de
 740  8848 E1           	pop hl
 741  8849 C9           	ret
 742  884A
 743  884A              ; *************************************************************************************************************************************************************
 744  884A              ;
 745  884A              ;	29/01/23
 746  884A              ;
 747  884A              ;	Store_Amadeus
 748  884A              ;
 749  884A              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 750  884A              ;
 751  884A
 752  884A E5           Store_Amadeus push hl
 753  884B D5           	push de
 754  884C C5            	push bc
 755  884D 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 756  8850 11 74 84     	ld de,Amadeus_db
 757  8853 01 3B 00     	ld bc,59
 758  8856 ED B0        	ldir
 759  8858 C1           	pop bc
 760  8859 D1           	pop de
 761  885A E1           	pop hl
 762  885B C9           	ret
 763  885C
 764  885C              ; **************************************************************************************************
 765  885C
 766  885C              ; Teclado.
 767  885C
 768  885C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 769  885E DB FE        	in a,($fe)
 770  8860 E6 01        	and $01
 771  8862 28 02        	jr z,1f
 772  8864 18 F6        	jr Pulsa_ENTER
 773  8866 C9           1 ret
 774  8867
 775  8867              ; **************************************************************************************************
 776  8867              ;
 777  8867              ; Temporización.
 778  8867
 779  8867              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 780  8867              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 781  8867              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 782  8867              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 783  8867
 784  8867              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 785  8867              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 786  8867              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 787  8867
 788  8867              ; A partir de $4f61 no hace falta DELAY.
 789  8867
 790  8867              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 791  8867
 792  8867 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 793  886A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 794  886B 78           	LD A,B
 795  886C A7           	AND A
 796  886D 20 FB        	JR NZ,wait
 797  886F C9           	RET
 798  8870
 799  8870              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 800  8870              ;
 801  8870              ;	5/3/23
 802  8870              ;
 803  8870              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 804  8870
 805  8870              Movimiento_Amadeus
 806  8870
 807  8870              ; Disparo.
 808  8870
 809  8870 3E F7        	ld a,$f7												; "5" para disparar.
 810  8872 DB FE        	in a,($fe)
 811  8874 E6 10        	and $10
 812  8876 CC D0 88     	call z,Genera_disparo
 813  8879
 814  8879 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 815  887B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 816  887D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 817  887F CC C9 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
 818  8882 3E F7        	ld a,$f7
 819  8884 DB FE        	in a,($fe)
 820  8886 E6 01        	and $01
 821  8888 C8           	ret z
 822  8889
 823  8889 3E F7        	ld a,$f7
 824  888B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 825  888D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 826  888F CC AB 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 827  8892 C9           	ret
 828  8893
 829  8893              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 830  8893              ;
 831  8893              ;	Rutina provisional para que los malotes cagen balas.
 832  8893
 833  8893 3E 7F        Detecta_disparo_entidad ld a,$7f
 834  8895 DB FE        	in a,($fe)
 835  8897 E6 01        	and 1
 836  8899 C0           	ret nz
 837  889A CD D0 88     	call Genera_disparo
 838  889D C9           	ret
 839  889E
 840  889E              ; Pinta indicadores de FILAS. ------------------------------------------------------
 841  889E
 842  889E 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 843  88A1
 844  88A1              ; ----------
 845  88A1 06 20        	ld b,32
 846  88A3 E5           2 push hl
 847  88A4 C5           	push bc
 848  88A5              ; ----------
 849  88A5
 850  88A5 06 BF        	ld b,$bf
 851  88A7 36 80        1 ld (hl),%10000000
 852  88A9 CD 71 8F     	call NextScan
 853  88AC 10 F9        	djnz 1B
 854  88AE
 855  88AE              ; ----------
 856  88AE C1           	pop bc
 857  88AF E1           	pop hl
 858  88B0 2C           	inc l
 859  88B1 10 F0        	djnz 2B
 860  88B3              ; ----------
 861  88B3
 862  88B3 06 03        	ld b,3
 863  88B5 21 00 47         ld hl,$4700
 864  88B8 CD BE 88     3 call Bucle_1
 865  88BB 10 FB            djnz 3B
 866  88BD C9               ret
 867  88BE
 868  88BE C5           Bucle_1 push bc
 869  88BF E5                   push hl
 870  88C0 D1                   pop de
 871  88C1 13                   inc de
 872  88C2 01 FF 00             ld bc,255
 873  88C5 36 FF                ld (hl),255
 874  88C7 ED B0                ldir
 875  88C9 23                   inc hl
 876  88CA 3E 07                ld a,7
 877  88CC 84                   add a,h
 878  88CD 67                   ld h,a
 879  88CE C1                   pop bc
 880  88CF C9                   ret
 881  88D0
 882  88D0              ; ---------------------------------------------------------------
 883  88D0
 884  88D0              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 88D0              ; ******************************************************************************************************************************************************************************************
   2+ 88D0              ;
   3+ 88D0              ;   17/04/23
   4+ 88D0              ;
   5+ 88D0              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 88D0              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 88D0              ;
   8+ 88D0              ;
   9+ 88D0              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 88D0              ;
  11+ 88D0              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 88D0              ;               _ hacen las entidades hacia abajo.
  13+ 88D0              ;
  14+ 88D0              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 88D0              ;
  16+ 88D0              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 88D0              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 88D0              ;
  19+ 88D0              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 88D0              ;           _ la bala.
  21+ 88D0              ;
  22+ 88D0              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 88D0              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 88D0              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 88D0              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 88D0              ;           _ en el momento de generarse la bala)).
  27+ 88D0
  28+ 88D0              Genera_disparo
  29+ 88D0
  30+ 88D0              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 88D0              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 88D0              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 88D0              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 88D0              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 88D0              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 88D0              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 88D0
  38+ 88D0              ; Exclusiones:
  39+ 88D0
  40+ 88D0 3A D2 85         ld a,(Columnas)
  41+ 88D3 47               ld b,a
  42+ 88D4 3A 9C 85         ld a,(Columns)
  43+ 88D7 B8               cp b
  44+ 88D8 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 88D9
  46+ 88D9              ; ----- ----- -----
  47+ 88D9
  48+ 88D9 3A C9 85         ld a,(Ctrl_0)
  49+ 88DC CB 77            bit 6,a
  50+ 88DE 20 08            jr nz,16F
  51+ 88E0
  52+ 88E0 3A A2 85         ld a,(Coordenada_y)
  53+ 88E3 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 88E5 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 88E6 18 11            jr 14F
  56+ 88E8
  57+ 88E8              ; ----- ----- -----
  58+ 88E8
  59+ 88E8              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  60+ 88E8
  61+ 88E8 21 F2 83     16 ld hl,ON_Disparo_2A
  62+ 88EB CD A9 87         call Extrae_address
  63+ 88EE 24               inc h
  64+ 88EF 25               dec h
  65+ 88F0 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  66+ 88F2
  67+ 88F2 11 20 48         ld de,$4820                         ; Si el 1er disparo no ha llegado a este scanline de pantalla,_
  68+ 88F5 A7               and a                               ; _ salimos de la rutina, (no se autorizará un 2º disparo de Amadeus).
  69+ 88F6 ED 52            sbc hl,de
  70+ 88F8 D0               ret nc
  71+ 88F9
  72+ 88F9              ; ----- ----- -----
  73+ 88F9
  74+ 88F9 21 00 80     14 ld hl,Indice_disparo
  75+ 88FC 3A A3 85         ld a,(CTRL_DESPLZ)
  76+ 88FF 4F               ld c,a
  77+ 8900 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  78+ 8902              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  79+ 8902              ;                                            ""        ""       "f9", B="1"
  80+ 8902              ;                                            ""        ""       "fb", B="2"
  81+ 8902              ;                                            ""        ""       "fb", B="3"
  82+ 8902 A7               and a
  83+ 8903 28 10            jr z,1F
  84+ 8905 E6 01            and 1
  85+ 8907 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  86+ 8908
  87+ 8908 79               ld a,c
  88+ 8909 16 F9            ld d,$f9
  89+ 890B 23           2 inc hl
  90+ 890C 23               inc hl
  91+ 890D 04               inc b
  92+ 890E BA               cp d
  93+ 890F 28 04            jr z,1F
  94+ 8911 14               inc d
  95+ 8912 14               inc d
  96+ 8913 18 F6            jr 2B
  97+ 8915
  98+ 8915 CD A9 87     1 call Extrae_address
  99+ 8918 E5               push hl
 100+ 8919 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 101+ 891B DD 21 04 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 102+ 891F
 103+ 891F              ;	Se cumplen las condiciones necesarias para generar un disparo.
 104+ 891F              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 105+ 891F
 106+ 891F 3A AF 85     	ld a,(Cuad_objeto)
 107+ 8922 FE 02            cp 2
 108+ 8924 38 66            jr c,3F
 109+ 8926 28 64            jr z,3F
 110+ 8928
 111+ 8928              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 112+ 8928
 113+ 8928 E6 01            and 1
 114+ 892A 28 30            jr z,4F
 115+ 892C
 116+ 892C              ; 	Estamos en el 3er cuadrante de pantalla.
 117+ 892C              ; 	3er CUAD. ----- ----- ----- ----- -----
 118+ 892C              ;
 119+ 892C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 120+ 892C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 121+ 892C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 122+ 892C
 123+ 892C 2A 9D 85     	ld hl,(Posicion_actual)
 124+ 892F
 125+ 892F              ;   Amadeus o entidad ???.
 126+ 892F
 127+ 892F 3A C9 85         ld a,(Ctrl_0)
 128+ 8932 CB 77            bit 6,a
 129+ 8934 28 0A            jr z,8F
 130+ 8936
 131+ 8936              ; 	Dispara Amadeus.
 132+ 8936
 133+ 8936 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 134+ 8938 CD 80 8F         call PreviousScan
 135+ 893B CD 80 8F         call PreviousScan
 136+ 893E
 137+ 893E              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 138+ 893E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 139+ 893E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 140+ 893E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 141+ 893E
 142+ 893E 18 11            jr 10F
 143+ 8940
 144+ 8940              ; 	Dispara Entidad.
 145+ 8940
 146+ 8940 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 147+ 8943              ;                                                   ; Impacto B="$80", no hay impacto.
 148+ 8943
 149+ 8943              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 150+ 8943              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 151+ 8943
 152+ 8943 C5               push bc
 153+ 8944 06 10            ld b,16
 154+ 8946 CD 71 8F     9 call NextScan
 155+ 8949 10 FB            djnz 9B
 156+ 894B C1               pop bc
 157+ 894C CD B6 89         call Ajusta_disparo_parte_izquierda
 158+ 894F 18 06            jr 17F
 159+ 8951
 160+ 8951              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 161+ 8951              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 162+ 8951              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 163+ 8951              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 164+ 8951
 165+ 8951 CD B6 89     10 call Ajusta_disparo_parte_izquierda
 166+ 8954 CD 2B 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 167+ 8957              ;                                                      ; _al generar el disparo.
 168+ 8957
 169+ 8957              ; 	LLegados a este punto tendremos:
 170+ 8957              ;
 171+ 8957              ;       Puntero_objeto_disparo en IY.
 172+ 8957              ;       Rutinas_de_impresion en IX.
 173+ 8957              ;       Puntero_de_impresion en HL.
 174+ 8957              ;       Impacto/Dirección en BC.
 175+ 8957
 176+ 8957 CD BE 89     17 call Almacena_disparo
 177+ 895A 18 52            jr 6F                                             ; RET.
 178+ 895C
 179+ 895C              ; 	Estamos en el 4º cuadrante de pantalla.
 180+ 895C              ; 	4º CUAD. ----- ----- ----- ----- -----
 181+ 895C              ;
 182+ 895C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 183+ 895C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 184+ 895C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 185+ 895C
 186+ 895C 2A 9D 85     4 ld hl,(Posicion_actual)
 187+ 895F
 188+ 895F              ;   Amadeus o entidad ???.
 189+ 895F
 190+ 895F 3A C9 85         ld a,(Ctrl_0)
 191+ 8962 CB 77            bit 6,a
 192+ 8964 28 0A            jr z,11F
 193+ 8966
 194+ 8966              ; 	Dispara Amadeus.
 195+ 8966
 196+ 8966 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 197+ 8968 CD 80 8F         call PreviousScan
 198+ 896B CD 80 8F         call PreviousScan
 199+ 896E
 200+ 896E              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 201+ 896E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 202+ 896E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 203+ 896E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 204+ 896E
 205+ 896E 18 11            jr 13F
 206+ 8970
 207+ 8970              ; 	Dispara Entidad.
 208+ 8970
 209+ 8970 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 210+ 8973              ;                                                     ; Impacto B="$80", no hay impacto.
 211+ 8973
 212+ 8973              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 213+ 8973              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 214+ 8973
 215+ 8973 C5               push bc
 216+ 8974 06 10            ld b,16
 217+ 8976 CD 71 8F     12 call NextScan
 218+ 8979 10 FB            djnz 12B
 219+ 897B C1               pop bc
 220+ 897C
 221+ 897C CD AF 89         call Ajusta_disparo_parte_derecha
 222+ 897F 18 06            jr 18F
 223+ 8981
 224+ 8981              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 225+ 8981              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 226+ 8981              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 227+ 8981              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 228+ 8981
 229+ 8981 CD AF 89     13 call Ajusta_disparo_parte_derecha
 230+ 8984 CD 2B 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 231+ 8987              ;                                                       ; _al generar el disparo.
 232+ 8987
 233+ 8987              ; LLegados a este punto tendremos:
 234+ 8987              ;
 235+ 8987              ;       Puntero_objeto_disparo en IY.
 236+ 8987              ;       Rutinas_de_impresion en IX.
 237+ 8987              ;       Puntero_de_impresion en HL.
 238+ 8987              ;       Impacto/Dirección en BC.
 239+ 8987
 240+ 8987 CD BE 89     18 call Almacena_disparo
 241+ 898A 18 22            jr 6F                                               ; RET.
 242+ 898C
 243+ 898C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 244+ 898C
 245+ 898C 28 11        3 jr z,5F
 246+ 898E
 247+ 898E              ; 	1er CUAD. ----- ----- ----- ----- -----
 248+ 898E              ;
 249+ 898E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 250+ 898E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 251+ 898E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 252+ 898E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 253+ 898E
 254+ 898E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 255+ 898E              ;	   ""        ""       "f9", B="1"
 256+ 898E              ;	   ""        ""       "fb", B="2"
 257+ 898E              ; 	   ""        ""       "fb", B="3"
 258+ 898E
 259+ 898E 2A 9D 85     	ld hl,(Posicion_actual)
 260+ 8991 CD 71 8F     	call NextScan
 261+ 8994
 262+ 8994              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 263+ 8994              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 264+ 8994              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 265+ 8994              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 266+ 8994
 267+ 8994 CD B6 89         call Ajusta_disparo_parte_izquierda
 268+ 8997
 269+ 8997              ; 	No se produce impacto. B="$80"
 270+ 8997              ; 	Dirección del proyectil hacia abajo. C="$80"
 271+ 8997
 272+ 8997 01 80 80         ld bc,$8080
 273+ 899A
 274+ 899A              ; 	LLegados a este punto tendremos:
 275+ 899A              ;
 276+ 899A              ;       Puntero_objeto_disparo en IY.
 277+ 899A              ;       Rutinas_de_impresion en IX.
 278+ 899A              ;       Puntero_de_impresion en HL.
 279+ 899A              ;       Impacto/Dirección en BC.
 280+ 899A
 281+ 899A CD BE 89         call Almacena_disparo
 282+ 899D 18 0F            jr 6F                                           ; RET.
 283+ 899F
 284+ 899F              ; 	Estamos en el 2º cuadrante de pantalla.
 285+ 899F              ; 	2º CUAD. ----- ----- ----- ----- -----
 286+ 899F              ;
 287+ 899F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 288+ 899F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 289+ 899F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 290+ 899F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 291+ 899F
 292+ 899F 2A 9D 85     5 ld hl,(Posicion_actual)
 293+ 89A2 CD 71 8F     	call NextScan
 294+ 89A5
 295+ 89A5              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 296+ 89A5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 297+ 89A5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 298+ 89A5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 299+ 89A5
 300+ 89A5 CD AF 89         call Ajusta_disparo_parte_derecha
 301+ 89A8
 302+ 89A8              ; 	No se produce impacto. B="$80"
 303+ 89A8              ; 	Dirección del proyectil hacia abajo. C="80"
 304+ 89A8
 305+ 89A8 01 80 80     15 ld bc,$8080
 306+ 89AB
 307+ 89AB              ; 	LLegados a este punto tendremos:
 308+ 89AB              ;
 309+ 89AB              ;       Puntero_objeto_disparo en IY.
 310+ 89AB              ;       Rutinas_de_impresion en IX.
 311+ 89AB              ;       Puntero_de_impresion en HL.
 312+ 89AB              ;       Impacto/Dirección en BC.
 313+ 89AB
 314+ 89AB CD BE 89         call Almacena_disparo
 315+ 89AE
 316+ 89AE C9           6 ret
 317+ 89AF
 318+ 89AF              ; ----------------------------------------------------------------
 319+ 89AF              ;
 320+ 89AF              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 321+ 89AF              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 322+ 89AF              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 323+ 89AF
 324+ 89AF 78           Ajusta_disparo_parte_derecha ld a,b
 325+ 89B0 FE 02            cp 2
 326+ 89B2 38 01            jr c,1F
 327+ 89B4 23               inc hl
 328+ 89B5 C9           1 ret
 329+ 89B6
 330+ 89B6 78           Ajusta_disparo_parte_izquierda ld a,b
 331+ 89B7 FE 01        	cp 1
 332+ 89B9 20 01        	jr nz,1F
 333+ 89BB 2B           	dec hl
 334+ 89BC 2B           1 dec hl
 335+ 89BD C9               ret
 336+ 89BE
 337+ 89BE              ; ----------------------------------------------------------------
 338+ 89BE              ;
 339+ 89BE              ;   25/02/23
 340+ 89BE              ;
 341+ 89BE              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 342+ 89BE              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 343+ 89BE              ;
 344+ 89BE              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 345+ 89BE              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 346+ 89BE
 347+ 89BE              Almacena_disparo
 348+ 89BE
 349+ 89BE E5               push hl  										; HL contiene el puntero de impresión.
 350+ 89BF F1               pop af
 351+ 89C0 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 352+ 89C1
 353+ 89C1 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 354+ 89C2 E6 01            and 1
 355+ 89C4 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 356+ 89C6              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 357+ 89C6              ; 	Dispara AMADEUS.
 358+ 89C6
 359+ 89C6              ;	Comprobamos que a Amadeus aún le quedan disparos.
 360+ 89C6              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 361+ 89C6              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 362+ 89C6              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 363+ 89C6
 364+ 89C6 C5               push bc
 365+ 89C7 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 366+ 89CA 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 367+ 89CD A7               and a
 368+ 89CE ED 42            sbc hl,bc
 369+ 89D0 CC 72 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 370+ 89D3 C1               pop bc
 371+ 89D4 28 54            jr z,4F
 372+ 89D6
 373+ 89D6 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 374+ 89D9 23               inc hl
 375+ 89DA 23               inc hl
 376+ 89DB 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 377+ 89DE              ;                                                   ; _ Disparo_(+1).
 378+ 89DE 18 18            jr 2F
 379+ 89E0
 380+ 89E0              ; Dispara una entidad.
 381+ 89E0
 382+ 89E0 C5           1 push bc
 383+ 89E1 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 384+ 89E4 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 385+ 89E7 A7               and a
 386+ 89E8 ED 42            sbc hl,bc
 387+ 89EA CC 6B 87         call z,Inicia_Puntero_Disparo_Entidades
 388+ 89ED C1               pop bc
 389+ 89EE 28 3A            jr z,4F
 390+ 89F0
 391+ 89F0 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 392+ 89F3 23               inc hl
 393+ 89F4 23               inc hl
 394+ 89F5 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 395+ 89F8              ;                                                   ; _ Disparo_(+1).
 396+ 89F8 CD A9 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 397+ 89FB              ;                                                   ; _ los 8 bytes que definen el disparo:
 398+ 89FB              ;
 399+ 89FB              ;                                                     Puntero_objeto_disparo en IY.
 400+ 89FB              ;                                                     Rutinas_de_impresion en IX.
 401+ 89FB              ;                                                     Puntero_de_impresion en HL.
 402+ 89FB              ;                                                     Impacto/Dirección en BC.
 403+ 89FB
 404+ 89FB 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 405+ 89FC 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 406+ 89FD 23               inc hl                                          ; _ al siguiente.
 407+ 89FE A7               and a
 408+ 89FF 20 C0            jr nz,3B
 409+ 8A01
 410+ 8A01 08               ex af,af
 411+ 8A02 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 412+ 8A06 F9               ld sp,hl
 413+ 8A07
 414+ 8A07 DD E5            push ix                                         ; Rutina de impresión.
 415+ 8A09 F5               push af                                         ; Puntero de impresión.
 416+ 8A0A FD E5            push iy                                         ; Puntero objeto.
 417+ 8A0C C5               push bc                                         ; Control.
 418+ 8A0D
 419+ 8A0D ED 7B DF 85      ld sp,(Stack)
 420+ 8A11
 421+ 8A11              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 422+ 8A11
 423+ 8A11 21 D6 85     	ld hl,Ctrl_1
 424+ 8A14 CB C6        	set 0,(hl)
 425+ 8A16
 426+ 8A16 DD E5        	push ix
 427+ 8A18 E1               pop hl
 428+ 8A19 F5               push af
 429+ 8A1A DD E1            pop ix
 430+ 8A1C
 431+ 8A1C CD A0 7F     	call Guarda_foto_registros
 432+ 8A1F
 433+ 8A1F 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 434+ 8A22 CB 86        	res 0,(hl)
 435+ 8A24
 436+ 8A24              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 437+ 8A24              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 438+ 8A24
 439+ 8A24 CD 72 87         call Inicia_Puntero_Disparo_Amadeus
 440+ 8A27 CD 6B 87         call Inicia_Puntero_Disparo_Entidades
 441+ 8A2A
 442+ 8A2A C9           4 ret
 443+ 8A2B
 444+ 8A2B              ; ----------------------------------------------------------------
 445+ 8A2B              ;
 446+ 8A2B              ;   4/3/23
 447+ 8A2B              ;
 448+ 8A2B              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 449+ 8A2B              ;   _ al generarse el disparo.
 450+ 8A2B              ;
 451+ 8A2B              ;       "$80" ..... No se produce colisión.
 452+ 8A2B              ;       "$81" ..... Se produce colisión.
 453+ 8A2B
 454+ 8A2B              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 455+ 8A2B              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 456+ 8A2B
 457+ 8A2B
 458+ 8A2B FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 459+ 8A2D E5               push hl                                        ; Puntero de impresión.
 460+ 8A2E 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 461+ 8A30 CD 4C 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 462+ 8A33
 463+ 8A33 7B               ld a,e
 464+ 8A34 E6 01            and 1
 465+ 8A36 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 466+ 8A38
 467+ 8A38 E1               pop hl
 468+ 8A39 E5               push hl
 469+ 8A3A CD 71 8F         call NextScan
 470+ 8A3D
 471+ 8A3D 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 472+ 8A3E FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 473+ 8A40 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 474+ 8A42              ;                                                  ; _ 2º scanline si esto es así.
 475+ 8A42 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 476+ 8A44 CD 4C 8A         call Bucle_2
 477+ 8A47
 478+ 8A47 43           2 ld b,e
 479+ 8A48 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 480+ 8A49 FD E1            pop iy
 481+ 8A4B C9               ret
 482+ 8A4C
 483+ 8A4C               ; ---------- ----------
 484+ 8A4C
 485+ 8A4C 06 02        Bucle_2 ld b,2
 486+ 8A4E FD 7E 00     2 ld a,(iy)
 487+ 8A51 A6               and (hl)
 488+ 8A52 28 02            jr z,1F
 489+ 8A54 1E 81            ld e,$81
 490+ 8A56 23           1 inc hl
 491+ 8A57 FD 23            inc iy
 492+ 8A59 10 F3            djnz 2B
 493+ 8A5B C9               ret
 494+ 8A5C
 495+ 8A5C              ; -------------------------------------------------------------------------------------------------------------
 496+ 8A5C              ;
 497+ 8A5C              ;   11/04/23
 498+ 8A5C              ;
 499+ 8A5C              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 500+ 8A5C              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 501+ 8A5C              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 502+ 8A5C              ;
 503+ 8A5C              ;   MODIFICA: HL,DE,BC,A y AF´.
 504+ 8A5C
 505+ 8A5C              Compara_coordenadas_X
 506+ 8A5C
 507+ 8A5C              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 508+ 8A5C
 509+ 8A5C              ; Preparamos registros:
 510+ 8A5C
 511+ 8A5C 21 A1 85         ld hl,Filas+6
 512+ 8A5F 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 513+ 8A60 23               inc hl
 514+ 8A61 23               inc hl
 515+ 8A62 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 516+ 8A63 43               ld b,e
 517+ 8A64 21 AF 85         ld hl,Filas+20
 518+ 8A67 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 519+ 8A68 21 F0 85         ld hl,Coordenadas_X_Entidad
 520+ 8A6B CD 59 8C         call Guarda_coordenadas_X
 521+ 8A6E
 522+ 8A6E              ; Preparamos registros:
 523+ 8A6E
 524+ 8A6E 21 7A 84         ld hl,Amadeus_db+6
 525+ 8A71 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 526+ 8A72 23               inc hl
 527+ 8A73 23               inc hl
 528+ 8A74 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 529+ 8A75 7B               ld a,e
 530+ 8A76 08               ex af,af'
 531+ 8A77 21 88 84         ld hl,Amadeus_db+20
 532+ 8A7A 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 533+ 8A7B 21 ED 85         ld hl,Coordenadas_X_Amadeus
 534+ 8A7E CD 59 8C         call Guarda_coordenadas_X
 535+ 8A81
 536+ 8A81              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 537+ 8A81              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 538+ 8A81
 539+ 8A81 04               inc b
 540+ 8A82 05               dec b
 541+ 8A83 28 04            jr z,1F
 542+ 8A85 06 03            ld b,3
 543+ 8A87 18 02            jr 2F
 544+ 8A89 06 02        1 ld b,2
 545+ 8A8B 08           2 ex af,af'
 546+ 8A8C 3C               inc a
 547+ 8A8D 3D               dec a
 548+ 8A8E 28 04            jr z,5F
 549+ 8A90 0E 03            ld c,3
 550+ 8A92 18 02            jr 6F
 551+ 8A94 0E 02        5 ld c,2
 552+ 8A96 79           6 ld a,c
 553+ 8A97 08               ex af,af'
 554+ 8A98 11 F0 85         ld de,Coordenadas_X_Entidad
 555+ 8A9B 1A           4 ld a,(de)
 556+ 8A9C 21 ED 85         ld hl,Coordenadas_X_Amadeus
 557+ 8A9F BE           3 cp (hl)
 558+ 8AA0 28 0B            jr z,7F
 559+ 8AA2 23               inc hl
 560+ 8AA3 0D               dec c
 561+ 8AA4 20 F9            jr nz,3B
 562+ 8AA6 13               inc de
 563+ 8AA7 08               ex af,af'
 564+ 8AA8 4F               ld c,a
 565+ 8AA9 08               ex af,af'
 566+ 8AAA 10 EF            djnz 4B
 567+ 8AAC C9           8 ret
 568+ 8AAD 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 569+ 8AAF 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 570+ 8AB2              ;                                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 571+ 8AB2
 572+ 8AB2
 573+ 8AB2              ; !!!!! Necesito guardar la dirección donde se van a guardar los datos de esta entidad !!
 574+ 8AB2
 575+ 8AB2
 576+ 8AB2 21 EC 85         ld hl,Impacto2
 577+ 8AB5 CB D6            set 2,(hl)
 578+ 8AB7 18 F3            jr 8B
 579+ 8AB9
 580+ 8AB9              ; -----------------------------------------------------------------------
 581+ 8AB9              ;
 582+ 8AB9              ;   17/04/23
 583+ 8AB9              ;
 584+ 8AB9
 585+ 8AB9              Detecta_colision_nave_entidad
 586+ 8AB9
 587+ 8AB9              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 588+ 8AB9
 589+ 8AB9 2A 9D 85         ld hl,(Posicion_actual)
 590+ 8ABC CD D6 8E         call Calcula_puntero_de_impresion
 591+ 8ABF
 592+ 8ABF              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 593+ 8ABF              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 594+ 8ABF
 595+ 8ABF DD E5            push ix
 596+ 8AC1 E1               pop hl
 597+ 8AC2 E5               push hl
 598+ 8AC3
 599+ 8AC3              ; ----- ----- -----
 600+ 8AC3 1E 00            ld e,0                                         ; Indica impacto.
 601+ 8AC5 06 0A            ld b,10
 602+ 8AC7 CD EB 8A     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 603+ 8ACA 7B               ld a,e
 604+ 8ACB FE 05            cp 5
 605+ 8ACD 38 0C            jr c,3F
 606+ 8ACF
 607+ 8ACF 21 B4 85         ld hl,Impacto
 608+ 8AD2 36 01            ld (hl),1
 609+ 8AD4 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8AD7 CB 96            res 2,(hl)                                     ; _  colocamos a "1" el .db (Impacto) de Amadeus.
 611+ 8AD9
 612+ 8AD9 18 0E            jr 1F
 613+ 8ADB
 614+ 8ADB E1           3 pop hl
 615+ 8ADC CD 71 8F         call NextScan
 616+ 8ADF E5               push hl
 617+ 8AE0 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 618+ 8AE1 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 619+ 8AE3 28 04            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 620+ 8AE5 30 02            jr nc,1F
 621+ 8AE7              ;                                                  ; _ 2º scanline si esto es así.
 622+ 8AE7 10 DE            djnz 2B
 623+ 8AE9
 624+ 8AE9              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 625+ 8AE9
 626+ 8AE9 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 627+ 8AEA C9               ret
 628+ 8AEB
 629+ 8AEB               ; ---------- ----------
 630+ 8AEB
 631+ 8AEB C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 632+ 8AEC 3A 9C 85         ld a,(Columns)
 633+ 8AEF 47               ld b,a
 634+ 8AF0 FD 7E 00     2 ld a,(iy)
 635+ 8AF3 BE               cp (hl)
 636+ 8AF4 28 01            jr z,1F
 637+ 8AF6
 638+ 8AF6 1C               inc e
 639+ 8AF7
 640+ 8AF7 23           1 inc hl
 641+ 8AF8 FD 23            inc iy
 642+ 8AFA 10 F4            djnz 2B
 643+ 8AFC C1               pop bc
 644+ 8AFD C9               ret
 645+ 8AFE
 646+ 8AFE              ; -------------------------------------------------------------------------------------------------------------
 647+ 8AFE              ;
 648+ 8AFE              ;   13/03/23
 649+ 8AFE              ;
 650+ 8AFE              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 651+ 8AFE              ;
 652+ 8AFE              ;   DESTRUYE: HL,BC,DE y A.
 653+ 8AFE
 654+ 8AFE 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 655+ 8B01 7E               ld a,(hl)
 656+ 8B02 A7               and a
 657+ 8B03 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 658+ 8B04
 659+ 8B04 44               ld b,h
 660+ 8B05 4D               ld c,l
 661+ 8B06 2A E5 85         ld hl,(Stack_snapshot_disparos)
 662+ 8B09 E5               push hl
 663+ 8B0A A7               and a
 664+ 8B0B ED 42            sbc hl,bc
 665+ 8B0D E5               push hl
 666+ 8B0E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 667+ 8B0F
 668+ 8B0F E1               pop hl
 669+ 8B10 54               ld d,h
 670+ 8B11 5D               ld e,l
 671+ 8B12 1B               dec de
 672+ 8B13 ED B8            lddr                                                ; Limpiamos.
 673+ 8B15
 674+ 8B15 21 60 70         ld hl,Album_de_fotos_disparos
 675+ 8B18 22 E5 85         ld (Stack_snapshot_disparos),hl
 676+ 8B1B
 677+ 8B1B C9               ret
 678+ 8B1C
 679+ 8B1C              ; -------------------------------------------------------------------------------------------------------------
 680+ 8B1C              ;
 681+ 8B1C              ;   28/03/23
 682+ 8B1C              ;
 683+ 8B1C
 684+ 8B1C 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 685+ 8B1F 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 686+ 8B22
 687+ 8B22 CD A9 87     2 call Extrae_address
 688+ 8B25 7E               ld a,(hl)
 689+ 8B26 A7               and a
 690+ 8B27 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 691+ 8B29
 692+ 8B29              ; ----- ----- ----- ----- ----- -----
 693+ 8B29
 694+ 8B29 C5               push bc
 695+ 8B2A CD D4 8B         call foto_disparo_a_borrar
 696+ 8B2D
 697+ 8B2D              ; Existe colisión con este disparo???
 698+ 8B2D
 699+ 8B2D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 700+ 8B2E 7E               ld a,(hl)
 701+ 8B2F 2B               dec hl
 702+ 8B30 E6 01            and 1
 703+ 8B32 28 0C            jr z,9F
 704+ 8B34
 705+ 8B34              ; Elimino el disparo de la base de datos.
 706+ 8B34
 707+ 8B34 E5               push hl
 708+ 8B35 CD 4E 8C         call Elimina_disparo_de_base_de_datos
 709+ 8B38 21 EC 85         ld hl,Impacto2
 710+ 8B3B CB C6            set 0,(hl)
 711+ 8B3D E1               pop hl                                               ; Indicamos que se ha producido Impacto en una entidad.
 712+ 8B3E 18 06            jr 11F
 713+ 8B40
 714+ 8B40 CD FD 8B     9 call Mueve_disparo
 715+ 8B43 CD D4 8B         call foto_disparo_a_borrar
 716+ 8B46
 717+ 8B46 C1           11 pop bc
 718+ 8B47 18 04            jr 7F
 719+ 8B49
 720+ 8B49              ; ----- ----- ----- ----- ----- -----
 721+ 8B49
 722+ 8B49 ED 42        1 sbc hl,bc
 723+ 8B4B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 724+ 8B4D
 725+ 8B4D 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 726+ 8B50 23               inc hl
 727+ 8B51 23               inc hl
 728+ 8B52 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 729+ 8B55 18 CB            jr 2B
 730+ 8B57
 731+ 8B57 CD 72 87     3 call Inicia_Puntero_Disparo_Amadeus
 732+ 8B5A 01 66 84         ld bc,Disparo_11
 733+ 8B5D 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 734+ 8B60
 735+ 8B60 CD A9 87     5 call Extrae_address
 736+ 8B63 7E               ld a,(hl)
 737+ 8B64 A7               and a
 738+ 8B65 28 5B            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 739+ 8B67
 740+ 8B67              ; ----- ----- ----- ----- ----- -----
 741+ 8B67
 742+ 8B67 C5               push bc
 743+ 8B68 CD D4 8B         call foto_disparo_a_borrar
 744+ 8B6B
 745+ 8B6B              ; Existe colisión con este disparo???
 746+ 8B6B
 747+ 8B6B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 748+ 8B6C 7E               ld a,(hl)
 749+ 8B6D 2B               dec hl
 750+ 8B6E E6 01            and 1
 751+ 8B70 28 47            jr z,10F
 752+ 8B72
 753+ 8B72              ; La colisión se produce con Amadeus???
 754+ 8B72              ; Amadeus siempre tiene (Coordenada_y)="$16".
 755+ 8B72
 756+ 8B72 E5               push hl
 757+ 8B73
 758+ 8B73 06 04            ld b,4
 759+ 8B75 23           16 inc hl
 760+ 8B76 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 761+ 8B78 CD A9 87         call Extrae_address
 762+ 8B7B CD 88 95         call Genera_coordenadas_disparo
 763+ 8B7E
 764+ 8B7E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 765+ 8B7F FE 16            cp $16
 766+ 8B81 38 24            jr c,15F
 767+ 8B83
 768+ 8B83              ; (Colisiones en filas 16 y 17).
 769+ 8B83
 770+ 8B83 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 771+ 8B84
 772+ 8B84              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 773+ 8B84
 774+ 8B84 21 7A 84         ld hl,Amadeus_db+6
 775+ 8B87 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 776+ 8B88 23               inc hl
 777+ 8B89 23               inc hl
 778+ 8B8A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 779+ 8B8B 21 88 84         ld hl,Amadeus_db+20
 780+ 8B8E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 781+ 8B8F 21 ED 85         ld hl,Coordenadas_X_Amadeus
 782+ 8B92 CD 59 8C         call Guarda_coordenadas_X
 783+ 8B95
 784+ 8B95 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 785+ 8B96
 786+ 8B96              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 787+ 8B96
 788+ 8B96 06 03            ld b,3
 789+ 8B98 21 ED 85         ld hl,Coordenadas_X_Amadeus
 790+ 8B9B 7E           18 ld a,(hl)
 791+ 8B9C BA               cp d
 792+ 8B9D 20 05            jr nz,17F
 793+ 8B9F
 794+ 8B9F              ; Colisión Amadeus !!!!!!!!!!
 795+ 8B9F
 796+ 8B9F 18 FE            jr $
 797+ 8BA1
 798+ 8BA1 E1               pop hl
 799+ 8BA2 18 09            jr 14F
 800+ 8BA4
 801+ 8BA4 23           17 inc hl
 802+ 8BA5 10 F4            djnz 18B
 803+ 8BA7
 804+ 8BA7              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 805+ 8BA7              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 806+ 8BA7
 807+ 8BA7 E1           15 pop hl
 808+ 8BA8 23               inc hl
 809+ 8BA9 35               dec (hl)
 810+ 8BAA 2B               dec hl
 811+ 8BAB 18 0C            jr 10F
 812+ 8BAD
 813+ 8BAD              ; -----------------------debug
 814+ 8BAD
 815+ 8BAD              ; Elimino el disparo de la base de datos.
 816+ 8BAD
 817+ 8BAD E5           14 push hl
 818+ 8BAE CD 4E 8C         call Elimina_disparo_de_base_de_datos
 819+ 8BB1 21 EC 85         ld hl,Impacto2
 820+ 8BB4 CB CE            set 1,(hl)
 821+ 8BB6 E1               pop hl
 822+ 8BB7 18 06            jr 12F
 823+ 8BB9
 824+ 8BB9 CD FD 8B     10 call Mueve_disparo
 825+ 8BBC CD D4 8B         call foto_disparo_a_borrar
 826+ 8BBF C1           12 pop bc
 827+ 8BC0
 828+ 8BC0 18 04            jr 8F
 829+ 8BC2
 830+ 8BC2              ; ----- ----- ----- ----- ----- -----
 831+ 8BC2
 832+ 8BC2 ED 42        4 sbc hl,bc
 833+ 8BC4 28 0A            jr z,6F
 834+ 8BC6
 835+ 8BC6 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 836+ 8BC9 23               inc hl
 837+ 8BCA 23               inc hl
 838+ 8BCB 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 839+ 8BCE 18 90            jr 5B
 840+ 8BD0
 841+ 8BD0 CD 6B 87     6 call Inicia_Puntero_Disparo_Entidades
 842+ 8BD3 C9               ret
 843+ 8BD4
 844+ 8BD4              ; ------------------------------------------------------------------
 845+ 8BD4
 846+ 8BD4              foto_disparo_a_borrar
 847+ 8BD4
 848+ 8BD4 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 849+ 8BD5 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 850+ 8BD6 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 851+ 8BD7
 852+ 8BD7 E5               push hl
 853+ 8BD8 23               inc hl
 854+ 8BD9 23               inc hl
 855+ 8BDA ED 73 DF 85      ld (Stack),sp
 856+ 8BDE F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 857+ 8BDF FD E1            pop iy
 858+ 8BE1 DD E1            pop ix
 859+ 8BE3 E1               pop hl
 860+ 8BE4 ED 7B DF 85      ld sp,(Stack)
 861+ 8BE8 3A D6 85         ld a,(Ctrl_1)
 862+ 8BEB CB C7            set 0,a
 863+ 8BED 32 D6 85         ld (Ctrl_1),a
 864+ 8BF0 CD A0 7F         call Guarda_foto_registros
 865+ 8BF3 3A D6 85         ld a,(Ctrl_1)
 866+ 8BF6 CB 87            res 0,a
 867+ 8BF8 32 D6 85         ld (Ctrl_1),a
 868+ 8BFB E1               pop hl
 869+ 8BFC C9               ret
 870+ 8BFD
 871+ 8BFD E5           Mueve_disparo push hl
 872+ 8BFE 7E               ld a,(hl)
 873+ 8BFF 06 04            ld b,4
 874+ 8C01 23           1 inc hl
 875+ 8C02 10 FD            djnz 1B
 876+ 8C04
 877+ 8C04              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 878+ 8C04
 879+ 8C04 CD A9 87         call Extrae_address
 880+ 8C07
 881+ 8C07 E6 01            and 1
 882+ 8C09 28 2A            jr z,2F
 883+ 8C0B
 884+ 8C0B              ; Disparo hacia arriba, (Amadeus).
 885+ 8C0B
 886+ 8C0B              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 887+ 8C0B              ; _ de la dificultad.
 888+ 8C0B
 889+ 8C0B CD 80 8F         call PreviousScan
 890+ 8C0E CD 80 8F         call PreviousScan
 891+ 8C11 CD 80 8F         call PreviousScan
 892+ 8C14
 893+ 8C14              ; Detecta si el disparo de Amadeus sale de pantalla:
 894+ 8C14
 895+ 8C14 7C               ld a,h
 896+ 8C15 FE 40            cp $40
 897+ 8C17 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 898+ 8C19
 899+ 8C19              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 900+ 8C19
 901+ 8C19 EB               ex de,hl
 902+ 8C1A 06 04            ld b,4
 903+ 8C1C 2B           6 dec hl
 904+ 8C1D 10 FD            djnz 6B
 905+ 8C1F
 906+ 8C1F CD 4E 8C         call Elimina_disparo_de_base_de_datos
 907+ 8C22
 908+ 8C22 18 0C            jr 4F
 909+ 8C24
 910+ 8C24              ; Se ha desplazado la bala, compruebo colisión.
 911+ 8C24
 912+ 8C24 D5           3 push de
 913+ 8C25 C5               push bc
 914+ 8C26 CD 2B 8A         call Comprueba_Colision
 915+ 8C29 78               ld a,b
 916+ 8C2A C1               pop bc
 917+ 8C2B D1               pop de
 918+ 8C2C
 919+ 8C2C EB               ex de,hl
 920+ 8C2D
 921+ 8C2D 73               ld (hl),e
 922+ 8C2E 23               inc hl
 923+ 8C2F 72               ld (hl),d
 924+ 8C30
 925+ 8C30 E1           4 pop hl
 926+ 8C31 23               inc hl
 927+ 8C32 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 928+ 8C33 2B               dec hl
 929+ 8C34 C9               ret
 930+ 8C35
 931+ 8C35              ; Disparo hacia abajo, (Entidad).
 932+ 8C35
 933+ 8C35              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 934+ 8C35              ; _ de la dificultad.
 935+ 8C35
 936+ 8C35 CD 71 8F     2 call NextScan
 937+ 8C38 CD 71 8F         call NextScan
 938+ 8C3B CD 71 8F         call NextScan
 939+ 8C3E
 940+ 8C3E              ; Detecta si el disparo de la entidad sale de la pantalla.
 941+ 8C3E
 942+ 8C3E 7C               ld a,h
 943+ 8C3F FE 58            cp $58
 944+ 8C41 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 945+ 8C43
 946+ 8C43 EB               ex de,hl
 947+ 8C44 06 04            ld b,4
 948+ 8C46 2B           5 dec hl
 949+ 8C47 10 FD            djnz 5B
 950+ 8C49
 951+ 8C49 CD 4E 8C         call Elimina_disparo_de_base_de_datos
 952+ 8C4C
 953+ 8C4C 18 E2            jr 4B
 954+ 8C4E
 955+ 8C4E              ; HL apunta al primer byte de la base de datos del disparo.
 956+ 8C4E 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
 957+ 8C51 AF               xor a
 958+ 8C52 77               ld (hl),a
 959+ 8C53 54               ld d,h
 960+ 8C54 5D               ld e,l
 961+ 8C55 13               inc de
 962+ 8C56 ED B0            ldir
 963+ 8C58 C9               ret
 964+ 8C59
 965+ 8C59              ; -----------------------------------------------------------------
 966+ 8C59              ;
 967+ 8C59              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
 968+ 8C59              ;
 969+ 8C59              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
 970+ 8C59              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
 971+ 8C59              ;
 972+ 8C59              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
 973+ 8C59              ;
 974+ 8C59              ;   INPUTS:
 975+ 8C59              ;
 976+ 8C59              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
 977+ 8C59              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
 978+ 8C59              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
 979+ 8C59
 980+ 8C59              ;   MODIFICA: A, HL, DE y C
 981+ 8C59
 982+ 8C59 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
 983+ 8C5A 79               ld a,c
 984+ 8C5B E6 01            and 1
 985+ 8C5D 20 03            jr nz,1F
 986+ 8C5F 14               inc d
 987+ 8C60 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
 988+ 8C62
 989+ 8C62              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 990+ 8C62              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
 991+ 8C62
 992+ 8C62 15           1 dec d
 993+ 8C63 23           2 inc hl
 994+ 8C64 72               ld (hl),d
 995+ 8C65
 996+ 8C65 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
 997+ 8C66 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
 998+ 8C67 C8               ret z
 999+ 8C68
1000+ 8C68 AF               xor a
1001+ 8C69 5F               ld e,a
1002+ 8C6A 18 ED            jr Guarda_coordenadas_X
1003+ 8C6C
1004+ 8C6C              ; -----------------------------------------------------------------
1005+ 8C6C              ;
1006+ 8C6C              ;   12/04/23
1007+ 8C6C              ;
1008+ 8C6C
1009+ 8C6C 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1010+ 8C6F A7               and a
1011+ 8C70 C8               ret z
1012+ 8C71
1013+ 8C71 FE 04            cp 4
1014+ 8C73 20 FE            jr nz,$
1015+ 8C75
1016+ 8C75 CD B9 8A         call Detecta_colision_nave_entidad
1017+ 8C78
1018+ 8C78 7B               ld a,e
1019+ 8C79 C8               ret z                                               ; No existe colisiíon.
1020+ 8C7A
1021+ 8C7A FE 05            cp 5
1022+ 8C7C D8               ret c                                               ; Factor de sensibilidad de la colisión. Hace falta_
1023+ 8C7D              ;                                                       ; _ detectar colisión en 5 scancines para considerar IMPACTO.
1024+ 8C7D
1025+ 8C7D              ; Se ha producido colisión entre una entidad y Amadeus.
1026+ 8C7D 18 FE            jr $
1027+ 8C7F
1028+ 8C7F C9               ret
1029+ 8C80
1030+ 8C80              ; -----------------------------------------------------------------
1031+ 8C80              ;
1032+ 8C80              ;   16/04/23
1033+ 8C80              ;
1034+ 8C80
1035+ 8C80 AF           Limpia_Coordenadas_X xor a
1036+ 8C81 06 06            ld b,6
1037+ 8C83 21 ED 85         ld hl,Coordenadas_X_Amadeus
1038+ 8C86 77           1 ld (hl),a
1039+ 8C87 23               inc hl
1040+ 8C88 10 FC            djnz 1B
1041+ 8C8A C9               ret
# file closed: Disparo.asm
 885  8C8B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8C8B              ; ******************************************************************************************************************************************************************************************
   2+ 8C8B              ;
   3+ 8C8B              ; 01/23
   4+ 8C8B              ;
   5+ 8C8B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8C8B
   7+ 8C8B CD 65 8F     Draw call Prepara_draw
   8+ 8C8E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8C8F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8C90 28 05        	jr z,2F
  11+ 8C92
  12+ 8C92 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8C95 18 0C        	jr 1F
  14+ 8C97 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8C9A 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8C9D CD 2C 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8CA0              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8CA0 CD AB 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8CA3 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8CA6 CB 6F        	bit 5,a
  21+ 8CA8 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8CAA
  23+ 8CAA CD C2 8C     	call Comprueba_limite_horizontal
  24+ 8CAD CD 52 8D     	call Comprueba_limite_vertical
  25+ 8CB0
  26+ 8CB0              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8CB0
  28+ 8CB0 CD 9F 8E     3 call calcula_CColumnass
  29+ 8CB3 CD D6 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8CB6 CD 2B 8F     	call Define_rutina_de_impresion
  31+ 8CB9
  32+ 8CB9 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8CBC CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8CBE 32 C9 85     	ld (Ctrl_0),a
  35+ 8CC1
  36+ 8CC1 C9           	ret
  37+ 8CC2
  38+ 8CC2              ; *******************************************************************************************************************************************************************************************
  39+ 8CC2              ;	21/01/23
  40+ 8CC2              ;
  41+ 8CC2              ; 	Comprueba_limite_horizontal.
  42+ 8CC2              ;
  43+ 8CC2              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8CC2              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8CC2              ;
  46+ 8CC2              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8CC2              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8CC2              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8CC2              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8CC2
  51+ 8CC2
  52+ 8CC2
  53+ 8CC2 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8CC5 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8CC7 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8CC9 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8CCB 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8CCE 18 09            jr 6F
  59+ 8CD0 CB 5F        1 bit 3,a
  60+ 8CD2 28 0A            jr z,2F
  61+ 8CD4 E6 F7            and $f7
  62+ 8CD6 32 C9 85         ld (Ctrl_0),a
  63+ 8CD9 CD 2C 8E     6 call Inicializacion
  64+ 8CDC 18 5B            jr 5F
  65+ 8CDE E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8CDF
  67+ 8CDF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8CDF              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8CDF
  70+ 8CDF EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8CE0 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8CE3 CD 31 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8CE6 67           	ld h,a
  74+ 8CE7 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8CE8 CD 31 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8CEB 67           	ld h,a
  77+ 8CEC A7           	and a
  78+ 8CED ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8CEF 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8CF0 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8CF3 FE 02        	cp 2
  82+ 8CF5 38 1E        	jr c,3F
  83+ 8CF7 28 1C        	jr z,3F
  84+ 8CF9 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8CFA 28 23            jr z,7F
  86+ 8CFC 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8CFE 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8D00 E1           	pop hl
  89+ 8D01
  90+ 8D01              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8D01              ; _para indicar con E="2" en caso necesario.
  92+ 8D01
  93+ 8D01 E5               push hl
  94+ 8D02 C5               push bc
  95+ 8D03 CD 31 92     	call calcula_tercio
  96+ 8D06 FE 01        	cp 1
  97+ 8D08 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8D0A CD 3A 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8D0D 28 26            jr z,9F
 100+ 8D0F 38 24            jr c,9F
 101+ 8D11 1E 00        11 ld e,0
 102+ 8D13 18 22            jr 8F
 103+ 8D15 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8D16 28 07        	jr z, 7F
 105+ 8D18 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8D1A 1E 00         	ld e,0
 107+ 8D1C E1           	pop hl
 108+ 8D1D 18 04        	jr 4F
 109+ 8D1F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8D21 18 15            jr 10F
 111+ 8D23
 112+ 8D23              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8D23              ; _para indicar con E="2" en caso necesario.
 114+ 8D23
 115+ 8D23 E5           4 push hl
 116+ 8D24 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8D25 CD 31 92     	call calcula_tercio
 118+ 8D28 FE 01        	cp 1
 119+ 8D2A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8D2C CD 3A 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8D2F 28 04            jr z,9F
 122+ 8D31 30 02            jr nc,9F
 123+ 8D33 18 02        	jr 8F
 124+ 8D35 1E 02        9 ld e,2
 125+ 8D37 C1           8 pop bc
 126+ 8D38 E1           10 pop hl
 127+ 8D39 C9           5 ret
 128+ 8D3A
 129+ 8D3A              ; --------------------
 130+ 8D3A              ;
 131+ 8D3A              ; 25/08/22
 132+ 8D3A
 133+ 8D3A CD 31 92     Comprueba_centro call calcula_tercio
 134+ 8D3D 67               ld h,a
 135+ 8D3E 08           	ex af,af
 136+ 8D3F FE 02        	cp 2
 137+ 8D41 38 07        	jr c,1F
 138+ 8D43 28 05        	jr z,1F
 139+ 8D45 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8D48 18 03        	jr 2F
 141+ 8D4A 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8D4D 08           2 ex af,af
 143+ 8D4E A7               and a
 144+ 8D4F ED 42            sbc hl,bc
 145+ 8D51 C9               ret
 146+ 8D52
 147+ 8D52              ; *********************************************************************************************************************************************************************************************
 148+ 8D52              ;
 149+ 8D52              ;   16/8/22
 150+ 8D52              ;
 151+ 8D52              ;	Comprueba_limite_vertical
 152+ 8D52              ;
 153+ 8D52              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8D52              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8D52              ;
 156+ 8D52
 157+ 8D52 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8D55 7D           	ld a,l
 159+ 8D56 E6 1F        	and $1F
 160+ 8D58 57           	ld d,a
 161+ 8D59 3A D5 85     	ld a,(Limite_vertical)
 162+ 8D5C BA           	cp d 											; Límite - Posición.
 163+ 8D5D 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8D5E 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8D61 CB 47        	bit 0,a
 166+ 8D63 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8D65
 168+ 8D65              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8D65
 170+ 8D65 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8D66 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8D68
 173+ 8D68              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8D68              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8D68
 176+ 8D68 3A A1 85         ld a,(Coordenada_X)
 177+ 8D6B 16 0F            ld d,Centro_izquierda
 178+ 8D6D A7               and a
 179+ 8D6E 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8D6F 28 1E            jr z,3F
 181+ 8D71 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8D73              ;                                                    ; _salimos sin modificar nada.
 183+ 8D73 18 0E            jr 2F
 184+ 8D75 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8D76 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8D78
 187+ 8D78              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8D78              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8D78
 190+ 8D78 3A A1 85         ld a,(Coordenada_X)
 191+ 8D7B 16 10            ld d,Centro_derecha
 192+ 8D7D A7               and a
 193+ 8D7E 92               sub d
 194+ 8D7F 28 0E            jr z,3F
 195+ 8D81 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8D83              ;                                                    ; _salimos sin modificar nada.
 197+ 8D83 CB 43        2 bit 0,e
 198+ 8D85 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8D87 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8D88 CD 1C 8E         call Modificaccionne
 201+ 8D8B C1           	pop bc
 202+ 8D8C CD 2C 8E         call Inicializacion
 203+ 8D8F C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8D90
 205+ 8D90              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8D90
 207+ 8D90 C5           4 push bc
 208+ 8D91 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8D94 0A           	ld a,(bc)
 210+ 8D95 3D           	dec a
 211+ 8D96 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8D97 7D           	ld a,l
 213+ 8D98 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8D99 CB 47        	bit 0,a
 215+ 8D9B 28 03        	jr z,5F
 216+ 8D9D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8D9E 18 2E        	jr 7F
 218+ 8DA0
 219+ 8DA0              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8DA0
 221+ 8DA0 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8DA1 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8DA2 3A C9 85     	ld a,(Ctrl_0)
 224+ 8DA5 CB 4F        	bit 1,a
 225+ 8DA7 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8DA9 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8DAA
 228+ 8DAA              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8DAA
 230+ 8DAA 1C               inc e
 231+ 8DAB 1D               dec e
 232+ 8DAC 20 07            jr nz,12F
 233+ 8DAE 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8DAF 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8DB0 22 9D 85     	ld (Posicion_actual),hl
 236+ 8DB3 18 44        13 jr 9F
 237+ 8DB5 CB 43        12 bit 0,e
 238+ 8DB7 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8DB9              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8DB9 C1           	pop bc
 241+ 8DBA 18 D3        	jr 3B
 242+ 8DBC 80           14 add b
 243+ 8DBD 6F               ld l,a
 244+ 8DBE 22 9D 85     	ld (Posicion_actual),hl
 245+ 8DC1 CD 1C 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8DC4 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8DC6 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8DC8 32 C9 85         ld (Ctrl_0),a
 249+ 8DCB F1           	pop af
 250+ 8DCC 18 2B        	jr 9F
 251+ 8DCE
 252+ 8DCE              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8DCE
 254+ 8DCE F5           7 push af
 255+ 8DCF 3A C9 85     	ld a,(Ctrl_0)
 256+ 8DD2 CB 47        	bit 0,a
 257+ 8DD4 20 1D        	jr nz,8F
 258+ 8DD6 F1           	pop af
 259+ 8DD7
 260+ 8DD7              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8DD7
 262+ 8DD7 1C           	inc e
 263+ 8DD8 1D               dec e
 264+ 8DD9 20 07            jr nz,10F
 265+ 8DDB 90           	sub b
 266+ 8DDC 6F               ld l,a
 267+ 8DDD 22 9D 85     	ld (Posicion_actual),hl
 268+ 8DE0 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8DE2              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8DE2 CB 43        10 bit 0,e
 271+ 8DE4 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8DE6              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8DE6 C1           	pop bc
 274+ 8DE7 18 A6        	jr 3B
 275+ 8DE9 90           16 sub b
 276+ 8DEA 6F               ld l,a
 277+ 8DEB 22 9D 85     	ld (Posicion_actual),hl
 278+ 8DEE CD 1C 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8DF1 18 06            jr 9F
 280+ 8DF3 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8DF5 32 C9 85         ld (Ctrl_0),a
 282+ 8DF8 F1           	pop af
 283+ 8DF9 C1           9 pop bc
 284+ 8DFA 1E 00        	ld e,0
 285+ 8DFC CD 2C 8E         call Inicializacion
 286+ 8DFF F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8E00 08           	ex af,af
 288+ 8E01 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8E02 18 8B            jr 3B
 290+ 8E04
 291+ 8E04              ; --------------------
 292+ 8E04
 293+ 8E04 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8E06 CD 80 8F     1 call PreviousScan
 295+ 8E09 10 FB            djnz 1B
 296+ 8E0B 22 9D 85     	ld (Posicion_actual),hl
 297+ 8E0E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8E0F C9           	ret
 299+ 8E10
 300+ 8E10              ; --------------------
 301+ 8E10
 302+ 8E10 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8E12 CD 71 8F     1 call NextScan
 304+ 8E15 10 FB            djnz 1B
 305+ 8E17 22 9D 85     	ld (Posicion_actual),hl
 306+ 8E1A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8E1B C9           	ret
 308+ 8E1C
 309+ 8E1C              ; --------------------
 310+ 8E1C              ;
 311+ 8E1C              ;	22/01/23
 312+ 8E1C              ;
 313+ 8E1C              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8E1C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8E1C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8E1C
 317+ 8E1C
 318+ 8E1C              Modificaccionne
 319+ 8E1C
 320+ 8E1C 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8E1F FE 02        	cp 2
 322+ 8E21 CC 04 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8E24 DC 04 8E         call c,Modifica_Pos_actual
 324+ 8E27 C8           	ret z
 325+ 8E28 CD 10 8E         call Modifica_Pos_actual2
 326+ 8E2B C9               ret
 327+ 8E2C
 328+ 8E2C              ; *************************************************************************************************************************************************************************************************
 329+ 8E2C              ;
 330+ 8E2C              ;	13/8/22
 331+ 8E2C              ;
 332+ 8E2C              ;	Inicializacion
 333+ 8E2C              ;
 334+ 8E2C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8E2C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8E2C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8E2C              ;
 338+ 8E2C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8E2C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8E2C              ;	_ desaparece/aparece.
 341+ 8E2C
 342+ 8E2C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8E2C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8E2C              ;
 345+ 8E2C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8E2C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8E2C              ; 		   [E] ="0"
 348+ 8E2C
 349+ 8E2C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8E2C
 351+ 8E2C CD 31 92     Inicializacion call calcula_tercio
 352+ 8E2F 28 36        	jr z,primit
 353+ 8E31 E6 02        	and 2
 354+ 8E33 20 07        	jr nz,segmit
 355+ 8E35 7D           	ld a,l
 356+ 8E36 FE 7F        	cp $7f
 357+ 8E38 38 2D        	jr c,primit
 358+ 8E3A 28 2B        	jr z,primit
 359+ 8E3C CD 99 8E     segmit call column
 360+ 8E3F 38 13        	jr c,tercuad
 361+ 8E41 3E 04        cuarcuad ld a,4
 362+ 8E43 32 AF 85     	ld (Cuad_objeto),a
 363+ 8E46 21 20 48     	ld hl,$4820
 364+ 8E49 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8E4C 21 D5 85     	ld hl,Limite_vertical
 366+ 8E4F 36 0D        	ld (hl),$0d
 367+ 8E51 08           	ex af,af
 368+ 8E52 18 3C        	jr 1F
 369+ 8E54              tercuad
 370+ 8E54 3E 03        	ld a,3
 371+ 8E56 32 AF 85     	ld (Cuad_objeto),a
 372+ 8E59 21 20 48     	ld hl,$4820
 373+ 8E5C 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8E5F 21 D5 85     	ld hl,Limite_vertical
 375+ 8E62 36 12        	ld (hl),$12
 376+ 8E64 08           	ex af,af
 377+ 8E65 18 29        	jr 1F
 378+ 8E67 CD 99 8E     primit call column
 379+ 8E6A 38 13        	jr c, primcuad
 380+ 8E6C              segcuad
 381+ 8E6C 3E 02        	ld a,2
 382+ 8E6E 32 AF 85     	ld (Cuad_objeto),a
 383+ 8E71 21 C0 4F     	ld hl,$4fc0
 384+ 8E74 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8E77 21 D5 85     	ld hl,Limite_vertical
 386+ 8E7A 36 0D        	ld (hl),$0d
 387+ 8E7C 08           	ex af,af
 388+ 8E7D 18 11        	jr 1F
 389+ 8E7F              primcuad
 390+ 8E7F 3E 01        	ld a,1
 391+ 8E81 32 AF 85     	ld (Cuad_objeto),a
 392+ 8E84 21 C0 4F     	ld hl,$4fc0
 393+ 8E87 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8E8A 21 D5 85     	ld hl,Limite_vertical
 395+ 8E8D 36 12        	ld (hl),$12
 396+ 8E8F 08           	ex af,af
 397+ 8E90 CD 5D 95     1 call Genera_coordenadas
 398+ 8E93 21 C9 85     	ld hl,Ctrl_0
 399+ 8E96 CB EE        	set 5,(hl)
 400+ 8E98 C9           	ret
 401+ 8E99
 402+ 8E99              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8E99
 404+ 8E99              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8E99              ;
 406+ 8E99              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8E99
 408+ 8E99 7D           column ld a,l
 409+ 8E9A E6 1F        	and $1f
 410+ 8E9C FE 10         	cp $10
 411+ 8E9E C9            	ret
 412+ 8E9F
 413+ 8E9F              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8E9F              ;
 415+ 8E9F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8E9F              ;
 417+ 8E9F              ; 14/12/22
 418+ 8E9F              ;
 419+ 8E9F              ;	Modifica: A y BC.
 420+ 8E9F
 421+ 8E9F 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8EA2 E6 01        	and 1
 423+ 8EA4 28 17        	jr z,1F
 424+ 8EA6
 425+ 8EA6              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8EA6
 427+ 8EA6 3A A1 85     	ld a,(Coordenada_X)
 428+ 8EA9 47           	ld b,a
 429+ 8EAA 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8EAB 79           	ld a,c
 431+ 8EAC 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8EAD 38 08        	jr c,2F
 433+ 8EAF 47           	ld b,a
 434+ 8EB0 79           	ld a,c
 435+ 8EB1 90           	sub b
 436+ 8EB2 32 D2 85     	ld (Columnas),a
 437+ 8EB5 18 1B        	jr 4F
 438+ 8EB7 79           2 ld a,c
 439+ 8EB8 32 D2 85     	ld (Columnas),a
 440+ 8EBB 18 15        	jr 4F
 441+ 8EBD
 442+ 8EBD              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8EBD
 444+ 8EBD 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8EC0 81           	add c
 446+ 8EC1 3D           	dec a
 447+ 8EC2 D6 1F        	sub $1f
 448+ 8EC4 38 08        	jr c,3F
 449+ 8EC6 47           	ld b,a
 450+ 8EC7 79           	ld a,c
 451+ 8EC8 90           	sub b
 452+ 8EC9 32 D2 85     	ld (Columnas),a
 453+ 8ECC 18 04        	jr 4F
 454+ 8ECE 79           3 ld a,c
 455+ 8ECF 32 D2 85     	ld (Columnas),a
 456+ 8ED2 D9           4 exx
 457+ 8ED3 4F           	ld c,a
 458+ 8ED4 D9           	exx
 459+ 8ED5 C9            ret
 460+ 8ED6
 461+ 8ED6              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8ED6              ;
 463+ 8ED6              ; 7/1/23
 464+ 8ED6              ;
 465+ 8ED6              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8ED6              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8ED6              ;
 468+ 8ED6              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8ED6              ;	DESTRUYE: HL,B Y A.
 470+ 8ED6
 471+ 8ED6 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8ED9 FE 02        	cp 2
 473+ 8EDB 38 18        	jr c,1F
 474+ 8EDD 28 16        	jr z,1F
 475+ 8EDF E6 01        	and 1
 476+ 8EE1 28 0D        	jr z,3F
 477+ 8EE3
 478+ 8EE3              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8EE3
 480+ 8EE3 CD 1F 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8EE6
 482+ 8EE6 7D           9 ld a,l
 483+ 8EE7 E6 1F        	and $1f
 484+ 8EE9 28 2A        	jr z,7F
 485+ 8EEB 2B           	dec hl
 486+ 8EEC 10 F8        	djnz 9B
 487+ 8EEE 18 25        	jr 7F
 488+ 8EF0
 489+ 8EF0              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8EF0
 491+ 8EF0 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8EF3 18 20        	jr 7F
 493+ 8EF5
 494+ 8EF5 28 14        1 jr z,2F
 495+ 8EF7
 496+ 8EF7              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8EF7
 498+ 8EF7 CD 1F 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8EFA 7D           4 ld a,l
 500+ 8EFB E6 1F        	and $1f
 501+ 8EFD 28 03        	jr z,6F
 502+ 8EFF 2B           	dec hl
 503+ 8F00 10 F8        	djnz 4B
 504+ 8F02 06 0F        6 ld b,15
 505+ 8F04 CD 80 8F     5 call PreviousScan
 506+ 8F07 10 FB        	djnz 5B
 507+ 8F09 18 0A        	jr 7F
 508+ 8F0B
 509+ 8F0B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8F0B
 511+ 8F0B CD 1F 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8F0E 06 0F        	ld b,15
 513+ 8F10 CD 80 8F     8 call PreviousScan
 514+ 8F13 10 FB        	djnz 8B
 515+ 8F15
 516+ 8F15 E5           7 push hl
 517+ 8F16 DD E1        	pop ix
 518+ 8F18
 519+ 8F18 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8F1B E5           	push hl
 521+ 8F1C FD E1        	pop iy
 522+ 8F1E
 523+ 8F1E C9           	ret
 524+ 8F1F
 525+ 8F1F              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8F1F              ;
 527+ 8F1F              ;	2/1/23
 528+ 8F1F              ;
 529+ 8F1F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8F1F              ;
 531+ 8F1F              ;	Tras esta rutina tenemos:
 532+ 8F1F              ;
 533+ 8F1F              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8F1F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8F1F              ;
 536+ 8F1F              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8F1F
 538+ 8F1F 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8F22 3A D2 85     	ld a,(Columnas)
 540+ 8F25 3D           	dec a
 541+ 8F26 20 01        	jr nz,1F
 542+ 8F28 3C           	inc a
 543+ 8F29 47           1 ld b,a
 544+ 8F2A C9           	ret
 545+ 8F2B
 546+ 8F2B              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8F2B              ;
 548+ 8F2B              ;	3/1/23
 549+ 8F2B              ;
 550+ 8F2B              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8F2B              ;
 552+ 8F2B              ;	Destruye: A,B,HL y DE.
 553+ 8F2B
 554+ 8F2B              Define_rutina_de_impresion
 555+ 8F2B
 556+ 8F2B 3A 9C 85     	ld a,(Columns)
 557+ 8F2E 47           	ld b,a
 558+ 8F2F 3A D2 85     	ld a,(Columnas)
 559+ 8F32 B8           	cp b
 560+ 8F33 20 0D        	jr nz,2f
 561+ 8F35
 562+ 8F35              ;	La entidad se imprime entera.
 563+ 8F35
 564+ 8F35 21 01 90     	ld hl, Indice_entidades_completas
 565+ 8F38 E6 01        	and 1
 566+ 8F3A 28 02        	jr z,1F
 567+ 8F3C
 568+ 8F3C 23           	inc hl
 569+ 8F3D 23           	inc hl
 570+ 8F3E
 571+ 8F3E CD A9 87     1 call Extrae_address
 572+ 8F41 C9           	ret		;	ret
 573+ 8F42
 574+ 8F42              ;	La entidad no se imprime entera en pantalla.
 575+ 8F42
 576+ 8F42 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8F45 E6 01        	and 1
 578+ 8F47 28 17        	jr z,3F
 579+ 8F49
 580+ 8F49              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8F49
 582+ 8F49 21 05 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 8F4C 3A 9C 85     4 ld a,(Columns)
 584+ 8F4F E6 01        	and 1
 585+ 8F51 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 8F53
 587+ 8F53 23           	inc hl
 588+ 8F54 23           	inc hl
 589+ 8F55
 590+ 8F55 3A D2 85     	ld a,(Columnas)
 591+ 8F58 E6 01        	and 1
 592+ 8F5A 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 8F5C
 594+ 8F5C 23           	inc hl
 595+ 8F5D 23           	inc hl
 596+ 8F5E
 597+ 8F5E 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 8F60
 599+ 8F60 21 0B 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 8F63 18 E7        	jr 4B
 601+ 8F65
 602+ 8F65              ; --------------------------------------------------------------------------------------------------------------------
 603+ 8F65              ;
 604+ 8F65              ;	Prepara_draw
 605+ 8F65              ;
 606+ 8F65              ;	Es una rutina de carga.
 607+ 8F65              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 8F65              ;
 609+ 8F65              ;	FUNCIONAMIENTO:
 610+ 8F65              ;
 611+ 8F65              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 8F65              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 8F65              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 8F65              ;
 615+ 8F65              ;	DESTRUYE:
 616+ 8F65              ;
 617+ 8F65              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 8F65
 619+ 8F65 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 8F68 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 8F69 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 8F6A 4E           	ld c,(hl)
 623+ 8F6B 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 8F6E 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 8F70 C9           	ret
 626+ 8F71
 627+ 8F71              ;----------------------------------------------------------------------------------------------------------------
 628+ 8F71              ;
 629+ 8F71              ;	5/08/22
 630+ 8F71              ;
 631+ 8F71              ;   NextScan.
 632+ 8F71              ;
 633+ 8F71              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 8F71              ;
 635+ 8F71              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 8F71              ;
 637+ 8F71              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 8F71              ;
 639+ 8F71              ;       DESTRUIDOS: AF y HL !!!
 640+ 8F71              ;
 641+ 8F71              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 8F71              ;
 643+ 8F71
 644+ 8F71 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 8F72 7C               ld a,h
 646+ 8F73 E6 07            and 7
 647+ 8F75 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 8F76
 649+ 8F76 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 8F77 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 8F79 6F               ld l,a
 652+ 8F7A D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 8F7B
 654+ 8F7B 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 8F7C D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 8F7E 67               ld h,a
 657+ 8F7F C9               ret
 658+ 8F80
 659+ 8F80              ;----------------------------------------------------------------------------------------------------------------
 660+ 8F80              ;
 661+ 8F80              ;	5/08/22
 662+ 8F80              ;
 663+ 8F80              ;   PreviousScan.
 664+ 8F80              ;
 665+ 8F80              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 8F80              ;
 667+ 8F80              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 8F80              ;
 669+ 8F80              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 8F80              ;
 671+ 8F80              ;       DESTRUIDOS: AF y HL !!!
 672+ 8F80              ;
 673+ 8F80              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 8F80              ;
 675+ 8F80
 676+ 8F80 7C           PreviousScan ld a,h
 677+ 8F81 25               dec h               ; Dec H.
 678+ 8F82 E6 07            and 7
 679+ 8F84 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 8F85
 681+ 8F85 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 8F86 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 8F88 6F               ld l,a
 684+ 8F89 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 8F8A
 686+ 8F8A 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 8F8B C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 8F8D 67               ld h,a
 689+ 8F8E C9               ret
 690+ 8F8F
 691+ 8F8F              ; -----------------------------------------------------------------------------------
 692+ 8F8F              ;
 693+ 8F8F              ;	28/2/23
 694+ 8F8F              ;
 695+ 8F8F              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 8F8F              ;	Extrae fotos de Album_de_fotos.
 697+ 8F8F
 698+ 8F8F 3A DE 85     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 8F92 A7           	and a
 700+ 8F93 C8           	ret z
 701+ 8F94 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 8F98 31 00 70     	ld sp,Album_de_fotos
 703+ 8F9B
 704+ 8F9B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 8F9D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 8F9E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 8F9F
 708+ 8F9F ED 73 E1 85  	ld (Stack_2),sp
 709+ 8FA3 ED 7B DF 85  	ld sp,(Stack)
 710+ 8FA7
 711+ 8FA7              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 8FA7
 713+ 8FA7 3E CD        	ld a,$cd
 714+ 8FA9 32 B1 8F     	ld (Imprime),a
 715+ 8FAC EB           	ex de,hl
 716+ 8FAD 22 B2 8F     	ld (Imprime+1),hl
 717+ 8FB0 EB           	ex de,hl
 718+ 8FB1
 719+ 8FB1              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 8FB1
 721+ 8FB1 00 00 00     Imprime db 0,0,0
 722+ 8FB4
 723+ 8FB4 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 8FB7 3D           	dec a
 725+ 8FB8 28 09        	jr z,1F
 726+ 8FBA 32 DE 85      	ld (Numero_de_malotes),a
 727+ 8FBD
 728+ 8FBD ED 7B E1 85   	ld sp,(Stack_2)
 729+ 8FC1 18 D8        	jr 2B
 730+ 8FC3
 731+ 8FC3 AF           1 xor a
 732+ 8FC4 32 E1 85     	ld (Stack_2),a
 733+ 8FC7 C9           	ret
 734+ 8FC8
 735+ 8FC8              ; -----------------------------------------------------------------------------------
 736+ 8FC8              ;
 737+ 8FC8              ;	28/2/23
 738+ 8FC8              ;
 739+ 8FC8              ;	Pinta los disparos generados.
 740+ 8FC8
 741+ 8FC8              Extrae_foto_disparos
 742+ 8FC8
 743+ 8FC8 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 8FCB A7           	and a
 745+ 8FCC C8           	ret z
 746+ 8FCD ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 8FD1 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 8FD4
 749+ 8FD4 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 8FD6 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 8FD7 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 8FD8
 753+ 8FD8 ED 73 E1 85  	ld (Stack_2),sp
 754+ 8FDC ED 7B DF 85  	ld sp,(Stack)
 755+ 8FE0
 756+ 8FE0              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 8FE0
 758+ 8FE0 3E CD        	ld a,$cd
 759+ 8FE2 32 EA 8F     	ld (Imprime2),a
 760+ 8FE5 EB           	ex de,hl
 761+ 8FE6 22 EB 8F     	ld (Imprime2+1),hl
 762+ 8FE9 EB           	ex de,hl
 763+ 8FEA
 764+ 8FEA              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 8FEA
 766+ 8FEA 00 00 00     Imprime2 db 0,0,0
 767+ 8FED
 768+ 8FED 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 8FF0 3D           	dec a
 770+ 8FF1 28 09        	jr z,1F
 771+ 8FF3 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 8FF6
 773+ 8FF6 ED 7B E1 85  	ld sp,(Stack_2)
 774+ 8FFA 18 D8        	jr 2B
 775+ 8FFC
 776+ 8FFC AF           1 xor a
 777+ 8FFD 32 E1 85     	ld (Stack_2),a
 778+ 9000 C9           	ret
 779+ 9001
# file closed: Draw_XOR.asm
 886  9001              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9001              ;   índices de Rutinas de impresión.
   2+ 9001
   3+ 9001 11 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9003 3E 90            defw Pinta_Amadeus_3x2
   5+ 9005
   6+ 9005 94 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9007 34 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9009 E8 90            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 900B
  10+ 900B BE 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 900D C2 91            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 900F 76 91            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9011
  14+ 9011
  15+ 9011              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9011              ;
  17+ 9011              ;   12/12/22
  18+ 9011              ;
  19+ 9011              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9011              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9011              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9011              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9011              ;
  24+ 9011              ;   Modifica: DE y HL.
  25+ 9011
  26+ 9011 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9015 FD F9        	ld sp,iy
  28+ 9017 06 10            ld b,16
  29+ 9019 D1           1 pop de
  30+ 901A 7B               ld a,e
  31+ 901B AE               xor (hl)
  32+ 901C 77           	ld (hl),a
  33+ 901D 23           	inc hl
  34+ 901E 7A               ld a,d
  35+ 901F AE               xor (hl)
  36+ 9020 77           	ld (hl),a
  37+ 9021 2B           	dec hl
  38+ 9022 24           	inc h
  39+ 9023 7C               ld a,h
  40+ 9024 E6 07            and 7
  41+ 9026 20 0A            jr nz,2F
  42+ 9028 7D               ld a,l
  43+ 9029 C6 20            add a,$20
  44+ 902B 6F               ld l,a
  45+ 902C 38 04            jr c,2F
  46+ 902E 7C               ld a,h
  47+ 902F D6 08            sub 8
  48+ 9031 67               ld h,a
  49+ 9032 7C           2 ld a,h
  50+ 9033 FE 58            cp $58
  51+ 9035 28 02            jr z,3F
  52+ 9037 10 E0            djnz 1B
  53+ 9039 ED 7B DF 85  3 ld sp,(Stack)
  54+ 903D C9           	ret
  55+ 903E
  56+ 903E ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9042 FD F9        	ld sp,iy
  58+ 9044 06 08            ld b,8
  59+ 9046 D1           1 pop de
  60+ 9047 7B               ld a,e
  61+ 9048 AE               xor (hl)
  62+ 9049 77           	ld (hl),a
  63+ 904A 23           	inc hl
  64+ 904B 7A               ld a,d
  65+ 904C AE               xor (hl)
  66+ 904D 77           	ld (hl),a
  67+ 904E 23           	inc hl
  68+ 904F D1           	pop de
  69+ 9050 7B               ld a,e
  70+ 9051 AE               xor (hl)
  71+ 9052 77           	ld (hl),a
  72+ 9053 2B           	dec hl
  73+ 9054 2B           	dec hl
  74+ 9055 24           	inc h
  75+ 9056 7C               ld a,h
  76+ 9057 E6 07            and 7
  77+ 9059 20 0A            jr nz,2F
  78+ 905B 7D               ld a,l
  79+ 905C C6 20            add a,$20
  80+ 905E 6F               ld l,a
  81+ 905F 38 04            jr c,2F
  82+ 9061 7C               ld a,h
  83+ 9062 D6 08            sub 8
  84+ 9064 67               ld h,a
  85+ 9065 7C           2 ld a,h
  86+ 9066 FE 58            cp $58
  87+ 9068 28 25            jr z,4F
  88+ 906A 7A               ld a,d
  89+ 906B AE               xor (hl)
  90+ 906C 77               ld (hl),a
  91+ 906D D1           	pop de
  92+ 906E 23           	inc hl
  93+ 906F 7B               ld a,e
  94+ 9070 AE               xor (hl)
  95+ 9071 77           	ld (hl),a
  96+ 9072 23           	inc hl
  97+ 9073 7A               ld a,d
  98+ 9074 AE               xor (hl)
  99+ 9075 77           	ld (hl),a
 100+ 9076 2B           	dec hl
 101+ 9077 2B           	dec hl
 102+ 9078 24           	inc h
 103+ 9079 7C               ld a,h
 104+ 907A E6 07            and 7
 105+ 907C 20 0A            jr nz,3F
 106+ 907E 7D               ld a,l
 107+ 907F C6 20            add a,$20
 108+ 9081 6F               ld l,a
 109+ 9082 38 04            jr c,3F
 110+ 9084 7C               ld a,h
 111+ 9085 D6 08            sub 8
 112+ 9087 67               ld h,a
 113+ 9088 7C           3 ld a,h
 114+ 9089 FE 58            cp $58
 115+ 908B 28 02            jr z,4F
 116+ 908D 10 B7            djnz 1B
 117+ 908F ED 7B DF 85  4 ld sp,(Stack)
 118+ 9093 C9           	ret
 119+ 9094
 120+ 9094              ; ---------------------------------------------------
 121+ 9094
 122+ 9094 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9098 FD F9        	ld sp,iy
 124+ 909A
 125+ 909A              ; >>>
 126+ 909A
 127+ 909A 06 10            ld b,16
 128+ 909C D1           1 pop de
 129+ 909D 7A           	ld a,d
 130+ 909E AE           	xor (hl)
 131+ 909F 77           	ld (hl),a
 132+ 90A0 24           	inc h
 133+ 90A1 7C               ld a,h
 134+ 90A2 E6 07            and 7
 135+ 90A4 20 0C            jr nz,2F
 136+ 90A6 7D               ld a,l
 137+ 90A7 C6 20            add a,$20
 138+ 90A9 6F               ld l,a
 139+ 90AA 38 06            jr c,2F
 140+ 90AC 7C               ld a,h
 141+ 90AD D6 08            sub 8
 142+ 90AF 67               ld h,a
 143+ 90B0 18 00            jr 2F
 144+ 90B2 7C           2 ld a,h
 145+ 90B3 FE 58            cp $58
 146+ 90B5 28 02            jr z,3F
 147+ 90B7 10 E3            djnz 1B
 148+ 90B9 ED 7B DF 85  3 ld sp,(Stack)
 149+ 90BD C9           	ret
 150+ 90BE
 151+ 90BE ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 90C2 FD F9        	ld sp,iy
 153+ 90C4
 154+ 90C4              ; >>>
 155+ 90C4
 156+ 90C4 06 10            ld b,16
 157+ 90C6 D1           1 pop de
 158+ 90C7 7B           	ld a,e
 159+ 90C8 AE           	xor (hl)
 160+ 90C9 77           	ld (hl),a
 161+ 90CA 24           	inc h
 162+ 90CB 7C               ld a,h
 163+ 90CC E6 07            and 7
 164+ 90CE 20 0C            jr nz,2F
 165+ 90D0 7D               ld a,l
 166+ 90D1 C6 20            add a,$20
 167+ 90D3 6F               ld l,a
 168+ 90D4 38 06            jr c,2F
 169+ 90D6 7C               ld a,h
 170+ 90D7 D6 08            sub 8
 171+ 90D9 67               ld h,a
 172+ 90DA 18 00            jr 2F
 173+ 90DC 7C           2 ld a,h
 174+ 90DD FE 58            cp $58
 175+ 90DF 28 02            jr z,3F
 176+ 90E1 10 E3            djnz 1B
 177+ 90E3 ED 7B DF 85  3 ld sp,(Stack)
 178+ 90E7 C9           	ret
 179+ 90E8
 180+ 90E8              ; ---------------------------------------------------
 181+ 90E8
 182+ 90E8 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 90EC FD F9        	ld sp,iy
 184+ 90EE 06 08            ld b,8
 185+ 90F0 D1           1 pop de
 186+ 90F1 7A           	ld a,d
 187+ 90F2 AE           	xor (hl)
 188+ 90F3 77           	ld (hl),a
 189+ 90F4 23           	inc hl
 190+ 90F5 D1           	pop de
 191+ 90F6 7B           	ld a,e
 192+ 90F7 AE           	xor (hl)
 193+ 90F8 77           	ld (hl),a
 194+ 90F9 2B           	dec hl
 195+ 90FA 24            	inc h
 196+ 90FB 7C               ld a,h
 197+ 90FC E6 07            and 7
 198+ 90FE 20 0A            jr nz,2F
 199+ 9100 7D               ld a,l
 200+ 9101 C6 20            add a,$20
 201+ 9103 6F               ld l,a
 202+ 9104 38 04            jr c,2F
 203+ 9106 7C               ld a,h
 204+ 9107 D6 08            sub 8
 205+ 9109 67               ld h,a
 206+ 910A 7C           2 ld a,h
 207+ 910B FE 58            cp $58
 208+ 910D 28 20            jr z,4F
 209+ 910F D1               pop de
 210+ 9110 7B           	ld a,e
 211+ 9111 AE           	xor (hl)
 212+ 9112 77           	ld (hl),a
 213+ 9113 23           	inc hl
 214+ 9114 7A           	ld a,d
 215+ 9115 AE           	xor (hl)
 216+ 9116 77           	ld (hl),a
 217+ 9117 2B           	dec hl
 218+ 9118 24           	inc h
 219+ 9119 7C               ld a,h
 220+ 911A E6 07            and 7
 221+ 911C 20 0A            jr nz,3F
 222+ 911E 7D               ld a,l
 223+ 911F C6 20            add a,$20
 224+ 9121 6F               ld l,a
 225+ 9122 38 04            jr c,3F
 226+ 9124 7C               ld a,h
 227+ 9125 D6 08            sub 8
 228+ 9127 67               ld h,a
 229+ 9128 7C           3 ld a,h
 230+ 9129 FE 58            cp $58
 231+ 912B 28 02            jr z,4F
 232+ 912D 10 C1            djnz 1B
 233+ 912F ED 7B DF 85  4 ld sp,(Stack)
 234+ 9133 C9           	ret
 235+ 9134
 236+ 9134 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9138 FD F9        	ld sp,iy
 238+ 913A 06 08            ld b,8
 239+ 913C D1           1 pop de
 240+ 913D D1           	pop de
 241+ 913E 7B           	ld a,e
 242+ 913F AE           	xor (hl)
 243+ 9140 77           	ld (hl),a
 244+ 9141 24            	inc h
 245+ 9142 7C               ld a,h
 246+ 9143 E6 07            and 7
 247+ 9145 20 0A            jr nz,2F
 248+ 9147 7D               ld a,l
 249+ 9148 C6 20            add a,$20
 250+ 914A 6F               ld l,a
 251+ 914B 38 04            jr c,2F
 252+ 914D 7C               ld a,h
 253+ 914E D6 08            sub 8
 254+ 9150 67               ld h,a
 255+ 9151 7C           2 ld a,h
 256+ 9152 FE 58            cp $58
 257+ 9154 28 1B            jr z,4F
 258+ 9156 D1               pop de
 259+ 9157 7A           	ld a,d
 260+ 9158 AE           	xor (hl)
 261+ 9159 77           	ld (hl),a
 262+ 915A 24           	inc h
 263+ 915B 7C               ld a,h
 264+ 915C E6 07            and 7
 265+ 915E 20 0A            jr nz,3F
 266+ 9160 7D               ld a,l
 267+ 9161 C6 20            add a,$20
 268+ 9163 6F               ld l,a
 269+ 9164 38 04            jr c,3F
 270+ 9166 7C               ld a,h
 271+ 9167 D6 08            sub 8
 272+ 9169 67               ld h,a
 273+ 916A 7C           3 ld a,h
 274+ 916B FE 58            cp $58
 275+ 916D 28 02            jr z,4F
 276+ 916F 10 CB            djnz 1B
 277+ 9171 ED 7B DF 85  4 ld sp,(Stack)
 278+ 9175 C9           	ret
 279+ 9176
 280+ 9176 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 917A FD F9        	ld sp,iy
 282+ 917C 06 08            ld b,8
 283+ 917E D1           1 pop de
 284+ 917F 7B           	ld a,e
 285+ 9180 AE           	xor (hl)
 286+ 9181 77           	ld (hl),a
 287+ 9182 23           	inc hl
 288+ 9183 7A           	ld a,d
 289+ 9184 AE           	xor (hl)
 290+ 9185 77           	ld (hl),a
 291+ 9186 2B           	dec hl
 292+ 9187 24             	inc h
 293+ 9188 7C               ld a,h
 294+ 9189 E6 07            and 7
 295+ 918B 20 0A            jr nz,2F
 296+ 918D 7D               ld a,l
 297+ 918E C6 20            add a,$20
 298+ 9190 6F               ld l,a
 299+ 9191 38 04            jr c,2F
 300+ 9193 7C               ld a,h
 301+ 9194 D6 08            sub 8
 302+ 9196 67               ld h,a
 303+ 9197 7C           2 ld a,h
 304+ 9198 FE 58            cp $58
 305+ 919A 28 21            jr z,4F
 306+ 919C D1               pop de
 307+ 919D 7A           	ld a,d
 308+ 919E AE           	xor (hl)
 309+ 919F 77           	ld (hl),a
 310+ 91A0 23           	inc hl
 311+ 91A1 D1               pop de
 312+ 91A2 7B           	ld a,e
 313+ 91A3 AE           	xor (hl)
 314+ 91A4 77           	ld (hl),a
 315+ 91A5 2B           	dec hl
 316+ 91A6 24           	inc h
 317+ 91A7 7C               ld a,h
 318+ 91A8 E6 07            and 7
 319+ 91AA 20 0A            jr nz,3F
 320+ 91AC 7D               ld a,l
 321+ 91AD C6 20            add a,$20
 322+ 91AF 6F               ld l,a
 323+ 91B0 38 04            jr c,3F
 324+ 91B2 7C               ld a,h
 325+ 91B3 D6 08            sub 8
 326+ 91B5 67               ld h,a
 327+ 91B6 7C           3 ld a,h
 328+ 91B7 FE 58            cp $58
 329+ 91B9 28 02            jr z,4F
 330+ 91BB 10 C1            djnz 1B
 331+ 91BD ED 7B DF 85  4 ld sp,(Stack)
 332+ 91C1 C9           	ret
 333+ 91C2
 334+ 91C2 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 91C6 FD F9        	ld sp,iy
 336+ 91C8 06 08            ld b,8
 337+ 91CA D1           1 pop de
 338+ 91CB 7B           	ld a,e
 339+ 91CC AE           	xor (hl)
 340+ 91CD 77           	ld (hl),a
 341+ 91CE 24            	inc h
 342+ 91CF 7C               ld a,h
 343+ 91D0 E6 07            and 7
 344+ 91D2 20 0A            jr nz,2F
 345+ 91D4 7D               ld a,l
 346+ 91D5 C6 20            add a,$20
 347+ 91D7 6F               ld l,a
 348+ 91D8 38 04            jr c,2F
 349+ 91DA 7C               ld a,h
 350+ 91DB D6 08            sub 8
 351+ 91DD 67               ld h,a
 352+ 91DE 7C           2 ld a,h
 353+ 91DF FE 58            cp $58
 354+ 91E1 28 1C            jr z,4F
 355+ 91E3 D1               pop de
 356+ 91E4 7A           	ld a,d
 357+ 91E5 AE           	xor (hl)
 358+ 91E6 77           	ld (hl),a
 359+ 91E7 24           	inc h
 360+ 91E8 7C               ld a,h
 361+ 91E9 E6 07            and 7
 362+ 91EB 20 0A            jr nz,3F
 363+ 91ED 7D               ld a,l
 364+ 91EE C6 20            add a,$20
 365+ 91F0 6F               ld l,a
 366+ 91F1 38 04            jr c,3F
 367+ 91F3 7C               ld a,h
 368+ 91F4 D6 08            sub 8
 369+ 91F6 67               ld h,a
 370+ 91F7 7C           3 ld a,h
 371+ 91F8 FE 58            cp $58
 372+ 91FA 28 03            jr z,4F
 373+ 91FC D1               pop de
 374+ 91FD 10 CB            djnz 1B
 375+ 91FF ED 7B DF 85  4 ld sp,(Stack)
 376+ 9203 C9           	ret
 377+ 9204
 378+ 9204              ; ---------------------------------------------------
 379+ 9204              ;
 380+ 9204              ;   27/02/23
 381+ 9204              ;
 382+ 9204              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9204              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9204              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9204
 386+ 9204 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 9208 FD F9            ld sp,iy
 388+ 920A 06 02            ld b,2
 389+ 920C D1           1 pop de
 390+ 920D 7B               ld a,e
 391+ 920E AE               xor (hl)
 392+ 920F 77               ld (hl),a
 393+ 9210 23               inc hl
 394+ 9211 7A               ld a,d
 395+ 9212 AE               xor (hl)
 396+ 9213 77               ld (hl),a
 397+ 9214 2B               dec hl
 398+ 9215
 399+ 9215 24               inc h
 400+ 9216 7C               ld a,h
 401+ 9217 E6 07            and 7
 402+ 9219 20 0A            jr nz,2F
 403+ 921B 7D               ld a,l
 404+ 921C C6 20            add a,$20
 405+ 921E 6F               ld l,a
 406+ 921F 38 04            jr c,2F
 407+ 9221 7C               ld a,h
 408+ 9222 D6 08            sub 8
 409+ 9224 67               ld h,a
 410+ 9225 7C           2 ld a,h
 411+ 9226 FE 58            cp $58
 412+ 9228 28 02            jr z,3F
 413+ 922A
 414+ 922A 10 E0            djnz 1B
 415+ 922C ED 7B DF 85  3 ld sp,(Stack)
 416+ 9230 C9               ret
 417+ 9231
# file closed: Rutinas_de_impresion_sprites.asm
 887  9231              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9231              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9231              ;
   3+ 9231              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9231              ;
   5+ 9231              ; *****************************************************************************************************************************************************************************************
   6+ 9231              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9231
   8+ 9231 7C           calcula_tercio ld a,h
   9+ 9232 E6 18        	and $18
  10+ 9234 CB 2F        	sra a
  11+ 9236 CB 2F        	sra a
  12+ 9238 CB 2F        	sra a
  13+ 923A C9           	ret
  14+ 923B
# file closed: calcula_tercio.asm
 888  923B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 923B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 923B              ;
   3+ 923B              ;
   4+ 923B              ;	CLS.
   5+ 923B              ;
   6+ 923B              ;	Limpia la pantalla y define sus atributos.
   7+ 923B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 923B              ;
   9+ 923B              ;	COLORES: 0 ..... NEGRO
  10+ 923B              ;    		 1 ..... AZUL
  11+ 923B              ; 			 2 ..... ROJO
  12+ 923B              ;			 3 ..... MAGENTA
  13+ 923B              ; 			 4 ..... VERDE
  14+ 923B              ; 			 5 ..... CIAN
  15+ 923B              ;			 6 ..... AMARILLO
  16+ 923B              ; 			 7 ..... BLANCO
  17+ 923B              ;
  18+ 923B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 923B              ;
  20+ 923B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 923B
  22+ 923B
  23+ 923B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 923E 11 01 40     	LD DE,$4001
  25+ 9241 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9244 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9246 ED B0        	LDIR
  28+ 9248 01 FF 02     	LD BC,767
  29+ 924B 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 924C ED B0        	LDIR
  31+ 924E C9           	ret
  32+ 924F
# file closed: Cls.asm
 889  924F              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 924F              ; ******************************************************************************************************************************************************************************************
   2+ 924F              ;
   3+ 924F              ;   22/01/23
   4+ 924F              ;
   5+ 924F              ;	Mov_down
   6+ 924F              ;
   7+ 924F              ; 	Mueve el Sprite X px hacia abajo.
   8+ 924F              ;
   9+ 924F              ;
  10+ 924F 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9252 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9254              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9254              ; 																	; _ en el caso de que no lo haya.
  14+ 9254 3A B3 85     	ld a,(Vel_down)
  15+ 9257 47           	ld b,a
  16+ 9258 2A 9D 85         ld hl,(Posicion_actual)
  17+ 925B CD 31 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 925E E6 02        	and 2
  19+ 9260 28 0F        	jr z,1F
  20+ 9262
  21+ 9262              ; Nos encontramos en el último tercio de pantalla.
  22+ 9262              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9262
  24+ 9262 7C           	ld a,h
  25+ 9263 FE 57        	cp $57
  26+ 9265 20 0A        	jr nz,1F
  27+ 9267 7D           	ld a,l
  28+ 9268 C6 20        	add $20
  29+ 926A 30 05        	jr nc,1F
  30+ 926C
  31+ 926C              ; ------------------------------
  32+ 926C CD 47 95     	call Reaparece_arriba
  33+ 926F              ;	call Reinicio
  34+ 926F              ; ------------------------------
  35+ 926F
  36+ 926F 18 08        	jr 3F
  37+ 9271 CD 71 8F     1 call NextScan
  38+ 9274 22 9D 85     	ld (Posicion_actual),hl
  39+ 9277 10 E2            djnz 2B
  40+ 9279 CD 5D 95     3 call Genera_coordenadas
  41+ 927C C9           	ret
  42+ 927D
  43+ 927D              ; ******************************************************************************************************************************************************************************************
  44+ 927D              ;
  45+ 927D              ;   22/01/23
  46+ 927D              ;
  47+ 927D              ;	Mov_up
  48+ 927D              ;
  49+ 927D              ; 	Mueve el Sprite hacia arriba.
  50+ 927D              ;
  51+ 927D              ;
  52+ 927D 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9280 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9282              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9282              ; 																		; _ en el caso de que no lo haya.
  56+ 9282 3A B2 85     	ld a,(Vel_up)
  57+ 9285 47           	ld b,a
  58+ 9286 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 9289 CD 31 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 928C A7           	and a
  61+ 928D 20 10        	jr nz,1F
  62+ 928F
  63+ 928F              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 928F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 928F
  66+ 928F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9290 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9292 20 0B            jr nz,1F
  69+ 9294 7D               ld a,l
  70+ 9295 D6 20            sub $20
  71+ 9297 30 06            jr nc,1F
  72+ 9299 25               dec h
  73+ 929A
  74+ 929A              ; -----------------------------
  75+ 929A CD 37 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 929D              ;	call Reinicio
  77+ 929D              ; -----------------------------
  78+ 929D
  79+ 929D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 929F CD 80 8F     1 call PreviousScan
  81+ 92A2 22 9D 85     	ld (Posicion_actual),hl
  82+ 92A5 10 E2            djnz 3B
  83+ 92A7 CD 5D 95     2 call Genera_coordenadas
  84+ 92AA C9           	ret
  85+ 92AB
  86+ 92AB              ; ******************************************************************************************************************************************************************************************
  87+ 92AB              ;
  88+ 92AB              ;	19/10/22
  89+ 92AB              ;
  90+ 92AB              ;	Mov_right.
  91+ 92AB              ;
  92+ 92AB              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 92AB              ;
  94+ 92AB
  95+ 92AB 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 92AE CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 92B0              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 92B0              ; 																	; _ en el caso de que no lo haya.
  99+ 92B0 3A C9 85     	ld a,(Ctrl_0)
 100+ 92B3 CB 77        	bit 6,a
 101+ 92B5 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 92B7
 103+ 92B7 CD E5 94     	call Stop_Amadeus_right
 104+ 92BA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 92BB 18 4D        	jr 8F
 106+ 92BD
 107+ 92BD 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 92C0 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 92C2 20 46        	jr nz,8F
 110+ 92C4
 111+ 92C4 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 92C7 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 92C8 28 40        	jr z,8F
 114+ 92CA
 115+ 92CA              ; ---------- ---------- ----------
 116+ 92CA              ;
 117+ 92CA              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 92CA
 119+ 92CA 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 92CD FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 92CF 28 11        	jr z,1F
 122+ 92D1 38 06        	jr c,6F
 123+ 92D3 FE 04        	cp 4
 124+ 92D5 28 14        	jr z,7F
 125+ 92D7 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 92D9
 127+ 92D9              ; ---------- ---------- ----------
 128+ 92D9              ;
 129+ 92D9              ; Perfiles de velocidad
 130+ 92D9              ;
 131+ 92D9
 132+ 92D9 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 92DC FE FE        	cp $fe
 134+ 92DE 20 2A        	jr nz,8F
 135+ 92E0 18 10        	jr 3F
 136+ 92E2 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 92E5 FE FD        	cp $fd
 138+ 92E7 20 21        	jr nz,8F
 139+ 92E9 18 07        	jr 3F
 140+ 92EB 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 92EE FE FB        	cp $fb
 142+ 92F0 20 18        	jr nz,8F
 143+ 92F2
 144+ 92F2              ; ---------- ---------- ----------
 145+ 92F2
 146+ 92F2              3
 147+ 92F2 CD 25 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 92F5              ;	call Reinicio
 149+ 92F5
 150+ 92F5              ; ---------- ---------- ----------
 151+ 92F5              ;
 152+ 92F5              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 92F5
 154+ 92F5 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 92F7 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 92F8 CD 11 93     	call DESPLZ_DER
 157+ 92FB C1           	pop bc
 158+ 92FC 10 F9        	djnz 5B
 159+ 92FE 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9301 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9302 22 9D 85     	ld (Posicion_actual),hl
 162+ 9305 CD 5D 95     	call Genera_coordenadas
 163+ 9308 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 930A
 165+ 930A              ; ---------- ---------- ----------
 166+ 930A
 167+ 930A 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 930D CD 11 93     	call DESPLZ_DER
 169+ 9310 C9           2 ret
 170+ 9311
 171+ 9311              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9311              ;
 173+ 9311              ;	22/9/22
 174+ 9311              ;
 175+ 9311
 176+ 9311 CD 20 93     DESPLZ_DER call Desplaza_derecha
 177+ 9314 CD 6C 93         call modifica_parametros_1er_DESPLZ_2
 178+ 9317 CD 95 93         call Ciclo_completo
 179+ 931A 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 931D CB FE        	set 7,(hl)
 181+ 931F C9           	ret
 182+ 9320
 183+ 9320              ; ******************************************************************************************************************************************************************************************
 184+ 9320              ;	15/02/23
 185+ 9320              ;
 186+ 9320
 187+ 9320 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9323 47           	ld b,a
 189+ 9324 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9327 23           1 inc hl
 191+ 9328 23           	inc hl
 192+ 9329 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 932B 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 932E CD A9 87     	call Extrae_address
 195+ 9331 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9334
 197+ 9334              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9334
 199+ 9334              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9334              ; Cuántos movimientos hemos hecho ??
 201+ 9334              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9334
 203+ 9334 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 9337 EB           	ex de,hl
 205+ 9338 A7           	and a
 206+ 9339 ED 52        	sbc hl,de
 207+ 933B CB 3D        	srl l
 208+ 933D 3E 08        6 ld a,8
 209+ 933F 95           	sub l
 210+ 9340 30 1E        	jr nc,3F
 211+ 9342
 212+ 9342              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9342              ; B="0".
 214+ 9342
 215+ 9342 04           4 inc b
 216+ 9343 3C           	inc a
 217+ 9344 20 FC        	jr nz,4B
 218+ 9346 78           	ld a,b
 219+ 9347 08           	ex af,af
 220+ 9348 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 934B 23           5 inc hl
 222+ 934C 23           	inc hl
 223+ 934D 10 FC        	djnz 5B
 224+ 934F 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9352 CD A9 87     	call Extrae_address
 226+ 9355 22 9F 85     	ld (Puntero_objeto),hl
 227+ 9358
 228+ 9358              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 9358              ; _(Posicion_actual).
 230+ 9358
 231+ 9358 21 9D 85     	ld hl,Posicion_actual
 232+ 935B 34           	inc (hl)
 233+ 935C 08               ex af,af
 234+ 935D 6F           	ld l,a
 235+ 935E 18 DD        	jr 6B
 236+ 9360
 237+ 9360              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9360
 239+ 9360 47           3 ld b,a
 240+ 9361 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9364 23           2 inc hl
 242+ 9365 23           	inc hl
 243+ 9366 10 FC        	djnz 2B
 244+ 9368 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 936B C9           8 ret
 246+ 936C
 247+ 936C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 936C              ;
 249+ 936C              ;	24/7/22
 250+ 936C              ;
 251+ 936C              ;	modifica_parametros_1er_DESPLZ_2
 252+ 936C              ;
 253+ 936C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 936C              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 936C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 936C
 257+ 936C 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 936F A7           	and a
 259+ 9370 20 1F        	jr nz,1F
 260+ 9372 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9374 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 9377
 263+ 9377 21 9C 85     	ld hl,Columns
 264+ 937A 34           	inc (hl)
 265+ 937B 3A AF 85     	ld a,(Cuad_objeto)
 266+ 937E E6 01        	and 1
 267+ 9380 28 0F        	jr z,1F
 268+ 9382 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9385 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9386 22 9D 85     	ld (Posicion_actual),hl
 271+ 9389 CD 5D 95     	call Genera_coordenadas
 272+ 938C CD F1 94     	call Inc_CTRL_DESPLZ
 273+ 938F 18 03        	jr 2F
 274+ 9391 CD F1 94     1 call Inc_CTRL_DESPLZ
 275+ 9394 C9           2 ret
 276+ 9395
 277+ 9395              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9395              ;
 279+ 9395              ;	24/7/22
 280+ 9395              ;
 281+ 9395              ;	Ciclo_completo.
 282+ 9395              ;
 283+ 9395              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9395              ;
 285+ 9395              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9395              ; 	Decrementamos (Columns).
 287+ 9395              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9395              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9395
 290+ 9395
 291+ 9395 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9398 FE FF        	cp $ff
 293+ 939A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 939C E6 F0        	and $f0
 295+ 939E 20 28        	jr nz,3F
 296+ 93A0
 297+ 93A0              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 93A0
 299+ 93A0 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 93A3 47           	ld b,a
 301+ 93A4 3E F8        	ld a,$f8
 302+ 93A6 80           	add b
 303+ 93A7 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 93AA 18 1C        	jr 3F
 305+ 93AC 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 93AF 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 93B0 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 93B1 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 93B4 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 93B7 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 93B9 20 0A        	jr nz,2F
 312+ 93BB 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 93BE 23           	inc hl
 314+ 93BF 22 9D 85     	ld (Posicion_actual),hl
 315+ 93C2 CD 5D 95     	call Genera_coordenadas
 316+ 93C5
 317+ 93C5              ; Inicia el puntero de Sprite.
 318+ 93C5
 319+ 93C5 CD C0 87     2 call Inicia_puntero_objeto_der
 320+ 93C8 C9           3 ret
 321+ 93C9
 322+ 93C9              ; ******************************************************************************************************************************************************************************************
 323+ 93C9              ;
 324+ 93C9              ;	15/02/23
 325+ 93C9              ;
 326+ 93C9              ;	Mov_left.
 327+ 93C9              ;
 328+ 93C9              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 93C9              ;
 330+ 93C9              Mov_left
 331+ 93C9
 332+ 93C9 21 C9 85     	ld hl,Ctrl_0
 333+ 93CC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 93CE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 93CE              ; 																	; _ en el caso de que no lo haya.
 336+ 93CE 3A C9 85     	ld a,(Ctrl_0)
 337+ 93D1 CB 77        	bit 6,a
 338+ 93D3 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 93D5
 340+ 93D5 CD EB 94     	call Stop_Amadeus_left
 341+ 93D8 C8           	ret z
 342+ 93D9 20 4A        	jr nz,8F
 343+ 93DB
 344+ 93DB 3A A1 85     11 ld a,(Coordenada_X)
 345+ 93DE A7           	and a
 346+ 93DF 20 44        	jr nz,8F
 347+ 93E1
 348+ 93E1 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 93E4 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 93E5 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 93E7
 352+ 93E7              ; ---------- ---------- ----------
 353+ 93E7
 354+ 93E7 3A B0 85     	ld a,(Vel_left)
 355+ 93EA FE 02        	cp 2
 356+ 93EC 28 0F        	jr z,1F
 357+ 93EE 38 04        	jr c,6F
 358+ 93F0 FE 04        	cp 4
 359+ 93F2 28 12        	jr z,7F
 360+ 93F4
 361+ 93F4              ; ---------- ---------- ----------
 362+ 93F4
 363+ 93F4 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 93F7 FE F8        	cp $f8
 365+ 93F9 20 2A        	jr nz,8F
 366+ 93FB 18 10        	jr 4F
 367+ 93FD 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 9400 FE F9        	cp $f9
 369+ 9402 20 21        	jr nz,8F
 370+ 9404 18 07        	jr 4F
 371+ 9406 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 9409 FE FB        	cp $fb
 373+ 940B 20 18        	jr nz,8F
 374+ 940D
 375+ 940D              ; ---------- ---------- ----------
 376+ 940D
 377+ 940D              4
 378+ 940D CD 13 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9410              ;	call Reinicio
 380+ 9410
 381+ 9410              ; ---------- ---------- ----------
 382+ 9410
 383+ 9410 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9412 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9413
 386+ 9413              ;	ld hl,(Indice_Sprite_izq)
 387+ 9413              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9413
 389+ 9413 CD 2C 94     	call DESPLZ_IZQ
 390+ 9416 C1           	pop bc
 391+ 9417 10 F9        	djnz 5B
 392+ 9419 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 941C 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 941D 22 9D 85     	ld (Posicion_actual),hl
 395+ 9420 CD 5D 95     	call Genera_coordenadas
 396+ 9423 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9425
 398+ 9425              ; ---------- ---------- ----------
 399+ 9425
 400+ 9425              ; Movemos, no hay recolocación.
 401+ 9425
 402+ 9425 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 9428 CD 2C 94     	call DESPLZ_IZQ
 404+ 942B C9           2 ret
 405+ 942C
 406+ 942C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 942C              ;
 408+ 942C              ;	22/9/22
 409+ 942C
 410+ 942C              DESPLZ_IZQ
 411+ 942C
 412+ 942C CD 3B 94     	call Desplaza_izquierda
 413+ 942F CD 87 94         call modifica_parametros_1er_DESPLZ
 414+ 9432 CD AF 94     	call Ciclo_completo_2
 415+ 9435 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9438 CB BE        	res 7,(hl)
 417+ 943A C9           	ret
 418+ 943B
 419+ 943B              Desplaza_izquierda
 420+ 943B
 421+ 943B 3A B0 85     	ld a,(Vel_left)
 422+ 943E 47           	ld b,a
 423+ 943F 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9442 23           1 inc hl
 425+ 9443 23           	inc hl
 426+ 9444 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9446 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9449 CD A9 87     	call Extrae_address
 429+ 944C 22 9F 85     	ld (Puntero_objeto),hl
 430+ 944F
 431+ 944F              ; Modifica (Puntero_DESPLZ_der).
 432+ 944F
 433+ 944F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 944F              ; Cuántos movimientos hemos hecho ??
 435+ 944F              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 944F
 437+ 944F 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9452 EB           	ex de,hl
 439+ 9453 A7           	and a
 440+ 9454 ED 52        	sbc hl,de
 441+ 9456 CB 3D        	srl l
 442+ 9458 3E 08        6 ld a,8
 443+ 945A 95           	sub l
 444+ 945B 30 1E        	jr nc,3F
 445+ 945D
 446+ 945D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 945D              ; B="0".
 448+ 945D
 449+ 945D 04           4 inc b
 450+ 945E 3C           	inc a
 451+ 945F 20 FC        	jr nz,4B
 452+ 9461 78           	ld a,b
 453+ 9462 08           	ex af,af
 454+ 9463 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9466 23           5 inc hl
 456+ 9467 23           	inc hl
 457+ 9468 10 FC        	djnz 5B
 458+ 946A 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 946D CD A9 87     	call Extrae_address
 460+ 9470 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9473
 462+ 9473              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9473              ; _(Posicion_actual).
 464+ 9473
 465+ 9473 21 9D 85     	ld hl,Posicion_actual
 466+ 9476 35           	dec (hl)
 467+ 9477 08           	ex af,af
 468+ 9478 6F           	ld l,a
 469+ 9479 18 DD        	jr 6B
 470+ 947B
 471+ 947B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 947B
 473+ 947B 47           3 ld b,a
 474+ 947C 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 947F 23           2 inc hl
 476+ 9480 23           	inc hl
 477+ 9481 10 FC        	djnz 2B
 478+ 9483 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9486 C9           8 ret
 480+ 9487
 481+ 9487              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9487              ;
 483+ 9487              ;	modifica_parametros_1er_DESPLZ
 484+ 9487              ;
 485+ 9487              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9487              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9487              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9487
 489+ 9487 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 948A A7           	and a
 491+ 948B 20 1E        	jr nz,1F
 492+ 948D 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 948E 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9491 21 9C 85     	ld hl,Columns
 495+ 9494 34           	inc (hl)
 496+ 9495 3A AF 85     	ld a,(Cuad_objeto)
 497+ 9498 E6 01        	and 1
 498+ 949A 20 0F        	jr nz,1F
 499+ 949C 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 949F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 94A0 22 9D 85     	ld (Posicion_actual),hl
 502+ 94A3 CD 5D 95     	call Genera_coordenadas
 503+ 94A6 CD 02 95     	call Dec_CTRL_DESPLZ
 504+ 94A9 18 03        	jr 2F
 505+ 94AB CD 02 95     1 call Dec_CTRL_DESPLZ
 506+ 94AE C9           2 ret
 507+ 94AF
 508+ 94AF              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 94AF
 510+ 94AF 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 94B2 FE F7        	cp $f7
 512+ 94B4 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 94B6 30 2C        	jr nc,3F
 514+ 94B8
 515+ 94B8              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 94B8
 517+ 94B8 06 00        	ld b,0
 518+ 94BA 04           4 inc b
 519+ 94BB 3C           	inc a
 520+ 94BC FE F7        	cp $f7
 521+ 94BE 20 FA        	jr nz,4B
 522+ 94C0 3E FF        	ld a,$ff
 523+ 94C2 90           	sub b
 524+ 94C3 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 94C6 18 1C        	jr 3F
 526+ 94C8
 527+ 94C8              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 94C8
 529+ 94C8 21 9C 85     1 ld hl,Columns
 530+ 94CB 35           	dec (hl)
 531+ 94CC AF           	xor a
 532+ 94CD 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 94D0 3A AF 85     	ld a,(Cuad_objeto)
 534+ 94D3 E6 01        	and 1
 535+ 94D5 28 0A        	jr z,2F
 536+ 94D7 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 94DA 2B           	dec hl
 538+ 94DB 22 9D 85     	ld (Posicion_actual),hl
 539+ 94DE CD 5D 95     	call Genera_coordenadas
 540+ 94E1
 541+ 94E1              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 94E1
 543+ 94E1 CD D3 87     2 call Inicia_puntero_objeto_izq
 544+ 94E4 C9           3 ret
 545+ 94E5
 546+ 94E5              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 94E5              ;
 548+ 94E5              ;	19/10/22
 549+ 94E5              ;
 550+ 94E5              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 94E5              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 94E5
 553+ 94E5 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 94E8 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 94EA C9           	ret
 556+ 94EB
 557+ 94EB              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 94EB              ;
 559+ 94EB              ;	19/10/22
 560+ 94EB              ;
 561+ 94EB              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 94EB              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 94EB
 564+ 94EB 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 94EE FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 94F0 C9           	ret
 567+ 94F1
 568+ 94F1              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 94F1              ;
 570+ 94F1              ;	24/7/22
 571+ 94F1              ;
 572+ 94F1              ;	Inc_CTRL_DESPLZ
 573+ 94F1              ;
 574+ 94F1              ;
 575+ 94F1              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 94F1
 577+ 94F1 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 94F4 3A B1 85     	ld a,(Vel_right)
 579+ 94F7 A7           	and a
 580+ 94F8 28 06        	jr z,1F
 581+ 94FA 47           	ld b,a
 582+ 94FB 34           3 inc (hl)
 583+ 94FC 10 FD        	djnz 3B
 584+ 94FE 18 01        	jr 2F
 585+ 9500 34           1 inc (hl)
 586+ 9501 C9           2 ret
 587+ 9502
 588+ 9502              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9502              ;
 590+ 9502              ;	5/2/23
 591+ 9502              ;
 592+ 9502              ;	Dec_CTRL_DESPLZ
 593+ 9502              ;
 594+ 9502              ;
 595+ 9502              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9502
 597+ 9502 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9505 3A B0 85     	ld a,(Vel_left)
 599+ 9508 A7           	and a
 600+ 9509 28 06        	jr z,1F
 601+ 950B 47           	ld b,a
 602+ 950C 35           3 dec (hl)
 603+ 950D 10 FD        	djnz 3B
 604+ 950F 18 01        	jr 2F
 605+ 9511 35           1 dec (hl)
 606+ 9512 C9           2 ret
 607+ 9513
 608+ 9513              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9513
 610+ 9513 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9516 01 1F 00     	ld bc,31
 612+ 9519 A7           	and a
 613+ 951A ED 4A        	adc hl,bc
 614+ 951C 22 9D 85     	ld (Posicion_actual),hl
 615+ 951F 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9522 CB C6        	set 0,(hl)
 617+ 9524 C9           	ret
 618+ 9525
 619+ 9525              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9525
 621+ 9525 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9528 01 1F 00     	ld bc,31
 623+ 952B A7           	and a
 624+ 952C ED 42        	sbc hl,bc
 625+ 952E 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9531 21 C9 85     	ld hl,Ctrl_0
 627+ 9534 CB CE        	set 1,(hl)
 628+ 9536 C9           	ret
 629+ 9537
 630+ 9537              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9537
 632+ 9537 24           Reaparece_abajo inc h
 633+ 9538 01 E0 17     	ld bc,$17e0
 634+ 953B A7           	and a
 635+ 953C ED 4A        	adc hl,bc
 636+ 953E 22 9D 85     	ld (Posicion_actual),hl
 637+ 9541 21 C9 85     	ld hl,Ctrl_0
 638+ 9544 CB D6        	set 2,(hl)
 639+ 9546 C9           	ret
 640+ 9547
 641+ 9547              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9547
 643+ 9547 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 954A A7           	and a
 645+ 954B ED 42        	sbc hl,bc
 646+ 954D 22 9D 85     	ld (Posicion_actual),hl
 647+ 9550 21 C9 85     	ld hl,Ctrl_0
 648+ 9553 CB DE        	set 3,(hl)
 649+ 9555 C9           	ret
 650+ 9556
 651+ 9556              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9556
 653+ 9556 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 9559 22 9D 85     	ld (Posicion_actual),hl
 655+ 955C C9           	ret
# file closed: Direcciones.asm
 890  955D              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 955D              ; ------------------------------------------------------------------------
   2+ 955D              ;
   3+ 955D              ;	02/04/23
   4+ 955D              ;
   5+ 955D              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 955D              ;	Fila superior "0", Columna izquierda "0".
   7+ 955D              ;
   8+ 955D              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 955D              ;
  10+ 955D              ;	Modifica: A,BC y DE.
  11+ 955D
  12+ 955D C5           Genera_coordenadas push bc
  13+ 955E E5           	push hl
  14+ 955F D5           	push de
  15+ 9560
  16+ 9560 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9563
  18+ 9563 7D           	ld a,l
  19+ 9564 E6 1F        	and $1f
  20+ 9566 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9569
  22+ 9569 CD 31 92     	call calcula_tercio
  23+ 956C 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 956D
  25+ 956D 1E 00        	ld e,0
  26+ 956F 7D           	ld a,l
  27+ 9570 E6 E0        	and $e0
  28+ 9572 28 01        	jr z,1F
  29+ 9574 04           	inc b
  30+ 9575
  31+ 9575 04           1 inc b
  32+ 9576 05           	dec b
  33+ 9577 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9579              ;														; _ , salimos.
  35+ 9579 1C           3 inc e
  36+ 957A D6 20        	sub 32
  37+ 957C 20 FB        	jr nz,3B
  38+ 957E 10 F5        	djnz 1B
  39+ 9580
  40+ 9580 7B           2 ld a,e
  41+ 9581 32 A2 85     	ld (Coordenada_y),a
  42+ 9584
  43+ 9584 D1           	pop de
  44+ 9585 E1           	pop hl
  45+ 9586 C1           	pop bc
  46+ 9587
  47+ 9587 C9           	ret
  48+ 9588
  49+ 9588              ; ------------------------------------------------------------------------
  50+ 9588              ;	28/03/23
  51+ 9588              ;
  52+ 9588              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9588              ;	Fila superior "0", Columna izquierda "0".
  54+ 9588              ;
  55+ 9588              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9588              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9588              ;
  58+ 9588              ;		DE="$120d"
  59+ 9588              ;
  60+ 9588              ;		D, (Coordenada_X), Columnas, $12
  61+ 9588              ;		E, (Coordenada_y), Filas, $0d
  62+ 9588              ;
  63+ 9588              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9588
  65+ 9588              ;	Modifica: A,BC y DE.
  66+ 9588
  67+ 9588
  68+ 9588              Genera_coordenadas_disparo
  69+ 9588
  70+ 9588              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9588
  72+ 9588 7D           	ld a,l
  73+ 9589 E6 1F        	and $1f
  74+ 958B 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 958C CD 31 92     	call calcula_tercio
  76+ 958F 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9590 1E 00        	ld e,0
  78+ 9592 7D           	ld a,l
  79+ 9593 E6 E0        	and $e0
  80+ 9595 28 01        	jr z,1F
  81+ 9597 04           	inc b
  82+ 9598 1C           1 inc e
  83+ 9599 D6 20        	sub 32
  84+ 959B 20 FB        	jr nz,1B
  85+ 959D 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 959F C9           	ret
  87+ 95A0
# file closed: Genera_coordenadas.asm
 891  95A0              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 95A0
   2+ 95A0
   3+ 95A0              ;   11/8/22
   4+ 95A0              ;
   5+ 95A0              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 95A0              ;
   7+ 95A0              ;   Mov_obj.asm
   8+ 95A0              ;
   9+ 95A0              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 95A0              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 95A0              ;
  12+ 95A0              ;   Codificación:
  13+ 95A0              ;
  14+ 95A0              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 95A0
  16+ 95A0              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 95A0
  18+ 95A0 02 40 00     Arriba db 2,%01000000,0
  19+ 95A3 02 80 00     Abajo db 2,%10000000,0
  20+ 95A6 02 20 00     Derecha db 2,%00100000,0
  21+ 95A9 02 10 00     Izquierda db 2,%00010000,0
  22+ 95AC 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 95B0 60 42 60 40
  22+ 95B4 63
  23+ 95B5 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 95B9 22 A3 80 A0
  24+ 95BD 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 95C1 84 A0 83 A0
  25+ 95C5 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 95C9 80 A3 22 A0
  26+ 95CD 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 95D1 40 60 42 60
  27+ 95D5 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 95D9
  29+ 95D9 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 95DD 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 95E1 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 95E5 84 00
  32+ 95E7 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 95EB 84 00
  33+ 95ED 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 95F1 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 95F5 1F 1F 1F 1F
  35+ 95F9 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 95FD 1F 1F 1F 1F
  35+ 9601 1F
  36+ 9602 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9606 2F 2F 2F 2F
  36+ 960A 2F 2F
  37+ 960C 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9610 2F 2F 00
  38+ 9613
  39+ 9613              ; ----- ----- ----- ----- -----
  40+ 9613
  41+ 9613 F1 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9615 ED 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9617 A9 95        Indice_mov_Izquierda defw Izquierda
  44+ 9619 A6 95        Indice_mov_Derecha defw Derecha
  45+ 961B A3 95        Indice_mov_Abajo defw Abajo
  46+ 961D A0 95        Indice_mov_Arriba defw Arriba
  47+ 961F DD 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9621 E1 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9623 D9 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9625 E7 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9627 AC 95        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9629              ; ----- ----- ----- ----- -----
  53+ 9629
  54+ 9629 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 962C A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 962D 28 02            jr z,1F
  57+ 962F 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9631 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9634 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9636 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9639              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9639 2A CD 85         ld hl,(Puntero_mov)
  63+ 963C 7E               ld a,(hl)
  64+ 963D 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9640 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9641 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9644
  68+ 9644 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 9647 A7               and a
  70+ 9648 20 0C            jr nz,12F
  71+ 964A 2A CD 85         ld hl,(Puntero_mov)
  72+ 964D 7E               ld a,(hl)
  73+ 964E A7               and a
  74+ 964F 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9651 E6 0F            and $0f
  76+ 9653 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9656              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9656 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 9659 CB 7E            bit 7,(hl)
  80+ 965B 28 03            jr z,2F
  81+ 965D CD 4F 92         call Mov_down
  82+ 9660 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9663 CB 76            bit 6,(hl)
  84+ 9665 28 03            jr z,3F
  85+ 9667 CD 7D 92         call Mov_up
  86+ 966A 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 966D CB 6E            bit 5,(hl)
  88+ 966F 28 03            jr z,4F
  89+ 9671 CD AB 92         call Mov_right
  90+ 9674 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 9677 CB 66            bit 4,(hl)
  92+ 9679 28 03            jr z,5F
  93+ 967B CD C9 93         call Mov_left
  94+ 967E
  95+ 967E              ; ---------- --------- --------- ---------- ----------
  96+ 967E
  97+ 967E 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9681 A7               and a
  99+ 9682 28 07            jr z,6F
 100+ 9684 3D               dec a
 101+ 9685 32 D1 85         ld (Repetimos_db),a
 102+ 9688 28 01            jr z,6f
 103+ 968A C9           11 ret
 104+ 968B 21 CF 85     6 ld hl,Contador_db_mov
 105+ 968E 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 968F 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9692 23               inc hl
 108+ 9693 22 CD 85         ld (Puntero_mov),hl
 109+ 9696 18 F2            jr 11B
 110+ 9698 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 969B 3A D0 85         ld a,(Incrementa_puntero)
 112+ 969E 47               ld b,a
 113+ 969F 23           8 inc hl
 114+ 96A0 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 96A2 5E               ld e,(hl)
 116+ 96A3 23               inc hl
 117+ 96A4 56               ld d,(hl)
 118+ 96A5 EB               ex de,hl
 119+ 96A6 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 96A9 18 DF            jr 11B
 121+ 96AB
 122+ 96AB              ; ---------- --------- --------- ---------- ----------
 123+ 96AB              ;
 124+ 96AB              ;   11/8/22
 125+ 96AB              ;
 126+ 96AB              ;   Prepara_Puntero_mov
 127+ 96AB
 128+ 96AB E5           Prepara_Puntero_mov push hl
 129+ 96AC D5               push de
 130+ 96AD 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 96B0 5E               ld e,(hl)
 132+ 96B1 23               inc hl
 133+ 96B2 56               ld d,(hl)
 134+ 96B3 EB               ex de,hl
 135+ 96B4 22 CD 85         ld (Puntero_mov),hl
 136+ 96B7 D1               pop de
 137+ 96B8 E1               pop hl
 138+ 96B9 C9               ret
 139+ 96BA
 140+ 96BA              ; ---------- --------- --------- ---------- ----------
 141+ 96BA              ;
 142+ 96BA              ;   11/8/22
 143+ 96BA              ;
 144+ 96BA              ;   Reinicia_el_movimiento
 145+ 96BA
 146+ 96BA CD AB 96     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 96BD AF               xor a
 148+ 96BE 32 CF 85         ld (Contador_db_mov),a
 149+ 96C1 32 D0 85         ld (Incrementa_puntero),a
 150+ 96C4 C3 29 96         jp Movimiento
 151+ 96C7 C9               ret
 152+ 96C8              ; ---------- --------- --------- ---------- ----------
 153+ 96C8
 154+ 96C8
 155+ 96C8
 156+ 96C8
 157+ 96C8
 158+ 96C8
 159+ 96C8
 160+ 96C8
 161+ 96C8
 162+ 96C8
 163+ 96C8
 164+ 96C8
 165+ 96C8
 166+ 96C8
 167+ 96C8
 168+ 96C8
 169+ 96C8
 170+ 96C8
# file closed: Patrones_de_mov.asm
 892  96C8              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 96C8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 96C8              ;
   3+ 96C8              ;	3/1/23
   4+ 96C8              ;
   5+ 96C8              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 96C8
   7+ 96C8              ;	ADC HL,SP	LD (addr),SP
   8+ 96C8              ;	ADD HL,SP	LD SP,(addr)
   9+ 96C8              ;	ADD IX,SP	LD SP,nn
  10+ 96C8              ; 	ADD IY,SP	LD SP,HL
  11+ 96C8              ;				LD SP,IX
  12+ 96C8              ;	DEC SP		LD SP,IY
  13+ 96C8
  14+ 96C8              ;	EX (SP),HL
  15+ 96C8              ;	EX (SP),IX
  16+ 96C8              ;	EX (SP),IY
  17+ 96C8
  18+ 96C8              ;	INC SP
  19+ 96C8
  20+ 96C8
  21+ 96C8                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 893  7FD4
 894  7FD4              	SAVESNA "Pruebas.sna", START
 895  7FD4
 896  7FD4
 897  7FD4
# file closed: Banco_de_pruebas.asm
