# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 4E 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 E8 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 D8 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB E8 96        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad.
 167  85D7
 168  85D7              ; Gestión de ENTIDADES.
 169  85D7
 170  85D7 00 00        Puntero_store_entidades defw 0
 171  85D9 00 00        Puntero_restore_entidades defw 0
 172  85DB 00 00        Indice_restore defw 0
 173  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 174  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 175  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 176  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 177  85DF              ;														; _ (Numero_de_malotes)="0".
 178  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 179  85E1              ;														; _variable para almacenar lo posición del puntero_
 180  85E1              ; 														; _de pila, SP.
 181  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 182  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 183  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 184  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 185  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 186  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 187  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 188  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 189  85E7
 190  85E7              ;---------------------------------------------------------------------------------------------------------------
 191  85E7
 192  85E7              ; Gestión de Disparos.
 193  85E7
 194  85E7 00           Numero_de_disparotes db 0
 195  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 196  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 197  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 198  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 199  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 200  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 201  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 202  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 203  85EF              ;														; _produzca colisión.
 204  85EF 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 205  85F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 206  85F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 207  85F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 208  85F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 209  85F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 210  85F7
 211  85F7              ;---------------------------------------------------------------------------------------------------------------
 212  85F7
 213  85F7              ; Relojes y temporizaciones.
 214  85F7
 215  85F7 01           Habilita_disparo_Amadeus db 1
 216  85F8 10           Temporizacion_disparo_Amadeus db $10
 217  85F9
 218  85F9
 219  85F9              ;---------------------------------------------------------------------------------------------------------------
 220  85F9
 221  85F9              ; Gestión de FRAMES.
 222  85F9
 223  85F9 00           Switch db 0
 224  85FA
 225  85FA              ; Variables de Raster y localización en pantalla.
 226  85FA
 227  85FA 00 FF        Temp_Raster defw $ff00
 228  85FC
 229  85FC              ; Rutina principal *************************************************************************************************************************************************************************
 230  85FC              ;
 231  85FC              ;	14/11/22
 232  85FC
 233  85FC 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 234  85FF
 235  85FF 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 236  8601 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 237  8603 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 238  8605 F3           	DI
 239  8606
 240  8606 3E 07        	ld a,%00000111
 241  8608 CD FC 92     	call Cls
 242  860B
 243  860B              ;	call Pinta_FILAS
 244  860B
 245  860B CD AD 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 246  860E
 247  860E 21 DD 85     	ld hl,Numero_de_entidades
 248  8611 46           	ld b,(hl)
 249  8612 04           	inc b
 250  8613 05           	dec b
 251  8614 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 252  8616
 253  8616              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 254  8616              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 255  8616              ;	Pintamos el resto de entidades:
 256  8616
 257  8616 CD 94 87     	call Inicia_punteros_de_entidades
 258  8619
 259  8619              ;	INICIA ENTIDADES!!!!!
 260  8619
 261  8619 C5           1 push bc  												; Guardo el contador de entidades.
 262  861A CD EE 87      	call Inicia_Puntero_objeto
 263  861D CD 4C 8D     	call Draw
 264  8620 CD A0 7F     	call Guarda_foto_registros
 265  8623 CD 36 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 266  8626 C1           	pop bc
 267  8627 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 268  8629
 269  8629              ; 	INICIA AMADEUS!!!!!
 270  8629
 271  8629 CD 89 88     3 call Restore_Amadeus
 272  862C CD EE 87     	call Inicia_Puntero_objeto
 273  862F CD 4C 8D     	call Draw
 274  8632 CD A0 7F     	call Guarda_foto_registros
 275  8635 CD 9B 88     	call Store_Amadeus
 276  8638
 277  8638              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 278  8638
 279  8638 CD AA 87     	call Inicia_Puntero_Disparo_Entidades
 280  863B CD B1 87     	call Inicia_Puntero_Disparo_Amadeus
 281  863E
 282  863E              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 283  863E
 284  863E CD 94 87     	call Inicia_punteros_de_entidades
 285  8641 CD 77 88     	call Restore_Primera_entidad
 286  8644
 287  8644 3A DD 85     	ld a,(Numero_de_entidades)
 288  8647 3C           	inc a
 289  8648 32 DE 85     	ld (Numero_de_malotes),a
 290  864B
 291  864B FB           2 ei
 292  864C 18 FD        	jr 2B
 293  864E
 294  864E              ; -----------------------------------------------------------------------------------
 295  864E
 296  864E              Frame
 297  864E
 298  864E              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 299  864E              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 300  864E
 301  864E 3E 02            ld a,2
 302  8650 D3 FE            out ($fe),a
 303  8652 CD 50 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 304  8655 CD 89 90     	call Extrae_foto_disparos
 305  8658 3E 01            ld a,1
 306  865A D3 FE            out ($fe),a
 307  865C
 308  865C              ; ----------------------------------------------------------------------
 309  865C              ; Relojes y temporizaciones.
 310  865C
 311  865C 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 312  865F A7           	and a
 313  8660 20 12        	jr nz,8F
 314  8662
 315  8662 21 F8 85     	ld hl,Temporizacion_disparo_Amadeus
 316  8665 35           	dec (hl)
 317  8666
 318  8666 34           	inc (hl)
 319  8667 35           	dec (hl)
 320  8668 20 0A        	jr nz,8F
 321  866A
 322  866A 3E 01        	ld a,1
 323  866C 32 F7 85     	ld (Habilita_disparo_Amadeus),a
 324  866F 3E 10        	ld a,$10
 325  8671 32 F8 85     	ld (Temporizacion_disparo_Amadeus),a
 326  8674
 327  8674              ;	Existe colisión?????
 328  8674
 329  8674 CD EA 8C     8 call Selector_de_impactos
 330  8677
 331  8677              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 332  8677              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 333  8677              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 334  8677
 335  8677 AF           	xor a
 336  8678 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 337  867B
 338  867B CD 94 87     	call Inicia_punteros_de_entidades
 339  867E CD 77 88     	call Restore_Primera_entidad
 340  8681
 341  8681 AF           	xor a
 342  8682 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 343  8685
 344  8685 CD 6A 8B     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 345  8688 21 00 70     	ld hl,Album_de_fotos
 346  868B 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 347  868E              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 348  868E 3A DD 85         ld a,(Numero_de_entidades)
 349  8691 47               ld b,a
 350  8692 A7           	and a
 351  8693 28 3A        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 352  8695
 353  8695              ; ----- ----- ----- ----- -----
 354  8695
 355  8695              ; Código que ejecutamos con cada entidad:
 356  8695
 357  8695              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 358  8695              ; _con las coordenadas de la entidad almacenada en DRAW.
 359  8695
 360  8695 3A D6 85     2 ld a,(Ctrl_1)
 361  8698 CB 57        	bit 2,a
 362  869A 28 0D        	jr z,7F
 363  869C
 364  869C 2A EF 85     	ld hl,(Coordenadas_disparo_certero)
 365  869F EB           	ex de,hl 										; D contiene la coordenada_y del disparo.
 366  86A0              ;													; E contiene la coordenada_X del disparo.
 367  86A0 2A A1 85     	ld hl,(Coordenada_X) 							; L Coordenada_x de la entidad.
 368  86A3              ;													; H Coordenado_y de la entidad.
 369  86A3 A7           	and a
 370  86A4 ED 52        	sbc hl,de
 371  86A6
 372  86A6 CD 21 8D     	call Determina_resultado_comparativa
 373  86A9
 374  86A9
 375  86A9
 376  86A9
 377  86A9
 378  86A9
 379  86A9
 380  86A9 3A B4 85     7 ld a,(Impacto)
 381  86AC A7           	and a
 382  86AD 20 FE        	jr nz,$
 383  86AF
 384  86AF              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 385  86AF
 386  86AF C5           	push bc
 387  86B0 CD FF 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 388  86B3
 389  86B3 3A C9 85     	ld a,(Ctrl_0)
 390  86B6 CB 67        	bit 4,a
 391  86B8 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 392  86BA
 393  86BA              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 394  86BA              ; Las entidades sólo generan disparo cuando se mueven.
 395  86BA              ; 16/02/23.
 396  86BA              ; [[[
 397  86BA CD F0 88     	call Detecta_disparo_entidad
 398  86BD              ; ]]]
 399  86BD CD 5B 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 400  86C0
 401  86C0 21 C9 85     1 ld hl,Ctrl_0
 402  86C3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 403  86C5 AF           	xor a
 404  86C6 32 CA 85     	ld (Obj_dibujado),a
 405  86C9
 406  86C9 CD 36 88     6 call Store_Restore_entidades
 407  86CC C1           	pop bc
 408  86CD 10 C6        	djnz 2B
 409  86CF
 410  86CF              ; Tras la gestión de las entidades, ... AMADEUS.
 411  86CF
 412  86CF CD 89 88     4 call Restore_Amadeus
 413  86D2
 414  86D2              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 415  86D2
 416  86D2 3A B4 85     	ld a,(Impacto)
 417  86D5 A7           	and a
 418  86D6 20 FE        	jr nz,$
 419  86D8
 420  86D8              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 421  86D8
 422  86D8 CD 2C 87     	call Mov_Amadeus
 423  86DB
 424  86DB 3A C9 85     	ld a,(Ctrl_0)
 425  86DE CB 67        	bit 4,a
 426  86E0 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 427  86E2
 428  86E2 CD 5B 87     	call Guarda_foto_entidad_a_pintar
 429  86E5
 430  86E5 21 C9 85     3 ld hl,Ctrl_0
 431  86E8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 432  86EA AF           	xor a
 433  86EB 32 CA 85     	ld (Obj_dibujado),a
 434  86EE
 435  86EE CD 9B 88     	call Store_Amadeus
 436  86F1
 437  86F1 CD 88 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 438  86F4
 439  86F4              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 440  86F4
 441  86F4 CD B8 87     	call Calcula_numero_de_malotes
 442  86F7 CD D0 87     	call Calcula_numero_de_disparotes
 443  86FA
 444  86FA 3E 04        	ld a,4
 445  86FC D3 FE        	out ($fe),a
 446  86FE C9           	ret
 447  86FF
 448  86FF              ; --------------------------------------------------------------------------------------------------------------
 449  86FF              ;
 450  86FF              ;	27/03/23
 451  86FF
 452  86FF              Mov_obj
 453  86FF
 454  86FF              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 455  86FF
 456  86FF AF           	xor a
 457  8700 32 CA 85     	ld (Obj_dibujado),a
 458  8703 CD 65 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 459  8706              ;														; Obj_dibujado="0".
 460  8706              ; Movemos Entidades malignas.
 461  8706
 462  8706 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 463  8709 24           	inc h                                               ; Salimos de la rutina.
 464  870A 25           	dec h
 465  870B C8           	ret z
 466  870C
 467  870C CD EA 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 468  870F
 469  870F 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 470  8712 CB 67        	bit 4,a
 471  8714 C8           	ret z
 472  8715
 473  8715              ; Ha habido desplazamiento de la entidad maligna.
 474  8715              ; Ha llegado a zona de AMADEUS ???
 475  8715
 476  8715 3A A2 85     	ld a,(Coordenada_y)
 477  8718 FE 14        	cp $14
 478  871A D4 B9 8A     	call nc, Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 479  871D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 480  871D
 481  871D              ; ---------
 482  871D
 483  871D 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 484  871F 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 485  8722 CD 65 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 486  8725 CD 7C 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 487  8728 CD 4B 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 488  872B C9           	ret													; _de la misma.
 489  872C
 490  872C              ; --------------------------------------------------------------------------------------------------------------
 491  872C              ;
 492  872C              ;	29/1/23
 493  872C
 494  872C              Mov_Amadeus
 495  872C
 496  872C AF           	xor a
 497  872D 32 CA 85     	ld (Obj_dibujado),a
 498  8730 CD 65 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 499  8733              ;														; Obj_dibujado="0".
 500  8733              ; Movemos Amadeus.
 501  8733
 502  8733 CD C1 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 503  8736 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 504  8739 CB 67        	bit 4,a
 505  873B C8           	ret z
 506  873C
 507  873C              ; ---------
 508  873C
 509  873C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 510  873E 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 511  8741 CD 65 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 512  8744 CD 7C 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 513  8747 CD 4B 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 514  874A C9           	ret													; _de la nave.
 515  874B
 516  874B              ; --------------------------------------------------------------------------------------------------------------
 517  874B              ;
 518  874B              ;	31/01/23
 519  874B              ;
 520  874B              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 521  874B
 522  874B              Guarda_foto_entidad_a_borrar
 523  874B
 524  874B CD 26 90     	call Prepara_draw
 525  874E CD 60 8F     	call calcula_CColumnass
 526  8751 CD 97 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 527  8754 CD EC 8F     	call Define_rutina_de_impresion
 528  8757 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 529  875A C9           	ret
 530  875B
 531  875B              ; --------------------------------------------------------------------------------------------------------------
 532  875B              ;
 533  875B              ;	31/01/23
 534  875B              ;
 535  875B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 536  875B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 537  875B
 538  875B              Guarda_foto_entidad_a_pintar
 539  875B
 540  875B CD 88 87     	call Repone_pintar
 541  875E CD 4C 8D     	call Draw
 542  8761 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 543  8764 C9           	ret
 544  8765
 545  8765              ; --------------------------------------------------------------------------------------------------------------
 546  8765              ;
 547  8765              ;
 548  8765
 549  8765 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 550  8768 3A CA 85     	ld a,(Obj_dibujado)
 551  876B A7           	and a
 552  876C 28 05        	jr z,1F
 553  876E 11 BF 85     	ld de,Variables_de_pintado
 554  8771 18 03        	jr 2F
 555  8773 11 B5 85     1 ld de,Variables_de_borrado
 556  8776 01 08 00     2 ld bc,8
 557  8779 ED B0        	ldir
 558  877B C9           	ret
 559  877C
 560  877C              ; --------------------------------------------------------------------------------------------------------------
 561  877C
 562  877C 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 563  877F 11 9B 85     	ld de,Filas
 564  8782 01 08 00     	ld bc,8
 565  8785 ED B0        	ldir
 566  8787 C9           	ret
 567  8788
 568  8788 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 569  878B 11 9B 85     	ld de,Filas
 570  878E 01 08 00     	ld bc,8
 571  8791 ED B0        	ldir
 572  8793 C9           	ret
 573  8794
 574  8794              ; *************************************************************************************************************************************************************
 575  8794              ;
 576  8794              ; 8/1/23
 577  8794              ;
 578  8794              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 579  8794              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 580  8794              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 581  8794
 582  8794              ; Destruye HL y DE !!!!!
 583  8794
 584  8794              Inicia_punteros_de_entidades
 585  8794
 586  8794 21 68 84     	ld hl,Indice_de_entidades
 587  8797 CD E8 87         call Extrae_address
 588  879A 22 D7 85         ld (Puntero_store_entidades),hl
 589  879D 21 6A 84     	ld hl,Indice_de_entidades+2
 590  87A0 22 DB 85     	ld (Indice_restore),hl
 591  87A3 CD E8 87     	call Extrae_address
 592  87A6 22 D9 85     	ld (Puntero_restore_entidades),hl
 593  87A9 C9               ret
 594  87AA
 595  87AA              ; *************************************************************************************************************************************************************
 596  87AA              ;
 597  87AA              ; 8/1/23
 598  87AA              ;
 599  87AA              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 600  87AA
 601  87AA 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 602  87AD 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 603  87B0 C9           	ret
 604  87B1 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 605  87B4 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 606  87B7 C9           	ret
 607  87B8
 608  87B8              ; -------------------------------------------------------------------------------------------------------------
 609  87B8              ;
 610  87B8              ; 28/2/23
 611  87B8              ;
 612  87B8
 613  87B8              Calcula_numero_de_malotes
 614  87B8
 615  87B8 21 00 70     	ld hl,Album_de_fotos
 616  87BB EB           	ex de,hl
 617  87BC 2A E3 85     	ld hl,(Stack_snapshot)
 618  87BF
 619  87BF 06 00        	ld b,0
 620  87C1 7D           	ld a,l
 621  87C2 93           	sub e
 622  87C3 28 07        	jr z,1F
 623  87C5
 624  87C5              ; Nº de malotes no es "0".
 625  87C5
 626  87C5 D6 06        2 sub 6
 627  87C7 04           	inc b
 628  87C8 A7           	and a
 629  87C9 20 FA        	jr nz,2B
 630  87CB 78           	ld a,b
 631  87CC
 632  87CC 32 DE 85     1 ld (Numero_de_malotes),a
 633  87CF C9           	ret
 634  87D0
 635  87D0              ; -------------------------------------------------------------------------------------------------------------
 636  87D0              ;
 637  87D0              ; 28/2/23
 638  87D0              ;
 639  87D0
 640  87D0              Calcula_numero_de_disparotes
 641  87D0
 642  87D0 21 60 70     	ld hl,Album_de_fotos_disparos
 643  87D3 EB           	ex de,hl
 644  87D4 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 645  87D7
 646  87D7 06 00        	ld b,0
 647  87D9 7D           	ld a,l
 648  87DA 93           	sub e
 649  87DB 28 07        	jr z,1F
 650  87DD
 651  87DD              ; Nº de malotes no es "0".
 652  87DD
 653  87DD D6 06        2 sub 6
 654  87DF 04           	inc b
 655  87E0 A7           	and a
 656  87E1 20 FA        	jr nz,2B
 657  87E3 78           	ld a,b
 658  87E4
 659  87E4 32 E7 85     1 ld (Numero_de_disparotes),a
 660  87E7 C9           	ret
 661  87E8              ; *************************************************************************************************************************************************************
 662  87E8              ;
 663  87E8              ; 20/10/22
 664  87E8              ;
 665  87E8              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 666  87E8              ;
 667  87E8              ; Destruye el puntero y DE !!!!!
 668  87E8
 669  87E8 5E           Extrae_address ld e,(hl)
 670  87E9 23           	inc hl
 671  87EA 56           	ld d,(hl)
 672  87EB 2B           	dec hl
 673  87EC EB           	ex de,hl
 674  87ED C9           	ret
 675  87EE
 676  87EE              ; *************************************************************************************************************************************************************
 677  87EE              ;
 678  87EE              ;	7/2/23
 679  87EE              ;
 680  87EE              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 681  87EE              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 682  87EE              ;
 683  87EE              ;   Destruye HL y BC !!!!!,
 684  87EE              ;
 685  87EE              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 686  87EE              ;					"0" ..... Izquierda.
 687  87EE
 688  87EE              Inicia_Puntero_objeto
 689  87EE
 690  87EE 3A AF 85     	ld a,(Cuad_objeto)
 691  87F1 E6 01        	and 1
 692  87F3 F5           	push af
 693  87F4 CC 12 88     	call z,Inicia_puntero_objeto_izq
 694  87F7 F1           	pop af
 695  87F8 28 2B        	jr z,1F
 696  87FA CD FF 87     	call Inicia_puntero_objeto_der
 697  87FD 18 26        	jr 1F
 698  87FF
 699  87FF              ; Arrancamos desde la parte izquierda de la pantalla.
 700  87FF              ; Iniciamos (Indice_Sprite_der).
 701  87FF
 702  87FF 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 703  8802 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 704  8805 CD E8 87     	call Extrae_address
 705  8808 22 9F 85     	ld (Puntero_objeto),hl
 706  880B
 707  880B 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 708  880E              ;	call Extrae_address
 709  880E 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 710  8811 C9           	ret
 711  8812
 712  8812              ; Arrancamos desde la parte derecha de la pantalla.
 713  8812              ; Iniciamos (Indice_Sprite_izq).
 714  8812
 715  8812 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 716  8815 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 717  8818 CD E8 87     	call Extrae_address
 718  881B 22 9F 85     	ld (Puntero_objeto),hl
 719  881E
 720  881E 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 721  8821              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 722  8821 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 723  8824 C9           	ret
 724  8825
 725  8825              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 726  8825
 727  8825 21 38 83     1 ld hl,Amadeus
 728  8828 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 729  882C B7 ED 42     	sub hl,bc
 730  882F C0           	ret nz
 731  8830 21 C9 85     	ld hl,Ctrl_0
 732  8833 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 733  8835 C9           	ret 												; _de nuestra nave en los extremos.
 734  8836
 735  8836              ; *************************************************************************************************************************************************************
 736  8836              ;
 737  8836              ;	8/1/23
 738  8836              ;
 739  8836              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 740  8836              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 741  8836
 742  8836              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 743  8836              ;	_de la 2ª y 3ª entidad respectivamente.
 744  8836
 745  8836              Store_Restore_entidades
 746  8836
 747  8836 E5           	push hl
 748  8837 D5           	push de
 749  8838 C5            	push bc
 750  8839
 751  8839              ;	STORE !!!!!
 752  8839              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 753  8839
 754  8839 21 9B 85     	ld hl,Filas
 755  883C ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 756  8840 01 3B 00     	ld bc,59
 757  8843 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 758  8845
 759  8845              ; 	Entidad_sospechosa. 20/4/23
 760  8845
 761  8845 3A B4 85     	ld a,(Impacto)
 762  8848 A7           	and a
 763  8849 28 0C        	jr z,1F
 764  884B
 765  884B 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 766  884E 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 767  8851 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 768  8852 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 769  8854 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 770  8857
 771  8857              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 772  8857
 773  8857 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 774  885A 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 775  885D 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 776  8860 01 3B 00     	ld bc,59
 777  8863 ED B0        	ldir
 778  8865
 779  8865              ;	Incrementa RESTORE !!!!!
 780  8865
 781  8865 2A DB 85         ld hl,(Indice_restore)
 782  8868 23           	inc hl
 783  8869 23           	inc hl
 784  886A 22 DB 85     	ld (Indice_restore),hl
 785  886D CD E8 87         call Extrae_address
 786  8870 22 D9 85         ld (Puntero_restore_entidades),hl
 787  8873 C1           	pop bc
 788  8874 D1           	pop de
 789  8875 E1           	pop hl
 790  8876 C9           	ret
 791  8877
 792  8877              ; **************************************************************************************************
 793  8877              ;
 794  8877              ;	29/10/22
 795  8877              ;
 796  8877              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 797  8877
 798  8877 E5           Restore_Primera_entidad push hl
 799  8878 D5           	push de
 800  8879 C5            	push bc
 801  887A 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 802  887D 11 9B 85     	ld de,Filas
 803  8880 01 3B 00     	ld bc,59
 804  8883 ED B0        	ldir
 805  8885 C1           	pop bc
 806  8886 D1           	pop de
 807  8887 E1           	pop hl
 808  8888 C9           	ret
 809  8889
 810  8889              ; **************************************************************************************************
 811  8889              ;
 812  8889              ;	25/01/23
 813  8889              ;
 814  8889              ;	Restore_Amadeus
 815  8889              ;
 816  8889              ;	Cargamos en DRAW los parámetros de Amadeus.
 817  8889              ;
 818  8889
 819  8889 E5           Restore_Amadeus	push hl
 820  888A D5           	push de
 821  888B C5            	push bc
 822  888C 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 823  888F 11 9B 85     	ld de,Filas
 824  8892 01 3B 00     	ld bc,59
 825  8895 ED B0        	ldir
 826  8897 C1           	pop bc
 827  8898 D1           	pop de
 828  8899 E1           	pop hl
 829  889A C9           	ret
 830  889B
 831  889B              ; *************************************************************************************************************************************************************
 832  889B              ;
 833  889B              ;	29/01/23
 834  889B              ;
 835  889B              ;	Store_Amadeus
 836  889B              ;
 837  889B              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 838  889B              ;
 839  889B
 840  889B E5           Store_Amadeus push hl
 841  889C D5           	push de
 842  889D C5            	push bc
 843  889E 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 844  88A1 11 74 84     	ld de,Amadeus_db
 845  88A4 01 3B 00     	ld bc,59
 846  88A7 ED B0        	ldir
 847  88A9 C1           	pop bc
 848  88AA D1           	pop de
 849  88AB E1           	pop hl
 850  88AC C9           	ret
 851  88AD
 852  88AD              ; **************************************************************************************************
 853  88AD
 854  88AD              ; Teclado.
 855  88AD
 856  88AD 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 857  88AF DB FE        	in a,($fe)
 858  88B1 E6 01        	and $01
 859  88B3 28 02        	jr z,1f
 860  88B5 18 F6        	jr Pulsa_ENTER
 861  88B7 C9           1 ret
 862  88B8
 863  88B8              ; **************************************************************************************************
 864  88B8              ;
 865  88B8              ; Temporización.
 866  88B8
 867  88B8              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 868  88B8              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 869  88B8              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 870  88B8              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 871  88B8
 872  88B8              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 873  88B8              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 874  88B8              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 875  88B8
 876  88B8              ; A partir de $4f61 no hace falta DELAY.
 877  88B8
 878  88B8              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 879  88B8
 880  88B8 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 881  88BB 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 882  88BC 78           	LD A,B
 883  88BD A7           	AND A
 884  88BE 20 FB        	JR NZ,wait
 885  88C0 C9           	RET
 886  88C1
 887  88C1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 888  88C1              ;
 889  88C1              ;	5/3/23
 890  88C1              ;
 891  88C1              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 892  88C1
 893  88C1              Movimiento_Amadeus
 894  88C1
 895  88C1              ; Disparo.
 896  88C1
 897  88C1 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 898  88C4 A7           	and a
 899  88C5 20 02        	jr nz,1F
 900  88C7 18 0D        	jr 2F
 901  88C9
 902  88C9 AF           1 xor a
 903  88CA 32 F7 85     	ld (Habilita_disparo_Amadeus),a
 904  88CD
 905  88CD 3E F7        	ld a,$f7												; "5" para disparar.
 906  88CF DB FE        	in a,($fe)
 907  88D1 E6 10        	and $10
 908  88D3 CC 2D 89     	call z,Genera_disparo
 909  88D6
 910  88D6 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 911  88D8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 912  88DA E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 913  88DC CC 8A 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 914  88DF 3E F7        	ld a,$f7
 915  88E1 DB FE        	in a,($fe)
 916  88E3 E6 01        	and $01
 917  88E5 C8           	ret z
 918  88E6
 919  88E6 3E F7        	ld a,$f7
 920  88E8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 921  88EA E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 922  88EC CC 6C 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 923  88EF C9           	ret
 924  88F0
 925  88F0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 926  88F0              ;
 927  88F0              ;	Rutina provisional para que los malotes cagen balas.
 928  88F0
 929  88F0 3E 7F        Detecta_disparo_entidad ld a,$7f
 930  88F2 DB FE        	in a,($fe)
 931  88F4 E6 01        	and 1
 932  88F6 C0           	ret nz
 933  88F7 CD 2D 89     	call Genera_disparo
 934  88FA C9           	ret
 935  88FB
 936  88FB              ; Pinta indicadores de FILAS. ------------------------------------------------------
 937  88FB
 938  88FB 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 939  88FE
 940  88FE              ; ----------
 941  88FE 06 20        	ld b,32
 942  8900 E5           2 push hl
 943  8901 C5           	push bc
 944  8902              ; ----------
 945  8902
 946  8902 06 BF        	ld b,$bf
 947  8904 36 80        1 ld (hl),%10000000
 948  8906 CD 32 90     	call NextScan
 949  8909 10 F9        	djnz 1B
 950  890B
 951  890B              ; ----------
 952  890B C1           	pop bc
 953  890C E1           	pop hl
 954  890D 2C           	inc l
 955  890E 10 F0        	djnz 2B
 956  8910              ; ----------
 957  8910
 958  8910 06 03        	ld b,3
 959  8912 21 00 47         ld hl,$4700
 960  8915 CD 1B 89     3 call Bucle_1
 961  8918 10 FB            djnz 3B
 962  891A C9               ret
 963  891B
 964  891B C5           Bucle_1 push bc
 965  891C E5                   push hl
 966  891D D1                   pop de
 967  891E 13                   inc de
 968  891F 01 FF 00             ld bc,255
 969  8922 36 FF                ld (hl),255
 970  8924 ED B0                ldir
 971  8926 23                   inc hl
 972  8927 3E 07                ld a,7
 973  8929 84                   add a,h
 974  892A 67                   ld h,a
 975  892B C1                   pop bc
 976  892C C9                   ret
 977  892D
 978  892D              ; ---------------------------------------------------------------
 979  892D
 980  892D              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 892D              ; ******************************************************************************************************************************************************************************************
   2+ 892D              ;
   3+ 892D              ;   17/04/23
   4+ 892D              ;
   5+ 892D              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 892D              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 892D              ;
   8+ 892D              ;
   9+ 892D              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 892D              ;
  11+ 892D              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 892D              ;               _ hacen las entidades hacia abajo.
  13+ 892D              ;
  14+ 892D              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 892D              ;
  16+ 892D              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 892D              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 892D              ;
  19+ 892D              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 892D              ;           _ la bala.
  21+ 892D              ;
  22+ 892D              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 892D              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 892D              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 892D              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 892D              ;           _ en el momento de generarse la bala)).
  27+ 892D
  28+ 892D              Genera_disparo
  29+ 892D
  30+ 892D              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 892D              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 892D              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 892D              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 892D              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 892D              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 892D              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 892D
  38+ 892D              ; Exclusiones:
  39+ 892D
  40+ 892D 3A D2 85         ld a,(Columnas)
  41+ 8930 47               ld b,a
  42+ 8931 3A 9C 85         ld a,(Columns)
  43+ 8934 B8               cp b
  44+ 8935 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8936
  46+ 8936              ; ----- ----- -----
  47+ 8936
  48+ 8936 3A C9 85         ld a,(Ctrl_0)
  49+ 8939 CB 77            bit 6,a
  50+ 893B 20 08            jr nz,16F
  51+ 893D
  52+ 893D 3A A2 85         ld a,(Coordenada_y)
  53+ 8940 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8942 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8943 18 11            jr 14F
  56+ 8945
  57+ 8945              ; ----- ----- -----
  58+ 8945
  59+ 8945              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  60+ 8945
  61+ 8945 21 F2 83     16 ld hl,ON_Disparo_2A
  62+ 8948 CD E8 87         call Extrae_address
  63+ 894B 24               inc h
  64+ 894C 25               dec h
  65+ 894D 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  66+ 894F
  67+ 894F 11 20 48         ld de,$4820                         ; Si el 1er disparo no ha llegado a este scanline de pantalla,_
  68+ 8952 A7               and a                               ; _ salimos de la rutina, (no se autorizará un 2º disparo de Amadeus).
  69+ 8953 ED 52            sbc hl,de
  70+ 8955 D0               ret nc
  71+ 8956
  72+ 8956              ; ----- ----- -----
  73+ 8956
  74+ 8956 21 00 80     14 ld hl,Indice_disparo
  75+ 8959 3A A3 85         ld a,(CTRL_DESPLZ)
  76+ 895C 4F               ld c,a
  77+ 895D 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  78+ 895F              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  79+ 895F              ;                                            ""        ""       "f9", B="1"
  80+ 895F              ;                                            ""        ""       "fb", B="2"
  81+ 895F              ;                                            ""        ""       "fb", B="3"
  82+ 895F A7               and a
  83+ 8960 28 10            jr z,1F
  84+ 8962 E6 01            and 1
  85+ 8964 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  86+ 8965
  87+ 8965 79               ld a,c
  88+ 8966 16 F9            ld d,$f9
  89+ 8968 23           2 inc hl
  90+ 8969 23               inc hl
  91+ 896A 04               inc b
  92+ 896B BA               cp d
  93+ 896C 28 04            jr z,1F
  94+ 896E 14               inc d
  95+ 896F 14               inc d
  96+ 8970 18 F6            jr 2B
  97+ 8972
  98+ 8972 CD E8 87     1 call Extrae_address
  99+ 8975 E5               push hl
 100+ 8976 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 101+ 8978 DD 21 C5 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 102+ 897C
 103+ 897C              ;	Se cumplen las condiciones necesarias para generar un disparo.
 104+ 897C              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 105+ 897C
 106+ 897C 3A AF 85     	ld a,(Cuad_objeto)
 107+ 897F FE 02            cp 2
 108+ 8981 38 66            jr c,3F
 109+ 8983 28 64            jr z,3F
 110+ 8985
 111+ 8985              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 112+ 8985
 113+ 8985 E6 01            and 1
 114+ 8987 28 30            jr z,4F
 115+ 8989
 116+ 8989              ; 	Estamos en el 3er cuadrante de pantalla.
 117+ 8989              ; 	3er CUAD. ----- ----- ----- ----- -----
 118+ 8989              ;
 119+ 8989              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 120+ 8989              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 121+ 8989              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 122+ 8989
 123+ 8989 2A 9D 85     	ld hl,(Posicion_actual)
 124+ 898C
 125+ 898C              ;   Amadeus o entidad ???.
 126+ 898C
 127+ 898C 3A C9 85         ld a,(Ctrl_0)
 128+ 898F CB 77            bit 6,a
 129+ 8991 28 0A            jr z,8F
 130+ 8993
 131+ 8993              ; 	Dispara Amadeus.
 132+ 8993
 133+ 8993 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 134+ 8995 CD 41 90         call PreviousScan
 135+ 8998 CD 41 90         call PreviousScan
 136+ 899B
 137+ 899B              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 138+ 899B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 139+ 899B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 140+ 899B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 141+ 899B
 142+ 899B 18 11            jr 10F
 143+ 899D
 144+ 899D              ; 	Dispara Entidad.
 145+ 899D
 146+ 899D 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 147+ 89A0              ;                                                   ; Impacto B="$80", no hay impacto.
 148+ 89A0
 149+ 89A0              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 150+ 89A0              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 151+ 89A0
 152+ 89A0 C5               push bc
 153+ 89A1 06 10            ld b,16
 154+ 89A3 CD 32 90     9 call NextScan
 155+ 89A6 10 FB            djnz 9B
 156+ 89A8 C1               pop bc
 157+ 89A9 CD 13 8A         call Ajusta_disparo_parte_izquierda
 158+ 89AC 18 06            jr 17F
 159+ 89AE
 160+ 89AE              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 161+ 89AE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 162+ 89AE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 163+ 89AE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 164+ 89AE
 165+ 89AE CD 13 8A     10 call Ajusta_disparo_parte_izquierda
 166+ 89B1 CD 88 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 167+ 89B4              ;                                                      ; _al generar el disparo.
 168+ 89B4
 169+ 89B4              ; 	LLegados a este punto tendremos:
 170+ 89B4              ;
 171+ 89B4              ;       Puntero_objeto_disparo en IY.
 172+ 89B4              ;       Rutinas_de_impresion en IX.
 173+ 89B4              ;       Puntero_de_impresion en HL.
 174+ 89B4              ;       Impacto/Dirección en BC.
 175+ 89B4
 176+ 89B4 CD 1B 8A     17 call Almacena_disparo
 177+ 89B7 18 52            jr 6F                                             ; RET.
 178+ 89B9
 179+ 89B9              ; 	Estamos en el 4º cuadrante de pantalla.
 180+ 89B9              ; 	4º CUAD. ----- ----- ----- ----- -----
 181+ 89B9              ;
 182+ 89B9              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 183+ 89B9              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 184+ 89B9              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 185+ 89B9
 186+ 89B9 2A 9D 85     4 ld hl,(Posicion_actual)
 187+ 89BC
 188+ 89BC              ;   Amadeus o entidad ???.
 189+ 89BC
 190+ 89BC 3A C9 85         ld a,(Ctrl_0)
 191+ 89BF CB 77            bit 6,a
 192+ 89C1 28 0A            jr z,11F
 193+ 89C3
 194+ 89C3              ; 	Dispara Amadeus.
 195+ 89C3
 196+ 89C3 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 197+ 89C5 CD 41 90         call PreviousScan
 198+ 89C8 CD 41 90         call PreviousScan
 199+ 89CB
 200+ 89CB              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 201+ 89CB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 202+ 89CB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 203+ 89CB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 204+ 89CB
 205+ 89CB 18 11            jr 13F
 206+ 89CD
 207+ 89CD              ; 	Dispara Entidad.
 208+ 89CD
 209+ 89CD 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 210+ 89D0              ;                                                     ; Impacto B="$80", no hay impacto.
 211+ 89D0
 212+ 89D0              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 213+ 89D0              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 214+ 89D0
 215+ 89D0 C5               push bc
 216+ 89D1 06 10            ld b,16
 217+ 89D3 CD 32 90     12 call NextScan
 218+ 89D6 10 FB            djnz 12B
 219+ 89D8 C1               pop bc
 220+ 89D9
 221+ 89D9 CD 0C 8A         call Ajusta_disparo_parte_derecha
 222+ 89DC 18 06            jr 18F
 223+ 89DE
 224+ 89DE              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 225+ 89DE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 226+ 89DE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 227+ 89DE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 228+ 89DE
 229+ 89DE CD 0C 8A     13 call Ajusta_disparo_parte_derecha
 230+ 89E1 CD 88 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 231+ 89E4              ;                                                       ; _al generar el disparo.
 232+ 89E4
 233+ 89E4              ; LLegados a este punto tendremos:
 234+ 89E4              ;
 235+ 89E4              ;       Puntero_objeto_disparo en IY.
 236+ 89E4              ;       Rutinas_de_impresion en IX.
 237+ 89E4              ;       Puntero_de_impresion en HL.
 238+ 89E4              ;       Impacto/Dirección en BC.
 239+ 89E4
 240+ 89E4 CD 1B 8A     18 call Almacena_disparo
 241+ 89E7 18 22            jr 6F                                               ; RET.
 242+ 89E9
 243+ 89E9              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 244+ 89E9
 245+ 89E9 28 11        3 jr z,5F
 246+ 89EB
 247+ 89EB              ; 	1er CUAD. ----- ----- ----- ----- -----
 248+ 89EB              ;
 249+ 89EB              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 250+ 89EB              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 251+ 89EB              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 252+ 89EB              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 253+ 89EB
 254+ 89EB              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 255+ 89EB              ;	   ""        ""       "f9", B="1"
 256+ 89EB              ;	   ""        ""       "fb", B="2"
 257+ 89EB              ; 	   ""        ""       "fb", B="3"
 258+ 89EB
 259+ 89EB 2A 9D 85     	ld hl,(Posicion_actual)
 260+ 89EE CD 32 90     	call NextScan
 261+ 89F1
 262+ 89F1              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 263+ 89F1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 264+ 89F1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 265+ 89F1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 266+ 89F1
 267+ 89F1 CD 13 8A         call Ajusta_disparo_parte_izquierda
 268+ 89F4
 269+ 89F4              ; 	No se produce impacto. B="$80"
 270+ 89F4              ; 	Dirección del proyectil hacia abajo. C="$80"
 271+ 89F4
 272+ 89F4 01 80 80         ld bc,$8080
 273+ 89F7
 274+ 89F7              ; 	LLegados a este punto tendremos:
 275+ 89F7              ;
 276+ 89F7              ;       Puntero_objeto_disparo en IY.
 277+ 89F7              ;       Rutinas_de_impresion en IX.
 278+ 89F7              ;       Puntero_de_impresion en HL.
 279+ 89F7              ;       Impacto/Dirección en BC.
 280+ 89F7
 281+ 89F7 CD 1B 8A         call Almacena_disparo
 282+ 89FA 18 0F            jr 6F                                           ; RET.
 283+ 89FC
 284+ 89FC              ; 	Estamos en el 2º cuadrante de pantalla.
 285+ 89FC              ; 	2º CUAD. ----- ----- ----- ----- -----
 286+ 89FC              ;
 287+ 89FC              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 288+ 89FC              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 289+ 89FC              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 290+ 89FC              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 291+ 89FC
 292+ 89FC 2A 9D 85     5 ld hl,(Posicion_actual)
 293+ 89FF CD 32 90     	call NextScan
 294+ 8A02
 295+ 8A02              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 296+ 8A02              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 297+ 8A02              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 298+ 8A02              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 299+ 8A02
 300+ 8A02 CD 0C 8A         call Ajusta_disparo_parte_derecha
 301+ 8A05
 302+ 8A05              ; 	No se produce impacto. B="$80"
 303+ 8A05              ; 	Dirección del proyectil hacia abajo. C="80"
 304+ 8A05
 305+ 8A05 01 80 80     15 ld bc,$8080
 306+ 8A08
 307+ 8A08              ; 	LLegados a este punto tendremos:
 308+ 8A08              ;
 309+ 8A08              ;       Puntero_objeto_disparo en IY.
 310+ 8A08              ;       Rutinas_de_impresion en IX.
 311+ 8A08              ;       Puntero_de_impresion en HL.
 312+ 8A08              ;       Impacto/Dirección en BC.
 313+ 8A08
 314+ 8A08 CD 1B 8A         call Almacena_disparo
 315+ 8A0B
 316+ 8A0B C9           6 ret
 317+ 8A0C
 318+ 8A0C              ; ----------------------------------------------------------------
 319+ 8A0C              ;
 320+ 8A0C              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 321+ 8A0C              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 322+ 8A0C              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 323+ 8A0C
 324+ 8A0C 78           Ajusta_disparo_parte_derecha ld a,b
 325+ 8A0D FE 02            cp 2
 326+ 8A0F 38 01            jr c,1F
 327+ 8A11 23               inc hl
 328+ 8A12 C9           1 ret
 329+ 8A13
 330+ 8A13 78           Ajusta_disparo_parte_izquierda ld a,b
 331+ 8A14 FE 01        	cp 1
 332+ 8A16 20 01        	jr nz,1F
 333+ 8A18 2B           	dec hl
 334+ 8A19 2B           1 dec hl
 335+ 8A1A C9               ret
 336+ 8A1B
 337+ 8A1B              ; ----------------------------------------------------------------
 338+ 8A1B              ;
 339+ 8A1B              ;   25/02/23
 340+ 8A1B              ;
 341+ 8A1B              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 342+ 8A1B              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 343+ 8A1B              ;
 344+ 8A1B              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 345+ 8A1B              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 346+ 8A1B
 347+ 8A1B              Almacena_disparo
 348+ 8A1B
 349+ 8A1B E5               push hl  										; HL contiene el puntero de impresión.
 350+ 8A1C F1               pop af
 351+ 8A1D 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 352+ 8A1E
 353+ 8A1E 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 354+ 8A1F E6 01            and 1
 355+ 8A21 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 356+ 8A23              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 357+ 8A23              ; 	Dispara AMADEUS.
 358+ 8A23
 359+ 8A23              ;	Comprobamos que a Amadeus aún le quedan disparos.
 360+ 8A23              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 361+ 8A23              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 362+ 8A23              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 363+ 8A23
 364+ 8A23 C5               push bc
 365+ 8A24 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 366+ 8A27 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 367+ 8A2A A7               and a
 368+ 8A2B ED 42            sbc hl,bc
 369+ 8A2D CC B1 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 370+ 8A30 C1               pop bc
 371+ 8A31 28 54            jr z,4F
 372+ 8A33
 373+ 8A33 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 374+ 8A36 23               inc hl
 375+ 8A37 23               inc hl
 376+ 8A38 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 377+ 8A3B              ;                                                   ; _ Disparo_(+1).
 378+ 8A3B 18 18            jr 2F
 379+ 8A3D
 380+ 8A3D              ; Dispara una entidad.
 381+ 8A3D
 382+ 8A3D C5           1 push bc
 383+ 8A3E 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 384+ 8A41 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 385+ 8A44 A7               and a
 386+ 8A45 ED 42            sbc hl,bc
 387+ 8A47 CC AA 87         call z,Inicia_Puntero_Disparo_Entidades
 388+ 8A4A C1               pop bc
 389+ 8A4B 28 3A            jr z,4F
 390+ 8A4D
 391+ 8A4D 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 392+ 8A50 23               inc hl
 393+ 8A51 23               inc hl
 394+ 8A52 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 395+ 8A55              ;                                                   ; _ Disparo_(+1).
 396+ 8A55 CD E8 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 397+ 8A58              ;                                                   ; _ los 8 bytes que definen el disparo:
 398+ 8A58              ;
 399+ 8A58              ;                                                     Puntero_objeto_disparo en IY.
 400+ 8A58              ;                                                     Rutinas_de_impresion en IX.
 401+ 8A58              ;                                                     Puntero_de_impresion en HL.
 402+ 8A58              ;                                                     Impacto/Dirección en BC.
 403+ 8A58
 404+ 8A58 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 405+ 8A59 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 406+ 8A5A 23               inc hl                                          ; _ al siguiente.
 407+ 8A5B A7               and a
 408+ 8A5C 20 C0            jr nz,3B
 409+ 8A5E
 410+ 8A5E 08               ex af,af
 411+ 8A5F ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 412+ 8A63 F9               ld sp,hl
 413+ 8A64
 414+ 8A64 DD E5            push ix                                         ; Rutina de impresión.
 415+ 8A66 F5               push af                                         ; Puntero de impresión.
 416+ 8A67 FD E5            push iy                                         ; Puntero objeto.
 417+ 8A69 C5               push bc                                         ; Control.
 418+ 8A6A
 419+ 8A6A ED 7B DF 85      ld sp,(Stack)
 420+ 8A6E
 421+ 8A6E              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 422+ 8A6E
 423+ 8A6E 21 D6 85     	ld hl,Ctrl_1
 424+ 8A71 CB C6        	set 0,(hl)
 425+ 8A73
 426+ 8A73 DD E5        	push ix
 427+ 8A75 E1               pop hl
 428+ 8A76 F5               push af
 429+ 8A77 DD E1            pop ix
 430+ 8A79
 431+ 8A79 CD A0 7F     	call Guarda_foto_registros
 432+ 8A7C
 433+ 8A7C 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 434+ 8A7F CB 86        	res 0,(hl)
 435+ 8A81
 436+ 8A81              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 437+ 8A81              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 438+ 8A81
 439+ 8A81 CD B1 87         call Inicia_Puntero_Disparo_Amadeus
 440+ 8A84 CD AA 87         call Inicia_Puntero_Disparo_Entidades
 441+ 8A87
 442+ 8A87 C9           4 ret
 443+ 8A88
 444+ 8A88              ; ----------------------------------------------------------------
 445+ 8A88              ;
 446+ 8A88              ;   4/3/23
 447+ 8A88              ;
 448+ 8A88              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 449+ 8A88              ;   _ al generarse el disparo.
 450+ 8A88              ;
 451+ 8A88              ;       "$80" ..... No se produce colisión.
 452+ 8A88              ;       "$81" ..... Se produce colisión.
 453+ 8A88
 454+ 8A88              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 455+ 8A88              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 456+ 8A88
 457+ 8A88
 458+ 8A88 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 459+ 8A8A E5               push hl                                        ; Puntero de impresión.
 460+ 8A8B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 461+ 8A8D CD A9 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 462+ 8A90
 463+ 8A90 7B               ld a,e
 464+ 8A91 E6 01            and 1
 465+ 8A93 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 466+ 8A95
 467+ 8A95 E1               pop hl
 468+ 8A96 E5               push hl
 469+ 8A97 CD 32 90         call NextScan
 470+ 8A9A
 471+ 8A9A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 472+ 8A9B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 473+ 8A9D 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 474+ 8A9F              ;                                                  ; _ 2º scanline si esto es así.
 475+ 8A9F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 476+ 8AA1 CD A9 8A         call Bucle_2
 477+ 8AA4
 478+ 8AA4 43           2 ld b,e
 479+ 8AA5 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 480+ 8AA6 FD E1            pop iy
 481+ 8AA8 C9               ret
 482+ 8AA9
 483+ 8AA9               ; ---------- ----------
 484+ 8AA9
 485+ 8AA9 06 02        Bucle_2 ld b,2
 486+ 8AAB FD 7E 00     2 ld a,(iy)
 487+ 8AAE A6               and (hl)
 488+ 8AAF 28 02            jr z,1F
 489+ 8AB1 1E 81            ld e,$81
 490+ 8AB3 23           1 inc hl
 491+ 8AB4 FD 23            inc iy
 492+ 8AB6 10 F3            djnz 2B
 493+ 8AB8 C9               ret
 494+ 8AB9
 495+ 8AB9              ; -------------------------------------------------------------------------------------------------------------
 496+ 8AB9              ;
 497+ 8AB9              ;   11/04/23
 498+ 8AB9              ;
 499+ 8AB9              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 500+ 8AB9              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 501+ 8AB9              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 502+ 8AB9              ;
 503+ 8AB9              ;   MODIFICA: HL,DE,BC,A y AF´.
 504+ 8AB9
 505+ 8AB9              Compara_coordenadas_X
 506+ 8AB9
 507+ 8AB9              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 508+ 8AB9              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 509+ 8AB9
 510+ 8AB9              ; Preparamos registros:
 511+ 8AB9
 512+ 8AB9 21 A1 85         ld hl,Filas+6
 513+ 8ABC 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 514+ 8ABD 23               inc hl
 515+ 8ABE 23               inc hl
 516+ 8ABF 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 517+ 8AC0 43               ld b,e
 518+ 8AC1 21 AF 85         ld hl,Filas+20
 519+ 8AC4 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 520+ 8AC5 21 F4 85         ld hl,Coordenadas_X_Entidad
 521+ 8AC8 CD D7 8C         call Guarda_coordenadas_X
 522+ 8ACB
 523+ 8ACB              ; Preparamos registros:
 524+ 8ACB
 525+ 8ACB 21 7A 84         ld hl,Amadeus_db+6
 526+ 8ACE 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 527+ 8ACF 23               inc hl
 528+ 8AD0 23               inc hl
 529+ 8AD1 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 530+ 8AD2 7B               ld a,e
 531+ 8AD3 08               ex af,af'
 532+ 8AD4 21 88 84         ld hl,Amadeus_db+20
 533+ 8AD7 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 534+ 8AD8 21 F1 85         ld hl,Coordenadas_X_Amadeus
 535+ 8ADB CD D7 8C         call Guarda_coordenadas_X
 536+ 8ADE
 537+ 8ADE              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 538+ 8ADE              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 539+ 8ADE
 540+ 8ADE 04               inc b
 541+ 8ADF 05               dec b
 542+ 8AE0 28 04            jr z,1F
 543+ 8AE2 06 03            ld b,3
 544+ 8AE4 18 02            jr 2F
 545+ 8AE6 06 02        1 ld b,2
 546+ 8AE8 08           2 ex af,af'
 547+ 8AE9 3C               inc a
 548+ 8AEA 3D               dec a
 549+ 8AEB 28 04            jr z,5F
 550+ 8AED 0E 03            ld c,3
 551+ 8AEF 18 02            jr 6F
 552+ 8AF1 0E 02        5 ld c,2
 553+ 8AF3 79           6 ld a,c
 554+ 8AF4 08               ex af,af'
 555+ 8AF5 11 F4 85         ld de,Coordenadas_X_Entidad
 556+ 8AF8 1A           4 ld a,(de)
 557+ 8AF9 21 F1 85         ld hl,Coordenadas_X_Amadeus
 558+ 8AFC BE           3 cp (hl)
 559+ 8AFD 28 0E            jr z,7F
 560+ 8AFF 23               inc hl
 561+ 8B00 0D               dec c
 562+ 8B01 20 F9            jr nz,3B
 563+ 8B03 13               inc de
 564+ 8B04 08               ex af,af'
 565+ 8B05 4F               ld c,a
 566+ 8B06 08               ex af,af'
 567+ 8B07 10 EF            djnz 4B
 568+ 8B09
 569+ 8B09              ; Limpiamos los almacenes de coordenadas y salimos.
 570+ 8B09
 571+ 8B09 CD 16 8D     8 call Limpia_Coordenadas_X
 572+ 8B0C C9               ret
 573+ 8B0D
 574+ 8B0D 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 575+ 8B0F 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 576+ 8B12 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 577+ 8B15 CB D6            set 2,(hl)
 578+ 8B17 18 F0            jr 8B
 579+ 8B19
 580+ 8B19              ; -----------------------------------------------------------------------
 581+ 8B19              ;
 582+ 8B19              ;   17/04/23
 583+ 8B19              ;
 584+ 8B19
 585+ 8B19              Detecta_colision_nave_entidad
 586+ 8B19
 587+ 8B19              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 588+ 8B19
 589+ 8B19 2A 9D 85         ld hl,(Posicion_actual)
 590+ 8B1C CD 97 8F         call Calcula_puntero_de_impresion
 591+ 8B1F
 592+ 8B1F              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 593+ 8B1F              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 594+ 8B1F
 595+ 8B1F DD E5            push ix
 596+ 8B21 E1               pop hl
 597+ 8B22 E5               push hl
 598+ 8B23
 599+ 8B23              ; ----- ----- -----
 600+ 8B23 1E 00            ld e,0                                         ; Indica impacto.
 601+ 8B25 06 0A            ld b,10
 602+ 8B27 CD 57 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 603+ 8B2A 7B               ld a,e
 604+ 8B2B FE 05            cp 5
 605+ 8B2D 38 0E            jr c,3F
 606+ 8B2F
 607+ 8B2F              ; LLegados a este punto:
 608+ 8B2F              ;
 609+ 8B2F              ;   HAY COLISIÓN !!!!!.
 610+ 8B2F              ;
 611+ 8B2F              ;   .db (Impacto) de Amadeus a "1".
 612+ 8B2F              ;   SET el bit3 de (Impacto2).
 613+ 8B2F              ;
 614+ 8B2F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 615+ 8B2F
 616+ 8B2F 21 8D 84         ld hl,Amadeus_db+25
 617+ 8B32 36 01            ld (hl),1
 618+ 8B34 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 619+ 8B37 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 620+ 8B39 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 621+ 8B3B 18 18            jr 1F
 622+ 8B3D
 623+ 8B3D              ; -----
 624+ 8B3D
 625+ 8B3D E1           3 pop hl
 626+ 8B3E CD 32 90         call NextScan
 627+ 8B41 E5               push hl
 628+ 8B42 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 629+ 8B43 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 630+ 8B45 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 631+ 8B47 30 0C            jr nc,1F
 632+ 8B49              ;                                                  ; _ 2º scanline si esto es así.
 633+ 8B49 10 DC            djnz 2B
 634+ 8B4B
 635+ 8B4B              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 636+ 8B4B
 637+ 8B4B              ; LLegados a este punto:
 638+ 8B4B              ;
 639+ 8B4B              ;   NO HAY COLISIÓN !!!!!.
 640+ 8B4B              ;
 641+ 8B4B              ;   .db (Impacto) de Amadeus a "0".
 642+ 8B4B              ;   RES el bit2 de (Impacto2).
 643+ 8B4B              ;
 644+ 8B4B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 645+ 8B4B              ;   Lo colocamos a "0".
 646+ 8B4B
 647+ 8B4B 21 EC 85         ld hl,Impacto2
 648+ 8B4E CB 96            res 2,(hl)
 649+ 8B50 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 650+ 8B53 36 00            ld (hl),0
 651+ 8B55
 652+ 8B55 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 653+ 8B56 C9               ret
 654+ 8B57
 655+ 8B57               ; ---------- ----------
 656+ 8B57
 657+ 8B57 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 658+ 8B58 3A 9C 85         ld a,(Columns)
 659+ 8B5B 47               ld b,a
 660+ 8B5C FD 7E 00     2 ld a,(iy)
 661+ 8B5F BE               cp (hl)
 662+ 8B60 28 01            jr z,1F
 663+ 8B62
 664+ 8B62 1C               inc e
 665+ 8B63
 666+ 8B63 23           1 inc hl
 667+ 8B64 FD 23            inc iy
 668+ 8B66 10 F4            djnz 2B
 669+ 8B68 C1               pop bc
 670+ 8B69 C9               ret
 671+ 8B6A
 672+ 8B6A              ; -------------------------------------------------------------------------------------------------------------
 673+ 8B6A              ;
 674+ 8B6A              ;   13/03/23
 675+ 8B6A              ;
 676+ 8B6A              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 677+ 8B6A              ;
 678+ 8B6A              ;   DESTRUYE: HL,BC,DE y A.
 679+ 8B6A
 680+ 8B6A 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 681+ 8B6D 7E               ld a,(hl)
 682+ 8B6E A7               and a
 683+ 8B6F C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 684+ 8B70
 685+ 8B70 44               ld b,h
 686+ 8B71 4D               ld c,l
 687+ 8B72 2A E5 85         ld hl,(Stack_snapshot_disparos)
 688+ 8B75 E5               push hl
 689+ 8B76 A7               and a
 690+ 8B77 ED 42            sbc hl,bc
 691+ 8B79 E5               push hl
 692+ 8B7A C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 693+ 8B7B
 694+ 8B7B E1               pop hl
 695+ 8B7C 54               ld d,h
 696+ 8B7D 5D               ld e,l
 697+ 8B7E 1B               dec de
 698+ 8B7F ED B8            lddr                                                ; Limpiamos.
 699+ 8B81
 700+ 8B81 21 60 70         ld hl,Album_de_fotos_disparos
 701+ 8B84 22 E5 85         ld (Stack_snapshot_disparos),hl
 702+ 8B87
 703+ 8B87 C9               ret
 704+ 8B88
 705+ 8B88              ; -------------------------------------------------------------------------------------------------------------
 706+ 8B88              ;
 707+ 8B88              ;   28/03/23
 708+ 8B88              ;
 709+ 8B88
 710+ 8B88 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 711+ 8B8B 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 712+ 8B8E
 713+ 8B8E CD E8 87     2 call Extrae_address
 714+ 8B91 7E               ld a,(hl)
 715+ 8B92 A7               and a
 716+ 8B93 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 717+ 8B95
 718+ 8B95              ; ----- ----- ----- ----- ----- -----
 719+ 8B95
 720+ 8B95 C5               push bc
 721+ 8B96 CD 52 8C         call foto_disparo_a_borrar
 722+ 8B99
 723+ 8B99              ; Existe colisión con este disparo???
 724+ 8B99
 725+ 8B99 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 726+ 8B9A 7E               ld a,(hl)
 727+ 8B9B 2B               dec hl
 728+ 8B9C E6 01            and 1
 729+ 8B9E 28 1D            jr z,9F
 730+ 8BA0
 731+ 8BA0              ;   En este punto:
 732+ 8BA0              ;
 733+ 8BA0              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 734+ 8BA0              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 735+ 8BA0              ;   _con la entidad).
 736+ 8BA0              ;
 737+ 8BA0              ;   Disparo_2A defw 0                                ; Control.
 738+ 8BA0              ;    defw 0                                          ; Puntero objeto.
 739+ 8BA0              ;    defw 0                                          ; Puntero de impresión.
 740+ 8BA0              ;    defw 0                                          ; Rutina de impresión.
 741+ 8BA0
 742+ 8BA0 E5               push hl
 743+ 8BA1
 744+ 8BA1 06 04            ld b,4
 745+ 8BA3 23           19 inc hl
 746+ 8BA4 10 FD            djnz 19B
 747+ 8BA6
 748+ 8BA6 CD E8 87         call Extrae_address
 749+ 8BA9 CD 49 96         call Genera_coordenadas_disparo
 750+ 8BAC
 751+ 8BAC              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 752+ 8BAC
 753+ 8BAC 21 EF 85         ld hl,Coordenadas_disparo_certero
 754+ 8BAF 72               ld (hl),d
 755+ 8BB0 23               inc hl
 756+ 8BB1 73               ld (hl),e
 757+ 8BB2
 758+ 8BB2              ; Elimino el disparo de la base de datos.
 759+ 8BB2
 760+ 8BB2 E1               pop hl
 761+ 8BB3 CD CC 8C         call Elimina_disparo_de_base_de_datos
 762+ 8BB6 21 EC 85         ld hl,Impacto2
 763+ 8BB9 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 764+ 8BBB
 765+ 8BBB 18 06            jr 11F
 766+ 8BBD
 767+ 8BBD CD 7B 8C     9 call Mueve_disparo
 768+ 8BC0 CD 52 8C         call foto_disparo_a_borrar
 769+ 8BC3
 770+ 8BC3 C1           11 pop bc
 771+ 8BC4 18 04            jr 7F
 772+ 8BC6
 773+ 8BC6              ; ----- ----- ----- ----- ----- -----
 774+ 8BC6
 775+ 8BC6 ED 42        1 sbc hl,bc
 776+ 8BC8 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 777+ 8BCA
 778+ 8BCA 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 779+ 8BCD 23               inc hl
 780+ 8BCE 23               inc hl
 781+ 8BCF 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 782+ 8BD2 18 BA            jr 2B
 783+ 8BD4
 784+ 8BD4 CD B1 87     3 call Inicia_Puntero_Disparo_Amadeus
 785+ 8BD7 01 66 84         ld bc,Disparo_11
 786+ 8BDA 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 787+ 8BDD
 788+ 8BDD CD E8 87     5 call Extrae_address
 789+ 8BE0 7E               ld a,(hl)
 790+ 8BE1 A7               and a
 791+ 8BE2 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 792+ 8BE4
 793+ 8BE4              ; ----- ----- ----- ----- ----- -----
 794+ 8BE4
 795+ 8BE4 C5               push bc
 796+ 8BE5 CD 52 8C         call foto_disparo_a_borrar
 797+ 8BE8
 798+ 8BE8              ; Existe colisión con este disparo???
 799+ 8BE8
 800+ 8BE8 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 801+ 8BE9 7E               ld a,(hl)
 802+ 8BEA 2B               dec hl
 803+ 8BEB E6 01            and 1
 804+ 8BED 28 48            jr z,10F
 805+ 8BEF
 806+ 8BEF              ; La colisión se produce con Amadeus???
 807+ 8BEF              ; Amadeus siempre tiene (Coordenada_y)="$16".
 808+ 8BEF
 809+ 8BEF E5               push hl
 810+ 8BF0
 811+ 8BF0 06 04            ld b,4
 812+ 8BF2 23           16 inc hl
 813+ 8BF3 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 814+ 8BF5 CD E8 87         call Extrae_address
 815+ 8BF8 CD 49 96         call Genera_coordenadas_disparo
 816+ 8BFB
 817+ 8BFB 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 818+ 8BFC FE 16            cp $16
 819+ 8BFE 38 22            jr c,15F
 820+ 8C00
 821+ 8C00              ; (Colisiones en filas 16 y 17).
 822+ 8C00
 823+ 8C00 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 824+ 8C01
 825+ 8C01              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 826+ 8C01
 827+ 8C01 21 7A 84         ld hl,Amadeus_db+6
 828+ 8C04 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 829+ 8C05 23               inc hl
 830+ 8C06 23               inc hl
 831+ 8C07 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 832+ 8C08 21 88 84         ld hl,Amadeus_db+20
 833+ 8C0B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 834+ 8C0C 21 F1 85         ld hl,Coordenadas_X_Amadeus
 835+ 8C0F CD D7 8C         call Guarda_coordenadas_X
 836+ 8C12
 837+ 8C12 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 838+ 8C13
 839+ 8C13              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 840+ 8C13
 841+ 8C13 06 03            ld b,3
 842+ 8C15 21 F1 85         ld hl,Coordenadas_X_Amadeus
 843+ 8C18 7E           18 ld a,(hl)
 844+ 8C19 BA               cp d
 845+ 8C1A 20 03            jr nz,17F
 846+ 8C1C
 847+ 8C1C              ; Colisión Amadeus !!!!!!!!!!
 848+ 8C1C
 849+ 8C1C E1               pop hl
 850+ 8C1D 18 09            jr 14F
 851+ 8C1F
 852+ 8C1F 23           17 inc hl
 853+ 8C20 10 F6            djnz 18B
 854+ 8C22
 855+ 8C22              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 856+ 8C22              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 857+ 8C22
 858+ 8C22 E1           15 pop hl
 859+ 8C23 23               inc hl
 860+ 8C24 35               dec (hl)
 861+ 8C25 2B               dec hl
 862+ 8C26 18 0F            jr 10F
 863+ 8C28
 864+ 8C28              ; -----------------------debug
 865+ 8C28
 866+ 8C28              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 867+ 8C28              ; _ almacén de coordenadas_X de Amadeus.
 868+ 8C28
 869+ 8C28 E5           14 push hl
 870+ 8C29 CD CC 8C         call Elimina_disparo_de_base_de_datos
 871+ 8C2C 21 EC 85         ld hl,Impacto2
 872+ 8C2F CB CE            set 1,(hl)
 873+ 8C31 CD 16 8D         call Limpia_Coordenadas_X
 874+ 8C34
 875+ 8C34 E1               pop hl
 876+ 8C35 18 06            jr 12F
 877+ 8C37
 878+ 8C37 CD 7B 8C     10 call Mueve_disparo
 879+ 8C3A CD 52 8C         call foto_disparo_a_borrar
 880+ 8C3D C1           12 pop bc
 881+ 8C3E
 882+ 8C3E 18 04            jr 8F
 883+ 8C40
 884+ 8C40              ; ----- ----- ----- ----- ----- -----
 885+ 8C40
 886+ 8C40 ED 42        4 sbc hl,bc
 887+ 8C42 28 0A            jr z,6F
 888+ 8C44
 889+ 8C44 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 890+ 8C47 23               inc hl
 891+ 8C48 23               inc hl
 892+ 8C49 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 893+ 8C4C 18 8F            jr 5B
 894+ 8C4E
 895+ 8C4E CD AA 87     6 call Inicia_Puntero_Disparo_Entidades
 896+ 8C51 C9               ret
 897+ 8C52
 898+ 8C52              ; ------------------------------------------------------------------
 899+ 8C52
 900+ 8C52              foto_disparo_a_borrar
 901+ 8C52
 902+ 8C52 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 903+ 8C53 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 904+ 8C54 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 905+ 8C55
 906+ 8C55 E5               push hl
 907+ 8C56 23               inc hl
 908+ 8C57 23               inc hl
 909+ 8C58 ED 73 DF 85      ld (Stack),sp
 910+ 8C5C F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 911+ 8C5D FD E1            pop iy
 912+ 8C5F DD E1            pop ix
 913+ 8C61 E1               pop hl
 914+ 8C62 ED 7B DF 85      ld sp,(Stack)
 915+ 8C66 3A D6 85         ld a,(Ctrl_1)
 916+ 8C69 CB C7            set 0,a
 917+ 8C6B 32 D6 85         ld (Ctrl_1),a
 918+ 8C6E CD A0 7F         call Guarda_foto_registros
 919+ 8C71 3A D6 85         ld a,(Ctrl_1)
 920+ 8C74 CB 87            res 0,a
 921+ 8C76 32 D6 85         ld (Ctrl_1),a
 922+ 8C79 E1               pop hl
 923+ 8C7A C9               ret
 924+ 8C7B
 925+ 8C7B E5           Mueve_disparo push hl
 926+ 8C7C 7E               ld a,(hl)
 927+ 8C7D 06 04            ld b,4
 928+ 8C7F 23           1 inc hl
 929+ 8C80 10 FD            djnz 1B
 930+ 8C82
 931+ 8C82              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 932+ 8C82
 933+ 8C82 CD E8 87         call Extrae_address
 934+ 8C85
 935+ 8C85 E6 01            and 1
 936+ 8C87 28 2A            jr z,2F
 937+ 8C89
 938+ 8C89              ; Disparo hacia arriba, (Amadeus).
 939+ 8C89
 940+ 8C89              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 941+ 8C89              ; _ de la dificultad.
 942+ 8C89
 943+ 8C89 CD 41 90         call PreviousScan
 944+ 8C8C CD 41 90         call PreviousScan
 945+ 8C8F CD 41 90         call PreviousScan
 946+ 8C92
 947+ 8C92              ; Detecta si el disparo de Amadeus sale de pantalla:
 948+ 8C92
 949+ 8C92 7C               ld a,h
 950+ 8C93 FE 40            cp $40
 951+ 8C95 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 952+ 8C97
 953+ 8C97              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 954+ 8C97
 955+ 8C97 EB               ex de,hl
 956+ 8C98 06 04            ld b,4
 957+ 8C9A 2B           6 dec hl
 958+ 8C9B 10 FD            djnz 6B
 959+ 8C9D
 960+ 8C9D CD CC 8C         call Elimina_disparo_de_base_de_datos
 961+ 8CA0
 962+ 8CA0 18 0C            jr 4F
 963+ 8CA2
 964+ 8CA2              ; Se ha desplazado la bala, compruebo colisión.
 965+ 8CA2
 966+ 8CA2 D5           3 push de
 967+ 8CA3 C5               push bc
 968+ 8CA4 CD 88 8A         call Comprueba_Colision
 969+ 8CA7 78               ld a,b
 970+ 8CA8 C1               pop bc
 971+ 8CA9 D1               pop de
 972+ 8CAA
 973+ 8CAA EB               ex de,hl
 974+ 8CAB
 975+ 8CAB 73               ld (hl),e
 976+ 8CAC 23               inc hl
 977+ 8CAD 72               ld (hl),d
 978+ 8CAE
 979+ 8CAE E1           4 pop hl
 980+ 8CAF 23               inc hl
 981+ 8CB0 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 982+ 8CB1 2B               dec hl
 983+ 8CB2 C9               ret
 984+ 8CB3
 985+ 8CB3              ; Disparo hacia abajo, (Entidad).
 986+ 8CB3
 987+ 8CB3              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 988+ 8CB3              ; _ de la dificultad.
 989+ 8CB3
 990+ 8CB3 CD 32 90     2 call NextScan
 991+ 8CB6 CD 32 90         call NextScan
 992+ 8CB9 CD 32 90         call NextScan
 993+ 8CBC
 994+ 8CBC              ; Detecta si el disparo de la entidad sale de la pantalla.
 995+ 8CBC
 996+ 8CBC 7C               ld a,h
 997+ 8CBD FE 58            cp $58
 998+ 8CBF 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 999+ 8CC1
1000+ 8CC1 EB               ex de,hl
1001+ 8CC2 06 04            ld b,4
1002+ 8CC4 2B           5 dec hl
1003+ 8CC5 10 FD            djnz 5B
1004+ 8CC7
1005+ 8CC7 CD CC 8C         call Elimina_disparo_de_base_de_datos
1006+ 8CCA
1007+ 8CCA 18 E2            jr 4B
1008+ 8CCC
1009+ 8CCC              ; HL apunta al primer byte de la base de datos del disparo.
1010+ 8CCC
1011+ 8CCC 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1012+ 8CCF AF               xor a
1013+ 8CD0 77               ld (hl),a
1014+ 8CD1 54               ld d,h
1015+ 8CD2 5D               ld e,l
1016+ 8CD3 13               inc de
1017+ 8CD4 ED B0            ldir
1018+ 8CD6 C9               ret
1019+ 8CD7
1020+ 8CD7              ; -----------------------------------------------------------------
1021+ 8CD7              ;
1022+ 8CD7              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1023+ 8CD7              ;
1024+ 8CD7              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1025+ 8CD7              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1026+ 8CD7              ;
1027+ 8CD7              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1028+ 8CD7              ;
1029+ 8CD7              ;   INPUTS:
1030+ 8CD7              ;
1031+ 8CD7              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1032+ 8CD7              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1033+ 8CD7              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1034+ 8CD7
1035+ 8CD7              ;   MODIFICA: A, HL, DE y C
1036+ 8CD7
1037+ 8CD7 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1038+ 8CD8 79               ld a,c
1039+ 8CD9 E6 01            and 1
1040+ 8CDB 20 03            jr nz,1F
1041+ 8CDD 14               inc d
1042+ 8CDE 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1043+ 8CE0
1044+ 8CE0              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1045+ 8CE0              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1046+ 8CE0
1047+ 8CE0 15           1 dec d
1048+ 8CE1 23           2 inc hl
1049+ 8CE2 72               ld (hl),d
1050+ 8CE3
1051+ 8CE3 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1052+ 8CE4 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1053+ 8CE5 C8               ret z
1054+ 8CE6
1055+ 8CE6 AF               xor a
1056+ 8CE7 5F               ld e,a
1057+ 8CE8 18 ED            jr Guarda_coordenadas_X
1058+ 8CEA
1059+ 8CEA              ; -----------------------------------------------------------------
1060+ 8CEA              ;
1061+ 8CEA              ;   12/04/23
1062+ 8CEA              ;
1063+ 8CEA
1064+ 8CEA 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1065+ 8CED A7               and a
1066+ 8CEE C8               ret z
1067+ 8CEF
1068+ 8CEF FE 04            cp 4
1069+ 8CF1 20 09            jr nz,1F
1070+ 8CF3
1071+ 8CF3
1072+ 8CF3              ; La colisión se produce por contacto entre Amadeus y una entidad.
1073+ 8CF3
1074+ 8CF3 CD 19 8B         call Detecta_colision_nave_entidad
1075+ 8CF6
1076+ 8CF6 21 EC 85         ld hl,Impacto2
1077+ 8CF9 CB 5E            bit 3,(hl)
1078+ 8CFB C0               ret nz                                               ; Existe colisión, RET.
1079+ 8CFC
1080+ 8CFC              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1081+ 8CFC              ; Primero analizamos si algún disparo impacta en Amadeus.
1082+ 8CFC
1083+ 8CFC 21 EC 85     1 ld hl,Impacto2
1084+ 8CFF CB 4E            bit 1,(hl)
1085+ 8D01 28 07            jr z,2F
1086+ 8D03
1087+ 8D03 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1088+ 8D06 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1089+ 8D08 18 0B            jr 3F
1090+ 8D0A
1091+ 8D0A 21 EC 85     2 ld hl,Impacto2
1092+ 8D0D CB 46            bit 0,(hl)
1093+ 8D0F C8               ret z
1094+ 8D10
1095+ 8D10              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1096+ 8D10
1097+ 8D10 21 D6 85         ld hl,Ctrl_1
1098+ 8D13 CB D6            set 2,(hl)
1099+ 8D15
1100+ 8D15 C9           3 ret
1101+ 8D16
1102+ 8D16              ; -----------------------------------------------------------------
1103+ 8D16              ;
1104+ 8D16              ;   16/04/23
1105+ 8D16              ;
1106+ 8D16
1107+ 8D16 AF           Limpia_Coordenadas_X xor a
1108+ 8D17 06 06            ld b,6
1109+ 8D19 21 F1 85         ld hl,Coordenadas_X_Amadeus
1110+ 8D1C 77           1 ld (hl),a
1111+ 8D1D 23               inc hl
1112+ 8D1E 10 FC            djnz 1B
1113+ 8D20 C9               ret
1114+ 8D21
1115+ 8D21              ; -----------------------------------------------------------------
1116+ 8D21              ;
1117+ 8D21              ;   25/04/23
1118+ 8D21              ;
1119+ 8D21
1120+ 8D21              Determina_resultado_comparativa
1121+ 8D21
1122+ 8D21 18 FE            jr $
1123+ 8D23
1124+ 8D23 7C               ld a,h
1125+ 8D24 06 00            ld b,0
1126+ 8D26
1127+ 8D26 CD 40 8D         call Compara_cositas
1128+ 8D29 04               inc b
1129+ 8D2A 05               dec b
1130+ 8D2B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1131+ 8D2C
1132+ 8D2C 18 FE            jr $
1133+ 8D2E
1134+ 8D2E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 8D2F 06 00            ld b,0
1136+ 8D31 FE 02            cp $02
1137+ 8D33 28 09            jr z,1F
1138+ 8D35 FE FE            cp $fe
1139+ 8D37 28 05            jr z,1F
1140+ 8D39
1141+ 8D39 CD 40 8D         call Compara_cositas
1142+ 8D3C 18 01            jr 2F
1143+ 8D3E
1144+ 8D3E 04           1 inc b
1145+ 8D3F C9           2 ret
1146+ 8D40
1147+ 8D40 A7           Compara_cositas and a
1148+ 8D41 28 07            jr z,1F
1149+ 8D43 FE FF            cp $ff
1150+ 8D45 28 03            jr z,1F
1151+ 8D47 FE 01            cp $01
1152+ 8D49 C0               ret nz
1153+ 8D4A 04           1 inc b
1154+ 8D4B C9               ret
1155+ 8D4C
# file closed: Disparo.asm
 981  8D4C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8D4C              ; ******************************************************************************************************************************************************************************************
   2+ 8D4C              ;
   3+ 8D4C              ; 01/23
   4+ 8D4C              ;
   5+ 8D4C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8D4C
   7+ 8D4C CD 26 90     Draw call Prepara_draw
   8+ 8D4F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8D50 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8D51 28 05        	jr z,2F
  11+ 8D53
  12+ 8D53 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8D56 18 0C        	jr 1F
  14+ 8D58 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8D5B 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8D5E CD ED 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8D61              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8D61 CD 6C 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8D64 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8D67 CB 6F        	bit 5,a
  21+ 8D69 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8D6B
  23+ 8D6B CD 83 8D     	call Comprueba_limite_horizontal
  24+ 8D6E CD 13 8E     	call Comprueba_limite_vertical
  25+ 8D71
  26+ 8D71              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8D71
  28+ 8D71 CD 60 8F     3 call calcula_CColumnass
  29+ 8D74 CD 97 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8D77 CD EC 8F     	call Define_rutina_de_impresion
  31+ 8D7A
  32+ 8D7A 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8D7D CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8D7F 32 C9 85     	ld (Ctrl_0),a
  35+ 8D82
  36+ 8D82 C9           	ret
  37+ 8D83
  38+ 8D83              ; *******************************************************************************************************************************************************************************************
  39+ 8D83              ;	21/01/23
  40+ 8D83              ;
  41+ 8D83              ; 	Comprueba_limite_horizontal.
  42+ 8D83              ;
  43+ 8D83              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8D83              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8D83              ;
  46+ 8D83              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8D83              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8D83              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8D83              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8D83
  51+ 8D83
  52+ 8D83
  53+ 8D83 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8D86 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8D88 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8D8A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8D8C 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8D8F 18 09            jr 6F
  59+ 8D91 CB 5F        1 bit 3,a
  60+ 8D93 28 0A            jr z,2F
  61+ 8D95 E6 F7            and $f7
  62+ 8D97 32 C9 85         ld (Ctrl_0),a
  63+ 8D9A CD ED 8E     6 call Inicializacion
  64+ 8D9D 18 5B            jr 5F
  65+ 8D9F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8DA0
  67+ 8DA0              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8DA0              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8DA0
  70+ 8DA0 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8DA1 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8DA4 CD F2 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8DA7 67           	ld h,a
  74+ 8DA8 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8DA9 CD F2 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8DAC 67           	ld h,a
  77+ 8DAD A7           	and a
  78+ 8DAE ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8DB0 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8DB1 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8DB4 FE 02        	cp 2
  82+ 8DB6 38 1E        	jr c,3F
  83+ 8DB8 28 1C        	jr z,3F
  84+ 8DBA 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8DBB 28 23            jr z,7F
  86+ 8DBD 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8DBF 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8DC1 E1           	pop hl
  89+ 8DC2
  90+ 8DC2              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8DC2              ; _para indicar con E="2" en caso necesario.
  92+ 8DC2
  93+ 8DC2 E5               push hl
  94+ 8DC3 C5               push bc
  95+ 8DC4 CD F2 92     	call calcula_tercio
  96+ 8DC7 FE 01        	cp 1
  97+ 8DC9 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8DCB CD FB 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8DCE 28 26            jr z,9F
 100+ 8DD0 38 24            jr c,9F
 101+ 8DD2 1E 00        11 ld e,0
 102+ 8DD4 18 22            jr 8F
 103+ 8DD6 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8DD7 28 07        	jr z, 7F
 105+ 8DD9 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8DDB 1E 00         	ld e,0
 107+ 8DDD E1           	pop hl
 108+ 8DDE 18 04        	jr 4F
 109+ 8DE0 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8DE2 18 15            jr 10F
 111+ 8DE4
 112+ 8DE4              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8DE4              ; _para indicar con E="2" en caso necesario.
 114+ 8DE4
 115+ 8DE4 E5           4 push hl
 116+ 8DE5 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8DE6 CD F2 92     	call calcula_tercio
 118+ 8DE9 FE 01        	cp 1
 119+ 8DEB 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8DED CD FB 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8DF0 28 04            jr z,9F
 122+ 8DF2 30 02            jr nc,9F
 123+ 8DF4 18 02        	jr 8F
 124+ 8DF6 1E 02        9 ld e,2
 125+ 8DF8 C1           8 pop bc
 126+ 8DF9 E1           10 pop hl
 127+ 8DFA C9           5 ret
 128+ 8DFB
 129+ 8DFB              ; --------------------
 130+ 8DFB              ;
 131+ 8DFB              ; 25/08/22
 132+ 8DFB
 133+ 8DFB CD F2 92     Comprueba_centro call calcula_tercio
 134+ 8DFE 67               ld h,a
 135+ 8DFF 08           	ex af,af
 136+ 8E00 FE 02        	cp 2
 137+ 8E02 38 07        	jr c,1F
 138+ 8E04 28 05        	jr z,1F
 139+ 8E06 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E09 18 03        	jr 2F
 141+ 8E0B 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E0E 08           2 ex af,af
 143+ 8E0F A7               and a
 144+ 8E10 ED 42            sbc hl,bc
 145+ 8E12 C9               ret
 146+ 8E13
 147+ 8E13              ; *********************************************************************************************************************************************************************************************
 148+ 8E13              ;
 149+ 8E13              ;   16/8/22
 150+ 8E13              ;
 151+ 8E13              ;	Comprueba_limite_vertical
 152+ 8E13              ;
 153+ 8E13              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E13              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E13              ;
 156+ 8E13
 157+ 8E13 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8E16 7D           	ld a,l
 159+ 8E17 E6 1F        	and $1F
 160+ 8E19 57           	ld d,a
 161+ 8E1A 3A D5 85     	ld a,(Limite_vertical)
 162+ 8E1D BA           	cp d 											; Límite - Posición.
 163+ 8E1E 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8E1F 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8E22 CB 47        	bit 0,a
 166+ 8E24 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8E26
 168+ 8E26              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8E26
 170+ 8E26 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8E27 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8E29
 173+ 8E29              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8E29              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8E29
 176+ 8E29 3A A1 85         ld a,(Coordenada_X)
 177+ 8E2C 16 0F            ld d,Centro_izquierda
 178+ 8E2E A7               and a
 179+ 8E2F 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8E30 28 1E            jr z,3F
 181+ 8E32 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8E34              ;                                                    ; _salimos sin modificar nada.
 183+ 8E34 18 0E            jr 2F
 184+ 8E36 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8E37 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8E39
 187+ 8E39              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8E39              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8E39
 190+ 8E39 3A A1 85         ld a,(Coordenada_X)
 191+ 8E3C 16 10            ld d,Centro_derecha
 192+ 8E3E A7               and a
 193+ 8E3F 92               sub d
 194+ 8E40 28 0E            jr z,3F
 195+ 8E42 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8E44              ;                                                    ; _salimos sin modificar nada.
 197+ 8E44 CB 43        2 bit 0,e
 198+ 8E46 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8E48 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8E49 CD DD 8E         call Modificaccionne
 201+ 8E4C C1           	pop bc
 202+ 8E4D CD ED 8E         call Inicializacion
 203+ 8E50 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8E51
 205+ 8E51              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8E51
 207+ 8E51 C5           4 push bc
 208+ 8E52 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8E55 0A           	ld a,(bc)
 210+ 8E56 3D           	dec a
 211+ 8E57 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8E58 7D           	ld a,l
 213+ 8E59 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8E5A CB 47        	bit 0,a
 215+ 8E5C 28 03        	jr z,5F
 216+ 8E5E 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8E5F 18 2E        	jr 7F
 218+ 8E61
 219+ 8E61              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8E61
 221+ 8E61 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8E62 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8E63 3A C9 85     	ld a,(Ctrl_0)
 224+ 8E66 CB 4F        	bit 1,a
 225+ 8E68 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8E6A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8E6B
 228+ 8E6B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8E6B
 230+ 8E6B 1C               inc e
 231+ 8E6C 1D               dec e
 232+ 8E6D 20 07            jr nz,12F
 233+ 8E6F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8E70 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8E71 22 9D 85     	ld (Posicion_actual),hl
 236+ 8E74 18 44        13 jr 9F
 237+ 8E76 CB 43        12 bit 0,e
 238+ 8E78 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8E7A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8E7A C1           	pop bc
 241+ 8E7B 18 D3        	jr 3B
 242+ 8E7D 80           14 add b
 243+ 8E7E 6F               ld l,a
 244+ 8E7F 22 9D 85     	ld (Posicion_actual),hl
 245+ 8E82 CD DD 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8E85 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8E87 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8E89 32 C9 85         ld (Ctrl_0),a
 249+ 8E8C F1           	pop af
 250+ 8E8D 18 2B        	jr 9F
 251+ 8E8F
 252+ 8E8F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8E8F
 254+ 8E8F F5           7 push af
 255+ 8E90 3A C9 85     	ld a,(Ctrl_0)
 256+ 8E93 CB 47        	bit 0,a
 257+ 8E95 20 1D        	jr nz,8F
 258+ 8E97 F1           	pop af
 259+ 8E98
 260+ 8E98              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8E98
 262+ 8E98 1C           	inc e
 263+ 8E99 1D               dec e
 264+ 8E9A 20 07            jr nz,10F
 265+ 8E9C 90           	sub b
 266+ 8E9D 6F               ld l,a
 267+ 8E9E 22 9D 85     	ld (Posicion_actual),hl
 268+ 8EA1 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8EA3              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8EA3 CB 43        10 bit 0,e
 271+ 8EA5 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8EA7              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8EA7 C1           	pop bc
 274+ 8EA8 18 A6        	jr 3B
 275+ 8EAA 90           16 sub b
 276+ 8EAB 6F               ld l,a
 277+ 8EAC 22 9D 85     	ld (Posicion_actual),hl
 278+ 8EAF CD DD 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8EB2 18 06            jr 9F
 280+ 8EB4 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8EB6 32 C9 85         ld (Ctrl_0),a
 282+ 8EB9 F1           	pop af
 283+ 8EBA C1           9 pop bc
 284+ 8EBB 1E 00        	ld e,0
 285+ 8EBD CD ED 8E         call Inicializacion
 286+ 8EC0 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8EC1 08           	ex af,af
 288+ 8EC2 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8EC3 18 8B            jr 3B
 290+ 8EC5
 291+ 8EC5              ; --------------------
 292+ 8EC5
 293+ 8EC5 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8EC7 CD 41 90     1 call PreviousScan
 295+ 8ECA 10 FB            djnz 1B
 296+ 8ECC 22 9D 85     	ld (Posicion_actual),hl
 297+ 8ECF AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8ED0 C9           	ret
 299+ 8ED1
 300+ 8ED1              ; --------------------
 301+ 8ED1
 302+ 8ED1 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8ED3 CD 32 90     1 call NextScan
 304+ 8ED6 10 FB            djnz 1B
 305+ 8ED8 22 9D 85     	ld (Posicion_actual),hl
 306+ 8EDB AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8EDC C9           	ret
 308+ 8EDD
 309+ 8EDD              ; --------------------
 310+ 8EDD              ;
 311+ 8EDD              ;	22/01/23
 312+ 8EDD              ;
 313+ 8EDD              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8EDD              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8EDD              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8EDD
 317+ 8EDD
 318+ 8EDD              Modificaccionne
 319+ 8EDD
 320+ 8EDD 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8EE0 FE 02        	cp 2
 322+ 8EE2 CC C5 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8EE5 DC C5 8E         call c,Modifica_Pos_actual
 324+ 8EE8 C8           	ret z
 325+ 8EE9 CD D1 8E         call Modifica_Pos_actual2
 326+ 8EEC C9               ret
 327+ 8EED
 328+ 8EED              ; *************************************************************************************************************************************************************************************************
 329+ 8EED              ;
 330+ 8EED              ;	13/8/22
 331+ 8EED              ;
 332+ 8EED              ;	Inicializacion
 333+ 8EED              ;
 334+ 8EED              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8EED              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8EED              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8EED              ;
 338+ 8EED              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8EED              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8EED              ;	_ desaparece/aparece.
 341+ 8EED
 342+ 8EED              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8EED              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8EED              ;
 345+ 8EED              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8EED              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8EED              ; 		   [E] ="0"
 348+ 8EED
 349+ 8EED              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8EED
 351+ 8EED CD F2 92     Inicializacion call calcula_tercio
 352+ 8EF0 28 36        	jr z,primit
 353+ 8EF2 E6 02        	and 2
 354+ 8EF4 20 07        	jr nz,segmit
 355+ 8EF6 7D           	ld a,l
 356+ 8EF7 FE 7F        	cp $7f
 357+ 8EF9 38 2D        	jr c,primit
 358+ 8EFB 28 2B        	jr z,primit
 359+ 8EFD CD 5A 8F     segmit call column
 360+ 8F00 38 13        	jr c,tercuad
 361+ 8F02 3E 04        cuarcuad ld a,4
 362+ 8F04 32 AF 85     	ld (Cuad_objeto),a
 363+ 8F07 21 20 48     	ld hl,$4820
 364+ 8F0A 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8F0D 21 D5 85     	ld hl,Limite_vertical
 366+ 8F10 36 0D        	ld (hl),$0d
 367+ 8F12 08           	ex af,af
 368+ 8F13 18 3C        	jr 1F
 369+ 8F15              tercuad
 370+ 8F15 3E 03        	ld a,3
 371+ 8F17 32 AF 85     	ld (Cuad_objeto),a
 372+ 8F1A 21 20 48     	ld hl,$4820
 373+ 8F1D 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8F20 21 D5 85     	ld hl,Limite_vertical
 375+ 8F23 36 12        	ld (hl),$12
 376+ 8F25 08           	ex af,af
 377+ 8F26 18 29        	jr 1F
 378+ 8F28 CD 5A 8F     primit call column
 379+ 8F2B 38 13        	jr c, primcuad
 380+ 8F2D              segcuad
 381+ 8F2D 3E 02        	ld a,2
 382+ 8F2F 32 AF 85     	ld (Cuad_objeto),a
 383+ 8F32 21 C0 4F     	ld hl,$4fc0
 384+ 8F35 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8F38 21 D5 85     	ld hl,Limite_vertical
 386+ 8F3B 36 0D        	ld (hl),$0d
 387+ 8F3D 08           	ex af,af
 388+ 8F3E 18 11        	jr 1F
 389+ 8F40              primcuad
 390+ 8F40 3E 01        	ld a,1
 391+ 8F42 32 AF 85     	ld (Cuad_objeto),a
 392+ 8F45 21 C0 4F     	ld hl,$4fc0
 393+ 8F48 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8F4B 21 D5 85     	ld hl,Limite_vertical
 395+ 8F4E 36 12        	ld (hl),$12
 396+ 8F50 08           	ex af,af
 397+ 8F51 CD 1E 96     1 call Genera_coordenadas
 398+ 8F54 21 C9 85     	ld hl,Ctrl_0
 399+ 8F57 CB EE        	set 5,(hl)
 400+ 8F59 C9           	ret
 401+ 8F5A
 402+ 8F5A              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8F5A
 404+ 8F5A              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8F5A              ;
 406+ 8F5A              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8F5A
 408+ 8F5A 7D           column ld a,l
 409+ 8F5B E6 1F        	and $1f
 410+ 8F5D FE 10         	cp $10
 411+ 8F5F C9            	ret
 412+ 8F60
 413+ 8F60              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8F60              ;
 415+ 8F60              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8F60              ;
 417+ 8F60              ; 14/12/22
 418+ 8F60              ;
 419+ 8F60              ;	Modifica: A y BC.
 420+ 8F60
 421+ 8F60 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8F63 E6 01        	and 1
 423+ 8F65 28 17        	jr z,1F
 424+ 8F67
 425+ 8F67              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8F67
 427+ 8F67 3A A1 85     	ld a,(Coordenada_X)
 428+ 8F6A 47           	ld b,a
 429+ 8F6B 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8F6C 79           	ld a,c
 431+ 8F6D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8F6E 38 08        	jr c,2F
 433+ 8F70 47           	ld b,a
 434+ 8F71 79           	ld a,c
 435+ 8F72 90           	sub b
 436+ 8F73 32 D2 85     	ld (Columnas),a
 437+ 8F76 18 1B        	jr 4F
 438+ 8F78 79           2 ld a,c
 439+ 8F79 32 D2 85     	ld (Columnas),a
 440+ 8F7C 18 15        	jr 4F
 441+ 8F7E
 442+ 8F7E              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8F7E
 444+ 8F7E 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8F81 81           	add c
 446+ 8F82 3D           	dec a
 447+ 8F83 D6 1F        	sub $1f
 448+ 8F85 38 08        	jr c,3F
 449+ 8F87 47           	ld b,a
 450+ 8F88 79           	ld a,c
 451+ 8F89 90           	sub b
 452+ 8F8A 32 D2 85     	ld (Columnas),a
 453+ 8F8D 18 04        	jr 4F
 454+ 8F8F 79           3 ld a,c
 455+ 8F90 32 D2 85     	ld (Columnas),a
 456+ 8F93 D9           4 exx
 457+ 8F94 4F           	ld c,a
 458+ 8F95 D9           	exx
 459+ 8F96 C9            ret
 460+ 8F97
 461+ 8F97              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8F97              ;
 463+ 8F97              ; 7/1/23
 464+ 8F97              ;
 465+ 8F97              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8F97              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8F97              ;
 468+ 8F97              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8F97              ;	DESTRUYE: HL,B Y A.
 470+ 8F97
 471+ 8F97 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8F9A FE 02        	cp 2
 473+ 8F9C 38 18        	jr c,1F
 474+ 8F9E 28 16        	jr z,1F
 475+ 8FA0 E6 01        	and 1
 476+ 8FA2 28 0D        	jr z,3F
 477+ 8FA4
 478+ 8FA4              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8FA4
 480+ 8FA4 CD E0 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8FA7
 482+ 8FA7 7D           9 ld a,l
 483+ 8FA8 E6 1F        	and $1f
 484+ 8FAA 28 2A        	jr z,7F
 485+ 8FAC 2B           	dec hl
 486+ 8FAD 10 F8        	djnz 9B
 487+ 8FAF 18 25        	jr 7F
 488+ 8FB1
 489+ 8FB1              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8FB1
 491+ 8FB1 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8FB4 18 20        	jr 7F
 493+ 8FB6
 494+ 8FB6 28 14        1 jr z,2F
 495+ 8FB8
 496+ 8FB8              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8FB8
 498+ 8FB8 CD E0 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8FBB 7D           4 ld a,l
 500+ 8FBC E6 1F        	and $1f
 501+ 8FBE 28 03        	jr z,6F
 502+ 8FC0 2B           	dec hl
 503+ 8FC1 10 F8        	djnz 4B
 504+ 8FC3 06 0F        6 ld b,15
 505+ 8FC5 CD 41 90     5 call PreviousScan
 506+ 8FC8 10 FB        	djnz 5B
 507+ 8FCA 18 0A        	jr 7F
 508+ 8FCC
 509+ 8FCC              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8FCC
 511+ 8FCC CD E0 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8FCF 06 0F        	ld b,15
 513+ 8FD1 CD 41 90     8 call PreviousScan
 514+ 8FD4 10 FB        	djnz 8B
 515+ 8FD6
 516+ 8FD6 E5           7 push hl
 517+ 8FD7 DD E1        	pop ix
 518+ 8FD9
 519+ 8FD9 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8FDC E5           	push hl
 521+ 8FDD FD E1        	pop iy
 522+ 8FDF
 523+ 8FDF C9           	ret
 524+ 8FE0
 525+ 8FE0              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8FE0              ;
 527+ 8FE0              ;	2/1/23
 528+ 8FE0              ;
 529+ 8FE0              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8FE0              ;
 531+ 8FE0              ;	Tras esta rutina tenemos:
 532+ 8FE0              ;
 533+ 8FE0              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8FE0              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8FE0              ;
 536+ 8FE0              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8FE0
 538+ 8FE0 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8FE3 3A D2 85     	ld a,(Columnas)
 540+ 8FE6 3D           	dec a
 541+ 8FE7 20 01        	jr nz,1F
 542+ 8FE9 3C           	inc a
 543+ 8FEA 47           1 ld b,a
 544+ 8FEB C9           	ret
 545+ 8FEC
 546+ 8FEC              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8FEC              ;
 548+ 8FEC              ;	3/1/23
 549+ 8FEC              ;
 550+ 8FEC              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8FEC              ;
 552+ 8FEC              ;	Destruye: A,B,HL y DE.
 553+ 8FEC
 554+ 8FEC              Define_rutina_de_impresion
 555+ 8FEC
 556+ 8FEC 3A 9C 85     	ld a,(Columns)
 557+ 8FEF 47           	ld b,a
 558+ 8FF0 3A D2 85     	ld a,(Columnas)
 559+ 8FF3 B8           	cp b
 560+ 8FF4 20 0D        	jr nz,2f
 561+ 8FF6
 562+ 8FF6              ;	La entidad se imprime entera.
 563+ 8FF6
 564+ 8FF6 21 C2 90     	ld hl, Indice_entidades_completas
 565+ 8FF9 E6 01        	and 1
 566+ 8FFB 28 02        	jr z,1F
 567+ 8FFD
 568+ 8FFD 23           	inc hl
 569+ 8FFE 23           	inc hl
 570+ 8FFF
 571+ 8FFF CD E8 87     1 call Extrae_address
 572+ 9002 C9           	ret		;	ret
 573+ 9003
 574+ 9003              ;	La entidad no se imprime entera en pantalla.
 575+ 9003
 576+ 9003 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 9006 E6 01        	and 1
 578+ 9008 28 17        	jr z,3F
 579+ 900A
 580+ 900A              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 900A
 582+ 900A 21 C6 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 900D 3A 9C 85     4 ld a,(Columns)
 584+ 9010 E6 01        	and 1
 585+ 9012 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9014
 587+ 9014 23           	inc hl
 588+ 9015 23           	inc hl
 589+ 9016
 590+ 9016 3A D2 85     	ld a,(Columnas)
 591+ 9019 E6 01        	and 1
 592+ 901B 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 901D
 594+ 901D 23           	inc hl
 595+ 901E 23           	inc hl
 596+ 901F
 597+ 901F 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 9021
 599+ 9021 21 CC 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9024 18 E7        	jr 4B
 601+ 9026
 602+ 9026              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9026              ;
 604+ 9026              ;	Prepara_draw
 605+ 9026              ;
 606+ 9026              ;	Es una rutina de carga.
 607+ 9026              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9026              ;
 609+ 9026              ;	FUNCIONAMIENTO:
 610+ 9026              ;
 611+ 9026              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9026              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9026              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9026              ;
 615+ 9026              ;	DESTRUYE:
 616+ 9026              ;
 617+ 9026              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9026
 619+ 9026 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9029 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 902A 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 902B 4E           	ld c,(hl)
 623+ 902C 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 902F 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 9031 C9           	ret
 626+ 9032
 627+ 9032              ;----------------------------------------------------------------------------------------------------------------
 628+ 9032              ;
 629+ 9032              ;	5/08/22
 630+ 9032              ;
 631+ 9032              ;   NextScan.
 632+ 9032              ;
 633+ 9032              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9032              ;
 635+ 9032              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9032              ;
 637+ 9032              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9032              ;
 639+ 9032              ;       DESTRUIDOS: AF y HL !!!
 640+ 9032              ;
 641+ 9032              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9032              ;
 643+ 9032
 644+ 9032 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9033 7C               ld a,h
 646+ 9034 E6 07            and 7
 647+ 9036 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9037
 649+ 9037 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9038 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 903A 6F               ld l,a
 652+ 903B D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 903C
 654+ 903C 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 903D D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 903F 67               ld h,a
 657+ 9040 C9               ret
 658+ 9041
 659+ 9041              ;----------------------------------------------------------------------------------------------------------------
 660+ 9041              ;
 661+ 9041              ;	5/08/22
 662+ 9041              ;
 663+ 9041              ;   PreviousScan.
 664+ 9041              ;
 665+ 9041              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 9041              ;
 667+ 9041              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 9041              ;
 669+ 9041              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 9041              ;
 671+ 9041              ;       DESTRUIDOS: AF y HL !!!
 672+ 9041              ;
 673+ 9041              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 9041              ;
 675+ 9041
 676+ 9041 7C           PreviousScan ld a,h
 677+ 9042 25               dec h               ; Dec H.
 678+ 9043 E6 07            and 7
 679+ 9045 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9046
 681+ 9046 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9047 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9049 6F               ld l,a
 684+ 904A D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 904B
 686+ 904B 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 904C C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 904E 67               ld h,a
 689+ 904F C9               ret
 690+ 9050
 691+ 9050              ; -----------------------------------------------------------------------------------
 692+ 9050              ;
 693+ 9050              ;	28/2/23
 694+ 9050              ;
 695+ 9050              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 9050              ;	Extrae fotos de Album_de_fotos.
 697+ 9050
 698+ 9050 3A DE 85     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 9053 A7           	and a
 700+ 9054 C8           	ret z
 701+ 9055 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 9059 31 00 70     	ld sp,Album_de_fotos
 703+ 905C
 704+ 905C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 905E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 905F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 9060
 708+ 9060 ED 73 E1 85  	ld (Stack_2),sp
 709+ 9064 ED 7B DF 85  	ld sp,(Stack)
 710+ 9068
 711+ 9068              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 9068
 713+ 9068 3E CD        	ld a,$cd
 714+ 906A 32 72 90     	ld (Imprime),a
 715+ 906D EB           	ex de,hl
 716+ 906E 22 73 90     	ld (Imprime+1),hl
 717+ 9071 EB           	ex de,hl
 718+ 9072
 719+ 9072              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 9072
 721+ 9072 00 00 00     Imprime db 0,0,0
 722+ 9075
 723+ 9075 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 9078 3D           	dec a
 725+ 9079 28 09        	jr z,1F
 726+ 907B 32 DE 85      	ld (Numero_de_malotes),a
 727+ 907E
 728+ 907E ED 7B E1 85   	ld sp,(Stack_2)
 729+ 9082 18 D8        	jr 2B
 730+ 9084
 731+ 9084 AF           1 xor a
 732+ 9085 32 E1 85     	ld (Stack_2),a
 733+ 9088 C9           	ret
 734+ 9089
 735+ 9089              ; -----------------------------------------------------------------------------------
 736+ 9089              ;
 737+ 9089              ;	28/2/23
 738+ 9089              ;
 739+ 9089              ;	Pinta los disparos generados.
 740+ 9089
 741+ 9089              Extrae_foto_disparos
 742+ 9089
 743+ 9089 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 908C A7           	and a
 745+ 908D C8           	ret z
 746+ 908E ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9092 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 9095
 749+ 9095 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9097 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9098 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9099
 753+ 9099 ED 73 E1 85  	ld (Stack_2),sp
 754+ 909D ED 7B DF 85  	ld sp,(Stack)
 755+ 90A1
 756+ 90A1              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 90A1
 758+ 90A1 3E CD        	ld a,$cd
 759+ 90A3 32 AB 90     	ld (Imprime2),a
 760+ 90A6 EB           	ex de,hl
 761+ 90A7 22 AC 90     	ld (Imprime2+1),hl
 762+ 90AA EB           	ex de,hl
 763+ 90AB
 764+ 90AB              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 90AB
 766+ 90AB 00 00 00     Imprime2 db 0,0,0
 767+ 90AE
 768+ 90AE 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 90B1 3D           	dec a
 770+ 90B2 28 09        	jr z,1F
 771+ 90B4 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 90B7
 773+ 90B7 ED 7B E1 85  	ld sp,(Stack_2)
 774+ 90BB 18 D8        	jr 2B
 775+ 90BD
 776+ 90BD AF           1 xor a
 777+ 90BE 32 E1 85     	ld (Stack_2),a
 778+ 90C1 C9           	ret
 779+ 90C2
# file closed: Draw_XOR.asm
 982  90C2              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 90C2              ;   índices de Rutinas de impresión.
   2+ 90C2
   3+ 90C2 D2 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 90C4 FF 90            defw Pinta_Amadeus_3x2
   5+ 90C6
   6+ 90C6 55 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 90C8 F5 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 90CA A9 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 90CC
  10+ 90CC 7F 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 90CE 83 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 90D0 37 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 90D2
  14+ 90D2
  15+ 90D2              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 90D2              ;
  17+ 90D2              ;   12/12/22
  18+ 90D2              ;
  19+ 90D2              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 90D2              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 90D2              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 90D2              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 90D2              ;
  24+ 90D2              ;   Modifica: DE y HL.
  25+ 90D2
  26+ 90D2 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 90D6 FD F9        	ld sp,iy
  28+ 90D8 06 10            ld b,16
  29+ 90DA D1           1 pop de
  30+ 90DB 7B               ld a,e
  31+ 90DC AE               xor (hl)
  32+ 90DD 77           	ld (hl),a
  33+ 90DE 23           	inc hl
  34+ 90DF 7A               ld a,d
  35+ 90E0 AE               xor (hl)
  36+ 90E1 77           	ld (hl),a
  37+ 90E2 2B           	dec hl
  38+ 90E3 24           	inc h
  39+ 90E4 7C               ld a,h
  40+ 90E5 E6 07            and 7
  41+ 90E7 20 0A            jr nz,2F
  42+ 90E9 7D               ld a,l
  43+ 90EA C6 20            add a,$20
  44+ 90EC 6F               ld l,a
  45+ 90ED 38 04            jr c,2F
  46+ 90EF 7C               ld a,h
  47+ 90F0 D6 08            sub 8
  48+ 90F2 67               ld h,a
  49+ 90F3 7C           2 ld a,h
  50+ 90F4 FE 58            cp $58
  51+ 90F6 28 02            jr z,3F
  52+ 90F8 10 E0            djnz 1B
  53+ 90FA ED 7B DF 85  3 ld sp,(Stack)
  54+ 90FE C9           	ret
  55+ 90FF
  56+ 90FF ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9103 FD F9        	ld sp,iy
  58+ 9105 06 08            ld b,8
  59+ 9107 D1           1 pop de
  60+ 9108 7B               ld a,e
  61+ 9109 AE               xor (hl)
  62+ 910A 77           	ld (hl),a
  63+ 910B 23           	inc hl
  64+ 910C 7A               ld a,d
  65+ 910D AE               xor (hl)
  66+ 910E 77           	ld (hl),a
  67+ 910F 23           	inc hl
  68+ 9110 D1           	pop de
  69+ 9111 7B               ld a,e
  70+ 9112 AE               xor (hl)
  71+ 9113 77           	ld (hl),a
  72+ 9114 2B           	dec hl
  73+ 9115 2B           	dec hl
  74+ 9116 24           	inc h
  75+ 9117 7C               ld a,h
  76+ 9118 E6 07            and 7
  77+ 911A 20 0A            jr nz,2F
  78+ 911C 7D               ld a,l
  79+ 911D C6 20            add a,$20
  80+ 911F 6F               ld l,a
  81+ 9120 38 04            jr c,2F
  82+ 9122 7C               ld a,h
  83+ 9123 D6 08            sub 8
  84+ 9125 67               ld h,a
  85+ 9126 7C           2 ld a,h
  86+ 9127 FE 58            cp $58
  87+ 9129 28 25            jr z,4F
  88+ 912B 7A               ld a,d
  89+ 912C AE               xor (hl)
  90+ 912D 77               ld (hl),a
  91+ 912E D1           	pop de
  92+ 912F 23           	inc hl
  93+ 9130 7B               ld a,e
  94+ 9131 AE               xor (hl)
  95+ 9132 77           	ld (hl),a
  96+ 9133 23           	inc hl
  97+ 9134 7A               ld a,d
  98+ 9135 AE               xor (hl)
  99+ 9136 77           	ld (hl),a
 100+ 9137 2B           	dec hl
 101+ 9138 2B           	dec hl
 102+ 9139 24           	inc h
 103+ 913A 7C               ld a,h
 104+ 913B E6 07            and 7
 105+ 913D 20 0A            jr nz,3F
 106+ 913F 7D               ld a,l
 107+ 9140 C6 20            add a,$20
 108+ 9142 6F               ld l,a
 109+ 9143 38 04            jr c,3F
 110+ 9145 7C               ld a,h
 111+ 9146 D6 08            sub 8
 112+ 9148 67               ld h,a
 113+ 9149 7C           3 ld a,h
 114+ 914A FE 58            cp $58
 115+ 914C 28 02            jr z,4F
 116+ 914E 10 B7            djnz 1B
 117+ 9150 ED 7B DF 85  4 ld sp,(Stack)
 118+ 9154 C9           	ret
 119+ 9155
 120+ 9155              ; ---------------------------------------------------
 121+ 9155
 122+ 9155 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9159 FD F9        	ld sp,iy
 124+ 915B
 125+ 915B              ; >>>
 126+ 915B
 127+ 915B 06 10            ld b,16
 128+ 915D D1           1 pop de
 129+ 915E 7A           	ld a,d
 130+ 915F AE           	xor (hl)
 131+ 9160 77           	ld (hl),a
 132+ 9161 24           	inc h
 133+ 9162 7C               ld a,h
 134+ 9163 E6 07            and 7
 135+ 9165 20 0C            jr nz,2F
 136+ 9167 7D               ld a,l
 137+ 9168 C6 20            add a,$20
 138+ 916A 6F               ld l,a
 139+ 916B 38 06            jr c,2F
 140+ 916D 7C               ld a,h
 141+ 916E D6 08            sub 8
 142+ 9170 67               ld h,a
 143+ 9171 18 00            jr 2F
 144+ 9173 7C           2 ld a,h
 145+ 9174 FE 58            cp $58
 146+ 9176 28 02            jr z,3F
 147+ 9178 10 E3            djnz 1B
 148+ 917A ED 7B DF 85  3 ld sp,(Stack)
 149+ 917E C9           	ret
 150+ 917F
 151+ 917F ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9183 FD F9        	ld sp,iy
 153+ 9185
 154+ 9185              ; >>>
 155+ 9185
 156+ 9185 06 10            ld b,16
 157+ 9187 D1           1 pop de
 158+ 9188 7B           	ld a,e
 159+ 9189 AE           	xor (hl)
 160+ 918A 77           	ld (hl),a
 161+ 918B 24           	inc h
 162+ 918C 7C               ld a,h
 163+ 918D E6 07            and 7
 164+ 918F 20 0C            jr nz,2F
 165+ 9191 7D               ld a,l
 166+ 9192 C6 20            add a,$20
 167+ 9194 6F               ld l,a
 168+ 9195 38 06            jr c,2F
 169+ 9197 7C               ld a,h
 170+ 9198 D6 08            sub 8
 171+ 919A 67               ld h,a
 172+ 919B 18 00            jr 2F
 173+ 919D 7C           2 ld a,h
 174+ 919E FE 58            cp $58
 175+ 91A0 28 02            jr z,3F
 176+ 91A2 10 E3            djnz 1B
 177+ 91A4 ED 7B DF 85  3 ld sp,(Stack)
 178+ 91A8 C9           	ret
 179+ 91A9
 180+ 91A9              ; ---------------------------------------------------
 181+ 91A9
 182+ 91A9 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 91AD FD F9        	ld sp,iy
 184+ 91AF 06 08            ld b,8
 185+ 91B1 D1           1 pop de
 186+ 91B2 7A           	ld a,d
 187+ 91B3 AE           	xor (hl)
 188+ 91B4 77           	ld (hl),a
 189+ 91B5 23           	inc hl
 190+ 91B6 D1           	pop de
 191+ 91B7 7B           	ld a,e
 192+ 91B8 AE           	xor (hl)
 193+ 91B9 77           	ld (hl),a
 194+ 91BA 2B           	dec hl
 195+ 91BB 24            	inc h
 196+ 91BC 7C               ld a,h
 197+ 91BD E6 07            and 7
 198+ 91BF 20 0A            jr nz,2F
 199+ 91C1 7D               ld a,l
 200+ 91C2 C6 20            add a,$20
 201+ 91C4 6F               ld l,a
 202+ 91C5 38 04            jr c,2F
 203+ 91C7 7C               ld a,h
 204+ 91C8 D6 08            sub 8
 205+ 91CA 67               ld h,a
 206+ 91CB 7C           2 ld a,h
 207+ 91CC FE 58            cp $58
 208+ 91CE 28 20            jr z,4F
 209+ 91D0 D1               pop de
 210+ 91D1 7B           	ld a,e
 211+ 91D2 AE           	xor (hl)
 212+ 91D3 77           	ld (hl),a
 213+ 91D4 23           	inc hl
 214+ 91D5 7A           	ld a,d
 215+ 91D6 AE           	xor (hl)
 216+ 91D7 77           	ld (hl),a
 217+ 91D8 2B           	dec hl
 218+ 91D9 24           	inc h
 219+ 91DA 7C               ld a,h
 220+ 91DB E6 07            and 7
 221+ 91DD 20 0A            jr nz,3F
 222+ 91DF 7D               ld a,l
 223+ 91E0 C6 20            add a,$20
 224+ 91E2 6F               ld l,a
 225+ 91E3 38 04            jr c,3F
 226+ 91E5 7C               ld a,h
 227+ 91E6 D6 08            sub 8
 228+ 91E8 67               ld h,a
 229+ 91E9 7C           3 ld a,h
 230+ 91EA FE 58            cp $58
 231+ 91EC 28 02            jr z,4F
 232+ 91EE 10 C1            djnz 1B
 233+ 91F0 ED 7B DF 85  4 ld sp,(Stack)
 234+ 91F4 C9           	ret
 235+ 91F5
 236+ 91F5 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 91F9 FD F9        	ld sp,iy
 238+ 91FB 06 08            ld b,8
 239+ 91FD D1           1 pop de
 240+ 91FE D1           	pop de
 241+ 91FF 7B           	ld a,e
 242+ 9200 AE           	xor (hl)
 243+ 9201 77           	ld (hl),a
 244+ 9202 24            	inc h
 245+ 9203 7C               ld a,h
 246+ 9204 E6 07            and 7
 247+ 9206 20 0A            jr nz,2F
 248+ 9208 7D               ld a,l
 249+ 9209 C6 20            add a,$20
 250+ 920B 6F               ld l,a
 251+ 920C 38 04            jr c,2F
 252+ 920E 7C               ld a,h
 253+ 920F D6 08            sub 8
 254+ 9211 67               ld h,a
 255+ 9212 7C           2 ld a,h
 256+ 9213 FE 58            cp $58
 257+ 9215 28 1B            jr z,4F
 258+ 9217 D1               pop de
 259+ 9218 7A           	ld a,d
 260+ 9219 AE           	xor (hl)
 261+ 921A 77           	ld (hl),a
 262+ 921B 24           	inc h
 263+ 921C 7C               ld a,h
 264+ 921D E6 07            and 7
 265+ 921F 20 0A            jr nz,3F
 266+ 9221 7D               ld a,l
 267+ 9222 C6 20            add a,$20
 268+ 9224 6F               ld l,a
 269+ 9225 38 04            jr c,3F
 270+ 9227 7C               ld a,h
 271+ 9228 D6 08            sub 8
 272+ 922A 67               ld h,a
 273+ 922B 7C           3 ld a,h
 274+ 922C FE 58            cp $58
 275+ 922E 28 02            jr z,4F
 276+ 9230 10 CB            djnz 1B
 277+ 9232 ED 7B DF 85  4 ld sp,(Stack)
 278+ 9236 C9           	ret
 279+ 9237
 280+ 9237 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 923B FD F9        	ld sp,iy
 282+ 923D 06 08            ld b,8
 283+ 923F D1           1 pop de
 284+ 9240 7B           	ld a,e
 285+ 9241 AE           	xor (hl)
 286+ 9242 77           	ld (hl),a
 287+ 9243 23           	inc hl
 288+ 9244 7A           	ld a,d
 289+ 9245 AE           	xor (hl)
 290+ 9246 77           	ld (hl),a
 291+ 9247 2B           	dec hl
 292+ 9248 24             	inc h
 293+ 9249 7C               ld a,h
 294+ 924A E6 07            and 7
 295+ 924C 20 0A            jr nz,2F
 296+ 924E 7D               ld a,l
 297+ 924F C6 20            add a,$20
 298+ 9251 6F               ld l,a
 299+ 9252 38 04            jr c,2F
 300+ 9254 7C               ld a,h
 301+ 9255 D6 08            sub 8
 302+ 9257 67               ld h,a
 303+ 9258 7C           2 ld a,h
 304+ 9259 FE 58            cp $58
 305+ 925B 28 21            jr z,4F
 306+ 925D D1               pop de
 307+ 925E 7A           	ld a,d
 308+ 925F AE           	xor (hl)
 309+ 9260 77           	ld (hl),a
 310+ 9261 23           	inc hl
 311+ 9262 D1               pop de
 312+ 9263 7B           	ld a,e
 313+ 9264 AE           	xor (hl)
 314+ 9265 77           	ld (hl),a
 315+ 9266 2B           	dec hl
 316+ 9267 24           	inc h
 317+ 9268 7C               ld a,h
 318+ 9269 E6 07            and 7
 319+ 926B 20 0A            jr nz,3F
 320+ 926D 7D               ld a,l
 321+ 926E C6 20            add a,$20
 322+ 9270 6F               ld l,a
 323+ 9271 38 04            jr c,3F
 324+ 9273 7C               ld a,h
 325+ 9274 D6 08            sub 8
 326+ 9276 67               ld h,a
 327+ 9277 7C           3 ld a,h
 328+ 9278 FE 58            cp $58
 329+ 927A 28 02            jr z,4F
 330+ 927C 10 C1            djnz 1B
 331+ 927E ED 7B DF 85  4 ld sp,(Stack)
 332+ 9282 C9           	ret
 333+ 9283
 334+ 9283 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9287 FD F9        	ld sp,iy
 336+ 9289 06 08            ld b,8
 337+ 928B D1           1 pop de
 338+ 928C 7B           	ld a,e
 339+ 928D AE           	xor (hl)
 340+ 928E 77           	ld (hl),a
 341+ 928F 24            	inc h
 342+ 9290 7C               ld a,h
 343+ 9291 E6 07            and 7
 344+ 9293 20 0A            jr nz,2F
 345+ 9295 7D               ld a,l
 346+ 9296 C6 20            add a,$20
 347+ 9298 6F               ld l,a
 348+ 9299 38 04            jr c,2F
 349+ 929B 7C               ld a,h
 350+ 929C D6 08            sub 8
 351+ 929E 67               ld h,a
 352+ 929F 7C           2 ld a,h
 353+ 92A0 FE 58            cp $58
 354+ 92A2 28 1C            jr z,4F
 355+ 92A4 D1               pop de
 356+ 92A5 7A           	ld a,d
 357+ 92A6 AE           	xor (hl)
 358+ 92A7 77           	ld (hl),a
 359+ 92A8 24           	inc h
 360+ 92A9 7C               ld a,h
 361+ 92AA E6 07            and 7
 362+ 92AC 20 0A            jr nz,3F
 363+ 92AE 7D               ld a,l
 364+ 92AF C6 20            add a,$20
 365+ 92B1 6F               ld l,a
 366+ 92B2 38 04            jr c,3F
 367+ 92B4 7C               ld a,h
 368+ 92B5 D6 08            sub 8
 369+ 92B7 67               ld h,a
 370+ 92B8 7C           3 ld a,h
 371+ 92B9 FE 58            cp $58
 372+ 92BB 28 03            jr z,4F
 373+ 92BD D1               pop de
 374+ 92BE 10 CB            djnz 1B
 375+ 92C0 ED 7B DF 85  4 ld sp,(Stack)
 376+ 92C4 C9           	ret
 377+ 92C5
 378+ 92C5              ; ---------------------------------------------------
 379+ 92C5              ;
 380+ 92C5              ;   27/02/23
 381+ 92C5              ;
 382+ 92C5              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 92C5              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 92C5              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 92C5
 386+ 92C5 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 92C9 FD F9            ld sp,iy
 388+ 92CB 06 02            ld b,2
 389+ 92CD D1           1 pop de
 390+ 92CE 7B               ld a,e
 391+ 92CF AE               xor (hl)
 392+ 92D0 77               ld (hl),a
 393+ 92D1 23               inc hl
 394+ 92D2 7A               ld a,d
 395+ 92D3 AE               xor (hl)
 396+ 92D4 77               ld (hl),a
 397+ 92D5 2B               dec hl
 398+ 92D6
 399+ 92D6 24               inc h
 400+ 92D7 7C               ld a,h
 401+ 92D8 E6 07            and 7
 402+ 92DA 20 0A            jr nz,2F
 403+ 92DC 7D               ld a,l
 404+ 92DD C6 20            add a,$20
 405+ 92DF 6F               ld l,a
 406+ 92E0 38 04            jr c,2F
 407+ 92E2 7C               ld a,h
 408+ 92E3 D6 08            sub 8
 409+ 92E5 67               ld h,a
 410+ 92E6 7C           2 ld a,h
 411+ 92E7 FE 58            cp $58
 412+ 92E9 28 02            jr z,3F
 413+ 92EB
 414+ 92EB 10 E0            djnz 1B
 415+ 92ED ED 7B DF 85  3 ld sp,(Stack)
 416+ 92F1 C9               ret
 417+ 92F2
# file closed: Rutinas_de_impresion_sprites.asm
 983  92F2              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 92F2              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 92F2              ;
   3+ 92F2              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 92F2              ;
   5+ 92F2              ; *****************************************************************************************************************************************************************************************
   6+ 92F2              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 92F2
   8+ 92F2 7C           calcula_tercio ld a,h
   9+ 92F3 E6 18        	and $18
  10+ 92F5 CB 2F        	sra a
  11+ 92F7 CB 2F        	sra a
  12+ 92F9 CB 2F        	sra a
  13+ 92FB C9           	ret
  14+ 92FC
# file closed: calcula_tercio.asm
 984  92FC              	include "Cls.asm"
# file opened: Cls.asm
   1+ 92FC              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 92FC              ;
   3+ 92FC              ;
   4+ 92FC              ;	CLS.
   5+ 92FC              ;
   6+ 92FC              ;	Limpia la pantalla y define sus atributos.
   7+ 92FC              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 92FC              ;
   9+ 92FC              ;	COLORES: 0 ..... NEGRO
  10+ 92FC              ;    		 1 ..... AZUL
  11+ 92FC              ; 			 2 ..... ROJO
  12+ 92FC              ;			 3 ..... MAGENTA
  13+ 92FC              ; 			 4 ..... VERDE
  14+ 92FC              ; 			 5 ..... CIAN
  15+ 92FC              ;			 6 ..... AMARILLO
  16+ 92FC              ; 			 7 ..... BLANCO
  17+ 92FC              ;
  18+ 92FC              ;	INPUT: A contiene los atributos de pantalla.
  19+ 92FC              ;
  20+ 92FC              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 92FC
  22+ 92FC
  23+ 92FC 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 92FF 11 01 40     	LD DE,$4001
  25+ 9302 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9305 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9307 ED B0        	LDIR
  28+ 9309 01 FF 02     	LD BC,767
  29+ 930C 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 930D ED B0        	LDIR
  31+ 930F C9           	ret
  32+ 9310
# file closed: Cls.asm
 985  9310              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9310              ; ******************************************************************************************************************************************************************************************
   2+ 9310              ;
   3+ 9310              ;   22/01/23
   4+ 9310              ;
   5+ 9310              ;	Mov_down
   6+ 9310              ;
   7+ 9310              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9310              ;
   9+ 9310              ;
  10+ 9310 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9313 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9315              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9315              ; 																	; _ en el caso de que no lo haya.
  14+ 9315 3A B3 85     	ld a,(Vel_down)
  15+ 9318 47           	ld b,a
  16+ 9319 2A 9D 85         ld hl,(Posicion_actual)
  17+ 931C CD F2 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 931F E6 02        	and 2
  19+ 9321 28 0F        	jr z,1F
  20+ 9323
  21+ 9323              ; Nos encontramos en el último tercio de pantalla.
  22+ 9323              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9323
  24+ 9323 7C           	ld a,h
  25+ 9324 FE 57        	cp $57
  26+ 9326 20 0A        	jr nz,1F
  27+ 9328 7D           	ld a,l
  28+ 9329 C6 20        	add $20
  29+ 932B 30 05        	jr nc,1F
  30+ 932D
  31+ 932D              ; ------------------------------
  32+ 932D CD 08 96     	call Reaparece_arriba
  33+ 9330              ;	call Reinicio
  34+ 9330              ; ------------------------------
  35+ 9330
  36+ 9330 18 08        	jr 3F
  37+ 9332 CD 32 90     1 call NextScan
  38+ 9335 22 9D 85     	ld (Posicion_actual),hl
  39+ 9338 10 E2            djnz 2B
  40+ 933A CD 1E 96     3 call Genera_coordenadas
  41+ 933D C9           	ret
  42+ 933E
  43+ 933E              ; ******************************************************************************************************************************************************************************************
  44+ 933E              ;
  45+ 933E              ;   22/01/23
  46+ 933E              ;
  47+ 933E              ;	Mov_up
  48+ 933E              ;
  49+ 933E              ; 	Mueve el Sprite hacia arriba.
  50+ 933E              ;
  51+ 933E              ;
  52+ 933E 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9341 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9343              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9343              ; 																		; _ en el caso de que no lo haya.
  56+ 9343 3A B2 85     	ld a,(Vel_up)
  57+ 9346 47           	ld b,a
  58+ 9347 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 934A CD F2 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 934D A7           	and a
  61+ 934E 20 10        	jr nz,1F
  62+ 9350
  63+ 9350              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9350              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9350
  66+ 9350 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9351 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9353 20 0B            jr nz,1F
  69+ 9355 7D               ld a,l
  70+ 9356 D6 20            sub $20
  71+ 9358 30 06            jr nc,1F
  72+ 935A 25               dec h
  73+ 935B
  74+ 935B              ; -----------------------------
  75+ 935B CD F8 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 935E              ;	call Reinicio
  77+ 935E              ; -----------------------------
  78+ 935E
  79+ 935E 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 9360 CD 41 90     1 call PreviousScan
  81+ 9363 22 9D 85     	ld (Posicion_actual),hl
  82+ 9366 10 E2            djnz 3B
  83+ 9368 CD 1E 96     2 call Genera_coordenadas
  84+ 936B C9           	ret
  85+ 936C
  86+ 936C              ; ******************************************************************************************************************************************************************************************
  87+ 936C              ;
  88+ 936C              ;	19/10/22
  89+ 936C              ;
  90+ 936C              ;	Mov_right.
  91+ 936C              ;
  92+ 936C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 936C              ;
  94+ 936C
  95+ 936C 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 936F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9371              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9371              ; 																	; _ en el caso de que no lo haya.
  99+ 9371 3A C9 85     	ld a,(Ctrl_0)
 100+ 9374 CB 77        	bit 6,a
 101+ 9376 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9378
 103+ 9378 CD A6 95     	call Stop_Amadeus_right
 104+ 937B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 937C 18 4D        	jr 8F
 106+ 937E
 107+ 937E 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 9381 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9383 20 46        	jr nz,8F
 110+ 9385
 111+ 9385 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 9388 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9389 28 40        	jr z,8F
 114+ 938B
 115+ 938B              ; ---------- ---------- ----------
 116+ 938B              ;
 117+ 938B              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 938B
 119+ 938B 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 938E FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 9390 28 11        	jr z,1F
 122+ 9392 38 06        	jr c,6F
 123+ 9394 FE 04        	cp 4
 124+ 9396 28 14        	jr z,7F
 125+ 9398 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 939A
 127+ 939A              ; ---------- ---------- ----------
 128+ 939A              ;
 129+ 939A              ; Perfiles de velocidad
 130+ 939A              ;
 131+ 939A
 132+ 939A 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 939D FE FE        	cp $fe
 134+ 939F 20 2A        	jr nz,8F
 135+ 93A1 18 10        	jr 3F
 136+ 93A3 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 93A6 FE FD        	cp $fd
 138+ 93A8 20 21        	jr nz,8F
 139+ 93AA 18 07        	jr 3F
 140+ 93AC 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 93AF FE FB        	cp $fb
 142+ 93B1 20 18        	jr nz,8F
 143+ 93B3
 144+ 93B3              ; ---------- ---------- ----------
 145+ 93B3
 146+ 93B3              3
 147+ 93B3 CD E6 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 93B6              ;	call Reinicio
 149+ 93B6
 150+ 93B6              ; ---------- ---------- ----------
 151+ 93B6              ;
 152+ 93B6              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 93B6
 154+ 93B6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 93B8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 93B9 CD D2 93     	call DESPLZ_DER
 157+ 93BC C1           	pop bc
 158+ 93BD 10 F9        	djnz 5B
 159+ 93BF 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 93C2 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 93C3 22 9D 85     	ld (Posicion_actual),hl
 162+ 93C6 CD 1E 96     	call Genera_coordenadas
 163+ 93C9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 93CB
 165+ 93CB              ; ---------- ---------- ----------
 166+ 93CB
 167+ 93CB 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 93CE CD D2 93     	call DESPLZ_DER
 169+ 93D1 C9           2 ret
 170+ 93D2
 171+ 93D2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 93D2              ;
 173+ 93D2              ;	22/9/22
 174+ 93D2              ;
 175+ 93D2
 176+ 93D2 CD E1 93     DESPLZ_DER call Desplaza_derecha
 177+ 93D5 CD 2D 94         call modifica_parametros_1er_DESPLZ_2
 178+ 93D8 CD 56 94         call Ciclo_completo
 179+ 93DB 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 93DE CB FE        	set 7,(hl)
 181+ 93E0 C9           	ret
 182+ 93E1
 183+ 93E1              ; ******************************************************************************************************************************************************************************************
 184+ 93E1              ;	15/02/23
 185+ 93E1              ;
 186+ 93E1
 187+ 93E1 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 93E4 47           	ld b,a
 189+ 93E5 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 93E8 23           1 inc hl
 191+ 93E9 23           	inc hl
 192+ 93EA 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 93EC 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 93EF CD E8 87     	call Extrae_address
 195+ 93F2 22 9F 85     	ld (Puntero_objeto),hl
 196+ 93F5
 197+ 93F5              ; Modifica (Puntero_DESPLZ_izq).
 198+ 93F5
 199+ 93F5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 93F5              ; Cuántos movimientos hemos hecho ??
 201+ 93F5              ; DE contiene (Puntero_DESPLZ_der).
 202+ 93F5
 203+ 93F5 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 93F8 EB           	ex de,hl
 205+ 93F9 A7           	and a
 206+ 93FA ED 52        	sbc hl,de
 207+ 93FC CB 3D        	srl l
 208+ 93FE 3E 08        6 ld a,8
 209+ 9400 95           	sub l
 210+ 9401 30 1E        	jr nc,3F
 211+ 9403
 212+ 9403              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9403              ; B="0".
 214+ 9403
 215+ 9403 04           4 inc b
 216+ 9404 3C           	inc a
 217+ 9405 20 FC        	jr nz,4B
 218+ 9407 78           	ld a,b
 219+ 9408 08           	ex af,af
 220+ 9409 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 940C 23           5 inc hl
 222+ 940D 23           	inc hl
 223+ 940E 10 FC        	djnz 5B
 224+ 9410 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9413 CD E8 87     	call Extrae_address
 226+ 9416 22 9F 85     	ld (Puntero_objeto),hl
 227+ 9419
 228+ 9419              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 9419              ; _(Posicion_actual).
 230+ 9419
 231+ 9419 21 9D 85     	ld hl,Posicion_actual
 232+ 941C 34           	inc (hl)
 233+ 941D 08               ex af,af
 234+ 941E 6F           	ld l,a
 235+ 941F 18 DD        	jr 6B
 236+ 9421
 237+ 9421              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9421
 239+ 9421 47           3 ld b,a
 240+ 9422 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9425 23           2 inc hl
 242+ 9426 23           	inc hl
 243+ 9427 10 FC        	djnz 2B
 244+ 9429 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 942C C9           8 ret
 246+ 942D
 247+ 942D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 942D              ;
 249+ 942D              ;	24/7/22
 250+ 942D              ;
 251+ 942D              ;	modifica_parametros_1er_DESPLZ_2
 252+ 942D              ;
 253+ 942D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 942D              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 942D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 942D
 257+ 942D 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 9430 A7           	and a
 259+ 9431 20 1F        	jr nz,1F
 260+ 9433 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9435 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 9438
 263+ 9438 21 9C 85     	ld hl,Columns
 264+ 943B 34           	inc (hl)
 265+ 943C 3A AF 85     	ld a,(Cuad_objeto)
 266+ 943F E6 01        	and 1
 267+ 9441 28 0F        	jr z,1F
 268+ 9443 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9446 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9447 22 9D 85     	ld (Posicion_actual),hl
 271+ 944A CD 1E 96     	call Genera_coordenadas
 272+ 944D CD B2 95     	call Inc_CTRL_DESPLZ
 273+ 9450 18 03        	jr 2F
 274+ 9452 CD B2 95     1 call Inc_CTRL_DESPLZ
 275+ 9455 C9           2 ret
 276+ 9456
 277+ 9456              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9456              ;
 279+ 9456              ;	24/7/22
 280+ 9456              ;
 281+ 9456              ;	Ciclo_completo.
 282+ 9456              ;
 283+ 9456              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9456              ;
 285+ 9456              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9456              ; 	Decrementamos (Columns).
 287+ 9456              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9456              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9456
 290+ 9456
 291+ 9456 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9459 FE FF        	cp $ff
 293+ 945B 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 945D E6 F0        	and $f0
 295+ 945F 20 28        	jr nz,3F
 296+ 9461
 297+ 9461              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9461
 299+ 9461 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 9464 47           	ld b,a
 301+ 9465 3E F8        	ld a,$f8
 302+ 9467 80           	add b
 303+ 9468 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 946B 18 1C        	jr 3F
 305+ 946D 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 9470 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 9471 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9472 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 9475 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9478 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 947A 20 0A        	jr nz,2F
 312+ 947C 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 947F 23           	inc hl
 314+ 9480 22 9D 85     	ld (Posicion_actual),hl
 315+ 9483 CD 1E 96     	call Genera_coordenadas
 316+ 9486
 317+ 9486              ; Inicia el puntero de Sprite.
 318+ 9486
 319+ 9486 CD FF 87     2 call Inicia_puntero_objeto_der
 320+ 9489 C9           3 ret
 321+ 948A
 322+ 948A              ; ******************************************************************************************************************************************************************************************
 323+ 948A              ;
 324+ 948A              ;	15/02/23
 325+ 948A              ;
 326+ 948A              ;	Mov_left.
 327+ 948A              ;
 328+ 948A              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 948A              ;
 330+ 948A              Mov_left
 331+ 948A
 332+ 948A 21 C9 85     	ld hl,Ctrl_0
 333+ 948D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 948F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 948F              ; 																	; _ en el caso de que no lo haya.
 336+ 948F 3A C9 85     	ld a,(Ctrl_0)
 337+ 9492 CB 77        	bit 6,a
 338+ 9494 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 9496
 340+ 9496 CD AC 95     	call Stop_Amadeus_left
 341+ 9499 C8           	ret z
 342+ 949A 20 4A        	jr nz,8F
 343+ 949C
 344+ 949C 3A A1 85     11 ld a,(Coordenada_X)
 345+ 949F A7           	and a
 346+ 94A0 20 44        	jr nz,8F
 347+ 94A2
 348+ 94A2 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 94A5 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 94A6 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 94A8
 352+ 94A8              ; ---------- ---------- ----------
 353+ 94A8
 354+ 94A8 3A B0 85     	ld a,(Vel_left)
 355+ 94AB FE 02        	cp 2
 356+ 94AD 28 0F        	jr z,1F
 357+ 94AF 38 04        	jr c,6F
 358+ 94B1 FE 04        	cp 4
 359+ 94B3 28 12        	jr z,7F
 360+ 94B5
 361+ 94B5              ; ---------- ---------- ----------
 362+ 94B5
 363+ 94B5 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 94B8 FE F8        	cp $f8
 365+ 94BA 20 2A        	jr nz,8F
 366+ 94BC 18 10        	jr 4F
 367+ 94BE 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 94C1 FE F9        	cp $f9
 369+ 94C3 20 21        	jr nz,8F
 370+ 94C5 18 07        	jr 4F
 371+ 94C7 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 94CA FE FB        	cp $fb
 373+ 94CC 20 18        	jr nz,8F
 374+ 94CE
 375+ 94CE              ; ---------- ---------- ----------
 376+ 94CE
 377+ 94CE              4
 378+ 94CE CD D4 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 94D1              ;	call Reinicio
 380+ 94D1
 381+ 94D1              ; ---------- ---------- ----------
 382+ 94D1
 383+ 94D1 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 94D3 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 94D4
 386+ 94D4              ;	ld hl,(Indice_Sprite_izq)
 387+ 94D4              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 94D4
 389+ 94D4 CD ED 94     	call DESPLZ_IZQ
 390+ 94D7 C1           	pop bc
 391+ 94D8 10 F9        	djnz 5B
 392+ 94DA 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 94DD 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 94DE 22 9D 85     	ld (Posicion_actual),hl
 395+ 94E1 CD 1E 96     	call Genera_coordenadas
 396+ 94E4 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 94E6
 398+ 94E6              ; ---------- ---------- ----------
 399+ 94E6
 400+ 94E6              ; Movemos, no hay recolocación.
 401+ 94E6
 402+ 94E6 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 94E9 CD ED 94     	call DESPLZ_IZQ
 404+ 94EC C9           2 ret
 405+ 94ED
 406+ 94ED              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 94ED              ;
 408+ 94ED              ;	22/9/22
 409+ 94ED
 410+ 94ED              DESPLZ_IZQ
 411+ 94ED
 412+ 94ED CD FC 94     	call Desplaza_izquierda
 413+ 94F0 CD 48 95         call modifica_parametros_1er_DESPLZ
 414+ 94F3 CD 70 95     	call Ciclo_completo_2
 415+ 94F6 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 94F9 CB BE        	res 7,(hl)
 417+ 94FB C9           	ret
 418+ 94FC
 419+ 94FC              Desplaza_izquierda
 420+ 94FC
 421+ 94FC 3A B0 85     	ld a,(Vel_left)
 422+ 94FF 47           	ld b,a
 423+ 9500 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9503 23           1 inc hl
 425+ 9504 23           	inc hl
 426+ 9505 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9507 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 950A CD E8 87     	call Extrae_address
 429+ 950D 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9510
 431+ 9510              ; Modifica (Puntero_DESPLZ_der).
 432+ 9510
 433+ 9510              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9510              ; Cuántos movimientos hemos hecho ??
 435+ 9510              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9510
 437+ 9510 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9513 EB           	ex de,hl
 439+ 9514 A7           	and a
 440+ 9515 ED 52        	sbc hl,de
 441+ 9517 CB 3D        	srl l
 442+ 9519 3E 08        6 ld a,8
 443+ 951B 95           	sub l
 444+ 951C 30 1E        	jr nc,3F
 445+ 951E
 446+ 951E              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 951E              ; B="0".
 448+ 951E
 449+ 951E 04           4 inc b
 450+ 951F 3C           	inc a
 451+ 9520 20 FC        	jr nz,4B
 452+ 9522 78           	ld a,b
 453+ 9523 08           	ex af,af
 454+ 9524 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9527 23           5 inc hl
 456+ 9528 23           	inc hl
 457+ 9529 10 FC        	djnz 5B
 458+ 952B 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 952E CD E8 87     	call Extrae_address
 460+ 9531 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9534
 462+ 9534              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9534              ; _(Posicion_actual).
 464+ 9534
 465+ 9534 21 9D 85     	ld hl,Posicion_actual
 466+ 9537 35           	dec (hl)
 467+ 9538 08           	ex af,af
 468+ 9539 6F           	ld l,a
 469+ 953A 18 DD        	jr 6B
 470+ 953C
 471+ 953C              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 953C
 473+ 953C 47           3 ld b,a
 474+ 953D 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 9540 23           2 inc hl
 476+ 9541 23           	inc hl
 477+ 9542 10 FC        	djnz 2B
 478+ 9544 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9547 C9           8 ret
 480+ 9548
 481+ 9548              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9548              ;
 483+ 9548              ;	modifica_parametros_1er_DESPLZ
 484+ 9548              ;
 485+ 9548              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9548              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9548              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9548
 489+ 9548 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 954B A7           	and a
 491+ 954C 20 1E        	jr nz,1F
 492+ 954E 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 954F 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9552 21 9C 85     	ld hl,Columns
 495+ 9555 34           	inc (hl)
 496+ 9556 3A AF 85     	ld a,(Cuad_objeto)
 497+ 9559 E6 01        	and 1
 498+ 955B 20 0F        	jr nz,1F
 499+ 955D 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 9560 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9561 22 9D 85     	ld (Posicion_actual),hl
 502+ 9564 CD 1E 96     	call Genera_coordenadas
 503+ 9567 CD C3 95     	call Dec_CTRL_DESPLZ
 504+ 956A 18 03        	jr 2F
 505+ 956C CD C3 95     1 call Dec_CTRL_DESPLZ
 506+ 956F C9           2 ret
 507+ 9570
 508+ 9570              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 9570
 510+ 9570 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9573 FE F7        	cp $f7
 512+ 9575 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9577 30 2C        	jr nc,3F
 514+ 9579
 515+ 9579              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9579
 517+ 9579 06 00        	ld b,0
 518+ 957B 04           4 inc b
 519+ 957C 3C           	inc a
 520+ 957D FE F7        	cp $f7
 521+ 957F 20 FA        	jr nz,4B
 522+ 9581 3E FF        	ld a,$ff
 523+ 9583 90           	sub b
 524+ 9584 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 9587 18 1C        	jr 3F
 526+ 9589
 527+ 9589              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9589
 529+ 9589 21 9C 85     1 ld hl,Columns
 530+ 958C 35           	dec (hl)
 531+ 958D AF           	xor a
 532+ 958E 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 9591 3A AF 85     	ld a,(Cuad_objeto)
 534+ 9594 E6 01        	and 1
 535+ 9596 28 0A        	jr z,2F
 536+ 9598 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 959B 2B           	dec hl
 538+ 959C 22 9D 85     	ld (Posicion_actual),hl
 539+ 959F CD 1E 96     	call Genera_coordenadas
 540+ 95A2
 541+ 95A2              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 95A2
 543+ 95A2 CD 12 88     2 call Inicia_puntero_objeto_izq
 544+ 95A5 C9           3 ret
 545+ 95A6
 546+ 95A6              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 95A6              ;
 548+ 95A6              ;	19/10/22
 549+ 95A6              ;
 550+ 95A6              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 95A6              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 95A6
 553+ 95A6 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 95A9 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 95AB C9           	ret
 556+ 95AC
 557+ 95AC              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 95AC              ;
 559+ 95AC              ;	19/10/22
 560+ 95AC              ;
 561+ 95AC              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 95AC              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 95AC
 564+ 95AC 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 95AF FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 95B1 C9           	ret
 567+ 95B2
 568+ 95B2              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 95B2              ;
 570+ 95B2              ;	24/7/22
 571+ 95B2              ;
 572+ 95B2              ;	Inc_CTRL_DESPLZ
 573+ 95B2              ;
 574+ 95B2              ;
 575+ 95B2              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 95B2
 577+ 95B2 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 95B5 3A B1 85     	ld a,(Vel_right)
 579+ 95B8 A7           	and a
 580+ 95B9 28 06        	jr z,1F
 581+ 95BB 47           	ld b,a
 582+ 95BC 34           3 inc (hl)
 583+ 95BD 10 FD        	djnz 3B
 584+ 95BF 18 01        	jr 2F
 585+ 95C1 34           1 inc (hl)
 586+ 95C2 C9           2 ret
 587+ 95C3
 588+ 95C3              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 95C3              ;
 590+ 95C3              ;	5/2/23
 591+ 95C3              ;
 592+ 95C3              ;	Dec_CTRL_DESPLZ
 593+ 95C3              ;
 594+ 95C3              ;
 595+ 95C3              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 95C3
 597+ 95C3 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 95C6 3A B0 85     	ld a,(Vel_left)
 599+ 95C9 A7           	and a
 600+ 95CA 28 06        	jr z,1F
 601+ 95CC 47           	ld b,a
 602+ 95CD 35           3 dec (hl)
 603+ 95CE 10 FD        	djnz 3B
 604+ 95D0 18 01        	jr 2F
 605+ 95D2 35           1 dec (hl)
 606+ 95D3 C9           2 ret
 607+ 95D4
 608+ 95D4              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 95D4
 610+ 95D4 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 95D7 01 1F 00     	ld bc,31
 612+ 95DA A7           	and a
 613+ 95DB ED 4A        	adc hl,bc
 614+ 95DD 22 9D 85     	ld (Posicion_actual),hl
 615+ 95E0 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 95E3 CB C6        	set 0,(hl)
 617+ 95E5 C9           	ret
 618+ 95E6
 619+ 95E6              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 95E6
 621+ 95E6 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 95E9 01 1F 00     	ld bc,31
 623+ 95EC A7           	and a
 624+ 95ED ED 42        	sbc hl,bc
 625+ 95EF 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 95F2 21 C9 85     	ld hl,Ctrl_0
 627+ 95F5 CB CE        	set 1,(hl)
 628+ 95F7 C9           	ret
 629+ 95F8
 630+ 95F8              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 95F8
 632+ 95F8 24           Reaparece_abajo inc h
 633+ 95F9 01 E0 17     	ld bc,$17e0
 634+ 95FC A7           	and a
 635+ 95FD ED 4A        	adc hl,bc
 636+ 95FF 22 9D 85     	ld (Posicion_actual),hl
 637+ 9602 21 C9 85     	ld hl,Ctrl_0
 638+ 9605 CB D6        	set 2,(hl)
 639+ 9607 C9           	ret
 640+ 9608
 641+ 9608              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9608
 643+ 9608 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 960B A7           	and a
 645+ 960C ED 42        	sbc hl,bc
 646+ 960E 22 9D 85     	ld (Posicion_actual),hl
 647+ 9611 21 C9 85     	ld hl,Ctrl_0
 648+ 9614 CB DE        	set 3,(hl)
 649+ 9616 C9           	ret
 650+ 9617
 651+ 9617              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9617
 653+ 9617 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 961A 22 9D 85     	ld (Posicion_actual),hl
 655+ 961D C9           	ret
# file closed: Direcciones.asm
 986  961E              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 961E              ; ------------------------------------------------------------------------
   2+ 961E              ;
   3+ 961E              ;	02/04/23
   4+ 961E              ;
   5+ 961E              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 961E              ;	Fila superior "0", Columna izquierda "0".
   7+ 961E              ;
   8+ 961E              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 961E              ;
  10+ 961E              ;	Modifica: A,BC y DE.
  11+ 961E
  12+ 961E C5           Genera_coordenadas push bc
  13+ 961F E5           	push hl
  14+ 9620 D5           	push de
  15+ 9621
  16+ 9621 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9624
  18+ 9624 7D           	ld a,l
  19+ 9625 E6 1F        	and $1f
  20+ 9627 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 962A
  22+ 962A CD F2 92     	call calcula_tercio
  23+ 962D 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 962E
  25+ 962E 1E 00        	ld e,0
  26+ 9630 7D           	ld a,l
  27+ 9631 E6 E0        	and $e0
  28+ 9633 28 01        	jr z,1F
  29+ 9635 04           	inc b
  30+ 9636
  31+ 9636 04           1 inc b
  32+ 9637 05           	dec b
  33+ 9638 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 963A              ;														; _ , salimos.
  35+ 963A 1C           3 inc e
  36+ 963B D6 20        	sub 32
  37+ 963D 20 FB        	jr nz,3B
  38+ 963F 10 F5        	djnz 1B
  39+ 9641
  40+ 9641 7B           2 ld a,e
  41+ 9642 32 A2 85     	ld (Coordenada_y),a
  42+ 9645
  43+ 9645 D1           	pop de
  44+ 9646 E1           	pop hl
  45+ 9647 C1           	pop bc
  46+ 9648
  47+ 9648 C9           	ret
  48+ 9649
  49+ 9649              ; ------------------------------------------------------------------------
  50+ 9649              ;	28/03/23
  51+ 9649              ;
  52+ 9649              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9649              ;	Fila superior "0", Columna izquierda "0".
  54+ 9649              ;
  55+ 9649              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9649              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9649              ;
  58+ 9649              ;		DE="$120d"
  59+ 9649              ;
  60+ 9649              ;		D, (Coordenada_X), Columnas, $12
  61+ 9649              ;		E, (Coordenada_y), Filas, $0d
  62+ 9649              ;
  63+ 9649              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9649
  65+ 9649              ;	Modifica: A,BC y DE.
  66+ 9649
  67+ 9649
  68+ 9649              Genera_coordenadas_disparo
  69+ 9649
  70+ 9649              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9649
  72+ 9649 7D           	ld a,l
  73+ 964A E6 1F        	and $1f
  74+ 964C 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 964D CD F2 92     	call calcula_tercio
  76+ 9650 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9651 1E 00        	ld e,0
  78+ 9653 7D           	ld a,l
  79+ 9654 E6 E0        	and $e0
  80+ 9656 28 01        	jr z,1F
  81+ 9658 04           	inc b
  82+ 9659 1C           1 inc e
  83+ 965A D6 20        	sub 32
  84+ 965C 20 FB        	jr nz,1B
  85+ 965E 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9660 C9           	ret
  87+ 9661
# file closed: Genera_coordenadas.asm
 987  9661              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9661
   2+ 9661
   3+ 9661              ;   11/8/22
   4+ 9661              ;
   5+ 9661              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9661              ;
   7+ 9661              ;   Mov_obj.asm
   8+ 9661              ;
   9+ 9661              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9661              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9661              ;
  12+ 9661              ;   Codificación:
  13+ 9661              ;
  14+ 9661              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9661
  16+ 9661              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9661
  18+ 9661 02 40 00     Arriba db 2,%01000000,0
  19+ 9664 02 80 00     Abajo db 2,%10000000,0
  20+ 9667 02 20 00     Derecha db 2,%00100000,0
  21+ 966A 02 10 00     Izquierda db 2,%00010000,0
  22+ 966D 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9671 60 42 60 40
  22+ 9675 63
  23+ 9676 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 967A 22 A3 80 A0
  24+ 967E 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9682 84 A0 83 A0
  25+ 9686 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 968A 80 A3 22 A0
  26+ 968E 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9692 40 60 42 60
  27+ 9696 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 969A
  29+ 969A 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 969E 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 96A2 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 96A6 84 00
  32+ 96A8 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 96AC 84 00
  33+ 96AE 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 96B2 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 96B6 1F 1F 1F 1F
  35+ 96BA 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 96BE 1F 1F 1F 1F
  35+ 96C2 1F
  36+ 96C3 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 96C7 2F 2F 2F 2F
  36+ 96CB 2F 2F
  37+ 96CD 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 96D1 2F 2F 00
  38+ 96D4
  39+ 96D4              ; ----- ----- ----- ----- -----
  40+ 96D4
  41+ 96D4 B2 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 96D6 AE 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 96D8 6A 96        Indice_mov_Izquierda defw Izquierda
  44+ 96DA 67 96        Indice_mov_Derecha defw Derecha
  45+ 96DC 64 96        Indice_mov_Abajo defw Abajo
  46+ 96DE 61 96        Indice_mov_Arriba defw Arriba
  47+ 96E0 9E 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 96E2 A2 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 96E4 9A 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 96E6 A8 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 96E8 6D 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 96EA              ; ----- ----- ----- ----- -----
  53+ 96EA
  54+ 96EA 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 96ED A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 96EE 28 02            jr z,1F
  57+ 96F0 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 96F2 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 96F5 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 96F7 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 96FA              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 96FA 2A CD 85         ld hl,(Puntero_mov)
  63+ 96FD 7E               ld a,(hl)
  64+ 96FE 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 9701 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9702 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9705
  68+ 9705 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 9708 A7               and a
  70+ 9709 20 0C            jr nz,12F
  71+ 970B 2A CD 85         ld hl,(Puntero_mov)
  72+ 970E 7E               ld a,(hl)
  73+ 970F A7               and a
  74+ 9710 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9712 E6 0F            and $0f
  76+ 9714 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9717              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9717 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 971A CB 7E            bit 7,(hl)
  80+ 971C 28 03            jr z,2F
  81+ 971E CD 10 93         call Mov_down
  82+ 9721 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9724 CB 76            bit 6,(hl)
  84+ 9726 28 03            jr z,3F
  85+ 9728 CD 3E 93         call Mov_up
  86+ 972B 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 972E CB 6E            bit 5,(hl)
  88+ 9730 28 03            jr z,4F
  89+ 9732 CD 6C 93         call Mov_right
  90+ 9735 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 9738 CB 66            bit 4,(hl)
  92+ 973A 28 03            jr z,5F
  93+ 973C CD 8A 94         call Mov_left
  94+ 973F
  95+ 973F              ; ---------- --------- --------- ---------- ----------
  96+ 973F
  97+ 973F 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9742 A7               and a
  99+ 9743 28 07            jr z,6F
 100+ 9745 3D               dec a
 101+ 9746 32 D1 85         ld (Repetimos_db),a
 102+ 9749 28 01            jr z,6f
 103+ 974B C9           11 ret
 104+ 974C 21 CF 85     6 ld hl,Contador_db_mov
 105+ 974F 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9750 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9753 23               inc hl
 108+ 9754 22 CD 85         ld (Puntero_mov),hl
 109+ 9757 18 F2            jr 11B
 110+ 9759 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 975C 3A D0 85         ld a,(Incrementa_puntero)
 112+ 975F 47               ld b,a
 113+ 9760 23           8 inc hl
 114+ 9761 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9763 5E               ld e,(hl)
 116+ 9764 23               inc hl
 117+ 9765 56               ld d,(hl)
 118+ 9766 EB               ex de,hl
 119+ 9767 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 976A 18 DF            jr 11B
 121+ 976C
 122+ 976C              ; ---------- --------- --------- ---------- ----------
 123+ 976C              ;
 124+ 976C              ;   11/8/22
 125+ 976C              ;
 126+ 976C              ;   Prepara_Puntero_mov
 127+ 976C
 128+ 976C E5           Prepara_Puntero_mov push hl
 129+ 976D D5               push de
 130+ 976E 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 9771 5E               ld e,(hl)
 132+ 9772 23               inc hl
 133+ 9773 56               ld d,(hl)
 134+ 9774 EB               ex de,hl
 135+ 9775 22 CD 85         ld (Puntero_mov),hl
 136+ 9778 D1               pop de
 137+ 9779 E1               pop hl
 138+ 977A C9               ret
 139+ 977B
 140+ 977B              ; ---------- --------- --------- ---------- ----------
 141+ 977B              ;
 142+ 977B              ;   11/8/22
 143+ 977B              ;
 144+ 977B              ;   Reinicia_el_movimiento
 145+ 977B
 146+ 977B CD 6C 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 977E AF               xor a
 148+ 977F 32 CF 85         ld (Contador_db_mov),a
 149+ 9782 32 D0 85         ld (Incrementa_puntero),a
 150+ 9785 C3 EA 96         jp Movimiento
 151+ 9788 C9               ret
 152+ 9789              ; ---------- --------- --------- ---------- ----------
 153+ 9789
 154+ 9789
 155+ 9789
 156+ 9789
 157+ 9789
 158+ 9789
 159+ 9789
 160+ 9789
 161+ 9789
 162+ 9789
 163+ 9789
 164+ 9789
 165+ 9789
 166+ 9789
 167+ 9789
 168+ 9789
 169+ 9789
 170+ 9789
# file closed: Patrones_de_mov.asm
 988  9789              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9789              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9789              ;
   3+ 9789              ;	3/1/23
   4+ 9789              ;
   5+ 9789              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9789
   7+ 9789              ;	ADC HL,SP	LD (addr),SP
   8+ 9789              ;	ADD HL,SP	LD SP,(addr)
   9+ 9789              ;	ADD IX,SP	LD SP,nn
  10+ 9789              ; 	ADD IY,SP	LD SP,HL
  11+ 9789              ;				LD SP,IX
  12+ 9789              ;	DEC SP		LD SP,IY
  13+ 9789
  14+ 9789              ;	EX (SP),HL
  15+ 9789              ;	EX (SP),IX
  16+ 9789              ;	EX (SP),IY
  17+ 9789
  18+ 9789              ;	INC SP
  19+ 9789
  20+ 9789
  21+ 9789                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 989  7FD4
 990  7FD4              	SAVESNA "Pruebas.sna", START
 991  7FD4
 992  7FD4
 993  7FD4
# file closed: Banco_de_pruebas.asm
