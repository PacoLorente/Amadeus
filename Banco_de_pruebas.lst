# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 4E 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 DD 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 CD 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB DD 96        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad.
 167  85D7
 168  85D7              ; Gestión de ENTIDADES.
 169  85D7
 170  85D7 00 00        Puntero_store_entidades defw 0
 171  85D9 00 00        Puntero_restore_entidades defw 0
 172  85DB 00 00        Indice_restore defw 0
 173  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 174  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 175  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 176  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 177  85DF              ;														; _ (Numero_de_malotes)="0".
 178  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 179  85E1              ;														; _variable para almacenar lo posición del puntero_
 180  85E1              ; 														; _de pila, SP.
 181  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 182  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 183  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 184  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 185  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 186  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 187  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 188  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 189  85E7
 190  85E7              ;---------------------------------------------------------------------------------------------------------------
 191  85E7
 192  85E7              ; Gestión de Disparos.
 193  85E7
 194  85E7 00           Numero_de_disparotes db 0
 195  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 196  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 197  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 198  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 199  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 200  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 201  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 202  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 203  85EF              ;														; _produzca colisión.
 204  85EF 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 205  85F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 206  85F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 207  85F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 208  85F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 209  85F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 210  85F7
 211  85F7              ;---------------------------------------------------------------------------------------------------------------
 212  85F7
 213  85F7              ; Relojes y temporizaciones.
 214  85F7
 215  85F7 01           Habilita_disparo_Amadeus db 1
 216  85F8 1E           Temporiza_disparo_Amadeus db 30
 217  85F9
 218  85F9              ;---------------------------------------------------------------------------------------------------------------
 219  85F9
 220  85F9              ; Gestión de FRAMES.
 221  85F9
 222  85F9 00           Switch db 0
 223  85FA
 224  85FA              ; Variables de Raster y localización en pantalla.
 225  85FA
 226  85FA 00 FF        Temp_Raster defw $ff00
 227  85FC
 228  85FC              ; Rutina principal *************************************************************************************************************************************************************************
 229  85FC              ;
 230  85FC              ;	14/11/22
 231  85FC
 232  85FC 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 233  85FF
 234  85FF 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 235  8601 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 236  8603 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 237  8605 F3           	DI
 238  8606
 239  8606 3E 07        	ld a,%00000111
 240  8608 CD F1 92     	call Cls
 241  860B
 242  860B              ;	call Pinta_FILAS
 243  860B
 244  860B CD AD 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 245  860E
 246  860E 21 DD 85     	ld hl,Numero_de_entidades
 247  8611 46           	ld b,(hl)
 248  8612 04           	inc b
 249  8613 05           	dec b
 250  8614 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 251  8616
 252  8616              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 253  8616              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 254  8616              ;	Pintamos el resto de entidades:
 255  8616
 256  8616 CD 94 87     	call Inicia_punteros_de_entidades
 257  8619
 258  8619              ;	INICIA ENTIDADES!!!!!
 259  8619
 260  8619 C5           1 push bc  												; Guardo el contador de entidades.
 261  861A CD EE 87      	call Inicia_Puntero_objeto
 262  861D CD 41 8D     	call Draw
 263  8620 CD A0 7F     	call Guarda_foto_registros
 264  8623 CD 36 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 265  8626 C1           	pop bc
 266  8627 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 267  8629
 268  8629              ; 	INICIA AMADEUS!!!!!
 269  8629
 270  8629 CD 89 88     3 call Restore_Amadeus
 271  862C CD EE 87     	call Inicia_Puntero_objeto
 272  862F CD 41 8D     	call Draw
 273  8632 CD A0 7F     	call Guarda_foto_registros
 274  8635 CD 9B 88     	call Store_Amadeus
 275  8638
 276  8638              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 277  8638
 278  8638 CD AA 87     	call Inicia_Puntero_Disparo_Entidades
 279  863B CD B1 87     	call Inicia_Puntero_Disparo_Amadeus
 280  863E
 281  863E              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 282  863E
 283  863E CD 94 87     	call Inicia_punteros_de_entidades
 284  8641 CD 77 88     	call Restore_Primera_entidad
 285  8644
 286  8644 3A DD 85     	ld a,(Numero_de_entidades)
 287  8647 3C           	inc a
 288  8648 32 DE 85     	ld (Numero_de_malotes),a
 289  864B
 290  864B FB           2 ei
 291  864C 18 FD        	jr 2B
 292  864E
 293  864E              ; -----------------------------------------------------------------------------------
 294  864E
 295  864E              Frame
 296  864E
 297  864E              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 298  864E              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 299  864E
 300  864E 3E 02            ld a,2
 301  8650 D3 FE            out ($fe),a
 302  8652 CD 45 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 303  8655 CD 7E 90     	call Extrae_foto_disparos
 304  8658 3E 01            ld a,1
 305  865A D3 FE            out ($fe),a
 306  865C
 307  865C              ; ----------------------------------------------------------------------
 308  865C
 309  865C 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 310  865F A7           	and a
 311  8660 20 12        	jr nz,8F
 312  8662
 313  8662 21 F8 85     	ld hl,Temporiza_disparo_Amadeus
 314  8665 35           	dec (hl)
 315  8666
 316  8666 34           	inc (hl)
 317  8667 35           	dec (hl)
 318  8668
 319  8668 20 0A        	jr nz,8F
 320  866A
 321  866A 3E 01        	ld a,1
 322  866C 32 F7 85     	ld (Habilita_disparo_Amadeus),a
 323  866F 3E 1E        	ld a,30
 324  8671 32 F8 85     	ld (Temporiza_disparo_Amadeus),a
 325  8674
 326  8674              ;	Existe colisión?????
 327  8674
 328  8674 CD DF 8C     8 call Selector_de_impactos
 329  8677
 330  8677              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 331  8677              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 332  8677              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 333  8677
 334  8677 AF           	xor a
 335  8678 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 336  867B
 337  867B CD 94 87     	call Inicia_punteros_de_entidades
 338  867E CD 77 88     	call Restore_Primera_entidad
 339  8681
 340  8681 AF           	xor a
 341  8682 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 342  8685
 343  8685 CD 5F 8B     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 344  8688 21 00 70     	ld hl,Album_de_fotos
 345  868B 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 346  868E              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 347  868E 3A DD 85         ld a,(Numero_de_entidades)
 348  8691 47               ld b,a
 349  8692 A7           	and a
 350  8693 28 3A        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 351  8695
 352  8695              ; ----- ----- ----- ----- -----
 353  8695
 354  8695              ; Código que ejecutamos con cada entidad:
 355  8695
 356  8695              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 357  8695              ; _con las coordenadas de la entidad almacenada en DRAW.
 358  8695
 359  8695 3A D6 85     2 ld a,(Ctrl_1)
 360  8698 CB 57        	bit 2,a
 361  869A 28 0D        	jr z,7F
 362  869C
 363  869C 2A EF 85     	ld hl,(Coordenadas_disparo_certero)
 364  869F EB           	ex de,hl 										; D contiene la coordenada_y del disparo.
 365  86A0              ;													; E contiene la coordenada_X del disparo.
 366  86A0 2A A1 85     	ld hl,(Coordenada_X) 							; L Coordenada_x de la entidad.
 367  86A3              ;													; H Coordenado_y de la entidad.
 368  86A3 A7           	and a
 369  86A4 ED 52        	sbc hl,de
 370  86A6
 371  86A6 CD 16 8D     	call Determina_resultado_comparativa
 372  86A9
 373  86A9
 374  86A9
 375  86A9
 376  86A9
 377  86A9
 378  86A9
 379  86A9 3A B4 85     7 ld a,(Impacto)
 380  86AC A7           	and a
 381  86AD 20 FE        	jr nz,$
 382  86AF
 383  86AF              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 384  86AF
 385  86AF C5           	push bc
 386  86B0 CD FF 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 387  86B3
 388  86B3 3A C9 85     	ld a,(Ctrl_0)
 389  86B6 CB 67        	bit 4,a
 390  86B8 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 391  86BA
 392  86BA              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 393  86BA              ; Las entidades sólo generan disparo cuando se mueven.
 394  86BA              ; 16/02/23.
 395  86BA              ; [[[
 396  86BA CD F8 88     	call Detecta_disparo_entidad
 397  86BD              ; ]]]
 398  86BD CD 5B 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 399  86C0
 400  86C0 21 C9 85     1 ld hl,Ctrl_0
 401  86C3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 402  86C5 AF           	xor a
 403  86C6 32 CA 85     	ld (Obj_dibujado),a
 404  86C9
 405  86C9 CD 36 88     6 call Store_Restore_entidades
 406  86CC C1           	pop bc
 407  86CD 10 C6        	djnz 2B
 408  86CF
 409  86CF              ; Tras la gestión de las entidades, ... AMADEUS.
 410  86CF
 411  86CF CD 89 88     4 call Restore_Amadeus
 412  86D2
 413  86D2              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 414  86D2
 415  86D2 3A B4 85     	ld a,(Impacto)
 416  86D5 A7           	and a
 417  86D6 20 FE        	jr nz,$
 418  86D8
 419  86D8              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 420  86D8
 421  86D8 CD 2C 87     	call Mov_Amadeus
 422  86DB
 423  86DB 3A C9 85     	ld a,(Ctrl_0)
 424  86DE CB 67        	bit 4,a
 425  86E0 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 426  86E2
 427  86E2 CD 5B 87     	call Guarda_foto_entidad_a_pintar
 428  86E5
 429  86E5 21 C9 85     3 ld hl,Ctrl_0
 430  86E8 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 431  86EA AF           	xor a
 432  86EB 32 CA 85     	ld (Obj_dibujado),a
 433  86EE
 434  86EE CD 9B 88     	call Store_Amadeus
 435  86F1
 436  86F1 CD 7D 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 437  86F4
 438  86F4              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 439  86F4
 440  86F4 CD B8 87     	call Calcula_numero_de_malotes
 441  86F7 CD D0 87     	call Calcula_numero_de_disparotes
 442  86FA
 443  86FA 3E 04        	ld a,4
 444  86FC D3 FE        	out ($fe),a
 445  86FE C9           	ret
 446  86FF
 447  86FF              ; --------------------------------------------------------------------------------------------------------------
 448  86FF              ;
 449  86FF              ;	27/03/23
 450  86FF
 451  86FF              Mov_obj
 452  86FF
 453  86FF              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 454  86FF
 455  86FF AF           	xor a
 456  8700 32 CA 85     	ld (Obj_dibujado),a
 457  8703 CD 65 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 458  8706              ;														; Obj_dibujado="0".
 459  8706              ; Movemos Entidades malignas.
 460  8706
 461  8706 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 462  8709 24           	inc h                                               ; Salimos de la rutina.
 463  870A 25           	dec h
 464  870B C8           	ret z
 465  870C
 466  870C CD DF 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 467  870F
 468  870F 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 469  8712 CB 67        	bit 4,a
 470  8714 C8           	ret z
 471  8715
 472  8715              ; Ha habido desplazamiento de la entidad maligna.
 473  8715              ; Ha llegado a zona de AMADEUS ???
 474  8715
 475  8715 3A A2 85     	ld a,(Coordenada_y)
 476  8718 FE 14        	cp $14
 477  871A D4 AE 8A     	call nc, Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 478  871D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 479  871D
 480  871D              ; ---------
 481  871D
 482  871D 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 483  871F 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 484  8722 CD 65 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 485  8725 CD 7C 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 486  8728 CD 4B 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 487  872B C9           	ret													; _de la misma.
 488  872C
 489  872C              ; --------------------------------------------------------------------------------------------------------------
 490  872C              ;
 491  872C              ;	29/1/23
 492  872C
 493  872C              Mov_Amadeus
 494  872C
 495  872C AF           	xor a
 496  872D 32 CA 85     	ld (Obj_dibujado),a
 497  8730 CD 65 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 498  8733              ;														; Obj_dibujado="0".
 499  8733              ; Movemos Amadeus.
 500  8733
 501  8733 CD C1 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 502  8736 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 503  8739 CB 67        	bit 4,a
 504  873B C8           	ret z
 505  873C
 506  873C              ; ---------
 507  873C
 508  873C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 509  873E 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 510  8741 CD 65 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 511  8744 CD 7C 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 512  8747 CD 4B 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 513  874A C9           	ret													; _de la nave.
 514  874B
 515  874B              ; --------------------------------------------------------------------------------------------------------------
 516  874B              ;
 517  874B              ;	31/01/23
 518  874B              ;
 519  874B              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 520  874B
 521  874B              Guarda_foto_entidad_a_borrar
 522  874B
 523  874B CD 1B 90     	call Prepara_draw
 524  874E CD 55 8F     	call calcula_CColumnass
 525  8751 CD 8C 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 526  8754 CD E1 8F     	call Define_rutina_de_impresion
 527  8757 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 528  875A C9           	ret
 529  875B
 530  875B              ; --------------------------------------------------------------------------------------------------------------
 531  875B              ;
 532  875B              ;	31/01/23
 533  875B              ;
 534  875B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 535  875B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 536  875B
 537  875B              Guarda_foto_entidad_a_pintar
 538  875B
 539  875B CD 88 87     	call Repone_pintar
 540  875E CD 41 8D     	call Draw
 541  8761 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 542  8764 C9           	ret
 543  8765
 544  8765              ; --------------------------------------------------------------------------------------------------------------
 545  8765              ;
 546  8765              ;
 547  8765
 548  8765 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 549  8768 3A CA 85     	ld a,(Obj_dibujado)
 550  876B A7           	and a
 551  876C 28 05        	jr z,1F
 552  876E 11 BF 85     	ld de,Variables_de_pintado
 553  8771 18 03        	jr 2F
 554  8773 11 B5 85     1 ld de,Variables_de_borrado
 555  8776 01 08 00     2 ld bc,8
 556  8779 ED B0        	ldir
 557  877B C9           	ret
 558  877C
 559  877C              ; --------------------------------------------------------------------------------------------------------------
 560  877C
 561  877C 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 562  877F 11 9B 85     	ld de,Filas
 563  8782 01 08 00     	ld bc,8
 564  8785 ED B0        	ldir
 565  8787 C9           	ret
 566  8788
 567  8788 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 568  878B 11 9B 85     	ld de,Filas
 569  878E 01 08 00     	ld bc,8
 570  8791 ED B0        	ldir
 571  8793 C9           	ret
 572  8794
 573  8794              ; *************************************************************************************************************************************************************
 574  8794              ;
 575  8794              ; 8/1/23
 576  8794              ;
 577  8794              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 578  8794              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 579  8794              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 580  8794
 581  8794              ; Destruye HL y DE !!!!!
 582  8794
 583  8794              Inicia_punteros_de_entidades
 584  8794
 585  8794 21 68 84     	ld hl,Indice_de_entidades
 586  8797 CD E8 87         call Extrae_address
 587  879A 22 D7 85         ld (Puntero_store_entidades),hl
 588  879D 21 6A 84     	ld hl,Indice_de_entidades+2
 589  87A0 22 DB 85     	ld (Indice_restore),hl
 590  87A3 CD E8 87     	call Extrae_address
 591  87A6 22 D9 85     	ld (Puntero_restore_entidades),hl
 592  87A9 C9               ret
 593  87AA
 594  87AA              ; *************************************************************************************************************************************************************
 595  87AA              ;
 596  87AA              ; 8/1/23
 597  87AA              ;
 598  87AA              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 599  87AA
 600  87AA 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 601  87AD 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 602  87B0 C9           	ret
 603  87B1 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 604  87B4 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 605  87B7 C9           	ret
 606  87B8
 607  87B8              ; -------------------------------------------------------------------------------------------------------------
 608  87B8              ;
 609  87B8              ; 28/2/23
 610  87B8              ;
 611  87B8
 612  87B8              Calcula_numero_de_malotes
 613  87B8
 614  87B8 21 00 70     	ld hl,Album_de_fotos
 615  87BB EB           	ex de,hl
 616  87BC 2A E3 85     	ld hl,(Stack_snapshot)
 617  87BF
 618  87BF 06 00        	ld b,0
 619  87C1 7D           	ld a,l
 620  87C2 93           	sub e
 621  87C3 28 07        	jr z,1F
 622  87C5
 623  87C5              ; Nº de malotes no es "0".
 624  87C5
 625  87C5 D6 06        2 sub 6
 626  87C7 04           	inc b
 627  87C8 A7           	and a
 628  87C9 20 FA        	jr nz,2B
 629  87CB 78           	ld a,b
 630  87CC
 631  87CC 32 DE 85     1 ld (Numero_de_malotes),a
 632  87CF C9           	ret
 633  87D0
 634  87D0              ; -------------------------------------------------------------------------------------------------------------
 635  87D0              ;
 636  87D0              ; 28/2/23
 637  87D0              ;
 638  87D0
 639  87D0              Calcula_numero_de_disparotes
 640  87D0
 641  87D0 21 60 70     	ld hl,Album_de_fotos_disparos
 642  87D3 EB           	ex de,hl
 643  87D4 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 644  87D7
 645  87D7 06 00        	ld b,0
 646  87D9 7D           	ld a,l
 647  87DA 93           	sub e
 648  87DB 28 07        	jr z,1F
 649  87DD
 650  87DD              ; Nº de malotes no es "0".
 651  87DD
 652  87DD D6 06        2 sub 6
 653  87DF 04           	inc b
 654  87E0 A7           	and a
 655  87E1 20 FA        	jr nz,2B
 656  87E3 78           	ld a,b
 657  87E4
 658  87E4 32 E7 85     1 ld (Numero_de_disparotes),a
 659  87E7 C9           	ret
 660  87E8              ; *************************************************************************************************************************************************************
 661  87E8              ;
 662  87E8              ; 20/10/22
 663  87E8              ;
 664  87E8              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 665  87E8              ;
 666  87E8              ; Destruye el puntero y DE !!!!!
 667  87E8
 668  87E8 5E           Extrae_address ld e,(hl)
 669  87E9 23           	inc hl
 670  87EA 56           	ld d,(hl)
 671  87EB 2B           	dec hl
 672  87EC EB           	ex de,hl
 673  87ED C9           	ret
 674  87EE
 675  87EE              ; *************************************************************************************************************************************************************
 676  87EE              ;
 677  87EE              ;	7/2/23
 678  87EE              ;
 679  87EE              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 680  87EE              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 681  87EE              ;
 682  87EE              ;   Destruye HL y BC !!!!!,
 683  87EE              ;
 684  87EE              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 685  87EE              ;					"0" ..... Izquierda.
 686  87EE
 687  87EE              Inicia_Puntero_objeto
 688  87EE
 689  87EE 3A AF 85     	ld a,(Cuad_objeto)
 690  87F1 E6 01        	and 1
 691  87F3 F5           	push af
 692  87F4 CC 12 88     	call z,Inicia_puntero_objeto_izq
 693  87F7 F1           	pop af
 694  87F8 28 2B        	jr z,1F
 695  87FA CD FF 87     	call Inicia_puntero_objeto_der
 696  87FD 18 26        	jr 1F
 697  87FF
 698  87FF              ; Arrancamos desde la parte izquierda de la pantalla.
 699  87FF              ; Iniciamos (Indice_Sprite_der).
 700  87FF
 701  87FF 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 702  8802 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 703  8805 CD E8 87     	call Extrae_address
 704  8808 22 9F 85     	ld (Puntero_objeto),hl
 705  880B
 706  880B 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 707  880E              ;	call Extrae_address
 708  880E 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 709  8811 C9           	ret
 710  8812
 711  8812              ; Arrancamos desde la parte derecha de la pantalla.
 712  8812              ; Iniciamos (Indice_Sprite_izq).
 713  8812
 714  8812 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 715  8815 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 716  8818 CD E8 87     	call Extrae_address
 717  881B 22 9F 85     	ld (Puntero_objeto),hl
 718  881E
 719  881E 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 720  8821              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 721  8821 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 722  8824 C9           	ret
 723  8825
 724  8825              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 725  8825
 726  8825 21 38 83     1 ld hl,Amadeus
 727  8828 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 728  882C B7 ED 42     	sub hl,bc
 729  882F C0           	ret nz
 730  8830 21 C9 85     	ld hl,Ctrl_0
 731  8833 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 732  8835 C9           	ret 												; _de nuestra nave en los extremos.
 733  8836
 734  8836              ; *************************************************************************************************************************************************************
 735  8836              ;
 736  8836              ;	8/1/23
 737  8836              ;
 738  8836              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 739  8836              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 740  8836
 741  8836              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 742  8836              ;	_de la 2ª y 3ª entidad respectivamente.
 743  8836
 744  8836              Store_Restore_entidades
 745  8836
 746  8836 E5           	push hl
 747  8837 D5           	push de
 748  8838 C5            	push bc
 749  8839
 750  8839              ;	STORE !!!!!
 751  8839              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 752  8839
 753  8839 21 9B 85     	ld hl,Filas
 754  883C ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 755  8840 01 3B 00     	ld bc,59
 756  8843 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 757  8845
 758  8845              ; 	Entidad_sospechosa. 20/4/23
 759  8845
 760  8845 3A B4 85     	ld a,(Impacto)
 761  8848 A7           	and a
 762  8849 28 0C        	jr z,1F
 763  884B
 764  884B 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 765  884E 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 766  8851 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 767  8852 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 768  8854 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 769  8857
 770  8857              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 771  8857
 772  8857 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 773  885A 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 774  885D 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 775  8860 01 3B 00     	ld bc,59
 776  8863 ED B0        	ldir
 777  8865
 778  8865              ;	Incrementa RESTORE !!!!!
 779  8865
 780  8865 2A DB 85         ld hl,(Indice_restore)
 781  8868 23           	inc hl
 782  8869 23           	inc hl
 783  886A 22 DB 85     	ld (Indice_restore),hl
 784  886D CD E8 87         call Extrae_address
 785  8870 22 D9 85         ld (Puntero_restore_entidades),hl
 786  8873 C1           	pop bc
 787  8874 D1           	pop de
 788  8875 E1           	pop hl
 789  8876 C9           	ret
 790  8877
 791  8877              ; **************************************************************************************************
 792  8877              ;
 793  8877              ;	29/10/22
 794  8877              ;
 795  8877              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 796  8877
 797  8877 E5           Restore_Primera_entidad push hl
 798  8878 D5           	push de
 799  8879 C5            	push bc
 800  887A 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 801  887D 11 9B 85     	ld de,Filas
 802  8880 01 3B 00     	ld bc,59
 803  8883 ED B0        	ldir
 804  8885 C1           	pop bc
 805  8886 D1           	pop de
 806  8887 E1           	pop hl
 807  8888 C9           	ret
 808  8889
 809  8889              ; **************************************************************************************************
 810  8889              ;
 811  8889              ;	25/01/23
 812  8889              ;
 813  8889              ;	Restore_Amadeus
 814  8889              ;
 815  8889              ;	Cargamos en DRAW los parámetros de Amadeus.
 816  8889              ;
 817  8889
 818  8889 E5           Restore_Amadeus	push hl
 819  888A D5           	push de
 820  888B C5            	push bc
 821  888C 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 822  888F 11 9B 85     	ld de,Filas
 823  8892 01 3B 00     	ld bc,59
 824  8895 ED B0        	ldir
 825  8897 C1           	pop bc
 826  8898 D1           	pop de
 827  8899 E1           	pop hl
 828  889A C9           	ret
 829  889B
 830  889B              ; *************************************************************************************************************************************************************
 831  889B              ;
 832  889B              ;	29/01/23
 833  889B              ;
 834  889B              ;	Store_Amadeus
 835  889B              ;
 836  889B              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 837  889B              ;
 838  889B
 839  889B E5           Store_Amadeus push hl
 840  889C D5           	push de
 841  889D C5            	push bc
 842  889E 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 843  88A1 11 74 84     	ld de,Amadeus_db
 844  88A4 01 3B 00     	ld bc,59
 845  88A7 ED B0        	ldir
 846  88A9 C1           	pop bc
 847  88AA D1           	pop de
 848  88AB E1           	pop hl
 849  88AC C9           	ret
 850  88AD
 851  88AD              ; **************************************************************************************************
 852  88AD
 853  88AD              ; Teclado.
 854  88AD
 855  88AD 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 856  88AF DB FE        	in a,($fe)
 857  88B1 E6 01        	and $01
 858  88B3 28 02        	jr z,1f
 859  88B5 18 F6        	jr Pulsa_ENTER
 860  88B7 C9           1 ret
 861  88B8
 862  88B8              ; **************************************************************************************************
 863  88B8              ;
 864  88B8              ; Temporización.
 865  88B8
 866  88B8              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 867  88B8              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 868  88B8              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 869  88B8              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 870  88B8
 871  88B8              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 872  88B8              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 873  88B8              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 874  88B8
 875  88B8              ; A partir de $4f61 no hace falta DELAY.
 876  88B8
 877  88B8              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 878  88B8
 879  88B8 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 880  88BB 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 881  88BC 78           	LD A,B
 882  88BD A7           	AND A
 883  88BE 20 FB        	JR NZ,wait
 884  88C0 C9           	RET
 885  88C1
 886  88C1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 887  88C1              ;
 888  88C1              ;	5/3/23
 889  88C1              ;
 890  88C1              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 891  88C1
 892  88C1              Movimiento_Amadeus
 893  88C1
 894  88C1              ; Disparo.
 895  88C1
 896  88C1 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 897  88C4 A7           	and a
 898  88C5 20 02        	jr nz,1F
 899  88C7 18 15        	jr 2F
 900  88C9
 901  88C9 3E F7        1 ld a,$f7													; "5" para disparar.
 902  88CB DB FE        	in a,($fe)
 903  88CD E6 10        	and $10
 904  88CF
 905  88CF F5           	push af
 906  88D0 CC 35 89     	call z,Genera_disparo
 907  88D3 F1           	pop af
 908  88D4 20 08        	jr nz,2F
 909  88D6
 910  88D6 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 911  88D9 EE 01        	xor 1
 912  88DB 32 F7 85     	ld (Habilita_disparo_Amadeus),a
 913  88DE
 914  88DE 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 915  88E0 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 916  88E2 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 917  88E4 CC 7F 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 918  88E7 3E F7        	ld a,$f7
 919  88E9 DB FE        	in a,($fe)
 920  88EB E6 01        	and $01
 921  88ED C8           	ret z
 922  88EE
 923  88EE 3E F7        	ld a,$f7
 924  88F0 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 925  88F2 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 926  88F4 CC 61 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 927  88F7 C9           	ret
 928  88F8
 929  88F8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 930  88F8              ;
 931  88F8              ;	Rutina provisional para que los malotes cagen balas.
 932  88F8
 933  88F8 3E 7F        Detecta_disparo_entidad ld a,$7f
 934  88FA DB FE        	in a,($fe)
 935  88FC E6 01        	and 1
 936  88FE C0           	ret nz
 937  88FF CD 35 89     	call Genera_disparo
 938  8902 C9           	ret
 939  8903
 940  8903              ; Pinta indicadores de FILAS. ------------------------------------------------------
 941  8903
 942  8903 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 943  8906
 944  8906              ; ----------
 945  8906 06 20        	ld b,32
 946  8908 E5           2 push hl
 947  8909 C5           	push bc
 948  890A              ; ----------
 949  890A
 950  890A 06 BF        	ld b,$bf
 951  890C 36 80        1 ld (hl),%10000000
 952  890E CD 27 90     	call NextScan
 953  8911 10 F9        	djnz 1B
 954  8913
 955  8913              ; ----------
 956  8913 C1           	pop bc
 957  8914 E1           	pop hl
 958  8915 2C           	inc l
 959  8916 10 F0        	djnz 2B
 960  8918              ; ----------
 961  8918
 962  8918 06 03        	ld b,3
 963  891A 21 00 47         ld hl,$4700
 964  891D CD 23 89     3 call Bucle_1
 965  8920 10 FB            djnz 3B
 966  8922 C9               ret
 967  8923
 968  8923 C5           Bucle_1 push bc
 969  8924 E5                   push hl
 970  8925 D1                   pop de
 971  8926 13                   inc de
 972  8927 01 FF 00             ld bc,255
 973  892A 36 FF                ld (hl),255
 974  892C ED B0                ldir
 975  892E 23                   inc hl
 976  892F 3E 07                ld a,7
 977  8931 84                   add a,h
 978  8932 67                   ld h,a
 979  8933 C1                   pop bc
 980  8934 C9                   ret
 981  8935
 982  8935              ; ---------------------------------------------------------------
 983  8935
 984  8935              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8935              ; ******************************************************************************************************************************************************************************************
   2+ 8935              ;
   3+ 8935              ;   17/04/23
   4+ 8935              ;
   5+ 8935              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8935              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8935              ;
   8+ 8935              ;
   9+ 8935              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8935              ;
  11+ 8935              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8935              ;               _ hacen las entidades hacia abajo.
  13+ 8935              ;
  14+ 8935              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8935              ;
  16+ 8935              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8935              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8935              ;
  19+ 8935              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8935              ;           _ la bala.
  21+ 8935              ;
  22+ 8935              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8935              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8935              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8935              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8935              ;           _ en el momento de generarse la bala)).
  27+ 8935
  28+ 8935              Genera_disparo
  29+ 8935
  30+ 8935              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8935              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8935              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8935              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8935              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8935              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8935              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8935
  38+ 8935              ; Exclusiones:
  39+ 8935
  40+ 8935 3A D2 85         ld a,(Columnas)
  41+ 8938 47               ld b,a
  42+ 8939 3A 9C 85         ld a,(Columns)
  43+ 893C B8               cp b
  44+ 893D C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 893E
  46+ 893E              ; ----- ----- -----
  47+ 893E
  48+ 893E 3A C9 85         ld a,(Ctrl_0)
  49+ 8941 CB 77            bit 6,a
  50+ 8943 20 06            jr nz,14F
  51+ 8945
  52+ 8945 3A A2 85         ld a,(Coordenada_y)
  53+ 8948 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 894A D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 894B
  56+ 894B 21 00 80     14 ld hl,Indice_disparo
  57+ 894E 3A A3 85         ld a,(CTRL_DESPLZ)
  58+ 8951 4F               ld c,a
  59+ 8952 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8954              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8954              ;                                            ""        ""       "f9", B="1"
  62+ 8954              ;                                            ""        ""       "fb", B="2"
  63+ 8954              ;                                            ""        ""       "fb", B="3"
  64+ 8954 A7               and a
  65+ 8955 28 10            jr z,1F
  66+ 8957 E6 01            and 1
  67+ 8959 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 895A
  69+ 895A 79               ld a,c
  70+ 895B 16 F9            ld d,$f9
  71+ 895D 23           2 inc hl
  72+ 895E 23               inc hl
  73+ 895F 04               inc b
  74+ 8960 BA               cp d
  75+ 8961 28 04            jr z,1F
  76+ 8963 14               inc d
  77+ 8964 14               inc d
  78+ 8965 18 F6            jr 2B
  79+ 8967
  80+ 8967 CD E8 87     1 call Extrae_address
  81+ 896A E5               push hl
  82+ 896B FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 896D DD 21 BA 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8971
  85+ 8971              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8971              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8971
  88+ 8971 3A AF 85     	ld a,(Cuad_objeto)
  89+ 8974 FE 02            cp 2
  90+ 8976 38 66            jr c,3F
  91+ 8978 28 64            jr z,3F
  92+ 897A
  93+ 897A              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
  94+ 897A
  95+ 897A E6 01            and 1
  96+ 897C 28 30            jr z,4F
  97+ 897E
  98+ 897E              ; 	Estamos en el 3er cuadrante de pantalla.
  99+ 897E              ; 	3er CUAD. ----- ----- ----- ----- -----
 100+ 897E              ;
 101+ 897E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 102+ 897E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 103+ 897E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 104+ 897E
 105+ 897E 2A 9D 85     	ld hl,(Posicion_actual)
 106+ 8981
 107+ 8981              ;   Amadeus o entidad ???.
 108+ 8981
 109+ 8981 3A C9 85         ld a,(Ctrl_0)
 110+ 8984 CB 77            bit 6,a
 111+ 8986 28 0A            jr z,8F
 112+ 8988
 113+ 8988              ; 	Dispara Amadeus.
 114+ 8988
 115+ 8988 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 116+ 898A CD 36 90         call PreviousScan
 117+ 898D CD 36 90         call PreviousScan
 118+ 8990
 119+ 8990              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 120+ 8990              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 121+ 8990              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 122+ 8990              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 123+ 8990
 124+ 8990 18 11            jr 10F
 125+ 8992
 126+ 8992              ; 	Dispara Entidad.
 127+ 8992
 128+ 8992 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 129+ 8995              ;                                                   ; Impacto B="$80", no hay impacto.
 130+ 8995
 131+ 8995              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 132+ 8995              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 133+ 8995
 134+ 8995 C5               push bc
 135+ 8996 06 10            ld b,16
 136+ 8998 CD 27 90     9 call NextScan
 137+ 899B 10 FB            djnz 9B
 138+ 899D C1               pop bc
 139+ 899E CD 08 8A         call Ajusta_disparo_parte_izquierda
 140+ 89A1 18 06            jr 17F
 141+ 89A3
 142+ 89A3              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 143+ 89A3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 144+ 89A3              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 145+ 89A3              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 146+ 89A3
 147+ 89A3 CD 08 8A     10 call Ajusta_disparo_parte_izquierda
 148+ 89A6 CD 7D 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 149+ 89A9              ;                                                      ; _al generar el disparo.
 150+ 89A9
 151+ 89A9              ; 	LLegados a este punto tendremos:
 152+ 89A9              ;
 153+ 89A9              ;       Puntero_objeto_disparo en IY.
 154+ 89A9              ;       Rutinas_de_impresion en IX.
 155+ 89A9              ;       Puntero_de_impresion en HL.
 156+ 89A9              ;       Impacto/Dirección en BC.
 157+ 89A9
 158+ 89A9 CD 10 8A     17 call Almacena_disparo
 159+ 89AC 18 52            jr 6F                                             ; RET.
 160+ 89AE
 161+ 89AE              ; 	Estamos en el 4º cuadrante de pantalla.
 162+ 89AE              ; 	4º CUAD. ----- ----- ----- ----- -----
 163+ 89AE              ;
 164+ 89AE              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 165+ 89AE              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 166+ 89AE              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 167+ 89AE
 168+ 89AE 2A 9D 85     4 ld hl,(Posicion_actual)
 169+ 89B1
 170+ 89B1              ;   Amadeus o entidad ???.
 171+ 89B1
 172+ 89B1 3A C9 85         ld a,(Ctrl_0)
 173+ 89B4 CB 77            bit 6,a
 174+ 89B6 28 0A            jr z,11F
 175+ 89B8
 176+ 89B8              ; 	Dispara Amadeus.
 177+ 89B8
 178+ 89B8 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 179+ 89BA CD 36 90         call PreviousScan
 180+ 89BD CD 36 90         call PreviousScan
 181+ 89C0
 182+ 89C0              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 183+ 89C0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 184+ 89C0              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 185+ 89C0              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 186+ 89C0
 187+ 89C0 18 11            jr 13F
 188+ 89C2
 189+ 89C2              ; 	Dispara Entidad.
 190+ 89C2
 191+ 89C2 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 192+ 89C5              ;                                                     ; Impacto B="$80", no hay impacto.
 193+ 89C5
 194+ 89C5              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 195+ 89C5              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 196+ 89C5
 197+ 89C5 C5               push bc
 198+ 89C6 06 10            ld b,16
 199+ 89C8 CD 27 90     12 call NextScan
 200+ 89CB 10 FB            djnz 12B
 201+ 89CD C1               pop bc
 202+ 89CE
 203+ 89CE CD 01 8A         call Ajusta_disparo_parte_derecha
 204+ 89D1 18 06            jr 18F
 205+ 89D3
 206+ 89D3              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 207+ 89D3              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 208+ 89D3              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 209+ 89D3              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 210+ 89D3
 211+ 89D3 CD 01 8A     13 call Ajusta_disparo_parte_derecha
 212+ 89D6 CD 7D 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 213+ 89D9              ;                                                       ; _al generar el disparo.
 214+ 89D9
 215+ 89D9              ; LLegados a este punto tendremos:
 216+ 89D9              ;
 217+ 89D9              ;       Puntero_objeto_disparo en IY.
 218+ 89D9              ;       Rutinas_de_impresion en IX.
 219+ 89D9              ;       Puntero_de_impresion en HL.
 220+ 89D9              ;       Impacto/Dirección en BC.
 221+ 89D9
 222+ 89D9 CD 10 8A     18 call Almacena_disparo
 223+ 89DC 18 22            jr 6F                                               ; RET.
 224+ 89DE
 225+ 89DE              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 226+ 89DE
 227+ 89DE 28 11        3 jr z,5F
 228+ 89E0
 229+ 89E0              ; 	1er CUAD. ----- ----- ----- ----- -----
 230+ 89E0              ;
 231+ 89E0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 232+ 89E0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 233+ 89E0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 234+ 89E0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 235+ 89E0
 236+ 89E0              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 237+ 89E0              ;	   ""        ""       "f9", B="1"
 238+ 89E0              ;	   ""        ""       "fb", B="2"
 239+ 89E0              ; 	   ""        ""       "fb", B="3"
 240+ 89E0
 241+ 89E0 2A 9D 85     	ld hl,(Posicion_actual)
 242+ 89E3 CD 27 90     	call NextScan
 243+ 89E6
 244+ 89E6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 245+ 89E6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 246+ 89E6              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 247+ 89E6              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 248+ 89E6
 249+ 89E6 CD 08 8A         call Ajusta_disparo_parte_izquierda
 250+ 89E9
 251+ 89E9              ; 	No se produce impacto. B="$80"
 252+ 89E9              ; 	Dirección del proyectil hacia abajo. C="$80"
 253+ 89E9
 254+ 89E9 01 80 80         ld bc,$8080
 255+ 89EC
 256+ 89EC              ; 	LLegados a este punto tendremos:
 257+ 89EC              ;
 258+ 89EC              ;       Puntero_objeto_disparo en IY.
 259+ 89EC              ;       Rutinas_de_impresion en IX.
 260+ 89EC              ;       Puntero_de_impresion en HL.
 261+ 89EC              ;       Impacto/Dirección en BC.
 262+ 89EC
 263+ 89EC CD 10 8A         call Almacena_disparo
 264+ 89EF 18 0F            jr 6F                                           ; RET.
 265+ 89F1
 266+ 89F1              ; 	Estamos en el 2º cuadrante de pantalla.
 267+ 89F1              ; 	2º CUAD. ----- ----- ----- ----- -----
 268+ 89F1              ;
 269+ 89F1              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 270+ 89F1              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 271+ 89F1              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 272+ 89F1              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 273+ 89F1
 274+ 89F1 2A 9D 85     5 ld hl,(Posicion_actual)
 275+ 89F4 CD 27 90     	call NextScan
 276+ 89F7
 277+ 89F7              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 278+ 89F7              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 279+ 89F7              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 280+ 89F7              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 281+ 89F7
 282+ 89F7 CD 01 8A         call Ajusta_disparo_parte_derecha
 283+ 89FA
 284+ 89FA              ; 	No se produce impacto. B="$80"
 285+ 89FA              ; 	Dirección del proyectil hacia abajo. C="80"
 286+ 89FA
 287+ 89FA 01 80 80     15 ld bc,$8080
 288+ 89FD
 289+ 89FD              ; 	LLegados a este punto tendremos:
 290+ 89FD              ;
 291+ 89FD              ;       Puntero_objeto_disparo en IY.
 292+ 89FD              ;       Rutinas_de_impresion en IX.
 293+ 89FD              ;       Puntero_de_impresion en HL.
 294+ 89FD              ;       Impacto/Dirección en BC.
 295+ 89FD
 296+ 89FD CD 10 8A         call Almacena_disparo
 297+ 8A00
 298+ 8A00 C9           6 ret
 299+ 8A01
 300+ 8A01              ; ----------------------------------------------------------------
 301+ 8A01              ;
 302+ 8A01              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 303+ 8A01              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 304+ 8A01              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 305+ 8A01
 306+ 8A01 78           Ajusta_disparo_parte_derecha ld a,b
 307+ 8A02 FE 02            cp 2
 308+ 8A04 38 01            jr c,1F
 309+ 8A06 23               inc hl
 310+ 8A07 C9           1 ret
 311+ 8A08
 312+ 8A08 78           Ajusta_disparo_parte_izquierda ld a,b
 313+ 8A09 FE 01        	cp 1
 314+ 8A0B 20 01        	jr nz,1F
 315+ 8A0D 2B           	dec hl
 316+ 8A0E 2B           1 dec hl
 317+ 8A0F C9               ret
 318+ 8A10
 319+ 8A10              ; ----------------------------------------------------------------
 320+ 8A10              ;
 321+ 8A10              ;   25/02/23
 322+ 8A10              ;
 323+ 8A10              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 324+ 8A10              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 325+ 8A10              ;
 326+ 8A10              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 327+ 8A10              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 328+ 8A10
 329+ 8A10              Almacena_disparo
 330+ 8A10
 331+ 8A10 E5               push hl  										; HL contiene el puntero de impresión.
 332+ 8A11 F1               pop af
 333+ 8A12 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 334+ 8A13
 335+ 8A13 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 336+ 8A14 E6 01            and 1
 337+ 8A16 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 338+ 8A18              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 339+ 8A18              ; 	Dispara AMADEUS.
 340+ 8A18
 341+ 8A18              ;	Comprobamos que a Amadeus aún le quedan disparos.
 342+ 8A18              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 343+ 8A18              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 344+ 8A18              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 345+ 8A18
 346+ 8A18 C5               push bc
 347+ 8A19 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 348+ 8A1C 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 349+ 8A1F A7               and a
 350+ 8A20 ED 42            sbc hl,bc
 351+ 8A22 CC B1 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 352+ 8A25 C1               pop bc
 353+ 8A26 28 54            jr z,4F
 354+ 8A28
 355+ 8A28 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8A2B 23               inc hl
 357+ 8A2C 23               inc hl
 358+ 8A2D 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 359+ 8A30              ;                                                   ; _ Disparo_(+1).
 360+ 8A30 18 18            jr 2F
 361+ 8A32
 362+ 8A32              ; Dispara una entidad.
 363+ 8A32
 364+ 8A32 C5           1 push bc
 365+ 8A33 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 366+ 8A36 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 367+ 8A39 A7               and a
 368+ 8A3A ED 42            sbc hl,bc
 369+ 8A3C CC AA 87         call z,Inicia_Puntero_Disparo_Entidades
 370+ 8A3F C1               pop bc
 371+ 8A40 28 3A            jr z,4F
 372+ 8A42
 373+ 8A42 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8A45 23               inc hl
 375+ 8A46 23               inc hl
 376+ 8A47 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 377+ 8A4A              ;                                                   ; _ Disparo_(+1).
 378+ 8A4A CD E8 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 379+ 8A4D              ;                                                   ; _ los 8 bytes que definen el disparo:
 380+ 8A4D              ;
 381+ 8A4D              ;                                                     Puntero_objeto_disparo en IY.
 382+ 8A4D              ;                                                     Rutinas_de_impresion en IX.
 383+ 8A4D              ;                                                     Puntero_de_impresion en HL.
 384+ 8A4D              ;                                                     Impacto/Dirección en BC.
 385+ 8A4D
 386+ 8A4D 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 387+ 8A4E 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 388+ 8A4F 23               inc hl                                          ; _ al siguiente.
 389+ 8A50 A7               and a
 390+ 8A51 20 C0            jr nz,3B
 391+ 8A53
 392+ 8A53 08               ex af,af
 393+ 8A54 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 394+ 8A58 F9               ld sp,hl
 395+ 8A59
 396+ 8A59 DD E5            push ix                                         ; Rutina de impresión.
 397+ 8A5B F5               push af                                         ; Puntero de impresión.
 398+ 8A5C FD E5            push iy                                         ; Puntero objeto.
 399+ 8A5E C5               push bc                                         ; Control.
 400+ 8A5F
 401+ 8A5F ED 7B DF 85      ld sp,(Stack)
 402+ 8A63
 403+ 8A63              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 404+ 8A63
 405+ 8A63 21 D6 85     	ld hl,Ctrl_1
 406+ 8A66 CB C6        	set 0,(hl)
 407+ 8A68
 408+ 8A68 DD E5        	push ix
 409+ 8A6A E1               pop hl
 410+ 8A6B F5               push af
 411+ 8A6C DD E1            pop ix
 412+ 8A6E
 413+ 8A6E CD A0 7F     	call Guarda_foto_registros
 414+ 8A71
 415+ 8A71 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 416+ 8A74 CB 86        	res 0,(hl)
 417+ 8A76
 418+ 8A76              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 419+ 8A76              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 420+ 8A76
 421+ 8A76 CD B1 87         call Inicia_Puntero_Disparo_Amadeus
 422+ 8A79 CD AA 87         call Inicia_Puntero_Disparo_Entidades
 423+ 8A7C
 424+ 8A7C C9           4 ret
 425+ 8A7D
 426+ 8A7D              ; ----------------------------------------------------------------
 427+ 8A7D              ;
 428+ 8A7D              ;   4/3/23
 429+ 8A7D              ;
 430+ 8A7D              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 431+ 8A7D              ;   _ al generarse el disparo.
 432+ 8A7D              ;
 433+ 8A7D              ;       "$80" ..... No se produce colisión.
 434+ 8A7D              ;       "$81" ..... Se produce colisión.
 435+ 8A7D
 436+ 8A7D              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 437+ 8A7D              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 438+ 8A7D
 439+ 8A7D
 440+ 8A7D FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 441+ 8A7F E5               push hl                                        ; Puntero de impresión.
 442+ 8A80 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 443+ 8A82 CD 9E 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 444+ 8A85
 445+ 8A85 7B               ld a,e
 446+ 8A86 E6 01            and 1
 447+ 8A88 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 448+ 8A8A
 449+ 8A8A E1               pop hl
 450+ 8A8B E5               push hl
 451+ 8A8C CD 27 90         call NextScan
 452+ 8A8F
 453+ 8A8F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 454+ 8A90 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 455+ 8A92 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 456+ 8A94              ;                                                  ; _ 2º scanline si esto es así.
 457+ 8A94 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 458+ 8A96 CD 9E 8A         call Bucle_2
 459+ 8A99
 460+ 8A99 43           2 ld b,e
 461+ 8A9A E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 462+ 8A9B FD E1            pop iy
 463+ 8A9D C9               ret
 464+ 8A9E
 465+ 8A9E               ; ---------- ----------
 466+ 8A9E
 467+ 8A9E 06 02        Bucle_2 ld b,2
 468+ 8AA0 FD 7E 00     2 ld a,(iy)
 469+ 8AA3 A6               and (hl)
 470+ 8AA4 28 02            jr z,1F
 471+ 8AA6 1E 81            ld e,$81
 472+ 8AA8 23           1 inc hl
 473+ 8AA9 FD 23            inc iy
 474+ 8AAB 10 F3            djnz 2B
 475+ 8AAD C9               ret
 476+ 8AAE
 477+ 8AAE              ; -------------------------------------------------------------------------------------------------------------
 478+ 8AAE              ;
 479+ 8AAE              ;   11/04/23
 480+ 8AAE              ;
 481+ 8AAE              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 482+ 8AAE              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 483+ 8AAE              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 484+ 8AAE              ;
 485+ 8AAE              ;   MODIFICA: HL,DE,BC,A y AF´.
 486+ 8AAE
 487+ 8AAE              Compara_coordenadas_X
 488+ 8AAE
 489+ 8AAE              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 490+ 8AAE              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 491+ 8AAE
 492+ 8AAE              ; Preparamos registros:
 493+ 8AAE
 494+ 8AAE 21 A1 85         ld hl,Filas+6
 495+ 8AB1 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 496+ 8AB2 23               inc hl
 497+ 8AB3 23               inc hl
 498+ 8AB4 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 499+ 8AB5 43               ld b,e
 500+ 8AB6 21 AF 85         ld hl,Filas+20
 501+ 8AB9 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 502+ 8ABA 21 F4 85         ld hl,Coordenadas_X_Entidad
 503+ 8ABD CD CC 8C         call Guarda_coordenadas_X
 504+ 8AC0
 505+ 8AC0              ; Preparamos registros:
 506+ 8AC0
 507+ 8AC0 21 7A 84         ld hl,Amadeus_db+6
 508+ 8AC3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 509+ 8AC4 23               inc hl
 510+ 8AC5 23               inc hl
 511+ 8AC6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 512+ 8AC7 7B               ld a,e
 513+ 8AC8 08               ex af,af'
 514+ 8AC9 21 88 84         ld hl,Amadeus_db+20
 515+ 8ACC 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 516+ 8ACD 21 F1 85         ld hl,Coordenadas_X_Amadeus
 517+ 8AD0 CD CC 8C         call Guarda_coordenadas_X
 518+ 8AD3
 519+ 8AD3              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 520+ 8AD3              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 521+ 8AD3
 522+ 8AD3 04               inc b
 523+ 8AD4 05               dec b
 524+ 8AD5 28 04            jr z,1F
 525+ 8AD7 06 03            ld b,3
 526+ 8AD9 18 02            jr 2F
 527+ 8ADB 06 02        1 ld b,2
 528+ 8ADD 08           2 ex af,af'
 529+ 8ADE 3C               inc a
 530+ 8ADF 3D               dec a
 531+ 8AE0 28 04            jr z,5F
 532+ 8AE2 0E 03            ld c,3
 533+ 8AE4 18 02            jr 6F
 534+ 8AE6 0E 02        5 ld c,2
 535+ 8AE8 79           6 ld a,c
 536+ 8AE9 08               ex af,af'
 537+ 8AEA 11 F4 85         ld de,Coordenadas_X_Entidad
 538+ 8AED 1A           4 ld a,(de)
 539+ 8AEE 21 F1 85         ld hl,Coordenadas_X_Amadeus
 540+ 8AF1 BE           3 cp (hl)
 541+ 8AF2 28 0E            jr z,7F
 542+ 8AF4 23               inc hl
 543+ 8AF5 0D               dec c
 544+ 8AF6 20 F9            jr nz,3B
 545+ 8AF8 13               inc de
 546+ 8AF9 08               ex af,af'
 547+ 8AFA 4F               ld c,a
 548+ 8AFB 08               ex af,af'
 549+ 8AFC 10 EF            djnz 4B
 550+ 8AFE
 551+ 8AFE              ; Limpiamos los almacenes de coordenadas y salimos.
 552+ 8AFE
 553+ 8AFE CD 0B 8D     8 call Limpia_Coordenadas_X
 554+ 8B01 C9               ret
 555+ 8B02
 556+ 8B02 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 557+ 8B04 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 558+ 8B07 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 559+ 8B0A CB D6            set 2,(hl)
 560+ 8B0C 18 F0            jr 8B
 561+ 8B0E
 562+ 8B0E              ; -----------------------------------------------------------------------
 563+ 8B0E              ;
 564+ 8B0E              ;   17/04/23
 565+ 8B0E              ;
 566+ 8B0E
 567+ 8B0E              Detecta_colision_nave_entidad
 568+ 8B0E
 569+ 8B0E              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 570+ 8B0E
 571+ 8B0E 2A 9D 85         ld hl,(Posicion_actual)
 572+ 8B11 CD 8C 8F         call Calcula_puntero_de_impresion
 573+ 8B14
 574+ 8B14              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 575+ 8B14              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 576+ 8B14
 577+ 8B14 DD E5            push ix
 578+ 8B16 E1               pop hl
 579+ 8B17 E5               push hl
 580+ 8B18
 581+ 8B18              ; ----- ----- -----
 582+ 8B18 1E 00            ld e,0                                         ; Indica impacto.
 583+ 8B1A 06 0A            ld b,10
 584+ 8B1C CD 4C 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 585+ 8B1F 7B               ld a,e
 586+ 8B20 FE 05            cp 5
 587+ 8B22 38 0E            jr c,3F
 588+ 8B24
 589+ 8B24              ; LLegados a este punto:
 590+ 8B24              ;
 591+ 8B24              ;   HAY COLISIÓN !!!!!.
 592+ 8B24              ;
 593+ 8B24              ;   .db (Impacto) de Amadeus a "1".
 594+ 8B24              ;   SET el bit3 de (Impacto2).
 595+ 8B24              ;
 596+ 8B24              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 597+ 8B24
 598+ 8B24 21 8D 84         ld hl,Amadeus_db+25
 599+ 8B27 36 01            ld (hl),1
 600+ 8B29 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 601+ 8B2C CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 602+ 8B2E CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 603+ 8B30 18 18            jr 1F
 604+ 8B32
 605+ 8B32              ; -----
 606+ 8B32
 607+ 8B32 E1           3 pop hl
 608+ 8B33 CD 27 90         call NextScan
 609+ 8B36 E5               push hl
 610+ 8B37 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 611+ 8B38 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 612+ 8B3A 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 613+ 8B3C 30 0C            jr nc,1F
 614+ 8B3E              ;                                                  ; _ 2º scanline si esto es así.
 615+ 8B3E 10 DC            djnz 2B
 616+ 8B40
 617+ 8B40              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 618+ 8B40
 619+ 8B40              ; LLegados a este punto:
 620+ 8B40              ;
 621+ 8B40              ;   NO HAY COLISIÓN !!!!!.
 622+ 8B40              ;
 623+ 8B40              ;   .db (Impacto) de Amadeus a "0".
 624+ 8B40              ;   RES el bit2 de (Impacto2).
 625+ 8B40              ;
 626+ 8B40              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 627+ 8B40              ;   Lo colocamos a "0".
 628+ 8B40
 629+ 8B40 21 EC 85         ld hl,Impacto2
 630+ 8B43 CB 96            res 2,(hl)
 631+ 8B45 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 632+ 8B48 36 00            ld (hl),0
 633+ 8B4A
 634+ 8B4A E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 635+ 8B4B C9               ret
 636+ 8B4C
 637+ 8B4C               ; ---------- ----------
 638+ 8B4C
 639+ 8B4C C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 640+ 8B4D 3A 9C 85         ld a,(Columns)
 641+ 8B50 47               ld b,a
 642+ 8B51 FD 7E 00     2 ld a,(iy)
 643+ 8B54 BE               cp (hl)
 644+ 8B55 28 01            jr z,1F
 645+ 8B57
 646+ 8B57 1C               inc e
 647+ 8B58
 648+ 8B58 23           1 inc hl
 649+ 8B59 FD 23            inc iy
 650+ 8B5B 10 F4            djnz 2B
 651+ 8B5D C1               pop bc
 652+ 8B5E C9               ret
 653+ 8B5F
 654+ 8B5F              ; -------------------------------------------------------------------------------------------------------------
 655+ 8B5F              ;
 656+ 8B5F              ;   13/03/23
 657+ 8B5F              ;
 658+ 8B5F              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 659+ 8B5F              ;
 660+ 8B5F              ;   DESTRUYE: HL,BC,DE y A.
 661+ 8B5F
 662+ 8B5F 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 663+ 8B62 7E               ld a,(hl)
 664+ 8B63 A7               and a
 665+ 8B64 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 666+ 8B65
 667+ 8B65 44               ld b,h
 668+ 8B66 4D               ld c,l
 669+ 8B67 2A E5 85         ld hl,(Stack_snapshot_disparos)
 670+ 8B6A E5               push hl
 671+ 8B6B A7               and a
 672+ 8B6C ED 42            sbc hl,bc
 673+ 8B6E E5               push hl
 674+ 8B6F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 675+ 8B70
 676+ 8B70 E1               pop hl
 677+ 8B71 54               ld d,h
 678+ 8B72 5D               ld e,l
 679+ 8B73 1B               dec de
 680+ 8B74 ED B8            lddr                                                ; Limpiamos.
 681+ 8B76
 682+ 8B76 21 60 70         ld hl,Album_de_fotos_disparos
 683+ 8B79 22 E5 85         ld (Stack_snapshot_disparos),hl
 684+ 8B7C
 685+ 8B7C C9               ret
 686+ 8B7D
 687+ 8B7D              ; -------------------------------------------------------------------------------------------------------------
 688+ 8B7D              ;
 689+ 8B7D              ;   28/03/23
 690+ 8B7D              ;
 691+ 8B7D
 692+ 8B7D 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 693+ 8B80 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 694+ 8B83
 695+ 8B83 CD E8 87     2 call Extrae_address
 696+ 8B86 7E               ld a,(hl)
 697+ 8B87 A7               and a
 698+ 8B88 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 699+ 8B8A
 700+ 8B8A              ; ----- ----- ----- ----- ----- -----
 701+ 8B8A
 702+ 8B8A C5               push bc
 703+ 8B8B CD 47 8C         call foto_disparo_a_borrar
 704+ 8B8E
 705+ 8B8E              ; Existe colisión con este disparo???
 706+ 8B8E
 707+ 8B8E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 708+ 8B8F 7E               ld a,(hl)
 709+ 8B90 2B               dec hl
 710+ 8B91 E6 01            and 1
 711+ 8B93 28 1D            jr z,9F
 712+ 8B95
 713+ 8B95              ;   En este punto:
 714+ 8B95              ;
 715+ 8B95              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 716+ 8B95              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 717+ 8B95              ;   _con la entidad).
 718+ 8B95              ;
 719+ 8B95              ;   Disparo_2A defw 0                                ; Control.
 720+ 8B95              ;    defw 0                                          ; Puntero objeto.
 721+ 8B95              ;    defw 0                                          ; Puntero de impresión.
 722+ 8B95              ;    defw 0                                          ; Rutina de impresión.
 723+ 8B95
 724+ 8B95 E5               push hl
 725+ 8B96
 726+ 8B96 06 04            ld b,4
 727+ 8B98 23           19 inc hl
 728+ 8B99 10 FD            djnz 19B
 729+ 8B9B
 730+ 8B9B CD E8 87         call Extrae_address
 731+ 8B9E CD 3E 96         call Genera_coordenadas_disparo
 732+ 8BA1
 733+ 8BA1              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 734+ 8BA1
 735+ 8BA1 21 EF 85         ld hl,Coordenadas_disparo_certero
 736+ 8BA4 72               ld (hl),d
 737+ 8BA5 23               inc hl
 738+ 8BA6 73               ld (hl),e
 739+ 8BA7
 740+ 8BA7              ; Elimino el disparo de la base de datos.
 741+ 8BA7
 742+ 8BA7 E1               pop hl
 743+ 8BA8 CD C1 8C         call Elimina_disparo_de_base_de_datos
 744+ 8BAB 21 EC 85         ld hl,Impacto2
 745+ 8BAE CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 746+ 8BB0
 747+ 8BB0 18 06            jr 11F
 748+ 8BB2
 749+ 8BB2 CD 70 8C     9 call Mueve_disparo
 750+ 8BB5 CD 47 8C         call foto_disparo_a_borrar
 751+ 8BB8
 752+ 8BB8 C1           11 pop bc
 753+ 8BB9 18 04            jr 7F
 754+ 8BBB
 755+ 8BBB              ; ----- ----- ----- ----- ----- -----
 756+ 8BBB
 757+ 8BBB ED 42        1 sbc hl,bc
 758+ 8BBD 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 759+ 8BBF
 760+ 8BBF 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 761+ 8BC2 23               inc hl
 762+ 8BC3 23               inc hl
 763+ 8BC4 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 764+ 8BC7 18 BA            jr 2B
 765+ 8BC9
 766+ 8BC9 CD B1 87     3 call Inicia_Puntero_Disparo_Amadeus
 767+ 8BCC 01 66 84         ld bc,Disparo_11
 768+ 8BCF 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 769+ 8BD2
 770+ 8BD2 CD E8 87     5 call Extrae_address
 771+ 8BD5 7E               ld a,(hl)
 772+ 8BD6 A7               and a
 773+ 8BD7 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 774+ 8BD9
 775+ 8BD9              ; ----- ----- ----- ----- ----- -----
 776+ 8BD9
 777+ 8BD9 C5               push bc
 778+ 8BDA CD 47 8C         call foto_disparo_a_borrar
 779+ 8BDD
 780+ 8BDD              ; Existe colisión con este disparo???
 781+ 8BDD
 782+ 8BDD 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 783+ 8BDE 7E               ld a,(hl)
 784+ 8BDF 2B               dec hl
 785+ 8BE0 E6 01            and 1
 786+ 8BE2 28 48            jr z,10F
 787+ 8BE4
 788+ 8BE4              ; La colisión se produce con Amadeus???
 789+ 8BE4              ; Amadeus siempre tiene (Coordenada_y)="$16".
 790+ 8BE4
 791+ 8BE4 E5               push hl
 792+ 8BE5
 793+ 8BE5 06 04            ld b,4
 794+ 8BE7 23           16 inc hl
 795+ 8BE8 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 796+ 8BEA CD E8 87         call Extrae_address
 797+ 8BED CD 3E 96         call Genera_coordenadas_disparo
 798+ 8BF0
 799+ 8BF0 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 800+ 8BF1 FE 16            cp $16
 801+ 8BF3 38 22            jr c,15F
 802+ 8BF5
 803+ 8BF5              ; (Colisiones en filas 16 y 17).
 804+ 8BF5
 805+ 8BF5 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 806+ 8BF6
 807+ 8BF6              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 808+ 8BF6
 809+ 8BF6 21 7A 84         ld hl,Amadeus_db+6
 810+ 8BF9 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 811+ 8BFA 23               inc hl
 812+ 8BFB 23               inc hl
 813+ 8BFC 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 814+ 8BFD 21 88 84         ld hl,Amadeus_db+20
 815+ 8C00 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 816+ 8C01 21 F1 85         ld hl,Coordenadas_X_Amadeus
 817+ 8C04 CD CC 8C         call Guarda_coordenadas_X
 818+ 8C07
 819+ 8C07 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 820+ 8C08
 821+ 8C08              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 822+ 8C08
 823+ 8C08 06 03            ld b,3
 824+ 8C0A 21 F1 85         ld hl,Coordenadas_X_Amadeus
 825+ 8C0D 7E           18 ld a,(hl)
 826+ 8C0E BA               cp d
 827+ 8C0F 20 03            jr nz,17F
 828+ 8C11
 829+ 8C11              ; Colisión Amadeus !!!!!!!!!!
 830+ 8C11
 831+ 8C11 E1               pop hl
 832+ 8C12 18 09            jr 14F
 833+ 8C14
 834+ 8C14 23           17 inc hl
 835+ 8C15 10 F6            djnz 18B
 836+ 8C17
 837+ 8C17              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 838+ 8C17              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 839+ 8C17
 840+ 8C17 E1           15 pop hl
 841+ 8C18 23               inc hl
 842+ 8C19 35               dec (hl)
 843+ 8C1A 2B               dec hl
 844+ 8C1B 18 0F            jr 10F
 845+ 8C1D
 846+ 8C1D              ; -----------------------debug
 847+ 8C1D
 848+ 8C1D              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 849+ 8C1D              ; _ almacén de coordenadas_X de Amadeus.
 850+ 8C1D
 851+ 8C1D E5           14 push hl
 852+ 8C1E CD C1 8C         call Elimina_disparo_de_base_de_datos
 853+ 8C21 21 EC 85         ld hl,Impacto2
 854+ 8C24 CB CE            set 1,(hl)
 855+ 8C26 CD 0B 8D         call Limpia_Coordenadas_X
 856+ 8C29
 857+ 8C29 E1               pop hl
 858+ 8C2A 18 06            jr 12F
 859+ 8C2C
 860+ 8C2C CD 70 8C     10 call Mueve_disparo
 861+ 8C2F CD 47 8C         call foto_disparo_a_borrar
 862+ 8C32 C1           12 pop bc
 863+ 8C33
 864+ 8C33 18 04            jr 8F
 865+ 8C35
 866+ 8C35              ; ----- ----- ----- ----- ----- -----
 867+ 8C35
 868+ 8C35 ED 42        4 sbc hl,bc
 869+ 8C37 28 0A            jr z,6F
 870+ 8C39
 871+ 8C39 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 872+ 8C3C 23               inc hl
 873+ 8C3D 23               inc hl
 874+ 8C3E 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 875+ 8C41 18 8F            jr 5B
 876+ 8C43
 877+ 8C43 CD AA 87     6 call Inicia_Puntero_Disparo_Entidades
 878+ 8C46 C9               ret
 879+ 8C47
 880+ 8C47              ; ------------------------------------------------------------------
 881+ 8C47
 882+ 8C47              foto_disparo_a_borrar
 883+ 8C47
 884+ 8C47 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 885+ 8C48 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 886+ 8C49 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 887+ 8C4A
 888+ 8C4A E5               push hl
 889+ 8C4B 23               inc hl
 890+ 8C4C 23               inc hl
 891+ 8C4D ED 73 DF 85      ld (Stack),sp
 892+ 8C51 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 893+ 8C52 FD E1            pop iy
 894+ 8C54 DD E1            pop ix
 895+ 8C56 E1               pop hl
 896+ 8C57 ED 7B DF 85      ld sp,(Stack)
 897+ 8C5B 3A D6 85         ld a,(Ctrl_1)
 898+ 8C5E CB C7            set 0,a
 899+ 8C60 32 D6 85         ld (Ctrl_1),a
 900+ 8C63 CD A0 7F         call Guarda_foto_registros
 901+ 8C66 3A D6 85         ld a,(Ctrl_1)
 902+ 8C69 CB 87            res 0,a
 903+ 8C6B 32 D6 85         ld (Ctrl_1),a
 904+ 8C6E E1               pop hl
 905+ 8C6F C9               ret
 906+ 8C70
 907+ 8C70 E5           Mueve_disparo push hl
 908+ 8C71 7E               ld a,(hl)
 909+ 8C72 06 04            ld b,4
 910+ 8C74 23           1 inc hl
 911+ 8C75 10 FD            djnz 1B
 912+ 8C77
 913+ 8C77              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 914+ 8C77
 915+ 8C77 CD E8 87         call Extrae_address
 916+ 8C7A
 917+ 8C7A E6 01            and 1
 918+ 8C7C 28 2A            jr z,2F
 919+ 8C7E
 920+ 8C7E              ; Disparo hacia arriba, (Amadeus).
 921+ 8C7E
 922+ 8C7E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 923+ 8C7E              ; _ de la dificultad.
 924+ 8C7E
 925+ 8C7E CD 36 90         call PreviousScan
 926+ 8C81 CD 36 90         call PreviousScan
 927+ 8C84 CD 36 90         call PreviousScan
 928+ 8C87
 929+ 8C87              ; Detecta si el disparo de Amadeus sale de pantalla:
 930+ 8C87
 931+ 8C87 7C               ld a,h
 932+ 8C88 FE 40            cp $40
 933+ 8C8A 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 934+ 8C8C
 935+ 8C8C              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 936+ 8C8C
 937+ 8C8C EB               ex de,hl
 938+ 8C8D 06 04            ld b,4
 939+ 8C8F 2B           6 dec hl
 940+ 8C90 10 FD            djnz 6B
 941+ 8C92
 942+ 8C92 CD C1 8C         call Elimina_disparo_de_base_de_datos
 943+ 8C95
 944+ 8C95 18 0C            jr 4F
 945+ 8C97
 946+ 8C97              ; Se ha desplazado la bala, compruebo colisión.
 947+ 8C97
 948+ 8C97 D5           3 push de
 949+ 8C98 C5               push bc
 950+ 8C99 CD 7D 8A         call Comprueba_Colision
 951+ 8C9C 78               ld a,b
 952+ 8C9D C1               pop bc
 953+ 8C9E D1               pop de
 954+ 8C9F
 955+ 8C9F EB               ex de,hl
 956+ 8CA0
 957+ 8CA0 73               ld (hl),e
 958+ 8CA1 23               inc hl
 959+ 8CA2 72               ld (hl),d
 960+ 8CA3
 961+ 8CA3 E1           4 pop hl
 962+ 8CA4 23               inc hl
 963+ 8CA5 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 964+ 8CA6 2B               dec hl
 965+ 8CA7 C9               ret
 966+ 8CA8
 967+ 8CA8              ; Disparo hacia abajo, (Entidad).
 968+ 8CA8
 969+ 8CA8              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 970+ 8CA8              ; _ de la dificultad.
 971+ 8CA8
 972+ 8CA8 CD 27 90     2 call NextScan
 973+ 8CAB CD 27 90         call NextScan
 974+ 8CAE CD 27 90         call NextScan
 975+ 8CB1
 976+ 8CB1              ; Detecta si el disparo de la entidad sale de la pantalla.
 977+ 8CB1
 978+ 8CB1 7C               ld a,h
 979+ 8CB2 FE 58            cp $58
 980+ 8CB4 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 981+ 8CB6
 982+ 8CB6 EB               ex de,hl
 983+ 8CB7 06 04            ld b,4
 984+ 8CB9 2B           5 dec hl
 985+ 8CBA 10 FD            djnz 5B
 986+ 8CBC
 987+ 8CBC CD C1 8C         call Elimina_disparo_de_base_de_datos
 988+ 8CBF
 989+ 8CBF 18 E2            jr 4B
 990+ 8CC1
 991+ 8CC1              ; HL apunta al primer byte de la base de datos del disparo.
 992+ 8CC1
 993+ 8CC1 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
 994+ 8CC4 AF               xor a
 995+ 8CC5 77               ld (hl),a
 996+ 8CC6 54               ld d,h
 997+ 8CC7 5D               ld e,l
 998+ 8CC8 13               inc de
 999+ 8CC9 ED B0            ldir
1000+ 8CCB C9               ret
1001+ 8CCC
1002+ 8CCC              ; -----------------------------------------------------------------
1003+ 8CCC              ;
1004+ 8CCC              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1005+ 8CCC              ;
1006+ 8CCC              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1007+ 8CCC              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1008+ 8CCC              ;
1009+ 8CCC              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1010+ 8CCC              ;
1011+ 8CCC              ;   INPUTS:
1012+ 8CCC              ;
1013+ 8CCC              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1014+ 8CCC              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1015+ 8CCC              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1016+ 8CCC
1017+ 8CCC              ;   MODIFICA: A, HL, DE y C
1018+ 8CCC
1019+ 8CCC 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1020+ 8CCD 79               ld a,c
1021+ 8CCE E6 01            and 1
1022+ 8CD0 20 03            jr nz,1F
1023+ 8CD2 14               inc d
1024+ 8CD3 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1025+ 8CD5
1026+ 8CD5              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1027+ 8CD5              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1028+ 8CD5
1029+ 8CD5 15           1 dec d
1030+ 8CD6 23           2 inc hl
1031+ 8CD7 72               ld (hl),d
1032+ 8CD8
1033+ 8CD8 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1034+ 8CD9 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1035+ 8CDA C8               ret z
1036+ 8CDB
1037+ 8CDB AF               xor a
1038+ 8CDC 5F               ld e,a
1039+ 8CDD 18 ED            jr Guarda_coordenadas_X
1040+ 8CDF
1041+ 8CDF              ; -----------------------------------------------------------------
1042+ 8CDF              ;
1043+ 8CDF              ;   12/04/23
1044+ 8CDF              ;
1045+ 8CDF
1046+ 8CDF 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1047+ 8CE2 A7               and a
1048+ 8CE3 C8               ret z
1049+ 8CE4
1050+ 8CE4 FE 04            cp 4
1051+ 8CE6 20 09            jr nz,1F
1052+ 8CE8
1053+ 8CE8
1054+ 8CE8              ; La colisión se produce por contacto entre Amadeus y una entidad.
1055+ 8CE8
1056+ 8CE8 CD 0E 8B         call Detecta_colision_nave_entidad
1057+ 8CEB
1058+ 8CEB 21 EC 85         ld hl,Impacto2
1059+ 8CEE CB 5E            bit 3,(hl)
1060+ 8CF0 C0               ret nz                                               ; Existe colisión, RET.
1061+ 8CF1
1062+ 8CF1              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1063+ 8CF1              ; Primero analizamos si algún disparo impacta en Amadeus.
1064+ 8CF1
1065+ 8CF1 21 EC 85     1 ld hl,Impacto2
1066+ 8CF4 CB 4E            bit 1,(hl)
1067+ 8CF6 28 07            jr z,2F
1068+ 8CF8
1069+ 8CF8 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1070+ 8CFB 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1071+ 8CFD 18 0B            jr 3F
1072+ 8CFF
1073+ 8CFF 21 EC 85     2 ld hl,Impacto2
1074+ 8D02 CB 46            bit 0,(hl)
1075+ 8D04 C8               ret z
1076+ 8D05
1077+ 8D05              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1078+ 8D05
1079+ 8D05 21 D6 85         ld hl,Ctrl_1
1080+ 8D08 CB D6            set 2,(hl)
1081+ 8D0A
1082+ 8D0A C9           3 ret
1083+ 8D0B
1084+ 8D0B              ; -----------------------------------------------------------------
1085+ 8D0B              ;
1086+ 8D0B              ;   16/04/23
1087+ 8D0B              ;
1088+ 8D0B
1089+ 8D0B AF           Limpia_Coordenadas_X xor a
1090+ 8D0C 06 06            ld b,6
1091+ 8D0E 21 F1 85         ld hl,Coordenadas_X_Amadeus
1092+ 8D11 77           1 ld (hl),a
1093+ 8D12 23               inc hl
1094+ 8D13 10 FC            djnz 1B
1095+ 8D15 C9               ret
1096+ 8D16
1097+ 8D16              ; -----------------------------------------------------------------
1098+ 8D16              ;
1099+ 8D16              ;   25/04/23
1100+ 8D16              ;
1101+ 8D16
1102+ 8D16              Determina_resultado_comparativa
1103+ 8D16
1104+ 8D16 18 FE            jr $
1105+ 8D18
1106+ 8D18 7C               ld a,h
1107+ 8D19 06 00            ld b,0
1108+ 8D1B
1109+ 8D1B CD 35 8D         call Compara_cositas
1110+ 8D1E 04               inc b
1111+ 8D1F 05               dec b
1112+ 8D20 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1113+ 8D21
1114+ 8D21 18 FE            jr $
1115+ 8D23
1116+ 8D23 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1117+ 8D24 06 00            ld b,0
1118+ 8D26 FE 02            cp $02
1119+ 8D28 28 09            jr z,1F
1120+ 8D2A FE FE            cp $fe
1121+ 8D2C 28 05            jr z,1F
1122+ 8D2E
1123+ 8D2E CD 35 8D         call Compara_cositas
1124+ 8D31 18 01            jr 2F
1125+ 8D33
1126+ 8D33 04           1 inc b
1127+ 8D34 C9           2 ret
1128+ 8D35
1129+ 8D35 A7           Compara_cositas and a
1130+ 8D36 28 07            jr z,1F
1131+ 8D38 FE FF            cp $ff
1132+ 8D3A 28 03            jr z,1F
1133+ 8D3C FE 01            cp $01
1134+ 8D3E C0               ret nz
1135+ 8D3F 04           1 inc b
1136+ 8D40 C9               ret
1137+ 8D41
# file closed: Disparo.asm
 985  8D41              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8D41              ; ******************************************************************************************************************************************************************************************
   2+ 8D41              ;
   3+ 8D41              ; 01/23
   4+ 8D41              ;
   5+ 8D41              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8D41
   7+ 8D41 CD 1B 90     Draw call Prepara_draw
   8+ 8D44 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8D45 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8D46 28 05        	jr z,2F
  11+ 8D48
  12+ 8D48 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8D4B 18 0C        	jr 1F
  14+ 8D4D 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8D50 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8D53 CD E2 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8D56              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8D56 CD 61 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8D59 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8D5C CB 6F        	bit 5,a
  21+ 8D5E 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8D60
  23+ 8D60 CD 78 8D     	call Comprueba_limite_horizontal
  24+ 8D63 CD 08 8E     	call Comprueba_limite_vertical
  25+ 8D66
  26+ 8D66              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8D66
  28+ 8D66 CD 55 8F     3 call calcula_CColumnass
  29+ 8D69 CD 8C 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8D6C CD E1 8F     	call Define_rutina_de_impresion
  31+ 8D6F
  32+ 8D6F 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8D72 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8D74 32 C9 85     	ld (Ctrl_0),a
  35+ 8D77
  36+ 8D77 C9           	ret
  37+ 8D78
  38+ 8D78              ; *******************************************************************************************************************************************************************************************
  39+ 8D78              ;	21/01/23
  40+ 8D78              ;
  41+ 8D78              ; 	Comprueba_limite_horizontal.
  42+ 8D78              ;
  43+ 8D78              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8D78              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8D78              ;
  46+ 8D78              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8D78              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8D78              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8D78              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8D78
  51+ 8D78
  52+ 8D78
  53+ 8D78 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8D7B CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8D7D 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8D7F E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8D81 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8D84 18 09            jr 6F
  59+ 8D86 CB 5F        1 bit 3,a
  60+ 8D88 28 0A            jr z,2F
  61+ 8D8A E6 F7            and $f7
  62+ 8D8C 32 C9 85         ld (Ctrl_0),a
  63+ 8D8F CD E2 8E     6 call Inicializacion
  64+ 8D92 18 5B            jr 5F
  65+ 8D94 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8D95
  67+ 8D95              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8D95              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8D95
  70+ 8D95 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8D96 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8D99 CD E7 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8D9C 67           	ld h,a
  74+ 8D9D EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8D9E CD E7 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8DA1 67           	ld h,a
  77+ 8DA2 A7           	and a
  78+ 8DA3 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8DA5 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8DA6 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8DA9 FE 02        	cp 2
  82+ 8DAB 38 1E        	jr c,3F
  83+ 8DAD 28 1C        	jr z,3F
  84+ 8DAF 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8DB0 28 23            jr z,7F
  86+ 8DB2 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8DB4 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8DB6 E1           	pop hl
  89+ 8DB7
  90+ 8DB7              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8DB7              ; _para indicar con E="2" en caso necesario.
  92+ 8DB7
  93+ 8DB7 E5               push hl
  94+ 8DB8 C5               push bc
  95+ 8DB9 CD E7 92     	call calcula_tercio
  96+ 8DBC FE 01        	cp 1
  97+ 8DBE 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8DC0 CD F0 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8DC3 28 26            jr z,9F
 100+ 8DC5 38 24            jr c,9F
 101+ 8DC7 1E 00        11 ld e,0
 102+ 8DC9 18 22            jr 8F
 103+ 8DCB 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8DCC 28 07        	jr z, 7F
 105+ 8DCE 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8DD0 1E 00         	ld e,0
 107+ 8DD2 E1           	pop hl
 108+ 8DD3 18 04        	jr 4F
 109+ 8DD5 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8DD7 18 15            jr 10F
 111+ 8DD9
 112+ 8DD9              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8DD9              ; _para indicar con E="2" en caso necesario.
 114+ 8DD9
 115+ 8DD9 E5           4 push hl
 116+ 8DDA C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8DDB CD E7 92     	call calcula_tercio
 118+ 8DDE FE 01        	cp 1
 119+ 8DE0 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8DE2 CD F0 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8DE5 28 04            jr z,9F
 122+ 8DE7 30 02            jr nc,9F
 123+ 8DE9 18 02        	jr 8F
 124+ 8DEB 1E 02        9 ld e,2
 125+ 8DED C1           8 pop bc
 126+ 8DEE E1           10 pop hl
 127+ 8DEF C9           5 ret
 128+ 8DF0
 129+ 8DF0              ; --------------------
 130+ 8DF0              ;
 131+ 8DF0              ; 25/08/22
 132+ 8DF0
 133+ 8DF0 CD E7 92     Comprueba_centro call calcula_tercio
 134+ 8DF3 67               ld h,a
 135+ 8DF4 08           	ex af,af
 136+ 8DF5 FE 02        	cp 2
 137+ 8DF7 38 07        	jr c,1F
 138+ 8DF9 28 05        	jr z,1F
 139+ 8DFB 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8DFE 18 03        	jr 2F
 141+ 8E00 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E03 08           2 ex af,af
 143+ 8E04 A7               and a
 144+ 8E05 ED 42            sbc hl,bc
 145+ 8E07 C9               ret
 146+ 8E08
 147+ 8E08              ; *********************************************************************************************************************************************************************************************
 148+ 8E08              ;
 149+ 8E08              ;   16/8/22
 150+ 8E08              ;
 151+ 8E08              ;	Comprueba_limite_vertical
 152+ 8E08              ;
 153+ 8E08              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E08              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E08              ;
 156+ 8E08
 157+ 8E08 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8E0B 7D           	ld a,l
 159+ 8E0C E6 1F        	and $1F
 160+ 8E0E 57           	ld d,a
 161+ 8E0F 3A D5 85     	ld a,(Limite_vertical)
 162+ 8E12 BA           	cp d 											; Límite - Posición.
 163+ 8E13 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8E14 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8E17 CB 47        	bit 0,a
 166+ 8E19 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8E1B
 168+ 8E1B              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8E1B
 170+ 8E1B 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8E1C 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8E1E
 173+ 8E1E              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8E1E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8E1E
 176+ 8E1E 3A A1 85         ld a,(Coordenada_X)
 177+ 8E21 16 0F            ld d,Centro_izquierda
 178+ 8E23 A7               and a
 179+ 8E24 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8E25 28 1E            jr z,3F
 181+ 8E27 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8E29              ;                                                    ; _salimos sin modificar nada.
 183+ 8E29 18 0E            jr 2F
 184+ 8E2B 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8E2C 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8E2E
 187+ 8E2E              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8E2E              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8E2E
 190+ 8E2E 3A A1 85         ld a,(Coordenada_X)
 191+ 8E31 16 10            ld d,Centro_derecha
 192+ 8E33 A7               and a
 193+ 8E34 92               sub d
 194+ 8E35 28 0E            jr z,3F
 195+ 8E37 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8E39              ;                                                    ; _salimos sin modificar nada.
 197+ 8E39 CB 43        2 bit 0,e
 198+ 8E3B 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8E3D C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8E3E CD D2 8E         call Modificaccionne
 201+ 8E41 C1           	pop bc
 202+ 8E42 CD E2 8E         call Inicializacion
 203+ 8E45 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8E46
 205+ 8E46              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8E46
 207+ 8E46 C5           4 push bc
 208+ 8E47 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8E4A 0A           	ld a,(bc)
 210+ 8E4B 3D           	dec a
 211+ 8E4C 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8E4D 7D           	ld a,l
 213+ 8E4E 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8E4F CB 47        	bit 0,a
 215+ 8E51 28 03        	jr z,5F
 216+ 8E53 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8E54 18 2E        	jr 7F
 218+ 8E56
 219+ 8E56              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8E56
 221+ 8E56 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8E57 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8E58 3A C9 85     	ld a,(Ctrl_0)
 224+ 8E5B CB 4F        	bit 1,a
 225+ 8E5D 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8E5F F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8E60
 228+ 8E60              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8E60
 230+ 8E60 1C               inc e
 231+ 8E61 1D               dec e
 232+ 8E62 20 07            jr nz,12F
 233+ 8E64 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8E65 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8E66 22 9D 85     	ld (Posicion_actual),hl
 236+ 8E69 18 44        13 jr 9F
 237+ 8E6B CB 43        12 bit 0,e
 238+ 8E6D 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8E6F              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8E6F C1           	pop bc
 241+ 8E70 18 D3        	jr 3B
 242+ 8E72 80           14 add b
 243+ 8E73 6F               ld l,a
 244+ 8E74 22 9D 85     	ld (Posicion_actual),hl
 245+ 8E77 CD D2 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8E7A 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8E7C E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8E7E 32 C9 85         ld (Ctrl_0),a
 249+ 8E81 F1           	pop af
 250+ 8E82 18 2B        	jr 9F
 251+ 8E84
 252+ 8E84              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8E84
 254+ 8E84 F5           7 push af
 255+ 8E85 3A C9 85     	ld a,(Ctrl_0)
 256+ 8E88 CB 47        	bit 0,a
 257+ 8E8A 20 1D        	jr nz,8F
 258+ 8E8C F1           	pop af
 259+ 8E8D
 260+ 8E8D              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8E8D
 262+ 8E8D 1C           	inc e
 263+ 8E8E 1D               dec e
 264+ 8E8F 20 07            jr nz,10F
 265+ 8E91 90           	sub b
 266+ 8E92 6F               ld l,a
 267+ 8E93 22 9D 85     	ld (Posicion_actual),hl
 268+ 8E96 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8E98              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8E98 CB 43        10 bit 0,e
 271+ 8E9A 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8E9C              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8E9C C1           	pop bc
 274+ 8E9D 18 A6        	jr 3B
 275+ 8E9F 90           16 sub b
 276+ 8EA0 6F               ld l,a
 277+ 8EA1 22 9D 85     	ld (Posicion_actual),hl
 278+ 8EA4 CD D2 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8EA7 18 06            jr 9F
 280+ 8EA9 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8EAB 32 C9 85         ld (Ctrl_0),a
 282+ 8EAE F1           	pop af
 283+ 8EAF C1           9 pop bc
 284+ 8EB0 1E 00        	ld e,0
 285+ 8EB2 CD E2 8E         call Inicializacion
 286+ 8EB5 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8EB6 08           	ex af,af
 288+ 8EB7 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8EB8 18 8B            jr 3B
 290+ 8EBA
 291+ 8EBA              ; --------------------
 292+ 8EBA
 293+ 8EBA 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8EBC CD 36 90     1 call PreviousScan
 295+ 8EBF 10 FB            djnz 1B
 296+ 8EC1 22 9D 85     	ld (Posicion_actual),hl
 297+ 8EC4 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8EC5 C9           	ret
 299+ 8EC6
 300+ 8EC6              ; --------------------
 301+ 8EC6
 302+ 8EC6 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8EC8 CD 27 90     1 call NextScan
 304+ 8ECB 10 FB            djnz 1B
 305+ 8ECD 22 9D 85     	ld (Posicion_actual),hl
 306+ 8ED0 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8ED1 C9           	ret
 308+ 8ED2
 309+ 8ED2              ; --------------------
 310+ 8ED2              ;
 311+ 8ED2              ;	22/01/23
 312+ 8ED2              ;
 313+ 8ED2              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8ED2              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8ED2              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8ED2
 317+ 8ED2
 318+ 8ED2              Modificaccionne
 319+ 8ED2
 320+ 8ED2 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8ED5 FE 02        	cp 2
 322+ 8ED7 CC BA 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8EDA DC BA 8E         call c,Modifica_Pos_actual
 324+ 8EDD C8           	ret z
 325+ 8EDE CD C6 8E         call Modifica_Pos_actual2
 326+ 8EE1 C9               ret
 327+ 8EE2
 328+ 8EE2              ; *************************************************************************************************************************************************************************************************
 329+ 8EE2              ;
 330+ 8EE2              ;	13/8/22
 331+ 8EE2              ;
 332+ 8EE2              ;	Inicializacion
 333+ 8EE2              ;
 334+ 8EE2              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8EE2              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8EE2              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8EE2              ;
 338+ 8EE2              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8EE2              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8EE2              ;	_ desaparece/aparece.
 341+ 8EE2
 342+ 8EE2              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8EE2              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8EE2              ;
 345+ 8EE2              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8EE2              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8EE2              ; 		   [E] ="0"
 348+ 8EE2
 349+ 8EE2              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8EE2
 351+ 8EE2 CD E7 92     Inicializacion call calcula_tercio
 352+ 8EE5 28 36        	jr z,primit
 353+ 8EE7 E6 02        	and 2
 354+ 8EE9 20 07        	jr nz,segmit
 355+ 8EEB 7D           	ld a,l
 356+ 8EEC FE 7F        	cp $7f
 357+ 8EEE 38 2D        	jr c,primit
 358+ 8EF0 28 2B        	jr z,primit
 359+ 8EF2 CD 4F 8F     segmit call column
 360+ 8EF5 38 13        	jr c,tercuad
 361+ 8EF7 3E 04        cuarcuad ld a,4
 362+ 8EF9 32 AF 85     	ld (Cuad_objeto),a
 363+ 8EFC 21 20 48     	ld hl,$4820
 364+ 8EFF 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8F02 21 D5 85     	ld hl,Limite_vertical
 366+ 8F05 36 0D        	ld (hl),$0d
 367+ 8F07 08           	ex af,af
 368+ 8F08 18 3C        	jr 1F
 369+ 8F0A              tercuad
 370+ 8F0A 3E 03        	ld a,3
 371+ 8F0C 32 AF 85     	ld (Cuad_objeto),a
 372+ 8F0F 21 20 48     	ld hl,$4820
 373+ 8F12 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8F15 21 D5 85     	ld hl,Limite_vertical
 375+ 8F18 36 12        	ld (hl),$12
 376+ 8F1A 08           	ex af,af
 377+ 8F1B 18 29        	jr 1F
 378+ 8F1D CD 4F 8F     primit call column
 379+ 8F20 38 13        	jr c, primcuad
 380+ 8F22              segcuad
 381+ 8F22 3E 02        	ld a,2
 382+ 8F24 32 AF 85     	ld (Cuad_objeto),a
 383+ 8F27 21 C0 4F     	ld hl,$4fc0
 384+ 8F2A 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8F2D 21 D5 85     	ld hl,Limite_vertical
 386+ 8F30 36 0D        	ld (hl),$0d
 387+ 8F32 08           	ex af,af
 388+ 8F33 18 11        	jr 1F
 389+ 8F35              primcuad
 390+ 8F35 3E 01        	ld a,1
 391+ 8F37 32 AF 85     	ld (Cuad_objeto),a
 392+ 8F3A 21 C0 4F     	ld hl,$4fc0
 393+ 8F3D 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8F40 21 D5 85     	ld hl,Limite_vertical
 395+ 8F43 36 12        	ld (hl),$12
 396+ 8F45 08           	ex af,af
 397+ 8F46 CD 13 96     1 call Genera_coordenadas
 398+ 8F49 21 C9 85     	ld hl,Ctrl_0
 399+ 8F4C CB EE        	set 5,(hl)
 400+ 8F4E C9           	ret
 401+ 8F4F
 402+ 8F4F              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8F4F
 404+ 8F4F              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8F4F              ;
 406+ 8F4F              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8F4F
 408+ 8F4F 7D           column ld a,l
 409+ 8F50 E6 1F        	and $1f
 410+ 8F52 FE 10         	cp $10
 411+ 8F54 C9            	ret
 412+ 8F55
 413+ 8F55              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8F55              ;
 415+ 8F55              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8F55              ;
 417+ 8F55              ; 14/12/22
 418+ 8F55              ;
 419+ 8F55              ;	Modifica: A y BC.
 420+ 8F55
 421+ 8F55 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8F58 E6 01        	and 1
 423+ 8F5A 28 17        	jr z,1F
 424+ 8F5C
 425+ 8F5C              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8F5C
 427+ 8F5C 3A A1 85     	ld a,(Coordenada_X)
 428+ 8F5F 47           	ld b,a
 429+ 8F60 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8F61 79           	ld a,c
 431+ 8F62 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8F63 38 08        	jr c,2F
 433+ 8F65 47           	ld b,a
 434+ 8F66 79           	ld a,c
 435+ 8F67 90           	sub b
 436+ 8F68 32 D2 85     	ld (Columnas),a
 437+ 8F6B 18 1B        	jr 4F
 438+ 8F6D 79           2 ld a,c
 439+ 8F6E 32 D2 85     	ld (Columnas),a
 440+ 8F71 18 15        	jr 4F
 441+ 8F73
 442+ 8F73              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8F73
 444+ 8F73 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8F76 81           	add c
 446+ 8F77 3D           	dec a
 447+ 8F78 D6 1F        	sub $1f
 448+ 8F7A 38 08        	jr c,3F
 449+ 8F7C 47           	ld b,a
 450+ 8F7D 79           	ld a,c
 451+ 8F7E 90           	sub b
 452+ 8F7F 32 D2 85     	ld (Columnas),a
 453+ 8F82 18 04        	jr 4F
 454+ 8F84 79           3 ld a,c
 455+ 8F85 32 D2 85     	ld (Columnas),a
 456+ 8F88 D9           4 exx
 457+ 8F89 4F           	ld c,a
 458+ 8F8A D9           	exx
 459+ 8F8B C9            ret
 460+ 8F8C
 461+ 8F8C              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8F8C              ;
 463+ 8F8C              ; 7/1/23
 464+ 8F8C              ;
 465+ 8F8C              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8F8C              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8F8C              ;
 468+ 8F8C              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8F8C              ;	DESTRUYE: HL,B Y A.
 470+ 8F8C
 471+ 8F8C 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8F8F FE 02        	cp 2
 473+ 8F91 38 18        	jr c,1F
 474+ 8F93 28 16        	jr z,1F
 475+ 8F95 E6 01        	and 1
 476+ 8F97 28 0D        	jr z,3F
 477+ 8F99
 478+ 8F99              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8F99
 480+ 8F99 CD D5 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8F9C
 482+ 8F9C 7D           9 ld a,l
 483+ 8F9D E6 1F        	and $1f
 484+ 8F9F 28 2A        	jr z,7F
 485+ 8FA1 2B           	dec hl
 486+ 8FA2 10 F8        	djnz 9B
 487+ 8FA4 18 25        	jr 7F
 488+ 8FA6
 489+ 8FA6              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8FA6
 491+ 8FA6 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8FA9 18 20        	jr 7F
 493+ 8FAB
 494+ 8FAB 28 14        1 jr z,2F
 495+ 8FAD
 496+ 8FAD              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8FAD
 498+ 8FAD CD D5 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8FB0 7D           4 ld a,l
 500+ 8FB1 E6 1F        	and $1f
 501+ 8FB3 28 03        	jr z,6F
 502+ 8FB5 2B           	dec hl
 503+ 8FB6 10 F8        	djnz 4B
 504+ 8FB8 06 0F        6 ld b,15
 505+ 8FBA CD 36 90     5 call PreviousScan
 506+ 8FBD 10 FB        	djnz 5B
 507+ 8FBF 18 0A        	jr 7F
 508+ 8FC1
 509+ 8FC1              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8FC1
 511+ 8FC1 CD D5 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8FC4 06 0F        	ld b,15
 513+ 8FC6 CD 36 90     8 call PreviousScan
 514+ 8FC9 10 FB        	djnz 8B
 515+ 8FCB
 516+ 8FCB E5           7 push hl
 517+ 8FCC DD E1        	pop ix
 518+ 8FCE
 519+ 8FCE 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8FD1 E5           	push hl
 521+ 8FD2 FD E1        	pop iy
 522+ 8FD4
 523+ 8FD4 C9           	ret
 524+ 8FD5
 525+ 8FD5              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8FD5              ;
 527+ 8FD5              ;	2/1/23
 528+ 8FD5              ;
 529+ 8FD5              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8FD5              ;
 531+ 8FD5              ;	Tras esta rutina tenemos:
 532+ 8FD5              ;
 533+ 8FD5              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8FD5              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8FD5              ;
 536+ 8FD5              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8FD5
 538+ 8FD5 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8FD8 3A D2 85     	ld a,(Columnas)
 540+ 8FDB 3D           	dec a
 541+ 8FDC 20 01        	jr nz,1F
 542+ 8FDE 3C           	inc a
 543+ 8FDF 47           1 ld b,a
 544+ 8FE0 C9           	ret
 545+ 8FE1
 546+ 8FE1              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8FE1              ;
 548+ 8FE1              ;	3/1/23
 549+ 8FE1              ;
 550+ 8FE1              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8FE1              ;
 552+ 8FE1              ;	Destruye: A,B,HL y DE.
 553+ 8FE1
 554+ 8FE1              Define_rutina_de_impresion
 555+ 8FE1
 556+ 8FE1 3A 9C 85     	ld a,(Columns)
 557+ 8FE4 47           	ld b,a
 558+ 8FE5 3A D2 85     	ld a,(Columnas)
 559+ 8FE8 B8           	cp b
 560+ 8FE9 20 0D        	jr nz,2f
 561+ 8FEB
 562+ 8FEB              ;	La entidad se imprime entera.
 563+ 8FEB
 564+ 8FEB 21 B7 90     	ld hl, Indice_entidades_completas
 565+ 8FEE E6 01        	and 1
 566+ 8FF0 28 02        	jr z,1F
 567+ 8FF2
 568+ 8FF2 23           	inc hl
 569+ 8FF3 23           	inc hl
 570+ 8FF4
 571+ 8FF4 CD E8 87     1 call Extrae_address
 572+ 8FF7 C9           	ret		;	ret
 573+ 8FF8
 574+ 8FF8              ;	La entidad no se imprime entera en pantalla.
 575+ 8FF8
 576+ 8FF8 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8FFB E6 01        	and 1
 578+ 8FFD 28 17        	jr z,3F
 579+ 8FFF
 580+ 8FFF              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8FFF
 582+ 8FFF 21 BB 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 9002 3A 9C 85     4 ld a,(Columns)
 584+ 9005 E6 01        	and 1
 585+ 9007 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9009
 587+ 9009 23           	inc hl
 588+ 900A 23           	inc hl
 589+ 900B
 590+ 900B 3A D2 85     	ld a,(Columnas)
 591+ 900E E6 01        	and 1
 592+ 9010 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 9012
 594+ 9012 23           	inc hl
 595+ 9013 23           	inc hl
 596+ 9014
 597+ 9014 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 9016
 599+ 9016 21 C1 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9019 18 E7        	jr 4B
 601+ 901B
 602+ 901B              ; --------------------------------------------------------------------------------------------------------------------
 603+ 901B              ;
 604+ 901B              ;	Prepara_draw
 605+ 901B              ;
 606+ 901B              ;	Es una rutina de carga.
 607+ 901B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 901B              ;
 609+ 901B              ;	FUNCIONAMIENTO:
 610+ 901B              ;
 611+ 901B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 901B              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 901B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 901B              ;
 615+ 901B              ;	DESTRUYE:
 616+ 901B              ;
 617+ 901B              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 901B
 619+ 901B 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 901E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 901F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 9020 4E           	ld c,(hl)
 623+ 9021 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 9024 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 9026 C9           	ret
 626+ 9027
 627+ 9027              ;----------------------------------------------------------------------------------------------------------------
 628+ 9027              ;
 629+ 9027              ;	5/08/22
 630+ 9027              ;
 631+ 9027              ;   NextScan.
 632+ 9027              ;
 633+ 9027              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9027              ;
 635+ 9027              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9027              ;
 637+ 9027              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9027              ;
 639+ 9027              ;       DESTRUIDOS: AF y HL !!!
 640+ 9027              ;
 641+ 9027              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9027              ;
 643+ 9027
 644+ 9027 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9028 7C               ld a,h
 646+ 9029 E6 07            and 7
 647+ 902B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 902C
 649+ 902C 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 902D C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 902F 6F               ld l,a
 652+ 9030 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 9031
 654+ 9031 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 9032 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 9034 67               ld h,a
 657+ 9035 C9               ret
 658+ 9036
 659+ 9036              ;----------------------------------------------------------------------------------------------------------------
 660+ 9036              ;
 661+ 9036              ;	5/08/22
 662+ 9036              ;
 663+ 9036              ;   PreviousScan.
 664+ 9036              ;
 665+ 9036              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 9036              ;
 667+ 9036              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 9036              ;
 669+ 9036              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 9036              ;
 671+ 9036              ;       DESTRUIDOS: AF y HL !!!
 672+ 9036              ;
 673+ 9036              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 9036              ;
 675+ 9036
 676+ 9036 7C           PreviousScan ld a,h
 677+ 9037 25               dec h               ; Dec H.
 678+ 9038 E6 07            and 7
 679+ 903A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 903B
 681+ 903B 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 903C D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 903E 6F               ld l,a
 684+ 903F D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9040
 686+ 9040 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 9041 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 9043 67               ld h,a
 689+ 9044 C9               ret
 690+ 9045
 691+ 9045              ; -----------------------------------------------------------------------------------
 692+ 9045              ;
 693+ 9045              ;	28/2/23
 694+ 9045              ;
 695+ 9045              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 9045              ;	Extrae fotos de Album_de_fotos.
 697+ 9045
 698+ 9045 3A DE 85     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 9048 A7           	and a
 700+ 9049 C8           	ret z
 701+ 904A ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 904E 31 00 70     	ld sp,Album_de_fotos
 703+ 9051
 704+ 9051 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 9053 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 9054 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 9055
 708+ 9055 ED 73 E1 85  	ld (Stack_2),sp
 709+ 9059 ED 7B DF 85  	ld sp,(Stack)
 710+ 905D
 711+ 905D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 905D
 713+ 905D 3E CD        	ld a,$cd
 714+ 905F 32 67 90     	ld (Imprime),a
 715+ 9062 EB           	ex de,hl
 716+ 9063 22 68 90     	ld (Imprime+1),hl
 717+ 9066 EB           	ex de,hl
 718+ 9067
 719+ 9067              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 9067
 721+ 9067 00 00 00     Imprime db 0,0,0
 722+ 906A
 723+ 906A 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 906D 3D           	dec a
 725+ 906E 28 09        	jr z,1F
 726+ 9070 32 DE 85      	ld (Numero_de_malotes),a
 727+ 9073
 728+ 9073 ED 7B E1 85   	ld sp,(Stack_2)
 729+ 9077 18 D8        	jr 2B
 730+ 9079
 731+ 9079 AF           1 xor a
 732+ 907A 32 E1 85     	ld (Stack_2),a
 733+ 907D C9           	ret
 734+ 907E
 735+ 907E              ; -----------------------------------------------------------------------------------
 736+ 907E              ;
 737+ 907E              ;	28/2/23
 738+ 907E              ;
 739+ 907E              ;	Pinta los disparos generados.
 740+ 907E
 741+ 907E              Extrae_foto_disparos
 742+ 907E
 743+ 907E 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 9081 A7           	and a
 745+ 9082 C8           	ret z
 746+ 9083 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9087 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 908A
 749+ 908A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 908C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 908D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 908E
 753+ 908E ED 73 E1 85  	ld (Stack_2),sp
 754+ 9092 ED 7B DF 85  	ld sp,(Stack)
 755+ 9096
 756+ 9096              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9096
 758+ 9096 3E CD        	ld a,$cd
 759+ 9098 32 A0 90     	ld (Imprime2),a
 760+ 909B EB           	ex de,hl
 761+ 909C 22 A1 90     	ld (Imprime2+1),hl
 762+ 909F EB           	ex de,hl
 763+ 90A0
 764+ 90A0              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 90A0
 766+ 90A0 00 00 00     Imprime2 db 0,0,0
 767+ 90A3
 768+ 90A3 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 90A6 3D           	dec a
 770+ 90A7 28 09        	jr z,1F
 771+ 90A9 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 90AC
 773+ 90AC ED 7B E1 85  	ld sp,(Stack_2)
 774+ 90B0 18 D8        	jr 2B
 775+ 90B2
 776+ 90B2 AF           1 xor a
 777+ 90B3 32 E1 85     	ld (Stack_2),a
 778+ 90B6 C9           	ret
 779+ 90B7
# file closed: Draw_XOR.asm
 986  90B7              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 90B7              ;   índices de Rutinas de impresión.
   2+ 90B7
   3+ 90B7 C7 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 90B9 F4 90            defw Pinta_Amadeus_3x2
   5+ 90BB
   6+ 90BB 4A 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 90BD EA 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 90BF 9E 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 90C1
  10+ 90C1 74 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 90C3 78 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 90C5 2C 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 90C7
  14+ 90C7
  15+ 90C7              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 90C7              ;
  17+ 90C7              ;   12/12/22
  18+ 90C7              ;
  19+ 90C7              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 90C7              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 90C7              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 90C7              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 90C7              ;
  24+ 90C7              ;   Modifica: DE y HL.
  25+ 90C7
  26+ 90C7 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 90CB FD F9        	ld sp,iy
  28+ 90CD 06 10            ld b,16
  29+ 90CF D1           1 pop de
  30+ 90D0 7B               ld a,e
  31+ 90D1 AE               xor (hl)
  32+ 90D2 77           	ld (hl),a
  33+ 90D3 23           	inc hl
  34+ 90D4 7A               ld a,d
  35+ 90D5 AE               xor (hl)
  36+ 90D6 77           	ld (hl),a
  37+ 90D7 2B           	dec hl
  38+ 90D8 24           	inc h
  39+ 90D9 7C               ld a,h
  40+ 90DA E6 07            and 7
  41+ 90DC 20 0A            jr nz,2F
  42+ 90DE 7D               ld a,l
  43+ 90DF C6 20            add a,$20
  44+ 90E1 6F               ld l,a
  45+ 90E2 38 04            jr c,2F
  46+ 90E4 7C               ld a,h
  47+ 90E5 D6 08            sub 8
  48+ 90E7 67               ld h,a
  49+ 90E8 7C           2 ld a,h
  50+ 90E9 FE 58            cp $58
  51+ 90EB 28 02            jr z,3F
  52+ 90ED 10 E0            djnz 1B
  53+ 90EF ED 7B DF 85  3 ld sp,(Stack)
  54+ 90F3 C9           	ret
  55+ 90F4
  56+ 90F4 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 90F8 FD F9        	ld sp,iy
  58+ 90FA 06 08            ld b,8
  59+ 90FC D1           1 pop de
  60+ 90FD 7B               ld a,e
  61+ 90FE AE               xor (hl)
  62+ 90FF 77           	ld (hl),a
  63+ 9100 23           	inc hl
  64+ 9101 7A               ld a,d
  65+ 9102 AE               xor (hl)
  66+ 9103 77           	ld (hl),a
  67+ 9104 23           	inc hl
  68+ 9105 D1           	pop de
  69+ 9106 7B               ld a,e
  70+ 9107 AE               xor (hl)
  71+ 9108 77           	ld (hl),a
  72+ 9109 2B           	dec hl
  73+ 910A 2B           	dec hl
  74+ 910B 24           	inc h
  75+ 910C 7C               ld a,h
  76+ 910D E6 07            and 7
  77+ 910F 20 0A            jr nz,2F
  78+ 9111 7D               ld a,l
  79+ 9112 C6 20            add a,$20
  80+ 9114 6F               ld l,a
  81+ 9115 38 04            jr c,2F
  82+ 9117 7C               ld a,h
  83+ 9118 D6 08            sub 8
  84+ 911A 67               ld h,a
  85+ 911B 7C           2 ld a,h
  86+ 911C FE 58            cp $58
  87+ 911E 28 25            jr z,4F
  88+ 9120 7A               ld a,d
  89+ 9121 AE               xor (hl)
  90+ 9122 77               ld (hl),a
  91+ 9123 D1           	pop de
  92+ 9124 23           	inc hl
  93+ 9125 7B               ld a,e
  94+ 9126 AE               xor (hl)
  95+ 9127 77           	ld (hl),a
  96+ 9128 23           	inc hl
  97+ 9129 7A               ld a,d
  98+ 912A AE               xor (hl)
  99+ 912B 77           	ld (hl),a
 100+ 912C 2B           	dec hl
 101+ 912D 2B           	dec hl
 102+ 912E 24           	inc h
 103+ 912F 7C               ld a,h
 104+ 9130 E6 07            and 7
 105+ 9132 20 0A            jr nz,3F
 106+ 9134 7D               ld a,l
 107+ 9135 C6 20            add a,$20
 108+ 9137 6F               ld l,a
 109+ 9138 38 04            jr c,3F
 110+ 913A 7C               ld a,h
 111+ 913B D6 08            sub 8
 112+ 913D 67               ld h,a
 113+ 913E 7C           3 ld a,h
 114+ 913F FE 58            cp $58
 115+ 9141 28 02            jr z,4F
 116+ 9143 10 B7            djnz 1B
 117+ 9145 ED 7B DF 85  4 ld sp,(Stack)
 118+ 9149 C9           	ret
 119+ 914A
 120+ 914A              ; ---------------------------------------------------
 121+ 914A
 122+ 914A ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 914E FD F9        	ld sp,iy
 124+ 9150
 125+ 9150              ; >>>
 126+ 9150
 127+ 9150 06 10            ld b,16
 128+ 9152 D1           1 pop de
 129+ 9153 7A           	ld a,d
 130+ 9154 AE           	xor (hl)
 131+ 9155 77           	ld (hl),a
 132+ 9156 24           	inc h
 133+ 9157 7C               ld a,h
 134+ 9158 E6 07            and 7
 135+ 915A 20 0C            jr nz,2F
 136+ 915C 7D               ld a,l
 137+ 915D C6 20            add a,$20
 138+ 915F 6F               ld l,a
 139+ 9160 38 06            jr c,2F
 140+ 9162 7C               ld a,h
 141+ 9163 D6 08            sub 8
 142+ 9165 67               ld h,a
 143+ 9166 18 00            jr 2F
 144+ 9168 7C           2 ld a,h
 145+ 9169 FE 58            cp $58
 146+ 916B 28 02            jr z,3F
 147+ 916D 10 E3            djnz 1B
 148+ 916F ED 7B DF 85  3 ld sp,(Stack)
 149+ 9173 C9           	ret
 150+ 9174
 151+ 9174 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9178 FD F9        	ld sp,iy
 153+ 917A
 154+ 917A              ; >>>
 155+ 917A
 156+ 917A 06 10            ld b,16
 157+ 917C D1           1 pop de
 158+ 917D 7B           	ld a,e
 159+ 917E AE           	xor (hl)
 160+ 917F 77           	ld (hl),a
 161+ 9180 24           	inc h
 162+ 9181 7C               ld a,h
 163+ 9182 E6 07            and 7
 164+ 9184 20 0C            jr nz,2F
 165+ 9186 7D               ld a,l
 166+ 9187 C6 20            add a,$20
 167+ 9189 6F               ld l,a
 168+ 918A 38 06            jr c,2F
 169+ 918C 7C               ld a,h
 170+ 918D D6 08            sub 8
 171+ 918F 67               ld h,a
 172+ 9190 18 00            jr 2F
 173+ 9192 7C           2 ld a,h
 174+ 9193 FE 58            cp $58
 175+ 9195 28 02            jr z,3F
 176+ 9197 10 E3            djnz 1B
 177+ 9199 ED 7B DF 85  3 ld sp,(Stack)
 178+ 919D C9           	ret
 179+ 919E
 180+ 919E              ; ---------------------------------------------------
 181+ 919E
 182+ 919E ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 91A2 FD F9        	ld sp,iy
 184+ 91A4 06 08            ld b,8
 185+ 91A6 D1           1 pop de
 186+ 91A7 7A           	ld a,d
 187+ 91A8 AE           	xor (hl)
 188+ 91A9 77           	ld (hl),a
 189+ 91AA 23           	inc hl
 190+ 91AB D1           	pop de
 191+ 91AC 7B           	ld a,e
 192+ 91AD AE           	xor (hl)
 193+ 91AE 77           	ld (hl),a
 194+ 91AF 2B           	dec hl
 195+ 91B0 24            	inc h
 196+ 91B1 7C               ld a,h
 197+ 91B2 E6 07            and 7
 198+ 91B4 20 0A            jr nz,2F
 199+ 91B6 7D               ld a,l
 200+ 91B7 C6 20            add a,$20
 201+ 91B9 6F               ld l,a
 202+ 91BA 38 04            jr c,2F
 203+ 91BC 7C               ld a,h
 204+ 91BD D6 08            sub 8
 205+ 91BF 67               ld h,a
 206+ 91C0 7C           2 ld a,h
 207+ 91C1 FE 58            cp $58
 208+ 91C3 28 20            jr z,4F
 209+ 91C5 D1               pop de
 210+ 91C6 7B           	ld a,e
 211+ 91C7 AE           	xor (hl)
 212+ 91C8 77           	ld (hl),a
 213+ 91C9 23           	inc hl
 214+ 91CA 7A           	ld a,d
 215+ 91CB AE           	xor (hl)
 216+ 91CC 77           	ld (hl),a
 217+ 91CD 2B           	dec hl
 218+ 91CE 24           	inc h
 219+ 91CF 7C               ld a,h
 220+ 91D0 E6 07            and 7
 221+ 91D2 20 0A            jr nz,3F
 222+ 91D4 7D               ld a,l
 223+ 91D5 C6 20            add a,$20
 224+ 91D7 6F               ld l,a
 225+ 91D8 38 04            jr c,3F
 226+ 91DA 7C               ld a,h
 227+ 91DB D6 08            sub 8
 228+ 91DD 67               ld h,a
 229+ 91DE 7C           3 ld a,h
 230+ 91DF FE 58            cp $58
 231+ 91E1 28 02            jr z,4F
 232+ 91E3 10 C1            djnz 1B
 233+ 91E5 ED 7B DF 85  4 ld sp,(Stack)
 234+ 91E9 C9           	ret
 235+ 91EA
 236+ 91EA ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 91EE FD F9        	ld sp,iy
 238+ 91F0 06 08            ld b,8
 239+ 91F2 D1           1 pop de
 240+ 91F3 D1           	pop de
 241+ 91F4 7B           	ld a,e
 242+ 91F5 AE           	xor (hl)
 243+ 91F6 77           	ld (hl),a
 244+ 91F7 24            	inc h
 245+ 91F8 7C               ld a,h
 246+ 91F9 E6 07            and 7
 247+ 91FB 20 0A            jr nz,2F
 248+ 91FD 7D               ld a,l
 249+ 91FE C6 20            add a,$20
 250+ 9200 6F               ld l,a
 251+ 9201 38 04            jr c,2F
 252+ 9203 7C               ld a,h
 253+ 9204 D6 08            sub 8
 254+ 9206 67               ld h,a
 255+ 9207 7C           2 ld a,h
 256+ 9208 FE 58            cp $58
 257+ 920A 28 1B            jr z,4F
 258+ 920C D1               pop de
 259+ 920D 7A           	ld a,d
 260+ 920E AE           	xor (hl)
 261+ 920F 77           	ld (hl),a
 262+ 9210 24           	inc h
 263+ 9211 7C               ld a,h
 264+ 9212 E6 07            and 7
 265+ 9214 20 0A            jr nz,3F
 266+ 9216 7D               ld a,l
 267+ 9217 C6 20            add a,$20
 268+ 9219 6F               ld l,a
 269+ 921A 38 04            jr c,3F
 270+ 921C 7C               ld a,h
 271+ 921D D6 08            sub 8
 272+ 921F 67               ld h,a
 273+ 9220 7C           3 ld a,h
 274+ 9221 FE 58            cp $58
 275+ 9223 28 02            jr z,4F
 276+ 9225 10 CB            djnz 1B
 277+ 9227 ED 7B DF 85  4 ld sp,(Stack)
 278+ 922B C9           	ret
 279+ 922C
 280+ 922C ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9230 FD F9        	ld sp,iy
 282+ 9232 06 08            ld b,8
 283+ 9234 D1           1 pop de
 284+ 9235 7B           	ld a,e
 285+ 9236 AE           	xor (hl)
 286+ 9237 77           	ld (hl),a
 287+ 9238 23           	inc hl
 288+ 9239 7A           	ld a,d
 289+ 923A AE           	xor (hl)
 290+ 923B 77           	ld (hl),a
 291+ 923C 2B           	dec hl
 292+ 923D 24             	inc h
 293+ 923E 7C               ld a,h
 294+ 923F E6 07            and 7
 295+ 9241 20 0A            jr nz,2F
 296+ 9243 7D               ld a,l
 297+ 9244 C6 20            add a,$20
 298+ 9246 6F               ld l,a
 299+ 9247 38 04            jr c,2F
 300+ 9249 7C               ld a,h
 301+ 924A D6 08            sub 8
 302+ 924C 67               ld h,a
 303+ 924D 7C           2 ld a,h
 304+ 924E FE 58            cp $58
 305+ 9250 28 21            jr z,4F
 306+ 9252 D1               pop de
 307+ 9253 7A           	ld a,d
 308+ 9254 AE           	xor (hl)
 309+ 9255 77           	ld (hl),a
 310+ 9256 23           	inc hl
 311+ 9257 D1               pop de
 312+ 9258 7B           	ld a,e
 313+ 9259 AE           	xor (hl)
 314+ 925A 77           	ld (hl),a
 315+ 925B 2B           	dec hl
 316+ 925C 24           	inc h
 317+ 925D 7C               ld a,h
 318+ 925E E6 07            and 7
 319+ 9260 20 0A            jr nz,3F
 320+ 9262 7D               ld a,l
 321+ 9263 C6 20            add a,$20
 322+ 9265 6F               ld l,a
 323+ 9266 38 04            jr c,3F
 324+ 9268 7C               ld a,h
 325+ 9269 D6 08            sub 8
 326+ 926B 67               ld h,a
 327+ 926C 7C           3 ld a,h
 328+ 926D FE 58            cp $58
 329+ 926F 28 02            jr z,4F
 330+ 9271 10 C1            djnz 1B
 331+ 9273 ED 7B DF 85  4 ld sp,(Stack)
 332+ 9277 C9           	ret
 333+ 9278
 334+ 9278 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 927C FD F9        	ld sp,iy
 336+ 927E 06 08            ld b,8
 337+ 9280 D1           1 pop de
 338+ 9281 7B           	ld a,e
 339+ 9282 AE           	xor (hl)
 340+ 9283 77           	ld (hl),a
 341+ 9284 24            	inc h
 342+ 9285 7C               ld a,h
 343+ 9286 E6 07            and 7
 344+ 9288 20 0A            jr nz,2F
 345+ 928A 7D               ld a,l
 346+ 928B C6 20            add a,$20
 347+ 928D 6F               ld l,a
 348+ 928E 38 04            jr c,2F
 349+ 9290 7C               ld a,h
 350+ 9291 D6 08            sub 8
 351+ 9293 67               ld h,a
 352+ 9294 7C           2 ld a,h
 353+ 9295 FE 58            cp $58
 354+ 9297 28 1C            jr z,4F
 355+ 9299 D1               pop de
 356+ 929A 7A           	ld a,d
 357+ 929B AE           	xor (hl)
 358+ 929C 77           	ld (hl),a
 359+ 929D 24           	inc h
 360+ 929E 7C               ld a,h
 361+ 929F E6 07            and 7
 362+ 92A1 20 0A            jr nz,3F
 363+ 92A3 7D               ld a,l
 364+ 92A4 C6 20            add a,$20
 365+ 92A6 6F               ld l,a
 366+ 92A7 38 04            jr c,3F
 367+ 92A9 7C               ld a,h
 368+ 92AA D6 08            sub 8
 369+ 92AC 67               ld h,a
 370+ 92AD 7C           3 ld a,h
 371+ 92AE FE 58            cp $58
 372+ 92B0 28 03            jr z,4F
 373+ 92B2 D1               pop de
 374+ 92B3 10 CB            djnz 1B
 375+ 92B5 ED 7B DF 85  4 ld sp,(Stack)
 376+ 92B9 C9           	ret
 377+ 92BA
 378+ 92BA              ; ---------------------------------------------------
 379+ 92BA              ;
 380+ 92BA              ;   27/02/23
 381+ 92BA              ;
 382+ 92BA              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 92BA              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 92BA              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 92BA
 386+ 92BA ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 92BE FD F9            ld sp,iy
 388+ 92C0 06 02            ld b,2
 389+ 92C2 D1           1 pop de
 390+ 92C3 7B               ld a,e
 391+ 92C4 AE               xor (hl)
 392+ 92C5 77               ld (hl),a
 393+ 92C6 23               inc hl
 394+ 92C7 7A               ld a,d
 395+ 92C8 AE               xor (hl)
 396+ 92C9 77               ld (hl),a
 397+ 92CA 2B               dec hl
 398+ 92CB
 399+ 92CB 24               inc h
 400+ 92CC 7C               ld a,h
 401+ 92CD E6 07            and 7
 402+ 92CF 20 0A            jr nz,2F
 403+ 92D1 7D               ld a,l
 404+ 92D2 C6 20            add a,$20
 405+ 92D4 6F               ld l,a
 406+ 92D5 38 04            jr c,2F
 407+ 92D7 7C               ld a,h
 408+ 92D8 D6 08            sub 8
 409+ 92DA 67               ld h,a
 410+ 92DB 7C           2 ld a,h
 411+ 92DC FE 58            cp $58
 412+ 92DE 28 02            jr z,3F
 413+ 92E0
 414+ 92E0 10 E0            djnz 1B
 415+ 92E2 ED 7B DF 85  3 ld sp,(Stack)
 416+ 92E6 C9               ret
 417+ 92E7
# file closed: Rutinas_de_impresion_sprites.asm
 987  92E7              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 92E7              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 92E7              ;
   3+ 92E7              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 92E7              ;
   5+ 92E7              ; *****************************************************************************************************************************************************************************************
   6+ 92E7              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 92E7
   8+ 92E7 7C           calcula_tercio ld a,h
   9+ 92E8 E6 18        	and $18
  10+ 92EA CB 2F        	sra a
  11+ 92EC CB 2F        	sra a
  12+ 92EE CB 2F        	sra a
  13+ 92F0 C9           	ret
  14+ 92F1
# file closed: calcula_tercio.asm
 988  92F1              	include "Cls.asm"
# file opened: Cls.asm
   1+ 92F1              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 92F1              ;
   3+ 92F1              ;
   4+ 92F1              ;	CLS.
   5+ 92F1              ;
   6+ 92F1              ;	Limpia la pantalla y define sus atributos.
   7+ 92F1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 92F1              ;
   9+ 92F1              ;	COLORES: 0 ..... NEGRO
  10+ 92F1              ;    		 1 ..... AZUL
  11+ 92F1              ; 			 2 ..... ROJO
  12+ 92F1              ;			 3 ..... MAGENTA
  13+ 92F1              ; 			 4 ..... VERDE
  14+ 92F1              ; 			 5 ..... CIAN
  15+ 92F1              ;			 6 ..... AMARILLO
  16+ 92F1              ; 			 7 ..... BLANCO
  17+ 92F1              ;
  18+ 92F1              ;	INPUT: A contiene los atributos de pantalla.
  19+ 92F1              ;
  20+ 92F1              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 92F1
  22+ 92F1
  23+ 92F1 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 92F4 11 01 40     	LD DE,$4001
  25+ 92F7 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 92FA 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 92FC ED B0        	LDIR
  28+ 92FE 01 FF 02     	LD BC,767
  29+ 9301 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9302 ED B0        	LDIR
  31+ 9304 C9           	ret
  32+ 9305
# file closed: Cls.asm
 989  9305              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9305              ; ******************************************************************************************************************************************************************************************
   2+ 9305              ;
   3+ 9305              ;   22/01/23
   4+ 9305              ;
   5+ 9305              ;	Mov_down
   6+ 9305              ;
   7+ 9305              ; 	Mueve el Sprite X px hacia abajo.
   8+ 9305              ;
   9+ 9305              ;
  10+ 9305 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9308 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 930A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 930A              ; 																	; _ en el caso de que no lo haya.
  14+ 930A 3A B3 85     	ld a,(Vel_down)
  15+ 930D 47           	ld b,a
  16+ 930E 2A 9D 85         ld hl,(Posicion_actual)
  17+ 9311 CD E7 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 9314 E6 02        	and 2
  19+ 9316 28 0F        	jr z,1F
  20+ 9318
  21+ 9318              ; Nos encontramos en el último tercio de pantalla.
  22+ 9318              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9318
  24+ 9318 7C           	ld a,h
  25+ 9319 FE 57        	cp $57
  26+ 931B 20 0A        	jr nz,1F
  27+ 931D 7D           	ld a,l
  28+ 931E C6 20        	add $20
  29+ 9320 30 05        	jr nc,1F
  30+ 9322
  31+ 9322              ; ------------------------------
  32+ 9322 CD FD 95     	call Reaparece_arriba
  33+ 9325              ;	call Reinicio
  34+ 9325              ; ------------------------------
  35+ 9325
  36+ 9325 18 08        	jr 3F
  37+ 9327 CD 27 90     1 call NextScan
  38+ 932A 22 9D 85     	ld (Posicion_actual),hl
  39+ 932D 10 E2            djnz 2B
  40+ 932F CD 13 96     3 call Genera_coordenadas
  41+ 9332 C9           	ret
  42+ 9333
  43+ 9333              ; ******************************************************************************************************************************************************************************************
  44+ 9333              ;
  45+ 9333              ;   22/01/23
  46+ 9333              ;
  47+ 9333              ;	Mov_up
  48+ 9333              ;
  49+ 9333              ; 	Mueve el Sprite hacia arriba.
  50+ 9333              ;
  51+ 9333              ;
  52+ 9333 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 9336 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9338              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9338              ; 																		; _ en el caso de que no lo haya.
  56+ 9338 3A B2 85     	ld a,(Vel_up)
  57+ 933B 47           	ld b,a
  58+ 933C 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 933F CD E7 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 9342 A7           	and a
  61+ 9343 20 10        	jr nz,1F
  62+ 9345
  63+ 9345              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 9345              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 9345
  66+ 9345 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 9346 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9348 20 0B            jr nz,1F
  69+ 934A 7D               ld a,l
  70+ 934B D6 20            sub $20
  71+ 934D 30 06            jr nc,1F
  72+ 934F 25               dec h
  73+ 9350
  74+ 9350              ; -----------------------------
  75+ 9350 CD ED 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 9353              ;	call Reinicio
  77+ 9353              ; -----------------------------
  78+ 9353
  79+ 9353 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 9355 CD 36 90     1 call PreviousScan
  81+ 9358 22 9D 85     	ld (Posicion_actual),hl
  82+ 935B 10 E2            djnz 3B
  83+ 935D CD 13 96     2 call Genera_coordenadas
  84+ 9360 C9           	ret
  85+ 9361
  86+ 9361              ; ******************************************************************************************************************************************************************************************
  87+ 9361              ;
  88+ 9361              ;	19/10/22
  89+ 9361              ;
  90+ 9361              ;	Mov_right.
  91+ 9361              ;
  92+ 9361              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 9361              ;
  94+ 9361
  95+ 9361 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 9364 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9366              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9366              ; 																	; _ en el caso de que no lo haya.
  99+ 9366 3A C9 85     	ld a,(Ctrl_0)
 100+ 9369 CB 77        	bit 6,a
 101+ 936B 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 936D
 103+ 936D CD 9B 95     	call Stop_Amadeus_right
 104+ 9370 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 9371 18 4D        	jr 8F
 106+ 9373
 107+ 9373 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 9376 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9378 20 46        	jr nz,8F
 110+ 937A
 111+ 937A 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 937D A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 937E 28 40        	jr z,8F
 114+ 9380
 115+ 9380              ; ---------- ---------- ----------
 116+ 9380              ;
 117+ 9380              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9380
 119+ 9380 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 9383 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 9385 28 11        	jr z,1F
 122+ 9387 38 06        	jr c,6F
 123+ 9389 FE 04        	cp 4
 124+ 938B 28 14        	jr z,7F
 125+ 938D 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 938F
 127+ 938F              ; ---------- ---------- ----------
 128+ 938F              ;
 129+ 938F              ; Perfiles de velocidad
 130+ 938F              ;
 131+ 938F
 132+ 938F 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 9392 FE FE        	cp $fe
 134+ 9394 20 2A        	jr nz,8F
 135+ 9396 18 10        	jr 3F
 136+ 9398 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 939B FE FD        	cp $fd
 138+ 939D 20 21        	jr nz,8F
 139+ 939F 18 07        	jr 3F
 140+ 93A1 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 93A4 FE FB        	cp $fb
 142+ 93A6 20 18        	jr nz,8F
 143+ 93A8
 144+ 93A8              ; ---------- ---------- ----------
 145+ 93A8
 146+ 93A8              3
 147+ 93A8 CD DB 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 93AB              ;	call Reinicio
 149+ 93AB
 150+ 93AB              ; ---------- ---------- ----------
 151+ 93AB              ;
 152+ 93AB              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 93AB
 154+ 93AB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 93AD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 93AE CD C7 93     	call DESPLZ_DER
 157+ 93B1 C1           	pop bc
 158+ 93B2 10 F9        	djnz 5B
 159+ 93B4 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 93B7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 93B8 22 9D 85     	ld (Posicion_actual),hl
 162+ 93BB CD 13 96     	call Genera_coordenadas
 163+ 93BE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 93C0
 165+ 93C0              ; ---------- ---------- ----------
 166+ 93C0
 167+ 93C0 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 93C3 CD C7 93     	call DESPLZ_DER
 169+ 93C6 C9           2 ret
 170+ 93C7
 171+ 93C7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 93C7              ;
 173+ 93C7              ;	22/9/22
 174+ 93C7              ;
 175+ 93C7
 176+ 93C7 CD D6 93     DESPLZ_DER call Desplaza_derecha
 177+ 93CA CD 22 94         call modifica_parametros_1er_DESPLZ_2
 178+ 93CD CD 4B 94         call Ciclo_completo
 179+ 93D0 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 93D3 CB FE        	set 7,(hl)
 181+ 93D5 C9           	ret
 182+ 93D6
 183+ 93D6              ; ******************************************************************************************************************************************************************************************
 184+ 93D6              ;	15/02/23
 185+ 93D6              ;
 186+ 93D6
 187+ 93D6 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 93D9 47           	ld b,a
 189+ 93DA 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 93DD 23           1 inc hl
 191+ 93DE 23           	inc hl
 192+ 93DF 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 93E1 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 93E4 CD E8 87     	call Extrae_address
 195+ 93E7 22 9F 85     	ld (Puntero_objeto),hl
 196+ 93EA
 197+ 93EA              ; Modifica (Puntero_DESPLZ_izq).
 198+ 93EA
 199+ 93EA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 93EA              ; Cuántos movimientos hemos hecho ??
 201+ 93EA              ; DE contiene (Puntero_DESPLZ_der).
 202+ 93EA
 203+ 93EA 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 93ED EB           	ex de,hl
 205+ 93EE A7           	and a
 206+ 93EF ED 52        	sbc hl,de
 207+ 93F1 CB 3D        	srl l
 208+ 93F3 3E 08        6 ld a,8
 209+ 93F5 95           	sub l
 210+ 93F6 30 1E        	jr nc,3F
 211+ 93F8
 212+ 93F8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 93F8              ; B="0".
 214+ 93F8
 215+ 93F8 04           4 inc b
 216+ 93F9 3C           	inc a
 217+ 93FA 20 FC        	jr nz,4B
 218+ 93FC 78           	ld a,b
 219+ 93FD 08           	ex af,af
 220+ 93FE 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 9401 23           5 inc hl
 222+ 9402 23           	inc hl
 223+ 9403 10 FC        	djnz 5B
 224+ 9405 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9408 CD E8 87     	call Extrae_address
 226+ 940B 22 9F 85     	ld (Puntero_objeto),hl
 227+ 940E
 228+ 940E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 940E              ; _(Posicion_actual).
 230+ 940E
 231+ 940E 21 9D 85     	ld hl,Posicion_actual
 232+ 9411 34           	inc (hl)
 233+ 9412 08               ex af,af
 234+ 9413 6F           	ld l,a
 235+ 9414 18 DD        	jr 6B
 236+ 9416
 237+ 9416              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 9416
 239+ 9416 47           3 ld b,a
 240+ 9417 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 941A 23           2 inc hl
 242+ 941B 23           	inc hl
 243+ 941C 10 FC        	djnz 2B
 244+ 941E 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 9421 C9           8 ret
 246+ 9422
 247+ 9422              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 9422              ;
 249+ 9422              ;	24/7/22
 250+ 9422              ;
 251+ 9422              ;	modifica_parametros_1er_DESPLZ_2
 252+ 9422              ;
 253+ 9422              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 9422              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 9422              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 9422
 257+ 9422 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 9425 A7           	and a
 259+ 9426 20 1F        	jr nz,1F
 260+ 9428 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 942A 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 942D
 263+ 942D 21 9C 85     	ld hl,Columns
 264+ 9430 34           	inc (hl)
 265+ 9431 3A AF 85     	ld a,(Cuad_objeto)
 266+ 9434 E6 01        	and 1
 267+ 9436 28 0F        	jr z,1F
 268+ 9438 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 943B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 943C 22 9D 85     	ld (Posicion_actual),hl
 271+ 943F CD 13 96     	call Genera_coordenadas
 272+ 9442 CD A7 95     	call Inc_CTRL_DESPLZ
 273+ 9445 18 03        	jr 2F
 274+ 9447 CD A7 95     1 call Inc_CTRL_DESPLZ
 275+ 944A C9           2 ret
 276+ 944B
 277+ 944B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 944B              ;
 279+ 944B              ;	24/7/22
 280+ 944B              ;
 281+ 944B              ;	Ciclo_completo.
 282+ 944B              ;
 283+ 944B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 944B              ;
 285+ 944B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 944B              ; 	Decrementamos (Columns).
 287+ 944B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 944B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 944B
 290+ 944B
 291+ 944B 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 944E FE FF        	cp $ff
 293+ 9450 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 9452 E6 F0        	and $f0
 295+ 9454 20 28        	jr nz,3F
 296+ 9456
 297+ 9456              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9456
 299+ 9456 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 9459 47           	ld b,a
 301+ 945A 3E F8        	ld a,$f8
 302+ 945C 80           	add b
 303+ 945D 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 9460 18 1C        	jr 3F
 305+ 9462 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 9465 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 9466 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9467 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 946A 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 946D E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 946F 20 0A        	jr nz,2F
 312+ 9471 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 9474 23           	inc hl
 314+ 9475 22 9D 85     	ld (Posicion_actual),hl
 315+ 9478 CD 13 96     	call Genera_coordenadas
 316+ 947B
 317+ 947B              ; Inicia el puntero de Sprite.
 318+ 947B
 319+ 947B CD FF 87     2 call Inicia_puntero_objeto_der
 320+ 947E C9           3 ret
 321+ 947F
 322+ 947F              ; ******************************************************************************************************************************************************************************************
 323+ 947F              ;
 324+ 947F              ;	15/02/23
 325+ 947F              ;
 326+ 947F              ;	Mov_left.
 327+ 947F              ;
 328+ 947F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 947F              ;
 330+ 947F              Mov_left
 331+ 947F
 332+ 947F 21 C9 85     	ld hl,Ctrl_0
 333+ 9482 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 9484              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 9484              ; 																	; _ en el caso de que no lo haya.
 336+ 9484 3A C9 85     	ld a,(Ctrl_0)
 337+ 9487 CB 77        	bit 6,a
 338+ 9489 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 948B
 340+ 948B CD A1 95     	call Stop_Amadeus_left
 341+ 948E C8           	ret z
 342+ 948F 20 4A        	jr nz,8F
 343+ 9491
 344+ 9491 3A A1 85     11 ld a,(Coordenada_X)
 345+ 9494 A7           	and a
 346+ 9495 20 44        	jr nz,8F
 347+ 9497
 348+ 9497 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 949A A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 949B 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 949D
 352+ 949D              ; ---------- ---------- ----------
 353+ 949D
 354+ 949D 3A B0 85     	ld a,(Vel_left)
 355+ 94A0 FE 02        	cp 2
 356+ 94A2 28 0F        	jr z,1F
 357+ 94A4 38 04        	jr c,6F
 358+ 94A6 FE 04        	cp 4
 359+ 94A8 28 12        	jr z,7F
 360+ 94AA
 361+ 94AA              ; ---------- ---------- ----------
 362+ 94AA
 363+ 94AA 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 94AD FE F8        	cp $f8
 365+ 94AF 20 2A        	jr nz,8F
 366+ 94B1 18 10        	jr 4F
 367+ 94B3 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 94B6 FE F9        	cp $f9
 369+ 94B8 20 21        	jr nz,8F
 370+ 94BA 18 07        	jr 4F
 371+ 94BC 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 94BF FE FB        	cp $fb
 373+ 94C1 20 18        	jr nz,8F
 374+ 94C3
 375+ 94C3              ; ---------- ---------- ----------
 376+ 94C3
 377+ 94C3              4
 378+ 94C3 CD C9 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 94C6              ;	call Reinicio
 380+ 94C6
 381+ 94C6              ; ---------- ---------- ----------
 382+ 94C6
 383+ 94C6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 94C8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 94C9
 386+ 94C9              ;	ld hl,(Indice_Sprite_izq)
 387+ 94C9              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 94C9
 389+ 94C9 CD E2 94     	call DESPLZ_IZQ
 390+ 94CC C1           	pop bc
 391+ 94CD 10 F9        	djnz 5B
 392+ 94CF 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 94D2 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 94D3 22 9D 85     	ld (Posicion_actual),hl
 395+ 94D6 CD 13 96     	call Genera_coordenadas
 396+ 94D9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 94DB
 398+ 94DB              ; ---------- ---------- ----------
 399+ 94DB
 400+ 94DB              ; Movemos, no hay recolocación.
 401+ 94DB
 402+ 94DB 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 94DE CD E2 94     	call DESPLZ_IZQ
 404+ 94E1 C9           2 ret
 405+ 94E2
 406+ 94E2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 94E2              ;
 408+ 94E2              ;	22/9/22
 409+ 94E2
 410+ 94E2              DESPLZ_IZQ
 411+ 94E2
 412+ 94E2 CD F1 94     	call Desplaza_izquierda
 413+ 94E5 CD 3D 95         call modifica_parametros_1er_DESPLZ
 414+ 94E8 CD 65 95     	call Ciclo_completo_2
 415+ 94EB 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 94EE CB BE        	res 7,(hl)
 417+ 94F0 C9           	ret
 418+ 94F1
 419+ 94F1              Desplaza_izquierda
 420+ 94F1
 421+ 94F1 3A B0 85     	ld a,(Vel_left)
 422+ 94F4 47           	ld b,a
 423+ 94F5 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 94F8 23           1 inc hl
 425+ 94F9 23           	inc hl
 426+ 94FA 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 94FC 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 94FF CD E8 87     	call Extrae_address
 429+ 9502 22 9F 85     	ld (Puntero_objeto),hl
 430+ 9505
 431+ 9505              ; Modifica (Puntero_DESPLZ_der).
 432+ 9505
 433+ 9505              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 9505              ; Cuántos movimientos hemos hecho ??
 435+ 9505              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 9505
 437+ 9505 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9508 EB           	ex de,hl
 439+ 9509 A7           	and a
 440+ 950A ED 52        	sbc hl,de
 441+ 950C CB 3D        	srl l
 442+ 950E 3E 08        6 ld a,8
 443+ 9510 95           	sub l
 444+ 9511 30 1E        	jr nc,3F
 445+ 9513
 446+ 9513              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 9513              ; B="0".
 448+ 9513
 449+ 9513 04           4 inc b
 450+ 9514 3C           	inc a
 451+ 9515 20 FC        	jr nz,4B
 452+ 9517 78           	ld a,b
 453+ 9518 08           	ex af,af
 454+ 9519 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 951C 23           5 inc hl
 456+ 951D 23           	inc hl
 457+ 951E 10 FC        	djnz 5B
 458+ 9520 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 9523 CD E8 87     	call Extrae_address
 460+ 9526 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9529
 462+ 9529              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9529              ; _(Posicion_actual).
 464+ 9529
 465+ 9529 21 9D 85     	ld hl,Posicion_actual
 466+ 952C 35           	dec (hl)
 467+ 952D 08           	ex af,af
 468+ 952E 6F           	ld l,a
 469+ 952F 18 DD        	jr 6B
 470+ 9531
 471+ 9531              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 9531
 473+ 9531 47           3 ld b,a
 474+ 9532 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 9535 23           2 inc hl
 476+ 9536 23           	inc hl
 477+ 9537 10 FC        	djnz 2B
 478+ 9539 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 953C C9           8 ret
 480+ 953D
 481+ 953D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 953D              ;
 483+ 953D              ;	modifica_parametros_1er_DESPLZ
 484+ 953D              ;
 485+ 953D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 953D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 953D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 953D
 489+ 953D 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 9540 A7           	and a
 491+ 9541 20 1E        	jr nz,1F
 492+ 9543 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 9544 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9547 21 9C 85     	ld hl,Columns
 495+ 954A 34           	inc (hl)
 496+ 954B 3A AF 85     	ld a,(Cuad_objeto)
 497+ 954E E6 01        	and 1
 498+ 9550 20 0F        	jr nz,1F
 499+ 9552 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 9555 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9556 22 9D 85     	ld (Posicion_actual),hl
 502+ 9559 CD 13 96     	call Genera_coordenadas
 503+ 955C CD B8 95     	call Dec_CTRL_DESPLZ
 504+ 955F 18 03        	jr 2F
 505+ 9561 CD B8 95     1 call Dec_CTRL_DESPLZ
 506+ 9564 C9           2 ret
 507+ 9565
 508+ 9565              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 9565
 510+ 9565 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9568 FE F7        	cp $f7
 512+ 956A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 956C 30 2C        	jr nc,3F
 514+ 956E
 515+ 956E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 956E
 517+ 956E 06 00        	ld b,0
 518+ 9570 04           4 inc b
 519+ 9571 3C           	inc a
 520+ 9572 FE F7        	cp $f7
 521+ 9574 20 FA        	jr nz,4B
 522+ 9576 3E FF        	ld a,$ff
 523+ 9578 90           	sub b
 524+ 9579 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 957C 18 1C        	jr 3F
 526+ 957E
 527+ 957E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 957E
 529+ 957E 21 9C 85     1 ld hl,Columns
 530+ 9581 35           	dec (hl)
 531+ 9582 AF           	xor a
 532+ 9583 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 9586 3A AF 85     	ld a,(Cuad_objeto)
 534+ 9589 E6 01        	and 1
 535+ 958B 28 0A        	jr z,2F
 536+ 958D 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9590 2B           	dec hl
 538+ 9591 22 9D 85     	ld (Posicion_actual),hl
 539+ 9594 CD 13 96     	call Genera_coordenadas
 540+ 9597
 541+ 9597              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 9597
 543+ 9597 CD 12 88     2 call Inicia_puntero_objeto_izq
 544+ 959A C9           3 ret
 545+ 959B
 546+ 959B              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 959B              ;
 548+ 959B              ;	19/10/22
 549+ 959B              ;
 550+ 959B              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 959B              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 959B
 553+ 959B 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 959E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 95A0 C9           	ret
 556+ 95A1
 557+ 95A1              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 95A1              ;
 559+ 95A1              ;	19/10/22
 560+ 95A1              ;
 561+ 95A1              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 95A1              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 95A1
 564+ 95A1 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 95A4 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 95A6 C9           	ret
 567+ 95A7
 568+ 95A7              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 95A7              ;
 570+ 95A7              ;	24/7/22
 571+ 95A7              ;
 572+ 95A7              ;	Inc_CTRL_DESPLZ
 573+ 95A7              ;
 574+ 95A7              ;
 575+ 95A7              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 95A7
 577+ 95A7 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 95AA 3A B1 85     	ld a,(Vel_right)
 579+ 95AD A7           	and a
 580+ 95AE 28 06        	jr z,1F
 581+ 95B0 47           	ld b,a
 582+ 95B1 34           3 inc (hl)
 583+ 95B2 10 FD        	djnz 3B
 584+ 95B4 18 01        	jr 2F
 585+ 95B6 34           1 inc (hl)
 586+ 95B7 C9           2 ret
 587+ 95B8
 588+ 95B8              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 95B8              ;
 590+ 95B8              ;	5/2/23
 591+ 95B8              ;
 592+ 95B8              ;	Dec_CTRL_DESPLZ
 593+ 95B8              ;
 594+ 95B8              ;
 595+ 95B8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 95B8
 597+ 95B8 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 95BB 3A B0 85     	ld a,(Vel_left)
 599+ 95BE A7           	and a
 600+ 95BF 28 06        	jr z,1F
 601+ 95C1 47           	ld b,a
 602+ 95C2 35           3 dec (hl)
 603+ 95C3 10 FD        	djnz 3B
 604+ 95C5 18 01        	jr 2F
 605+ 95C7 35           1 dec (hl)
 606+ 95C8 C9           2 ret
 607+ 95C9
 608+ 95C9              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 95C9
 610+ 95C9 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 95CC 01 1F 00     	ld bc,31
 612+ 95CF A7           	and a
 613+ 95D0 ED 4A        	adc hl,bc
 614+ 95D2 22 9D 85     	ld (Posicion_actual),hl
 615+ 95D5 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 95D8 CB C6        	set 0,(hl)
 617+ 95DA C9           	ret
 618+ 95DB
 619+ 95DB              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 95DB
 621+ 95DB 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 95DE 01 1F 00     	ld bc,31
 623+ 95E1 A7           	and a
 624+ 95E2 ED 42        	sbc hl,bc
 625+ 95E4 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 95E7 21 C9 85     	ld hl,Ctrl_0
 627+ 95EA CB CE        	set 1,(hl)
 628+ 95EC C9           	ret
 629+ 95ED
 630+ 95ED              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 95ED
 632+ 95ED 24           Reaparece_abajo inc h
 633+ 95EE 01 E0 17     	ld bc,$17e0
 634+ 95F1 A7           	and a
 635+ 95F2 ED 4A        	adc hl,bc
 636+ 95F4 22 9D 85     	ld (Posicion_actual),hl
 637+ 95F7 21 C9 85     	ld hl,Ctrl_0
 638+ 95FA CB D6        	set 2,(hl)
 639+ 95FC C9           	ret
 640+ 95FD
 641+ 95FD              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 95FD
 643+ 95FD 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9600 A7           	and a
 645+ 9601 ED 42        	sbc hl,bc
 646+ 9603 22 9D 85     	ld (Posicion_actual),hl
 647+ 9606 21 C9 85     	ld hl,Ctrl_0
 648+ 9609 CB DE        	set 3,(hl)
 649+ 960B C9           	ret
 650+ 960C
 651+ 960C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 960C
 653+ 960C 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 960F 22 9D 85     	ld (Posicion_actual),hl
 655+ 9612 C9           	ret
# file closed: Direcciones.asm
 990  9613              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9613              ; ------------------------------------------------------------------------
   2+ 9613              ;
   3+ 9613              ;	02/04/23
   4+ 9613              ;
   5+ 9613              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9613              ;	Fila superior "0", Columna izquierda "0".
   7+ 9613              ;
   8+ 9613              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9613              ;
  10+ 9613              ;	Modifica: A,BC y DE.
  11+ 9613
  12+ 9613 C5           Genera_coordenadas push bc
  13+ 9614 E5           	push hl
  14+ 9615 D5           	push de
  15+ 9616
  16+ 9616 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9619
  18+ 9619 7D           	ld a,l
  19+ 961A E6 1F        	and $1f
  20+ 961C 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 961F
  22+ 961F CD E7 92     	call calcula_tercio
  23+ 9622 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9623
  25+ 9623 1E 00        	ld e,0
  26+ 9625 7D           	ld a,l
  27+ 9626 E6 E0        	and $e0
  28+ 9628 28 01        	jr z,1F
  29+ 962A 04           	inc b
  30+ 962B
  31+ 962B 04           1 inc b
  32+ 962C 05           	dec b
  33+ 962D 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 962F              ;														; _ , salimos.
  35+ 962F 1C           3 inc e
  36+ 9630 D6 20        	sub 32
  37+ 9632 20 FB        	jr nz,3B
  38+ 9634 10 F5        	djnz 1B
  39+ 9636
  40+ 9636 7B           2 ld a,e
  41+ 9637 32 A2 85     	ld (Coordenada_y),a
  42+ 963A
  43+ 963A D1           	pop de
  44+ 963B E1           	pop hl
  45+ 963C C1           	pop bc
  46+ 963D
  47+ 963D C9           	ret
  48+ 963E
  49+ 963E              ; ------------------------------------------------------------------------
  50+ 963E              ;	28/03/23
  51+ 963E              ;
  52+ 963E              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 963E              ;	Fila superior "0", Columna izquierda "0".
  54+ 963E              ;
  55+ 963E              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 963E              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 963E              ;
  58+ 963E              ;		DE="$120d"
  59+ 963E              ;
  60+ 963E              ;		D, (Coordenada_X), Columnas, $12
  61+ 963E              ;		E, (Coordenada_y), Filas, $0d
  62+ 963E              ;
  63+ 963E              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 963E
  65+ 963E              ;	Modifica: A,BC y DE.
  66+ 963E
  67+ 963E
  68+ 963E              Genera_coordenadas_disparo
  69+ 963E
  70+ 963E              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 963E
  72+ 963E 7D           	ld a,l
  73+ 963F E6 1F        	and $1f
  74+ 9641 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9642 CD E7 92     	call calcula_tercio
  76+ 9645 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9646 1E 00        	ld e,0
  78+ 9648 7D           	ld a,l
  79+ 9649 E6 E0        	and $e0
  80+ 964B 28 01        	jr z,1F
  81+ 964D 04           	inc b
  82+ 964E 1C           1 inc e
  83+ 964F D6 20        	sub 32
  84+ 9651 20 FB        	jr nz,1B
  85+ 9653 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9655 C9           	ret
  87+ 9656
# file closed: Genera_coordenadas.asm
 991  9656              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9656
   2+ 9656
   3+ 9656              ;   11/8/22
   4+ 9656              ;
   5+ 9656              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9656              ;
   7+ 9656              ;   Mov_obj.asm
   8+ 9656              ;
   9+ 9656              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9656              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9656              ;
  12+ 9656              ;   Codificación:
  13+ 9656              ;
  14+ 9656              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9656
  16+ 9656              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9656
  18+ 9656 02 40 00     Arriba db 2,%01000000,0
  19+ 9659 02 80 00     Abajo db 2,%10000000,0
  20+ 965C 02 20 00     Derecha db 2,%00100000,0
  21+ 965F 02 10 00     Izquierda db 2,%00010000,0
  22+ 9662 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9666 60 42 60 40
  22+ 966A 63
  23+ 966B 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 966F 22 A3 80 A0
  24+ 9673 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9677 84 A0 83 A0
  25+ 967B 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 967F 80 A3 22 A0
  26+ 9683 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9687 40 60 42 60
  27+ 968B 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 968F
  29+ 968F 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9693 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9697 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 969B 84 00
  32+ 969D 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 96A1 84 00
  33+ 96A3 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 96A7 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 96AB 1F 1F 1F 1F
  35+ 96AF 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 96B3 1F 1F 1F 1F
  35+ 96B7 1F
  36+ 96B8 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 96BC 2F 2F 2F 2F
  36+ 96C0 2F 2F
  37+ 96C2 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 96C6 2F 2F 00
  38+ 96C9
  39+ 96C9              ; ----- ----- ----- ----- -----
  40+ 96C9
  41+ 96C9 A7 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 96CB A3 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 96CD 5F 96        Indice_mov_Izquierda defw Izquierda
  44+ 96CF 5C 96        Indice_mov_Derecha defw Derecha
  45+ 96D1 59 96        Indice_mov_Abajo defw Abajo
  46+ 96D3 56 96        Indice_mov_Arriba defw Arriba
  47+ 96D5 93 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 96D7 97 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 96D9 8F 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 96DB 9D 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 96DD 62 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 96DF              ; ----- ----- ----- ----- -----
  53+ 96DF
  54+ 96DF 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 96E2 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 96E3 28 02            jr z,1F
  57+ 96E5 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 96E7 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 96EA C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 96EC 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 96EF              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 96EF 2A CD 85         ld hl,(Puntero_mov)
  63+ 96F2 7E               ld a,(hl)
  64+ 96F3 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 96F6 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 96F7 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 96FA
  68+ 96FA 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 96FD A7               and a
  70+ 96FE 20 0C            jr nz,12F
  71+ 9700 2A CD 85         ld hl,(Puntero_mov)
  72+ 9703 7E               ld a,(hl)
  73+ 9704 A7               and a
  74+ 9705 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9707 E6 0F            and $0f
  76+ 9709 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 970C              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 970C 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 970F CB 7E            bit 7,(hl)
  80+ 9711 28 03            jr z,2F
  81+ 9713 CD 05 93         call Mov_down
  82+ 9716 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9719 CB 76            bit 6,(hl)
  84+ 971B 28 03            jr z,3F
  85+ 971D CD 33 93         call Mov_up
  86+ 9720 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 9723 CB 6E            bit 5,(hl)
  88+ 9725 28 03            jr z,4F
  89+ 9727 CD 61 93         call Mov_right
  90+ 972A 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 972D CB 66            bit 4,(hl)
  92+ 972F 28 03            jr z,5F
  93+ 9731 CD 7F 94         call Mov_left
  94+ 9734
  95+ 9734              ; ---------- --------- --------- ---------- ----------
  96+ 9734
  97+ 9734 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9737 A7               and a
  99+ 9738 28 07            jr z,6F
 100+ 973A 3D               dec a
 101+ 973B 32 D1 85         ld (Repetimos_db),a
 102+ 973E 28 01            jr z,6f
 103+ 9740 C9           11 ret
 104+ 9741 21 CF 85     6 ld hl,Contador_db_mov
 105+ 9744 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 9745 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9748 23               inc hl
 108+ 9749 22 CD 85         ld (Puntero_mov),hl
 109+ 974C 18 F2            jr 11B
 110+ 974E 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 9751 3A D0 85         ld a,(Incrementa_puntero)
 112+ 9754 47               ld b,a
 113+ 9755 23           8 inc hl
 114+ 9756 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9758 5E               ld e,(hl)
 116+ 9759 23               inc hl
 117+ 975A 56               ld d,(hl)
 118+ 975B EB               ex de,hl
 119+ 975C 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 975F 18 DF            jr 11B
 121+ 9761
 122+ 9761              ; ---------- --------- --------- ---------- ----------
 123+ 9761              ;
 124+ 9761              ;   11/8/22
 125+ 9761              ;
 126+ 9761              ;   Prepara_Puntero_mov
 127+ 9761
 128+ 9761 E5           Prepara_Puntero_mov push hl
 129+ 9762 D5               push de
 130+ 9763 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 9766 5E               ld e,(hl)
 132+ 9767 23               inc hl
 133+ 9768 56               ld d,(hl)
 134+ 9769 EB               ex de,hl
 135+ 976A 22 CD 85         ld (Puntero_mov),hl
 136+ 976D D1               pop de
 137+ 976E E1               pop hl
 138+ 976F C9               ret
 139+ 9770
 140+ 9770              ; ---------- --------- --------- ---------- ----------
 141+ 9770              ;
 142+ 9770              ;   11/8/22
 143+ 9770              ;
 144+ 9770              ;   Reinicia_el_movimiento
 145+ 9770
 146+ 9770 CD 61 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9773 AF               xor a
 148+ 9774 32 CF 85         ld (Contador_db_mov),a
 149+ 9777 32 D0 85         ld (Incrementa_puntero),a
 150+ 977A C3 DF 96         jp Movimiento
 151+ 977D C9               ret
 152+ 977E              ; ---------- --------- --------- ---------- ----------
 153+ 977E
 154+ 977E
 155+ 977E
 156+ 977E
 157+ 977E
 158+ 977E
 159+ 977E
 160+ 977E
 161+ 977E
 162+ 977E
 163+ 977E
 164+ 977E
 165+ 977E
 166+ 977E
 167+ 977E
 168+ 977E
 169+ 977E
 170+ 977E
# file closed: Patrones_de_mov.asm
 992  977E              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 977E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 977E              ;
   3+ 977E              ;	3/1/23
   4+ 977E              ;
   5+ 977E              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 977E
   7+ 977E              ;	ADC HL,SP	LD (addr),SP
   8+ 977E              ;	ADD HL,SP	LD SP,(addr)
   9+ 977E              ;	ADD IX,SP	LD SP,nn
  10+ 977E              ; 	ADD IY,SP	LD SP,HL
  11+ 977E              ;				LD SP,IX
  12+ 977E              ;	DEC SP		LD SP,IY
  13+ 977E
  14+ 977E              ;	EX (SP),HL
  15+ 977E              ;	EX (SP),IX
  16+ 977E              ;	EX (SP),IY
  17+ 977E
  18+ 977E              ;	INC SP
  19+ 977E
  20+ 977E
  21+ 977E                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 993  7FD4
 994  7FD4              	SAVESNA "Pruebas.sna", START
 995  7FD4
 996  7FD4
 997  7FD4
# file closed: Banco_de_pruebas.asm
