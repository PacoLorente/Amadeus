# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD A1 86     	call Frame
  15  A104              ; Debugggggg
  16  A104              ;	ld a,(Ctrl_1)
  17  A104              ;	bit 3,a
  18  A104              ;	jr nz,$
  19  A104              ; Debugggggg
  20  A104 ED 4D        	reti
  21  A106
  22  A106              ; ----- ----- ----- ----- -----
  23  A106
  24  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  25  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 61 Bytes por entidad.
  96+ 8468
  97+ 8468 B3 84        	defw Entidad_1
  98+ 846A F0 84        	defw Entidad_2
  99+ 846C 2D 85        	defw Entidad_3
 100+ 846E 6A 85        	defw Entidad_4
 101+ 8470 A7 85        	defw Entidad_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480
 119+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 120+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B
 127+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 128+ 848F
 129+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 130+ 8490
 131+ 8490 00 00        	db 0,0											; Variables_de_borrado
 132+ 8492 00 00        	defw 0											;	" " " " " " "
 133+ 8494 00 00        	defw 0											;	" " " " " " "
 134+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 135+ 849A
 136+ 849A 00 00        	db 0,0											; Variables_de_pintado
 137+ 849C 00 00        	defw 0											;	" " " " " " "
 138+ 849E 00 00        	defw 0											;	" " " " " " "
 139+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 140+ 84A4
 141+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 142+ 84A7
 143+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 144+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 145+ 84AE
 146+ 84AE 00           	db 0 											; (Columnas).
 147+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 148+ 84B1 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 149+ 84B3
 150+ 84B3              ; ---------- ---------- ---------- ---------- ----------
 151+ 84B3
 152+ 84B3 02 02        Entidad_1 db 2,2									; (Filas) / (Columns).
 153+ 84B5 00 00        	defw 0											; (Posicion_actual).
 154+ 84B7 00 00        	defw 0 											; (Puntero_objeto).
 155+ 84B9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 84BC
 157+ 84BC 04           	db %00000100 									; (Attr).
 158+ 84BD
 159+ 84BD 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 160+ 84BF 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 161+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 84C3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 84C5
 164+ 84C5 81 47        	defw $4781										; (Posicion_inicio).
 165+ 84C7 01           	db 1											; (Cuad_objeto).
 166+ 84C8
 167+ 84C8 01 02 01 02  	db 1,2,1,2										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 84CC
 169+ 84CC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 84CD
 171+ 84CD 00 00        	db 0,0										    ; Variables_de_borrado
 172+ 84CF 00 00        	defw 0											;	" " " " " " "
 173+ 84D1 00 00        	defw 0											;	" " " " " " "
 174+ 84D3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 84D7
 176+ 84D7 00 00        	db 0,0											; Variables_de_pintado
 177+ 84D9 00 00        	defw 0											;	" " " " " " "
 178+ 84DB 00 00        	defw 0											;	" " " " " " "
 179+ 84DD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 84E1
 181+ 84E1 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 182+ 84E4
 183+ 84E4 87 97 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 184+ 84E8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 185+ 84EB
 186+ 84EB 00           	db 0 											; (Columnas).
 187+ 84EC 00 00        	defw 0											; (Limite_horizontal).
 188+ 84EE 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 189+ 84F0
 190+ 84F0              ; ---------- ---------- ---------- ---------- ----------
 191+ 84F0
 192+ 84F0 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 193+ 84F2 00 00        	defw 0                                          ; (Posicion_actual).
 194+ 84F4 00 00        	defw 0											; (Puntero_objeto).
 195+ 84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 196+ 84F9
 197+ 84F9 02           	db %00000010									; (Attr).
 198+ 84FA
 199+ 84FA 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 200+ 84FC 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 201+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
 202+ 8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 203+ 8502
 204+ 8502 5E 48        	defw $485e                                      ; (Posicion_inicio).
 205+ 8504 02           	db 2											; (Cuad_objeto).
 206+ 8505
 207+ 8505 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 208+ 8509
 209+ 8509 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 210+ 850A
 211+ 850A 00 00        	db 0,0											; Variables_de_borrado
 212+ 850C 00 00        	defw 0										 	;	" " " " " " "
 213+ 850E 00 00        	defw 0											;	" " " " " " "
 214+ 8510 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 215+ 8514
 216+ 8514 00 00        	db 0,0											; Variables_de_pintado
 217+ 8516 00 00        	defw 0											;	" " " " " " "
 218+ 8518 00 00        	defw 0											;	" " " " " " "
 219+ 851A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 851E
 221+ 851E 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 222+ 8521
 223+ 8521 85 97 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0	; (Puntero_indice_mov) / (Puntero_mov).
 224+ 8525 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 225+ 8528
 226+ 8528 00           	db 0 											; (Columnas).
 227+ 8529 00 00        	defw 0											; (Limite_horizontal).
 228+ 852B 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 229+ 852D
 230+ 852D              ; ---------- ---------- ---------- ---------- ----------
 231+ 852D
 232+ 852D 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 233+ 852F 00 00        	defw 0                                          ; (Posicion_actual).
 234+ 8531 00 00        	defw 0											; (Puntero_objeto).
 235+ 8533 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8536
 237+ 8536 04           	db %00000100									; (Attr).
 238+ 8537
 239+ 8537 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 240+ 8539 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 241+ 853B
 242+ 853B 00 00        	defw 0											; (Puntero_DESPLZ_der).
 243+ 853D 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 244+ 853F
 245+ 853F A1 47        	defw $47a1                                      ; (Posicion_inicio).
 246+ 8541 01           	db 1											; (Cuad_objeto).
 247+ 8542
 248+ 8542 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 249+ 8546
 250+ 8546 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 251+ 8547
 252+ 8547 00 00        	db 0,0											; Variables_de_borrado
 253+ 8549 00 00        	defw 0										 	;	" " " " " " "
 254+ 854B 00 00        	defw 0											;	" " " " " " "
 255+ 854D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 256+ 8551
 257+ 8551 00 00        	db 0,0											; Variables_de_pintado
 258+ 8553 00 00        	defw 0											;	" " " " " " "
 259+ 8555 00 00        	defw 0											;	" " " " " " "
 260+ 8557 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 261+ 855B
 262+ 855B 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 263+ 855E
 264+ 855E 79 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 265+ 8562 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 266+ 8565
 267+ 8565 00           	db 0 											; (Columnas).
 268+ 8566 00 00        	defw 0											; (Limite_horizontal).
 269+ 8568 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 270+ 856A
 271+ 856A              ; ---------- ---------- ---------- ---------- ----------
 272+ 856A
 273+ 856A 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 274+ 856C 00 00        	defw 0                                          ; (Posicion_actual).
 275+ 856E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 8570 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 8573
 278+ 8573 01           	db %00000001									; (Attr).
 279+ 8574
 280+ 8574 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 281+ 8576 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 282+ 8578
 283+ 8578 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 857A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 857C
 286+ 857C BE 47        	defw $47be                                      ; (Posicion_inicio).
 287+ 857E 00           	db 0											; (Cuad_objeto).
 288+ 857F
 289+ 857F 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 8583
 291+ 8583 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 8584
 293+ 8584 00 00        	db 0,0											; Variables_de_borrado
 294+ 8586 00 00        	defw 0										 	;	" " " " " " "
 295+ 8588 00 00        	defw 0											;	" " " " " " "
 296+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 858E
 298+ 858E 00 00        	db 0,0											; Variables_de_pintado
 299+ 8590 00 00        	defw 0											;	" " " " " " "
 300+ 8592 00 00        	defw 0											;	" " " " " " "
 301+ 8594 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 8598
 303+ 8598 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 859B
 305+ 859B 85 97 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
 306+ 859F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 85A2
 308+ 85A2 00           	db 0 											; (Columnas).
 309+ 85A3 00 00        	defw 0											; (Limite_horizontal).
 310+ 85A5 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 311+ 85A7
 312+ 85A7              ; ---------- ---------- ---------- ---------- ----------
 313+ 85A7
 314+ 85A7 02 02        Entidad_5 db 2,2                                  	; (Filas) / (Columns).
 315+ 85A9 00 00        	defw 0                                          ; (Posicion_actual).
 316+ 85AB 00 00        	defw 0 											; (Puntero_objeto).
 317+ 85AD 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 85B0
 319+ 85B0 01           	db %00000001									; (Attr).
 320+ 85B1
 321+ 85B1 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 322+ 85B3 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 323+ 85B5
 324+ 85B5 00 00        	defw 0											; (Puntero_DESPLZ_der).
 325+ 85B7 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 326+ 85B9
 327+ 85B9 0A 40        	defw $400a                                      ; (Posicion_inicio).
 328+ 85BB 01           	db 1											; (Cuad_objeto).
 329+ 85BC
 330+ 85BC 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 331+ 85C0
 332+ 85C0 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 333+ 85C1
 334+ 85C1 00 00        	db 0,0											; Variables_de_borrado
 335+ 85C3 00 00        	defw 0										 	;	" " " " " " "
 336+ 85C5 00 00        	defw 0											;	" " " " " " "
 337+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 338+ 85CB
 339+ 85CB 00 00        	db 0,0											; Variables_de_pintado
 340+ 85CD 00 00        	defw 0											;	" " " " " " "
 341+ 85CF 00 00        	defw 0											;	" " " " " " "
 342+ 85D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 343+ 85D5
 344+ 85D5 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 345+ 85D8
 346+ 85D8 7B 97 00 00  	defw Indice_mov_Abajo,0   		                ; (Puntero_indice_mov) / (Puntero_mov).
 347+ 85DC 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 348+ 85DF
 349+ 85DF 00           	db 0 											; (Columnas).
 350+ 85E0 00 00        	defw 0											; (Limite_horizontal).
 351+ 85E2 00 00        	db 0,0											; (Limite_vertical), (Ctrl_2).
 352+ 85E4
# file closed: Entidades_y_disparos.asm
  26  85E4
  27  85E4              ; ******************************************************************************************************************************************************************************************
  28  85E4              ; Constantes.
  29  85E4              ; ******************************************************************************************************************************************************************************************
  30  85E4              ;
  31  85E4              ; 8/11/22
  32  85E4              ;
  33  85E4              ; Constantes generales.
  34  85E4              ;
  35  85E4
  36  85E4              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  37  85E4              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  38  85E4              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  39  85E4              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  40  85E4
  41  85E4              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  42  85E4              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  43  85E4              ;                               				        ; De momento situamos este almacén en $7000.
  44  85E4              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  45  85E4              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  46  85E4              ;                               				        ; De momento situamos este almacén en $7060.
  47  85E4
  48  85E4              ; ******************************************************************************************************************************************************************************************
  49  85E4              ; Variables.
  50  85E4              ; ******************************************************************************************************************************************************************************************
  51  85E4              ;
  52  85E4              ; 10/11/22
  53  85E4              ;
  54  85E4              ; Variables de DRAW. (Motor principal).
  55  85E4              ;
  56  85E4              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  57  85E4
  58  85E4 02           Filas db 2												; Filas. [DRAW]
  59  85E5 02           Columns db 2  											; Nº de columnas. [DRAW]
  60  85E6 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  61  85E8 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  62  85EA 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  63  85EB 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  64  85EC
  65  85EC              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  66  85EC
  67  85EC 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  68  85ED              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  69  85ED              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  70  85ED 04           Attr db %00000100										; Atributos de la entidad:
  71  85EE
  72  85EE              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  73  85EE              ;
  74  85EE              ;	COLORES: 0 ..... NEGRO
  75  85EE              ;    		 1 ..... AZUL
  76  85EE              ; 			 2 ..... ROJO
  77  85EE              ;			 3 ..... MAGENTA
  78  85EE              ; 			 4 ..... VERDE
  79  85EE              ; 			 5 ..... CIAN
  80  85EE              ;			 6 ..... AMARILLO
  81  85EE              ; 			 7 ..... BLANCO
  82  85EE
  83  85EE 98 81        Indice_Sprite_der defw Indice_Badsat_der
  84  85F0 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  85  85F2 00 00        Puntero_DESPLZ_der defw 0
  86  85F4 00 00        Puntero_DESPLZ_izq defw 0
  87  85F6
  88  85F6 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  89  85F8 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  90  85F9
  91  85F9              ; Variables de objeto. (Características).
  92  85F9
  93  85F9 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  94  85FA 02           Vel_right db 2 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  95  85FB 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  96  85FC 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  97  85FD
  98  85FD 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  99  85FE              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 100  85FE              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 101  85FE 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  8600 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 103  8602 00 00        	defw 0
 104  8604 00 00 00 00  	db 0,0,0,0
 105  8608
 106  8608 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 107  860A 00 00        	defw 0
 108  860C 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 109  860E 00 00 00 00  	db 0,0,0,0
 110  8612
 111  8612              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 112  8612
 113  8612 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 114  8613              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 115  8613              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 116  8613              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 117  8613              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 118  8613              ;
 119  8613              ; 														DESCRIPCIÖN:
 120  8613              ;
 121  8613              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 122  8613              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 123  8613              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 124  8613              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 125  8613              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 126  8613              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 127  8613              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 128  8613              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 129  8613              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 130  8613              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 131  8613              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 132  8613              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 133  8613              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 134  8613              ;
 135  8613              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 136  8613              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 137  8613              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 138  8613
 139  8613 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 140  8614
 141  8614              ; Movimiento.
 142  8614
 143  8614 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 144  8615 87 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 145  8617 00 00        Puntero_mov defw 0
 146  8619 00           Contador_db_mov db 0
 147  861A 00           Incrementa_puntero db 0
 148  861B 00           Repetimos_db db 0
 149  861C
 150  861C              ; Variables de funcionamiento. [DRAW].
 151  861C
 152  861C 00           Columnas db 0
 153  861D 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 154  861F              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 155  861F 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 156  8620
 157  8620              ; variables de control general.
 158  8620
 159  8620 00           Ctrl_2 db 0 											; Byte de control general de la entidad.
 160  8621
 161  8621              ; 61 Bytes por entidad.
 162  8621              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 163  8621              ;					         		---------;      ;---------
 164  8621
 165  8621
 166  8621              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 167  8621
 168  8621 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 169  8622
 170  8622              ;														DESCRIPCIÓN:
 171  8622              ;
 172  8622              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 173  8622              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 174  8622              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 175  8622              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 176  8622              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 177  8622              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 178  8622
 179  8622              ; Gestión de ENTIDADES.
 180  8622
 181  8622 02           Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 182  8623 00 00        Puntero_store_entidades defw 0
 183  8625 00 00        Puntero_restore_entidades defw 0
 184  8627 00 00        Indice_restore defw 0
 185  8629 02           Numero_de_entidades db 2								; Nº de entidades en pantalla, (contando con Amadeus).
 186  862A 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 187  862B              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 188  862B              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 189  862B              ;														; _ (Numero_de_malotes)="0".
 190  862B 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 191  862D              ;														; _variable para almacenar lo posición del puntero_
 192  862D              ; 														; _de pila, SP.
 193  862D 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 194  862F              ;														; La utiliza la rutina [Extrae_foto_registros].
 195  862F 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 196  8631              ;														; _el snapshot de los registros de la siguiente entidad.
 197  8631              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 198  8631 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 199  8633              ;														; _el snapshot de los registros del siguiente disparo.
 200  8633              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 201  8633
 202  8633              ;---------------------------------------------------------------------------------------------------------------
 203  8633
 204  8633              ; Gestión de Disparos.
 205  8633
 206  8633 00           Numero_de_disparotes db 0
 207  8634 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 208  8636 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 209  8638 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 210  8639              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 211  8639              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 212  8639 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 213  863B              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 214  863B              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 215  863B              ;														; _produzca colisión.
 216  863B 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 217  863D              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 218  863D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 219  8640              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 220  8640 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 221  8643              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 222  8643
 223  8643              ;---------------------------------------------------------------------------------------------------------------
 224  8643
 225  8643              ; Relojes y temporizaciones.
 226  8643
 227  8643 01           Habilita_disparo_Amadeus db 1
 228  8644 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 229  8645 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 230  8646
 231  8646 01           Habilita_disparo_entidad db 1
 232  8647 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 233  8648 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 234  8649
 235  8649              ;---------------------------------------------------------------------------------------------------------------
 236  8649
 237  8649              ; Gestión de FRAMES.
 238  8649
 239  8649 00           Switch db 0
 240  864A
 241  864A              ; Variables de Raster y localización en pantalla.
 242  864A
 243  864A 00 FF        Temp_Raster defw $ff00
 244  864C
 245  864C              ; Rutina principal *************************************************************************************************************************************************************************
 246  864C              ;
 247  864C              ;	14/11/22
 248  864C
 249  864C              START
 250  864C
 251  864C 31 FF FF     	ld sp,$ffff											 ; Situamos el inicio de Stack.
 252  864F 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 253  8651 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 254  8653 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 255  8655 F3           	DI
 256  8656
 257  8656 3E 07        	ld a,%00000111
 258  8658 CD 9B 93     	call Cls
 259  865B
 260  865B              ;	call Pinta_FILAS
 261  865B
 262  865B CD 41 89     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 263  865E
 264  865E 21 29 86     	ld hl,Numero_de_entidades
 265  8661 46           	ld b,(hl)
 266  8662 04           	inc b
 267  8663 05           	dec b
 268  8664 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 269  8666
 270  8666 CD 0F 88     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 271  8669              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 272  8669
 273  8669              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 274  8669              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 275  8669              ;	Pintamos el resto de entidades:
 276  8669
 277  8669              ;	INICIA ENTIDADES !!!!!
 278  8669
 279  8669 C5           1 push bc  												; Guardo el contador de entidades.
 280  866A CD 69 88      	call Inicia_Puntero_objeto
 281  866D CD EB 8D     	call Draw
 282  8670 CD A0 7F     	call Guarda_foto_registros
 283  8673 CD B1 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 284  8676 C1           	pop bc
 285  8677 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 286  8679
 287  8679              ; 	INICIA AMADEUS !!!!!
 288  8679
 289  8679 CD 18 89     3 call Restore_Amadeus
 290  867C CD 69 88     	call Inicia_Puntero_objeto
 291  867F CD EB 8D     	call Draw
 292  8682 CD A0 7F     	call Guarda_foto_registros
 293  8685
 294  8685 11 76 84     	ld de,Amadeus_db
 295  8688 CD 2A 89     	call Store_Amadeus
 296  868B
 297  868B              ; 	INICIA DISPAROS !!!!!
 298  868B
 299  868B CD 25 88     	call Inicia_Puntero_Disparo_Entidades
 300  868E CD 2C 88     	call Inicia_Puntero_Disparo_Amadeus
 301  8691
 302  8691              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 303  8691
 304  8691 CD 0F 88     	call Inicia_punteros_de_entidades
 305  8694 CD F1 88     	call Restore_entidad
 306  8697
 307  8697 3A 29 86     	ld a,(Numero_de_entidades)
 308  869A 3C           	inc a
 309  869B 32 2A 86     	ld (Numero_de_malotes),a
 310  869E
 311  869E              ;	xor a
 312  869E
 313  869E FB           2 ei
 314  869F 18 FD        	jr 2B
 315  86A1
 316  86A1              ;	ld hl,Ctrl_1
 317  86A1              ;	res 3,(hl)
 318  86A1              ;	jr START
 319  86A1
 320  86A1              ;	ret
 321  86A1              ; -----------------------------------------------------------------------------------
 322  86A1
 323  86A1              Frame
 324  86A1
 325  86A1              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 326  86A1              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 327  86A1
 328  86A1              ; PINTAMOS.
 329  86A1
 330  86A1 3E 02            ld a,2
 331  86A3 D3 FE            out ($fe),a
 332  86A5 CD EF 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 333  86A8 CD 28 91     	call Extrae_foto_disparos
 334  86AB 3E 01            ld a,1
 335  86AD D3 FE            out ($fe),a
 336  86AF
 337  86AF              ; ----------------------------------------------------------------------
 338  86AF
 339  86AF              ; Debugggg para bucle!!!!!
 340  86AF              ;	ld a,(Numero_de_entidades)
 341  86AF              ;	and a
 342  86AF              ;	jr nz,13F
 343  86AF
 344  86AF              ;	ld a,1
 345  86AF              ;	ld (Numero_de_entidades),a
 346  86AF
 347  86AF              ;	ld a,(Ctrl_1)
 348  86AF              ;	set 3,a
 349  86AF              ;	ld (Ctrl_1),a
 350  86AF
 351  86AF              ;	ret
 352  86AF              ; Debugggg para bucle!!!!!
 353  86AF
 354  86AF
 355  86AF              ; RELOJES.
 356  86AF
 357  86AF 21 43 86     	ld hl,Habilita_disparo_Amadeus
 358  86B2 11 45 86     	ld de,Temporiza_disparo_Amadeus
 359  86B5 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 360  86B8
 361  86B8 21 46 86     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 362  86BB 11 48 86     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 363  86BE CD D5 7F     	call Habilita_disparos
 364  86C1
 365  86C1              ; COLISIONES.
 366  86C1
 367  86C1 CD 85 8D     	call Selector_de_impactos
 368  86C4
 369  86C4              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 370  86C4              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 371  86C4              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 372  86C4
 373  86C4 AF           	xor a
 374  86C5 32 38 86     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 375  86C8
 376  86C8 CD 0F 88     	call Inicia_punteros_de_entidades
 377  86CB CD F1 88     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_entidades),_
 378  86CE              ; 														; _ en DRAW.
 379  86CE 3A E4 85     	ld a,(Filas)
 380  86D1 A7           	and a
 381  86D2 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 382  86D4 CD 03 89     	call Incrementa_punteros_entidades
 383  86D7 18 F2        	jr 12B
 384  86D9
 385  86D9              ; ---------------------------------------------------------------------------------------
 386  86D9
 387  86D9 CD 03 8C     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 388  86DC 21 00 70     	ld hl,Album_de_fotos
 389  86DF 22 2F 86         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 390  86E2              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 391  86E2 3A 29 86     	ld a,(Numero_de_entidades)
 392  86E5 47               ld b,a
 393  86E6 A7           	and a
 394  86E7 28 5B        	jr z,4F
 395  86E9
 396  86E9              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 397  86E9
 398  86E9              ; Código que ejecutamos con cada entidad:
 399  86E9
 400  86E9              ; Impacto ???
 401  86E9
 402  86E9 C5           2 push bc 												; Nº de entidades.
 403  86EA
 404  86EA 3A FD 85     	ld a,(Impacto)
 405  86ED A7           	and a
 406  86EE 28 0C        	jr z,8F
 407  86F0
 408  86F0              ; Hay Impacto en esta entidad.
 409  86F0
 410  86F0 CD C6 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 411  86F3 CD 33 89     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 412  86F6 21 29 86     	ld hl,Numero_de_entidades							; Una alimaña menos.
 413  86F9 35           	dec (hl)
 414  86FA
 415  86FA 18 42        	jr 6F
 416  86FC
 417  86FC              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 418  86FC              ; _con las coordenadas de la entidad almacenada en DRAW.
 419  86FC
 420  86FC 3A 21 86     8 ld a,(Ctrl_1)
 421  86FF CB 57        	bit 2,a
 422  8701 28 22        	jr z,7F
 423  8703
 424  8703 2A 3B 86     	ld hl,(Coordenadas_disparo_certero)
 425  8706 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 426  8707              ;														; E contiene la coordenada_X del disparo.
 427  8707 2A EA 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 428  870A              ;														; H Coordenado_y de la entidad.
 429  870A A7           	and a
 430  870B ED 52        	sbc hl,de
 431  870D
 432  870D CD BC 8D     	call Determina_resultado_comparativa
 433  8710 04           	inc b
 434  8711 05           	dec b
 435  8712
 436  8712 28 FE        	jr z,$
 437  8714
 438  8714 28 0F        	jr z,7F
 439  8716
 440  8716              ; ----- ----- -----
 441  8716
 442  8716 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 443  8718 32 FD 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 444  871B 21 21 86     	ld hl,Ctrl_1
 445  871E CB 96        	res 2,(hl)
 446  8720 21 3B 86     	ld hl,Coordenadas_disparo_certero
 447  8723 36 00        	ld (hl),0
 448  8725
 449  8725
 450  8725 CD 77 87     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 451  8728
 452  8728 3A 12 86     	ld a,(Ctrl_0)
 453  872B CB 67        	bit 4,a
 454  872D 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 455  872F
 456  872F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 457  872F              ; [[[
 458  872F CD 8C 89     	call Detecta_disparo_entidad
 459  8732              ; ]]]
 460  8732 CD D6 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 461  8735
 462  8735 21 12 86     	ld hl,Ctrl_0
 463  8738 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 464  873A AF           	xor a
 465  873B 32 13 86     	ld (Obj_dibujado),a
 466  873E
 467  873E CD B1 88     6 call Store_Restore_entidades
 468  8741
 469  8741 C1           	pop bc
 470  8742 10 A5        	djnz 2B
 471  8744
 472  8744              ; Tras la gestión de las entidades, ... AMADEUS.
 473  8744
 474  8744 CD 18 89     4 call Restore_Amadeus
 475  8747
 476  8747 3A FD 85     	ld a,(Impacto)
 477  874A A7           	and a
 478  874B 20 FE        	jr nz,$
 479  874D
 480  874D              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 481  874D
 482  874D CD A7 87     	call Mov_Amadeus
 483  8750
 484  8750 3A 12 86     	ld a,(Ctrl_0)
 485  8753 CB 67        	bit 4,a
 486  8755 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 487  8757
 488  8757 CD D6 87     	call Guarda_foto_entidad_a_pintar
 489  875A
 490  875A 21 12 86     3 ld hl,Ctrl_0
 491  875D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 492  875F AF           	xor a
 493  8760 32 13 86     	ld (Obj_dibujado),a
 494  8763
 495  8763 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 496  8766 CD 2A 89     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 497  8769
 498  8769 CD 21 8C     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 499  876C
 500  876C              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 501  876C
 502  876C CD 4B 88     	call Calcula_numero_de_disparotes
 503  876F CD 33 88     9 call Calcula_numero_de_malotes
 504  8772
 505  8772 3E 04        	ld a,4
 506  8774 D3 FE        	out ($fe),a
 507  8776
 508  8776 C9           	ret
 509  8777
 510  8777              ; --------------------------------------------------------------------------------------------------------------
 511  8777              ;
 512  8777              ;	27/03/23
 513  8777
 514  8777              Mov_obj
 515  8777
 516  8777              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 517  8777
 518  8777 AF           	xor a
 519  8778 32 13 86     	ld (Obj_dibujado),a
 520  877B 32 12 86     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 521  877E              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 522  877E              ; 														; _de la entidad.
 523  877E CD E0 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 524  8781              ;														; Obj_dibujado="0".
 525  8781              ; Movemos Entidades malignas.
 526  8781
 527  8781 21 15 86     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 528  8784 34           	inc (hl)
 529  8785 35           	dec (hl)                                            ; Salimos de la rutina.
 530  8786 C8           	ret z
 531  8787
 532  8787 CD 89 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 533  878A
 534  878A 3A 12 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 535  878D CB 67        	bit 4,a
 536  878F C8           	ret z
 537  8790
 538  8790              ; Ha habido desplazamiento de la entidad maligna.
 539  8790              ; Ha llegado a zona de AMADEUS ???
 540  8790
 541  8790 3A EB 85     	ld a,(Coordenada_y)
 542  8793 FE 14        	cp $14
 543  8795 D4 52 8B     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 544  8798              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 545  8798              ; ---------
 546  8798
 547  8798 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 548  879A 32 13 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 549  879D CD E0 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 550  87A0 CD F7 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 551  87A3 CD C6 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 552  87A6 C9           	ret													; _de la misma.
 553  87A7
 554  87A7              ; --------------------------------------------------------------------------------------------------------------
 555  87A7              ;
 556  87A7              ;	29/1/23
 557  87A7
 558  87A7              Mov_Amadeus
 559  87A7
 560  87A7 AF           	xor a
 561  87A8 32 13 86     	ld (Obj_dibujado),a
 562  87AB CD E0 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 563  87AE              ;														; Obj_dibujado="0".
 564  87AE              ; Movemos Amadeus.
 565  87AE
 566  87AE CD 55 89     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 567  87B1 3A 12 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 568  87B4 CB 67        	bit 4,a
 569  87B6 C8           	ret z
 570  87B7
 571  87B7              ; ---------
 572  87B7
 573  87B7 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 574  87B9 32 13 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 575  87BC CD E0 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 576  87BF CD F7 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 577  87C2 CD C6 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 578  87C5 C9           	ret													; _de la nave.
 579  87C6
 580  87C6              ; --------------------------------------------------------------------------------------------------------------
 581  87C6              ;
 582  87C6              ;	31/01/23
 583  87C6              ;
 584  87C6              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 585  87C6
 586  87C6              Guarda_foto_entidad_a_borrar
 587  87C6
 588  87C6 CD C5 90     	call Prepara_draw
 589  87C9 CD FF 8F     	call calcula_CColumnass
 590  87CC CD 36 90     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 591  87CF CD 8B 90     	call Define_rutina_de_impresion
 592  87D2 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 593  87D5 C9           	ret
 594  87D6
 595  87D6              ; --------------------------------------------------------------------------------------------------------------
 596  87D6              ;
 597  87D6              ;	31/01/23
 598  87D6              ;
 599  87D6              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 600  87D6              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 601  87D6
 602  87D6              Guarda_foto_entidad_a_pintar
 603  87D6
 604  87D6 CD 03 88     	call Repone_pintar
 605  87D9 CD EB 8D     	call Draw
 606  87DC CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 607  87DF C9           	ret
 608  87E0
 609  87E0              ; --------------------------------------------------------------------------------------------------------------
 610  87E0              ;
 611  87E0              ;
 612  87E0
 613  87E0 21 E4 85     Prepara_var_pintado_borrado	ld hl,Filas
 614  87E3 3A 13 86     	ld a,(Obj_dibujado)
 615  87E6 A7           	and a
 616  87E7 28 05        	jr z,1F
 617  87E9 11 08 86     	ld de,Variables_de_pintado
 618  87EC 18 03        	jr 2F
 619  87EE 11 FE 85     1 ld de,Variables_de_borrado
 620  87F1 01 08 00     2 ld bc,8
 621  87F4 ED B0        	ldir
 622  87F6 C9           	ret
 623  87F7
 624  87F7              ; --------------------------------------------------------------------------------------------------------------
 625  87F7
 626  87F7 21 FE 85     Repone_borrar ld hl,Variables_de_borrado
 627  87FA 11 E4 85     	ld de,Filas
 628  87FD 01 08 00     	ld bc,8
 629  8800 ED B0        	ldir
 630  8802 C9           	ret
 631  8803
 632  8803 21 08 86     Repone_pintar ld hl,Variables_de_pintado
 633  8806 11 E4 85     	ld de,Filas
 634  8809 01 08 00     	ld bc,8
 635  880C ED B0        	ldir
 636  880E C9           	ret
 637  880F
 638  880F              ; *************************************************************************************************************************************************************
 639  880F              ;
 640  880F              ; 8/1/23
 641  880F              ;
 642  880F              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 643  880F              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 644  880F              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 645  880F
 646  880F              ; Destruye HL y DE !!!!!
 647  880F
 648  880F              Inicia_punteros_de_entidades
 649  880F
 650  880F 21 68 84     	ld hl,Indice_de_entidades
 651  8812 CD 63 88         call Extrae_address
 652  8815 22 23 86         ld (Puntero_store_entidades),hl
 653  8818 21 6A 84     	ld hl,Indice_de_entidades+2
 654  881B 22 27 86     	ld (Indice_restore),hl
 655  881E CD 63 88     	call Extrae_address
 656  8821 22 25 86     	ld (Puntero_restore_entidades),hl
 657  8824 C9               ret
 658  8825
 659  8825              ; *************************************************************************************************************************************************************
 660  8825              ;
 661  8825              ; 8/1/23
 662  8825              ;
 663  8825              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 664  8825
 665  8825 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 666  8828 22 34 86     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 667  882B C9           	ret
 668  882C 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 669  882F 22 36 86     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 670  8832 C9           	ret
 671  8833
 672  8833              ; -------------------------------------------------------------------------------------------------------------
 673  8833              ;
 674  8833              ; 28/2/23
 675  8833              ;
 676  8833
 677  8833              Calcula_numero_de_malotes
 678  8833
 679  8833 21 00 70     	ld hl,Album_de_fotos
 680  8836 EB           	ex de,hl
 681  8837 2A 2F 86     	ld hl,(Stack_snapshot)
 682  883A
 683  883A 06 00        	ld b,0
 684  883C 7D           	ld a,l
 685  883D 93           	sub e
 686  883E 28 07        	jr z,1F
 687  8840
 688  8840              ; Nº de malotes no es "0".
 689  8840
 690  8840 D6 06        2 sub 6
 691  8842 04           	inc b
 692  8843 A7           	and a
 693  8844 20 FA        	jr nz,2B
 694  8846 78           	ld a,b
 695  8847
 696  8847 32 2A 86     1 ld (Numero_de_malotes),a
 697  884A C9           	ret
 698  884B
 699  884B              ; -------------------------------------------------------------------------------------------------------------
 700  884B              ;
 701  884B              ; 28/2/23
 702  884B              ;
 703  884B
 704  884B              Calcula_numero_de_disparotes
 705  884B
 706  884B 21 60 70     	ld hl,Album_de_fotos_disparos
 707  884E EB           	ex de,hl
 708  884F 2A 31 86     	ld hl,(Stack_snapshot_disparos)
 709  8852
 710  8852 06 00        	ld b,0
 711  8854 7D           	ld a,l
 712  8855 93           	sub e
 713  8856 28 07        	jr z,1F
 714  8858
 715  8858              ; Nº de malotes no es "0".
 716  8858
 717  8858 D6 06        2 sub 6
 718  885A 04           	inc b
 719  885B A7           	and a
 720  885C 20 FA        	jr nz,2B
 721  885E 78           	ld a,b
 722  885F
 723  885F 32 33 86     1 ld (Numero_de_disparotes),a
 724  8862 C9           	ret
 725  8863              ; *************************************************************************************************************************************************************
 726  8863              ;
 727  8863              ; 20/10/22
 728  8863              ;
 729  8863              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 730  8863              ;
 731  8863              ; Destruye el puntero y DE !!!!!
 732  8863
 733  8863 5E           Extrae_address ld e,(hl)
 734  8864 23           	inc hl
 735  8865 56           	ld d,(hl)
 736  8866 2B           	dec hl
 737  8867 EB           	ex de,hl
 738  8868 C9           	ret
 739  8869
 740  8869              ; *************************************************************************************************************************************************************
 741  8869              ;
 742  8869              ;	7/2/23
 743  8869              ;
 744  8869              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 745  8869              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 746  8869              ;
 747  8869              ;   Destruye HL y BC !!!!!,
 748  8869              ;
 749  8869              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 750  8869              ;					"0" ..... Izquierda.
 751  8869
 752  8869              Inicia_Puntero_objeto
 753  8869
 754  8869 3A F8 85     	ld a,(Cuad_objeto)
 755  886C E6 01        	and 1
 756  886E F5           	push af
 757  886F CC 8D 88     	call z,Inicia_puntero_objeto_izq
 758  8872 F1           	pop af
 759  8873 28 2B        	jr z,1F
 760  8875 CD 7A 88     	call Inicia_puntero_objeto_der
 761  8878 18 26        	jr 1F
 762  887A
 763  887A              ; Arrancamos desde la parte izquierda de la pantalla.
 764  887A              ; Iniciamos (Indice_Sprite_der).
 765  887A
 766  887A 2A EE 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 767  887D 22 F2 85     	ld (Puntero_DESPLZ_der),hl
 768  8880 CD 63 88     	call Extrae_address
 769  8883 22 E8 85     	ld (Puntero_objeto),hl
 770  8886
 771  8886 2A F0 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 772  8889 22 F4 85     	ld (Puntero_DESPLZ_izq),hl
 773  888C C9           	ret
 774  888D
 775  888D              ; Arrancamos desde la parte derecha de la pantalla.
 776  888D              ; Iniciamos (Indice_Sprite_izq).
 777  888D
 778  888D 2A F0 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 779  8890 22 F4 85     	ld (Puntero_DESPLZ_izq),hl
 780  8893 CD 63 88     	call Extrae_address
 781  8896 22 E8 85     	ld (Puntero_objeto),hl
 782  8899
 783  8899 2A EE 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 784  889C 22 F2 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 785  889F C9           	ret
 786  88A0
 787  88A0              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 788  88A0
 789  88A0 21 38 83     1 ld hl,Amadeus
 790  88A3 ED 4B E8 85  	ld bc,(Puntero_objeto)
 791  88A7 B7 ED 42     	sub hl,bc
 792  88AA C0           	ret nz
 793  88AB 21 12 86     	ld hl,Ctrl_0
 794  88AE CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 795  88B0 C9           	ret 												; _de nuestra nave en los extremos.
 796  88B1
 797  88B1              ; *************************************************************************************************************************************************************
 798  88B1              ;
 799  88B1              ;	8/1/23
 800  88B1              ;
 801  88B1              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 802  88B1              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 803  88B1
 804  88B1              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 805  88B1              ;	_de la 2ª y 3ª entidad respectivamente.
 806  88B1
 807  88B1              Store_Restore_entidades
 808  88B1
 809  88B1 3A 29 86     	ld a,(Numero_de_entidades)
 810  88B4 A7           	and a
 811  88B5 C8           	ret z												 ; Salimos de la rutina si no quedan entidades vivitas y coleando.
 812  88B6
 813  88B6 E5           	push hl
 814  88B7 D5           	push de
 815  88B8 C5            	push bc
 816  88B9
 817  88B9              ;	STORE !!!!!
 818  88B9              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 819  88B9
 820  88B9 21 E4 85     	ld hl,Filas
 821  88BC ED 5B 23 86  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 822  88C0 01 3D 00     	ld bc,61
 823  88C3 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 824  88C5
 825  88C5              ; 	Entidad_sospechosa. 20/4/23
 826  88C5
 827  88C5 3A FD 85     	ld a,(Impacto)
 828  88C8 A7           	and a
 829  88C9 28 0C        	jr z,1F
 830  88CB
 831  88CB 2A 23 86     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 832  88CE 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 833  88D1 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 834  88D2 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 835  88D4 22 39 86     	ld (Entidad_sospechosa_de_colision),hl
 836  88D7
 837  88D7              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 838  88D7
 839  88D7 2A 25 86     1 ld hl,(Puntero_restore_entidades)
 840  88DA 7E           	ld a,(hl)
 841  88DB A7           	and a
 842  88DC F5           	push af
 843  88DD 28 08        	jr z,2F
 844  88DF
 845  88DF 11 E4 85     	ld de,Filas
 846  88E2 01 3D 00     	ld bc,61
 847  88E5 ED B0        	ldir
 848  88E7
 849  88E7 CD 03 89     2 call Incrementa_punteros_entidades
 850  88EA F1           	pop af
 851  88EB 28 EA        	jr z,1B
 852  88ED
 853  88ED C1           	pop bc
 854  88EE D1           	pop de
 855  88EF E1           	pop hl
 856  88F0
 857  88F0 C9           	ret
 858  88F1
 859  88F1              ; **************************************************************************************************
 860  88F1              ;
 861  88F1              ;	12/05/23
 862  88F1              ;
 863  88F1              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_entidades).
 864  88F1
 865  88F1 E5           Restore_entidad push hl
 866  88F2 D5           	push de
 867  88F3 C5            	push bc
 868  88F4
 869  88F4 2A 23 86     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 870  88F7 11 E4 85     	ld de,Filas
 871  88FA 01 3D 00     	ld bc,61
 872  88FD ED B0        	ldir
 873  88FF
 874  88FF C1           	pop bc
 875  8900 D1           	pop de
 876  8901 E1           	pop hl
 877  8902 C9           	ret
 878  8903
 879  8903
 880  8903              ; **************************************************************************************************
 881  8903              ;
 882  8903              ;	08/05/23
 883  8903              ;
 884  8903              ;	Incrementamos los dos punteros de entidades. (+1).
 885  8903
 886  8903 2A 25 86     Incrementa_punteros_entidades ld hl,(Puntero_restore_entidades)
 887  8906 22 23 86     	ld (Puntero_store_entidades),hl
 888  8909 2A 27 86     	ld hl,(Indice_restore)
 889  890C 23           	inc hl
 890  890D 23           	inc hl
 891  890E 22 27 86     	ld (Indice_restore),hl
 892  8911 CD 63 88         call Extrae_address
 893  8914 22 25 86         ld (Puntero_restore_entidades),hl
 894  8917 C9               ret
 895  8918
 896  8918              ; **************************************************************************************************
 897  8918              ;
 898  8918              ;	25/01/23
 899  8918              ;
 900  8918              ;	Restore_Amadeus
 901  8918              ;
 902  8918              ;	Cargamos en DRAW los parámetros de Amadeus.
 903  8918              ;
 904  8918
 905  8918 E5           Restore_Amadeus	push hl
 906  8919 D5           	push de
 907  891A C5            	push bc
 908  891B 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 909  891E 11 E4 85     	ld de,Filas
 910  8921 01 3D 00     	ld bc,61
 911  8924 ED B0        	ldir
 912  8926 C1           	pop bc
 913  8927 D1           	pop de
 914  8928 E1           	pop hl
 915  8929 C9           	ret
 916  892A
 917  892A              ; *************************************************************************************************************************************************************
 918  892A              ;
 919  892A              ;	29/04/23
 920  892A              ;
 921  892A              ;	Store_Amadeus
 922  892A              ;
 923  892A              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 924  892A              ;
 925  892A              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 926  892A              ;
 927  892A              ;	DESTRUYE: HL y BC y DE.
 928  892A
 929  892A 21 E4 85     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 930  892D 01 3D 00     	ld bc,61
 931  8930 ED B0        	ldir
 932  8932 C9           	ret
 933  8933
 934  8933              ; -----------------------------------------------------------
 935  8933              ;
 936  8933              ;	27/04/23
 937  8933              ;
 938  8933              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 939  8933              ;
 940  8933              ;	Destruye: HL,BC,DE,A
 941  8933
 942  8933 21 E4 85     Borra_datos_entidad ld hl,Filas
 943  8936 01 3C 00     	ld bc,60
 944  8939 AF           	xor a
 945  893A 77           	ld (hl),a
 946  893B 11 E5 85     	ld de,Filas+1
 947  893E ED B0        	ldir
 948  8940 C9           	ret
 949  8941
 950  8941              ; -----------------------------------------------------------
 951  8941
 952  8941              ; Teclado.
 953  8941
 954  8941 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 955  8943 DB FE        	in a,($fe)
 956  8945 E6 01        	and $01
 957  8947 28 02        	jr z,1f
 958  8949 18 F6        	jr Pulsa_ENTER
 959  894B C9           1 ret
 960  894C
 961  894C              ; **************************************************************************************************
 962  894C              ;
 963  894C              ; Temporización.
 964  894C
 965  894C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 966  894C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 967  894C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 968  894C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 969  894C
 970  894C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 971  894C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 972  894C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 973  894C
 974  894C              ; A partir de $4f61 no hace falta DELAY.
 975  894C
 976  894C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 977  894C
 978  894C 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 979  894F 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 980  8950 78           	LD A,B
 981  8951 A7           	AND A
 982  8952 20 FB        	JR NZ,wait
 983  8954 C9           	RET
 984  8955
 985  8955              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 986  8955              ;
 987  8955              ;	5/3/23
 988  8955              ;
 989  8955              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 990  8955
 991  8955              Movimiento_Amadeus
 992  8955
 993  8955              ; Disparo.
 994  8955
 995  8955 3A 43 86     	ld a,(Habilita_disparo_Amadeus)
 996  8958 A7           	and a
 997  8959 20 02        	jr nz,1F
 998  895B 18 15        	jr 2F
 999  895D
1000  895D 3E F7        1 ld a,$f7													; "5" para disparar.
1001  895F DB FE        	in a,($fe)
1002  8961 E6 10        	and $10
1003  8963
1004  8963 F5           	push af
1005  8964 CC CE 89     	call z,Genera_disparo
1006  8967 F1           	pop af
1007  8968 20 08        	jr nz,2F
1008  896A
1009  896A 3A 43 86     	ld a,(Habilita_disparo_Amadeus)
1010  896D EE 01        	xor 1
1011  896F 32 43 86     	ld (Habilita_disparo_Amadeus),a
1012  8972
1013  8972 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1014  8974 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1015  8976 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1016  8978 CC 29 95         call z,Mov_left											;			"			"			"			"			"			"			"			"
1017  897B 3E F7        	ld a,$f7
1018  897D DB FE        	in a,($fe)
1019  897F E6 01        	and $01
1020  8981 C8           	ret z
1021  8982
1022  8982 3E F7        	ld a,$f7
1023  8984 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1024  8986 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1025  8988 CC 0B 94     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1026  898B C9           	ret
1027  898C
1028  898C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1029  898C              ;
1030  898C              ;	Rutina provisional para que los malotes cagen balas.
1031  898C
1032  898C              Detecta_disparo_entidad
1033  898C
1034  898C 3A 46 86     	ld a,(Habilita_disparo_entidad)
1035  898F A7           	and a
1036  8990 C8           	ret z
1037  8991 3E 7F        	ld a,$7f
1038  8993 DB FE        	in a,($fe)
1039  8995 E6 01        	and 1
1040  8997 C0           	ret nz
1041  8998 CD CE 89     	call Genera_disparo
1042  899B C9           	ret
1043  899C
1044  899C              ; Pinta indicadores de FILAS. ------------------------------------------------------
1045  899C
1046  899C 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1047  899F
1048  899F              ; ----------
1049  899F 06 20        	ld b,32
1050  89A1 E5           2 push hl
1051  89A2 C5           	push bc
1052  89A3              ; ----------
1053  89A3
1054  89A3 06 BF        	ld b,$bf
1055  89A5 36 80        1 ld (hl),%10000000
1056  89A7 CD D1 90     	call NextScan
1057  89AA 10 F9        	djnz 1B
1058  89AC
1059  89AC              ; ----------
1060  89AC C1           	pop bc
1061  89AD E1           	pop hl
1062  89AE 2C           	inc l
1063  89AF 10 F0        	djnz 2B
1064  89B1              ; ----------
1065  89B1
1066  89B1 06 03        	ld b,3
1067  89B3 21 00 47         ld hl,$4700
1068  89B6 CD BC 89     3 call Bucle_1
1069  89B9 10 FB            djnz 3B
1070  89BB C9               ret
1071  89BC
1072  89BC C5           Bucle_1 push bc
1073  89BD E5                   push hl
1074  89BE D1                   pop de
1075  89BF 13                   inc de
1076  89C0 01 FF 00             ld bc,255
1077  89C3 36 FF                ld (hl),255
1078  89C5 ED B0                ldir
1079  89C7 23                   inc hl
1080  89C8 3E 07                ld a,7
1081  89CA 84                   add a,h
1082  89CB 67                   ld h,a
1083  89CC C1                   pop bc
1084  89CD C9                   ret
1085  89CE
1086  89CE              ; ---------------------------------------------------------------
1087  89CE
1088  89CE              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 89CE              ; ******************************************************************************************************************************************************************************************
   2+ 89CE              ;
   3+ 89CE              ;   17/04/23
   4+ 89CE              ;
   5+ 89CE              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 89CE              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 89CE              ;
   8+ 89CE              ;
   9+ 89CE              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 89CE              ;
  11+ 89CE              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 89CE              ;               _ hacen las entidades hacia abajo.
  13+ 89CE              ;
  14+ 89CE              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 89CE              ;
  16+ 89CE              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 89CE              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 89CE              ;
  19+ 89CE              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 89CE              ;           _ la bala.
  21+ 89CE              ;
  22+ 89CE              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 89CE              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 89CE              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 89CE              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 89CE              ;           _ en el momento de generarse la bala)).
  27+ 89CE
  28+ 89CE              Genera_disparo
  29+ 89CE
  30+ 89CE              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 89CE              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 89CE              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 89CE              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 89CE              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 89CE              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 89CE              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 89CE
  38+ 89CE              ; Exclusiones:
  39+ 89CE
  40+ 89CE 3A 1C 86         ld a,(Columnas)
  41+ 89D1 47               ld b,a
  42+ 89D2 3A E5 85         ld a,(Columns)
  43+ 89D5 B8               cp b
  44+ 89D6 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 89D7
  46+ 89D7              ; ----- ----- -----
  47+ 89D7
  48+ 89D7 3A 12 86         ld a,(Ctrl_0)
  49+ 89DA CB 77            bit 6,a
  50+ 89DC 20 06            jr nz,14F
  51+ 89DE
  52+ 89DE 3A EB 85         ld a,(Coordenada_y)
  53+ 89E1 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 89E3 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 89E4
  56+ 89E4 21 00 80     14 ld hl,Indice_disparo
  57+ 89E7 3A EC 85         ld a,(CTRL_DESPLZ)
  58+ 89EA 4F               ld c,a
  59+ 89EB 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 89ED              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 89ED              ;                                            ""        ""       "f9", B="1"
  62+ 89ED              ;                                            ""        ""       "fb", B="2"
  63+ 89ED              ;                                            ""        ""       "fb", B="3"
  64+ 89ED A7               and a
  65+ 89EE 28 10            jr z,1F
  66+ 89F0 E6 01            and 1
  67+ 89F2 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 89F3
  69+ 89F3 79               ld a,c
  70+ 89F4 16 F9            ld d,$f9
  71+ 89F6 23           2 inc hl
  72+ 89F7 23               inc hl
  73+ 89F8 04               inc b
  74+ 89F9 BA               cp d
  75+ 89FA 28 04            jr z,1F
  76+ 89FC 14               inc d
  77+ 89FD 14               inc d
  78+ 89FE 18 F6            jr 2B
  79+ 8A00
  80+ 8A00 CD 63 88     1 call Extrae_address
  81+ 8A03 E5               push hl
  82+ 8A04 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8A06 DD 21 64 93  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8A0A
  85+ 8A0A              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8A0A              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8A0A
  88+ 8A0A 3A 12 86         ld a,(Ctrl_0)
  89+ 8A0D CB 77            bit 6,a
  90+ 8A0F 20 04            jr nz,19F
  91+ 8A11
  92+ 8A11 AF               xor a
  93+ 8A12 32 46 86         ld (Habilita_disparo_entidad),a
  94+ 8A15
  95+ 8A15 3A F8 85     19 ld a,(Cuad_objeto)
  96+ 8A18 FE 02            cp 2
  97+ 8A1A 38 66            jr c,3F
  98+ 8A1C 28 64            jr z,3F
  99+ 8A1E
 100+ 8A1E              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8A1E
 102+ 8A1E E6 01            and 1
 103+ 8A20 28 30            jr z,4F
 104+ 8A22
 105+ 8A22              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8A22              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8A22              ;
 108+ 8A22              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8A22              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8A22              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8A22
 112+ 8A22 2A E6 85     	ld hl,(Posicion_actual)
 113+ 8A25
 114+ 8A25              ;   Amadeus o entidad ???.
 115+ 8A25
 116+ 8A25 3A 12 86         ld a,(Ctrl_0)
 117+ 8A28 CB 77            bit 6,a
 118+ 8A2A 28 0A            jr z,8F
 119+ 8A2C
 120+ 8A2C              ; 	Dispara Amadeus.
 121+ 8A2C
 122+ 8A2C 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8A2E CD E0 90         call PreviousScan
 124+ 8A31 CD E0 90         call PreviousScan
 125+ 8A34
 126+ 8A34              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8A34              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8A34              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8A34              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8A34
 131+ 8A34 18 11            jr 10F
 132+ 8A36
 133+ 8A36              ; 	Dispara Entidad.
 134+ 8A36
 135+ 8A36 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8A39              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8A39
 138+ 8A39              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8A39              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8A39
 141+ 8A39 C5               push bc
 142+ 8A3A 06 10            ld b,16
 143+ 8A3C CD D1 90     9 call NextScan
 144+ 8A3F 10 FB            djnz 9B
 145+ 8A41 C1               pop bc
 146+ 8A42 CD AC 8A         call Ajusta_disparo_parte_izquierda
 147+ 8A45 18 06            jr 17F
 148+ 8A47
 149+ 8A47              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8A47              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8A47              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8A47              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8A47
 154+ 8A47 CD AC 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 8A4A CD 21 8B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8A4D              ;                                                      ; _al generar el disparo.
 157+ 8A4D
 158+ 8A4D              ; 	LLegados a este punto tendremos:
 159+ 8A4D              ;
 160+ 8A4D              ;       Puntero_objeto_disparo en IY.
 161+ 8A4D              ;       Rutinas_de_impresion en IX.
 162+ 8A4D              ;       Puntero_de_impresion en HL.
 163+ 8A4D              ;       Impacto/Dirección en BC.
 164+ 8A4D
 165+ 8A4D CD B4 8A     17 call Almacena_disparo
 166+ 8A50 18 52            jr 6F                                             ; RET.
 167+ 8A52
 168+ 8A52              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8A52              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8A52              ;
 171+ 8A52              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8A52              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8A52              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8A52
 175+ 8A52 2A E6 85     4 ld hl,(Posicion_actual)
 176+ 8A55
 177+ 8A55              ;   Amadeus o entidad ???.
 178+ 8A55
 179+ 8A55 3A 12 86         ld a,(Ctrl_0)
 180+ 8A58 CB 77            bit 6,a
 181+ 8A5A 28 0A            jr z,11F
 182+ 8A5C
 183+ 8A5C              ; 	Dispara Amadeus.
 184+ 8A5C
 185+ 8A5C 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8A5E CD E0 90         call PreviousScan
 187+ 8A61 CD E0 90         call PreviousScan
 188+ 8A64
 189+ 8A64              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A64              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A64              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A64              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A64
 194+ 8A64 18 11            jr 13F
 195+ 8A66
 196+ 8A66              ; 	Dispara Entidad.
 197+ 8A66
 198+ 8A66 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A69              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A69
 201+ 8A69              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A69              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A69
 204+ 8A69 C5               push bc
 205+ 8A6A 06 10            ld b,16
 206+ 8A6C CD D1 90     12 call NextScan
 207+ 8A6F 10 FB            djnz 12B
 208+ 8A71 C1               pop bc
 209+ 8A72
 210+ 8A72 CD A5 8A         call Ajusta_disparo_parte_derecha
 211+ 8A75 18 06            jr 18F
 212+ 8A77
 213+ 8A77              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A77              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A77              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A77              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A77
 218+ 8A77 CD A5 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A7A CD 21 8B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A7D              ;                                                       ; _al generar el disparo.
 221+ 8A7D
 222+ 8A7D              ; LLegados a este punto tendremos:
 223+ 8A7D              ;
 224+ 8A7D              ;       Puntero_objeto_disparo en IY.
 225+ 8A7D              ;       Rutinas_de_impresion en IX.
 226+ 8A7D              ;       Puntero_de_impresion en HL.
 227+ 8A7D              ;       Impacto/Dirección en BC.
 228+ 8A7D
 229+ 8A7D CD B4 8A     18 call Almacena_disparo
 230+ 8A80 18 22            jr 6F                                               ; RET.
 231+ 8A82
 232+ 8A82              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A82
 234+ 8A82 28 11        3 jr z,5F
 235+ 8A84
 236+ 8A84              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A84              ;
 238+ 8A84              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A84              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A84              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A84              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A84
 243+ 8A84              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A84              ;	   ""        ""       "f9", B="1"
 245+ 8A84              ;	   ""        ""       "fb", B="2"
 246+ 8A84              ; 	   ""        ""       "fb", B="3"
 247+ 8A84
 248+ 8A84 2A E6 85     	ld hl,(Posicion_actual)
 249+ 8A87 CD D1 90     	call NextScan
 250+ 8A8A
 251+ 8A8A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A8A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A8A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A8A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A8A
 256+ 8A8A CD AC 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A8D
 258+ 8A8D              ; 	No se produce impacto. B="$80"
 259+ 8A8D              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A8D
 261+ 8A8D 01 80 80         ld bc,$8080
 262+ 8A90
 263+ 8A90              ; 	LLegados a este punto tendremos:
 264+ 8A90              ;
 265+ 8A90              ;       Puntero_objeto_disparo en IY.
 266+ 8A90              ;       Rutinas_de_impresion en IX.
 267+ 8A90              ;       Puntero_de_impresion en HL.
 268+ 8A90              ;       Impacto/Dirección en BC.
 269+ 8A90
 270+ 8A90 CD B4 8A         call Almacena_disparo
 271+ 8A93 18 0F            jr 6F                                           ; RET.
 272+ 8A95
 273+ 8A95              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A95              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A95              ;
 276+ 8A95              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A95              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A95              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A95              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A95
 281+ 8A95 2A E6 85     5 ld hl,(Posicion_actual)
 282+ 8A98 CD D1 90     	call NextScan
 283+ 8A9B
 284+ 8A9B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A9B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A9B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A9B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A9B
 289+ 8A9B CD A5 8A         call Ajusta_disparo_parte_derecha
 290+ 8A9E
 291+ 8A9E              ; 	No se produce impacto. B="$80"
 292+ 8A9E              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A9E
 294+ 8A9E 01 80 80     15 ld bc,$8080
 295+ 8AA1
 296+ 8AA1              ; 	LLegados a este punto tendremos:
 297+ 8AA1              ;
 298+ 8AA1              ;       Puntero_objeto_disparo en IY.
 299+ 8AA1              ;       Rutinas_de_impresion en IX.
 300+ 8AA1              ;       Puntero_de_impresion en HL.
 301+ 8AA1              ;       Impacto/Dirección en BC.
 302+ 8AA1
 303+ 8AA1 CD B4 8A         call Almacena_disparo
 304+ 8AA4
 305+ 8AA4 C9           6 ret
 306+ 8AA5
 307+ 8AA5              ; ----------------------------------------------------------------
 308+ 8AA5              ;
 309+ 8AA5              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8AA5              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8AA5              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8AA5
 313+ 8AA5 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8AA6 FE 02            cp 2
 315+ 8AA8 38 01            jr c,1F
 316+ 8AAA 23               inc hl
 317+ 8AAB C9           1 ret
 318+ 8AAC
 319+ 8AAC 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8AAD FE 01        	cp 1
 321+ 8AAF 20 01        	jr nz,1F
 322+ 8AB1 2B           	dec hl
 323+ 8AB2 2B           1 dec hl
 324+ 8AB3 C9               ret
 325+ 8AB4
 326+ 8AB4              ; ----------------------------------------------------------------
 327+ 8AB4              ;
 328+ 8AB4              ;   25/02/23
 329+ 8AB4              ;
 330+ 8AB4              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8AB4              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8AB4              ;
 333+ 8AB4              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8AB4              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8AB4
 336+ 8AB4              Almacena_disparo
 337+ 8AB4
 338+ 8AB4 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8AB5 F1               pop af
 340+ 8AB6 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8AB7
 342+ 8AB7 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8AB8 E6 01            and 1
 344+ 8ABA 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8ABC              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8ABC              ; 	Dispara AMADEUS.
 347+ 8ABC
 348+ 8ABC              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8ABC              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8ABC              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8ABC              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8ABC
 353+ 8ABC C5               push bc
 354+ 8ABD 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8AC0 2A 36 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8AC3 A7               and a
 357+ 8AC4 ED 42            sbc hl,bc
 358+ 8AC6 CC 2C 88         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8AC9 C1               pop bc
 360+ 8ACA 28 54            jr z,4F
 361+ 8ACC
 362+ 8ACC 2A 36 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8ACF 23               inc hl
 364+ 8AD0 23               inc hl
 365+ 8AD1 22 36 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8AD4              ;                                                   ; _ Disparo_(+1).
 367+ 8AD4 18 18            jr 2F
 368+ 8AD6
 369+ 8AD6              ; Dispara una entidad.
 370+ 8AD6
 371+ 8AD6 C5           1 push bc
 372+ 8AD7 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8ADA 2A 34 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8ADD A7               and a
 375+ 8ADE ED 42            sbc hl,bc
 376+ 8AE0 CC 25 88         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8AE3 C1               pop bc
 378+ 8AE4 28 3A            jr z,4F
 379+ 8AE6
 380+ 8AE6 2A 34 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8AE9 23               inc hl
 382+ 8AEA 23               inc hl
 383+ 8AEB 22 34 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8AEE              ;                                                   ; _ Disparo_(+1).
 385+ 8AEE CD 63 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8AF1              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8AF1              ;
 388+ 8AF1              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8AF1              ;                                                     Rutinas_de_impresion en IX.
 390+ 8AF1              ;                                                     Puntero_de_impresion en HL.
 391+ 8AF1              ;                                                     Impacto/Dirección en BC.
 392+ 8AF1
 393+ 8AF1 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8AF2 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8AF3 23               inc hl                                          ; _ al siguiente.
 396+ 8AF4 A7               and a
 397+ 8AF5 20 C0            jr nz,3B
 398+ 8AF7
 399+ 8AF7 08               ex af,af
 400+ 8AF8 ED 73 2B 86      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8AFC F9               ld sp,hl
 402+ 8AFD
 403+ 8AFD DD E5            push ix                                         ; Rutina de impresión.
 404+ 8AFF F5               push af                                         ; Puntero de impresión.
 405+ 8B00 FD E5            push iy                                         ; Puntero objeto.
 406+ 8B02 C5               push bc                                         ; Control.
 407+ 8B03
 408+ 8B03 ED 7B 2B 86      ld sp,(Stack)
 409+ 8B07
 410+ 8B07              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8B07
 412+ 8B07 21 21 86     	ld hl,Ctrl_1
 413+ 8B0A CB C6        	set 0,(hl)
 414+ 8B0C
 415+ 8B0C DD E5        	push ix
 416+ 8B0E E1               pop hl
 417+ 8B0F F5               push af
 418+ 8B10 DD E1            pop ix
 419+ 8B12
 420+ 8B12 CD A0 7F     	call Guarda_foto_registros
 421+ 8B15
 422+ 8B15 21 21 86     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8B18 CB 86        	res 0,(hl)
 424+ 8B1A
 425+ 8B1A              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8B1A              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8B1A
 428+ 8B1A CD 2C 88         call Inicia_Puntero_Disparo_Amadeus
 429+ 8B1D CD 25 88         call Inicia_Puntero_Disparo_Entidades
 430+ 8B20
 431+ 8B20 C9           4 ret
 432+ 8B21
 433+ 8B21              ; ----------------------------------------------------------------
 434+ 8B21              ;
 435+ 8B21              ;   4/3/23
 436+ 8B21              ;
 437+ 8B21              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8B21              ;   _ al generarse el disparo.
 439+ 8B21              ;
 440+ 8B21              ;       "$80" ..... No se produce colisión.
 441+ 8B21              ;       "$81" ..... Se produce colisión.
 442+ 8B21
 443+ 8B21              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8B21              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8B21
 446+ 8B21
 447+ 8B21 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8B23 E5               push hl                                        ; Puntero de impresión.
 449+ 8B24
 450+ 8B24 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8B26 CD 42 8B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8B29
 453+ 8B29 7B               ld a,e
 454+ 8B2A E6 01            and 1
 455+ 8B2C 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8B2E
 457+ 8B2E E1               pop hl
 458+ 8B2F E5               push hl
 459+ 8B30 CD D1 90         call NextScan
 460+ 8B33
 461+ 8B33 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8B34 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8B36 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8B38              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8B38 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8B3A CD 42 8B         call Bucle_2
 467+ 8B3D
 468+ 8B3D 43           2 ld b,e
 469+ 8B3E E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8B3F FD E1            pop iy
 471+ 8B41 C9               ret
 472+ 8B42
 473+ 8B42               ; ---------- ----------
 474+ 8B42
 475+ 8B42 06 02        Bucle_2 ld b,2
 476+ 8B44 FD 7E 00     2 ld a,(iy)
 477+ 8B47 A6               and (hl)
 478+ 8B48 28 02            jr z,1F
 479+ 8B4A 1E 81            ld e,$81
 480+ 8B4C 23           1 inc hl
 481+ 8B4D FD 23            inc iy
 482+ 8B4F 10 F3            djnz 2B
 483+ 8B51 C9               ret
 484+ 8B52
 485+ 8B52              ; -------------------------------------------------------------------------------------------------------------
 486+ 8B52              ;
 487+ 8B52              ;   11/04/23
 488+ 8B52              ;
 489+ 8B52              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8B52              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8B52              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8B52              ;
 493+ 8B52              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8B52
 495+ 8B52              Compara_coordenadas_X
 496+ 8B52
 497+ 8B52              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8B52              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8B52
 500+ 8B52              ; Preparamos registros:
 501+ 8B52
 502+ 8B52 21 EA 85         ld hl,Filas+6
 503+ 8B55 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8B56 23               inc hl
 505+ 8B57 23               inc hl
 506+ 8B58 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8B59 43               ld b,e
 508+ 8B5A 21 F8 85         ld hl,Filas+20
 509+ 8B5D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 510+ 8B5E 21 40 86         ld hl,Coordenadas_X_Entidad
 511+ 8B61 CD 72 8D         call Guarda_coordenadas_X
 512+ 8B64
 513+ 8B64              ; Preparamos registros:
 514+ 8B64
 515+ 8B64 21 7C 84         ld hl,Amadeus_db+6
 516+ 8B67 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 517+ 8B68 23               inc hl
 518+ 8B69 23               inc hl
 519+ 8B6A 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 520+ 8B6B 7B               ld a,e
 521+ 8B6C 08               ex af,af'
 522+ 8B6D 21 8A 84         ld hl,Amadeus_db+20
 523+ 8B70 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 524+ 8B71 21 3D 86         ld hl,Coordenadas_X_Amadeus
 525+ 8B74 CD 72 8D         call Guarda_coordenadas_X
 526+ 8B77
 527+ 8B77              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 528+ 8B77              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 529+ 8B77
 530+ 8B77 04               inc b
 531+ 8B78 05               dec b
 532+ 8B79 28 04            jr z,1F
 533+ 8B7B 06 03            ld b,3
 534+ 8B7D 18 02            jr 2F
 535+ 8B7F 06 02        1 ld b,2
 536+ 8B81 08           2 ex af,af'
 537+ 8B82 3C               inc a
 538+ 8B83 3D               dec a
 539+ 8B84 28 04            jr z,5F
 540+ 8B86 0E 03            ld c,3
 541+ 8B88 18 02            jr 6F
 542+ 8B8A 0E 02        5 ld c,2
 543+ 8B8C 79           6 ld a,c
 544+ 8B8D 08               ex af,af'
 545+ 8B8E 11 40 86         ld de,Coordenadas_X_Entidad
 546+ 8B91 1A           4 ld a,(de)
 547+ 8B92 21 3D 86         ld hl,Coordenadas_X_Amadeus
 548+ 8B95 BE           3 cp (hl)
 549+ 8B96 28 0E            jr z,7F
 550+ 8B98 23               inc hl
 551+ 8B99 0D               dec c
 552+ 8B9A 20 F9            jr nz,3B
 553+ 8B9C 13               inc de
 554+ 8B9D 08               ex af,af'
 555+ 8B9E 4F               ld c,a
 556+ 8B9F 08               ex af,af'
 557+ 8BA0 10 EF            djnz 4B
 558+ 8BA2
 559+ 8BA2              ; Limpiamos los almacenes de coordenadas y salimos.
 560+ 8BA2
 561+ 8BA2 CD B1 8D     8 call Limpia_Coordenadas_X
 562+ 8BA5 C9               ret
 563+ 8BA6
 564+ 8BA6              7
 565+ 8BA6 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 8BA8 32 FD 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 8BAB 21 38 86         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 8BAE CB D6            set 2,(hl)
 569+ 8BB0 18 F0            jr 8B
 570+ 8BB2
 571+ 8BB2              ; -----------------------------------------------------------------------
 572+ 8BB2              ;
 573+ 8BB2              ;   17/04/23
 574+ 8BB2              ;
 575+ 8BB2
 576+ 8BB2              Detecta_colision_nave_entidad
 577+ 8BB2
 578+ 8BB2              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 8BB2
 580+ 8BB2 2A E6 85         ld hl,(Posicion_actual)
 581+ 8BB5 CD 36 90         call Calcula_puntero_de_impresion
 582+ 8BB8
 583+ 8BB8              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 8BB8              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 8BB8
 586+ 8BB8 DD E5            push ix
 587+ 8BBA E1               pop hl
 588+ 8BBB E5               push hl
 589+ 8BBC
 590+ 8BBC              ; ----- ----- -----
 591+ 8BBC 1E 00            ld e,0                                         ; Indica impacto.
 592+ 8BBE 06 0A            ld b,10
 593+ 8BC0 CD F0 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 8BC3 7B               ld a,e
 595+ 8BC4 FE 05            cp 5
 596+ 8BC6 38 0E            jr c,3F
 597+ 8BC8
 598+ 8BC8              ; LLegados a este punto:
 599+ 8BC8              ;
 600+ 8BC8              ;   HAY COLISIÓN !!!!!.
 601+ 8BC8              ;
 602+ 8BC8              ;   .db (Impacto) de Amadeus a "1".
 603+ 8BC8              ;   SET el bit3 de (Impacto2).
 604+ 8BC8              ;
 605+ 8BC8              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 8BC8
 607+ 8BC8 21 8F 84         ld hl,Amadeus_db+25
 608+ 8BCB 36 01            ld (hl),1
 609+ 8BCD 21 38 86         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 8BD0 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 8BD2 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 8BD4 18 18            jr 1F
 613+ 8BD6
 614+ 8BD6              ; -----
 615+ 8BD6
 616+ 8BD6 E1           3 pop hl
 617+ 8BD7 CD D1 90         call NextScan
 618+ 8BDA E5               push hl
 619+ 8BDB 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 8BDC FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 8BDE 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 8BE0 30 0C            jr nc,1F
 623+ 8BE2              ;                                                  ; _ 2º scanline si esto es así.
 624+ 8BE2 10 DC            djnz 2B
 625+ 8BE4
 626+ 8BE4              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 8BE4
 628+ 8BE4              ; LLegados a este punto:
 629+ 8BE4              ;
 630+ 8BE4              ;   NO HAY COLISIÓN !!!!!.
 631+ 8BE4              ;
 632+ 8BE4              ;   .db (Impacto) de Amadeus a "0".
 633+ 8BE4              ;   RES el bit2 de (Impacto2).
 634+ 8BE4              ;
 635+ 8BE4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 8BE4              ;   Lo colocamos a "0".
 637+ 8BE4
 638+ 8BE4 21 38 86         ld hl,Impacto2
 639+ 8BE7 CB 96            res 2,(hl)
 640+ 8BE9 2A 39 86         ld hl,(Entidad_sospechosa_de_colision)
 641+ 8BEC 36 00            ld (hl),0
 642+ 8BEE
 643+ 8BEE E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 8BEF C9               ret
 645+ 8BF0
 646+ 8BF0               ; ---------- ----------
 647+ 8BF0
 648+ 8BF0 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 8BF1 3A E5 85         ld a,(Columns)
 650+ 8BF4 47               ld b,a
 651+ 8BF5 FD 7E 00     2 ld a,(iy)
 652+ 8BF8 BE               cp (hl)
 653+ 8BF9 28 01            jr z,1F
 654+ 8BFB
 655+ 8BFB 1C               inc e
 656+ 8BFC
 657+ 8BFC 23           1 inc hl
 658+ 8BFD FD 23            inc iy
 659+ 8BFF 10 F4            djnz 2B
 660+ 8C01 C1               pop bc
 661+ 8C02 C9               ret
 662+ 8C03
 663+ 8C03              ; -------------------------------------------------------------------------------------------------------------
 664+ 8C03              ;
 665+ 8C03              ;   13/03/23
 666+ 8C03              ;
 667+ 8C03              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 8C03              ;
 669+ 8C03              ;   DESTRUYE: HL,BC,DE y A.
 670+ 8C03
 671+ 8C03 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 8C06 7E               ld a,(hl)
 673+ 8C07 A7               and a
 674+ 8C08 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 8C09
 676+ 8C09 44               ld b,h
 677+ 8C0A 4D               ld c,l
 678+ 8C0B 2A 31 86         ld hl,(Stack_snapshot_disparos)
 679+ 8C0E E5               push hl
 680+ 8C0F A7               and a
 681+ 8C10 ED 42            sbc hl,bc
 682+ 8C12 E5               push hl
 683+ 8C13 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 8C14
 685+ 8C14 E1               pop hl
 686+ 8C15 54               ld d,h
 687+ 8C16 5D               ld e,l
 688+ 8C17 1B               dec de
 689+ 8C18 ED B8            lddr                                                ; Limpiamos.
 690+ 8C1A
 691+ 8C1A 21 60 70         ld hl,Album_de_fotos_disparos
 692+ 8C1D 22 31 86         ld (Stack_snapshot_disparos),hl
 693+ 8C20
 694+ 8C20 C9               ret
 695+ 8C21
 696+ 8C21              ; -------------------------------------------------------------------------------------------------------------
 697+ 8C21              ;
 698+ 8C21              ;   28/03/23
 699+ 8C21              ;
 700+ 8C21
 701+ 8C21 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 702+ 8C24 2A 36 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 8C27
 704+ 8C27 CD 63 88     2 call Extrae_address
 705+ 8C2A 7E               ld a,(hl)
 706+ 8C2B A7               and a
 707+ 8C2C 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 8C2E
 709+ 8C2E              ; ----- ----- ----- ----- ----- -----
 710+ 8C2E
 711+ 8C2E C5               push bc
 712+ 8C2F CD EB 8C         call foto_disparo_a_borrar
 713+ 8C32
 714+ 8C32              ; Existe colisión con este disparo???
 715+ 8C32
 716+ 8C32 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 8C33 7E               ld a,(hl)
 718+ 8C34 2B               dec hl
 719+ 8C35 E6 01            and 1
 720+ 8C37 28 1D            jr z,9F
 721+ 8C39
 722+ 8C39              ;   En este punto:
 723+ 8C39              ;
 724+ 8C39              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 8C39              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 8C39              ;   _con la entidad).
 727+ 8C39              ;
 728+ 8C39              ;   Disparo_2A defw 0                                ; Control.
 729+ 8C39              ;    defw 0                                          ; Puntero objeto.
 730+ 8C39              ;    defw 0                                          ; Puntero de impresión.
 731+ 8C39              ;    defw 0                                          ; Rutina de impresión.
 732+ 8C39
 733+ 8C39 E5               push hl
 734+ 8C3A
 735+ 8C3A 06 04            ld b,4
 736+ 8C3C 23           19 inc hl
 737+ 8C3D 10 FD            djnz 19B
 738+ 8C3F
 739+ 8C3F CD 63 88         call Extrae_address
 740+ 8C42 CD E8 96         call Genera_coordenadas_disparo
 741+ 8C45
 742+ 8C45              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 8C45
 744+ 8C45 21 3B 86         ld hl,Coordenadas_disparo_certero
 745+ 8C48 72               ld (hl),d
 746+ 8C49 23               inc hl
 747+ 8C4A 73               ld (hl),e
 748+ 8C4B
 749+ 8C4B              ; Elimino el disparo de la base de datos.
 750+ 8C4B
 751+ 8C4B E1               pop hl
 752+ 8C4C CD 67 8D         call Elimina_disparo_de_base_de_datos
 753+ 8C4F 21 38 86         ld hl,Impacto2
 754+ 8C52 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 755+ 8C54
 756+ 8C54 18 06            jr 11F
 757+ 8C56
 758+ 8C56 CD 14 8D     9 call Mueve_disparo
 759+ 8C59 CD EB 8C         call foto_disparo_a_borrar
 760+ 8C5C
 761+ 8C5C C1           11 pop bc
 762+ 8C5D 18 04            jr 7F
 763+ 8C5F
 764+ 8C5F              ; ----- ----- ----- ----- ----- -----
 765+ 8C5F
 766+ 8C5F ED 42        1 sbc hl,bc
 767+ 8C61 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 8C63 2A 36 86     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8C66 23               inc hl
 770+ 8C67 23               inc hl
 771+ 8C68 22 36 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8C6B 18 BA            jr 2B
 773+ 8C6D CD 2C 88     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8C70
 775+ 8C70 01 66 84         ld bc,Disparo_11
 776+ 8C73 2A 34 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8C76
 778+ 8C76 CD 63 88     5 call Extrae_address
 779+ 8C79 7E               ld a,(hl)
 780+ 8C7A A7               and a
 781+ 8C7B 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8C7D
 783+ 8C7D              ; ----- ----- ----- ----- ----- -----
 784+ 8C7D
 785+ 8C7D C5               push bc
 786+ 8C7E CD EB 8C         call foto_disparo_a_borrar
 787+ 8C81
 788+ 8C81              ; Existe colisión con este disparo???
 789+ 8C81
 790+ 8C81 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8C82 7E               ld a,(hl)
 792+ 8C83 2B               dec hl
 793+ 8C84 E6 01            and 1
 794+ 8C86 28 48            jr z,10F
 795+ 8C88
 796+ 8C88              ; La colisión se produce con Amadeus???
 797+ 8C88              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8C88
 799+ 8C88 E5               push hl
 800+ 8C89
 801+ 8C89 06 04            ld b,4
 802+ 8C8B 23           16 inc hl
 803+ 8C8C 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8C8E CD 63 88         call Extrae_address
 805+ 8C91 CD E8 96         call Genera_coordenadas_disparo
 806+ 8C94
 807+ 8C94 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8C95 FE 16            cp $16
 809+ 8C97 38 22            jr c,15F
 810+ 8C99
 811+ 8C99              ; (Colisiones en filas 16 y 17).
 812+ 8C99
 813+ 8C99 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8C9A
 815+ 8C9A              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8C9A
 817+ 8C9A 21 7C 84         ld hl,Amadeus_db+6
 818+ 8C9D 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8C9E 23               inc hl
 820+ 8C9F 23               inc hl
 821+ 8CA0 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8CA1 21 8A 84         ld hl,Amadeus_db+20
 823+ 8CA4 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8CA5 21 3D 86         ld hl,Coordenadas_X_Amadeus
 825+ 8CA8 CD 72 8D         call Guarda_coordenadas_X
 826+ 8CAB
 827+ 8CAB D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8CAC
 829+ 8CAC              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8CAC
 831+ 8CAC 06 03            ld b,3
 832+ 8CAE 21 3D 86         ld hl,Coordenadas_X_Amadeus
 833+ 8CB1 7E           18 ld a,(hl)
 834+ 8CB2 BA               cp d
 835+ 8CB3 20 03            jr nz,17F
 836+ 8CB5
 837+ 8CB5              ; Colisión Amadeus !!!!!!!!!!
 838+ 8CB5
 839+ 8CB5 E1               pop hl
 840+ 8CB6 18 09            jr 14F
 841+ 8CB8
 842+ 8CB8 23           17 inc hl
 843+ 8CB9 10 F6            djnz 18B
 844+ 8CBB
 845+ 8CBB              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8CBB              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8CBB
 848+ 8CBB E1           15 pop hl
 849+ 8CBC 23               inc hl
 850+ 8CBD 35               dec (hl)
 851+ 8CBE 2B               dec hl
 852+ 8CBF 18 0F            jr 10F
 853+ 8CC1
 854+ 8CC1              ; -----------------------debug
 855+ 8CC1
 856+ 8CC1              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8CC1              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8CC1
 859+ 8CC1 E5           14 push hl
 860+ 8CC2 CD 67 8D         call Elimina_disparo_de_base_de_datos
 861+ 8CC5 21 38 86         ld hl,Impacto2
 862+ 8CC8 CB CE            set 1,(hl)
 863+ 8CCA CD B1 8D         call Limpia_Coordenadas_X
 864+ 8CCD
 865+ 8CCD E1               pop hl
 866+ 8CCE 18 06            jr 12F
 867+ 8CD0
 868+ 8CD0 CD 14 8D     10 call Mueve_disparo
 869+ 8CD3 CD EB 8C         call foto_disparo_a_borrar
 870+ 8CD6 C1           12 pop bc
 871+ 8CD7
 872+ 8CD7 18 04            jr 8F
 873+ 8CD9
 874+ 8CD9              ; ----- ----- ----- ----- ----- -----
 875+ 8CD9
 876+ 8CD9 ED 42        4 sbc hl,bc
 877+ 8CDB 28 0A            jr z,6F
 878+ 8CDD
 879+ 8CDD 2A 34 86     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8CE0 23               inc hl
 881+ 8CE1 23               inc hl
 882+ 8CE2 22 34 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8CE5 18 8F            jr 5B
 884+ 8CE7
 885+ 8CE7 CD 25 88     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8CEA C9               ret
 887+ 8CEB
 888+ 8CEB              ; ------------------------------------------------------------------
 889+ 8CEB
 890+ 8CEB              foto_disparo_a_borrar
 891+ 8CEB
 892+ 8CEB 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8CEC A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8CED C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8CEE
 896+ 8CEE E5               push hl
 897+ 8CEF 23               inc hl
 898+ 8CF0 23               inc hl
 899+ 8CF1 ED 73 2B 86      ld (Stack),sp
 900+ 8CF5 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8CF6 FD E1            pop iy
 902+ 8CF8 DD E1            pop ix
 903+ 8CFA E1               pop hl
 904+ 8CFB ED 7B 2B 86      ld sp,(Stack)
 905+ 8CFF 3A 21 86         ld a,(Ctrl_1)
 906+ 8D02 CB C7            set 0,a
 907+ 8D04 32 21 86         ld (Ctrl_1),a
 908+ 8D07 CD A0 7F         call Guarda_foto_registros
 909+ 8D0A 3A 21 86         ld a,(Ctrl_1)
 910+ 8D0D CB 87            res 0,a
 911+ 8D0F 32 21 86         ld (Ctrl_1),a
 912+ 8D12 E1               pop hl
 913+ 8D13 C9               ret
 914+ 8D14
 915+ 8D14 E5           Mueve_disparo push hl
 916+ 8D15 7E               ld a,(hl)
 917+ 8D16 06 04            ld b,4
 918+ 8D18 23           1 inc hl
 919+ 8D19 10 FD            djnz 1B
 920+ 8D1B
 921+ 8D1B              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8D1B
 923+ 8D1B CD 63 88         call Extrae_address
 924+ 8D1E
 925+ 8D1E E6 01            and 1
 926+ 8D20 28 2B            jr z,2F
 927+ 8D22
 928+ 8D22              ; Disparo hacia arriba, (Amadeus).
 929+ 8D22
 930+ 8D22              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8D22              ; _ de la dificultad.
 932+ 8D22
 933+ 8D22 CD E0 90         call PreviousScan
 934+ 8D25 CD E0 90         call PreviousScan
 935+ 8D28 CD E0 90         call PreviousScan
 936+ 8D2B
 937+ 8D2B              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8D2B
 939+ 8D2B 7C               ld a,h
 940+ 8D2C FE 40            cp $40
 941+ 8D2E 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8D30
 943+ 8D30              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8D30
 945+ 8D30 EB               ex de,hl
 946+ 8D31 06 04            ld b,4
 947+ 8D33 2B           6 dec hl
 948+ 8D34 10 FD            djnz 6B
 949+ 8D36
 950+ 8D36 CD 67 8D         call Elimina_disparo_de_base_de_datos
 951+ 8D39 E1               pop hl
 952+ 8D3A 18 10            jr 7F
 953+ 8D3C
 954+ 8D3C              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8D3C
 956+ 8D3C D5           3 push de
 957+ 8D3D C5               push bc
 958+ 8D3E
 959+ 8D3E CD 21 8B         call Comprueba_Colision
 960+ 8D41
 961+ 8D41              ; B="$80", no hay colisión. B="$81", existe colisión.
 962+ 8D41
 963+ 8D41 78               ld a,b
 964+ 8D42
 965+ 8D42 C1               pop bc
 966+ 8D43 D1               pop de
 967+ 8D44
 968+ 8D44 EB               ex de,hl
 969+ 8D45
 970+ 8D45 73               ld (hl),e
 971+ 8D46 23               inc hl
 972+ 8D47 72               ld (hl),d
 973+ 8D48
 974+ 8D48 E1           4 pop hl
 975+ 8D49 23               inc hl
 976+ 8D4A 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 977+ 8D4B 2B               dec hl
 978+ 8D4C C9           7 ret
 979+ 8D4D
 980+ 8D4D              ; Disparo hacia abajo, (Entidad).
 981+ 8D4D
 982+ 8D4D              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 983+ 8D4D              ; _ de la dificultad.
 984+ 8D4D
 985+ 8D4D CD D1 90     2 call NextScan
 986+ 8D50 CD D1 90         call NextScan
 987+ 8D53 CD D1 90         call NextScan
 988+ 8D56
 989+ 8D56              ; Detecta si el disparo de la entidad sale de la pantalla.
 990+ 8D56
 991+ 8D56 7C               ld a,h
 992+ 8D57 FE 58            cp $58
 993+ 8D59 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 994+ 8D5B
 995+ 8D5B EB               ex de,hl
 996+ 8D5C 06 04            ld b,4
 997+ 8D5E 2B           5 dec hl
 998+ 8D5F 10 FD            djnz 5B
 999+ 8D61
1000+ 8D61 CD 67 8D         call Elimina_disparo_de_base_de_datos
1001+ 8D64 E1               pop hl
1002+ 8D65 18 E5            jr 7B
1003+ 8D67
1004+ 8D67              ; HL apunta al primer byte de la base de datos del disparo.
1005+ 8D67
1006+ 8D67 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1007+ 8D6A AF               xor a
1008+ 8D6B 77               ld (hl),a
1009+ 8D6C 54               ld d,h
1010+ 8D6D 5D               ld e,l
1011+ 8D6E 13               inc de
1012+ 8D6F ED B0            ldir
1013+ 8D71 C9               ret
1014+ 8D72
1015+ 8D72              ; -----------------------------------------------------------------
1016+ 8D72              ;
1017+ 8D72              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1018+ 8D72              ;
1019+ 8D72              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1020+ 8D72              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1021+ 8D72              ;
1022+ 8D72              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1023+ 8D72              ;
1024+ 8D72              ;   INPUTS:
1025+ 8D72              ;
1026+ 8D72              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1027+ 8D72              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1028+ 8D72              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1029+ 8D72
1030+ 8D72              ;   MODIFICA: A, HL, DE y C
1031+ 8D72
1032+ 8D72 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1033+ 8D73 79               ld a,c
1034+ 8D74 E6 01            and 1
1035+ 8D76 20 03            jr nz,1F
1036+ 8D78 14               inc d
1037+ 8D79 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1038+ 8D7B
1039+ 8D7B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1040+ 8D7B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1041+ 8D7B
1042+ 8D7B 15           1 dec d
1043+ 8D7C 23           2 inc hl
1044+ 8D7D 72               ld (hl),d
1045+ 8D7E
1046+ 8D7E 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1047+ 8D7F A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1048+ 8D80 C8               ret z
1049+ 8D81
1050+ 8D81 AF               xor a
1051+ 8D82 5F               ld e,a
1052+ 8D83 18 ED            jr Guarda_coordenadas_X
1053+ 8D85
1054+ 8D85              ; -----------------------------------------------------------------
1055+ 8D85              ;
1056+ 8D85              ;   12/04/23
1057+ 8D85              ;
1058+ 8D85
1059+ 8D85 3A 38 86     Selector_de_impactos ld a,(Impacto2)
1060+ 8D88 A7               and a
1061+ 8D89 C8               ret z
1062+ 8D8A
1063+ 8D8A FE 04            cp 4
1064+ 8D8C 20 09            jr nz,1F
1065+ 8D8E
1066+ 8D8E
1067+ 8D8E              ; La colisión se produce por contacto entre Amadeus y una entidad.
1068+ 8D8E
1069+ 8D8E CD B2 8B         call Detecta_colision_nave_entidad
1070+ 8D91
1071+ 8D91 21 38 86         ld hl,Impacto2
1072+ 8D94 CB 5E            bit 3,(hl)
1073+ 8D96 C0               ret nz                                               ; Existe colisión, RET.
1074+ 8D97
1075+ 8D97              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1076+ 8D97              ; Primero analizamos si algún disparo impacta en Amadeus.
1077+ 8D97
1078+ 8D97 21 38 86     1 ld hl,Impacto2
1079+ 8D9A CB 4E            bit 1,(hl)
1080+ 8D9C 28 07            jr z,2F
1081+ 8D9E
1082+ 8D9E 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1083+ 8DA1 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1084+ 8DA3 18 0B            jr 3F
1085+ 8DA5
1086+ 8DA5 21 38 86     2 ld hl,Impacto2
1087+ 8DA8 CB 46            bit 0,(hl)
1088+ 8DAA C8               ret z
1089+ 8DAB
1090+ 8DAB              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1091+ 8DAB
1092+ 8DAB 21 21 86         ld hl,Ctrl_1
1093+ 8DAE CB D6            set 2,(hl)
1094+ 8DB0
1095+ 8DB0 C9           3 ret
1096+ 8DB1
1097+ 8DB1              ; -----------------------------------------------------------------
1098+ 8DB1              ;
1099+ 8DB1              ;   16/04/23
1100+ 8DB1              ;
1101+ 8DB1
1102+ 8DB1 AF           Limpia_Coordenadas_X xor a
1103+ 8DB2 06 06            ld b,6
1104+ 8DB4 21 3D 86         ld hl,Coordenadas_X_Amadeus
1105+ 8DB7 77           1 ld (hl),a
1106+ 8DB8 23               inc hl
1107+ 8DB9 10 FC            djnz 1B
1108+ 8DBB C9               ret
1109+ 8DBC
1110+ 8DBC              ; -----------------------------------------------------------------
1111+ 8DBC              ;
1112+ 8DBC              ;   25/04/23
1113+ 8DBC              ;
1114+ 8DBC
1115+ 8DBC              Determina_resultado_comparativa
1116+ 8DBC
1117+ 8DBC              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1118+ 8DBC              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1119+ 8DBC              ;
1120+ 8DBC              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1121+ 8DBC              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1122+ 8DBC              ;
1123+ 8DBC              ;   SBC HL,DE
1124+ 8DBC
1125+ 8DBC 7C               ld a,h
1126+ 8DBD 06 00            ld b,0
1127+ 8DBF
1128+ 8DBF CD CF 8D         call Compara_cositas
1129+ 8DC2
1130+ 8DC2 04               inc b
1131+ 8DC3 05               dec b
1132+ 8DC4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1133+ 8DC5
1134+ 8DC5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1135+ 8DC6 06 00            ld b,0
1136+ 8DC8
1137+ 8DC8 CD CF 8D         call Compara_cositas
1138+ 8DCB 18 01            jr 2F
1139+ 8DCD
1140+ 8DCD 04           1 inc b
1141+ 8DCE C9           2 ret
1142+ 8DCF
1143+ 8DCF A7           Compara_cositas and a
1144+ 8DD0 28 17            jr z,1F
1145+ 8DD2
1146+ 8DD2 FE FD            cp $fd
1147+ 8DD4 28 13            jr z,1F
1148+ 8DD6 FE FE            cp $fe
1149+ 8DD8 28 0F            jr z,1F
1150+ 8DDA FE FF            cp $ff
1151+ 8DDC 28 0B            jr z,1F
1152+ 8DDE FE 01            cp $01
1153+ 8DE0 28 07            jr z,1F
1154+ 8DE2 FE 02            cp $02
1155+ 8DE4 28 03            jr z,1F
1156+ 8DE6 FE 03            cp $03
1157+ 8DE8 C0               ret nz
1158+ 8DE9
1159+ 8DE9 04           1 inc b
1160+ 8DEA C9               ret
1161+ 8DEB
# file closed: Disparo.asm
1089  8DEB              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8DEB              ; ******************************************************************************************************************************************************************************************
   2+ 8DEB              ;
   3+ 8DEB              ; 01/23
   4+ 8DEB              ;
   5+ 8DEB              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8DEB
   7+ 8DEB CD C5 90     Draw call Prepara_draw
   8+ 8DEE 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8DEF A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8DF0 28 05        	jr z,2F
  11+ 8DF2
  12+ 8DF2 3A F8 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8DF5 18 0C        	jr 1F
  14+ 8DF7 2A F6 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8DFA 22 E6 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8DFD CD 8C 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8E00              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8E00 CD 0B 98     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8E03 3A 12 86     1 ld a,(Ctrl_0)
  20+ 8E06 CB 6F        	bit 5,a
  21+ 8E08 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8E0A
  23+ 8E0A CD 22 8E     	call Comprueba_limite_horizontal
  24+ 8E0D CD B2 8E     	call Comprueba_limite_vertical
  25+ 8E10
  26+ 8E10              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8E10
  28+ 8E10 CD FF 8F     3 call calcula_CColumnass
  29+ 8E13 CD 36 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8E16 CD 8B 90     	call Define_rutina_de_impresion
  31+ 8E19
  32+ 8E19 3A 12 86     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8E1C CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8E1E 32 12 86     	ld (Ctrl_0),a
  35+ 8E21
  36+ 8E21 C9           	ret
  37+ 8E22
  38+ 8E22              ; *******************************************************************************************************************************************************************************************
  39+ 8E22              ;	21/01/23
  40+ 8E22              ;
  41+ 8E22              ; 	Comprueba_limite_horizontal.
  42+ 8E22              ;
  43+ 8E22              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8E22              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8E22              ;
  46+ 8E22              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8E22              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8E22              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8E22              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8E22
  51+ 8E22
  52+ 8E22
  53+ 8E22 3A 12 86     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8E25 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8E27 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8E29 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8E2B 32 12 86     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8E2E 18 09            jr 6F
  59+ 8E30 CB 5F        1 bit 3,a
  60+ 8E32 28 0A            jr z,2F
  61+ 8E34 E6 F7            and $f7
  62+ 8E36 32 12 86         ld (Ctrl_0),a
  63+ 8E39 CD 8C 8F     6 call Inicializacion
  64+ 8E3C 18 5B            jr 5F
  65+ 8E3E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8E3F
  67+ 8E3F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8E3F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8E3F
  70+ 8E3F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8E40 2A 1D 86     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8E43 CD 91 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8E46 67           	ld h,a
  74+ 8E47 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8E48 CD 91 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8E4B 67           	ld h,a
  77+ 8E4C A7           	and a
  78+ 8E4D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8E4F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8E50 3A F8 85     	ld a,(Cuad_objeto)
  81+ 8E53 FE 02        	cp 2
  82+ 8E55 38 1E        	jr c,3F
  83+ 8E57 28 1C        	jr z,3F
  84+ 8E59 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8E5A 28 23            jr z,7F
  86+ 8E5C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8E5E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8E60 E1           	pop hl
  89+ 8E61
  90+ 8E61              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8E61              ; _para indicar con E="2" en caso necesario.
  92+ 8E61
  93+ 8E61 E5               push hl
  94+ 8E62 C5               push bc
  95+ 8E63 CD 91 93     	call calcula_tercio
  96+ 8E66 FE 01        	cp 1
  97+ 8E68 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8E6A CD 9A 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E6D 28 26            jr z,9F
 100+ 8E6F 38 24            jr c,9F
 101+ 8E71 1E 00        11 ld e,0
 102+ 8E73 18 22            jr 8F
 103+ 8E75 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E76 28 07        	jr z, 7F
 105+ 8E78 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E7A 1E 00         	ld e,0
 107+ 8E7C E1           	pop hl
 108+ 8E7D 18 04        	jr 4F
 109+ 8E7F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E81 18 15            jr 10F
 111+ 8E83
 112+ 8E83              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E83              ; _para indicar con E="2" en caso necesario.
 114+ 8E83
 115+ 8E83 E5           4 push hl
 116+ 8E84 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E85 CD 91 93     	call calcula_tercio
 118+ 8E88 FE 01        	cp 1
 119+ 8E8A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E8C CD 9A 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E8F 28 04            jr z,9F
 122+ 8E91 30 02            jr nc,9F
 123+ 8E93 18 02        	jr 8F
 124+ 8E95 1E 02        9 ld e,2
 125+ 8E97 C1           8 pop bc
 126+ 8E98 E1           10 pop hl
 127+ 8E99 C9           5 ret
 128+ 8E9A
 129+ 8E9A              ; --------------------
 130+ 8E9A              ;
 131+ 8E9A              ; 25/08/22
 132+ 8E9A
 133+ 8E9A CD 91 93     Comprueba_centro call calcula_tercio
 134+ 8E9D 67               ld h,a
 135+ 8E9E 08           	ex af,af
 136+ 8E9F FE 02        	cp 2
 137+ 8EA1 38 07        	jr c,1F
 138+ 8EA3 28 05        	jr z,1F
 139+ 8EA5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8EA8 18 03        	jr 2F
 141+ 8EAA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8EAD 08           2 ex af,af
 143+ 8EAE A7               and a
 144+ 8EAF ED 42            sbc hl,bc
 145+ 8EB1 C9               ret
 146+ 8EB2
 147+ 8EB2              ; *********************************************************************************************************************************************************************************************
 148+ 8EB2              ;
 149+ 8EB2              ;   16/8/22
 150+ 8EB2              ;
 151+ 8EB2              ;	Comprueba_limite_vertical
 152+ 8EB2              ;
 153+ 8EB2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8EB2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8EB2              ;
 156+ 8EB2
 157+ 8EB2 2A E6 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8EB5 7D           	ld a,l
 159+ 8EB6 E6 1F        	and $1F
 160+ 8EB8 57           	ld d,a
 161+ 8EB9 3A 1F 86     	ld a,(Limite_vertical)
 162+ 8EBC BA           	cp d 											; Límite - Posición.
 163+ 8EBD 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8EBE 3A F8 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8EC1 CB 47        	bit 0,a
 166+ 8EC3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8EC5
 168+ 8EC5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8EC5
 170+ 8EC5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8EC6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8EC8
 173+ 8EC8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8EC8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8EC8
 176+ 8EC8 3A EA 85         ld a,(Coordenada_X)
 177+ 8ECB 16 0F            ld d,Centro_izquierda
 178+ 8ECD A7               and a
 179+ 8ECE 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8ECF 28 1E            jr z,3F
 181+ 8ED1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8ED3              ;                                                    ; _salimos sin modificar nada.
 183+ 8ED3 18 0E            jr 2F
 184+ 8ED5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8ED6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8ED8
 187+ 8ED8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8ED8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8ED8
 190+ 8ED8 3A EA 85         ld a,(Coordenada_X)
 191+ 8EDB 16 10            ld d,Centro_derecha
 192+ 8EDD A7               and a
 193+ 8EDE 92               sub d
 194+ 8EDF 28 0E            jr z,3F
 195+ 8EE1 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8EE3              ;                                                    ; _salimos sin modificar nada.
 197+ 8EE3 CB 43        2 bit 0,e
 198+ 8EE5 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8EE7 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8EE8 CD 7C 8F         call Modificaccionne
 201+ 8EEB C1           	pop bc
 202+ 8EEC CD 8C 8F         call Inicializacion
 203+ 8EEF C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8EF0
 205+ 8EF0              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8EF0
 207+ 8EF0 C5           4 push bc
 208+ 8EF1 01 E5 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8EF4 0A           	ld a,(bc)
 210+ 8EF5 3D           	dec a
 211+ 8EF6 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8EF7 7D           	ld a,l
 213+ 8EF8 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8EF9 CB 47        	bit 0,a
 215+ 8EFB 28 03        	jr z,5F
 216+ 8EFD 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8EFE 18 2E        	jr 7F
 218+ 8F00
 219+ 8F00              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8F00
 221+ 8F00 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8F01 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8F02 3A 12 86     	ld a,(Ctrl_0)
 224+ 8F05 CB 4F        	bit 1,a
 225+ 8F07 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8F09 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8F0A
 228+ 8F0A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8F0A
 230+ 8F0A 1C               inc e
 231+ 8F0B 1D               dec e
 232+ 8F0C 20 07            jr nz,12F
 233+ 8F0E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8F0F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8F10 22 E6 85     	ld (Posicion_actual),hl
 236+ 8F13 18 44        13 jr 9F
 237+ 8F15 CB 43        12 bit 0,e
 238+ 8F17 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8F19              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8F19 C1           	pop bc
 241+ 8F1A 18 D3        	jr 3B
 242+ 8F1C 80           14 add b
 243+ 8F1D 6F               ld l,a
 244+ 8F1E 22 E6 85     	ld (Posicion_actual),hl
 245+ 8F21 CD 7C 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8F24 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8F26 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8F28 32 12 86         ld (Ctrl_0),a
 249+ 8F2B F1           	pop af
 250+ 8F2C 18 2B        	jr 9F
 251+ 8F2E
 252+ 8F2E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8F2E
 254+ 8F2E F5           7 push af
 255+ 8F2F 3A 12 86     	ld a,(Ctrl_0)
 256+ 8F32 CB 47        	bit 0,a
 257+ 8F34 20 1D        	jr nz,8F
 258+ 8F36 F1           	pop af
 259+ 8F37
 260+ 8F37              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8F37
 262+ 8F37 1C           	inc e
 263+ 8F38 1D               dec e
 264+ 8F39 20 07            jr nz,10F
 265+ 8F3B 90           	sub b
 266+ 8F3C 6F               ld l,a
 267+ 8F3D 22 E6 85     	ld (Posicion_actual),hl
 268+ 8F40 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8F42              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8F42 CB 43        10 bit 0,e
 271+ 8F44 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8F46              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8F46 C1           	pop bc
 274+ 8F47 18 A6        	jr 3B
 275+ 8F49 90           16 sub b
 276+ 8F4A 6F               ld l,a
 277+ 8F4B 22 E6 85     	ld (Posicion_actual),hl
 278+ 8F4E CD 7C 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8F51 18 06            jr 9F
 280+ 8F53 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8F55 32 12 86         ld (Ctrl_0),a
 282+ 8F58 F1           	pop af
 283+ 8F59 C1           9 pop bc
 284+ 8F5A 1E 00        	ld e,0
 285+ 8F5C CD 8C 8F         call Inicializacion
 286+ 8F5F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8F60 08           	ex af,af
 288+ 8F61 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8F62 18 8B            jr 3B
 290+ 8F64
 291+ 8F64              ; --------------------
 292+ 8F64
 293+ 8F64 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8F66 CD E0 90     1 call PreviousScan
 295+ 8F69 10 FB            djnz 1B
 296+ 8F6B 22 E6 85     	ld (Posicion_actual),hl
 297+ 8F6E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F6F C9           	ret
 299+ 8F70
 300+ 8F70              ; --------------------
 301+ 8F70
 302+ 8F70 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F72 CD D1 90     1 call NextScan
 304+ 8F75 10 FB            djnz 1B
 305+ 8F77 22 E6 85     	ld (Posicion_actual),hl
 306+ 8F7A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F7B C9           	ret
 308+ 8F7C
 309+ 8F7C              ; --------------------
 310+ 8F7C              ;
 311+ 8F7C              ;	22/01/23
 312+ 8F7C              ;
 313+ 8F7C              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F7C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F7C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F7C
 317+ 8F7C
 318+ 8F7C              Modificaccionne
 319+ 8F7C
 320+ 8F7C 3A F8 85     	ld a,(Cuad_objeto)
 321+ 8F7F FE 02        	cp 2
 322+ 8F81 CC 64 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F84 DC 64 8F         call c,Modifica_Pos_actual
 324+ 8F87 C8           	ret z
 325+ 8F88 CD 70 8F         call Modifica_Pos_actual2
 326+ 8F8B C9               ret
 327+ 8F8C
 328+ 8F8C              ; *************************************************************************************************************************************************************************************************
 329+ 8F8C              ;
 330+ 8F8C              ;	13/8/22
 331+ 8F8C              ;
 332+ 8F8C              ;	Inicializacion
 333+ 8F8C              ;
 334+ 8F8C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F8C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F8C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F8C              ;
 338+ 8F8C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F8C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F8C              ;	_ desaparece/aparece.
 341+ 8F8C
 342+ 8F8C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F8C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F8C              ;
 345+ 8F8C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F8C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F8C              ; 		   [E] ="0"
 348+ 8F8C
 349+ 8F8C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F8C
 351+ 8F8C CD 91 93     Inicializacion call calcula_tercio
 352+ 8F8F 28 36        	jr z,primit
 353+ 8F91 E6 02        	and 2
 354+ 8F93 20 07        	jr nz,segmit
 355+ 8F95 7D           	ld a,l
 356+ 8F96 FE 7F        	cp $7f
 357+ 8F98 38 2D        	jr c,primit
 358+ 8F9A 28 2B        	jr z,primit
 359+ 8F9C CD F9 8F     segmit call column
 360+ 8F9F 38 13        	jr c,tercuad
 361+ 8FA1 3E 04        cuarcuad ld a,4
 362+ 8FA3 32 F8 85     	ld (Cuad_objeto),a
 363+ 8FA6 21 20 48     	ld hl,$4820
 364+ 8FA9 22 1D 86     	ld (Limite_horizontal),hl
 365+ 8FAC 21 1F 86     	ld hl,Limite_vertical
 366+ 8FAF 36 0D        	ld (hl),$0d
 367+ 8FB1 08           	ex af,af
 368+ 8FB2 18 3C        	jr 1F
 369+ 8FB4              tercuad
 370+ 8FB4 3E 03        	ld a,3
 371+ 8FB6 32 F8 85     	ld (Cuad_objeto),a
 372+ 8FB9 21 20 48     	ld hl,$4820
 373+ 8FBC 22 1D 86     	ld (Limite_horizontal),hl
 374+ 8FBF 21 1F 86     	ld hl,Limite_vertical
 375+ 8FC2 36 12        	ld (hl),$12
 376+ 8FC4 08           	ex af,af
 377+ 8FC5 18 29        	jr 1F
 378+ 8FC7 CD F9 8F     primit call column
 379+ 8FCA 38 13        	jr c, primcuad
 380+ 8FCC              segcuad
 381+ 8FCC 3E 02        	ld a,2
 382+ 8FCE 32 F8 85     	ld (Cuad_objeto),a
 383+ 8FD1 21 C0 4F     	ld hl,$4fc0
 384+ 8FD4 22 1D 86     	ld (Limite_horizontal),hl
 385+ 8FD7 21 1F 86     	ld hl,Limite_vertical
 386+ 8FDA 36 0D        	ld (hl),$0d
 387+ 8FDC 08           	ex af,af
 388+ 8FDD 18 11        	jr 1F
 389+ 8FDF              primcuad
 390+ 8FDF 3E 01        	ld a,1
 391+ 8FE1 32 F8 85     	ld (Cuad_objeto),a
 392+ 8FE4 21 C0 4F     	ld hl,$4fc0
 393+ 8FE7 22 1D 86     	ld (Limite_horizontal),hl
 394+ 8FEA 21 1F 86     	ld hl,Limite_vertical
 395+ 8FED 36 12        	ld (hl),$12
 396+ 8FEF 08           	ex af,af
 397+ 8FF0 CD BD 96     1 call Genera_coordenadas
 398+ 8FF3 21 12 86     	ld hl,Ctrl_0
 399+ 8FF6 CB EE        	set 5,(hl)
 400+ 8FF8 C9           	ret
 401+ 8FF9
 402+ 8FF9              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8FF9
 404+ 8FF9              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8FF9              ;
 406+ 8FF9              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8FF9
 408+ 8FF9 7D           column ld a,l
 409+ 8FFA E6 1F        	and $1f
 410+ 8FFC FE 10         	cp $10
 411+ 8FFE C9            	ret
 412+ 8FFF
 413+ 8FFF              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8FFF              ;
 415+ 8FFF              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8FFF              ;
 417+ 8FFF              ; 14/12/22
 418+ 8FFF              ;
 419+ 8FFF              ;	Modifica: A y BC.
 420+ 8FFF
 421+ 8FFF 3A F8 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9002 E6 01        	and 1
 423+ 9004 28 17        	jr z,1F
 424+ 9006
 425+ 9006              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9006
 427+ 9006 3A EA 85     	ld a,(Coordenada_X)
 428+ 9009 47           	ld b,a
 429+ 900A 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 900B 79           	ld a,c
 431+ 900C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 900D 38 08        	jr c,2F
 433+ 900F 47           	ld b,a
 434+ 9010 79           	ld a,c
 435+ 9011 90           	sub b
 436+ 9012 32 1C 86     	ld (Columnas),a
 437+ 9015 18 1B        	jr 4F
 438+ 9017 79           2 ld a,c
 439+ 9018 32 1C 86     	ld (Columnas),a
 440+ 901B 18 15        	jr 4F
 441+ 901D
 442+ 901D              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 901D
 444+ 901D 3A EA 85     1 ld a,(Coordenada_X)
 445+ 9020 81           	add c
 446+ 9021 3D           	dec a
 447+ 9022 D6 1F        	sub $1f
 448+ 9024 38 08        	jr c,3F
 449+ 9026 47           	ld b,a
 450+ 9027 79           	ld a,c
 451+ 9028 90           	sub b
 452+ 9029 32 1C 86     	ld (Columnas),a
 453+ 902C 18 04        	jr 4F
 454+ 902E 79           3 ld a,c
 455+ 902F 32 1C 86     	ld (Columnas),a
 456+ 9032 D9           4 exx
 457+ 9033 4F           	ld c,a
 458+ 9034 D9           	exx
 459+ 9035 C9            ret
 460+ 9036
 461+ 9036              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9036              ;
 463+ 9036              ; 7/1/23
 464+ 9036              ;
 465+ 9036              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9036              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9036              ;
 468+ 9036              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9036              ;	DESTRUYE: HL,B Y A.
 470+ 9036
 471+ 9036 3A F8 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9039 FE 02        	cp 2
 473+ 903B 38 18        	jr c,1F
 474+ 903D 28 16        	jr z,1F
 475+ 903F E6 01        	and 1
 476+ 9041 28 0D        	jr z,3F
 477+ 9043
 478+ 9043              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9043
 480+ 9043 CD 7F 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9046
 482+ 9046 7D           9 ld a,l
 483+ 9047 E6 1F        	and $1f
 484+ 9049 28 2A        	jr z,7F
 485+ 904B 2B           	dec hl
 486+ 904C 10 F8        	djnz 9B
 487+ 904E 18 25        	jr 7F
 488+ 9050
 489+ 9050              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9050
 491+ 9050 2A E6 85     3 ld hl,(Posicion_actual)
 492+ 9053 18 20        	jr 7F
 493+ 9055
 494+ 9055 28 14        1 jr z,2F
 495+ 9057
 496+ 9057              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9057
 498+ 9057 CD 7F 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 905A 7D           4 ld a,l
 500+ 905B E6 1F        	and $1f
 501+ 905D 28 03        	jr z,6F
 502+ 905F 2B           	dec hl
 503+ 9060 10 F8        	djnz 4B
 504+ 9062 06 0F        6 ld b,15
 505+ 9064 CD E0 90     5 call PreviousScan
 506+ 9067 10 FB        	djnz 5B
 507+ 9069 18 0A        	jr 7F
 508+ 906B
 509+ 906B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 906B
 511+ 906B CD 7F 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 906E 06 0F        	ld b,15
 513+ 9070 CD E0 90     8 call PreviousScan
 514+ 9073 10 FB        	djnz 8B
 515+ 9075
 516+ 9075 E5           7 push hl
 517+ 9076 DD E1        	pop ix
 518+ 9078
 519+ 9078 2A E8 85     	ld hl,(Puntero_objeto)
 520+ 907B E5           	push hl
 521+ 907C FD E1        	pop iy
 522+ 907E
 523+ 907E C9           	ret
 524+ 907F
 525+ 907F              ; --------------------------------------------------------------------------------------------------------------------
 526+ 907F              ;
 527+ 907F              ;	2/1/23
 528+ 907F              ;
 529+ 907F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 907F              ;
 531+ 907F              ;	Tras esta rutina tenemos:
 532+ 907F              ;
 533+ 907F              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 907F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 907F              ;
 536+ 907F              ;	DESTRUYE!!!!! HL,B y A.
 537+ 907F
 538+ 907F 2A E6 85     Operandos ld hl,(Posicion_actual)
 539+ 9082 3A 1C 86     	ld a,(Columnas)
 540+ 9085 3D           	dec a
 541+ 9086 20 01        	jr nz,1F
 542+ 9088 3C           	inc a
 543+ 9089 47           1 ld b,a
 544+ 908A C9           	ret
 545+ 908B
 546+ 908B              ; --------------------------------------------------------------------------------------------------------------------
 547+ 908B              ;
 548+ 908B              ;	3/1/23
 549+ 908B              ;
 550+ 908B              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 908B              ;
 552+ 908B              ;	Destruye: A,B,HL y DE.
 553+ 908B
 554+ 908B              Define_rutina_de_impresion
 555+ 908B
 556+ 908B 3A E5 85     	ld a,(Columns)
 557+ 908E 47           	ld b,a
 558+ 908F 3A 1C 86     	ld a,(Columnas)
 559+ 9092 B8           	cp b
 560+ 9093 20 0D        	jr nz,2f
 561+ 9095
 562+ 9095              ;	La entidad se imprime entera.
 563+ 9095
 564+ 9095 21 61 91     	ld hl, Indice_entidades_completas
 565+ 9098 E6 01        	and 1
 566+ 909A 28 02        	jr z,1F
 567+ 909C
 568+ 909C 23           	inc hl
 569+ 909D 23           	inc hl
 570+ 909E
 571+ 909E CD 63 88     1 call Extrae_address
 572+ 90A1 C9           	ret		;	ret
 573+ 90A2
 574+ 90A2              ;	La entidad no se imprime entera en pantalla.
 575+ 90A2
 576+ 90A2 3A F8 85     2 ld a,(Cuad_objeto)
 577+ 90A5 E6 01        	and 1
 578+ 90A7 28 17        	jr z,3F
 579+ 90A9
 580+ 90A9              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 90A9
 582+ 90A9 21 65 91     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 90AC 3A E5 85     4 ld a,(Columns)
 584+ 90AF E6 01        	and 1
 585+ 90B1 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 90B3
 587+ 90B3 23           	inc hl
 588+ 90B4 23           	inc hl
 589+ 90B5
 590+ 90B5 3A 1C 86     	ld a,(Columnas)
 591+ 90B8 E6 01        	and 1
 592+ 90BA 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 90BC
 594+ 90BC 23           	inc hl
 595+ 90BD 23           	inc hl
 596+ 90BE
 597+ 90BE 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 90C0
 599+ 90C0 21 6B 91     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 90C3 18 E7        	jr 4B
 601+ 90C5
 602+ 90C5              ; --------------------------------------------------------------------------------------------------------------------
 603+ 90C5              ;
 604+ 90C5              ;	Prepara_draw
 605+ 90C5              ;
 606+ 90C5              ;	Es una rutina de carga.
 607+ 90C5              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 90C5              ;
 609+ 90C5              ;	FUNCIONAMIENTO:
 610+ 90C5              ;
 611+ 90C5              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 90C5              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 90C5              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 90C5              ;
 615+ 90C5              ;	DESTRUYE:
 616+ 90C5              ;
 617+ 90C5              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 90C5
 619+ 90C5 21 E4 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 90C8 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 90C9 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 90CA 4E           	ld c,(hl)
 623+ 90CB 2A E6 85     	ld hl,(Posicion_actual)
 624+ 90CE 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 90D0 C9           	ret
 626+ 90D1
 627+ 90D1              ;----------------------------------------------------------------------------------------------------------------
 628+ 90D1              ;
 629+ 90D1              ;	5/08/22
 630+ 90D1              ;
 631+ 90D1              ;   NextScan.
 632+ 90D1              ;
 633+ 90D1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 90D1              ;
 635+ 90D1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 90D1              ;
 637+ 90D1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 90D1              ;
 639+ 90D1              ;       DESTRUIDOS: AF y HL !!!
 640+ 90D1              ;
 641+ 90D1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 90D1              ;
 643+ 90D1
 644+ 90D1 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 90D2 7C               ld a,h
 646+ 90D3 E6 07            and 7
 647+ 90D5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 90D6
 649+ 90D6 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 90D7 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 90D9 6F               ld l,a
 652+ 90DA D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 90DB
 654+ 90DB 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 90DC D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 90DE 67               ld h,a
 657+ 90DF C9               ret
 658+ 90E0
 659+ 90E0              ;----------------------------------------------------------------------------------------------------------------
 660+ 90E0              ;
 661+ 90E0              ;	5/08/22
 662+ 90E0              ;
 663+ 90E0              ;   PreviousScan.
 664+ 90E0              ;
 665+ 90E0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 90E0              ;
 667+ 90E0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 90E0              ;
 669+ 90E0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 90E0              ;
 671+ 90E0              ;       DESTRUIDOS: AF y HL !!!
 672+ 90E0              ;
 673+ 90E0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 90E0              ;
 675+ 90E0
 676+ 90E0 7C           PreviousScan ld a,h
 677+ 90E1 25               dec h               ; Dec H.
 678+ 90E2 E6 07            and 7
 679+ 90E4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 90E5
 681+ 90E5 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 90E6 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 90E8 6F               ld l,a
 684+ 90E9 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 90EA
 686+ 90EA 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 90EB C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 90ED 67               ld h,a
 689+ 90EE C9               ret
 690+ 90EF
 691+ 90EF              ; -----------------------------------------------------------------------------------
 692+ 90EF              ;
 693+ 90EF              ;	28/2/23
 694+ 90EF              ;
 695+ 90EF              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 90EF              ;	Extrae fotos de Album_de_fotos.
 697+ 90EF
 698+ 90EF              Extrae_foto_entidades
 699+ 90EF
 700+ 90EF 3A 2A 86     	ld a,(Numero_de_malotes)
 701+ 90F2 A7           	and a
 702+ 90F3 C8           	ret z
 703+ 90F4 ED 73 2B 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 90F8 31 00 70     	ld sp,Album_de_fotos
 705+ 90FB
 706+ 90FB FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 90FD E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 90FE D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 90FF
 710+ 90FF ED 73 2D 86  	ld (Stack_2),sp
 711+ 9103 ED 7B 2B 86  	ld sp,(Stack)
 712+ 9107
 713+ 9107              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 9107
 715+ 9107 3E CD        	ld a,$cd
 716+ 9109 32 11 91     	ld (Imprime),a
 717+ 910C EB           	ex de,hl
 718+ 910D 22 12 91     	ld (Imprime+1),hl
 719+ 9110 EB           	ex de,hl
 720+ 9111
 721+ 9111              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 9111
 723+ 9111 00 00 00     Imprime db 0,0,0
 724+ 9114
 725+ 9114 3A 2A 86     	ld a,(Numero_de_malotes)
 726+ 9117 3D           	dec a
 727+ 9118 28 09        	jr z,1F
 728+ 911A 32 2A 86      	ld (Numero_de_malotes),a
 729+ 911D
 730+ 911D ED 7B 2D 86   	ld sp,(Stack_2)
 731+ 9121 18 D8        	jr 2B
 732+ 9123
 733+ 9123 AF           1 xor a
 734+ 9124 32 2D 86     	ld (Stack_2),a
 735+ 9127 C9           	ret
 736+ 9128
 737+ 9128              ; -----------------------------------------------------------------------------------
 738+ 9128              ;
 739+ 9128              ;	28/2/23
 740+ 9128              ;
 741+ 9128              ;	Pinta los disparos generados.
 742+ 9128
 743+ 9128              Extrae_foto_disparos
 744+ 9128
 745+ 9128 3A 33 86     	ld a,(Numero_de_disparotes)
 746+ 912B A7           	and a
 747+ 912C C8           	ret z
 748+ 912D ED 73 2B 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 9131 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 9134
 751+ 9134 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 9136 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 9137 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 9138
 755+ 9138 ED 73 2D 86  	ld (Stack_2),sp
 756+ 913C ED 7B 2B 86  	ld sp,(Stack)
 757+ 9140
 758+ 9140              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 9140
 760+ 9140 3E CD        	ld a,$cd
 761+ 9142 32 4A 91     	ld (Imprime2),a
 762+ 9145 EB           	ex de,hl
 763+ 9146 22 4B 91     	ld (Imprime2+1),hl
 764+ 9149 EB           	ex de,hl
 765+ 914A
 766+ 914A              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 914A
 768+ 914A 00 00 00     Imprime2 db 0,0,0
 769+ 914D
 770+ 914D 3A 33 86     	ld a,(Numero_de_disparotes)
 771+ 9150 3D           	dec a
 772+ 9151 28 09        	jr z,1F
 773+ 9153 32 33 86      	ld (Numero_de_disparotes),a
 774+ 9156
 775+ 9156 ED 7B 2D 86  	ld sp,(Stack_2)
 776+ 915A 18 D8        	jr 2B
 777+ 915C
 778+ 915C AF           1 xor a
 779+ 915D 32 2D 86     	ld (Stack_2),a
 780+ 9160 C9           	ret
 781+ 9161
# file closed: Draw_XOR.asm
1090  9161              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9161              ;   índices de Rutinas de impresión.
   2+ 9161
   3+ 9161 71 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9163 9E 91            defw Pinta_Amadeus_3x2
   5+ 9165
   6+ 9165 F4 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9167 94 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9169 48 92            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 916B
  10+ 916B 1E 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 916D 22 93            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 916F D6 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9171
  14+ 9171
  15+ 9171              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9171              ;
  17+ 9171              ;   12/12/22
  18+ 9171              ;
  19+ 9171              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9171              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9171              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9171              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9171              ;
  24+ 9171              ;   Modifica: DE y HL.
  25+ 9171
  26+ 9171 ED 73 2B 86  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9175 FD F9        	ld sp,iy
  28+ 9177 06 10            ld b,16
  29+ 9179 D1           1 pop de
  30+ 917A 7B               ld a,e
  31+ 917B AE               xor (hl)
  32+ 917C 77           	ld (hl),a
  33+ 917D 23           	inc hl
  34+ 917E 7A               ld a,d
  35+ 917F AE               xor (hl)
  36+ 9180 77           	ld (hl),a
  37+ 9181 2B           	dec hl
  38+ 9182 24           	inc h
  39+ 9183 7C               ld a,h
  40+ 9184 E6 07            and 7
  41+ 9186 20 0A            jr nz,2F
  42+ 9188 7D               ld a,l
  43+ 9189 C6 20            add a,$20
  44+ 918B 6F               ld l,a
  45+ 918C 38 04            jr c,2F
  46+ 918E 7C               ld a,h
  47+ 918F D6 08            sub 8
  48+ 9191 67               ld h,a
  49+ 9192 7C           2 ld a,h
  50+ 9193 FE 58            cp $58
  51+ 9195 28 02            jr z,3F
  52+ 9197 10 E0            djnz 1B
  53+ 9199 ED 7B 2B 86  3 ld sp,(Stack)
  54+ 919D C9           	ret
  55+ 919E
  56+ 919E ED 73 2B 86  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 91A2 FD F9        	ld sp,iy
  58+ 91A4 06 08            ld b,8
  59+ 91A6 D1           1 pop de
  60+ 91A7 7B               ld a,e
  61+ 91A8 AE               xor (hl)
  62+ 91A9 77           	ld (hl),a
  63+ 91AA 23           	inc hl
  64+ 91AB 7A               ld a,d
  65+ 91AC AE               xor (hl)
  66+ 91AD 77           	ld (hl),a
  67+ 91AE 23           	inc hl
  68+ 91AF D1           	pop de
  69+ 91B0 7B               ld a,e
  70+ 91B1 AE               xor (hl)
  71+ 91B2 77           	ld (hl),a
  72+ 91B3 2B           	dec hl
  73+ 91B4 2B           	dec hl
  74+ 91B5 24           	inc h
  75+ 91B6 7C               ld a,h
  76+ 91B7 E6 07            and 7
  77+ 91B9 20 0A            jr nz,2F
  78+ 91BB 7D               ld a,l
  79+ 91BC C6 20            add a,$20
  80+ 91BE 6F               ld l,a
  81+ 91BF 38 04            jr c,2F
  82+ 91C1 7C               ld a,h
  83+ 91C2 D6 08            sub 8
  84+ 91C4 67               ld h,a
  85+ 91C5 7C           2 ld a,h
  86+ 91C6 FE 58            cp $58
  87+ 91C8 28 25            jr z,4F
  88+ 91CA 7A               ld a,d
  89+ 91CB AE               xor (hl)
  90+ 91CC 77               ld (hl),a
  91+ 91CD D1           	pop de
  92+ 91CE 23           	inc hl
  93+ 91CF 7B               ld a,e
  94+ 91D0 AE               xor (hl)
  95+ 91D1 77           	ld (hl),a
  96+ 91D2 23           	inc hl
  97+ 91D3 7A               ld a,d
  98+ 91D4 AE               xor (hl)
  99+ 91D5 77           	ld (hl),a
 100+ 91D6 2B           	dec hl
 101+ 91D7 2B           	dec hl
 102+ 91D8 24           	inc h
 103+ 91D9 7C               ld a,h
 104+ 91DA E6 07            and 7
 105+ 91DC 20 0A            jr nz,3F
 106+ 91DE 7D               ld a,l
 107+ 91DF C6 20            add a,$20
 108+ 91E1 6F               ld l,a
 109+ 91E2 38 04            jr c,3F
 110+ 91E4 7C               ld a,h
 111+ 91E5 D6 08            sub 8
 112+ 91E7 67               ld h,a
 113+ 91E8 7C           3 ld a,h
 114+ 91E9 FE 58            cp $58
 115+ 91EB 28 02            jr z,4F
 116+ 91ED 10 B7            djnz 1B
 117+ 91EF ED 7B 2B 86  4 ld sp,(Stack)
 118+ 91F3 C9           	ret
 119+ 91F4
 120+ 91F4              ; ---------------------------------------------------
 121+ 91F4
 122+ 91F4 ED 73 2B 86  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 91F8 FD F9        	ld sp,iy
 124+ 91FA
 125+ 91FA              ; >>>
 126+ 91FA
 127+ 91FA 06 10            ld b,16
 128+ 91FC D1           1 pop de
 129+ 91FD 7A           	ld a,d
 130+ 91FE AE           	xor (hl)
 131+ 91FF 77           	ld (hl),a
 132+ 9200 24           	inc h
 133+ 9201 7C               ld a,h
 134+ 9202 E6 07            and 7
 135+ 9204 20 0C            jr nz,2F
 136+ 9206 7D               ld a,l
 137+ 9207 C6 20            add a,$20
 138+ 9209 6F               ld l,a
 139+ 920A 38 06            jr c,2F
 140+ 920C 7C               ld a,h
 141+ 920D D6 08            sub 8
 142+ 920F 67               ld h,a
 143+ 9210 18 00            jr 2F
 144+ 9212 7C           2 ld a,h
 145+ 9213 FE 58            cp $58
 146+ 9215 28 02            jr z,3F
 147+ 9217 10 E3            djnz 1B
 148+ 9219 ED 7B 2B 86  3 ld sp,(Stack)
 149+ 921D C9           	ret
 150+ 921E
 151+ 921E ED 73 2B 86  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9222 FD F9        	ld sp,iy
 153+ 9224
 154+ 9224              ; >>>
 155+ 9224
 156+ 9224 06 10            ld b,16
 157+ 9226 D1           1 pop de
 158+ 9227 7B           	ld a,e
 159+ 9228 AE           	xor (hl)
 160+ 9229 77           	ld (hl),a
 161+ 922A 24           	inc h
 162+ 922B 7C               ld a,h
 163+ 922C E6 07            and 7
 164+ 922E 20 0C            jr nz,2F
 165+ 9230 7D               ld a,l
 166+ 9231 C6 20            add a,$20
 167+ 9233 6F               ld l,a
 168+ 9234 38 06            jr c,2F
 169+ 9236 7C               ld a,h
 170+ 9237 D6 08            sub 8
 171+ 9239 67               ld h,a
 172+ 923A 18 00            jr 2F
 173+ 923C 7C           2 ld a,h
 174+ 923D FE 58            cp $58
 175+ 923F 28 02            jr z,3F
 176+ 9241 10 E3            djnz 1B
 177+ 9243 ED 7B 2B 86  3 ld sp,(Stack)
 178+ 9247 C9           	ret
 179+ 9248
 180+ 9248              ; ---------------------------------------------------
 181+ 9248
 182+ 9248 ED 73 2B 86  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 924C FD F9        	ld sp,iy
 184+ 924E 06 08            ld b,8
 185+ 9250 D1           1 pop de
 186+ 9251 7A           	ld a,d
 187+ 9252 AE           	xor (hl)
 188+ 9253 77           	ld (hl),a
 189+ 9254 23           	inc hl
 190+ 9255 D1           	pop de
 191+ 9256 7B           	ld a,e
 192+ 9257 AE           	xor (hl)
 193+ 9258 77           	ld (hl),a
 194+ 9259 2B           	dec hl
 195+ 925A 24            	inc h
 196+ 925B 7C               ld a,h
 197+ 925C E6 07            and 7
 198+ 925E 20 0A            jr nz,2F
 199+ 9260 7D               ld a,l
 200+ 9261 C6 20            add a,$20
 201+ 9263 6F               ld l,a
 202+ 9264 38 04            jr c,2F
 203+ 9266 7C               ld a,h
 204+ 9267 D6 08            sub 8
 205+ 9269 67               ld h,a
 206+ 926A 7C           2 ld a,h
 207+ 926B FE 58            cp $58
 208+ 926D 28 20            jr z,4F
 209+ 926F D1               pop de
 210+ 9270 7B           	ld a,e
 211+ 9271 AE           	xor (hl)
 212+ 9272 77           	ld (hl),a
 213+ 9273 23           	inc hl
 214+ 9274 7A           	ld a,d
 215+ 9275 AE           	xor (hl)
 216+ 9276 77           	ld (hl),a
 217+ 9277 2B           	dec hl
 218+ 9278 24           	inc h
 219+ 9279 7C               ld a,h
 220+ 927A E6 07            and 7
 221+ 927C 20 0A            jr nz,3F
 222+ 927E 7D               ld a,l
 223+ 927F C6 20            add a,$20
 224+ 9281 6F               ld l,a
 225+ 9282 38 04            jr c,3F
 226+ 9284 7C               ld a,h
 227+ 9285 D6 08            sub 8
 228+ 9287 67               ld h,a
 229+ 9288 7C           3 ld a,h
 230+ 9289 FE 58            cp $58
 231+ 928B 28 02            jr z,4F
 232+ 928D 10 C1            djnz 1B
 233+ 928F ED 7B 2B 86  4 ld sp,(Stack)
 234+ 9293 C9           	ret
 235+ 9294
 236+ 9294 ED 73 2B 86  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9298 FD F9        	ld sp,iy
 238+ 929A 06 08            ld b,8
 239+ 929C D1           1 pop de
 240+ 929D D1           	pop de
 241+ 929E 7B           	ld a,e
 242+ 929F AE           	xor (hl)
 243+ 92A0 77           	ld (hl),a
 244+ 92A1 24            	inc h
 245+ 92A2 7C               ld a,h
 246+ 92A3 E6 07            and 7
 247+ 92A5 20 0A            jr nz,2F
 248+ 92A7 7D               ld a,l
 249+ 92A8 C6 20            add a,$20
 250+ 92AA 6F               ld l,a
 251+ 92AB 38 04            jr c,2F
 252+ 92AD 7C               ld a,h
 253+ 92AE D6 08            sub 8
 254+ 92B0 67               ld h,a
 255+ 92B1 7C           2 ld a,h
 256+ 92B2 FE 58            cp $58
 257+ 92B4 28 1B            jr z,4F
 258+ 92B6 D1               pop de
 259+ 92B7 7A           	ld a,d
 260+ 92B8 AE           	xor (hl)
 261+ 92B9 77           	ld (hl),a
 262+ 92BA 24           	inc h
 263+ 92BB 7C               ld a,h
 264+ 92BC E6 07            and 7
 265+ 92BE 20 0A            jr nz,3F
 266+ 92C0 7D               ld a,l
 267+ 92C1 C6 20            add a,$20
 268+ 92C3 6F               ld l,a
 269+ 92C4 38 04            jr c,3F
 270+ 92C6 7C               ld a,h
 271+ 92C7 D6 08            sub 8
 272+ 92C9 67               ld h,a
 273+ 92CA 7C           3 ld a,h
 274+ 92CB FE 58            cp $58
 275+ 92CD 28 02            jr z,4F
 276+ 92CF 10 CB            djnz 1B
 277+ 92D1 ED 7B 2B 86  4 ld sp,(Stack)
 278+ 92D5 C9           	ret
 279+ 92D6
 280+ 92D6 ED 73 2B 86  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 92DA FD F9        	ld sp,iy
 282+ 92DC 06 08            ld b,8
 283+ 92DE D1           1 pop de
 284+ 92DF 7B           	ld a,e
 285+ 92E0 AE           	xor (hl)
 286+ 92E1 77           	ld (hl),a
 287+ 92E2 23           	inc hl
 288+ 92E3 7A           	ld a,d
 289+ 92E4 AE           	xor (hl)
 290+ 92E5 77           	ld (hl),a
 291+ 92E6 2B           	dec hl
 292+ 92E7 24             	inc h
 293+ 92E8 7C               ld a,h
 294+ 92E9 E6 07            and 7
 295+ 92EB 20 0A            jr nz,2F
 296+ 92ED 7D               ld a,l
 297+ 92EE C6 20            add a,$20
 298+ 92F0 6F               ld l,a
 299+ 92F1 38 04            jr c,2F
 300+ 92F3 7C               ld a,h
 301+ 92F4 D6 08            sub 8
 302+ 92F6 67               ld h,a
 303+ 92F7 7C           2 ld a,h
 304+ 92F8 FE 58            cp $58
 305+ 92FA 28 21            jr z,4F
 306+ 92FC D1               pop de
 307+ 92FD 7A           	ld a,d
 308+ 92FE AE           	xor (hl)
 309+ 92FF 77           	ld (hl),a
 310+ 9300 23           	inc hl
 311+ 9301 D1               pop de
 312+ 9302 7B           	ld a,e
 313+ 9303 AE           	xor (hl)
 314+ 9304 77           	ld (hl),a
 315+ 9305 2B           	dec hl
 316+ 9306 24           	inc h
 317+ 9307 7C               ld a,h
 318+ 9308 E6 07            and 7
 319+ 930A 20 0A            jr nz,3F
 320+ 930C 7D               ld a,l
 321+ 930D C6 20            add a,$20
 322+ 930F 6F               ld l,a
 323+ 9310 38 04            jr c,3F
 324+ 9312 7C               ld a,h
 325+ 9313 D6 08            sub 8
 326+ 9315 67               ld h,a
 327+ 9316 7C           3 ld a,h
 328+ 9317 FE 58            cp $58
 329+ 9319 28 02            jr z,4F
 330+ 931B 10 C1            djnz 1B
 331+ 931D ED 7B 2B 86  4 ld sp,(Stack)
 332+ 9321 C9           	ret
 333+ 9322
 334+ 9322 ED 73 2B 86  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9326 FD F9        	ld sp,iy
 336+ 9328 06 08            ld b,8
 337+ 932A D1           1 pop de
 338+ 932B 7B           	ld a,e
 339+ 932C AE           	xor (hl)
 340+ 932D 77           	ld (hl),a
 341+ 932E 24            	inc h
 342+ 932F 7C               ld a,h
 343+ 9330 E6 07            and 7
 344+ 9332 20 0A            jr nz,2F
 345+ 9334 7D               ld a,l
 346+ 9335 C6 20            add a,$20
 347+ 9337 6F               ld l,a
 348+ 9338 38 04            jr c,2F
 349+ 933A 7C               ld a,h
 350+ 933B D6 08            sub 8
 351+ 933D 67               ld h,a
 352+ 933E 7C           2 ld a,h
 353+ 933F FE 58            cp $58
 354+ 9341 28 1C            jr z,4F
 355+ 9343 D1               pop de
 356+ 9344 7A           	ld a,d
 357+ 9345 AE           	xor (hl)
 358+ 9346 77           	ld (hl),a
 359+ 9347 24           	inc h
 360+ 9348 7C               ld a,h
 361+ 9349 E6 07            and 7
 362+ 934B 20 0A            jr nz,3F
 363+ 934D 7D               ld a,l
 364+ 934E C6 20            add a,$20
 365+ 9350 6F               ld l,a
 366+ 9351 38 04            jr c,3F
 367+ 9353 7C               ld a,h
 368+ 9354 D6 08            sub 8
 369+ 9356 67               ld h,a
 370+ 9357 7C           3 ld a,h
 371+ 9358 FE 58            cp $58
 372+ 935A 28 03            jr z,4F
 373+ 935C D1               pop de
 374+ 935D 10 CB            djnz 1B
 375+ 935F ED 7B 2B 86  4 ld sp,(Stack)
 376+ 9363 C9           	ret
 377+ 9364
 378+ 9364              ; ---------------------------------------------------
 379+ 9364              ;
 380+ 9364              ;   27/02/23
 381+ 9364              ;
 382+ 9364              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9364              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9364              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9364
 386+ 9364 ED 73 2B 86  Pinta_Disparo ld (Stack),sp
 387+ 9368 FD F9            ld sp,iy
 388+ 936A 06 02            ld b,2
 389+ 936C D1           1 pop de
 390+ 936D 7B               ld a,e
 391+ 936E AE               xor (hl)
 392+ 936F 77               ld (hl),a
 393+ 9370 23               inc hl
 394+ 9371 7A               ld a,d
 395+ 9372 AE               xor (hl)
 396+ 9373 77               ld (hl),a
 397+ 9374 2B               dec hl
 398+ 9375
 399+ 9375 24               inc h
 400+ 9376 7C               ld a,h
 401+ 9377 E6 07            and 7
 402+ 9379 20 0A            jr nz,2F
 403+ 937B 7D               ld a,l
 404+ 937C C6 20            add a,$20
 405+ 937E 6F               ld l,a
 406+ 937F 38 04            jr c,2F
 407+ 9381 7C               ld a,h
 408+ 9382 D6 08            sub 8
 409+ 9384 67               ld h,a
 410+ 9385 7C           2 ld a,h
 411+ 9386 FE 58            cp $58
 412+ 9388 28 02            jr z,3F
 413+ 938A
 414+ 938A 10 E0            djnz 1B
 415+ 938C ED 7B 2B 86  3 ld sp,(Stack)
 416+ 9390 C9               ret
 417+ 9391
# file closed: Rutinas_de_impresion_sprites.asm
1091  9391              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9391              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9391              ;
   3+ 9391              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9391              ;
   5+ 9391              ; *****************************************************************************************************************************************************************************************
   6+ 9391              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9391
   8+ 9391 7C           calcula_tercio ld a,h
   9+ 9392 E6 18        	and $18
  10+ 9394 CB 2F        	sra a
  11+ 9396 CB 2F        	sra a
  12+ 9398 CB 2F        	sra a
  13+ 939A C9           	ret
  14+ 939B
# file closed: calcula_tercio.asm
1092  939B              	include "Cls.asm"
# file opened: Cls.asm
   1+ 939B              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 939B              ;
   3+ 939B              ;
   4+ 939B              ;	CLS.
   5+ 939B              ;
   6+ 939B              ;	Limpia la pantalla y define sus atributos.
   7+ 939B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 939B              ;
   9+ 939B              ;	COLORES: 0 ..... NEGRO
  10+ 939B              ;    		 1 ..... AZUL
  11+ 939B              ; 			 2 ..... ROJO
  12+ 939B              ;			 3 ..... MAGENTA
  13+ 939B              ; 			 4 ..... VERDE
  14+ 939B              ; 			 5 ..... CIAN
  15+ 939B              ;			 6 ..... AMARILLO
  16+ 939B              ; 			 7 ..... BLANCO
  17+ 939B              ;
  18+ 939B              ;	INPUT: A contiene los atributos de pantalla.
  19+ 939B              ;
  20+ 939B              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 939B
  22+ 939B
  23+ 939B 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 939E 11 01 40     	LD DE,$4001
  25+ 93A1 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 93A4 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 93A6 ED B0        	LDIR
  28+ 93A8 01 FF 02     	LD BC,767
  29+ 93AB 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 93AC ED B0        	LDIR
  31+ 93AE C9           	ret
  32+ 93AF
# file closed: Cls.asm
1093  93AF              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 93AF              ; ******************************************************************************************************************************************************************************************
   2+ 93AF              ;
   3+ 93AF              ;   22/01/23
   4+ 93AF              ;
   5+ 93AF              ;	Mov_down
   6+ 93AF              ;
   7+ 93AF              ; 	Mueve el Sprite X px hacia abajo.
   8+ 93AF              ;
   9+ 93AF              ;
  10+ 93AF 21 12 86     Mov_down ld hl,Ctrl_0
  11+ 93B2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 93B4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 93B4              ; 																	; _ en el caso de que no lo haya.
  14+ 93B4 3A FC 85     	ld a,(Vel_down)
  15+ 93B7 47           	ld b,a
  16+ 93B8 2A E6 85         ld hl,(Posicion_actual)
  17+ 93BB CD 91 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 93BE E6 02        	and 2
  19+ 93C0 28 0F        	jr z,1F
  20+ 93C2
  21+ 93C2              ; Nos encontramos en el último tercio de pantalla.
  22+ 93C2              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 93C2
  24+ 93C2 7C           	ld a,h
  25+ 93C3 FE 57        	cp $57
  26+ 93C5 20 0A        	jr nz,1F
  27+ 93C7 7D           	ld a,l
  28+ 93C8 C6 20        	add $20
  29+ 93CA 30 05        	jr nc,1F
  30+ 93CC
  31+ 93CC              ; ------------------------------
  32+ 93CC CD A7 96     	call Reaparece_arriba
  33+ 93CF              ;	call Reinicio
  34+ 93CF              ; ------------------------------
  35+ 93CF
  36+ 93CF 18 08        	jr 3F
  37+ 93D1 CD D1 90     1 call NextScan
  38+ 93D4 22 E6 85     	ld (Posicion_actual),hl
  39+ 93D7 10 E2            djnz 2B
  40+ 93D9 CD BD 96     3 call Genera_coordenadas
  41+ 93DC C9           	ret
  42+ 93DD
  43+ 93DD              ; ******************************************************************************************************************************************************************************************
  44+ 93DD              ;
  45+ 93DD              ;   22/01/23
  46+ 93DD              ;
  47+ 93DD              ;	Mov_up
  48+ 93DD              ;
  49+ 93DD              ; 	Mueve el Sprite hacia arriba.
  50+ 93DD              ;
  51+ 93DD              ;
  52+ 93DD 21 12 86     Mov_up ld hl,Ctrl_0
  53+ 93E0 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 93E2              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 93E2              ; 																		; _ en el caso de que no lo haya.
  56+ 93E2 3A FB 85     	ld a,(Vel_up)
  57+ 93E5 47           	ld b,a
  58+ 93E6 2A E6 85     	ld hl,(Posicion_actual)
  59+ 93E9 CD 91 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 93EC A7           	and a
  61+ 93ED 20 10        	jr nz,1F
  62+ 93EF
  63+ 93EF              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 93EF              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 93EF
  66+ 93EF 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 93F0 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 93F2 20 0B            jr nz,1F
  69+ 93F4 7D               ld a,l
  70+ 93F5 D6 20            sub $20
  71+ 93F7 30 06            jr nc,1F
  72+ 93F9 25               dec h
  73+ 93FA
  74+ 93FA              ; -----------------------------
  75+ 93FA CD 97 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 93FD              ;	call Reinicio
  77+ 93FD              ; -----------------------------
  78+ 93FD
  79+ 93FD 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 93FF CD E0 90     1 call PreviousScan
  81+ 9402 22 E6 85     	ld (Posicion_actual),hl
  82+ 9405 10 E2            djnz 3B
  83+ 9407 CD BD 96     2 call Genera_coordenadas
  84+ 940A C9           	ret
  85+ 940B
  86+ 940B              ; ******************************************************************************************************************************************************************************************
  87+ 940B              ;
  88+ 940B              ;	19/10/22
  89+ 940B              ;
  90+ 940B              ;	Mov_right.
  91+ 940B              ;
  92+ 940B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 940B              ;
  94+ 940B
  95+ 940B 21 12 86     Mov_right ld hl,Ctrl_0
  96+ 940E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9410              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9410              ; 																	; _ en el caso de que no lo haya.
  99+ 9410 3A 12 86     	ld a,(Ctrl_0)
 100+ 9413 CB 77        	bit 6,a
 101+ 9415 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9417
 103+ 9417 CD 45 96     	call Stop_Amadeus_right
 104+ 941A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 941B 18 4D        	jr 8F
 106+ 941D
 107+ 941D 3A EA 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 9420 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9422 20 46        	jr nz,8F
 110+ 9424
 111+ 9424 3A EC 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 9427 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9428 28 40        	jr z,8F
 114+ 942A
 115+ 942A              ; ---------- ---------- ----------
 116+ 942A              ;
 117+ 942A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 942A
 119+ 942A 3A FA 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 942D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 942F 28 11        	jr z,1F
 122+ 9431 38 06        	jr c,6F
 123+ 9433 FE 04        	cp 4
 124+ 9435 28 14        	jr z,7F
 125+ 9437 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 9439
 127+ 9439              ; ---------- ---------- ----------
 128+ 9439              ;
 129+ 9439              ; Perfiles de velocidad
 130+ 9439              ;
 131+ 9439
 132+ 9439 3A EC 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 943C FE FE        	cp $fe
 134+ 943E 20 2A        	jr nz,8F
 135+ 9440 18 10        	jr 3F
 136+ 9442 3A EC 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 9445 FE FD        	cp $fd
 138+ 9447 20 21        	jr nz,8F
 139+ 9449 18 07        	jr 3F
 140+ 944B 3A EC 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 944E FE FB        	cp $fb
 142+ 9450 20 18        	jr nz,8F
 143+ 9452
 144+ 9452              ; ---------- ---------- ----------
 145+ 9452
 146+ 9452              3
 147+ 9452 CD 85 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 9455              ;	call Reinicio
 149+ 9455
 150+ 9455              ; ---------- ---------- ----------
 151+ 9455              ;
 152+ 9455              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 9455
 154+ 9455 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 9457 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 9458 CD 71 94     	call DESPLZ_DER
 157+ 945B C1           	pop bc
 158+ 945C 10 F9        	djnz 5B
 159+ 945E 2A E6 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9461 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9462 22 E6 85     	ld (Posicion_actual),hl
 162+ 9465 CD BD 96     	call Genera_coordenadas
 163+ 9468 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 946A
 165+ 946A              ; ---------- ---------- ----------
 166+ 946A
 167+ 946A 2A E6 85     8 ld hl,(Posicion_actual)
 168+ 946D CD 71 94     	call DESPLZ_DER
 169+ 9470 C9           2 ret
 170+ 9471
 171+ 9471              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9471              ;
 173+ 9471              ;	22/9/22
 174+ 9471              ;
 175+ 9471
 176+ 9471 CD 80 94     DESPLZ_DER call Desplaza_derecha
 177+ 9474 CD CC 94         call modifica_parametros_1er_DESPLZ_2
 178+ 9477 CD F5 94         call Ciclo_completo
 179+ 947A 21 12 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 947D CB FE        	set 7,(hl)
 181+ 947F C9           	ret
 182+ 9480
 183+ 9480              ; ******************************************************************************************************************************************************************************************
 184+ 9480              ;	15/02/23
 185+ 9480              ;
 186+ 9480
 187+ 9480 3A FA 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9483 47           	ld b,a
 189+ 9484 2A F2 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9487 23           1 inc hl
 191+ 9488 23           	inc hl
 192+ 9489 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 948B 22 F2 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 948E CD 63 88     	call Extrae_address
 195+ 9491 22 E8 85     	ld (Puntero_objeto),hl
 196+ 9494
 197+ 9494              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9494
 199+ 9494              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9494              ; Cuántos movimientos hemos hecho ??
 201+ 9494              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9494
 203+ 9494 2A EE 85     7 ld hl,(Indice_Sprite_der)
 204+ 9497 EB           	ex de,hl
 205+ 9498 A7           	and a
 206+ 9499 ED 52        	sbc hl,de
 207+ 949B CB 3D        	srl l
 208+ 949D 3E 08        6 ld a,8
 209+ 949F 95           	sub l
 210+ 94A0 30 1E        	jr nc,3F
 211+ 94A2
 212+ 94A2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 94A2              ; B="0".
 214+ 94A2
 215+ 94A2 04           4 inc b
 216+ 94A3 3C           	inc a
 217+ 94A4 20 FC        	jr nz,4B
 218+ 94A6 78           	ld a,b
 219+ 94A7 08           	ex af,af
 220+ 94A8 2A EE 85     	ld hl,(Indice_Sprite_der)
 221+ 94AB 23           5 inc hl
 222+ 94AC 23           	inc hl
 223+ 94AD 10 FC        	djnz 5B
 224+ 94AF 22 F2 85     	ld (Puntero_DESPLZ_der),hl
 225+ 94B2 CD 63 88     	call Extrae_address
 226+ 94B5 22 E8 85     	ld (Puntero_objeto),hl
 227+ 94B8
 228+ 94B8              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 94B8              ; _(Posicion_actual).
 230+ 94B8
 231+ 94B8 21 E6 85     	ld hl,Posicion_actual
 232+ 94BB 34           	inc (hl)
 233+ 94BC 08               ex af,af
 234+ 94BD 6F           	ld l,a
 235+ 94BE 18 DD        	jr 6B
 236+ 94C0
 237+ 94C0              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 94C0
 239+ 94C0 47           3 ld b,a
 240+ 94C1 2A F0 85     	ld hl,(Indice_Sprite_izq)
 241+ 94C4 23           2 inc hl
 242+ 94C5 23           	inc hl
 243+ 94C6 10 FC        	djnz 2B
 244+ 94C8 22 F4 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 94CB C9           8 ret
 246+ 94CC
 247+ 94CC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 94CC              ;
 249+ 94CC              ;	24/7/22
 250+ 94CC              ;
 251+ 94CC              ;	modifica_parametros_1er_DESPLZ_2
 252+ 94CC              ;
 253+ 94CC              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 94CC              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 94CC              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 94CC
 257+ 94CC 3A EC 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 94CF A7           	and a
 259+ 94D0 20 1F        	jr nz,1F
 260+ 94D2 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 94D4 32 EC 85         ld (CTRL_DESPLZ),a
 262+ 94D7
 263+ 94D7 21 E5 85     	ld hl,Columns
 264+ 94DA 34           	inc (hl)
 265+ 94DB 3A F8 85     	ld a,(Cuad_objeto)
 266+ 94DE E6 01        	and 1
 267+ 94E0 28 0F        	jr z,1F
 268+ 94E2 2A E6 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 94E5 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 94E6 22 E6 85     	ld (Posicion_actual),hl
 271+ 94E9 CD BD 96     	call Genera_coordenadas
 272+ 94EC CD 51 96     	call Inc_CTRL_DESPLZ
 273+ 94EF 18 03        	jr 2F
 274+ 94F1 CD 51 96     1 call Inc_CTRL_DESPLZ
 275+ 94F4 C9           2 ret
 276+ 94F5
 277+ 94F5              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 94F5              ;
 279+ 94F5              ;	24/7/22
 280+ 94F5              ;
 281+ 94F5              ;	Ciclo_completo.
 282+ 94F5              ;
 283+ 94F5              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 94F5              ;
 285+ 94F5              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 94F5              ; 	Decrementamos (Columns).
 287+ 94F5              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 94F5              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 94F5
 290+ 94F5
 291+ 94F5 3A EC 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 94F8 FE FF        	cp $ff
 293+ 94FA 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 94FC E6 F0        	and $f0
 295+ 94FE 20 28        	jr nz,3F
 296+ 9500
 297+ 9500              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9500
 299+ 9500 3A EC 85     	ld a,(CTRL_DESPLZ)
 300+ 9503 47           	ld b,a
 301+ 9504 3E F8        	ld a,$f8
 302+ 9506 80           	add b
 303+ 9507 32 EC 85     	ld (CTRL_DESPLZ),a
 304+ 950A 18 1C        	jr 3F
 305+ 950C 21 E5 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 950F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 9510 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9511 32 EC 85     	ld (CTRL_DESPLZ),a
 309+ 9514 3A F8 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9517 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9519 20 0A        	jr nz,2F
 312+ 951B 2A E6 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 951E 23           	inc hl
 314+ 951F 22 E6 85     	ld (Posicion_actual),hl
 315+ 9522 CD BD 96     	call Genera_coordenadas
 316+ 9525
 317+ 9525              ; Inicia el puntero de Sprite.
 318+ 9525
 319+ 9525 CD 7A 88     2 call Inicia_puntero_objeto_der
 320+ 9528 C9           3 ret
 321+ 9529
 322+ 9529              ; ******************************************************************************************************************************************************************************************
 323+ 9529              ;
 324+ 9529              ;	15/02/23
 325+ 9529              ;
 326+ 9529              ;	Mov_left.
 327+ 9529              ;
 328+ 9529              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9529              ;
 330+ 9529              Mov_left
 331+ 9529
 332+ 9529 21 12 86     	ld hl,Ctrl_0
 333+ 952C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 952E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 952E              ; 																	; _ en el caso de que no lo haya.
 336+ 952E 3A 12 86     	ld a,(Ctrl_0)
 337+ 9531 CB 77        	bit 6,a
 338+ 9533 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 9535
 340+ 9535 CD 4B 96     	call Stop_Amadeus_left
 341+ 9538 C8           	ret z
 342+ 9539 20 4A        	jr nz,8F
 343+ 953B
 344+ 953B 3A EA 85     11 ld a,(Coordenada_X)
 345+ 953E A7           	and a
 346+ 953F 20 44        	jr nz,8F
 347+ 9541
 348+ 9541 3A EC 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 9544 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 9545 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 9547
 352+ 9547              ; ---------- ---------- ----------
 353+ 9547
 354+ 9547 3A F9 85     	ld a,(Vel_left)
 355+ 954A FE 02        	cp 2
 356+ 954C 28 0F        	jr z,1F
 357+ 954E 38 04        	jr c,6F
 358+ 9550 FE 04        	cp 4
 359+ 9552 28 12        	jr z,7F
 360+ 9554
 361+ 9554              ; ---------- ---------- ----------
 362+ 9554
 363+ 9554 3A EC 85     6 ld a,(CTRL_DESPLZ)
 364+ 9557 FE F8        	cp $f8
 365+ 9559 20 2A        	jr nz,8F
 366+ 955B 18 10        	jr 4F
 367+ 955D 3A EC 85     1 ld a,(CTRL_DESPLZ)
 368+ 9560 FE F9        	cp $f9
 369+ 9562 20 21        	jr nz,8F
 370+ 9564 18 07        	jr 4F
 371+ 9566 3A EC 85     7 ld a,(CTRL_DESPLZ)
 372+ 9569 FE FB        	cp $fb
 373+ 956B 20 18        	jr nz,8F
 374+ 956D
 375+ 956D              ; ---------- ---------- ----------
 376+ 956D
 377+ 956D              4
 378+ 956D CD 73 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9570              ;	call Reinicio
 380+ 9570
 381+ 9570              ; ---------- ---------- ----------
 382+ 9570
 383+ 9570 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9572 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9573
 386+ 9573              ;	ld hl,(Indice_Sprite_izq)
 387+ 9573              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9573
 389+ 9573 CD 8C 95     	call DESPLZ_IZQ
 390+ 9576 C1           	pop bc
 391+ 9577 10 F9        	djnz 5B
 392+ 9579 2A E6 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 957C 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 957D 22 E6 85     	ld (Posicion_actual),hl
 395+ 9580 CD BD 96     	call Genera_coordenadas
 396+ 9583 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9585
 398+ 9585              ; ---------- ---------- ----------
 399+ 9585
 400+ 9585              ; Movemos, no hay recolocación.
 401+ 9585
 402+ 9585 2A E6 85     8 ld hl,(Posicion_actual)
 403+ 9588 CD 8C 95     	call DESPLZ_IZQ
 404+ 958B C9           2 ret
 405+ 958C
 406+ 958C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 958C              ;
 408+ 958C              ;	22/9/22
 409+ 958C
 410+ 958C              DESPLZ_IZQ
 411+ 958C
 412+ 958C CD 9B 95     	call Desplaza_izquierda
 413+ 958F CD E7 95         call modifica_parametros_1er_DESPLZ
 414+ 9592 CD 0F 96     	call Ciclo_completo_2
 415+ 9595 21 12 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9598 CB BE        	res 7,(hl)
 417+ 959A C9           	ret
 418+ 959B
 419+ 959B              Desplaza_izquierda
 420+ 959B
 421+ 959B 3A F9 85     	ld a,(Vel_left)
 422+ 959E 47           	ld b,a
 423+ 959F 2A F4 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 95A2 23           1 inc hl
 425+ 95A3 23           	inc hl
 426+ 95A4 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 95A6 22 F4 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 95A9 CD 63 88     	call Extrae_address
 429+ 95AC 22 E8 85     	ld (Puntero_objeto),hl
 430+ 95AF
 431+ 95AF              ; Modifica (Puntero_DESPLZ_der).
 432+ 95AF
 433+ 95AF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 95AF              ; Cuántos movimientos hemos hecho ??
 435+ 95AF              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 95AF
 437+ 95AF 2A F0 85     7 ld hl,(Indice_Sprite_izq)
 438+ 95B2 EB           	ex de,hl
 439+ 95B3 A7           	and a
 440+ 95B4 ED 52        	sbc hl,de
 441+ 95B6 CB 3D        	srl l
 442+ 95B8 3E 08        6 ld a,8
 443+ 95BA 95           	sub l
 444+ 95BB 30 1E        	jr nc,3F
 445+ 95BD
 446+ 95BD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 95BD              ; B="0".
 448+ 95BD
 449+ 95BD 04           4 inc b
 450+ 95BE 3C           	inc a
 451+ 95BF 20 FC        	jr nz,4B
 452+ 95C1 78           	ld a,b
 453+ 95C2 08           	ex af,af
 454+ 95C3 2A F0 85     	ld hl,(Indice_Sprite_izq)
 455+ 95C6 23           5 inc hl
 456+ 95C7 23           	inc hl
 457+ 95C8 10 FC        	djnz 5B
 458+ 95CA 22 F4 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 95CD CD 63 88     	call Extrae_address
 460+ 95D0 22 E8 85     	ld (Puntero_objeto),hl
 461+ 95D3
 462+ 95D3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 95D3              ; _(Posicion_actual).
 464+ 95D3
 465+ 95D3 21 E6 85     	ld hl,Posicion_actual
 466+ 95D6 35           	dec (hl)
 467+ 95D7 08           	ex af,af
 468+ 95D8 6F           	ld l,a
 469+ 95D9 18 DD        	jr 6B
 470+ 95DB
 471+ 95DB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 95DB
 473+ 95DB 47           3 ld b,a
 474+ 95DC 2A EE 85     	ld hl,(Indice_Sprite_der)
 475+ 95DF 23           2 inc hl
 476+ 95E0 23           	inc hl
 477+ 95E1 10 FC        	djnz 2B
 478+ 95E3 22 F2 85     	ld (Puntero_DESPLZ_der),hl
 479+ 95E6 C9           8 ret
 480+ 95E7
 481+ 95E7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 95E7              ;
 483+ 95E7              ;	modifica_parametros_1er_DESPLZ
 484+ 95E7              ;
 485+ 95E7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 95E7              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 95E7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 95E7
 489+ 95E7 3A EC 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 95EA A7           	and a
 491+ 95EB 20 1E        	jr nz,1F
 492+ 95ED 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 95EE 32 EC 85         ld (CTRL_DESPLZ),a
 494+ 95F1 21 E5 85     	ld hl,Columns
 495+ 95F4 34           	inc (hl)
 496+ 95F5 3A F8 85     	ld a,(Cuad_objeto)
 497+ 95F8 E6 01        	and 1
 498+ 95FA 20 0F        	jr nz,1F
 499+ 95FC 2A E6 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 95FF 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9600 22 E6 85     	ld (Posicion_actual),hl
 502+ 9603 CD BD 96     	call Genera_coordenadas
 503+ 9606 CD 62 96     	call Dec_CTRL_DESPLZ
 504+ 9609 18 03        	jr 2F
 505+ 960B CD 62 96     1 call Dec_CTRL_DESPLZ
 506+ 960E C9           2 ret
 507+ 960F
 508+ 960F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 960F
 510+ 960F 3A EC 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9612 FE F7        	cp $f7
 512+ 9614 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9616 30 2C        	jr nc,3F
 514+ 9618
 515+ 9618              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9618
 517+ 9618 06 00        	ld b,0
 518+ 961A 04           4 inc b
 519+ 961B 3C           	inc a
 520+ 961C FE F7        	cp $f7
 521+ 961E 20 FA        	jr nz,4B
 522+ 9620 3E FF        	ld a,$ff
 523+ 9622 90           	sub b
 524+ 9623 32 EC 85     	ld (CTRL_DESPLZ),a
 525+ 9626 18 1C        	jr 3F
 526+ 9628
 527+ 9628              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9628
 529+ 9628 21 E5 85     1 ld hl,Columns
 530+ 962B 35           	dec (hl)
 531+ 962C AF           	xor a
 532+ 962D 32 EC 85     	ld (CTRL_DESPLZ),a
 533+ 9630 3A F8 85     	ld a,(Cuad_objeto)
 534+ 9633 E6 01        	and 1
 535+ 9635 28 0A        	jr z,2F
 536+ 9637 2A E6 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 963A 2B           	dec hl
 538+ 963B 22 E6 85     	ld (Posicion_actual),hl
 539+ 963E CD BD 96     	call Genera_coordenadas
 540+ 9641
 541+ 9641              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 9641
 543+ 9641 CD 8D 88     2 call Inicia_puntero_objeto_izq
 544+ 9644 C9           3 ret
 545+ 9645
 546+ 9645              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 9645              ;
 548+ 9645              ;	19/10/22
 549+ 9645              ;
 550+ 9645              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 9645              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 9645
 553+ 9645 3A EA 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 9648 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 964A C9           	ret
 556+ 964B
 557+ 964B              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 964B              ;
 559+ 964B              ;	19/10/22
 560+ 964B              ;
 561+ 964B              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 964B              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 964B
 564+ 964B 3A EA 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 964E FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 9650 C9           	ret
 567+ 9651
 568+ 9651              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 9651              ;
 570+ 9651              ;	24/7/22
 571+ 9651              ;
 572+ 9651              ;	Inc_CTRL_DESPLZ
 573+ 9651              ;
 574+ 9651              ;
 575+ 9651              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 9651
 577+ 9651 21 EC 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 9654 3A FA 85     	ld a,(Vel_right)
 579+ 9657 A7           	and a
 580+ 9658 28 06        	jr z,1F
 581+ 965A 47           	ld b,a
 582+ 965B 34           3 inc (hl)
 583+ 965C 10 FD        	djnz 3B
 584+ 965E 18 01        	jr 2F
 585+ 9660 34           1 inc (hl)
 586+ 9661 C9           2 ret
 587+ 9662
 588+ 9662              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9662              ;
 590+ 9662              ;	5/2/23
 591+ 9662              ;
 592+ 9662              ;	Dec_CTRL_DESPLZ
 593+ 9662              ;
 594+ 9662              ;
 595+ 9662              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9662
 597+ 9662 21 EC 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9665 3A F9 85     	ld a,(Vel_left)
 599+ 9668 A7           	and a
 600+ 9669 28 06        	jr z,1F
 601+ 966B 47           	ld b,a
 602+ 966C 35           3 dec (hl)
 603+ 966D 10 FD        	djnz 3B
 604+ 966F 18 01        	jr 2F
 605+ 9671 35           1 dec (hl)
 606+ 9672 C9           2 ret
 607+ 9673
 608+ 9673              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9673
 610+ 9673 2A E6 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9676 01 1F 00     	ld bc,31
 612+ 9679 A7           	and a
 613+ 967A ED 4A        	adc hl,bc
 614+ 967C 22 E6 85     	ld (Posicion_actual),hl
 615+ 967F 21 12 86     	ld hl,Ctrl_0														; $xxx1
 616+ 9682 CB C6        	set 0,(hl)
 617+ 9684 C9           	ret
 618+ 9685
 619+ 9685              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9685
 621+ 9685 2A E6 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9688 01 1F 00     	ld bc,31
 623+ 968B A7           	and a
 624+ 968C ED 42        	sbc hl,bc
 625+ 968E 22 E6 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9691 21 12 86     	ld hl,Ctrl_0
 627+ 9694 CB CE        	set 1,(hl)
 628+ 9696 C9           	ret
 629+ 9697
 630+ 9697              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9697
 632+ 9697 24           Reaparece_abajo inc h
 633+ 9698 01 E0 17     	ld bc,$17e0
 634+ 969B A7           	and a
 635+ 969C ED 4A        	adc hl,bc
 636+ 969E 22 E6 85     	ld (Posicion_actual),hl
 637+ 96A1 21 12 86     	ld hl,Ctrl_0
 638+ 96A4 CB D6        	set 2,(hl)
 639+ 96A6 C9           	ret
 640+ 96A7
 641+ 96A7              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 96A7
 643+ 96A7 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 96AA A7           	and a
 645+ 96AB ED 42        	sbc hl,bc
 646+ 96AD 22 E6 85     	ld (Posicion_actual),hl
 647+ 96B0 21 12 86     	ld hl,Ctrl_0
 648+ 96B3 CB DE        	set 3,(hl)
 649+ 96B5 C9           	ret
 650+ 96B6
 651+ 96B6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 96B6
 653+ 96B6 2A F6 85     Reinicio ld hl,(Posicion_inicio)
 654+ 96B9 22 E6 85     	ld (Posicion_actual),hl
 655+ 96BC C9           	ret
# file closed: Direcciones.asm
1094  96BD              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 96BD              ; ------------------------------------------------------------------------
   2+ 96BD              ;
   3+ 96BD              ;	02/04/23
   4+ 96BD              ;
   5+ 96BD              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 96BD              ;	Fila superior "0", Columna izquierda "0".
   7+ 96BD              ;
   8+ 96BD              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 96BD              ;
  10+ 96BD              ;	Modifica: A,BC y DE.
  11+ 96BD
  12+ 96BD C5           Genera_coordenadas push bc
  13+ 96BE E5           	push hl
  14+ 96BF D5           	push de
  15+ 96C0
  16+ 96C0 2A E6 85     	ld hl,(Posicion_actual)
  17+ 96C3
  18+ 96C3 7D           	ld a,l
  19+ 96C4 E6 1F        	and $1f
  20+ 96C6 32 EA 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 96C9
  22+ 96C9 CD 91 93     	call calcula_tercio
  23+ 96CC 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 96CD
  25+ 96CD 1E 00        	ld e,0
  26+ 96CF 7D           	ld a,l
  27+ 96D0 E6 E0        	and $e0
  28+ 96D2 28 01        	jr z,1F
  29+ 96D4 04           	inc b
  30+ 96D5
  31+ 96D5 04           1 inc b
  32+ 96D6 05           	dec b
  33+ 96D7 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 96D9              ;														; _ , salimos.
  35+ 96D9 1C           3 inc e
  36+ 96DA D6 20        	sub 32
  37+ 96DC 20 FB        	jr nz,3B
  38+ 96DE 10 F5        	djnz 1B
  39+ 96E0
  40+ 96E0 7B           2 ld a,e
  41+ 96E1 32 EB 85     	ld (Coordenada_y),a
  42+ 96E4
  43+ 96E4 D1           	pop de
  44+ 96E5 E1           	pop hl
  45+ 96E6 C1           	pop bc
  46+ 96E7
  47+ 96E7 C9           	ret
  48+ 96E8
  49+ 96E8              ; ------------------------------------------------------------------------
  50+ 96E8              ;	28/03/23
  51+ 96E8              ;
  52+ 96E8              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 96E8              ;	Fila superior "0", Columna izquierda "0".
  54+ 96E8              ;
  55+ 96E8              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 96E8              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 96E8              ;
  58+ 96E8              ;		DE="$120d"
  59+ 96E8              ;
  60+ 96E8              ;		D, (Coordenada_X), Columnas, $12
  61+ 96E8              ;		E, (Coordenada_y), Filas, $0d
  62+ 96E8              ;
  63+ 96E8              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 96E8
  65+ 96E8              ;	Modifica: A,BC y DE.
  66+ 96E8
  67+ 96E8
  68+ 96E8              Genera_coordenadas_disparo
  69+ 96E8
  70+ 96E8              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 96E8
  72+ 96E8 7D           	ld a,l
  73+ 96E9 E6 1F        	and $1f
  74+ 96EB 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 96EC CD 91 93     	call calcula_tercio
  76+ 96EF 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 96F0 1E 00        	ld e,0
  78+ 96F2 7D           	ld a,l
  79+ 96F3 E6 E0        	and $e0
  80+ 96F5 28 01        	jr z,1F
  81+ 96F7 04           	inc b
  82+ 96F8 1C           1 inc e
  83+ 96F9 D6 20        	sub 32
  84+ 96FB 20 FB        	jr nz,1B
  85+ 96FD 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 96FF C9           	ret
  87+ 9700
# file closed: Genera_coordenadas.asm
1095  9700              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9700
   2+ 9700
   3+ 9700              ;   11/8/22
   4+ 9700              ;
   5+ 9700              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9700              ;
   7+ 9700              ;   Mov_obj.asm
   8+ 9700              ;
   9+ 9700              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9700              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9700              ;
  12+ 9700              ;   Codificación:
  13+ 9700              ;
  14+ 9700              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9700
  16+ 9700              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9700
  18+ 9700 02 40 00     Arriba db 2,%01000000,0
  19+ 9703 02 80 00     Abajo db 2,%10000000,0
  20+ 9706 02 20 00     Derecha db 2,%00100000,0
  21+ 9709 02 10 00     Izquierda db 2,%00010000,0
  22+ 970C 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9710 60 42 60 40
  22+ 9714 63
  23+ 9715 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9719 22 A3 80 A0
  24+ 971D 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9721 84 A0 83 A0
  25+ 9725 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9729 80 A3 22 A0
  26+ 972D 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9731 40 60 42 60
  27+ 9735 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9739
  29+ 9739 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 973D 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9741 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9745 84 00
  32+ 9747 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 974B 84 00
  33+ 974D 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9751 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9755 1F 1F 1F 1F
  35+ 9759 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 975D 1F 1F 1F 1F
  35+ 9761 1F
  36+ 9762 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9766 2F 2F 2F 2F
  36+ 976A 2F 2F
  37+ 976C 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9770 2F 2F 00
  38+ 9773
  39+ 9773              ; ----- ----- ----- ----- -----
  40+ 9773
  41+ 9773 51 97        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9775 4D 97        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9777 09 97        Indice_mov_Izquierda defw Izquierda
  44+ 9779 06 97        Indice_mov_Derecha defw Derecha
  45+ 977B 03 97        Indice_mov_Abajo defw Abajo
  46+ 977D 00 97        Indice_mov_Arriba defw Arriba
  47+ 977F 3D 97        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9781 41 97        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9783 39 97        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9785 47 97        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9787 0C 97        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9789              ; ----- ----- ----- ----- -----
  53+ 9789
  54+ 9789 3A 19 86     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 978C A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 978D 28 02            jr z,1F
  57+ 978F 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9791 3A 1A 86     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9794 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9796 32 1A 86         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9799              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9799 2A 17 86         ld hl,(Puntero_mov)
  63+ 979C 7E               ld a,(hl)
  64+ 979D 32 19 86         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 97A0 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 97A1 22 17 86         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 97A4
  68+ 97A4 3A 1B 86     Decoder ld a,(Repetimos_db)
  69+ 97A7 A7               and a
  70+ 97A8 20 0C            jr nz,12F
  71+ 97AA 2A 17 86         ld hl,(Puntero_mov)
  72+ 97AD 7E               ld a,(hl)
  73+ 97AE A7               and a
  74+ 97AF 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 97B1 E6 0F            and $0f
  76+ 97B3 32 1B 86         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 97B6              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 97B6 2A 17 86     12 ld hl,(Puntero_mov)
  79+ 97B9 CB 7E            bit 7,(hl)
  80+ 97BB 28 03            jr z,2F
  81+ 97BD CD AF 93         call Mov_down
  82+ 97C0 2A 17 86     2 ld hl, (Puntero_mov)
  83+ 97C3 CB 76            bit 6,(hl)
  84+ 97C5 28 03            jr z,3F
  85+ 97C7 CD DD 93         call Mov_up
  86+ 97CA 2A 17 86     3 ld hl, (Puntero_mov)
  87+ 97CD CB 6E            bit 5,(hl)
  88+ 97CF 28 03            jr z,4F
  89+ 97D1 CD 0B 94         call Mov_right
  90+ 97D4 2A 17 86     4 ld hl, (Puntero_mov)
  91+ 97D7 CB 66            bit 4,(hl)
  92+ 97D9 28 03            jr z,5F
  93+ 97DB CD 29 95         call Mov_left
  94+ 97DE
  95+ 97DE              ; ---------- --------- --------- ---------- ----------
  96+ 97DE
  97+ 97DE 3A 1B 86     5 ld a,(Repetimos_db)
  98+ 97E1 A7               and a
  99+ 97E2 28 07            jr z,6F
 100+ 97E4 3D               dec a
 101+ 97E5 32 1B 86         ld (Repetimos_db),a
 102+ 97E8 28 01            jr z,6f
 103+ 97EA C9           11 ret
 104+ 97EB 21 19 86     6 ld hl,Contador_db_mov
 105+ 97EE 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 97EF 2A 17 86         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 97F2 23               inc hl
 108+ 97F3 22 17 86         ld (Puntero_mov),hl
 109+ 97F6 18 F2            jr 11B
 110+ 97F8 2A 15 86     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 97FB 3A 1A 86         ld a,(Incrementa_puntero)
 112+ 97FE 47               ld b,a
 113+ 97FF 23           8 inc hl
 114+ 9800 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9802 5E               ld e,(hl)
 116+ 9803 23               inc hl
 117+ 9804 56               ld d,(hl)
 118+ 9805 EB               ex de,hl
 119+ 9806 22 17 86         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9809 18 DF            jr 11B
 121+ 980B
 122+ 980B              ; ---------- --------- --------- ---------- ----------
 123+ 980B              ;
 124+ 980B              ;   11/8/22
 125+ 980B              ;
 126+ 980B              ;   Prepara_Puntero_mov
 127+ 980B
 128+ 980B E5           Prepara_Puntero_mov push hl
 129+ 980C D5               push de
 130+ 980D 2A 15 86         ld hl,(Puntero_indice_mov)
 131+ 9810 5E               ld e,(hl)
 132+ 9811 23               inc hl
 133+ 9812 56               ld d,(hl)
 134+ 9813 EB               ex de,hl
 135+ 9814 22 17 86         ld (Puntero_mov),hl
 136+ 9817 D1               pop de
 137+ 9818 E1               pop hl
 138+ 9819 C9               ret
 139+ 981A
 140+ 981A              ; ---------- --------- --------- ---------- ----------
 141+ 981A              ;
 142+ 981A              ;   11/8/22
 143+ 981A              ;
 144+ 981A              ;   Reinicia_el_movimiento
 145+ 981A
 146+ 981A CD 0B 98     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 981D AF               xor a
 148+ 981E 32 19 86         ld (Contador_db_mov),a
 149+ 9821 32 1A 86         ld (Incrementa_puntero),a
 150+ 9824 C3 89 97         jp Movimiento
 151+ 9827 C9               ret
 152+ 9828              ; ---------- --------- --------- ---------- ----------
 153+ 9828
 154+ 9828
 155+ 9828
 156+ 9828
 157+ 9828
 158+ 9828
 159+ 9828
 160+ 9828
 161+ 9828
 162+ 9828
 163+ 9828
 164+ 9828
 165+ 9828
 166+ 9828
 167+ 9828
 168+ 9828
 169+ 9828
 170+ 9828
# file closed: Patrones_de_mov.asm
1096  9828              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9828              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9828              ;
   3+ 9828              ;	3/1/23
   4+ 9828              ;
   5+ 9828              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9828
   7+ 9828              ;	ADC HL,SP	LD (addr),SP
   8+ 9828              ;	ADD HL,SP	LD SP,(addr)
   9+ 9828              ;	ADD IX,SP	LD SP,nn
  10+ 9828              ; 	ADD IY,SP	LD SP,HL
  11+ 9828              ;				LD SP,IX
  12+ 9828              ;	DEC SP		LD SP,IY
  13+ 9828
  14+ 9828              ;	EX (SP),HL
  15+ 9828              ;	EX (SP),IX
  16+ 9828              ;	EX (SP),IY
  17+ 9828
  18+ 9828              ;	INC SP
  19+ 9828
  20+ 9828
  21+ 9828                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 2B 86      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 21 86         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 31 86         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 2F 86     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 31 86         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 2F 86     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 2B 86  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1097  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1098  7FE6
1099  7FE6              	SAVESNA "Pruebas.sna", START
1100  7FE6
1101  7FE6
1102  7FE6
# file closed: Banco_de_pruebas.asm
