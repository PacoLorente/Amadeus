# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD DC 8A     	call Frame
  15  A104
  16  A104 3A FE 89     	ld a,(Ctrl_2)
  17  A107 CB 67        	bit 4,a
  18  A109 20 FE        	jr nz,$
  19  A10B
  20  A10B 3A 00 8A     	ld a,(Ctrl_1) 										; Existe Loop?
  21  A10E CB 5F        	bit 3,a
  22  A110 ED 4D        	reti
  23  A112
  24  A112              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  25  A112
  26  A112              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A112              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A112              ;
   3+ A112              ;	17/02/23
   4+ A112              ;
   5+ A112              ;	Sprites e índices.
   6+ A112
   7+ A112              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
# file closed: Sprites_e_indices.asm
  27  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C
  95+ 856C              Indice_de_cajas										 ;! 66 Bytes por entidad.
  96+ 856C
  97+ 856C C6 85        	defw Caja_1
  98+ 856E 08 86        	defw Caja_2
  99+ 8570 4A 86        	defw Caja_3
 100+ 8572 8C 86        	defw Caja_4
 101+ 8574 CE 86        	defw Caja_5
 102+ 8576 10 87        	defw Caja_6
 103+ 8578 52 87        	defw Caja_7
 104+ 857A 94 87        	defw Caja_8
 105+ 857C D6 87        	defw Caja_9
 106+ 857E 18 88        	defw Caja_10
 107+ 8580              ;	...
 108+ 8580              ;	...
 109+ 8580              ;	+ entidades ...
 110+ 8580 00 00        	defw 0
 111+ 8582 00 00        	defw 0
 112+ 8584
 113+ 8584              ; ---------- ---------- ---------- ---------- ----------
 114+ 8584
 115+ 8584 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8586 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8588 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 858A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 858D
 120+ 858D 05           	db %00000101									; (Attr).
 121+ 858E 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8590 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 8592
 124+ 8592 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8594 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8596
 127+ 8596 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8598 04           	db 4 											; (Cuad_objeto).
 129+ 8599 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 859D
 131+ 859D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 859E
 133+ 859E 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A0 00 00        	defw 0											;	" " " " " " "
 135+ 85A2 00 00        	defw 0											;	" " " " " " "
 136+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A8
 138+ 85A8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85AA 00 00        	defw 0											;	" " " " " " "
 140+ 85AC 00 00        	defw 0											;	" " " " " " "
 141+ 85AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85B2
 143+ 85B2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85B4
 145+ 85B4 00           	db 0											; (Autoriza_movimiento).
 146+ 85B5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85B9 00 00
 147+ 85BB 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 148+ 85BD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 149+ 85BF 00           	db 0											; (Cola_de_desplazamiento).
 150+ 85C0
 151+ 85C0 00           	db 0 											; (Columnas).
 152+ 85C1 00 00        	defw 0											; (Limite_horizontal).
 153+ 85C3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 154+ 85C6
 155+ 85C6              ; ---------- ---------- ---------- ---------- ----------
 156+ 85C6
 157+ 85C6 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 158+ 85C8 00 00        	defw 0											; (Posicion_actual).
 159+ 85CA 00 00        	defw 0 											; (Puntero_objeto).
 160+ 85CC 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 161+ 85CF
 162+ 85CF 00           	db %00000000 									; (Attr).
 163+ 85D0
 164+ 85D0 00 00        	defw 0											; (Indice_Sprite_der).
 165+ 85D2 00 00        	defw 0											; (Indice_Sprite_izq).
 166+ 85D4 00 00        	defw 0											; (Puntero_DESPLZ_der).
 167+ 85D6 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 168+ 85D8
 169+ 85D8 00 00        	defw 0											; (Posicion_inicio).
 170+ 85DA 00           	db 0											; (Cuad_objeto).
 171+ 85DB
 172+ 85DB 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 173+ 85DF
 174+ 85DF 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 175+ 85E0
 176+ 85E0 00 00        	db 0,0										    ; Variables_de_borrado
 177+ 85E2 00 00        	defw 0											;	" " " " " " "
 178+ 85E4 00 00        	defw 0											;	" " " " " " "
 179+ 85E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 85EA
 181+ 85EA 00 00        	db 0,0											; Variables_de_pintado
 182+ 85EC 00 00        	defw 0											;	" " " " " " "
 183+ 85EE 00 00        	defw 0											;	" " " " " " "
 184+ 85F0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 185+ 85F4
 186+ 85F4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 187+ 85F6
 188+ 85F6 00           	db 0											; (Autoriza_movimiento).
 189+ 85F7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 189+ 85FB 00 00
 190+ 85FD 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 191+ 85FF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 192+ 8601 00           	db 0											; (Cola_de_desplazamiento).
 193+ 8602
 194+ 8602 00           	db 0 											; (Columnas).
 195+ 8603 00 00        	defw 0											; (Limite_horizontal).
 196+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 197+ 8608
 198+ 8608              ; ---------- ---------- ---------- ---------- ----------
 199+ 8608
 200+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 201+ 860A 00 00        	defw 0											; (Posicion_actual).
 202+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 203+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 204+ 8611
 205+ 8611 00           	db %00000000 									; (Attr).
 206+ 8612
 207+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 208+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 209+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 210+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 211+ 861A
 212+ 861A 00 00        	defw 0											; (Posicion_inicio).
 213+ 861C 00           	db 0											; (Cuad_objeto).
 214+ 861D
 215+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 216+ 8621
 217+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 218+ 8622
 219+ 8622 00 00        	db 0,0										    ; Variables_de_borrado
 220+ 8624 00 00        	defw 0											;	" " " " " " "
 221+ 8626 00 00        	defw 0											;	" " " " " " "
 222+ 8628 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 862C
 224+ 862C 00 00        	db 0,0											; Variables_de_pintado
 225+ 862E 00 00        	defw 0											;	" " " " " " "
 226+ 8630 00 00        	defw 0											;	" " " " " " "
 227+ 8632 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 228+ 8636
 229+ 8636 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 230+ 8638
 231+ 8638 00           	db 0											; (Autoriza_movimiento).
 232+ 8639 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 232+ 863D 00 00
 233+ 863F 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 234+ 8641 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 235+ 8643 00           	db 0											; (Cola_de_desplazamiento).
 236+ 8644
 237+ 8644 00           	db 0 											; (Columnas).
 238+ 8645 00 00        	defw 0											; (Limite_horizontal).
 239+ 8647 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 240+ 864A
 241+ 864A              ; ---------- ---------- ---------- ---------- ----------
 242+ 864A
 243+ 864A 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 244+ 864C 00 00        	defw 0											; (Posicion_actual).
 245+ 864E 00 00        	defw 0 											; (Puntero_objeto).
 246+ 8650 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 247+ 8653
 248+ 8653 00           	db %00000000 									; (Attr).
 249+ 8654
 250+ 8654 00 00        	defw 0											; (Indice_Sprite_der).
 251+ 8656 00 00        	defw 0											; (Indice_Sprite_izq).
 252+ 8658 00 00        	defw 0											; (Puntero_DESPLZ_der).
 253+ 865A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 254+ 865C
 255+ 865C 00 00        	defw 0											; (Posicion_inicio).
 256+ 865E 00           	db 0											; (Cuad_objeto).
 257+ 865F
 258+ 865F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 259+ 8663
 260+ 8663 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 261+ 8664
 262+ 8664 00 00        	db 0,0										    ; Variables_de_borrado
 263+ 8666 00 00        	defw 0											;	" " " " " " "
 264+ 8668 00 00        	defw 0											;	" " " " " " "
 265+ 866A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 266+ 866E
 267+ 866E 00 00        	db 0,0											; Variables_de_pintado
 268+ 8670 00 00        	defw 0											;	" " " " " " "
 269+ 8672 00 00        	defw 0											;	" " " " " " "
 270+ 8674 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 271+ 8678
 272+ 8678 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 273+ 867A
 274+ 867A 00           	db 0											; (Autoriza_movimiento).
 275+ 867B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 275+ 867F 00 00
 276+ 8681 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 277+ 8683 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 278+ 8685 00           	db 0											; (Cola_de_desplazamiento).
 279+ 8686
 280+ 8686 00           	db 0 											; (Columnas).
 281+ 8687 00 00        	defw 0											; (Limite_horizontal).
 282+ 8689 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 283+ 868C
 284+ 868C              ; ---------- ---------- ---------- ---------- ----------
 285+ 868C
 286+ 868C 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 287+ 868E 00 00        	defw 0											; (Posicion_actual).
 288+ 8690 00 00        	defw 0 											; (Puntero_objeto).
 289+ 8692 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 290+ 8695
 291+ 8695 00           	db %00000000 									; (Attr).
 292+ 8696
 293+ 8696 00 00        	defw 0											; (Indice_Sprite_der).
 294+ 8698 00 00        	defw 0											; (Indice_Sprite_izq).
 295+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 296+ 869C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 297+ 869E
 298+ 869E 00 00        	defw 0											; (Posicion_inicio).
 299+ 86A0 00           	db 0											; (Cuad_objeto).
 300+ 86A1
 301+ 86A1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 302+ 86A5
 303+ 86A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 304+ 86A6
 305+ 86A6 00 00        	db 0,0										    ; Variables_de_borrado
 306+ 86A8 00 00        	defw 0											;	" " " " " " "
 307+ 86AA 00 00        	defw 0											;	" " " " " " "
 308+ 86AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 309+ 86B0
 310+ 86B0 00 00        	db 0,0											; Variables_de_pintado
 311+ 86B2 00 00        	defw 0											;	" " " " " " "
 312+ 86B4 00 00        	defw 0											;	" " " " " " "
 313+ 86B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 314+ 86BA
 315+ 86BA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 316+ 86BC
 317+ 86BC 00           	db 0											; (Autoriza_movimiento).
 318+ 86BD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 318+ 86C1 00 00
 319+ 86C3 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 320+ 86C5 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 321+ 86C7 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86C8
 323+ 86C8 00           	db 0 											; (Columnas).
 324+ 86C9 00 00        	defw 0											; (Limite_horizontal).
 325+ 86CB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86CE
 327+ 86CE              ; ---------- ---------- ---------- ---------- ----------
 328+ 86CE
 329+ 86CE 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86D0 00 00        	defw 0											; (Posicion_actual).
 331+ 86D2 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86D4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86D7
 334+ 86D7 00           	db %00000000 									; (Attr).
 335+ 86D8
 336+ 86D8 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86DA 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86DC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86DE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86E0
 341+ 86E0 00 00        	defw 0											; (Posicion_inicio).
 342+ 86E2 00           	db 0											; (Cuad_objeto).
 343+ 86E3
 344+ 86E3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 86E7
 346+ 86E7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 86E8
 348+ 86E8 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 86EA 00 00        	defw 0											;	" " " " " " "
 350+ 86EC 00 00        	defw 0											;	" " " " " " "
 351+ 86EE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 86F2
 353+ 86F2 00 00        	db 0,0											; Variables_de_pintado
 354+ 86F4 00 00        	defw 0											;	" " " " " " "
 355+ 86F6 00 00        	defw 0											;	" " " " " " "
 356+ 86F8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 86FC
 358+ 86FC 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 86FE
 360+ 86FE 00           	db 0											; (Autoriza_movimiento).
 361+ 86FF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 361+ 8703 00 00
 362+ 8705 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 363+ 8707 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 364+ 8709 00           	db 0											; (Cola_de_desplazamiento).
 365+ 870A
 366+ 870A 00           	db 0 											; (Columnas).
 367+ 870B 00 00        	defw 0											; (Limite_horizontal).
 368+ 870D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 369+ 8710
 370+ 8710              ; ---------- ---------- ---------- ---------- ----------
 371+ 8710
 372+ 8710 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 373+ 8712 00 00        	defw 0											; (Posicion_actual).
 374+ 8714 00 00        	defw 0 											; (Puntero_objeto).
 375+ 8716 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 376+ 8719
 377+ 8719 00           	db %00000000 									; (Attr).
 378+ 871A
 379+ 871A 00 00        	defw 0											; (Indice_Sprite_der).
 380+ 871C 00 00        	defw 0											; (Indice_Sprite_izq).
 381+ 871E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 382+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 383+ 8722
 384+ 8722 00 00        	defw 0											; (Posicion_inicio).
 385+ 8724 00           	db 0											; (Cuad_objeto).
 386+ 8725
 387+ 8725 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 388+ 8729
 389+ 8729 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 390+ 872A
 391+ 872A 00 00        	db 0,0										    ; Variables_de_borrado
 392+ 872C 00 00        	defw 0											;	" " " " " " "
 393+ 872E 00 00        	defw 0											;	" " " " " " "
 394+ 8730 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 395+ 8734
 396+ 8734 00 00        	db 0,0											; Variables_de_pintado
 397+ 8736 00 00        	defw 0											;	" " " " " " "
 398+ 8738 00 00        	defw 0											;	" " " " " " "
 399+ 873A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 400+ 873E
 401+ 873E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 402+ 8740
 403+ 8740 00           	db 0											; (Autoriza_movimiento).
 404+ 8741 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 404+ 8745 00 00
 405+ 8747 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 406+ 8749 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 407+ 874B 00           	db 0											; (Cola_de_desplazamiento).
 408+ 874C
 409+ 874C 00           	db 0 											; (Columnas).
 410+ 874D 00 00        	defw 0											; (Limite_horizontal).
 411+ 874F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 412+ 8752
 413+ 8752              ; ---------- ---------- ---------- ---------- ----------
 414+ 8752
 415+ 8752 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 416+ 8754 00 00        	defw 0											; (Posicion_actual).
 417+ 8756 00 00        	defw 0 											; (Puntero_objeto).
 418+ 8758 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 419+ 875B
 420+ 875B 00           	db %00000000 									; (Attr).
 421+ 875C
 422+ 875C 00 00        	defw 0											; (Indice_Sprite_der).
 423+ 875E 00 00        	defw 0											; (Indice_Sprite_izq).
 424+ 8760 00 00        	defw 0											; (Puntero_DESPLZ_der).
 425+ 8762 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 426+ 8764
 427+ 8764 00 00        	defw 0											; (Posicion_inicio).
 428+ 8766 00           	db 0											; (Cuad_objeto).
 429+ 8767
 430+ 8767 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 431+ 876B
 432+ 876B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 433+ 876C
 434+ 876C 00 00        	db 0,0										    ; Variables_de_borrado
 435+ 876E 00 00        	defw 0											;	" " " " " " "
 436+ 8770 00 00        	defw 0											;	" " " " " " "
 437+ 8772 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 438+ 8776
 439+ 8776 00 00        	db 0,0											; Variables_de_pintado
 440+ 8778 00 00        	defw 0											;	" " " " " " "
 441+ 877A 00 00        	defw 0											;	" " " " " " "
 442+ 877C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 443+ 8780
 444+ 8780 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 445+ 8782
 446+ 8782 00           	db 0											; (Autoriza_movimiento).
 447+ 8783 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 447+ 8787 00 00
 448+ 8789 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 449+ 878B 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 450+ 878D 00           	db 0											; (Cola_de_desplazamiento).
 451+ 878E
 452+ 878E 00           	db 0 											; (Columnas).
 453+ 878F 00 00        	defw 0											; (Limite_horizontal).
 454+ 8791 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 455+ 8794
 456+ 8794              ; ---------- ---------- ---------- ---------- ----------
 457+ 8794
 458+ 8794 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 459+ 8796 00 00        	defw 0											; (Posicion_actual).
 460+ 8798 00 00        	defw 0 											; (Puntero_objeto).
 461+ 879A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 462+ 879D
 463+ 879D 00           	db %00000000 									; (Attr).
 464+ 879E
 465+ 879E 00 00        	defw 0											; (Indice_Sprite_der).
 466+ 87A0 00 00        	defw 0											; (Indice_Sprite_izq).
 467+ 87A2 00 00        	defw 0											; (Puntero_DESPLZ_der).
 468+ 87A4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 469+ 87A6
 470+ 87A6 00 00        	defw 0											; (Posicion_inicio).
 471+ 87A8 00           	db 0											; (Cuad_objeto).
 472+ 87A9
 473+ 87A9 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 474+ 87AD
 475+ 87AD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 476+ 87AE
 477+ 87AE 00 00        	db 0,0										    ; Variables_de_borrado
 478+ 87B0 00 00        	defw 0											;	" " " " " " "
 479+ 87B2 00 00        	defw 0											;	" " " " " " "
 480+ 87B4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 481+ 87B8
 482+ 87B8 00 00        	db 0,0											; Variables_de_pintado
 483+ 87BA 00 00        	defw 0											;	" " " " " " "
 484+ 87BC 00 00        	defw 0											;	" " " " " " "
 485+ 87BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 486+ 87C2
 487+ 87C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 488+ 87C4
 489+ 87C4 00           	db 0											; (Autoriza_movimiento).
 490+ 87C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 490+ 87C9 00 00
 491+ 87CB 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 492+ 87CD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 493+ 87CF 00           	db 0											; (Cola_de_desplazamiento).
 494+ 87D0
 495+ 87D0 00           	db 0 											; (Columnas).
 496+ 87D1 00 00        	defw 0											; (Limite_horizontal).
 497+ 87D3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 498+ 87D6
 499+ 87D6              ; ---------- ---------- ---------- ---------- ----------
 500+ 87D6
 501+ 87D6 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 502+ 87D8 00 00        	defw 0											; (Posicion_actual).
 503+ 87DA 00 00        	defw 0 											; (Puntero_objeto).
 504+ 87DC 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 505+ 87DF
 506+ 87DF 00           	db %00000000 									; (Attr).
 507+ 87E0
 508+ 87E0 00 00        	defw 0											; (Indice_Sprite_der).
 509+ 87E2 00 00        	defw 0											; (Indice_Sprite_izq).
 510+ 87E4 00 00        	defw 0											; (Puntero_DESPLZ_der).
 511+ 87E6 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 512+ 87E8
 513+ 87E8 00 00        	defw 0											; (Posicion_inicio).
 514+ 87EA 00           	db 0											; (Cuad_objeto).
 515+ 87EB
 516+ 87EB 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 517+ 87EF
 518+ 87EF 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 519+ 87F0
 520+ 87F0 00 00        	db 0,0										    ; Variables_de_borrado
 521+ 87F2 00 00        	defw 0											;	" " " " " " "
 522+ 87F4 00 00        	defw 0											;	" " " " " " "
 523+ 87F6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 524+ 87FA
 525+ 87FA 00 00        	db 0,0											; Variables_de_pintado
 526+ 87FC 00 00        	defw 0											;	" " " " " " "
 527+ 87FE 00 00        	defw 0											;	" " " " " " "
 528+ 8800 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 529+ 8804
 530+ 8804 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 531+ 8806
 532+ 8806 00           	db 0											; (Autoriza_movimiento).
 533+ 8807 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 533+ 880B 00 00
 534+ 880D 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 535+ 880F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 536+ 8811 00           	db 0											; (Cola_de_desplazamiento).
 537+ 8812
 538+ 8812 00           	db 0 											; (Columnas).
 539+ 8813 00 00        	defw 0											; (Limite_horizontal).
 540+ 8815 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 541+ 8818
 542+ 8818              ; ---------- ---------- ---------- ---------- ----------
 543+ 8818
 544+ 8818 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 545+ 881A 00 00        	defw 0											; (Posicion_actual).
 546+ 881C 00 00        	defw 0 											; (Puntero_objeto).
 547+ 881E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 548+ 8821
 549+ 8821 00           	db %00000000 									; (Attr).
 550+ 8822
 551+ 8822 00 00        	defw 0											; (Indice_Sprite_der).
 552+ 8824 00 00        	defw 0											; (Indice_Sprite_izq).
 553+ 8826 00 00        	defw 0											; (Puntero_DESPLZ_der).
 554+ 8828 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 555+ 882A
 556+ 882A 00 00        	defw 0											; (Posicion_inicio).
 557+ 882C 00           	db 0											; (Cuad_objeto).
 558+ 882D
 559+ 882D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 560+ 8831
 561+ 8831 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 562+ 8832
 563+ 8832 00 00        	db 0,0										    ; Variables_de_borrado
 564+ 8834 00 00        	defw 0											;	" " " " " " "
 565+ 8836 00 00        	defw 0											;	" " " " " " "
 566+ 8838 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 567+ 883C
 568+ 883C 00 00        	db 0,0											; Variables_de_pintado
 569+ 883E 00 00        	defw 0											;	" " " " " " "
 570+ 8840 00 00        	defw 0											;	" " " " " " "
 571+ 8842 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 572+ 8846
 573+ 8846 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 574+ 8848
 575+ 8848 00           	db 0											; (Autoriza_movimiento).
 576+ 8849 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 576+ 884D 00 00
 577+ 884F 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 578+ 8851 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 579+ 8853 00           	db 0											; (Cola_de_desplazamiento).
 580+ 8854
 581+ 8854 00           	db 0 											; (Columnas).
 582+ 8855 00 00        	defw 0											; (Limite_horizontal).
 583+ 8857 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 584+ 885A
 585+ 885A              ; -------------------------------------------------------------------------------------
 586+ 885A              ;
 587+ 885A              ;	20/05/23
 588+ 885A              ;
 589+ 885A              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 590+ 885A              ;
 591+ 885A              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 592+ 885A              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 593+ 885A              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 594+ 885A              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 595+ 885A
 596+ 885A              Indice_de_entidades
 597+ 885A
 598+ 885A 64 88        	defw Entidad_1
 599+ 885C 74 88        	defw Entidad_2
 600+ 885E 84 88        	defw Entidad_3
 601+ 8860 94 88        	defw Entidad_4
 602+ 8862 A4 88        	defw Entidad_5
 603+ 8864
 604+ 8864              ;	BADSAT, (Satélite malvado).
 605+ 8864
 606+ 8864 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 607+ 8866 04           	db %00000100									; (Attr).
 608+ 8867 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 609+ 8869 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 610+ 886B 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 611+ 886D 01           	db 1											; (Cuad_objeto).
 612+ 886E 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 613+ 8872 C7 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 614+ 8874
 615+ 8874 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 616+ 8876 02           	db %00000010									; (Attr).
 617+ 8877 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 618+ 8879 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 619+ 887B 40 50        	defw $5040                                      ; (Posicion_inicio).
 620+ 887D 01           	db 1											; (Cuad_objeto).
 621+ 887E 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 622+ 8882 C7 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 623+ 8884
 624+ 8884 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 625+ 8886 04           	db %00000100									; (Attr).
 626+ 8887 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 627+ 8889 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 628+ 888B A0 47        	defw $47a0                                      ; (Posicion_inicio).
 629+ 888D 01           	db 1											; (Cuad_objeto).
 630+ 888E 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 631+ 8892 C7 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 632+ 8894
 633+ 8894 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 634+ 8896 01           	db %00000001									; (Attr).
 635+ 8897 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 636+ 8899 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 637+ 889B BF 47        	defw $47bf                                      ; (Posicion_inicio).
 638+ 889D 01           	db 1											; (Cuad_objeto).
 639+ 889E 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 640+ 88A2 C7 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 641+ 88A4
 642+ 88A4 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 643+ 88A6 01           	db %00000001									; (Attr).
 644+ 88A7 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 645+ 88A9 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 646+ 88AB 07 40        	defw $4007                                      ; (Posicion_inicio).
 647+ 88AD 01           	db 1											; (Cuad_objeto).
 648+ 88AE 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 649+ 88B2 C7 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 650+ 88B4
# file closed: Cajas_y_disparos.asm
  28  88B4              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88B4              ; 13/05/23
   2+ 88B4
   3+ 88B4              Indice_de_niveles
   4+ 88B4
   5+ 88B4 C2 88        	defw Nivel_1
   6+ 88B6 C4 88        	defw Nivel_2
   7+ 88B8 D1 88        	defw Nivel_3
   8+ 88BA E1 88        	defw Nivel_4
   9+ 88BC F3 88        	defw Nivel_5
  10+ 88BE
  11+ 88BE              ;	...
  12+ 88BE              ;	...
  13+ 88BE              ;	+ Niveles ...
  14+ 88BE
  15+ 88BE 00 00        	defw 0
  16+ 88C0 00 00        	defw 0
  17+ 88C2
  18+ 88C2 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88C3 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88C4 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88C5 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C9 01 02
  22+ 88CB 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88CF 01 02
  23+ 88D1 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88D2 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88D6 01
  25+ 88D7 03 01 01 01  	db 3,1,1,1,1
  25+ 88DB 01
  26+ 88DC 03 01 01 01  	db 3,1,1,1,1
  26+ 88E0 01
  27+ 88E1 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88E2 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88E6 01
  29+ 88E7 04 01 01 01  	db 4,1,1,1,1
  29+ 88EB 01
  30+ 88EC 04 01 01 01  	db 4,1,1,1,1
  30+ 88F0 01
  31+ 88F1 02 03        	db 2,3
  32+ 88F3 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88F4 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88F8 01
  34+ 88F9 05 01 01 01  	db 5,1,1,1,1
  34+ 88FD 01
  35+ 88FE 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 8902 01
  36+ 8903 05 01 01 01  	db 5,1,1,1,1
  36+ 8907 01
  37+ 8908
  38+ 8908              ;---------------------------------------------------------------------------------------------------------------
  39+ 8908              ;
  40+ 8908              ;   21/5/23
  41+ 8908              ;
  42+ 8908              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8908              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8908              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8908              ;	_en la caja DRAW correspondiente.
  46+ 8908              ;
  47+ 8908              ;	MODIFICA: HL,DE y A.
  48+ 8908              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8908
  50+ 8908              Inicializa_Punteros_de_nivel
  51+ 8908
  52+ 8908 21 B4 88     	ld hl,Indice_de_niveles
  53+ 890B 22 37 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 890E CD 29 8D     	call Extrae_address
  55+ 8911 7E           	ld a,(hl)
  56+ 8912 32 09 8A     	ld (Numero_de_entidades),a
  57+ 8915 23           	inc hl
  58+ 8916 22 39 8A     	ld (Datos_de_nivel),hl
  59+ 8919 C9           	ret
  60+ 891A
  61+ 891A              ;---------------------------------------------------------------------------------------------------------------
  62+ 891A              ;
  63+ 891A              ;   13/5/23
  64+ 891A              ;
  65+ 891A              ;	Destruye A,BC,HL,DE
  66+ 891A
  67+ 891A              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 891A              ;	_del juego.
  69+ 891A
  70+ 891A              Prepara_cajas
  71+ 891A
  72+ 891A              ; Preparamos los punteros de las cajas.
  73+ 891A
  74+ 891A 21 6C 85     	ld hl,Indice_de_cajas
  75+ 891D CD 29 8D     	call Extrae_address
  76+ 8920 CD 5D 89     	call Avanza_caja
  77+ 8923
  78+ 8923 CD A1 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8926
  80+ 8926 2A 39 8A     	ld hl,(Datos_de_nivel)
  81+ 8929
  82+ 8929              ; HL está en los datos del nivel correspondiente.
  83+ 8929              ; B actuará como contador de cajas.
  84+ 8929
  85+ 8929 C5           1 push bc
  86+ 892A
  87+ 892A 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 892B CD 4E 89     	call PreparaBC
  89+ 892E
  90+ 892E 21 5A 88     	ld hl,Indice_de_entidades
  91+ 8931 CD 56 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8934 22 0F 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8937
  94+ 8937 CD 67 89     	call Datos_de_entidad_a_caja
  95+ 893A
  96+ 893A 2A 07 8A     	ld hl,(Indice_restore_caja)
  97+ 893D CD 29 8D     	call Extrae_address
  98+ 8940 CD 5D 89     	call Avanza_caja
  99+ 8943
 100+ 8943 2A 39 8A     	ld hl,(Datos_de_nivel)
 101+ 8946 23           	inc hl
 102+ 8947 22 39 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 894A
 104+ 894A C1           	pop bc
 105+ 894B 10 DC        	djnz 1B
 106+ 894D C9           	ret
 107+ 894E
 108+ 894E CB 27        PreparaBC sla a
 109+ 8950 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8952 4F           	ld c,a
 111+ 8953 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8955 C9           	ret
 113+ 8956
 114+ 8956 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8957 ED 4A        	adc hl,bc
 116+ 8959 CD 29 8D     	call Extrae_address
 117+ 895C C9           	ret
 118+ 895D
 119+ 895D 22 03 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8960 13           	inc de
 121+ 8961 13           	inc de
 122+ 8962 EB           	ex de,hl
 123+ 8963 22 07 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8966 C9           	ret
 125+ 8967
 126+ 8967              Datos_de_entidad_a_caja
 127+ 8967
 128+ 8967              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8967
 130+ 8967
 131+ 8967 ED 5B 03 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 896B
 133+ 896B 01 02 00     	ld bc,2
 134+ 896E ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8970
 136+ 8970 01 07 00     	ld bc,7
 137+ 8973 CD 9B 89     	call Situa_DE
 138+ 8976
 139+ 8976 01 05 00     	ld bc,5
 140+ 8979 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 897B
 142+ 897B 01 04 00     	ld bc,4
 143+ 897E CD 9B 89     	call Situa_DE
 144+ 8981
 145+ 8981 01 07 00     	ld bc,7
 146+ 8984 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8986
 148+ 8986 01 18 00     	ld bc,24
 149+ 8989 CD 9B 89     	call Situa_DE
 150+ 898C
 151+ 898C 01 02 00     	ld bc,2
 152+ 898F ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8991
 154+ 8991              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8991              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8991
 157+ 8991 01 0E 00     	ld bc,14									; *****
 158+ 8994 CD 9B 89     	call Situa_DE
 159+ 8997
 160+ 8997 3E 03        	ld a,3
 161+ 8999 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 899A
 163+ 899A C9           	ret
 164+ 899B
 165+ 899B EB           Situa_DE ex de,hl
 166+ 899C A7           	and a
 167+ 899D ED 4A        	adc hl,bc
 168+ 899F EB           	ex de,hl
 169+ 89A0 C9           	ret
 170+ 89A1
 171+ 89A1              ;---------------------------------------------------------------------------------------------------------------
 172+ 89A1              ;
 173+ 89A1              ;	21/5/23
 174+ 89A1              ;
 175+ 89A1              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89A1              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89A1              ;
 178+ 89A1              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89A1              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89A1              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89A1              ;
 182+ 89A1              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89A1              ;	MODIFICA: A y B.
 184+ 89A1              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89A1
 186+ 89A1              Admin_num_entidades
 187+ 89A1
 188+ 89A1              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89A1
 190+ 89A1 3A 09 8A     	ld a,(Numero_de_entidades)
 191+ 89A4 A7           	and a
 192+ 89A5              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89A5              ;	jr z,$
 194+ 89A5              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89A5
 196+ 89A5 20 03        	jr nz,3F
 197+ 89A7
 198+ 89A7              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89A7
 200+ 89A7 CD 08 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89AA
 202+ 89AA
 203+ 89AA 3A 09 8A     3 ld a,(Numero_de_entidades)
 204+ 89AD FE 0A        	cp 10
 205+ 89AF 38 08        	jr c,1F
 206+ 89B1
 207+ 89B1              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89B1              ; Actualizamos variables.
 209+ 89B1
 210+ 89B1 3E 0A        	ld a,10
 211+ 89B3 32 0A 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89B6 47           	ld b,a
 213+ 89B7 18 04        	jr 2F
 214+ 89B9
 215+ 89B9              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89B9              ; (Numero_de_entidades)="0".
 217+ 89B9
 218+ 89B9 32 0A 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89BC 47           	ld b,a
 220+ 89BD C9           2 ret
# file closed: Niveles.asm
  29  89BE
  30  89BE              ; ******************************************************************************************************************************************************************************************
  31  89BE              ; Constantes.
  32  89BE              ; ******************************************************************************************************************************************************************************************
  33  89BE              ;
  34  89BE              ; 25/05/23
  35  89BE              ;
  36  89BE              ; Constantes generales.
  37  89BE              ;
  38  89BE
  39  89BE              Sprite_vacio equ $f000
  40  89BE              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  41  89BE              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  42  89BE              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  43  89BE              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  44  89BE
  45  89BE              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  46  89BE              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  47  89BE              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  48  89BE              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  49  89BE              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  50  89BE              ;                               				        ; De momento situamos este almacén en $7060.
  51  89BE
  52  89BE              ; ******************************************************************************************************************************************************************************************
  53  89BE              ; Variables.
  54  89BE              ; ******************************************************************************************************************************************************************************************
  55  89BE              ;
  56  89BE              ; 01/07/23
  57  89BE              ;
  58  89BE              ; Variables de DRAW. (Motor principal).
  59  89BE              ;
  60  89BE              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  61  89BE
  62  89BE 00           Filas db 0												; Filas. [DRAW]
  63  89BF 00           Columns db 0  											; Nº de columnas. [DRAW]
  64  89C0 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  65  89C2 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  66  89C4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  67  89C5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  68  89C6
  69  89C6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  70  89C6
  71  89C6 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  72  89C7              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  73  89C7              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  74  89C7 00           Attr db 0												; Atributos de la entidad:
  75  89C8
  76  89C8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  77  89C8              ;
  78  89C8              ;	COLORES: 0 ..... NEGRO
  79  89C8              ;    		 1 ..... AZUL
  80  89C8              ; 			 2 ..... ROJO
  81  89C8              ;			 3 ..... MAGENTA
  82  89C8              ; 			 4 ..... VERDE
  83  89C8              ; 			 5 ..... CIAN
  84  89C8              ;			 6 ..... AMARILLO
  85  89C8              ; 			 7 ..... BLANCO
  86  89C8
  87  89C8 00 00        Indice_Sprite_der defw 0
  88  89CA 00 00        Indice_Sprite_izq defw 0
  89  89CC 00 00        Puntero_DESPLZ_der defw 0
  90  89CE 00 00        Puntero_DESPLZ_izq defw 0
  91  89D0
  92  89D0 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  93  89D2 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  94  89D3
  95  89D3              ; Variables de objeto. (Características).
  96  89D3
  97  89D3 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  98  89D4 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  99  89D5 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 100  89D6 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 101  89D7
 102  89D7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 103  89D8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 104  89D8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 105  89D8
 106  89D8 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 107  89DA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  89DC 00 00        	defw 0
 109  89DE 00 00 00 00  	db 0,0,0,0
 110  89E2
 111  89E2 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 112  89E4 00 00        	defw 0
 113  89E6 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 114  89E8 00 00 00 00  	db 0,0,0,0
 115  89EC
 116  89EC              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 117  89EC
 118  89EC 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 119  89ED              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 120  89ED              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 121  89ED              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 122  89ED              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 123  89ED              ;
 124  89ED              ; 														DESCRIPCIÖN:
 125  89ED              ;
 126  89ED              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 127  89ED              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 128  89ED              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 129  89ED              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 130  89ED              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 131  89ED              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 132  89ED              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 133  89ED              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 134  89ED              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 135  89ED              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 136  89ED              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 137  89ED              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 138  89ED              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 139  89ED              ;
 140  89ED              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 141  89ED              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 142  89ED              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 143  89ED
 144  89ED 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 145  89EE
 146  89EE              ; Movimiento. ------------------------------------------------------------------------------------------------------
 147  89EE
 148  89EE 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 149  89EF 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 150  89F1 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 151  89F3 00 00        Puntero_indice_mov_bucle defw 0							;
 152  89F5              ;
 153  89F5              ;
 154  89F5 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 155  89F6              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 156  89F6              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 157  89F6 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 158  89F7              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 159  89F7 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 160  89F8 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 161  89F9 00           Cola_de_desplazamiento db 0								; Este byte indica:
 162  89FA              ;
 163  89FA              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 164  89FA              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 165  89FA              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 166  89FA              ;
 167  89FA              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 168  89FA              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 169  89FA              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 170  89FA              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 171  89FA              ;
 172  89FA              ;														;	"$ff" ..... Bucle infinito de repetición.
 173  89FA              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 174  89FA              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 175  89FA
 176  89FA
 177  89FA              ; Variables de funcionamiento. [DRAW].
 178  89FA
 179  89FA 00           Columnas db 0
 180  89FB 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 181  89FD              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 182  89FD 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 183  89FE
 184  89FE              ; variables de control general.
 185  89FE
 186  89FE 00           Ctrl_2 db 0
 187  89FF              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 188  89FF              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 189  89FF              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 190  89FF              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 191  89FF              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 192  89FF              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 193  89FF              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 194  89FF              ;
 195  89FF              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 196  89FF              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 197  89FF              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 198  89FF              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 199  89FF              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 200  89FF
 201  89FF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 202  8A00
 203  8A00              ;! 66 Bytes por entidad.
 204  8A00
 205  8A00              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 206  8A00              ;					         		---------;      ;---------
 207  8A00
 208  8A00
 209  8A00              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 210  8A00
 211  8A00 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 212  8A01
 213  8A01              ;														DESCRIPCIÓN:
 214  8A01              ;
 215  8A01              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 216  8A01              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 217  8A01              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 218  8A01              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 219  8A01              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 220  8A01              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 221  8A01              ;														BIT 3, Recarga de nueva oleada.
 222  8A01              ;														BIT 4, Recarga de nueva oleada.
 223  8A01
 224  8A01 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 225  8A03              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 226  8A03              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 227  8A03              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 228  8A03
 229  8A03
 230  8A03
 231  8A03              ; Gestión de ENTIDADES y CAJAS.
 232  8A03
 233  8A03 00 00        Puntero_store_caja defw 0
 234  8A05 00 00        Puntero_restore_caja defw 0
 235  8A07 00 00        Indice_restore_caja defw 0
 236  8A09 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 237  8A0A 00           Numero_parcial_de_entidades db 0
 238  8A0B 00           Entidades_en_curso db 0									; ..... ..... .....
 239  8A0C 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 240  8A0D              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 241  8A0D              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 242  8A0D              ;														; _ (Numero_de_malotes)="0".
 243  8A0D 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 244  8A0F 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 245  8A11              ;														; _ puntero (Indice_entidades).
 246  8A11
 247  8A11
 248  8A11              ;---------------------------------------------------------------------------------------------------------------
 249  8A11              ;
 250  8A11              ; Sirven para PINTAR.
 251  8A11
 252  8A11 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 253  8A13              ;														; _variable para almacenar lo posición del puntero_
 254  8A13              ; 														; _de pila, SP.
 255  8A13 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 256  8A15              ;														; La utiliza la rutina [Extrae_foto_registros].
 257  8A15 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 258  8A17              ;														; _el snapshot de los registros de la siguiente entidad.
 259  8A17              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 260  8A17 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 261  8A19              ;														; _el snapshot de los registros del siguiente disparo.
 262  8A19              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 263  8A19
 264  8A19              ;---------------------------------------------------------------------------------------------------------------
 265  8A19
 266  8A19              ; Gestión de Disparos.
 267  8A19
 268  8A19 00           Numero_de_disparotes db 0
 269  8A1A 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 270  8A1C 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 271  8A1E 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 272  8A1F              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 273  8A1F              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 274  8A1F 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 275  8A21              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 276  8A21              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 277  8A21              ;														; _produzca colisión.
 278  8A21 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 279  8A23              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 280  8A23 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 281  8A26              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 282  8A26 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 283  8A29              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 284  8A29 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 285  8A2B 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 286  8A2C
 287  8A2C              ;---------------------------------------------------------------------------------------------------------------
 288  8A2C
 289  8A2C              ; Relojes y temporizaciones.
 290  8A2C
 291  8A2C 00           Contador_de_frames db 0
 292  8A2D 04           Clock_explosion db 4
 293  8A2E 1E           Clock_Entidades_en_curso db 30
 294  8A2F 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 295  8A30              ;														; Repite la oleada de entidades.
 296  8A30 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 297  8A31 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 298  8A32 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 299  8A33
 300  8A33 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 301  8A34 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 302  8A35 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 303  8A36
 304  8A36              ;---------------------------------------------------------------------------------------------------------------
 305  8A36
 306  8A36              ; Gestión de NIVELES.
 307  8A36
 308  8A36 00           Nivel db 0												; Nivel actual del juego.
 309  8A37 00 00        Puntero_indice_NIVELES defw 0
 310  8A39 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 311  8A3B              ; 														; _ que definen el NIVEL.
 312  8A3B              ; Y todo comienza aquí .....
 313  8A3B              ;
 314  8A3B              ; Rutina principal *************************************************************************************************************************************************************************
 315  8A3B              ;
 316  8A3B              ;	14/11/22
 317  8A3B
 318  8A3B              START
 319  8A3B
 320  8A3B 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 321  8A3E 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 322  8A40 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 323  8A42 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 324  8A44 F3           	DI
 325  8A45
 326  8A45 3E 07        	ld a,%00000111
 327  8A47 CD 03 99     	call Cls
 328  8A4A
 329  8A4A              ;	call Pinta_marco
 330  8A4A
 331  8A4A CD 08 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 332  8A4D
 333  8A4D CD 02 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 334  8A50
 335  8A50 CD 1A 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 336  8A53
 337  8A53 CD D5 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 338  8A56              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 339  8A56 CD B2 8D     	call Restore_entidad
 340  8A59
 341  8A59 21 0A 8A     	ld hl,Numero_parcial_de_entidades
 342  8A5C 46           	ld b,(hl)
 343  8A5D 04           	inc b
 344  8A5E 05           	dec b
 345  8A5F 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 346  8A61
 347  8A61              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 348  8A61              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 349  8A61              ;	Pintamos el resto de entidades:
 350  8A61
 351  8A61              ;	INICIA ENTIDADES !!!!!
 352  8A61
 353  8A61 C5           1 push bc  												; Guardo el contador de entidades.
 354  8A62
 355  8A62 CD CC 8A     	call Inicia_entidad
 356  8A65
 357  8A65 C1           	pop bc
 358  8A66 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 359  8A68
 360  8A68              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 361  8A68              ; (Esto se dá cuando se inicia una nueva oleada).
 362  8A68
 363  8A68 3A 00 8A     	ld a,(Ctrl_1)
 364  8A6B CB 5F        	bit 3,a
 365  8A6D 20 18        	jr nz,5F											; Loop
 366  8A6F
 367  8A6F              ; 	INICIA AMADEUS !!!!!
 368  8A6F
 369  8A6F CD D9 8D     3 call Restore_Amadeus
 370  8A72 CD 2F 8D     	call Inicia_Puntero_objeto
 371  8A75 CD 49 93     	call Draw
 372  8A78 CD A0 7F     	call Guarda_foto_registros
 373  8A7B 11 84 85     	ld de,Amadeus_db
 374  8A7E CD EB 8D     	call Store_Amadeus
 375  8A81
 376  8A81              ; 	INICIA DISPAROS !!!!!
 377  8A81
 378  8A81 CD EB 8C     	call Inicia_Puntero_Disparo_Entidades
 379  8A84 CD F2 8C     	call Inicia_Puntero_Disparo_Amadeus
 380  8A87
 381  8A87              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 382  8A87
 383  8A87 CD D5 8C     5 call Inicia_punteros_de_cajas
 384  8A8A CD B2 8D     	call Restore_entidad
 385  8A8D
 386  8A8D 3A 00 8A     	ld a,(Ctrl_1)
 387  8A90 CB 5F        	bit 3,a
 388  8A92 28 0A        	jr z,6F
 389  8A94
 390  8A94              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 391  8A94
 392  8A94 21 00 8A     	ld hl,Ctrl_1
 393  8A97 CB 9E        	res 3,(hl)
 394  8A99 CD F9 8C     	call Calcula_numero_de_malotes
 395  8A9C 18 07        	jr 7F
 396  8A9E
 397  8A9E              ; ----------
 398  8A9E
 399  8A9E 3A 0A 8A     6 ld a,(Numero_parcial_de_entidades)
 400  8AA1 3C           	inc a
 401  8AA2 32 0C 8A     	ld (Numero_de_malotes),a
 402  8AA5
 403  8AA5 AF           7 xor a
 404  8AA6 FB           2 ei
 405  8AA7 28 FD        	jr z,2B
 406  8AA9
 407  8AA9 3A 2C 8A     	ld a,(Contador_de_frames)
 408  8AAC 47           	ld b,a
 409  8AAD 3A 2F 8A     	ld a,(Activa_recarga_cajas)
 410  8AB0 B8           	cp b
 411  8AB1 28 08        	jr z,8F
 412  8AB3
 413  8AB3 21 00 8A     	ld hl,Ctrl_1
 414  8AB6 CB E6        	set 4,(hl)
 415  8AB8 AF           	xor a
 416  8AB9 18 EB        	jr 2B
 417  8ABB
 418  8ABB 21 00 8A     8 ld hl,Ctrl_1
 419  8ABE CB A6        	res 4,(hl)
 420  8AC0 F3           	di
 421  8AC1
 422  8AC1 3A 2C 8A     	ld a,(Contador_de_frames)
 423  8AC4
 424  8AC4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 425  8AC4              ;! _ IMPREDECIBLE !!!!
 426  8AC4
 427  8AC4 C6 0A        	add 10
 428  8AC6 32 2E 8A     	ld (Clock_Entidades_en_curso),a
 429  8AC9
 430  8AC9 C3 50 8A     	jp 4B
 431  8ACC
 432  8ACC              ; -----------------------------------------------------------------------------------
 433  8ACC
 434  8ACC CD 2F 8D     Inicia_entidad	call Inicia_Puntero_objeto
 435  8ACF CD 17 99     	call Recompone_posicion_inicio
 436  8AD2 CD 49 93     	call Draw
 437  8AD5 CD A0 7F     	call Guarda_foto_registros
 438  8AD8 CD 77 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 439  8ADB C9           	ret
 440  8ADC
 441  8ADC              ; -----------------------------------------------------------------------------------
 442  8ADC
 443  8ADC              Frame
 444  8ADC
 445  8ADC              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 446  8ADC              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 447  8ADC
 448  8ADC              ; PINTAMOS.
 449  8ADC
 450  8ADC 3E 02            ld a,2
 451  8ADE D3 FE            out ($fe),a
 452  8AE0 CD 57 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 453  8AE3 CD 90 96     	call Extrae_foto_disparos
 454  8AE6 3E 01            ld a,1
 455  8AE8 D3 FE            out ($fe),a
 456  8AEA
 457  8AEA              ; ----------------------------------------------------------------------
 458  8AEA
 459  8AEA              ; RELOJES.
 460  8AEA
 461  8AEA 21 2C 8A     	ld hl,Contador_de_frames
 462  8AED 34           	inc (hl)											; 0 - 255
 463  8AEE
 464  8AEE 3A 2E 8A     	ld a,(Clock_Entidades_en_curso)
 465  8AF1 47           	ld b,a
 466  8AF2 3A 2C 8A     	ld a,(Contador_de_frames)
 467  8AF5 B8           	cp b
 468  8AF6 20 18        	jr nz,13F
 469  8AF8
 470  8AF8 3A 0A 8A     	ld a,(Numero_parcial_de_entidades)
 471  8AFB 47           	ld b,a
 472  8AFC 3A 0B 8A     	ld a,(Entidades_en_curso)
 473  8AFF B8           	cp b
 474  8B00 28 0E        	jr z,13F
 475  8B02 30 0C        	jr nc,13F
 476  8B04
 477  8B04 3C           	inc a
 478  8B05 32 0B 8A     	ld (Entidades_en_curso),a
 479  8B08
 480  8B08 3A 2E 8A     	ld a,(Clock_Entidades_en_curso)
 481  8B0B
 482  8B0B              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 483  8B0B              ;! _ IMPREDECIBLE !!!!
 484  8B0B
 485  8B0B C6 64        	add 100
 486  8B0D 32 2E 8A     	ld (Clock_Entidades_en_curso),a
 487  8B10
 488  8B10              ; Habilita disparos.
 489  8B10
 490  8B10 21 30 8A     13 ld hl,Disparo_Amadeus
 491  8B13 11 32 8A     	ld de,CLOCK_repone_disparo_Amadeus
 492  8B16 CD 84 9F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 493  8B19
 494  8B19 21 33 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 495  8B1C 11 35 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 496  8B1F CD 84 9F     	call Habilita_disparos
 497  8B22
 498  8B22              ; COLISIONES.
 499  8B22
 500  8B22 CD 2B 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 501  8B25
 502  8B25              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 503  8B25              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 504  8B25              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 505  8B25
 506  8B25 AF           	xor a
 507  8B26 32 1E 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 508  8B29
 509  8B29 CD D5 8C     	call Inicia_punteros_de_cajas
 510  8B2C CD B2 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 511  8B2F              ; 														; _ en DRAW.
 512  8B2F 3A BE 89     	ld a,(Filas)
 513  8B32 A7           	and a
 514  8B33 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 515  8B35 CD C4 8D     	call Incrementa_punteros_de_cajas
 516  8B38 18 F2        	jr 12B
 517  8B3A
 518  8B3A              ; ---------------------------------------------------------------------------------------
 519  8B3A
 520  8B3A CD A1 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 521  8B3D 21 00 70     	ld hl,Album_de_fotos
 522  8B40 22 15 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 523  8B43              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 524  8B43 3A 0A 8A     	ld a,(Numero_parcial_de_entidades)
 525  8B46 47               ld b,a
 526  8B47 A7           	and a
 527  8B48 20 14        	jr nz,2F
 528  8B4A
 529  8B4A 21 00 8A     	ld hl,Ctrl_1
 530  8B4D CB 66        	bit 4,(hl)
 531  8B4F C2 DB 8B     	jp nz,4F
 532  8B52
 533  8B52 21 00 8A     	ld hl,Ctrl_1
 534  8B55 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 535  8B57
 536  8B57 3A 2C 8A     	ld a,(Contador_de_frames)
 537  8B5A 3C           	inc a
 538  8B5B 32 2F 8A     	ld (Activa_recarga_cajas),a
 539  8B5E
 540  8B5E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 541  8B5E
 542  8B5E 3A 0B 8A     2 ld a,(Entidades_en_curso)
 543  8B61 A7           	and a
 544  8B62 CA DB 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 545  8B65 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 546  8B66
 547  8B66              ; Código que ejecutamos con cada entidad:
 548  8B66              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 549  8B66
 550  8B66 C5           15 push bc 												; Nº de entidades en curso.
 551  8B67
 552  8B67              ; Impacto ???
 553  8B67
 554  8B67 3A D7 89     33 ld a,(Impacto)
 555  8B6A A7           	and a
 556  8B6B 28 2D        	jr z,8F
 557  8B6D
 558  8B6D              ; Hay Impacto en esta entidad.
 559  8B6D
 560  8B6D 21 2D 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 561  8B70 35           	dec (hl)
 562  8B71 20 62        	jr nz,6F
 563  8B73
 564  8B73              ;! Velocidad de la animación de la explosión.
 565  8B73
 566  8B73 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 567  8B75              ;														; _,(velocidad de la explosión).
 568  8B75 CD 8C 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 569  8B78
 570  8B78              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 571  8B78
 572  8B78 3A FE 89     	ld a,(Ctrl_2)
 573  8B7B CB 4F        	bit 1,a
 574  8B7D 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 575  8B7F
 576  8B7F              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 577  8B7F
 578  8B7F 3A C6 89     	ld a,(CTRL_DESPLZ)
 579  8B82 A7           	and a
 580  8B83 20 08        	jr nz,21F
 581  8B85
 582  8B85 21 84 84     	ld hl,Indice_Explosion_2x2-2
 583  8B88 22 CC 89     	ld (Puntero_DESPLZ_der),hl
 584  8B8B 18 06        	jr 22F
 585  8B8D
 586  8B8D 21 EE 83     21 ld hl,Indice_Explosion_2x3-2
 587  8B90 22 CC 89     	ld (Puntero_DESPLZ_der),hl
 588  8B93
 589  8B93 21 FE 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 590  8B96 CB CE        	set 1,(hl)
 591  8B98 18 22        	jr 7F
 592  8B9A
 593  8B9A              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 594  8B9A              ; _con las coordenadas de la entidad almacenada en DRAW.
 595  8B9A
 596  8B9A 3A 00 8A     8 ld a,(Ctrl_1)
 597  8B9D CB 57        	bit 2,a
 598  8B9F 28 1B        	jr z,7F
 599  8BA1
 600  8BA1 2A 21 8A     	ld hl,(Coordenadas_disparo_certero)
 601  8BA4 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 602  8BA5              ;														; E contiene la coordenada_X del disparo.
 603  8BA5 2A C4 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 604  8BA8              ;														; H FILA, (Coordenada_y de la entidad).
 605  8BA8 A7           	and a
 606  8BA9 ED 52        	sbc hl,de
 607  8BAB
 608  8BAB CD 62 92     	call Determina_resultado_comparativa
 609  8BAE
 610  8BAE 78           	ld a,b
 611  8BAF A7           	and a
 612  8BB0 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 613  8BB2
 614  8BB2              ; ----- ----- -----
 615  8BB2
 616  8BB2 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 617  8BB4 32 D7 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 618  8BB7
 619  8BB7 21 00 8A     	ld hl,Ctrl_1
 620  8BBA CB 96        	res 2,(hl)
 621  8BBC
 622  8BBC CD 0E 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 623  8BBF
 624  8BBF 3A EC 89     	ld a,(Ctrl_0)
 625  8BC2 CB 67        	bit 4,a
 626  8BC4 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 627  8BC6
 628  8BC6              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 629  8BC6              ; [[[
 630  8BC6 CD 4D 8E     	call Detecta_disparo_entidad
 631  8BC9              ; ]]]
 632  8BC9 CD 9C 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 633  8BCC
 634  8BCC 21 EC 89     	ld hl,Ctrl_0
 635  8BCF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 636  8BD1 AF           	xor a
 637  8BD2 32 ED 89     	ld (Obj_dibujado),a
 638  8BD5
 639  8BD5 CD 77 8D     6 call Store_Restore_cajas
 640  8BD8
 641  8BD8 C1           	pop bc
 642  8BD9 10 8B        	djnz 15B
 643  8BDB
 644  8BDB              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 645  8BDB
 646  8BDB              ;	ld a,2
 647  8BDB              ;	ld (Limitador_de_entidades_x_frame),a
 648  8BDB
 649  8BDB              ; ------------------------------------
 650  8BDB              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 651  8BDB              ; Hemos gestionado todas las unidades.
 652  8BDB              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 653  8BDB
 654  8BDB              ;	ld hl,Ctrl_1
 655  8BDB              ;	res 2,(hl)
 656  8BDB
 657  8BDB              ; ------------------------------------
 658  8BDB
 659  8BDB              ; Tras la gestión de las entidades, ... AMADEUS.
 660  8BDB
 661  8BDB CD D9 8D     4 call Restore_Amadeus
 662  8BDE
 663  8BDE 3A D7 89     	ld a,(Impacto)
 664  8BE1 A7           	and a
 665  8BE2 20 FE        	jr nz,$
 666  8BE4
 667  8BE4 CD 6D 8C     	call Mov_Amadeus
 668  8BE7
 669  8BE7 3A EC 89     	ld a,(Ctrl_0)
 670  8BEA CB 67        	bit 4,a
 671  8BEC 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 672  8BEE
 673  8BEE CD 9C 8C     	call Guarda_foto_entidad_a_pintar
 674  8BF1
 675  8BF1 21 EC 89     3 ld hl,Ctrl_0
 676  8BF4 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 677  8BF6 AF           	xor a
 678  8BF7 32 ED 89     	ld (Obj_dibujado),a
 679  8BFA
 680  8BFA 11 84 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 681  8BFD CD EB 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 682  8C00
 683  8C00 CD BF 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 684  8C03
 685  8C03              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 686  8C03
 687  8C03 CD 11 8D     	call Calcula_numero_de_disparotes
 688  8C06 CD F9 8C     9 call Calcula_numero_de_malotes
 689  8C09
 690  8C09 3E 04        	ld a,4
 691  8C0B D3 FE        	out ($fe),a
 692  8C0D
 693  8C0D C9           	ret
 694  8C0E
 695  8C0E              ; --------------------------------------------------------------------------------------------------------------
 696  8C0E              ;
 697  8C0E              ;	27/05/23
 698  8C0E
 699  8C0E              Mov_obj
 700  8C0E
 701  8C0E              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 702  8C0E
 703  8C0E 3A FE 89     	ld a,(Ctrl_2)
 704  8C11 CB 4F        	bit 1,a
 705  8C13 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 706  8C15
 707  8C15              ; Explosión:
 708  8C15
 709  8C15 3A FF 89     	ld a,(Frames_explosion)
 710  8C18 A7           	and a
 711  8C19 20 11        	jr nz,4F
 712  8C1B
 713  8C1B              ; Una alimaña menos!!!!!!!!!1
 714  8C1B
 715  8C1B CD F4 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 716  8C1E 21 0A 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 717  8C21 35           	dec (hl)
 718  8C22 21 0B 8A     	ld hl,Entidades_en_curso
 719  8C25 35           	dec (hl)
 720  8C26 21 09 8A     	ld hl,Numero_de_entidades
 721  8C29 35           	dec (hl)
 722  8C2A 18 40        	jr 3F
 723  8C2C
 724  8C2C              ; -----
 725  8C2C
 726  8C2C              ;	`Movemos´ la explosión.
 727  8C2C
 728  8C2C 2A CC 89     4 ld hl,(Puntero_DESPLZ_der)
 729  8C2F 23           	inc hl
 730  8C30 23           	inc hl
 731  8C31 22 CC 89     	ld (Puntero_DESPLZ_der),hl
 732  8C34 CD 29 8D     	call Extrae_address
 733  8C37 22 C2 89     	ld (Puntero_objeto),hl
 734  8C3A
 735  8C3A 21 FF 89     	ld hl,Frames_explosion
 736  8C3D 35           	dec (hl)
 737  8C3E
 738  8C3E CD 8C 8C     	call Guarda_foto_entidad_a_borrar
 739  8C41 18 29        	jr 3F
 740  8C43
 741  8C43 AF           2 xor a
 742  8C44 32 ED 89     	ld (Obj_dibujado),a
 743  8C47 32 EC 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 744  8C4A              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 745  8C4A              ; 														; _de la entidad.
 746  8C4A CD A6 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 747  8C4D              ;														; Obj_dibujado="0".
 748  8C4D              ; Movemos Entidades malignas.
 749  8C4D
 750  8C4D              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 751  8C4D              ;	and a 												; _a movernos. (Limitador_de_entidades).
 752  8C4D              ;	ret z
 753  8C4D
 754  8C4D CD 2F 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 755  8C50
 756  8C50 3A EC 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 757  8C53 CB 67        	bit 4,a
 758  8C55 C8           	ret z
 759  8C56
 760  8C56              ; Ha habido desplazamiento de la entidad maligna.
 761  8C56              ; Ha llegado a zona de AMADEUS ???
 762  8C56
 763  8C56 3A C5 89     	ld a,(Coordenada_y)
 764  8C59 FE 14        	cp $14
 765  8C5B D4 F0 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 766  8C5E              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 767  8C5E              ; ---------
 768  8C5E
 769  8C5E 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 770  8C60 32 ED 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 771  8C63 CD A6 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 772  8C66 CD BD 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 773  8C69 CD 8C 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 774  8C6C C9           3 ret													; _de la misma.
 775  8C6D
 776  8C6D              ; --------------------------------------------------------------------------------------------------------------
 777  8C6D              ;
 778  8C6D              ;	29/1/23
 779  8C6D
 780  8C6D              Mov_Amadeus
 781  8C6D
 782  8C6D AF           	xor a
 783  8C6E 32 ED 89     	ld (Obj_dibujado),a
 784  8C71 CD A6 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 785  8C74              ;														; Obj_dibujado="0".
 786  8C74              ; Movemos Amadeus.
 787  8C74
 788  8C74 CD 16 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 789  8C77 3A EC 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 790  8C7A CB 67        	bit 4,a
 791  8C7C C8           	ret z
 792  8C7D
 793  8C7D              ; ---------
 794  8C7D
 795  8C7D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 796  8C7F 32 ED 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 797  8C82 CD A6 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 798  8C85 CD BD 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 799  8C88 CD 8C 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 800  8C8B C9           	ret													; _de la nave.
 801  8C8C
 802  8C8C              ; --------------------------------------------------------------------------------------------------------------
 803  8C8C              ;
 804  8C8C              ;	31/01/23
 805  8C8C              ;
 806  8C8C              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 807  8C8C
 808  8C8C              Guarda_foto_entidad_a_borrar
 809  8C8C
 810  8C8C CD 2D 96     	call Prepara_draw
 811  8C8F CD 5D 95     	call calcula_CColumnass
 812  8C92 CD 94 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 813  8C95 CD F3 95     	call Define_rutina_de_impresion
 814  8C98 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 815  8C9B C9           	ret
 816  8C9C
 817  8C9C              ; --------------------------------------------------------------------------------------------------------------
 818  8C9C              ;
 819  8C9C              ;	31/01/23
 820  8C9C              ;
 821  8C9C              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 822  8C9C              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 823  8C9C
 824  8C9C              Guarda_foto_entidad_a_pintar
 825  8C9C
 826  8C9C CD C9 8C     	call Repone_pintar
 827  8C9F CD 49 93     	call Draw
 828  8CA2 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 829  8CA5 C9           	ret
 830  8CA6
 831  8CA6              ; --------------------------------------------------------------------------------------------------------------
 832  8CA6              ;
 833  8CA6              ;
 834  8CA6
 835  8CA6 21 BE 89     Prepara_var_pintado_borrado	ld hl,Filas
 836  8CA9 3A ED 89     	ld a,(Obj_dibujado)
 837  8CAC A7           	and a
 838  8CAD 28 05        	jr z,1F
 839  8CAF 11 E2 89     	ld de,Variables_de_pintado
 840  8CB2 18 03        	jr 2F
 841  8CB4 11 D8 89     1 ld de,Variables_de_borrado
 842  8CB7 01 08 00     2 ld bc,8
 843  8CBA ED B0        	ldir
 844  8CBC C9           	ret
 845  8CBD
 846  8CBD              ; --------------------------------------------------------------------------------------------------------------
 847  8CBD
 848  8CBD 21 D8 89     Repone_borrar ld hl,Variables_de_borrado
 849  8CC0 11 BE 89     	ld de,Filas
 850  8CC3 01 08 00     	ld bc,8
 851  8CC6 ED B0        	ldir
 852  8CC8 C9           	ret
 853  8CC9
 854  8CC9 21 E2 89     Repone_pintar ld hl,Variables_de_pintado
 855  8CCC 11 BE 89     	ld de,Filas
 856  8CCF 01 08 00     	ld bc,8
 857  8CD2 ED B0        	ldir
 858  8CD4 C9           	ret
 859  8CD5
 860  8CD5              ; *************************************************************************************************************************************************************
 861  8CD5              ;
 862  8CD5              ; 8/1/23
 863  8CD5              ;
 864  8CD5              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 865  8CD5              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 866  8CD5              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 867  8CD5
 868  8CD5              ; Destruye HL y DE !!!!!
 869  8CD5
 870  8CD5              Inicia_punteros_de_cajas
 871  8CD5
 872  8CD5 21 6C 85     	ld hl,Indice_de_cajas
 873  8CD8 CD 29 8D         call Extrae_address
 874  8CDB 22 03 8A         ld (Puntero_store_caja),hl
 875  8CDE 21 6E 85     	ld hl,Indice_de_cajas+2
 876  8CE1 22 07 8A     	ld (Indice_restore_caja),hl
 877  8CE4 CD 29 8D     	call Extrae_address
 878  8CE7 22 05 8A     	ld (Puntero_restore_caja),hl
 879  8CEA C9               ret
 880  8CEB
 881  8CEB              ; *************************************************************************************************************************************************************
 882  8CEB              ;
 883  8CEB              ; 8/1/23
 884  8CEB              ;
 885  8CEB              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 886  8CEB
 887  8CEB 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 888  8CEE 22 1A 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 889  8CF1 C9           	ret
 890  8CF2 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 891  8CF5 22 1C 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 892  8CF8 C9           	ret
 893  8CF9
 894  8CF9              ; -------------------------------------------------------------------------------------------------------------
 895  8CF9              ;
 896  8CF9              ; 28/2/23
 897  8CF9              ;
 898  8CF9
 899  8CF9              Calcula_numero_de_malotes
 900  8CF9
 901  8CF9 21 00 70     	ld hl,Album_de_fotos
 902  8CFC EB           	ex de,hl
 903  8CFD 2A 15 8A     	ld hl,(Stack_snapshot)
 904  8D00
 905  8D00 06 00        	ld b,0
 906  8D02 7D           	ld a,l
 907  8D03 93           	sub e
 908  8D04 28 07        	jr z,1F
 909  8D06
 910  8D06              ; Nº de malotes no es "0".
 911  8D06
 912  8D06 D6 06        2 sub 6
 913  8D08 04           	inc b
 914  8D09 A7           	and a
 915  8D0A 20 FA        	jr nz,2B
 916  8D0C 78           	ld a,b
 917  8D0D
 918  8D0D 32 0C 8A     1 ld (Numero_de_malotes),a
 919  8D10 C9           	ret
 920  8D11
 921  8D11              ; -------------------------------------------------------------------------------------------------------------
 922  8D11              ;
 923  8D11              ; 28/2/23
 924  8D11              ;
 925  8D11
 926  8D11              Calcula_numero_de_disparotes
 927  8D11
 928  8D11 21 85 70     	ld hl,Album_de_fotos_disparos
 929  8D14 EB           	ex de,hl
 930  8D15 2A 17 8A     	ld hl,(Stack_snapshot_disparos)
 931  8D18
 932  8D18 06 00        	ld b,0
 933  8D1A 7D           	ld a,l
 934  8D1B 93           	sub e
 935  8D1C 28 07        	jr z,1F
 936  8D1E
 937  8D1E              ; Nº de malotes no es "0".
 938  8D1E
 939  8D1E D6 06        2 sub 6
 940  8D20 04           	inc b
 941  8D21 A7           	and a
 942  8D22 20 FA        	jr nz,2B
 943  8D24 78           	ld a,b
 944  8D25
 945  8D25 32 19 8A     1 ld (Numero_de_disparotes),a
 946  8D28 C9           	ret
 947  8D29              ; *************************************************************************************************************************************************************
 948  8D29              ;
 949  8D29              ; 20/10/22
 950  8D29              ;
 951  8D29              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 952  8D29              ;
 953  8D29              ; Destruye el puntero y DE !!!!!
 954  8D29
 955  8D29 5E           Extrae_address ld e,(hl)
 956  8D2A 23           	inc hl
 957  8D2B 56           	ld d,(hl)
 958  8D2C 2B           	dec hl
 959  8D2D EB           	ex de,hl
 960  8D2E C9           	ret
 961  8D2F
 962  8D2F              ; *************************************************************************************************************************************************************
 963  8D2F              ;
 964  8D2F              ;	7/2/23
 965  8D2F              ;
 966  8D2F              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 967  8D2F              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 968  8D2F              ;
 969  8D2F              ;   Destruye HL y BC !!!!!,
 970  8D2F              ;
 971  8D2F              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 972  8D2F              ;					"0" ..... Izquierda.
 973  8D2F
 974  8D2F              Inicia_Puntero_objeto
 975  8D2F
 976  8D2F 3A D2 89     	ld a,(Cuad_objeto)
 977  8D32 E6 01        	and 1
 978  8D34 F5           	push af
 979  8D35 CC 53 8D     	call z,Inicia_puntero_objeto_izq
 980  8D38 F1           	pop af
 981  8D39 28 2B        	jr z,1F
 982  8D3B CD 40 8D     	call Inicia_puntero_objeto_der
 983  8D3E 18 26        	jr 1F
 984  8D40
 985  8D40              ; Arrancamos desde la parte izquierda de la pantalla.
 986  8D40              ; Iniciamos (Indice_Sprite_der).
 987  8D40
 988  8D40 2A C8 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 989  8D43 22 CC 89     	ld (Puntero_DESPLZ_der),hl
 990  8D46 CD 29 8D     	call Extrae_address
 991  8D49 22 C2 89     	ld (Puntero_objeto),hl
 992  8D4C
 993  8D4C 2A CA 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 994  8D4F 22 CE 89     	ld (Puntero_DESPLZ_izq),hl
 995  8D52 C9           	ret
 996  8D53
 997  8D53              ; Arrancamos desde la parte derecha de la pantalla.
 998  8D53              ; Iniciamos (Indice_Sprite_izq).
 999  8D53
1000  8D53 2A CA 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1001  8D56 22 CE 89     	ld (Puntero_DESPLZ_izq),hl
1002  8D59 CD 29 8D     	call Extrae_address
1003  8D5C 22 C2 89     	ld (Puntero_objeto),hl
1004  8D5F
1005  8D5F 2A C8 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1006  8D62 22 CC 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1007  8D65 C9           	ret
1008  8D66
1009  8D66              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1010  8D66
1011  8D66 21 40 83     1 ld hl,Amadeus
1012  8D69 ED 4B C2 89  	ld bc,(Puntero_objeto)
1013  8D6D B7 ED 42     	sub hl,bc
1014  8D70 C0           	ret nz
1015  8D71 21 EC 89     	ld hl,Ctrl_0
1016  8D74 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1017  8D76 C9           	ret 												; _de nuestra nave en los extremos.
1018  8D77
1019  8D77              ; *************************************************************************************************************************************************************
1020  8D77              ;
1021  8D77              ;	14/5/23
1022  8D77              ;
1023  8D77              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1024  8D77              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1025  8D77
1026  8D77              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1027  8D77              ;	_de la 2ª y 3ª entidad respectivamente.
1028  8D77
1029  8D77              Store_Restore_cajas
1030  8D77
1031  8D77 E5           	push hl
1032  8D78 D5           	push de
1033  8D79 C5            	push bc
1034  8D7A
1035  8D7A              ;	STORE !!!!!
1036  8D7A              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1037  8D7A
1038  8D7A 21 BE 89     	ld hl,Filas
1039  8D7D ED 5B 03 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1040  8D81 01 42 00     	ld bc,66
1041  8D84 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1042  8D86
1043  8D86              ; 	Entidad_sospechosa. 20/4/23
1044  8D86
1045  8D86 3A D7 89     	ld a,(Impacto)
1046  8D89 A7           	and a
1047  8D8A 28 0C        	jr z,1F
1048  8D8C
1049  8D8C 2A 03 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1050  8D8F 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1051  8D92 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1052  8D93 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1053  8D95 22 1F 8A     	ld (Entidad_sospechosa_de_colision),hl
1054  8D98
1055  8D98              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1056  8D98
1057  8D98 2A 05 8A     1 ld hl,(Puntero_restore_caja)
1058  8D9B 7E           	ld a,(hl)
1059  8D9C A7           	and a
1060  8D9D F5           	push af
1061  8D9E 28 08        	jr z,2F
1062  8DA0
1063  8DA0 11 BE 89     	ld de,Filas
1064  8DA3 01 42 00     	ld bc,66
1065  8DA6 ED B0        	ldir
1066  8DA8
1067  8DA8 CD C4 8D     2 call Incrementa_punteros_de_cajas
1068  8DAB F1           	pop af
1069  8DAC 28 EA        	jr z,1B
1070  8DAE
1071  8DAE C1           	pop bc
1072  8DAF D1           	pop de
1073  8DB0 E1           	pop hl
1074  8DB1
1075  8DB1 C9           	ret
1076  8DB2
1077  8DB2              ; **************************************************************************************************
1078  8DB2              ;
1079  8DB2              ;	12/05/23
1080  8DB2              ;
1081  8DB2              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1082  8DB2
1083  8DB2 E5           Restore_entidad push hl
1084  8DB3 D5           	push de
1085  8DB4 C5            	push bc
1086  8DB5
1087  8DB5 2A 03 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1088  8DB8 11 BE 89     	ld de,Filas
1089  8DBB 01 42 00     	ld bc,66
1090  8DBE ED B0        	ldir
1091  8DC0
1092  8DC0 C1           	pop bc
1093  8DC1 D1           	pop de
1094  8DC2 E1           	pop hl
1095  8DC3 C9           	ret
1096  8DC4
1097  8DC4
1098  8DC4              ; **************************************************************************************************
1099  8DC4              ;
1100  8DC4              ;	08/05/23
1101  8DC4              ;
1102  8DC4              ;	Incrementamos los dos punteros de entidades. (+1).
1103  8DC4
1104  8DC4 2A 05 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1105  8DC7 22 03 8A     	ld (Puntero_store_caja),hl
1106  8DCA 2A 07 8A     	ld hl,(Indice_restore_caja)
1107  8DCD 23           	inc hl
1108  8DCE 23           	inc hl
1109  8DCF 22 07 8A     	ld (Indice_restore_caja),hl
1110  8DD2 CD 29 8D         call Extrae_address
1111  8DD5 22 05 8A         ld (Puntero_restore_caja),hl
1112  8DD8 C9               ret
1113  8DD9
1114  8DD9              ; **************************************************************************************************
1115  8DD9              ;
1116  8DD9              ;	25/01/23
1117  8DD9              ;
1118  8DD9              ;	Restore_Amadeus
1119  8DD9              ;
1120  8DD9              ;	Cargamos en DRAW los parámetros de Amadeus.
1121  8DD9              ;
1122  8DD9
1123  8DD9 E5           Restore_Amadeus	push hl
1124  8DDA D5           	push de
1125  8DDB C5            	push bc
1126  8DDC 21 84 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1127  8DDF 11 BE 89     	ld de,Filas
1128  8DE2 01 42 00     	ld bc,66
1129  8DE5 ED B0        	ldir
1130  8DE7 C1           	pop bc
1131  8DE8 D1           	pop de
1132  8DE9 E1           	pop hl
1133  8DEA C9           	ret
1134  8DEB
1135  8DEB              ; *************************************************************************************************************************************************************
1136  8DEB              ;
1137  8DEB              ;	29/04/23
1138  8DEB              ;
1139  8DEB              ;	Store_Amadeus
1140  8DEB              ;
1141  8DEB              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1142  8DEB              ;
1143  8DEB              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1144  8DEB              ;
1145  8DEB              ;	DESTRUYE: HL y BC y DE.
1146  8DEB
1147  8DEB 21 BE 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1148  8DEE 01 42 00     	ld bc,66
1149  8DF1 ED B0        	ldir
1150  8DF3 C9           	ret
1151  8DF4
1152  8DF4              ; -----------------------------------------------------------
1153  8DF4              ;
1154  8DF4              ;	27/04/23
1155  8DF4              ;
1156  8DF4              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1157  8DF4              ;
1158  8DF4              ;	Destruye: HL,BC,DE,A
1159  8DF4
1160  8DF4 21 BE 89     Borra_datos_entidad ld hl,Filas
1161  8DF7 01 41 00     	ld bc,65
1162  8DFA AF           	xor a
1163  8DFB 77           	ld (hl),a
1164  8DFC 11 BF 89     	ld de,Filas+1
1165  8DFF ED B0        	ldir
1166  8E01 C9           	ret
1167  8E02
1168  8E02              ; -----------------------------------------------------------
1169  8E02
1170  8E02              ; Teclado.
1171  8E02
1172  8E02 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1173  8E04 DB FE        	in a,($fe)
1174  8E06 E6 01        	and $01
1175  8E08 28 02        	jr z,1f
1176  8E0A 18 F6        	jr Pulsa_ENTER
1177  8E0C C9           1 ret
1178  8E0D
1179  8E0D              ; **************************************************************************************************
1180  8E0D              ;
1181  8E0D              ; Temporización.
1182  8E0D
1183  8E0D              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1184  8E0D              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1185  8E0D              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1186  8E0D              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1187  8E0D
1188  8E0D              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1189  8E0D              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1190  8E0D              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1191  8E0D
1192  8E0D              ; A partir de $4f61 no hace falta DELAY.
1193  8E0D
1194  8E0D              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1195  8E0D
1196  8E0D 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1197  8E10 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1198  8E11 78           	LD A,B
1199  8E12 A7           	AND A
1200  8E13 20 FB        	JR NZ,wait
1201  8E15 C9           	RET
1202  8E16
1203  8E16              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1204  8E16              ;
1205  8E16              ;	5/3/23
1206  8E16              ;
1207  8E16              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1208  8E16
1209  8E16              Movimiento_Amadeus
1210  8E16
1211  8E16              ; Disparo.
1212  8E16
1213  8E16 3A 30 8A     	ld a,(Disparo_Amadeus)
1214  8E19 A7           	and a
1215  8E1A 20 02        	jr nz,1F
1216  8E1C 18 15        	jr 2F
1217  8E1E
1218  8E1E 3E F7        1 ld a,$f7													; "5" para disparar.
1219  8E20 DB FE        	in a,($fe)
1220  8E22 E6 10        	and $10
1221  8E24
1222  8E24 F5           	push af
1223  8E25 CC 53 8E     	call z,Genera_disparo
1224  8E28 F1           	pop af
1225  8E29 20 08        	jr nz,2F
1226  8E2B
1227  8E2B 3A 30 8A     	ld a,(Disparo_Amadeus)
1228  8E2E EE 01        	xor 1
1229  8E30 32 30 8A     	ld (Disparo_Amadeus),a
1230  8E33
1231  8E33 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1232  8E35 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1233  8E37 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1234  8E39 CC D1 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1235  8E3C 3E F7        	ld a,$f7
1236  8E3E DB FE        	in a,($fe)
1237  8E40 E6 01        	and $01
1238  8E42 C8           	ret z
1239  8E43
1240  8E43 3E F7        	ld a,$f7
1241  8E45 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1242  8E47 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1243  8E49 CC B3 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1244  8E4C C9           	ret
1245  8E4D
1246  8E4D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1247  8E4D              ;
1248  8E4D              ;	Rutina provisional para que los malotes cagen balas.
1249  8E4D
1250  8E4D              Detecta_disparo_entidad
1251  8E4D
1252  8E4D 3A 33 8A     	ld a,(Disparo_entidad)
1253  8E50 A7           	and a
1254  8E51 C8           	ret z
1255  8E52
1256  8E52              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1257  8E52
1258  8E52              ;	ld a,$7f				; Detecta SPACE.
1259  8E52              ;	in a,($fe)
1260  8E52              ;	and 1
1261  8E52              ;	ret nz
1262  8E52
1263  8E52              ;	call Genera_disparo
1264  8E52 C9           	ret
1265  8E53
1266  8E53              ; ---------------------------------------------------------------
1267  8E53
1268  8E53              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E53              ; ******************************************************************************************************************************************************************************************
   2+ 8E53              ;
   3+ 8E53              ;   21/07/23
   4+ 8E53              ;
   5+ 8E53              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E53              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E53              ;
   8+ 8E53              ;
   9+ 8E53              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E53              ;
  11+ 8E53              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E53              ;               _ hacen las entidades hacia abajo.
  13+ 8E53              ;
  14+ 8E53              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E53              ;
  16+ 8E53              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E53              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E53              ;
  19+ 8E53              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E53              ;           _ la bala.
  21+ 8E53              ;
  22+ 8E53              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E53              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E53              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E53              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E53              ;           _ en el momento de generarse la bala)).
  27+ 8E53
  28+ 8E53              Genera_disparo
  29+ 8E53
  30+ 8E53              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E53              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E53              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E53              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E53              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E53              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E53              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E53
  38+ 8E53              ; Exclusiones:
  39+ 8E53
  40+ 8E53 3A D6 89         ld a,(Vel_down)
  41+ 8E56 47               ld b,a
  42+ 8E57 3A 2B 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E5A B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E5B D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E5C 3A FA 89         ld a,(Columnas)
  46+ 8E5F 47               ld b,a
  47+ 8E60 3A BF 89         ld a,(Columns)
  48+ 8E63 B8               cp b
  49+ 8E64 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E65
  51+ 8E65              ; ----- ----- -----
  52+ 8E65
  53+ 8E65 3A EC 89         ld a,(Ctrl_0)
  54+ 8E68 CB 77            bit 6,a
  55+ 8E6A 20 06            jr nz,14F
  56+ 8E6C
  57+ 8E6C 3A C5 89         ld a,(Coordenada_y)
  58+ 8E6F FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E71 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E72
  61+ 8E72 21 00 80     14 ld hl,Indice_disparo
  62+ 8E75 3A C6 89         ld a,(CTRL_DESPLZ)
  63+ 8E78 4F               ld c,a
  64+ 8E79 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E7B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E7B              ;                                            ""        ""       "f9", B="1"
  67+ 8E7B              ;                                            ""        ""       "fb", B="2"
  68+ 8E7B              ;                                            ""        ""       "fb", B="3"
  69+ 8E7B A7               and a
  70+ 8E7C 28 10            jr z,1F
  71+ 8E7E E6 01            and 1
  72+ 8E80 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E81
  74+ 8E81 79               ld a,c
  75+ 8E82 16 F9            ld d,$f9
  76+ 8E84 23           2 inc hl
  77+ 8E85 23               inc hl
  78+ 8E86 04               inc b
  79+ 8E87 BA               cp d
  80+ 8E88 28 04            jr z,1F
  81+ 8E8A 14               inc d
  82+ 8E8B 14               inc d
  83+ 8E8C 18 F6            jr 2B
  84+ 8E8E
  85+ 8E8E CD 29 8D     1 call Extrae_address
  86+ 8E91 E5               push hl
  87+ 8E92 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E94 DD 21 CC 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E98
  90+ 8E98              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E98              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E98
  93+ 8E98 3A EC 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E9B CB 77            bit 6,a
  95+ 8E9D 20 04            jr nz,19F
  96+ 8E9F
  97+ 8E9F AF               xor a
  98+ 8EA0 32 33 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8EA3
 100+ 8EA3 3A D2 89     19 ld a,(Cuad_objeto)
 101+ 8EA6 FE 02            cp 2
 102+ 8EA8 38 66            jr c,3F
 103+ 8EAA 28 64            jr z,3F
 104+ 8EAC
 105+ 8EAC              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8EAC
 107+ 8EAC E6 01            and 1
 108+ 8EAE 28 30            jr z,4F
 109+ 8EB0
 110+ 8EB0              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8EB0              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8EB0              ;
 113+ 8EB0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8EB0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8EB0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8EB0
 117+ 8EB0 2A C0 89     	ld hl,(Posicion_actual)
 118+ 8EB3
 119+ 8EB3              ;   Amadeus o entidad ???.
 120+ 8EB3
 121+ 8EB3 3A EC 89         ld a,(Ctrl_0)
 122+ 8EB6 CB 77            bit 6,a
 123+ 8EB8 28 0A            jr z,8F
 124+ 8EBA
 125+ 8EBA              ; 	Dispara Amadeus.
 126+ 8EBA
 127+ 8EBA 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EBC CD 48 96         call PreviousScan
 129+ 8EBF CD 48 96         call PreviousScan
 130+ 8EC2
 131+ 8EC2              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EC2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EC2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EC2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EC2
 136+ 8EC2 18 11            jr 10F
 137+ 8EC4
 138+ 8EC4              ; 	Dispara Entidad.
 139+ 8EC4
 140+ 8EC4 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EC7              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EC7
 143+ 8EC7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EC7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EC7
 146+ 8EC7 C5               push bc
 147+ 8EC8 06 10            ld b,16
 148+ 8ECA CD 39 96     9 call NextScan
 149+ 8ECD 10 FB            djnz 9B
 150+ 8ECF C1               pop bc
 151+ 8ED0 CD 3A 8F         call Ajusta_disparo_parte_izquierda
 152+ 8ED3 18 06            jr 17F
 153+ 8ED5
 154+ 8ED5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8ED5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8ED5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8ED5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8ED5
 159+ 8ED5 CD 3A 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8ED8 CD AF 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EDB              ;                                                      ; _al generar el disparo.
 162+ 8EDB
 163+ 8EDB              ; 	LLegados a este punto tendremos:
 164+ 8EDB              ;
 165+ 8EDB              ;       Puntero_objeto_disparo en IY.
 166+ 8EDB              ;       Rutinas_de_impresion en IX.
 167+ 8EDB              ;       Puntero_de_impresion en HL.
 168+ 8EDB              ;       Impacto/Dirección en BC.
 169+ 8EDB
 170+ 8EDB CD 42 8F     17 call Almacena_disparo
 171+ 8EDE 18 52            jr 6F                                             ; RET.
 172+ 8EE0
 173+ 8EE0              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8EE0              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8EE0              ;
 176+ 8EE0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8EE0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8EE0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8EE0
 180+ 8EE0 2A C0 89     4 ld hl,(Posicion_actual)
 181+ 8EE3
 182+ 8EE3              ;   Amadeus o entidad ???.
 183+ 8EE3
 184+ 8EE3 3A EC 89         ld a,(Ctrl_0)
 185+ 8EE6 CB 77            bit 6,a
 186+ 8EE8 28 0A            jr z,11F
 187+ 8EEA
 188+ 8EEA              ; 	Dispara Amadeus.
 189+ 8EEA
 190+ 8EEA 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8EEC CD 48 96         call PreviousScan
 192+ 8EEF CD 48 96         call PreviousScan
 193+ 8EF2
 194+ 8EF2              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EF2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EF2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EF2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EF2
 199+ 8EF2 18 11            jr 13F
 200+ 8EF4
 201+ 8EF4              ; 	Dispara Entidad.
 202+ 8EF4
 203+ 8EF4 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EF7              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EF7
 206+ 8EF7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EF7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EF7
 209+ 8EF7 C5               push bc
 210+ 8EF8 06 10            ld b,16
 211+ 8EFA CD 39 96     12 call NextScan
 212+ 8EFD 10 FB            djnz 12B
 213+ 8EFF C1               pop bc
 214+ 8F00
 215+ 8F00 CD 33 8F         call Ajusta_disparo_parte_derecha
 216+ 8F03 18 06            jr 18F
 217+ 8F05
 218+ 8F05              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F05              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F05              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F05              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F05
 223+ 8F05 CD 33 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F08 CD AF 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F0B              ;                                                       ; _al generar el disparo.
 226+ 8F0B
 227+ 8F0B              ; LLegados a este punto tendremos:
 228+ 8F0B              ;
 229+ 8F0B              ;       Puntero_objeto_disparo en IY.
 230+ 8F0B              ;       Rutinas_de_impresion en IX.
 231+ 8F0B              ;       Puntero_de_impresion en HL.
 232+ 8F0B              ;       Impacto/Dirección en BC.
 233+ 8F0B
 234+ 8F0B CD 42 8F     18 call Almacena_disparo
 235+ 8F0E 18 22            jr 6F                                               ; RET.
 236+ 8F10
 237+ 8F10              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F10
 239+ 8F10 28 11        3 jr z,5F
 240+ 8F12
 241+ 8F12              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F12              ;
 243+ 8F12              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F12              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F12              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F12              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F12
 248+ 8F12              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F12              ;	   ""        ""       "f9", B="1"
 250+ 8F12              ;	   ""        ""       "fb", B="2"
 251+ 8F12              ; 	   ""        ""       "fb", B="3"
 252+ 8F12
 253+ 8F12 2A C0 89     	ld hl,(Posicion_actual)
 254+ 8F15 CD 39 96     	call NextScan
 255+ 8F18
 256+ 8F18              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F18              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F18              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F18              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F18
 261+ 8F18 CD 3A 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F1B
 263+ 8F1B              ; 	No se produce impacto. B="$80"
 264+ 8F1B              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F1B
 266+ 8F1B 01 80 80         ld bc,$8080
 267+ 8F1E
 268+ 8F1E              ; 	LLegados a este punto tendremos:
 269+ 8F1E              ;
 270+ 8F1E              ;       Puntero_objeto_disparo en IY.
 271+ 8F1E              ;       Rutinas_de_impresion en IX.
 272+ 8F1E              ;       Puntero_de_impresion en HL.
 273+ 8F1E              ;       Impacto/Dirección en BC.
 274+ 8F1E
 275+ 8F1E CD 42 8F         call Almacena_disparo
 276+ 8F21 18 0F            jr 6F                                           ; RET.
 277+ 8F23
 278+ 8F23              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F23              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F23              ;
 281+ 8F23              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F23              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F23              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F23              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F23
 286+ 8F23 2A C0 89     5 ld hl,(Posicion_actual)
 287+ 8F26 CD 39 96     	call NextScan
 288+ 8F29
 289+ 8F29              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F29              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F29              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F29              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F29
 294+ 8F29 CD 33 8F         call Ajusta_disparo_parte_derecha
 295+ 8F2C
 296+ 8F2C              ; 	No se produce impacto. B="$80"
 297+ 8F2C              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F2C
 299+ 8F2C 01 80 80     15 ld bc,$8080
 300+ 8F2F
 301+ 8F2F              ; 	LLegados a este punto tendremos:
 302+ 8F2F              ;
 303+ 8F2F              ;       Puntero_objeto_disparo en IY.
 304+ 8F2F              ;       Rutinas_de_impresion en IX.
 305+ 8F2F              ;       Puntero_de_impresion en HL.
 306+ 8F2F              ;       Impacto/Dirección en BC.
 307+ 8F2F
 308+ 8F2F CD 42 8F         call Almacena_disparo
 309+ 8F32
 310+ 8F32 C9           6 ret
 311+ 8F33
 312+ 8F33              ; ----------------------------------------------------------------
 313+ 8F33              ;
 314+ 8F33              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F33              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F33              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F33
 318+ 8F33 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F34 FE 02            cp 2
 320+ 8F36 38 01            jr c,1F
 321+ 8F38 23               inc hl
 322+ 8F39 C9           1 ret
 323+ 8F3A
 324+ 8F3A 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F3B FE 01        	cp 1
 326+ 8F3D 20 01        	jr nz,1F
 327+ 8F3F 2B           	dec hl
 328+ 8F40 2B           1 dec hl
 329+ 8F41 C9               ret
 330+ 8F42
 331+ 8F42              ; ----------------------------------------------------------------
 332+ 8F42              ;
 333+ 8F42              ;   25/02/23
 334+ 8F42              ;
 335+ 8F42              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F42              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F42              ;
 338+ 8F42              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F42              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F42
 341+ 8F42              Almacena_disparo
 342+ 8F42
 343+ 8F42 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F43 F1               pop af
 345+ 8F44 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F45
 347+ 8F45 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F46 E6 01            and 1
 349+ 8F48 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F4A              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F4A              ; 	Dispara AMADEUS.
 352+ 8F4A
 353+ 8F4A              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F4A              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F4A              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F4A              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F4A
 358+ 8F4A C5               push bc
 359+ 8F4B 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F4E 2A 1C 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F51 A7               and a
 362+ 8F52 ED 42            sbc hl,bc
 363+ 8F54 CC F2 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F57 C1               pop bc
 365+ 8F58 28 54            jr z,4F
 366+ 8F5A
 367+ 8F5A 2A 1C 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F5D 23               inc hl
 369+ 8F5E 23               inc hl
 370+ 8F5F 22 1C 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F62              ;                                                   ; _ Disparo_(+1).
 372+ 8F62 18 18            jr 2F
 373+ 8F64
 374+ 8F64              ; Dispara una entidad.
 375+ 8F64
 376+ 8F64 C5           1 push bc
 377+ 8F65 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F68 2A 1A 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F6B A7               and a
 380+ 8F6C ED 42            sbc hl,bc
 381+ 8F6E CC EB 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F71 C1               pop bc
 383+ 8F72 28 3A            jr z,4F
 384+ 8F74
 385+ 8F74 2A 1A 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F77 23               inc hl
 387+ 8F78 23               inc hl
 388+ 8F79 22 1A 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F7C              ;                                                   ; _ Disparo_(+1).
 390+ 8F7C CD 29 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F7F              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F7F              ;
 393+ 8F7F              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F7F              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F7F              ;                                                     Puntero_de_impresion en HL.
 396+ 8F7F              ;                                                     Impacto/Dirección en BC.
 397+ 8F7F
 398+ 8F7F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F80 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F81 23               inc hl                                          ; _ al siguiente.
 401+ 8F82 A7               and a
 402+ 8F83 20 C0            jr nz,3B
 403+ 8F85
 404+ 8F85 08               ex af,af
 405+ 8F86 ED 73 11 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F8A F9               ld sp,hl
 407+ 8F8B
 408+ 8F8B DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F8D F5               push af                                         ; Puntero de impresión.
 410+ 8F8E FD E5            push iy                                         ; Puntero objeto.
 411+ 8F90 C5               push bc                                         ; Control.
 412+ 8F91
 413+ 8F91 ED 7B 11 8A      ld sp,(Stack)
 414+ 8F95
 415+ 8F95              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F95
 417+ 8F95 21 00 8A     	ld hl,Ctrl_1
 418+ 8F98 CB C6        	set 0,(hl)
 419+ 8F9A
 420+ 8F9A DD E5        	push ix
 421+ 8F9C E1               pop hl
 422+ 8F9D F5               push af
 423+ 8F9E DD E1            pop ix
 424+ 8FA0
 425+ 8FA0 CD A0 7F     	call Guarda_foto_registros
 426+ 8FA3
 427+ 8FA3 21 00 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8FA6 CB 86        	res 0,(hl)
 429+ 8FA8
 430+ 8FA8              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8FA8              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8FA8
 433+ 8FA8 CD F2 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8FAB CD EB 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 8FAE
 436+ 8FAE C9           4 ret
 437+ 8FAF
 438+ 8FAF              ; ----------------------------------------------------------------
 439+ 8FAF              ;
 440+ 8FAF              ;   4/3/23
 441+ 8FAF              ;
 442+ 8FAF              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8FAF              ;   _ al generarse el disparo.
 444+ 8FAF              ;
 445+ 8FAF              ;       "$80" ..... No se produce colisión.
 446+ 8FAF              ;       "$81" ..... Se produce colisión.
 447+ 8FAF              ;
 448+ 8FAF              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8FAF              ;         _ que forman el disparo.
 450+ 8FAF
 451+ 8FAF
 452+ 8FAF              Comprueba_Colision
 453+ 8FAF
 454+ 8FAF              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8FAF
 456+ 8FAF FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8FB1 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8FB2
 459+ 8FB2 CD E8 8F         call Modifica_H_Velocidad_disparo
 460+ 8FB5
 461+ 8FB5 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FB6 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FB8 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FBA
 465+ 8FBA 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FBC CD D8 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FBF
 468+ 8FBF 7B               ld a,e
 469+ 8FC0 E6 01            and 1
 470+ 8FC2 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FC4              ;                                                  ; _ para activar IMPACTO.
 472+ 8FC4 E1               pop hl
 473+ 8FC5 E5               push hl
 474+ 8FC6 CD 39 96         call NextScan
 475+ 8FC9
 476+ 8FC9 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FCA FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FCC 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FCE              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FCE 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FD0 CD D8 8F         call Bucle_2
 482+ 8FD3
 483+ 8FD3 43           1 ld b,e
 484+ 8FD4 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FD5 FD E1            pop iy
 486+ 8FD7 C9               ret
 487+ 8FD8
 488+ 8FD8              ; ---------- ----------
 489+ 8FD8
 490+ 8FD8 06 02        Bucle_2 ld b,2
 491+ 8FDA FD 7E 00     2 ld a,(iy)
 492+ 8FDD A6               and (hl)
 493+ 8FDE 28 02            jr z,1F
 494+ 8FE0 1E 81            ld e,$81
 495+ 8FE2 23           1 inc hl
 496+ 8FE3 FD 23            inc iy
 497+ 8FE5 10 F3            djnz 2B
 498+ 8FE7 C9               ret
 499+ 8FE8
 500+ 8FE8              ; ---------- ----------
 501+ 8FE8              ;
 502+ 8FE8              ;   21/7/23
 503+ 8FE8
 504+ 8FE8              Modifica_H_Velocidad_disparo
 505+ 8FE8
 506+ 8FE8 3A 2B 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FEB FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FED D0               ret nc                                         ; _ incrementamos H.
 509+ 8FEE 24               inc h
 510+ 8FEF
 511+ 8FEF C9               ret
 512+ 8FF0
 513+ 8FF0              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FF0              ;
 515+ 8FF0              ;   11/04/23
 516+ 8FF0              ;
 517+ 8FF0              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FF0              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FF0              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FF0              ;
 521+ 8FF0              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FF0
 523+ 8FF0              Compara_coordenadas_X
 524+ 8FF0
 525+ 8FF0              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FF0              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FF0
 528+ 8FF0              ; Preparamos registros:
 529+ 8FF0
 530+ 8FF0 21 C4 89         ld hl,Filas+6
 531+ 8FF3 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FF4 23               inc hl
 533+ 8FF5 23               inc hl
 534+ 8FF6 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FF7 43               ld b,e
 536+ 8FF8
 537+ 8FF8 21 D2 89         ld hl,Filas+20
 538+ 8FFB 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FFC 21 26 8A         ld hl,Coordenadas_X_Entidad
 540+ 8FFF CD 1B 92         call Guarda_coordenadas_X
 541+ 9002
 542+ 9002              ; Preparamos registros:
 543+ 9002
 544+ 9002 21 8A 85         ld hl,Amadeus_db+6
 545+ 9005 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9006 23               inc hl
 547+ 9007 23               inc hl
 548+ 9008 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9009 7B               ld a,e
 550+ 900A 08               ex af,af'
 551+ 900B 21 98 85         ld hl,Amadeus_db+20
 552+ 900E 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 900F 21 23 8A         ld hl,Coordenadas_X_Amadeus
 554+ 9012 CD 1B 92         call Guarda_coordenadas_X
 555+ 9015
 556+ 9015              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9015              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9015
 559+ 9015 04               inc b
 560+ 9016 05               dec b
 561+ 9017 28 04            jr z,1F
 562+ 9019 06 03            ld b,3
 563+ 901B 18 02            jr 2F
 564+ 901D 06 02        1 ld b,2
 565+ 901F 08           2 ex af,af'
 566+ 9020 3C               inc a
 567+ 9021 3D               dec a
 568+ 9022 28 04            jr z,5F
 569+ 9024 0E 03            ld c,3
 570+ 9026 18 02            jr 6F
 571+ 9028 0E 02        5 ld c,2
 572+ 902A 79           6 ld a,c
 573+ 902B 08               ex af,af'
 574+ 902C 11 26 8A         ld de,Coordenadas_X_Entidad
 575+ 902F 1A           4 ld a,(de)
 576+ 9030 21 23 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9033 BE           3 cp (hl)
 578+ 9034 28 0E            jr z,7F
 579+ 9036 23               inc hl
 580+ 9037 0D               dec c
 581+ 9038 20 F9            jr nz,3B
 582+ 903A 13               inc de
 583+ 903B 08               ex af,af'
 584+ 903C 4F               ld c,a
 585+ 903D 08               ex af,af'
 586+ 903E 10 EF            djnz 4B
 587+ 9040
 588+ 9040              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 9040
 590+ 9040 CD 57 92     8 call Limpia_Coordenadas_X
 591+ 9043 C9               ret
 592+ 9044
 593+ 9044 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9046 32 D7 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9049 21 1E 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 904C CB D6            set 2,(hl)
 597+ 904E 18 F0            jr 8B
 598+ 9050
 599+ 9050              ; -----------------------------------------------------------------------
 600+ 9050              ;
 601+ 9050              ;   17/04/23
 602+ 9050              ;
 603+ 9050
 604+ 9050              Detecta_colision_nave_entidad
 605+ 9050
 606+ 9050              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 9050
 608+ 9050 2A C0 89         ld hl,(Posicion_actual)
 609+ 9053 CD 94 95         call Calcula_puntero_de_impresion
 610+ 9056
 611+ 9056              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9056              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9056
 614+ 9056 DD E5            push ix
 615+ 9058 E1               pop hl
 616+ 9059 E5               push hl
 617+ 905A
 618+ 905A              ; ----- ----- -----
 619+ 905A 1E 00            ld e,0                                         ; Indica impacto.
 620+ 905C 06 0A            ld b,10
 621+ 905E CD 8E 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 9061 7B               ld a,e
 623+ 9062 FE 05            cp 5
 624+ 9064 38 0E            jr c,3F
 625+ 9066
 626+ 9066              ; LLegados a este punto:
 627+ 9066              ;
 628+ 9066              ;   HAY COLISIÓN !!!!!.
 629+ 9066              ;
 630+ 9066              ;   .db (Impacto) de Amadeus a "1".
 631+ 9066              ;   SET el bit3 de (Impacto2).
 632+ 9066              ;
 633+ 9066              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9066
 635+ 9066 21 9D 85         ld hl,Amadeus_db+25
 636+ 9069 36 01            ld (hl),1
 637+ 906B 21 1E 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 906E CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 9070 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 9072 18 18            jr 1F
 641+ 9074
 642+ 9074              ; -----
 643+ 9074
 644+ 9074 E1           3 pop hl
 645+ 9075 CD 39 96         call NextScan
 646+ 9078 E5               push hl
 647+ 9079 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 907A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 907C 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 907E 30 0C            jr nc,1F
 651+ 9080              ;                                                  ; _ 2º scanline si esto es así.
 652+ 9080 10 DC            djnz 2B
 653+ 9082
 654+ 9082              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 9082
 656+ 9082              ; LLegados a este punto:
 657+ 9082              ;
 658+ 9082              ;   NO HAY COLISIÓN !!!!!.
 659+ 9082              ;
 660+ 9082              ;   .db (Impacto) de Amadeus a "0".
 661+ 9082              ;   RES el bit2 de (Impacto2).
 662+ 9082              ;
 663+ 9082              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9082              ;   Lo colocamos a "0".
 665+ 9082
 666+ 9082 21 1E 8A         ld hl,Impacto2
 667+ 9085 CB 96            res 2,(hl)
 668+ 9087 2A 1F 8A         ld hl,(Entidad_sospechosa_de_colision)
 669+ 908A 36 00            ld (hl),0
 670+ 908C
 671+ 908C E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 908D C9               ret
 673+ 908E
 674+ 908E               ; ---------- ----------
 675+ 908E
 676+ 908E C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 908F 3A BF 89         ld a,(Columns)
 678+ 9092 47               ld b,a
 679+ 9093 FD 7E 00     2 ld a,(iy)
 680+ 9096 BE               cp (hl)
 681+ 9097 28 01            jr z,1F
 682+ 9099
 683+ 9099 1C               inc e
 684+ 909A
 685+ 909A 23           1 inc hl
 686+ 909B FD 23            inc iy
 687+ 909D 10 F4            djnz 2B
 688+ 909F C1               pop bc
 689+ 90A0 C9               ret
 690+ 90A1
 691+ 90A1              ; -------------------------------------------------------------------------------------------------------------
 692+ 90A1              ;
 693+ 90A1              ;   13/03/23
 694+ 90A1              ;
 695+ 90A1              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 90A1              ;
 697+ 90A1              ;   DESTRUYE: HL,BC,DE y A.
 698+ 90A1
 699+ 90A1 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 90A4 7E               ld a,(hl)
 701+ 90A5 A7               and a
 702+ 90A6 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 90A7
 704+ 90A7 44               ld b,h
 705+ 90A8 4D               ld c,l
 706+ 90A9 2A 17 8A         ld hl,(Stack_snapshot_disparos)
 707+ 90AC E5               push hl
 708+ 90AD A7               and a
 709+ 90AE ED 42            sbc hl,bc
 710+ 90B0 E5               push hl
 711+ 90B1 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 90B2
 713+ 90B2 E1               pop hl
 714+ 90B3 54               ld d,h
 715+ 90B4 5D               ld e,l
 716+ 90B5 1B               dec de
 717+ 90B6 ED B8            lddr                                                ; Limpiamos.
 718+ 90B8
 719+ 90B8 21 85 70         ld hl,Album_de_fotos_disparos
 720+ 90BB 22 17 8A         ld (Stack_snapshot_disparos),hl
 721+ 90BE
 722+ 90BE C9               ret
 723+ 90BF
 724+ 90BF              ; -------------------------------------------------------------------------------------------------------------
 725+ 90BF              ;
 726+ 90BF              ;   18/07/23
 727+ 90BF              ;
 728+ 90BF
 729+ 90BF              Motor_de_disparos
 730+ 90BF
 731+ 90BF              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90BF
 733+ 90BF 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90C2 2A 1C 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90C5
 736+ 90C5 CD 29 8D     2 call Extrae_address
 737+ 90C8 7E               ld a,(hl)
 738+ 90C9 A7               and a
 739+ 90CA 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90CC
 741+ 90CC              ; ----- ----- ----- ----- ----- -----
 742+ 90CC
 743+ 90CC C5               push bc
 744+ 90CD CD 91 91         call foto_disparo_a_borrar
 745+ 90D0
 746+ 90D0              ; Existe colisión con este disparo???
 747+ 90D0
 748+ 90D0 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90D1 7E               ld a,(hl)
 750+ 90D2 2B               dec hl
 751+ 90D3 E6 01            and 1
 752+ 90D5 28 1D            jr z,9F
 753+ 90D7
 754+ 90D7              ;   En este punto:
 755+ 90D7              ;
 756+ 90D7              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90D7              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90D7              ;   _con la entidad).
 759+ 90D7              ;
 760+ 90D7              ;   Disparo_2A defw 0                                ; Control.
 761+ 90D7              ;    defw 0                                          ; Puntero objeto.
 762+ 90D7              ;    defw 0                                          ; Puntero de impresión.
 763+ 90D7              ;    defw 0                                          ; Rutina de impresión.
 764+ 90D7
 765+ 90D7 E5               push hl
 766+ 90D8
 767+ 90D8 06 04            ld b,4
 768+ 90DA 23           19 inc hl
 769+ 90DB 10 FD            djnz 19B
 770+ 90DD
 771+ 90DD CD 29 8D         call Extrae_address
 772+ 90E0 CD AF 9C         call Genera_coordenadas_disparo
 773+ 90E3
 774+ 90E3              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90E3
 776+ 90E3 21 21 8A         ld hl,Coordenadas_disparo_certero
 777+ 90E6 72               ld (hl),d
 778+ 90E7 23               inc hl
 779+ 90E8 73               ld (hl),e
 780+ 90E9
 781+ 90E9              ; Elimino el disparo de la base de datos.
 782+ 90E9
 783+ 90E9 E1               pop hl
 784+ 90EA CD 10 92         call Elimina_disparo_de_base_de_datos
 785+ 90ED 21 1E 8A         ld hl,Impacto2
 786+ 90F0 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90F2
 788+ 90F2 18 06            jr 11F
 789+ 90F4
 790+ 90F4 CD BA 91     9 call Mueve_disparo
 791+ 90F7 CD 91 91         call foto_disparo_a_borrar
 792+ 90FA
 793+ 90FA C1           11 pop bc
 794+ 90FB 18 04            jr 7F
 795+ 90FD
 796+ 90FD              ; ----- ----- ----- ----- ----- -----
 797+ 90FD
 798+ 90FD ED 42        1 sbc hl,bc
 799+ 90FF 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 9101
 801+ 9101 2A 1C 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9104 23               inc hl
 803+ 9105 23               inc hl
 804+ 9106 22 1C 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9109 18 BA            jr 2B
 806+ 910B
 807+ 910B CD F2 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 910E              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 910E
 810+ 910E              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 910E
 812+ 910E 01 6A 85         ld bc,Disparo_11
 813+ 9111 2A 1A 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9114
 815+ 9114 CD 29 8D     5 call Extrae_address
 816+ 9117 7E               ld a,(hl)
 817+ 9118 A7               and a
 818+ 9119 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 911B
 820+ 911B              ; ----- ----- ----- ----- ----- -----
 821+ 911B
 822+ 911B C5               push bc
 823+ 911C CD 91 91         call foto_disparo_a_borrar
 824+ 911F
 825+ 911F              ; Existe colisión con este disparo???
 826+ 911F
 827+ 911F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 9120 7E               ld a,(hl)
 829+ 9121 2B               dec hl
 830+ 9122 E6 01            and 1
 831+ 9124 28 4D            jr z,10F
 832+ 9126
 833+ 9126              ;! La colisión se produce con Amadeus???
 834+ 9126              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9126
 836+ 9126 E5               push hl
 837+ 9127
 838+ 9127 06 04            ld b,4
 839+ 9129 23           16 inc hl
 840+ 912A 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 912C
 842+ 912C CD 29 8D         call Extrae_address
 843+ 912F CD AF 9C         call Genera_coordenadas_disparo
 844+ 9132
 845+ 9132 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 9133 FE 16            cp $16
 847+ 9135 38 2A            jr c,15F
 848+ 9137
 849+ 9137
 850+ 9137              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9137
 852+ 9137 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9138
 854+ 9138              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9138
 856+ 9138
 857+ 9138 2A 29 8A         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 913B
 859+ 913B              ; Coordenada X de Amadeus en D.
 860+ 913B
 861+ 913B 7D               ld a,l
 862+ 913C E6 1F            and $1F
 863+ 913E 57               ld d,a
 864+ 913F
 865+ 913F 21 8C 85         ld hl,Amadeus_db+8
 866+ 9142 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 9143
 868+ 9143 21 23 8A         ld hl,Coordenadas_X_Amadeus
 869+ 9146 CD 1B 92         call Guarda_coordenadas_X
 870+ 9149
 871+ 9149 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 914A
 873+ 914A              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 914A
 875+ 914A 06 02            ld b,2
 876+ 914C C5           20 push bc
 877+ 914D
 878+ 914D 06 03            ld b,3
 879+ 914F 21 23 8A         ld hl,Coordenadas_X_Amadeus
 880+ 9152 7E           18 ld a,(hl)
 881+ 9153 BA               cp d
 882+ 9154 20 04            jr nz,17F
 883+ 9156
 884+ 9156              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9156
 886+ 9156 C1               pop bc
 887+ 9157 E1               pop hl
 888+ 9158 18 0D            jr 14F
 889+ 915A
 890+ 915A 23           17 inc hl
 891+ 915B 10 F5            djnz 18B
 892+ 915D
 893+ 915D 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 915E
 895+ 915E C1               pop bc
 896+ 915F 10 EB            djnz 20B
 897+ 9161
 898+ 9161
 899+ 9161              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 9161              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 9161
 902+ 9161 E1           15 pop hl
 903+ 9162 23               inc hl
 904+ 9163 35               dec (hl)
 905+ 9164 2B               dec hl
 906+ 9165 18 0C            jr 10F
 907+ 9167
 908+ 9167              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9167              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9167
 911+ 9167 E5           14 push hl
 912+ 9168 CD 10 92         call Elimina_disparo_de_base_de_datos
 913+ 916B 21 1E 8A         ld hl,Impacto2
 914+ 916E CB CE            set 1,(hl)
 915+ 9170 E1               pop hl
 916+ 9171 18 06            jr 12F
 917+ 9173
 918+ 9173              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 9173
 920+ 9173 CD BA 91     10 call Mueve_disparo
 921+ 9176 CD 91 91         call foto_disparo_a_borrar
 922+ 9179 C1           12 pop bc
 923+ 917A
 924+ 917A 18 04            jr 8F
 925+ 917C
 926+ 917C              ; ----- ----- ----- ----- ----- -----
 927+ 917C
 928+ 917C ED 42        4 sbc hl,bc
 929+ 917E 28 0A            jr z,6F
 930+ 9180
 931+ 9180 2A 1A 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9183 23               inc hl
 933+ 9184 23               inc hl
 934+ 9185 22 1A 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9188 18 8A            jr 5B
 936+ 918A
 937+ 918A CD EB 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 918D CD 57 92         call Limpia_Coordenadas_X
 939+ 9190 C9               ret
 940+ 9191
 941+ 9191              ; ------------------------------------------------------------------
 942+ 9191
 943+ 9191              foto_disparo_a_borrar
 944+ 9191
 945+ 9191 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 9192 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9193 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9194
 949+ 9194 E5               push hl
 950+ 9195 23               inc hl
 951+ 9196 23               inc hl
 952+ 9197 ED 73 11 8A      ld (Stack),sp
 953+ 919B F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 919C FD E1            pop iy
 955+ 919E DD E1            pop ix
 956+ 91A0 E1               pop hl
 957+ 91A1 ED 7B 11 8A      ld sp,(Stack)
 958+ 91A5 3A 00 8A         ld a,(Ctrl_1)
 959+ 91A8 CB C7            set 0,a
 960+ 91AA 32 00 8A         ld (Ctrl_1),a
 961+ 91AD CD A0 7F         call Guarda_foto_registros
 962+ 91B0 3A 00 8A         ld a,(Ctrl_1)
 963+ 91B3 CB 87            res 0,a
 964+ 91B5 32 00 8A         ld (Ctrl_1),a
 965+ 91B8 E1               pop hl
 966+ 91B9 C9               ret
 967+ 91BA
 968+ 91BA              ;---------------------------------------------------
 969+ 91BA              ;
 970+ 91BA              ;   18/07/23
 971+ 91BA              ;
 972+ 91BA
 973+ 91BA              Mueve_disparo
 974+ 91BA
 975+ 91BA              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91BA              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91BA              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91BA
 979+ 91BA E5               push hl
 980+ 91BB
 981+ 91BB 7E               ld a,(hl)
 982+ 91BC
 983+ 91BC 06 04            ld b,4
 984+ 91BE 23           1 inc hl
 985+ 91BF 10 FD            djnz 1B
 986+ 91C1
 987+ 91C1              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91C1
 989+ 91C1 CD 29 8D         call Extrae_address
 990+ 91C4
 991+ 91C4 E6 01            and 1
 992+ 91C6 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91C8
 994+ 91C8              ; Disparo hacia arriba, (Amadeus).
 995+ 91C8
 996+ 91C8              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91C8              ; _ de la dificultad.
 998+ 91C8
 999+ 91C8 CD 48 96         call PreviousScan
1000+ 91CB CD 48 96         call PreviousScan
1001+ 91CE CD 48 96         call PreviousScan
1002+ 91D1 CD 48 96         call PreviousScan
1003+ 91D4
1004+ 91D4              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91D4
1006+ 91D4 7C               ld a,h
1007+ 91D5 FE 40            cp $40
1008+ 91D7 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91D9
1010+ 91D9              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91D9
1012+ 91D9 EB               ex de,hl
1013+ 91DA 06 04            ld b,4
1014+ 91DC 2B           6 dec hl
1015+ 91DD 10 FD            djnz 6B
1016+ 91DF
1017+ 91DF CD 10 92         call Elimina_disparo_de_base_de_datos
1018+ 91E2 E1               pop hl
1019+ 91E3 18 10            jr 7F
1020+ 91E5
1021+ 91E5              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91E5              ; HL contiene el puntero de impresión del disparo.
1023+ 91E5              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91E5
1025+ 91E5 D5           3 push de
1026+ 91E6 C5               push bc
1027+ 91E7
1028+ 91E7 CD AF 8F         call Comprueba_Colision
1029+ 91EA
1030+ 91EA              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91EA
1032+ 91EA 78               ld a,b
1033+ 91EB
1034+ 91EB C1               pop bc
1035+ 91EC D1               pop de
1036+ 91ED
1037+ 91ED EB               ex de,hl
1038+ 91EE
1039+ 91EE 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91EF 23               inc hl                                      ; _ movimiento.
1041+ 91F0 72               ld (hl),d
1042+ 91F1
1043+ 91F1 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91F2
1045+ 91F2 23               inc hl                                      ; _ en curso.
1046+ 91F3 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91F4 2B               dec hl
1048+ 91F5
1049+ 91F5 C9           7 ret
1050+ 91F6
1051+ 91F6              ; Disparo hacia abajo, (Entidad).
1052+ 91F6
1053+ 91F6 3A 2B 8A     2 ld a,(Velocidad_disparo_entidades)
1054+ 91F9 47               ld b,a
1055+ 91FA
1056+ 91FA CD 39 96     4 call NextScan
1057+ 91FD 10 FB            djnz 4B
1058+ 91FF
1059+ 91FF              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91FF
1061+ 91FF 7C               ld a,h
1062+ 9200 FE 58            cp $58
1063+ 9202 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9204
1065+ 9204 EB               ex de,hl
1066+ 9205 06 04            ld b,4
1067+ 9207 2B           5 dec hl
1068+ 9208 10 FD            djnz 5B
1069+ 920A
1070+ 920A CD 10 92         call Elimina_disparo_de_base_de_datos
1071+ 920D E1               pop hl
1072+ 920E 18 E5            jr 7B
1073+ 9210
1074+ 9210              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 9210
1076+ 9210 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9213 AF               xor a
1078+ 9214 77               ld (hl),a
1079+ 9215 54               ld d,h
1080+ 9216 5D               ld e,l
1081+ 9217 13               inc de
1082+ 9218 ED B0            ldir
1083+ 921A C9               ret
1084+ 921B
1085+ 921B              ; -----------------------------------------------------------------
1086+ 921B              ;
1087+ 921B              ;   19/7/23
1088+ 921B              ;
1089+ 921B              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 921B              ;
1091+ 921B              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 921B              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 921B              ;
1094+ 921B              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 921B              ;
1096+ 921B              ;   INPUTS:
1097+ 921B              ;
1098+ 921B              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 921B              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 921B
1101+ 921B              ;   MODIFICA: A, HL, BC y DE.
1102+ 921B
1103+ 921B              Guarda_coordenadas_X
1104+ 921B
1105+ 921B 7B               ld a,e
1106+ 921C A7               and a
1107+ 921D 20 04            jr nz,1F
1108+ 921F
1109+ 921F 06 02            ld b,2
1110+ 9221 18 02            jr 2F
1111+ 9223
1112+ 9223 06 03        1 ld b,3
1113+ 9225 72           2 ld (hl),d
1114+ 9226 23               inc hl
1115+ 9227 14               inc d
1116+ 9228 10 FB            djnz 2B
1117+ 922A
1118+ 922A C9               ret
1119+ 922B
1120+ 922B              ; -----------------------------------------------------------------
1121+ 922B              ;
1122+ 922B              ;   12/04/23
1123+ 922B              ;
1124+ 922B
1125+ 922B 3A 1E 8A     Selector_de_impactos ld a,(Impacto2)
1126+ 922E A7               and a
1127+ 922F C8               ret z
1128+ 9230
1129+ 9230 FE 04            cp 4
1130+ 9232 20 09            jr nz,1F
1131+ 9234
1132+ 9234
1133+ 9234              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9234
1135+ 9234 CD 50 90         call Detecta_colision_nave_entidad
1136+ 9237
1137+ 9237 21 1E 8A         ld hl,Impacto2
1138+ 923A CB 5E            bit 3,(hl)
1139+ 923C C0               ret nz                                               ; Existe colisión, RET.
1140+ 923D
1141+ 923D              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 923D              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 923D
1144+ 923D 21 1E 8A     1 ld hl,Impacto2
1145+ 9240 CB 4E            bit 1,(hl)
1146+ 9242 28 07            jr z,2F
1147+ 9244
1148+ 9244 21 9D 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9247 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9249 18 0B            jr 3F
1151+ 924B
1152+ 924B 21 1E 8A     2 ld hl,Impacto2
1153+ 924E CB 46            bit 0,(hl)
1154+ 9250 C8               ret z
1155+ 9251
1156+ 9251              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 9251
1158+ 9251 21 00 8A         ld hl,Ctrl_1
1159+ 9254 CB D6            set 2,(hl)
1160+ 9256
1161+ 9256 C9           3 ret
1162+ 9257
1163+ 9257              ; -----------------------------------------------------------------
1164+ 9257              ;
1165+ 9257              ;   19/7/23
1166+ 9257              ;
1167+ 9257              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9257
1169+ 9257 AF           Limpia_Coordenadas_X xor a
1170+ 9258 06 06            ld b,6
1171+ 925A 21 23 8A         ld hl,Coordenadas_X_Amadeus
1172+ 925D 77           1 ld (hl),a
1173+ 925E 23               inc hl
1174+ 925F 10 FC            djnz 1B
1175+ 9261 C9               ret
1176+ 9262
1177+ 9262              ; -----------------------------------------------------------------
1178+ 9262              ;
1179+ 9262              ;   25/04/23
1180+ 9262              ;
1181+ 9262
1182+ 9262              Determina_resultado_comparativa
1183+ 9262
1184+ 9262              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 9262              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 9262              ;
1187+ 9262              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 9262              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 9262              ;
1190+ 9262              ;   SBC HL,DE
1191+ 9262
1192+ 9262              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 9262              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 9262
1195+ 9262              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 9262              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 9262
1198+ 9262
1199+ 9262 3A D2 89         ld a,(Cuad_objeto)
1200+ 9265 FE 02            cp 2
1201+ 9267 28 26            jr z,2F
1202+ 9269 38 24            jr c,2F
1203+ 926B
1204+ 926B              ; Cuadrantes 3º y 4º
1205+ 926B
1206+ 926B E6 01            and 1
1207+ 926D 28 10            jr z,4F
1208+ 926F
1209+ 926F              ; Cuadrante 3º
1210+ 926F
1211+ 926F 7C               ld a,h
1212+ 9270 06 00            ld b,0
1213+ 9272
1214+ 9272 CD FD 92         call Compara_cositas_H3
1215+ 9275
1216+ 9275 04               inc b
1217+ 9276 05               dec b
1218+ 9277 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9278
1220+ 9278 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9279 06 00            ld b,0
1222+ 927B
1223+ 927B CD 0F 93         call Compara_cositas_L3
1224+ 927E C9               ret
1225+ 927F
1226+ 927F              ; Cuadrante 4º
1227+ 927F
1228+ 927F 7C           4 ld a,h
1229+ 9280 06 00            ld b,0
1230+ 9282
1231+ 9282 CD 21 93         call Compara_cositas_H4
1232+ 9285
1233+ 9285 04               inc b
1234+ 9286 05               dec b
1235+ 9287 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9288
1237+ 9288 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9289 06 00            ld b,0
1239+ 928B
1240+ 928B CD 37 93         call Compara_cositas_L4
1241+ 928E C9               ret
1242+ 928F
1243+ 928F              ; Cuadrantes 1º y 2º.
1244+ 928F
1245+ 928F 28 10        2 jr z,3F
1246+ 9291
1247+ 9291              ; 1er Cuadrante
1248+ 9291
1249+ 9291 7C               ld a,h
1250+ 9292 06 00            ld b,0
1251+ 9294
1252+ 9294 CD D5 92         call Compara_cositas_H1
1253+ 9297
1254+ 9297 04               inc b
1255+ 9298 05               dec b
1256+ 9299 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 929A
1258+ 929A 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 929B 06 00            ld b,0
1260+ 929D
1261+ 929D CD EB 92         call Compara_cositas_L1
1262+ 92A0 C9               ret
1263+ 92A1
1264+ 92A1
1265+ 92A1              ; 2º Cuadrante
1266+ 92A1
1267+ 92A1 7C           3 ld a,h
1268+ 92A2 06 00            ld b,0
1269+ 92A4
1270+ 92A4 CD B1 92         call Compara_cositas_H2
1271+ 92A7
1272+ 92A7 04               inc b
1273+ 92A8 05               dec b
1274+ 92A9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 92AA
1276+ 92AA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 92AB 06 00            ld b,0
1278+ 92AD
1279+ 92AD CD C3 92         call Compara_cositas_L2
1280+ 92B0 C9               ret
1281+ 92B1
1282+ 92B1 A7           Compara_cositas_H2 and a
1283+ 92B2 28 0D            jr z,1F
1284+ 92B4              ;    cp $fd
1285+ 92B4              ;    jr z,1F
1286+ 92B4              ;    cp $fe
1287+ 92B4              ;    jr z,1F
1288+ 92B4 FE FF            cp $ff
1289+ 92B6 28 09            jr z,1F
1290+ 92B8 FE 01            cp $01
1291+ 92BA 28 05            jr z,1F
1292+ 92BC FE 02            cp $02
1293+ 92BE 28 01            jr z,1F
1294+ 92C0 C0               ret nz
1295+ 92C1 04           1 inc b
1296+ 92C2 C9               ret
1297+ 92C3
1298+ 92C3 A7           Compara_cositas_L2 and a
1299+ 92C4 28 0D            jr z,1F
1300+ 92C6              ;    cp $fd
1301+ 92C6              ;    jr z,1F
1302+ 92C6 FE FE            cp $fe
1303+ 92C8 28 09            jr z,1F
1304+ 92CA FE FF            cp $ff
1305+ 92CC 28 05            jr z,1F
1306+ 92CE FE 01            cp $01
1307+ 92D0 28 01            jr z,1F
1308+ 92D2              ;    cp $02
1309+ 92D2              ;    jr z,1F
1310+ 92D2 C0               ret nz
1311+ 92D3 04           1 inc b
1312+ 92D4 C9               ret
1313+ 92D5
1314+ 92D5 A7           Compara_cositas_H1 and a
1315+ 92D6 28 11            jr z,1F
1316+ 92D8              ;    cp $fd
1317+ 92D8              ;    jr z,1F
1318+ 92D8              ;    cp $fe
1319+ 92D8              ;    jr z,1F
1320+ 92D8 FE FF            cp $ff
1321+ 92DA 28 0D            jr z,1F
1322+ 92DC FE 01            cp $01
1323+ 92DE 28 09            jr z,1F
1324+ 92E0 FE 02            cp $02
1325+ 92E2 28 05            jr z,1F
1326+ 92E4 FE 03            cp $03
1327+ 92E6 28 01            jr z,1F
1328+ 92E8 C0               ret nz
1329+ 92E9 04           1 inc b
1330+ 92EA C9               ret
1331+ 92EB
1332+ 92EB A7           Compara_cositas_L1 and a
1333+ 92EC 28 0D            jr z,1F
1334+ 92EE              ;    cp $fd
1335+ 92EE              ;    jr z,1F
1336+ 92EE              ;    cp $fe
1337+ 92EE              ;    jr z,1F
1338+ 92EE              ;    cp $ff
1339+ 92EE              ;    jr z,1F
1340+ 92EE FE 01            cp $01
1341+ 92F0 28 09            jr z,1F
1342+ 92F2 FE 02            cp $02
1343+ 92F4 28 05            jr z,1F
1344+ 92F6 FE 03            cp $03
1345+ 92F8 28 01            jr z,1F
1346+ 92FA C0               ret nz
1347+ 92FB 04           1 inc b
1348+ 92FC C9               ret
1349+ 92FD
1350+ 92FD A7           Compara_cositas_H3 and a
1351+ 92FE 28 0D            jr z,1F
1352+ 9300              ;    cp $fd
1353+ 9300              ;    jr z,1F
1354+ 9300 FE FE            cp $fe
1355+ 9302 28 09            jr z,1F
1356+ 9304 FE FF            cp $ff
1357+ 9306 28 05            jr z,1F
1358+ 9308 FE 01            cp $01
1359+ 930A 28 01            jr z,1F
1360+ 930C              ;    cp $02
1361+ 930C              ;    jr z,1F
1362+ 930C              ;    cp $03
1363+ 930C              ;    jr z,1F
1364+ 930C C0               ret nz
1365+ 930D 04           1 inc b
1366+ 930E C9               ret
1367+ 930F
1368+ 930F A7           Compara_cositas_L3 and a
1369+ 9310 28 0D            jr z,1F
1370+ 9312              ;    cp $fd
1371+ 9312              ;    jr z,1F
1372+ 9312              ;    cp $fe
1373+ 9312              ;    jr z,1F
1374+ 9312              ;    cp $ff
1375+ 9312              ;    jr z,1F
1376+ 9312 FE 01            cp $01
1377+ 9314 28 09            jr z,1F
1378+ 9316 FE 02            cp $02
1379+ 9318 28 05            jr z,1F
1380+ 931A FE 03            cp $03
1381+ 931C 28 01            jr z,1F
1382+ 931E C0               ret nz
1383+ 931F 04           1 inc b
1384+ 9320 C9               ret
1385+ 9321
1386+ 9321 A7           Compara_cositas_H4 and a
1387+ 9322 28 11            jr z,1F
1388+ 9324 FE FD            cp $fd
1389+ 9326 28 0D            jr z,1F
1390+ 9328 FE FE            cp $fe
1391+ 932A 28 09            jr z,1F
1392+ 932C FE FF            cp $ff
1393+ 932E 28 05            jr z,1F
1394+ 9330 FE 01            cp $01
1395+ 9332 28 01            jr z,1F
1396+ 9334              ;    cp $02
1397+ 9334              ;    jr z,1F
1398+ 9334              ;    cp $03
1399+ 9334              ;    jr z,1F
1400+ 9334 C0               ret nz
1401+ 9335 04           1 inc b
1402+ 9336 C9               ret
1403+ 9337
1404+ 9337 A7           Compara_cositas_L4 and a
1405+ 9338 28 0D            jr z,1F
1406+ 933A              ;    cp $fd
1407+ 933A              ;    jr z,1F
1408+ 933A FE FE            cp $fe
1409+ 933C 28 09            jr z,1F
1410+ 933E FE FF            cp $ff
1411+ 9340 28 05            jr z,1F
1412+ 9342 FE 01            cp $01
1413+ 9344 28 01            jr z,1F
1414+ 9346              ;    cp $02
1415+ 9346              ;    jr z,1F
1416+ 9346              ;    cp $03
1417+ 9346              ;    jr z,1F
1418+ 9346 C0               ret nz
1419+ 9347 04           1 inc b
1420+ 9348 C9               ret
# file closed: Disparo.asm
1269  9349              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9349              ; ******************************************************************************************************************************************************************************************
   2+ 9349              ;
   3+ 9349              ; 26/06/23
   4+ 9349              ;
   5+ 9349              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9349
   7+ 9349 CD 2D 96     Draw call Prepara_draw
   8+ 934C 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 934D A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 934E 28 05        	jr z,2F
  11+ 9350
  12+ 9350 3A D2 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9353 18 0C        	jr 1F
  14+ 9355 2A D0 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9358 22 C0 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 935B CD EA 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 935E              ;													; _la esquina superior izquierda de la pantalla.
  18+ 935E CD F0 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  19+ 9361 3A EC 89     1 ld a,(Ctrl_0)
  20+ 9364 CB 6F        	bit 5,a
  21+ 9366 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9368
  23+ 9368 CD 80 93     	call Comprueba_limite_horizontal
  24+ 936B CD 10 94     	call Comprueba_limite_vertical
  25+ 936E
  26+ 936E              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 936E
  28+ 936E CD 5D 95     3 call calcula_CColumnass
  29+ 9371 CD 94 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9374 CD F3 95     	call Define_rutina_de_impresion
  31+ 9377
  32+ 9377 3A EC 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 937A CB AF        	res 5,a											; _a ser de utilidad.
  34+ 937C 32 EC 89     	ld (Ctrl_0),a
  35+ 937F
  36+ 937F C9           	ret
  37+ 9380
  38+ 9380              ; *******************************************************************************************************************************************************************************************
  39+ 9380              ;	21/01/23
  40+ 9380              ;
  41+ 9380              ; 	Comprueba_limite_horizontal.
  42+ 9380              ;
  43+ 9380              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9380              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9380              ;
  46+ 9380              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9380              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9380              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9380              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9380
  51+ 9380
  52+ 9380
  53+ 9380 3A EC 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9383 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9385 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9387 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9389 32 EC 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 938C 18 09            jr 6F
  59+ 938E CB 5F        1 bit 3,a
  60+ 9390 28 0A            jr z,2F
  61+ 9392 E6 F7            and $f7
  62+ 9394 32 EC 89         ld (Ctrl_0),a
  63+ 9397 CD EA 94     6 call Inicializacion
  64+ 939A 18 5B            jr 5F
  65+ 939C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 939D
  67+ 939D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 939D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 939D
  70+ 939D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 939E 2A FB 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 93A1 CD F9 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 93A4 67           	ld h,a
  74+ 93A5 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 93A6 CD F9 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 93A9 67           	ld h,a
  77+ 93AA A7           	and a
  78+ 93AB ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 93AD 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 93AE 3A D2 89     	ld a,(Cuad_objeto)
  81+ 93B1 FE 02        	cp 2
  82+ 93B3 38 1E        	jr c,3F
  83+ 93B5 28 1C        	jr z,3F
  84+ 93B7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 93B8 28 23            jr z,7F
  86+ 93BA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 93BC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 93BE E1           	pop hl
  89+ 93BF
  90+ 93BF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 93BF              ; _para indicar con E="2" en caso necesario.
  92+ 93BF
  93+ 93BF E5               push hl
  94+ 93C0 C5               push bc
  95+ 93C1 CD F9 98     	call calcula_tercio
  96+ 93C4 FE 01        	cp 1
  97+ 93C6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 93C8 CD F8 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 93CB 28 26            jr z,9F
 100+ 93CD 38 24            jr c,9F
 101+ 93CF 1E 00        11 ld e,0
 102+ 93D1 18 22            jr 8F
 103+ 93D3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 93D4 28 07        	jr z, 7F
 105+ 93D6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 93D8 1E 00         	ld e,0
 107+ 93DA E1           	pop hl
 108+ 93DB 18 04        	jr 4F
 109+ 93DD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93DF 18 15            jr 10F
 111+ 93E1
 112+ 93E1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93E1              ; _para indicar con E="2" en caso necesario.
 114+ 93E1
 115+ 93E1 E5           4 push hl
 116+ 93E2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93E3 CD F9 98     	call calcula_tercio
 118+ 93E6 FE 01        	cp 1
 119+ 93E8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93EA CD F8 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93ED 28 04            jr z,9F
 122+ 93EF 30 02            jr nc,9F
 123+ 93F1 18 02        	jr 8F
 124+ 93F3 1E 02        9 ld e,2
 125+ 93F5 C1           8 pop bc
 126+ 93F6 E1           10 pop hl
 127+ 93F7 C9           5 ret
 128+ 93F8
 129+ 93F8              ; --------------------
 130+ 93F8              ;
 131+ 93F8              ; 25/08/22
 132+ 93F8
 133+ 93F8 CD F9 98     Comprueba_centro call calcula_tercio
 134+ 93FB 67               ld h,a
 135+ 93FC 08           	ex af,af
 136+ 93FD FE 02        	cp 2
 137+ 93FF 38 07        	jr c,1F
 138+ 9401 28 05        	jr z,1F
 139+ 9403 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 9406 18 03        	jr 2F
 141+ 9408 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 940B 08           2 ex af,af
 143+ 940C A7               and a
 144+ 940D ED 42            sbc hl,bc
 145+ 940F C9               ret
 146+ 9410
 147+ 9410              ; *********************************************************************************************************************************************************************************************
 148+ 9410              ;
 149+ 9410              ;   16/8/22
 150+ 9410              ;
 151+ 9410              ;	Comprueba_limite_vertical
 152+ 9410              ;
 153+ 9410              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 9410              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 9410              ;
 156+ 9410
 157+ 9410 2A C0 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 9413 7D           	ld a,l
 159+ 9414 E6 1F        	and $1F
 160+ 9416 57           	ld d,a
 161+ 9417 3A FD 89     	ld a,(Limite_vertical)
 162+ 941A BA           	cp d 											; Límite - Posición.
 163+ 941B 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 941C 3A D2 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 941F CB 47        	bit 0,a
 166+ 9421 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 9423
 168+ 9423              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 9423
 170+ 9423 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 9424 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9426
 173+ 9426              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9426              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9426
 176+ 9426 3A C4 89         ld a,(Coordenada_X)
 177+ 9429 16 0F            ld d,Centro_izquierda
 178+ 942B A7               and a
 179+ 942C 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 942D 28 1E            jr z,3F
 181+ 942F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 9431              ;                                                    ; _salimos sin modificar nada.
 183+ 9431 18 0E            jr 2F
 184+ 9433 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9434 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9436
 187+ 9436              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9436              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9436
 190+ 9436 3A C4 89         ld a,(Coordenada_X)
 191+ 9439 16 10            ld d,Centro_derecha
 192+ 943B A7               and a
 193+ 943C 92               sub d
 194+ 943D 28 0E            jr z,3F
 195+ 943F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9441              ;                                                    ; _salimos sin modificar nada.
 197+ 9441 CB 43        2 bit 0,e
 198+ 9443 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9445 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9446 CD DA 94         call Modificaccionne
 201+ 9449 C1           	pop bc
 202+ 944A CD EA 94         call Inicializacion
 203+ 944D C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 944E
 205+ 944E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 944E
 207+ 944E C5           4 push bc
 208+ 944F 01 BF 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9452 0A           	ld a,(bc)
 210+ 9453 3D           	dec a
 211+ 9454 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9455 7D           	ld a,l
 213+ 9456 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9457 CB 47        	bit 0,a
 215+ 9459 28 03        	jr z,5F
 216+ 945B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 945C 18 2E        	jr 7F
 218+ 945E
 219+ 945E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 945E
 221+ 945E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 945F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9460 3A EC 89     	ld a,(Ctrl_0)
 224+ 9463 CB 4F        	bit 1,a
 225+ 9465 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9467 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9468
 228+ 9468              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9468
 230+ 9468 1C               inc e
 231+ 9469 1D               dec e
 232+ 946A 20 07            jr nz,12F
 233+ 946C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 946D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 946E 22 C0 89     	ld (Posicion_actual),hl
 236+ 9471 18 44        13 jr 9F
 237+ 9473 CB 43        12 bit 0,e
 238+ 9475 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9477              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9477 C1           	pop bc
 241+ 9478 18 D3        	jr 3B
 242+ 947A 80           14 add b
 243+ 947B 6F               ld l,a
 244+ 947C 22 C0 89     	ld (Posicion_actual),hl
 245+ 947F CD DA 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9482 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9484 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9486 32 EC 89         ld (Ctrl_0),a
 249+ 9489 F1           	pop af
 250+ 948A 18 2B        	jr 9F
 251+ 948C
 252+ 948C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 948C
 254+ 948C F5           7 push af
 255+ 948D 3A EC 89     	ld a,(Ctrl_0)
 256+ 9490 CB 47        	bit 0,a
 257+ 9492 20 1D        	jr nz,8F
 258+ 9494 F1           	pop af
 259+ 9495
 260+ 9495              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9495
 262+ 9495 1C           	inc e
 263+ 9496 1D               dec e
 264+ 9497 20 07            jr nz,10F
 265+ 9499 90           	sub b
 266+ 949A 6F               ld l,a
 267+ 949B 22 C0 89     	ld (Posicion_actual),hl
 268+ 949E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 94A0              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 94A0 CB 43        10 bit 0,e
 271+ 94A2 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 94A4              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 94A4 C1           	pop bc
 274+ 94A5 18 A6        	jr 3B
 275+ 94A7 90           16 sub b
 276+ 94A8 6F               ld l,a
 277+ 94A9 22 C0 89     	ld (Posicion_actual),hl
 278+ 94AC CD DA 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 94AF 18 06            jr 9F
 280+ 94B1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 94B3 32 EC 89         ld (Ctrl_0),a
 282+ 94B6 F1           	pop af
 283+ 94B7 C1           9 pop bc
 284+ 94B8 1E 00        	ld e,0
 285+ 94BA CD EA 94         call Inicializacion
 286+ 94BD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 94BE 08           	ex af,af
 288+ 94BF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 94C0 18 8B            jr 3B
 290+ 94C2
 291+ 94C2              ; --------------------
 292+ 94C2
 293+ 94C2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 94C4 CD 48 96     1 call PreviousScan
 295+ 94C7 10 FB            djnz 1B
 296+ 94C9 22 C0 89     	ld (Posicion_actual),hl
 297+ 94CC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 94CD C9           	ret
 299+ 94CE
 300+ 94CE              ; --------------------
 301+ 94CE
 302+ 94CE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 94D0 CD 39 96     1 call NextScan
 304+ 94D3 10 FB            djnz 1B
 305+ 94D5 22 C0 89     	ld (Posicion_actual),hl
 306+ 94D8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94D9 C9           	ret
 308+ 94DA
 309+ 94DA              ; --------------------
 310+ 94DA              ;
 311+ 94DA              ;	22/01/23
 312+ 94DA              ;
 313+ 94DA              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94DA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94DA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94DA
 317+ 94DA
 318+ 94DA              Modificaccionne
 319+ 94DA
 320+ 94DA 3A D2 89     	ld a,(Cuad_objeto)
 321+ 94DD FE 02        	cp 2
 322+ 94DF CC C2 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94E2 DC C2 94         call c,Modifica_Pos_actual
 324+ 94E5 C8           	ret z
 325+ 94E6 CD CE 94         call Modifica_Pos_actual2
 326+ 94E9 C9               ret
 327+ 94EA
 328+ 94EA              ; *************************************************************************************************************************************************************************************************
 329+ 94EA              ;
 330+ 94EA              ;	13/8/22
 331+ 94EA              ;
 332+ 94EA              ;	Inicializacion
 333+ 94EA              ;
 334+ 94EA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94EA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94EA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94EA              ;
 338+ 94EA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94EA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94EA              ;	_ desaparece/aparece.
 341+ 94EA
 342+ 94EA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94EA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94EA              ;
 345+ 94EA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94EA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94EA              ; 		   [E] ="0"
 348+ 94EA
 349+ 94EA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94EA
 351+ 94EA CD F9 98     Inicializacion call calcula_tercio
 352+ 94ED 28 36        	jr z,primit
 353+ 94EF E6 02        	and 2
 354+ 94F1 20 07        	jr nz,segmit
 355+ 94F3 7D           	ld a,l
 356+ 94F4 FE 7F        	cp $7f
 357+ 94F6 38 2D        	jr c,primit
 358+ 94F8 28 2B        	jr z,primit
 359+ 94FA CD 57 95     segmit call column
 360+ 94FD 38 13        	jr c,tercuad
 361+ 94FF 3E 04        cuarcuad ld a,4
 362+ 9501 32 D2 89     	ld (Cuad_objeto),a
 363+ 9504 21 20 48     	ld hl,$4820
 364+ 9507 22 FB 89     	ld (Limite_horizontal),hl
 365+ 950A 21 FD 89     	ld hl,Limite_vertical
 366+ 950D 36 0D        	ld (hl),$0d
 367+ 950F 08           	ex af,af
 368+ 9510 18 3C        	jr 1F
 369+ 9512              tercuad
 370+ 9512 3E 03        	ld a,3
 371+ 9514 32 D2 89     	ld (Cuad_objeto),a
 372+ 9517 21 20 48     	ld hl,$4820
 373+ 951A 22 FB 89     	ld (Limite_horizontal),hl
 374+ 951D 21 FD 89     	ld hl,Limite_vertical
 375+ 9520 36 12        	ld (hl),$12
 376+ 9522 08           	ex af,af
 377+ 9523 18 29        	jr 1F
 378+ 9525 CD 57 95     primit call column
 379+ 9528 38 13        	jr c, primcuad
 380+ 952A              segcuad
 381+ 952A 3E 02        	ld a,2
 382+ 952C 32 D2 89     	ld (Cuad_objeto),a
 383+ 952F 21 C0 4F     	ld hl,$4fc0
 384+ 9532 22 FB 89     	ld (Limite_horizontal),hl
 385+ 9535 21 FD 89     	ld hl,Limite_vertical
 386+ 9538 36 0D        	ld (hl),$0d
 387+ 953A 08           	ex af,af
 388+ 953B 18 11        	jr 1F
 389+ 953D              primcuad
 390+ 953D 3E 01        	ld a,1
 391+ 953F 32 D2 89     	ld (Cuad_objeto),a
 392+ 9542 21 C0 4F     	ld hl,$4fc0
 393+ 9545 22 FB 89     	ld (Limite_horizontal),hl
 394+ 9548 21 FD 89     	ld hl,Limite_vertical
 395+ 954B 36 12        	ld (hl),$12
 396+ 954D 08           	ex af,af
 397+ 954E CD 84 9C     1 call Genera_coordenadas
 398+ 9551 21 EC 89     	ld hl,Ctrl_0
 399+ 9554 CB EE        	set 5,(hl)
 400+ 9556 C9           	ret
 401+ 9557
 402+ 9557              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9557
 404+ 9557              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9557              ;
 406+ 9557              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9557
 408+ 9557 7D           column ld a,l
 409+ 9558 E6 1F        	and $1f
 410+ 955A FE 10         	cp $10
 411+ 955C C9            	ret
 412+ 955D
 413+ 955D              ; --------------------------------------------------------------------------------------------------------------------
 414+ 955D              ;
 415+ 955D              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 955D              ;
 417+ 955D              ; 14/12/22
 418+ 955D              ;
 419+ 955D              ;	Modifica: A y BC.
 420+ 955D
 421+ 955D 3A D2 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9560 E6 01        	and 1
 423+ 9562 28 17        	jr z,1F
 424+ 9564
 425+ 9564              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9564
 427+ 9564 3A C4 89     	ld a,(Coordenada_X)
 428+ 9567 47           	ld b,a
 429+ 9568 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9569 79           	ld a,c
 431+ 956A 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 956B 38 08        	jr c,2F
 433+ 956D 47           	ld b,a
 434+ 956E 79           	ld a,c
 435+ 956F 90           	sub b
 436+ 9570 32 FA 89     	ld (Columnas),a
 437+ 9573 18 1B        	jr 4F
 438+ 9575 79           2 ld a,c
 439+ 9576 32 FA 89     	ld (Columnas),a
 440+ 9579 18 15        	jr 4F
 441+ 957B
 442+ 957B              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 957B
 444+ 957B 3A C4 89     1 ld a,(Coordenada_X)
 445+ 957E 81           	add c
 446+ 957F 3D           	dec a
 447+ 9580 D6 1F        	sub $1f
 448+ 9582 38 08        	jr c,3F
 449+ 9584 47           	ld b,a
 450+ 9585 79           	ld a,c
 451+ 9586 90           	sub b
 452+ 9587 32 FA 89     	ld (Columnas),a
 453+ 958A 18 04        	jr 4F
 454+ 958C 79           3 ld a,c
 455+ 958D 32 FA 89     	ld (Columnas),a
 456+ 9590 D9           4 exx
 457+ 9591 4F           	ld c,a
 458+ 9592 D9           	exx
 459+ 9593 C9            ret
 460+ 9594
 461+ 9594              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9594              ;
 463+ 9594              ;   19/7/23
 464+ 9594              ;
 465+ 9594              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9594              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9594              ;
 468+ 9594              ;	OUTPUT: IX Contienen el puntero de impresión.
 469+ 9594              ;			HL e IY Contienen (Puntero_objeto).
 470+ 9594              ;
 471+ 9594              ;	DESTRUYE: HL,B Y A.
 472+ 9594
 473+ 9594 3A D2 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 474+ 9597 FE 02        	cp 2
 475+ 9599 38 18        	jr c,1F
 476+ 959B 28 16        	jr z,1F
 477+ 959D E6 01        	and 1
 478+ 959F 28 0D        	jr z,3F
 479+ 95A1
 480+ 95A1              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 481+ 95A1
 482+ 95A1 CD E7 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 483+ 95A4
 484+ 95A4 7D           9 ld a,l
 485+ 95A5 E6 1F        	and $1f
 486+ 95A7 28 2A        	jr z,7F
 487+ 95A9 2B           	dec hl
 488+ 95AA 10 F8        	djnz 9B
 489+ 95AC 18 25        	jr 7F
 490+ 95AE
 491+ 95AE              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 492+ 95AE
 493+ 95AE 2A C0 89     3 ld hl,(Posicion_actual)
 494+ 95B1 18 20        	jr 7F
 495+ 95B3
 496+ 95B3 28 14        1 jr z,2F
 497+ 95B5
 498+ 95B5              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 499+ 95B5
 500+ 95B5 CD E7 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 95B8
 502+ 95B8 7D           4 ld a,l
 503+ 95B9 E6 1F        	and $1f
 504+ 95BB 28 03        	jr z,6F
 505+ 95BD 2B           	dec hl
 506+ 95BE 10 F8        	djnz 4B
 507+ 95C0 06 0F        6 ld b,15
 508+ 95C2 CD 48 96     5 call PreviousScan
 509+ 95C5 10 FB        	djnz 5B
 510+ 95C7 18 0A        	jr 7F
 511+ 95C9
 512+ 95C9              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 513+ 95C9
 514+ 95C9 CD E7 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 515+ 95CC 06 0F        	ld b,15
 516+ 95CE CD 48 96     8 call PreviousScan
 517+ 95D1 10 FB        	djnz 8B
 518+ 95D3
 519+ 95D3 E5           7 push hl
 520+ 95D4 DD E1        	pop ix
 521+ 95D6
 522+ 95D6 2A C2 89     	ld hl,(Puntero_objeto)
 523+ 95D9 E5           	push hl
 524+ 95DA FD E1        	pop iy
 525+ 95DC
 526+ 95DC              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 527+ 95DC
 528+ 95DC 3A EC 89     	ld a,(Ctrl_0)
 529+ 95DF CB 77        	bit 6,a
 530+ 95E1 C8           	ret z
 531+ 95E2
 532+ 95E2              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 533+ 95E2              ; _ entidad / Amadeus´.
 534+ 95E2
 535+ 95E2 DD 22 29 8A  	ld (Puntero_de_impresion_Amadeus),ix
 536+ 95E6
 537+ 95E6 C9           	ret
 538+ 95E7
 539+ 95E7              ; --------------------------------------------------------------------------------------------------------------------
 540+ 95E7              ;
 541+ 95E7              ;	2/1/23
 542+ 95E7              ;
 543+ 95E7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 544+ 95E7              ;
 545+ 95E7              ;	Tras esta rutina tenemos:
 546+ 95E7              ;
 547+ 95E7              ;	OUTPUT: HL contiene (Posicion_actual).
 548+ 95E7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 549+ 95E7              ;
 550+ 95E7              ;	DESTRUYE!!!!! HL,B y A.
 551+ 95E7
 552+ 95E7 2A C0 89     Operandos ld hl,(Posicion_actual)
 553+ 95EA 3A FA 89     	ld a,(Columnas)
 554+ 95ED 3D           	dec a
 555+ 95EE 20 01        	jr nz,1F
 556+ 95F0 3C           	inc a
 557+ 95F1 47           1 ld b,a
 558+ 95F2 C9           	ret
 559+ 95F3
 560+ 95F3              ; --------------------------------------------------------------------------------------------------------------------
 561+ 95F3              ;
 562+ 95F3              ;	3/1/23
 563+ 95F3              ;
 564+ 95F3              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 565+ 95F3              ;
 566+ 95F3              ;	Destruye: A,B,HL y DE.
 567+ 95F3
 568+ 95F3              Define_rutina_de_impresion
 569+ 95F3
 570+ 95F3 3A BF 89     	ld a,(Columns)
 571+ 95F6 47           	ld b,a
 572+ 95F7 3A FA 89     	ld a,(Columnas)
 573+ 95FA B8           	cp b
 574+ 95FB 20 0D        	jr nz,2f
 575+ 95FD
 576+ 95FD              ;	La entidad se imprime entera.
 577+ 95FD
 578+ 95FD 21 C9 96     	ld hl, Indice_entidades_completas
 579+ 9600 E6 01        	and 1
 580+ 9602 28 02        	jr z,1F
 581+ 9604
 582+ 9604 23           	inc hl
 583+ 9605 23           	inc hl
 584+ 9606
 585+ 9606 CD 29 8D     1 call Extrae_address
 586+ 9609 C9           	ret		;	ret
 587+ 960A
 588+ 960A              ;	La entidad no se imprime entera en pantalla.
 589+ 960A
 590+ 960A 3A D2 89     2 ld a,(Cuad_objeto)
 591+ 960D E6 01        	and 1
 592+ 960F 28 17        	jr z,3F
 593+ 9611
 594+ 9611              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 595+ 9611
 596+ 9611 21 CD 96     	ld hl, Indice_entidades_incompletas_izquierda
 597+ 9614 3A BF 89     4 ld a,(Columns)
 598+ 9617 E6 01        	and 1
 599+ 9619 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 600+ 961B
 601+ 961B 23           	inc hl
 602+ 961C 23           	inc hl
 603+ 961D
 604+ 961D 3A FA 89     	ld a,(Columnas)
 605+ 9620 E6 01        	and 1
 606+ 9622 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 607+ 9624
 608+ 9624 23           	inc hl
 609+ 9625 23           	inc hl
 610+ 9626
 611+ 9626 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 612+ 9628
 613+ 9628 21 D3 96     3 ld hl, Indice_entidades_incompletas_derecha
 614+ 962B 18 E7        	jr 4B
 615+ 962D
 616+ 962D              ; --------------------------------------------------------------------------------------------------------------------
 617+ 962D              ;
 618+ 962D              ;	Prepara_draw
 619+ 962D              ;
 620+ 962D              ;	Es una rutina de carga.
 621+ 962D              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 622+ 962D              ;
 623+ 962D              ;	FUNCIONAMIENTO:
 624+ 962D              ;
 625+ 962D              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 626+ 962D              ;	- LD (Posicion_actual) del objeto en [HL].
 627+ 962D              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 628+ 962D              ;
 629+ 962D              ;	DESTRUYE:
 630+ 962D              ;
 631+ 962D              ;	Logicamente, BC,HL y E quedan destruidos.
 632+ 962D
 633+ 962D 21 BE 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 634+ 9630 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 635+ 9631 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 636+ 9632 4E           	ld c,(hl)
 637+ 9633 2A C0 89     	ld hl,(Posicion_actual)
 638+ 9636 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 639+ 9638 C9           	ret
 640+ 9639
 641+ 9639              ;----------------------------------------------------------------------------------------------------------------
 642+ 9639              ;
 643+ 9639              ;	5/08/22
 644+ 9639              ;
 645+ 9639              ;   NextScan.
 646+ 9639              ;
 647+ 9639              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 648+ 9639              ;
 649+ 9639              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 650+ 9639              ;
 651+ 9639              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 652+ 9639              ;
 653+ 9639              ;       DESTRUIDOS: AF y HL !!!
 654+ 9639              ;
 655+ 9639              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 656+ 9639              ;
 657+ 9639
 658+ 9639 24           NextScan inc h          ; Incrementamos el scanline.
 659+ 963A 7C               ld a,h
 660+ 963B E6 07            and 7
 661+ 963D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 662+ 963E
 663+ 963E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 664+ 963F C6 20            add a,$20           ; Vamos a comprobarlo...
 665+ 9641 6F               ld l,a
 666+ 9642 D8               ret c               ; Salimos si se produce el cambio de tercio.
 667+ 9643
 668+ 9643 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 669+ 9644 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 670+ 9646 67               ld h,a
 671+ 9647 C9               ret
 672+ 9648
 673+ 9648              ;----------------------------------------------------------------------------------------------------------------
 674+ 9648              ;
 675+ 9648              ;	5/08/22
 676+ 9648              ;
 677+ 9648              ;   PreviousScan.
 678+ 9648              ;
 679+ 9648              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 680+ 9648              ;
 681+ 9648              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 682+ 9648              ;
 683+ 9648              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 684+ 9648              ;
 685+ 9648              ;       DESTRUIDOS: AF y HL !!!
 686+ 9648              ;
 687+ 9648              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 688+ 9648              ;
 689+ 9648
 690+ 9648 7C           PreviousScan ld a,h
 691+ 9649 25               dec h               ; Dec H.
 692+ 964A E6 07            and 7
 693+ 964C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 694+ 964D
 695+ 964D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 696+ 964E D6 20            sub $20             ; Vamos a comprobarlo...
 697+ 9650 6F               ld l,a
 698+ 9651 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 699+ 9652
 700+ 9652 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 701+ 9653 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 702+ 9655 67               ld h,a
 703+ 9656 C9               ret
 704+ 9657
 705+ 9657              ; -----------------------------------------------------------------------------------
 706+ 9657              ;
 707+ 9657              ;	28/2/23
 708+ 9657              ;
 709+ 9657              ;	Rutina principal de pintado de entidades/Amadeus.
 710+ 9657              ;	Extrae fotos de Album_de_fotos.
 711+ 9657
 712+ 9657 3A 0C 8A     Extrae_foto_entidades ld a,(Numero_de_malotes)
 713+ 965A A7           	and a
 714+ 965B C8           	ret z
 715+ 965C ED 73 11 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 716+ 9660 31 00 70     	ld sp,Album_de_fotos
 717+ 9663
 718+ 9663 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 719+ 9665 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 720+ 9666 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 721+ 9667
 722+ 9667 ED 73 13 8A  	ld (Stack_2),sp
 723+ 966B ED 7B 11 8A  	ld sp,(Stack)
 724+ 966F
 725+ 966F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 726+ 966F
 727+ 966F 3E CD        	ld a,$cd
 728+ 9671 32 79 96     	ld (Imprime),a
 729+ 9674 EB           	ex de,hl
 730+ 9675 22 7A 96     	ld (Imprime+1),hl
 731+ 9678 EB           	ex de,hl
 732+ 9679
 733+ 9679              ; Ejecuta la llamada:	CALL $xx,xx
 734+ 9679
 735+ 9679 00 00 00     Imprime db 0,0,0
 736+ 967C
 737+ 967C 3A 0C 8A     	ld a,(Numero_de_malotes)
 738+ 967F 3D           	dec a
 739+ 9680 28 09        	jr z,1F
 740+ 9682 32 0C 8A      	ld (Numero_de_malotes),a
 741+ 9685
 742+ 9685 ED 7B 13 8A   	ld sp,(Stack_2)
 743+ 9689 18 D8        	jr 2B
 744+ 968B
 745+ 968B AF           1 xor a
 746+ 968C 32 13 8A     	ld (Stack_2),a
 747+ 968F C9           	ret
 748+ 9690
 749+ 9690              ; -----------------------------------------------------------------------------------
 750+ 9690              ;
 751+ 9690              ;	28/2/23
 752+ 9690              ;
 753+ 9690              ;	Pinta los disparos generados.
 754+ 9690
 755+ 9690              Extrae_foto_disparos
 756+ 9690
 757+ 9690 3A 19 8A     	ld a,(Numero_de_disparotes)
 758+ 9693 A7           	and a
 759+ 9694 C8           	ret z
 760+ 9695 ED 73 11 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 761+ 9699 31 85 70     	ld sp,Album_de_fotos_disparos
 762+ 969C
 763+ 969C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 764+ 969E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 765+ 969F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 766+ 96A0
 767+ 96A0 ED 73 13 8A  	ld (Stack_2),sp
 768+ 96A4 ED 7B 11 8A  	ld sp,(Stack)
 769+ 96A8
 770+ 96A8              ; Fabrica la llamada a la correspondiente rutina de impresión.
 771+ 96A8
 772+ 96A8 3E CD        	ld a,$cd
 773+ 96AA 32 B2 96     	ld (Imprime2),a
 774+ 96AD EB           	ex de,hl
 775+ 96AE 22 B3 96     	ld (Imprime2+1),hl
 776+ 96B1 EB           	ex de,hl
 777+ 96B2
 778+ 96B2              ; Ejecuta la llamada:	CALL $xx,xx
 779+ 96B2
 780+ 96B2 00 00 00     Imprime2 db 0,0,0
 781+ 96B5
 782+ 96B5 3A 19 8A     	ld a,(Numero_de_disparotes)
 783+ 96B8 3D           	dec a
 784+ 96B9 28 09        	jr z,1F
 785+ 96BB 32 19 8A      	ld (Numero_de_disparotes),a
 786+ 96BE
 787+ 96BE ED 7B 13 8A  	ld sp,(Stack_2)
 788+ 96C2 18 D8        	jr 2B
 789+ 96C4
 790+ 96C4 AF           1 xor a
 791+ 96C5 32 13 8A     	ld (Stack_2),a
 792+ 96C8 C9           	ret
 793+ 96C9
# file closed: Draw_XOR.asm
1270  96C9              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96C9              ;   índices de Rutinas de impresión.
   2+ 96C9
   3+ 96C9 D9 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96CB 06 97            defw Pinta_Amadeus_3x2
   5+ 96CD
   6+ 96CD 5C 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96CF FC 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96D1 B0 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96D3
  10+ 96D3 86 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96D5 8A 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96D7 3E 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96D9
  14+ 96D9
  15+ 96D9              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96D9              ;
  17+ 96D9              ;   12/12/22
  18+ 96D9              ;
  19+ 96D9              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96D9              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96D9              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96D9              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96D9              ;
  24+ 96D9              ;   Modifica: DE y HL.
  25+ 96D9
  26+ 96D9 ED 73 11 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96DD FD F9        	ld sp,iy
  28+ 96DF 06 10            ld b,16
  29+ 96E1 D1           1 pop de
  30+ 96E2 7B               ld a,e
  31+ 96E3 AE               xor (hl)
  32+ 96E4 77           	ld (hl),a
  33+ 96E5 23           	inc hl
  34+ 96E6 7A               ld a,d
  35+ 96E7 AE               xor (hl)
  36+ 96E8 77           	ld (hl),a
  37+ 96E9 2B           	dec hl
  38+ 96EA 24           	inc h
  39+ 96EB 7C               ld a,h
  40+ 96EC E6 07            and 7
  41+ 96EE 20 0A            jr nz,2F
  42+ 96F0 7D               ld a,l
  43+ 96F1 C6 20            add a,$20
  44+ 96F3 6F               ld l,a
  45+ 96F4 38 04            jr c,2F
  46+ 96F6 7C               ld a,h
  47+ 96F7 D6 08            sub 8
  48+ 96F9 67               ld h,a
  49+ 96FA 7C           2 ld a,h
  50+ 96FB FE 58            cp $58
  51+ 96FD 28 02            jr z,3F
  52+ 96FF 10 E0            djnz 1B
  53+ 9701 ED 7B 11 8A  3 ld sp,(Stack)
  54+ 9705 C9           	ret
  55+ 9706
  56+ 9706 ED 73 11 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 970A FD F9        	ld sp,iy
  58+ 970C 06 08            ld b,8
  59+ 970E D1           1 pop de
  60+ 970F 7B               ld a,e
  61+ 9710 AE               xor (hl)
  62+ 9711 77           	ld (hl),a
  63+ 9712 23           	inc hl
  64+ 9713 7A               ld a,d
  65+ 9714 AE               xor (hl)
  66+ 9715 77           	ld (hl),a
  67+ 9716 23           	inc hl
  68+ 9717 D1           	pop de
  69+ 9718 7B               ld a,e
  70+ 9719 AE               xor (hl)
  71+ 971A 77           	ld (hl),a
  72+ 971B 2B           	dec hl
  73+ 971C 2B           	dec hl
  74+ 971D 24           	inc h
  75+ 971E 7C               ld a,h
  76+ 971F E6 07            and 7
  77+ 9721 20 0A            jr nz,2F
  78+ 9723 7D               ld a,l
  79+ 9724 C6 20            add a,$20
  80+ 9726 6F               ld l,a
  81+ 9727 38 04            jr c,2F
  82+ 9729 7C               ld a,h
  83+ 972A D6 08            sub 8
  84+ 972C 67               ld h,a
  85+ 972D 7C           2 ld a,h
  86+ 972E FE 58            cp $58
  87+ 9730 28 25            jr z,4F
  88+ 9732 7A               ld a,d
  89+ 9733 AE               xor (hl)
  90+ 9734 77               ld (hl),a
  91+ 9735 D1           	pop de
  92+ 9736 23           	inc hl
  93+ 9737 7B               ld a,e
  94+ 9738 AE               xor (hl)
  95+ 9739 77           	ld (hl),a
  96+ 973A 23           	inc hl
  97+ 973B 7A               ld a,d
  98+ 973C AE               xor (hl)
  99+ 973D 77           	ld (hl),a
 100+ 973E 2B           	dec hl
 101+ 973F 2B           	dec hl
 102+ 9740 24           	inc h
 103+ 9741 7C               ld a,h
 104+ 9742 E6 07            and 7
 105+ 9744 20 0A            jr nz,3F
 106+ 9746 7D               ld a,l
 107+ 9747 C6 20            add a,$20
 108+ 9749 6F               ld l,a
 109+ 974A 38 04            jr c,3F
 110+ 974C 7C               ld a,h
 111+ 974D D6 08            sub 8
 112+ 974F 67               ld h,a
 113+ 9750 7C           3 ld a,h
 114+ 9751 FE 58            cp $58
 115+ 9753 28 02            jr z,4F
 116+ 9755 10 B7            djnz 1B
 117+ 9757 ED 7B 11 8A  4 ld sp,(Stack)
 118+ 975B C9           	ret
 119+ 975C
 120+ 975C              ; ---------------------------------------------------
 121+ 975C
 122+ 975C ED 73 11 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9760 FD F9        	ld sp,iy
 124+ 9762
 125+ 9762              ; >>>
 126+ 9762
 127+ 9762 06 10            ld b,16
 128+ 9764 D1           1 pop de
 129+ 9765 7A           	ld a,d
 130+ 9766 AE           	xor (hl)
 131+ 9767 77           	ld (hl),a
 132+ 9768 24           	inc h
 133+ 9769 7C               ld a,h
 134+ 976A E6 07            and 7
 135+ 976C 20 0C            jr nz,2F
 136+ 976E 7D               ld a,l
 137+ 976F C6 20            add a,$20
 138+ 9771 6F               ld l,a
 139+ 9772 38 06            jr c,2F
 140+ 9774 7C               ld a,h
 141+ 9775 D6 08            sub 8
 142+ 9777 67               ld h,a
 143+ 9778 18 00            jr 2F
 144+ 977A 7C           2 ld a,h
 145+ 977B FE 58            cp $58
 146+ 977D 28 02            jr z,3F
 147+ 977F 10 E3            djnz 1B
 148+ 9781 ED 7B 11 8A  3 ld sp,(Stack)
 149+ 9785 C9           	ret
 150+ 9786
 151+ 9786 ED 73 11 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 978A FD F9        	ld sp,iy
 153+ 978C
 154+ 978C              ; >>>
 155+ 978C
 156+ 978C 06 10            ld b,16
 157+ 978E D1           1 pop de
 158+ 978F 7B           	ld a,e
 159+ 9790 AE           	xor (hl)
 160+ 9791 77           	ld (hl),a
 161+ 9792 24           	inc h
 162+ 9793 7C               ld a,h
 163+ 9794 E6 07            and 7
 164+ 9796 20 0C            jr nz,2F
 165+ 9798 7D               ld a,l
 166+ 9799 C6 20            add a,$20
 167+ 979B 6F               ld l,a
 168+ 979C 38 06            jr c,2F
 169+ 979E 7C               ld a,h
 170+ 979F D6 08            sub 8
 171+ 97A1 67               ld h,a
 172+ 97A2 18 00            jr 2F
 173+ 97A4 7C           2 ld a,h
 174+ 97A5 FE 58            cp $58
 175+ 97A7 28 02            jr z,3F
 176+ 97A9 10 E3            djnz 1B
 177+ 97AB ED 7B 11 8A  3 ld sp,(Stack)
 178+ 97AF C9           	ret
 179+ 97B0
 180+ 97B0              ; ---------------------------------------------------
 181+ 97B0
 182+ 97B0 ED 73 11 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97B4 FD F9        	ld sp,iy
 184+ 97B6 06 08            ld b,8
 185+ 97B8 D1           1 pop de
 186+ 97B9 7A           	ld a,d
 187+ 97BA AE           	xor (hl)
 188+ 97BB 77           	ld (hl),a
 189+ 97BC 23           	inc hl
 190+ 97BD D1           	pop de
 191+ 97BE 7B           	ld a,e
 192+ 97BF AE           	xor (hl)
 193+ 97C0 77           	ld (hl),a
 194+ 97C1 2B           	dec hl
 195+ 97C2 24            	inc h
 196+ 97C3 7C               ld a,h
 197+ 97C4 E6 07            and 7
 198+ 97C6 20 0A            jr nz,2F
 199+ 97C8 7D               ld a,l
 200+ 97C9 C6 20            add a,$20
 201+ 97CB 6F               ld l,a
 202+ 97CC 38 04            jr c,2F
 203+ 97CE 7C               ld a,h
 204+ 97CF D6 08            sub 8
 205+ 97D1 67               ld h,a
 206+ 97D2 7C           2 ld a,h
 207+ 97D3 FE 58            cp $58
 208+ 97D5 28 20            jr z,4F
 209+ 97D7 D1               pop de
 210+ 97D8 7B           	ld a,e
 211+ 97D9 AE           	xor (hl)
 212+ 97DA 77           	ld (hl),a
 213+ 97DB 23           	inc hl
 214+ 97DC 7A           	ld a,d
 215+ 97DD AE           	xor (hl)
 216+ 97DE 77           	ld (hl),a
 217+ 97DF 2B           	dec hl
 218+ 97E0 24           	inc h
 219+ 97E1 7C               ld a,h
 220+ 97E2 E6 07            and 7
 221+ 97E4 20 0A            jr nz,3F
 222+ 97E6 7D               ld a,l
 223+ 97E7 C6 20            add a,$20
 224+ 97E9 6F               ld l,a
 225+ 97EA 38 04            jr c,3F
 226+ 97EC 7C               ld a,h
 227+ 97ED D6 08            sub 8
 228+ 97EF 67               ld h,a
 229+ 97F0 7C           3 ld a,h
 230+ 97F1 FE 58            cp $58
 231+ 97F3 28 02            jr z,4F
 232+ 97F5 10 C1            djnz 1B
 233+ 97F7 ED 7B 11 8A  4 ld sp,(Stack)
 234+ 97FB C9           	ret
 235+ 97FC
 236+ 97FC ED 73 11 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9800 FD F9        	ld sp,iy
 238+ 9802 06 08            ld b,8
 239+ 9804 D1           1 pop de
 240+ 9805 D1           	pop de
 241+ 9806 7B           	ld a,e
 242+ 9807 AE           	xor (hl)
 243+ 9808 77           	ld (hl),a
 244+ 9809 24            	inc h
 245+ 980A 7C               ld a,h
 246+ 980B E6 07            and 7
 247+ 980D 20 0A            jr nz,2F
 248+ 980F 7D               ld a,l
 249+ 9810 C6 20            add a,$20
 250+ 9812 6F               ld l,a
 251+ 9813 38 04            jr c,2F
 252+ 9815 7C               ld a,h
 253+ 9816 D6 08            sub 8
 254+ 9818 67               ld h,a
 255+ 9819 7C           2 ld a,h
 256+ 981A FE 58            cp $58
 257+ 981C 28 1B            jr z,4F
 258+ 981E D1               pop de
 259+ 981F 7A           	ld a,d
 260+ 9820 AE           	xor (hl)
 261+ 9821 77           	ld (hl),a
 262+ 9822 24           	inc h
 263+ 9823 7C               ld a,h
 264+ 9824 E6 07            and 7
 265+ 9826 20 0A            jr nz,3F
 266+ 9828 7D               ld a,l
 267+ 9829 C6 20            add a,$20
 268+ 982B 6F               ld l,a
 269+ 982C 38 04            jr c,3F
 270+ 982E 7C               ld a,h
 271+ 982F D6 08            sub 8
 272+ 9831 67               ld h,a
 273+ 9832 7C           3 ld a,h
 274+ 9833 FE 58            cp $58
 275+ 9835 28 02            jr z,4F
 276+ 9837 10 CB            djnz 1B
 277+ 9839 ED 7B 11 8A  4 ld sp,(Stack)
 278+ 983D C9           	ret
 279+ 983E
 280+ 983E ED 73 11 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9842 FD F9        	ld sp,iy
 282+ 9844 06 08            ld b,8
 283+ 9846 D1           1 pop de
 284+ 9847 7B           	ld a,e
 285+ 9848 AE           	xor (hl)
 286+ 9849 77           	ld (hl),a
 287+ 984A 23           	inc hl
 288+ 984B 7A           	ld a,d
 289+ 984C AE           	xor (hl)
 290+ 984D 77           	ld (hl),a
 291+ 984E 2B           	dec hl
 292+ 984F 24             	inc h
 293+ 9850 7C               ld a,h
 294+ 9851 E6 07            and 7
 295+ 9853 20 0A            jr nz,2F
 296+ 9855 7D               ld a,l
 297+ 9856 C6 20            add a,$20
 298+ 9858 6F               ld l,a
 299+ 9859 38 04            jr c,2F
 300+ 985B 7C               ld a,h
 301+ 985C D6 08            sub 8
 302+ 985E 67               ld h,a
 303+ 985F 7C           2 ld a,h
 304+ 9860 FE 58            cp $58
 305+ 9862 28 21            jr z,4F
 306+ 9864 D1               pop de
 307+ 9865 7A           	ld a,d
 308+ 9866 AE           	xor (hl)
 309+ 9867 77           	ld (hl),a
 310+ 9868 23           	inc hl
 311+ 9869 D1               pop de
 312+ 986A 7B           	ld a,e
 313+ 986B AE           	xor (hl)
 314+ 986C 77           	ld (hl),a
 315+ 986D 2B           	dec hl
 316+ 986E 24           	inc h
 317+ 986F 7C               ld a,h
 318+ 9870 E6 07            and 7
 319+ 9872 20 0A            jr nz,3F
 320+ 9874 7D               ld a,l
 321+ 9875 C6 20            add a,$20
 322+ 9877 6F               ld l,a
 323+ 9878 38 04            jr c,3F
 324+ 987A 7C               ld a,h
 325+ 987B D6 08            sub 8
 326+ 987D 67               ld h,a
 327+ 987E 7C           3 ld a,h
 328+ 987F FE 58            cp $58
 329+ 9881 28 02            jr z,4F
 330+ 9883 10 C1            djnz 1B
 331+ 9885 ED 7B 11 8A  4 ld sp,(Stack)
 332+ 9889 C9           	ret
 333+ 988A
 334+ 988A ED 73 11 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 988E FD F9        	ld sp,iy
 336+ 9890 06 08            ld b,8
 337+ 9892 D1           1 pop de
 338+ 9893 7B           	ld a,e
 339+ 9894 AE           	xor (hl)
 340+ 9895 77           	ld (hl),a
 341+ 9896 24            	inc h
 342+ 9897 7C               ld a,h
 343+ 9898 E6 07            and 7
 344+ 989A 20 0A            jr nz,2F
 345+ 989C 7D               ld a,l
 346+ 989D C6 20            add a,$20
 347+ 989F 6F               ld l,a
 348+ 98A0 38 04            jr c,2F
 349+ 98A2 7C               ld a,h
 350+ 98A3 D6 08            sub 8
 351+ 98A5 67               ld h,a
 352+ 98A6 7C           2 ld a,h
 353+ 98A7 FE 58            cp $58
 354+ 98A9 28 1C            jr z,4F
 355+ 98AB D1               pop de
 356+ 98AC 7A           	ld a,d
 357+ 98AD AE           	xor (hl)
 358+ 98AE 77           	ld (hl),a
 359+ 98AF 24           	inc h
 360+ 98B0 7C               ld a,h
 361+ 98B1 E6 07            and 7
 362+ 98B3 20 0A            jr nz,3F
 363+ 98B5 7D               ld a,l
 364+ 98B6 C6 20            add a,$20
 365+ 98B8 6F               ld l,a
 366+ 98B9 38 04            jr c,3F
 367+ 98BB 7C               ld a,h
 368+ 98BC D6 08            sub 8
 369+ 98BE 67               ld h,a
 370+ 98BF 7C           3 ld a,h
 371+ 98C0 FE 58            cp $58
 372+ 98C2 28 03            jr z,4F
 373+ 98C4 D1               pop de
 374+ 98C5 10 CB            djnz 1B
 375+ 98C7 ED 7B 11 8A  4 ld sp,(Stack)
 376+ 98CB C9           	ret
 377+ 98CC
 378+ 98CC              ; ---------------------------------------------------
 379+ 98CC              ;
 380+ 98CC              ;   27/02/23
 381+ 98CC              ;
 382+ 98CC              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98CC              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98CC              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98CC
 386+ 98CC ED 73 11 8A  Pinta_Disparo ld (Stack),sp
 387+ 98D0 FD F9            ld sp,iy
 388+ 98D2 06 03            ld b,3
 389+ 98D4 D1           1 pop de
 390+ 98D5 7B               ld a,e
 391+ 98D6 AE               xor (hl)
 392+ 98D7 77               ld (hl),a
 393+ 98D8 23               inc hl
 394+ 98D9 7A               ld a,d
 395+ 98DA AE               xor (hl)
 396+ 98DB 77               ld (hl),a
 397+ 98DC 2B               dec hl
 398+ 98DD
 399+ 98DD 24               inc h
 400+ 98DE 7C               ld a,h
 401+ 98DF E6 07            and 7
 402+ 98E1 20 0A            jr nz,2F
 403+ 98E3 7D               ld a,l
 404+ 98E4 C6 20            add a,$20
 405+ 98E6 6F               ld l,a
 406+ 98E7 38 04            jr c,2F
 407+ 98E9 7C               ld a,h
 408+ 98EA D6 08            sub 8
 409+ 98EC 67               ld h,a
 410+ 98ED 7C           2 ld a,h
 411+ 98EE FE 58            cp $58
 412+ 98F0 28 02            jr z,3F
 413+ 98F2
 414+ 98F2 10 E0            djnz 1B
 415+ 98F4 ED 7B 11 8A  3 ld sp,(Stack)
 416+ 98F8 C9               ret
 417+ 98F9
# file closed: Rutinas_de_impresion_sprites.asm
1271  98F9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98F9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98F9              ;
   3+ 98F9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98F9              ;
   5+ 98F9              ; *****************************************************************************************************************************************************************************************
   6+ 98F9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98F9
   8+ 98F9 7C           calcula_tercio ld a,h
   9+ 98FA E6 18        	and $18
  10+ 98FC CB 2F        	sra a
  11+ 98FE CB 2F        	sra a
  12+ 9900 CB 2F        	sra a
  13+ 9902 C9           	ret
  14+ 9903
# file closed: calcula_tercio.asm
1272  9903              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9903              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9903              ;
   3+ 9903              ;
   4+ 9903              ;	CLS.
   5+ 9903              ;
   6+ 9903              ;	Limpia la pantalla y define sus atributos.
   7+ 9903              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9903              ;
   9+ 9903              ;	COLORES: 0 ..... NEGRO
  10+ 9903              ;    		 1 ..... AZUL
  11+ 9903              ; 			 2 ..... ROJO
  12+ 9903              ;			 3 ..... MAGENTA
  13+ 9903              ; 			 4 ..... VERDE
  14+ 9903              ; 			 5 ..... CIAN
  15+ 9903              ;			 6 ..... AMARILLO
  16+ 9903              ; 			 7 ..... BLANCO
  17+ 9903              ;
  18+ 9903              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9903              ;
  20+ 9903              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9903
  22+ 9903
  23+ 9903 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9906 11 01 40     	LD DE,$4001
  25+ 9909 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 990C 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 990E ED B0        	LDIR
  28+ 9910 01 FF 02     	LD BC,767
  29+ 9913 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9914 ED B0        	LDIR
  31+ 9916 C9           	ret
  32+ 9917
# file closed: Cls.asm
1273  9917              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9917              ; ******************************************************************************************************************************************************************************************
   2+ 9917              ;
   3+ 9917              ;   20/05/23
   4+ 9917              ;
   5+ 9917              ;	Recompone_posicion_inicio
   6+ 9917              ;
   7+ 9917              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9917              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9917              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9917              ;	_ a una u otra rutina.
  11+ 9917
  12+ 9917              Recompone_posicion_inicio
  13+ 9917
  14+ 9917 2A D0 89     	ld hl,(Posicion_inicio)
  15+ 991A 7D           	ld a,l
  16+ 991B E6 1F        	and $1f
  17+ 991D 28 16        	jr z,1F
  18+ 991F
  19+ 991F FE 1F        	cp $1f
  20+ 9921 28 0D        	jr z,3F
  21+ 9923
  22+ 9923 21 FE 89     	ld hl,Ctrl_2
  23+ 9926 CB C6        	set 0,(hl)
  24+ 9928 2A C2 89     	ld hl,(Puntero_objeto)
  25+ 992B 22 01 8A     	ld (Repone_puntero_objeto),hl
  26+ 992E 18 08        	jr 2F
  27+ 9930
  28+ 9930 CD D1 9A     3 call Mov_left
  29+ 9933 18 03        	jr 2F
  30+ 9935
  31+ 9935 CD B3 99     1 call Mov_right
  32+ 9938 21 00 F0     2 ld hl,Sprite_vacio
  33+ 993B 22 C2 89     	ld (Puntero_objeto),hl
  34+ 993E C9           	ret
  35+ 993F
  36+ 993F              ; ******************************************************************************************************************************************************************************************
  37+ 993F              ;
  38+ 993F              ;   27/05/23
  39+ 993F              ;
  40+ 993F              ;	Mov_down
  41+ 993F              ;
  42+ 993F              ; 	Mueve el Sprite X px hacia abajo.
  43+ 993F              ;
  44+ 993F              ;
  45+ 993F              Mov_down
  46+ 993F
  47+ 993F CD A1 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9942              ;																	; _ repone (Puntero_objeto).
  49+ 9942 21 EC 89     	ld hl,Ctrl_0
  50+ 9945 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9947              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9947              ; 																	; _ en el caso de que no lo haya.
  53+ 9947 3A D6 89     	ld a,(Vel_down)
  54+ 994A 47           	ld b,a
  55+ 994B 2A C0 89         ld hl,(Posicion_actual)
  56+ 994E CD F9 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9951 E6 02        	and 2
  58+ 9953 28 0F        	jr z,1F
  59+ 9955
  60+ 9955              ; Nos encontramos en el último tercio de pantalla.
  61+ 9955              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9955
  63+ 9955 7C           	ld a,h
  64+ 9956 FE 57        	cp $57
  65+ 9958 20 0A        	jr nz,1F
  66+ 995A
  67+ 995A 7D           	ld a,l
  68+ 995B C6 20        	add $20
  69+ 995D 30 05        	jr nc,1F
  70+ 995F
  71+ 995F              ; ------------------------------
  72+ 995F              ;	call Reaparece_arriba
  73+ 995F CD 5E 9C     	call Reinicio
  74+ 9962              ; ------------------------------
  75+ 9962
  76+ 9962 18 08        	jr 3F
  77+ 9964 CD 39 96     1 call NextScan
  78+ 9967 22 C0 89     	ld (Posicion_actual),hl
  79+ 996A 10 E2            djnz 2B
  80+ 996C CD 84 9C     3 call Genera_coordenadas
  81+ 996F C9           	ret
  82+ 9970
  83+ 9970              ; ******************************************************************************************************************************************************************************************
  84+ 9970              ;
  85+ 9970              ;   27/05/23
  86+ 9970              ;
  87+ 9970              ;	Mov_up
  88+ 9970              ;
  89+ 9970              ; 	Mueve el Sprite hacia arriba.
  90+ 9970              ;
  91+ 9970              ;
  92+ 9970              Mov_up
  93+ 9970
  94+ 9970 CD A1 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9973              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9973 21 EC 89     	ld hl,Ctrl_0
  97+ 9976 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9978              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9978              ; 																		; _ en el caso de que no lo haya.
 100+ 9978 3A D5 89     	ld a,(Vel_up)
 101+ 997B 47           	ld b,a
 102+ 997C 2A C0 89     	ld hl,(Posicion_actual)
 103+ 997F CD F9 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9982 A7           	and a
 105+ 9983 20 10        	jr nz,1F
 106+ 9985
 107+ 9985              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9985              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9985
 110+ 9985 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9986 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9988 20 0B            jr nz,1F
 113+ 998A 7D               ld a,l
 114+ 998B D6 20            sub $20
 115+ 998D 30 06            jr nc,1F
 116+ 998F 25               dec h
 117+ 9990
 118+ 9990              ; -----------------------------
 119+ 9990 CD 3F 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9993              ;	call Reinicio
 121+ 9993              ; -----------------------------
 122+ 9993
 123+ 9993 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9995 CD 48 96     1 call PreviousScan
 125+ 9998 22 C0 89     	ld (Posicion_actual),hl
 126+ 999B 10 E2            djnz 3B
 127+ 999D CD 84 9C     2 call Genera_coordenadas
 128+ 99A0 C9           	ret
 129+ 99A1
 130+ 99A1              ; -----------------------------
 131+ 99A1              ;
 132+ 99A1              ;	27/5/23
 133+ 99A1              ;
 134+ 99A1              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99A1              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99A1              ;
 137+ 99A1              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99A1              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99A1              ;
 140+ 99A1              ;	Modifica: A y (Puntero_objeto).
 141+ 99A1
 142+ 99A1 3A FE 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99A4 CB 47        	bit 0,a
 144+ 99A6 C8           	ret z
 145+ 99A7 CB 87        	res 0,a
 146+ 99A9 32 FE 89     	ld (Ctrl_2),a
 147+ 99AC 2A 01 8A     	ld hl,(Repone_puntero_objeto)
 148+ 99AF 22 C2 89     	ld (Puntero_objeto),hl
 149+ 99B2 C9           	ret
 150+ 99B3
 151+ 99B3              ; ******************************************************************************************************************************************************************************************
 152+ 99B3              ;
 153+ 99B3              ;	19/10/22
 154+ 99B3              ;
 155+ 99B3              ;	Mov_right.
 156+ 99B3              ;
 157+ 99B3              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99B3              ;
 159+ 99B3
 160+ 99B3 21 EC 89     Mov_right ld hl,Ctrl_0
 161+ 99B6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99B8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99B8              ; 																	; _ en el caso de que no lo haya.
 164+ 99B8 3A EC 89     	ld a,(Ctrl_0)
 165+ 99BB CB 77        	bit 6,a
 166+ 99BD 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99BF
 168+ 99BF CD ED 9B     	call Stop_Amadeus_right
 169+ 99C2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 99C3 18 4D        	jr 8F
 171+ 99C5
 172+ 99C5 3A C4 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 99C8 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 99CA 20 46        	jr nz,8F
 175+ 99CC
 176+ 99CC 3A C6 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 99CF A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 99D0 28 40        	jr z,8F
 179+ 99D2
 180+ 99D2              ; ---------- ---------- ----------
 181+ 99D2              ;
 182+ 99D2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 99D2
 184+ 99D2 3A D4 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 99D5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 99D7 28 11        	jr z,1F
 187+ 99D9 38 06        	jr c,6F
 188+ 99DB FE 04        	cp 4
 189+ 99DD 28 14        	jr z,7F
 190+ 99DF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 99E1
 192+ 99E1              ; ---------- ---------- ----------
 193+ 99E1              ;
 194+ 99E1              ; Perfiles de velocidad
 195+ 99E1              ;
 196+ 99E1
 197+ 99E1 3A C6 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 99E4 FE FE        	cp $fe
 199+ 99E6 20 2A        	jr nz,8F
 200+ 99E8 18 10        	jr 3F
 201+ 99EA 3A C6 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 99ED FE FD        	cp $fd
 203+ 99EF 20 21        	jr nz,8F
 204+ 99F1 18 07        	jr 3F
 205+ 99F3 3A C6 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 99F6 FE FB        	cp $fb
 207+ 99F8 20 18        	jr nz,8F
 208+ 99FA
 209+ 99FA              ; ---------- ---------- ----------
 210+ 99FA
 211+ 99FA              3
 212+ 99FA CD 2D 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 99FD              ;	call Reinicio
 214+ 99FD
 215+ 99FD              ; ---------- ---------- ----------
 216+ 99FD              ;
 217+ 99FD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 99FD
 219+ 99FD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 99FF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A00 CD 19 9A     	call DESPLZ_DER
 222+ 9A03 C1           	pop bc
 223+ 9A04 10 F9        	djnz 5B
 224+ 9A06 2A C0 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A09 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A0A 22 C0 89     	ld (Posicion_actual),hl
 227+ 9A0D CD 84 9C     	call Genera_coordenadas
 228+ 9A10 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A12
 230+ 9A12              ; ---------- ---------- ----------
 231+ 9A12
 232+ 9A12 2A C0 89     8 ld hl,(Posicion_actual)
 233+ 9A15 CD 19 9A     	call DESPLZ_DER
 234+ 9A18 C9           2 ret
 235+ 9A19
 236+ 9A19              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A19              ;
 238+ 9A19              ;	22/9/22
 239+ 9A19              ;
 240+ 9A19
 241+ 9A19 CD 28 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A1C CD 74 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A1F CD 9D 9A         call Ciclo_completo
 244+ 9A22 21 EC 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A25 CB FE        	set 7,(hl)
 246+ 9A27 C9           	ret
 247+ 9A28
 248+ 9A28              ; ******************************************************************************************************************************************************************************************
 249+ 9A28              ;	15/02/23
 250+ 9A28              ;
 251+ 9A28
 252+ 9A28 3A D4 89     Desplaza_derecha ld a,(Vel_right)
 253+ 9A2B 47           	ld b,a
 254+ 9A2C 2A CC 89     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A2F 23           1 inc hl
 256+ 9A30 23           	inc hl
 257+ 9A31 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A33 22 CC 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A36 CD 29 8D     	call Extrae_address
 260+ 9A39 22 C2 89     	ld (Puntero_objeto),hl
 261+ 9A3C
 262+ 9A3C              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A3C
 264+ 9A3C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A3C              ; Cuántos movimientos hemos hecho ??
 266+ 9A3C              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A3C
 268+ 9A3C 2A C8 89     7 ld hl,(Indice_Sprite_der)
 269+ 9A3F EB           	ex de,hl
 270+ 9A40 A7           	and a
 271+ 9A41 ED 52        	sbc hl,de
 272+ 9A43 CB 3D        	srl l
 273+ 9A45 3E 08        6 ld a,8
 274+ 9A47 95           	sub l
 275+ 9A48 30 1E        	jr nc,3F
 276+ 9A4A
 277+ 9A4A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A4A              ; B="0".
 279+ 9A4A
 280+ 9A4A 04           4 inc b
 281+ 9A4B 3C           	inc a
 282+ 9A4C 20 FC        	jr nz,4B
 283+ 9A4E 78           	ld a,b
 284+ 9A4F 08           	ex af,af
 285+ 9A50 2A C8 89     	ld hl,(Indice_Sprite_der)
 286+ 9A53 23           5 inc hl
 287+ 9A54 23           	inc hl
 288+ 9A55 10 FC        	djnz 5B
 289+ 9A57 22 CC 89     	ld (Puntero_DESPLZ_der),hl
 290+ 9A5A CD 29 8D     	call Extrae_address
 291+ 9A5D 22 C2 89     	ld (Puntero_objeto),hl
 292+ 9A60
 293+ 9A60              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A60              ; _(Posicion_actual).
 295+ 9A60
 296+ 9A60 21 C0 89     	ld hl,Posicion_actual
 297+ 9A63 34           	inc (hl)
 298+ 9A64 08               ex af,af
 299+ 9A65 6F           	ld l,a
 300+ 9A66 18 DD        	jr 6B
 301+ 9A68
 302+ 9A68              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9A68
 304+ 9A68 47           3 ld b,a
 305+ 9A69 2A CA 89     	ld hl,(Indice_Sprite_izq)
 306+ 9A6C 23           2 inc hl
 307+ 9A6D 23           	inc hl
 308+ 9A6E 10 FC        	djnz 2B
 309+ 9A70 22 CE 89     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A73 C9           8 ret
 311+ 9A74
 312+ 9A74              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A74              ;
 314+ 9A74              ;	24/7/22
 315+ 9A74              ;
 316+ 9A74              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A74              ;
 318+ 9A74              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A74              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A74              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A74
 322+ 9A74 3A C6 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A77 A7           	and a
 324+ 9A78 20 1F        	jr nz,1F
 325+ 9A7A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A7C 32 C6 89         ld (CTRL_DESPLZ),a
 327+ 9A7F
 328+ 9A7F 21 BF 89     	ld hl,Columns
 329+ 9A82 34           	inc (hl)
 330+ 9A83 3A D2 89     	ld a,(Cuad_objeto)
 331+ 9A86 E6 01        	and 1
 332+ 9A88 28 0F        	jr z,1F
 333+ 9A8A 2A C0 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9A8D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9A8E 22 C0 89     	ld (Posicion_actual),hl
 336+ 9A91 CD 84 9C     	call Genera_coordenadas
 337+ 9A94 CD F9 9B     	call Inc_CTRL_DESPLZ
 338+ 9A97 18 03        	jr 2F
 339+ 9A99 CD F9 9B     1 call Inc_CTRL_DESPLZ
 340+ 9A9C C9           2 ret
 341+ 9A9D
 342+ 9A9D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9A9D              ;
 344+ 9A9D              ;	24/7/22
 345+ 9A9D              ;
 346+ 9A9D              ;	Ciclo_completo.
 347+ 9A9D              ;
 348+ 9A9D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9A9D              ;
 350+ 9A9D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9A9D              ; 	Decrementamos (Columns).
 352+ 9A9D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9A9D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9A9D
 355+ 9A9D
 356+ 9A9D 3A C6 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9AA0 FE FF        	cp $ff
 358+ 9AA2 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AA4 E6 F0        	and $f0
 360+ 9AA6 20 28        	jr nz,3F
 361+ 9AA8
 362+ 9AA8              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AA8
 364+ 9AA8 3A C6 89     	ld a,(CTRL_DESPLZ)
 365+ 9AAB 47           	ld b,a
 366+ 9AAC 3E F8        	ld a,$f8
 367+ 9AAE 80           	add b
 368+ 9AAF 32 C6 89     	ld (CTRL_DESPLZ),a
 369+ 9AB2 18 1C        	jr 3F
 370+ 9AB4 21 BF 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AB7 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AB8 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AB9 32 C6 89     	ld (CTRL_DESPLZ),a
 374+ 9ABC 3A D2 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9ABF E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9AC1 20 0A        	jr nz,2F
 377+ 9AC3 2A C0 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9AC6 23           	inc hl
 379+ 9AC7 22 C0 89     	ld (Posicion_actual),hl
 380+ 9ACA CD 84 9C     	call Genera_coordenadas
 381+ 9ACD
 382+ 9ACD              ; Inicia el puntero de Sprite.
 383+ 9ACD
 384+ 9ACD CD 40 8D     2 call Inicia_puntero_objeto_der
 385+ 9AD0 C9           3 ret
 386+ 9AD1
 387+ 9AD1              ; ******************************************************************************************************************************************************************************************
 388+ 9AD1              ;
 389+ 9AD1              ;	15/02/23
 390+ 9AD1              ;
 391+ 9AD1              ;	Mov_left.
 392+ 9AD1              ;
 393+ 9AD1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9AD1              ;
 395+ 9AD1 21 EC 89     Mov_left ld hl,Ctrl_0
 396+ 9AD4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 397+ 9AD6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 398+ 9AD6              ; 																	; _ en el caso de que no lo haya.
 399+ 9AD6 3A EC 89     	ld a,(Ctrl_0)
 400+ 9AD9 CB 77        	bit 6,a
 401+ 9ADB 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 402+ 9ADD
 403+ 9ADD CD F3 9B     	call Stop_Amadeus_left
 404+ 9AE0 C8           	ret z
 405+ 9AE1 20 4A        	jr nz,8F
 406+ 9AE3
 407+ 9AE3 3A C4 89     11 ld a,(Coordenada_X)
 408+ 9AE6 A7           	and a
 409+ 9AE7 20 44        	jr nz,8F
 410+ 9AE9
 411+ 9AE9 3A C6 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 412+ 9AEC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 413+ 9AED 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 414+ 9AEF
 415+ 9AEF              ; ---------- ---------- ----------
 416+ 9AEF
 417+ 9AEF 3A D3 89     	ld a,(Vel_left)
 418+ 9AF2 FE 02        	cp 2
 419+ 9AF4 28 0F        	jr z,1F
 420+ 9AF6 38 04        	jr c,6F
 421+ 9AF8 FE 04        	cp 4
 422+ 9AFA 28 12        	jr z,7F
 423+ 9AFC
 424+ 9AFC              ; ---------- ---------- ----------
 425+ 9AFC
 426+ 9AFC 3A C6 89     6 ld a,(CTRL_DESPLZ)
 427+ 9AFF FE F8        	cp $f8
 428+ 9B01 20 2A        	jr nz,8F
 429+ 9B03 18 10        	jr 4F
 430+ 9B05 3A C6 89     1 ld a,(CTRL_DESPLZ)
 431+ 9B08 FE F9        	cp $f9
 432+ 9B0A 20 21        	jr nz,8F
 433+ 9B0C 18 07        	jr 4F
 434+ 9B0E 3A C6 89     7 ld a,(CTRL_DESPLZ)
 435+ 9B11 FE FB        	cp $fb
 436+ 9B13 20 18        	jr nz,8F
 437+ 9B15
 438+ 9B15              ; ---------- ---------- ----------
 439+ 9B15
 440+ 9B15              4
 441+ 9B15 CD 1B 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 442+ 9B18              ;	call Reinicio
 443+ 9B18
 444+ 9B18              ; ---------- ---------- ----------
 445+ 9B18
 446+ 9B18 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 447+ 9B1A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 448+ 9B1B
 449+ 9B1B              ;	ld hl,(Indice_Sprite_izq)
 450+ 9B1B              ;	ld (Puntero_DESPLZ_izq),hl
 451+ 9B1B
 452+ 9B1B CD 34 9B     	call DESPLZ_IZQ
 453+ 9B1E C1           	pop bc
 454+ 9B1F 10 F9        	djnz 5B
 455+ 9B21 2A C0 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 456+ 9B24 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 457+ 9B25 22 C0 89     	ld (Posicion_actual),hl
 458+ 9B28 CD 84 9C     	call Genera_coordenadas
 459+ 9B2B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 460+ 9B2D
 461+ 9B2D              ; ---------- ---------- ----------
 462+ 9B2D
 463+ 9B2D              ; Movemos, no hay recolocación.
 464+ 9B2D
 465+ 9B2D 2A C0 89     8 ld hl,(Posicion_actual)
 466+ 9B30 CD 34 9B     	call DESPLZ_IZQ
 467+ 9B33 C9           2 ret
 468+ 9B34
 469+ 9B34              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 470+ 9B34              ;
 471+ 9B34              ;	22/9/22
 472+ 9B34
 473+ 9B34              DESPLZ_IZQ
 474+ 9B34
 475+ 9B34 CD 43 9B     	call Desplaza_izquierda
 476+ 9B37 CD 8F 9B         call modifica_parametros_1er_DESPLZ
 477+ 9B3A CD B7 9B     	call Ciclo_completo_2
 478+ 9B3D 21 EC 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 479+ 9B40 CB BE        	res 7,(hl)
 480+ 9B42 C9           	ret
 481+ 9B43
 482+ 9B43              Desplaza_izquierda
 483+ 9B43
 484+ 9B43 3A D3 89     	ld a,(Vel_left)
 485+ 9B46 47           	ld b,a
 486+ 9B47 2A CE 89     	ld hl,(Puntero_DESPLZ_izq)
 487+ 9B4A 23           1 inc hl
 488+ 9B4B 23           	inc hl
 489+ 9B4C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 490+ 9B4E 22 CE 89     	ld (Puntero_DESPLZ_izq),hl
 491+ 9B51 CD 29 8D     	call Extrae_address
 492+ 9B54 22 C2 89     	ld (Puntero_objeto),hl
 493+ 9B57
 494+ 9B57              ; Modifica (Puntero_DESPLZ_der).
 495+ 9B57
 496+ 9B57              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 497+ 9B57              ; Cuántos movimientos hemos hecho ??
 498+ 9B57              ; DE contiene (Puntero_DESPLZ_izq).
 499+ 9B57
 500+ 9B57 2A CA 89     7 ld hl,(Indice_Sprite_izq)
 501+ 9B5A EB           	ex de,hl
 502+ 9B5B A7           	and a
 503+ 9B5C ED 52        	sbc hl,de
 504+ 9B5E CB 3D        	srl l
 505+ 9B60 3E 08        6 ld a,8
 506+ 9B62 95           	sub l
 507+ 9B63 30 1E        	jr nc,3F
 508+ 9B65
 509+ 9B65              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 510+ 9B65              ; B="0".
 511+ 9B65
 512+ 9B65 04           4 inc b
 513+ 9B66 3C           	inc a
 514+ 9B67 20 FC        	jr nz,4B
 515+ 9B69 78           	ld a,b
 516+ 9B6A 08           	ex af,af
 517+ 9B6B 2A CA 89     	ld hl,(Indice_Sprite_izq)
 518+ 9B6E 23           5 inc hl
 519+ 9B6F 23           	inc hl
 520+ 9B70 10 FC        	djnz 5B
 521+ 9B72 22 CE 89     	ld (Puntero_DESPLZ_izq),hl
 522+ 9B75 CD 29 8D     	call Extrae_address
 523+ 9B78 22 C2 89     	ld (Puntero_objeto),hl
 524+ 9B7B
 525+ 9B7B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 526+ 9B7B              ; _(Posicion_actual).
 527+ 9B7B
 528+ 9B7B 21 C0 89     	ld hl,Posicion_actual
 529+ 9B7E 35           	dec (hl)
 530+ 9B7F 08           	ex af,af
 531+ 9B80 6F           	ld l,a
 532+ 9B81 18 DD        	jr 6B
 533+ 9B83
 534+ 9B83              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 535+ 9B83
 536+ 9B83 47           3 ld b,a
 537+ 9B84 2A C8 89     	ld hl,(Indice_Sprite_der)
 538+ 9B87 23           2 inc hl
 539+ 9B88 23           	inc hl
 540+ 9B89 10 FC        	djnz 2B
 541+ 9B8B 22 CC 89     	ld (Puntero_DESPLZ_der),hl
 542+ 9B8E C9           8 ret
 543+ 9B8F
 544+ 9B8F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 545+ 9B8F              ;
 546+ 9B8F              ;	modifica_parametros_1er_DESPLZ
 547+ 9B8F              ;
 548+ 9B8F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 549+ 9B8F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 550+ 9B8F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 551+ 9B8F
 552+ 9B8F 3A C6 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 553+ 9B92 A7           	and a
 554+ 9B93 20 1E        	jr nz,1F
 555+ 9B95 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 556+ 9B96 32 C6 89         ld (CTRL_DESPLZ),a
 557+ 9B99 21 BF 89     	ld hl,Columns
 558+ 9B9C 34           	inc (hl)
 559+ 9B9D 3A D2 89     	ld a,(Cuad_objeto)
 560+ 9BA0 E6 01        	and 1
 561+ 9BA2 20 0F        	jr nz,1F
 562+ 9BA4 2A C0 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 563+ 9BA7 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 564+ 9BA8 22 C0 89     	ld (Posicion_actual),hl
 565+ 9BAB CD 84 9C     	call Genera_coordenadas
 566+ 9BAE CD 0A 9C     	call Dec_CTRL_DESPLZ
 567+ 9BB1 18 03        	jr 2F
 568+ 9BB3 CD 0A 9C     1 call Dec_CTRL_DESPLZ
 569+ 9BB6 C9           2 ret
 570+ 9BB7
 571+ 9BB7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 572+ 9BB7
 573+ 9BB7 3A C6 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 574+ 9BBA FE F7        	cp $f7
 575+ 9BBC 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 576+ 9BBE 30 2C        	jr nc,3F
 577+ 9BC0
 578+ 9BC0              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 579+ 9BC0
 580+ 9BC0 06 00        	ld b,0
 581+ 9BC2 04           4 inc b
 582+ 9BC3 3C           	inc a
 583+ 9BC4 FE F7        	cp $f7
 584+ 9BC6 20 FA        	jr nz,4B
 585+ 9BC8 3E FF        	ld a,$ff
 586+ 9BCA 90           	sub b
 587+ 9BCB 32 C6 89     	ld (CTRL_DESPLZ),a
 588+ 9BCE 18 1C        	jr 3F
 589+ 9BD0
 590+ 9BD0              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 591+ 9BD0
 592+ 9BD0 21 BF 89     1 ld hl,Columns
 593+ 9BD3 35           	dec (hl)
 594+ 9BD4 AF           	xor a
 595+ 9BD5 32 C6 89     	ld (CTRL_DESPLZ),a
 596+ 9BD8 3A D2 89     	ld a,(Cuad_objeto)
 597+ 9BDB E6 01        	and 1
 598+ 9BDD 28 0A        	jr z,2F
 599+ 9BDF 2A C0 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 600+ 9BE2 2B           	dec hl
 601+ 9BE3 22 C0 89     	ld (Posicion_actual),hl
 602+ 9BE6 CD 84 9C     	call Genera_coordenadas
 603+ 9BE9
 604+ 9BE9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 605+ 9BE9
 606+ 9BE9 CD 53 8D     2 call Inicia_puntero_objeto_izq
 607+ 9BEC C9           3 ret
 608+ 9BED
 609+ 9BED              ; ---------- ---------- ---------- ---------- ---------- ----------
 610+ 9BED              ;
 611+ 9BED              ;	19/10/22
 612+ 9BED              ;
 613+ 9BED              ;	(cp 29) para un Amadeus de 3 Columns.
 614+ 9BED              ;	(cp 30)   ""  ""    ""     2 Columns.
 615+ 9BED
 616+ 9BED 3A C4 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 617+ 9BF0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 618+ 9BF2 C9           	ret
 619+ 9BF3
 620+ 9BF3              ; ---------- ---------- ---------- ---------- ---------- ----------
 621+ 9BF3              ;
 622+ 9BF3              ;	19/10/22
 623+ 9BF3              ;
 624+ 9BF3              ;	(cp 2) para un Amadeus de 3 Columns.
 625+ 9BF3              ;	(cp 1)   ""  ""    ""     2 Columns.
 626+ 9BF3
 627+ 9BF3 3A C4 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 628+ 9BF6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 629+ 9BF8 C9           	ret
 630+ 9BF9
 631+ 9BF9              ; ---------- ---------- ---------- ---------- ---------- ----------
 632+ 9BF9              ;
 633+ 9BF9              ;	24/7/22
 634+ 9BF9              ;
 635+ 9BF9              ;	Inc_CTRL_DESPLZ
 636+ 9BF9              ;
 637+ 9BF9              ;
 638+ 9BF9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 639+ 9BF9
 640+ 9BF9 21 C6 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 641+ 9BFC 3A D4 89     	ld a,(Vel_right)
 642+ 9BFF A7           	and a
 643+ 9C00 28 06        	jr z,1F
 644+ 9C02 47           	ld b,a
 645+ 9C03 34           3 inc (hl)
 646+ 9C04 10 FD        	djnz 3B
 647+ 9C06 18 01        	jr 2F
 648+ 9C08 34           1 inc (hl)
 649+ 9C09 C9           2 ret
 650+ 9C0A
 651+ 9C0A              ; ---------- ---------- ---------- ---------- ---------- ----------
 652+ 9C0A              ;
 653+ 9C0A              ;	5/2/23
 654+ 9C0A              ;
 655+ 9C0A              ;	Dec_CTRL_DESPLZ
 656+ 9C0A              ;
 657+ 9C0A              ;
 658+ 9C0A              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 659+ 9C0A
 660+ 9C0A 21 C6 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 661+ 9C0D 3A D3 89     	ld a,(Vel_left)
 662+ 9C10 A7           	and a
 663+ 9C11 28 06        	jr z,1F
 664+ 9C13 47           	ld b,a
 665+ 9C14 35           3 dec (hl)
 666+ 9C15 10 FD        	djnz 3B
 667+ 9C17 18 01        	jr 2F
 668+ 9C19 35           1 dec (hl)
 669+ 9C1A C9           2 ret
 670+ 9C1B
 671+ 9C1B              ; ---------- ---------- ---------- ---------- ---------- ----------
 672+ 9C1B
 673+ 9C1B 2A C0 89     Reaparece_derecha ld hl,(Posicion_actual)
 674+ 9C1E 01 1F 00     	ld bc,31
 675+ 9C21 A7           	and a
 676+ 9C22 ED 4A        	adc hl,bc
 677+ 9C24 22 C0 89     	ld (Posicion_actual),hl
 678+ 9C27 21 EC 89     	ld hl,Ctrl_0														; $xxx1
 679+ 9C2A CB C6        	set 0,(hl)
 680+ 9C2C C9           	ret
 681+ 9C2D
 682+ 9C2D              ; ---------- ---------- ---------- ---------- ---------- ----------
 683+ 9C2D
 684+ 9C2D 2A C0 89     Reaparece_izquierda ld hl,(Posicion_actual)
 685+ 9C30 01 1F 00     	ld bc,31
 686+ 9C33 A7           	and a
 687+ 9C34 ED 42        	sbc hl,bc
 688+ 9C36 22 C0 89     	ld (Posicion_actual),hl 											; $xx1x
 689+ 9C39 21 EC 89     	ld hl,Ctrl_0
 690+ 9C3C CB CE        	set 1,(hl)
 691+ 9C3E C9           	ret
 692+ 9C3F
 693+ 9C3F              ; ---------- ---------- ---------- ---------- ---------- ----------
 694+ 9C3F
 695+ 9C3F 24           Reaparece_abajo inc h
 696+ 9C40 01 E0 17     	ld bc,$17e0
 697+ 9C43 A7           	and a
 698+ 9C44 ED 4A        	adc hl,bc
 699+ 9C46 22 C0 89     	ld (Posicion_actual),hl
 700+ 9C49 21 EC 89     	ld hl,Ctrl_0
 701+ 9C4C CB D6        	set 2,(hl)
 702+ 9C4E C9           	ret
 703+ 9C4F
 704+ 9C4F              ; ---------- ---------- ---------- ---------- ---------- ----------
 705+ 9C4F
 706+ 9C4F 01 E0 17     Reaparece_arriba ld bc,$17e0
 707+ 9C52 A7           	and a
 708+ 9C53 ED 42        	sbc hl,bc
 709+ 9C55 22 C0 89     	ld (Posicion_actual),hl
 710+ 9C58 21 EC 89     	ld hl,Ctrl_0
 711+ 9C5B CB DE        	set 3,(hl)
 712+ 9C5D C9           	ret
 713+ 9C5E
 714+ 9C5E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 715+ 9C5E              ;
 716+ 9C5E              ;	15/07/23
 717+ 9C5E
 718+ 9C5E              Reinicio
 719+ 9C5E
 720+ 9C5E              ; Vamos a reiniciar los punteros y variables de movimiento.
 721+ 9C5E
 722+ 9C5E AF           	xor a
 723+ 9C5F 21 F3 89     	ld hl,Puntero_indice_mov_bucle
 724+ 9C62 CD 80 9C     	call Limpia_contenido_hl
 725+ 9C65
 726+ 9C65 21 C0 89     	ld hl,Posicion_actual
 727+ 9C68 CD 80 9C     	call Limpia_contenido_hl
 728+ 9C6B
 729+ 9C6B CD 64 9F     	call Inicializa_Puntero_indice_mov
 730+ 9C6E CD F0 9E     	call Inicia_Puntero_mov
 731+ 9C71
 732+ 9C71 21 F5 89     	ld hl,Incrementa_puntero
 733+ 9C74 06 05        	ld b,5
 734+ 9C76 77           1 ld (hl),a
 735+ 9C77 23           	inc hl
 736+ 9C78 10 FC        	djnz 1B
 737+ 9C7A
 738+ 9C7A 21 FE 89     	ld hl,Ctrl_2
 739+ 9C7D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 740+ 9C7F
 741+ 9C7F C9           	ret
 742+ 9C80
 743+ 9C80 77           Limpia_contenido_hl	ld (hl),a
 744+ 9C81 23           	inc hl
 745+ 9C82 77           	ld (hl),a
 746+ 9C83 C9           	ret
 747+ 9C84
 748+ 9C84
# file closed: Direcciones.asm
1274  9C84              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C84              ; ------------------------------------------------------------------------
   2+ 9C84              ;
   3+ 9C84              ;	02/04/23
   4+ 9C84              ;
   5+ 9C84              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C84              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C84              ;
   8+ 9C84              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C84              ;
  10+ 9C84              ;	Modifica: A,BC y DE.
  11+ 9C84
  12+ 9C84 C5           Genera_coordenadas push bc
  13+ 9C85 E5           	push hl
  14+ 9C86 D5           	push de
  15+ 9C87
  16+ 9C87 2A C0 89     	ld hl,(Posicion_actual)
  17+ 9C8A
  18+ 9C8A 7D           	ld a,l
  19+ 9C8B E6 1F        	and $1f
  20+ 9C8D 32 C4 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C90
  22+ 9C90 CD F9 98     	call calcula_tercio
  23+ 9C93 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C94
  25+ 9C94 1E 00        	ld e,0
  26+ 9C96 7D           	ld a,l
  27+ 9C97 E6 E0        	and $e0
  28+ 9C99 28 01        	jr z,1F
  29+ 9C9B 04           	inc b
  30+ 9C9C
  31+ 9C9C 04           1 inc b
  32+ 9C9D 05           	dec b
  33+ 9C9E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CA0              ;														; _ , salimos.
  35+ 9CA0 1C           3 inc e
  36+ 9CA1 D6 20        	sub 32
  37+ 9CA3 20 FB        	jr nz,3B
  38+ 9CA5 10 F5        	djnz 1B
  39+ 9CA7
  40+ 9CA7 7B           2 ld a,e
  41+ 9CA8 32 C5 89     	ld (Coordenada_y),a
  42+ 9CAB
  43+ 9CAB D1           	pop de
  44+ 9CAC E1           	pop hl
  45+ 9CAD C1           	pop bc
  46+ 9CAE
  47+ 9CAE C9           	ret
  48+ 9CAF
  49+ 9CAF              ; ------------------------------------------------------------------------
  50+ 9CAF              ;	28/05/23
  51+ 9CAF              ;
  52+ 9CAF              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CAF              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CAF              ;
  55+ 9CAF              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CAF              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CAF              ;
  58+ 9CAF              ;		DE="$120d"
  59+ 9CAF              ;
  60+ 9CAF              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CAF              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CAF              ;
  63+ 9CAF              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CAF
  65+ 9CAF              ;	Modifica: A,BC y DE.
  66+ 9CAF
  67+ 9CAF
  68+ 9CAF              Genera_coordenadas_disparo
  69+ 9CAF
  70+ 9CAF              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CAF
  72+ 9CAF 7D           	ld a,l
  73+ 9CB0 E6 1F        	and $1f
  74+ 9CB2 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CB3 CD F9 98     	call calcula_tercio
  76+ 9CB6 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CB7 1E 00        	ld e,0
  78+ 9CB9 7D           	ld a,l
  79+ 9CBA E6 E0        	and $e0
  80+ 9CBC 28 01        	jr z,1F
  81+ 9CBE 04           	inc b
  82+ 9CBF 1C           1 inc e
  83+ 9CC0 D6 20        	sub 32
  84+ 9CC2 20 FB        	jr nz,1B
  85+ 9CC4 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CC6 C9           	ret
  87+ 9CC7
# file closed: Genera_coordenadas.asm
1275  9CC7              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CC7
   2+ 9CC7
   3+ 9CC7              ;   07/07/23
   4+ 9CC7              ;
   5+ 9CC7              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CC7              ;
   7+ 9CC7              ;   Codificación:
   8+ 9CC7              ;
   9+ 9CC7              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CC7              ;
  11+ 9CC7              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CC7              ;
  13+ 9CC7              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CC7              ;
  15+ 9CC7              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CC7              ;
  17+ 9CC7              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CC7              ;                               ..... %01000010 Vel_up 4
  19+ 9CC7              ;                                               Vel_down 2
  20+ 9CC7              ;                               ..... $42
  21+ 9CC7              ;
  22+ 9CC7              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CC7              ;
  24+ 9CC7              ;                               ..... %01000010 Vel_left 4
  25+ 9CC7              ;                                               Vel_right 2
  26+ 9CC7              ;                               ..... $42
  27+ 9CC7              ;
  28+ 9CC7              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CC7              ;
  30+ 9CC7              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CC7              ;
  32+ 9CC7              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CC7              ;
  34+ 9CC7              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CC7              ;                                     $53
  36+ 9CC7              ;
  37+ 9CC7              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CC7              ;
  39+ 9CC7              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CC7              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CC7              ;
  42+ 9CC7              ;                       Arriba ..... $81
  43+ 9CC7              ;                       Arriba - izquierda ..... $a1
  44+ 9CC7              ;                       Arriba - derecha ..... $91
  45+ 9CC7              ;
  46+ 9CC7              ;                       Abajo ..... $41
  47+ 9CC7              ;                       Abajo - izquierda ..... $61
  48+ 9CC7              ;                       Abajo - derecha ..... $51
  49+ 9CC7              ;
  50+ 9CC7              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CC7              ;
  52+ 9CC7              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CC7              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CC7              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CC7              ;
  56+ 9CC7              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CC7              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CC7              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CC7              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CC7              ;
  61+ 9CC7              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9CC7              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CC7              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CC7              ;
  65+ 9CC7              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CC7              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CC7              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CC7              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CC7
  70+ 9CC7              ; ----- ----- ----- ----- -----
  71+ 9CC7
  72+ 9CC7 E7 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CC9
  74+ 9CC9 EF 9C            defw F_1
  75+ 9CCB F9 9C            defw F_2
  76+ 9CCD
  77+ 9CCD 03 9D            defw Codo_abajo_derecha
  78+ 9CCF
  79+ 9CCF 37 9D            defw Derecha_y_subiendo
  80+ 9CD1 41 9D            defw Derecha_y_subiendo_1
  81+ 9CD3
  82+ 9CD3 4B 9D            defw F_4
  83+ 9CD5 55 9D            defw F_5
  84+ 9CD7 5F 9D            defw F_6
  85+ 9CD9
  86+ 9CD9 69 9D            defw Derecha_y_bajando
  87+ 9CDB 73 9D            defw Derecha_y_bajando_1
  88+ 9CDD 7D 9D            defw Derecha_y_bajando_2
  89+ 9CDF
  90+ 9CDF 00 00            defw 0
  91+ 9CE1
  92+ 9CE1 87 9D            defw Codo_derecha_abajo
  93+ 9CE3 B7 9D            defw Codo_abajo_izq.
  94+ 9CE5
  95+ 9CE5              ;    defw Izquierda_y_subiendo
  96+ 9CE5              ;    defw Izquierda_y_subiendo_1
  97+ 9CE5
  98+ 9CE5              ;    defw Codo_izquierda_abajo
  99+ 9CE5
 100+ 9CE5 00 00            defw 0                                  ; Fin de patrón de movimiento.
 101+ 9CE7
 102+ 9CE7 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 5rep. vel.4
 103+ 9CEB 11 11 42 00      db $11,$11,$42,0                        ; Abajo. 7rep. vel.2
 104+ 9CEF
 105+ 9CEF 11 11 41 01  F_1 db $11,$11,$41,1
 106+ 9CF3 11 11 01 FD      db $11,$11,$01,253,8,0
 106+ 9CF7 08 00
 107+ 9CF9 11 11 41 01  F_2 db $11,$11,$41,1                          ; Abajo  7rep. --- Termina movimiento.
 108+ 9CFD 11 11 02 FD      db $11,$11,$02,253,15,0
 108+ 9D01 0F 00
 109+ 9D03
 110+ 9D03 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 111+ 9D07 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 112+ 9D0B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 113+ 9D0F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 114+ 9D13 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 115+ 9D17 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 116+ 9D1B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 117+ 9D1F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 118+ 9D23 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 119+ 9D27 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 120+ 9D2B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 121+ 9D2F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 122+ 9D33 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 123+ 9D37
 124+ 9D37 11 12 11 01  Derecha_y_subiendo db $11,$12,$11,1         ; Derecha. 4rep. vel.2
 125+ 9D3B 11 11 91 FD      db $11,$11,$91,253,10,0                 ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 125+ 9D3F 0A 00
 126+ 9D41
 127+ 9D41 11 11 14 01  Derecha_y_subiendo_1 db $11,$11,$14,1       ; Derecha. 4rep. vel.2
 128+ 9D45 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 128+ 9D49 02 00
 129+ 9D4B
 130+ 9D4B 11 11 11 01  F_4 db $11,$11,$11,1
 131+ 9D4F 11 11 01 FD      db $11,$11,$01,253,8,0
 131+ 9D53 08 00
 132+ 9D55 11 11 11 01  F_5 db $11,$11,$11,1
 133+ 9D59 11 11 02 FD      db $11,$11,$02,253,17,0
 133+ 9D5D 11 00
 134+ 9D5F 11 11 11 01  F_6 db $11,$11,$11,1
 135+ 9D63 11 11 01 FD      db $11,$11,$01,253,10,0
 135+ 9D67 0A 00
 136+ 9D69
 137+ 9D69 11 11 14 01  Derecha_y_bajando db $11,$11,$14,1          ; Derecha. 4rep. vel.2
 138+ 9D6D 11 11 51 FD      db $11,$11,$51,253,8,0                      ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 138+ 9D71 08 00
 139+ 9D73
 140+ 9D73 11 12 11 01  Derecha_y_bajando_1 db $11,$12,$11,1        ; Derecha. 4rep. vel.2
 141+ 9D77 11 11 51 FD      db $11,$11,$51,253,6,0
 141+ 9D7B 06 00
 142+ 9D7D
 143+ 9D7D 11 11 14 01  Derecha_y_bajando_2 db $11,$11,$14,1          ; Derecha. 4rep. vel.2
 144+ 9D81 11 11 51 FD      db $11,$11,$51,253,10,0
 144+ 9D85 0A 00
 145+ 9D87
 146+ 9D87
 147+ 9D87
 148+ 9D87
 149+ 9D87              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 150+ 9D87
 151+ 9D87 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 152+ 9D8B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 153+ 9D8F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 154+ 9D93 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 155+ 9D97 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 156+ 9D9B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 157+ 9D9F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 158+ 9DA3 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 159+ 9DA7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 160+ 9DAB 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 161+ 9DAF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 162+ 9DB3 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 163+ 9DB7
 164+ 9DB7 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 165+ 9DBB 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 166+ 9DBF 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 167+ 9DC3 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 168+ 9DC7 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 169+ 9DCB 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 170+ 9DCF 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 171+ 9DD3 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 172+ 9DD7 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 173+ 9DDB 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 174+ 9DDF 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 175+ 9DE3 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 176+ 9DE7 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 177+ 9DEB
 178+ 9DEB 11 21 24 01  Izquierda_y_subiendo db $11,$21,$24,1          ; Izq. 4rep.
 179+ 9DEF 11 11 61 FD      db $11,$11,$61,253,13,0                    ; Arriba/Izq. 1rep. --- Repite Mov 18rep. --- Termina movimiento.
 179+ 9DF3 0D 00
 180+ 9DF5 11 11 2A 01  Izquierda_y_subiendo_1 db $11,$11,$2a,1        ; Izq. 6rep.
 181+ 9DF9 11 11 61 FD      db $11,$11,$61,253,6,0                     ; Arriba/Izq. 1rep. --- Repite Mov 18rep. --- Termina movimiento.
 181+ 9DFD 06 00
 182+ 9DFF
 183+ 9DFF 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 184+ 9E03 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 185+ 9E07 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 186+ 9E0B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 187+ 9E0F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 188+ 9E13 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 189+ 9E17 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 190+ 9E1B 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 191+ 9E1F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 192+ 9E23 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 193+ 9E27 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 194+ 9E2B 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 195+ 9E2F
 196+ 9E2F              ; ----- ----- ----- ----- -----
 197+ 9E2F              ;
 198+ 9E2F              ;   27/06/23
 199+ 9E2F
 200+ 9E2F              Movimiento
 201+ 9E2F
 202+ 9E2F              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 203+ 9E2F
 204+ 9E2F 3A FE 89         ld a,(Ctrl_2)
 205+ 9E32 CB 57            bit 2,a
 206+ 9E34 20 1B            jr nz, Desplazamiento_iniciado
 207+ 9E36
 208+ 9E36 2A F1 89         ld hl,(Puntero_mov)
 209+ 9E39 7E               ld a,(hl)
 210+ 9E3A
 211+ 9E3A              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 212+ 9E3A
 213+ 9E3A              Inicia_desplazamiento.
 214+ 9E3A
 215+ 9E3A              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 216+ 9E3A
 217+ 9E3A CD 23 9F         call Ajusta_velocidad_desplazamiento
 218+ 9E3D
 219+ 9E3D              ; Iniciamos (Repetimos_mov).
 220+ 9E3D
 221+ 9E3D 7E               ld a,(hl)
 222+ 9E3E E6 0F            and $0f
 223+ 9E40 32 F6 89         ld (Repetimos_desplazamiento),a
 224+ 9E43 32 F7 89         ld (Repetimos_desplazamiento_backup),a
 225+ 9E46
 226+ 9E46              ; Iniciamos (Cola_de_desplazamiento).
 227+ 9E46
 228+ 9E46 23               inc hl
 229+ 9E47 7E               ld a,(hl)
 230+ 9E48 32 F9 89         ld (Cola_de_desplazamiento),a
 231+ 9E4B 2B               dec hl
 232+ 9E4C
 233+ 9E4C 21 FE 89         ld hl,Ctrl_2
 234+ 9E4F CB D6            set 2,(hl)
 235+ 9E51
 236+ 9E51              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 237+ 9E51              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 238+ 9E51
 239+ 9E51              Desplazamiento_iniciado
 240+ 9E51
 241+ 9E51 CD FB 9E         call Aplica_desplazamiento
 242+ 9E54
 243+ 9E54 3A FE 89         ld a,(Ctrl_2)
 244+ 9E57 CB 67            bit 4,a
 245+ 9E59 C0               ret nz                              ; Salimos si se ha producido reinicio.
 246+ 9E5A
 247+ 9E5A 21 F6 89     3 ld hl,Repetimos_desplazamiento
 248+ 9E5D 35               dec (hl)
 249+ 9E5E C0               ret nz
 250+ 9E5F
 251+ 9E5F              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 252+ 9E5F              ; Hay que volver a ejecutar este desplazamiento ???.
 253+ 9E5F              ; Analiza (Cola_de_desplazamiento).
 254+ 9E5F
 255+ 9E5F 3A F9 89     Cola ld a,(Cola_de_desplazamiento)
 256+ 9E62 A7               and a
 257+ 9E63 CC 4C 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 258+ 9E66 28 30            jr z,Reinicia_el_movimiento
 259+ 9E68
 260+ 9E68 FE FF            cp $ff
 261+ 9E6A 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 262+ 9E6C
 263+ 9E6C FE FE            cp $fe
 264+ 9E6E CC DB 9E         call z,Fijamos_bucle
 265+ 9E71 28 25            jr z,Reinicia_el_movimiento
 266+ 9E73
 267+ 9E73 FE FD            cp $fd
 268+ 9E75 20 11            jr nz,1F
 269+ 9E77
 270+ 9E77              ; ---
 271+ 9E77              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 272+ 9E77
 273+ 9E77 3A FE 89         ld a,(Ctrl_2)
 274+ 9E7A CB 5F            bit 3,a
 275+ 9E7C 20 1A            jr nz,Reinicia_el_movimiento
 276+ 9E7E
 277+ 9E7E              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 278+ 9E7E
 279+ 9E7E 21 FE 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 280+ 9E81 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 281+ 9E83
 282+ 9E83 CD E5 9E         call Inicia_Repetimos_movimiento
 283+ 9E86 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 284+ 9E88              ; ---
 285+ 9E88
 286+ 9E88 FE 01        1 cp 1
 287+ 9E8A CA C5 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 288+ 9E8D
 289+ 9E8D 3D               dec a
 290+ 9E8E 32 F9 89         ld (Cola_de_desplazamiento),a
 291+ 9E91
 292+ 9E91 3A F7 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 293+ 9E94 32 F6 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 294+ 9E97              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 295+ 9E97 C9               ret
 296+ 9E98
 297+ 9E98              Reinicia_el_movimiento
 298+ 9E98
 299+ 9E98 3A FE 89         ld a,(Ctrl_2)
 300+ 9E9B CB 5F            bit 3,a
 301+ 9E9D 28 1B            jr z,2F
 302+ 9E9F
 303+ 9E9F              ; (Cola_de_desplazamiento)="254".
 304+ 9E9F
 305+ 9E9F 21 F8 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 306+ 9EA2 35               dec (hl)
 307+ 9EA3 20 15            jr nz,2F
 308+ 9EA5
 309+ 9EA5              ; Fin de las repeticiones del último movimiento.
 310+ 9EA5
 311+ 9EA5 21 FE 89         ld hl,Ctrl_2
 312+ 9EA8 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 313+ 9EAA
 314+ 9EAA 2A F1 89         ld hl,(Puntero_mov)
 315+ 9EAD 23               inc hl
 316+ 9EAE 23               inc hl
 317+ 9EAF 23               inc hl
 318+ 9EB0 22 F1 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 319+ 9EB3              ;                                                               ; _ para ejecutar su mandato. :)
 320+ 9EB3 7E               ld a,(hl)
 321+ 9EB4 32 F9 89         ld (Cola_de_desplazamiento),a
 322+ 9EB7
 323+ 9EB7 C3 5F 9E         jp Cola
 324+ 9EBA
 325+ 9EBA
 326+ 9EBA CD F0 9E     2 call Inicia_Puntero_mov
 327+ 9EBD
 328+ 9EBD 21 FE 89         ld hl,Ctrl_2
 329+ 9EC0 CB 96            res 2,(hl)
 330+ 9EC2
 331+ 9EC2 C3 2F 9E         jp Movimiento
 332+ 9EC5
 333+ 9EC5              Siguiente_desplazamiento
 334+ 9EC5
 335+ 9EC5              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 336+ 9EC5              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 337+ 9EC5
 338+ 9EC5 21 FE 89         ld hl,Ctrl_2
 339+ 9EC8 CB 96            res 2,(hl)
 340+ 9ECA
 341+ 9ECA 2A F1 89         ld hl,(Puntero_mov)
 342+ 9ECD 23               inc hl
 343+ 9ECE 23               inc hl
 344+ 9ECF 22 F1 89         ld (Puntero_mov),hl
 345+ 9ED2
 346+ 9ED2 7E               ld a,(hl)
 347+ 9ED3 A7               and a
 348+ 9ED4 CC 4C 9F         call z,Incrementa_Puntero_indice_mov
 349+ 9ED7 CA 98 9E         jp z,Reinicia_el_movimiento
 350+ 9EDA
 351+ 9EDA C9               ret
 352+ 9EDB              ; Subrutinas -----------------------------------------
 353+ 9EDB              ; ---------- --------- --------- ---------- ----------
 354+ 9EDB              ;
 355+ 9EDB              ;   12/07/23
 356+ 9EDB              ;
 357+ 9EDB              ;   Fijamos_bucle
 358+ 9EDB              ;
 359+ 9EDB              ;
 360+ 9EDB
 361+ 9EDB CD 4C 9F     Fijamos_bucle call Incrementa_Puntero_indice_mov
 362+ 9EDE 2A EF 89         ld hl,(Puntero_indice_mov)
 363+ 9EE1 22 F3 89         ld (Puntero_indice_mov_bucle),hl
 364+ 9EE4 C9               ret
 365+ 9EE5
 366+ 9EE5              ; ---------- --------- --------- ---------- ----------
 367+ 9EE5              ;
 368+ 9EE5              ;   07/7/23
 369+ 9EE5              ;
 370+ 9EE5              ;   Inicia_Repetimos_movimiento
 371+ 9EE5              ;
 372+ 9EE5              ;
 373+ 9EE5
 374+ 9EE5              Inicia_Repetimos_movimiento
 375+ 9EE5
 376+ 9EE5              ; Iniciamos (Repetimos_movimiento).
 377+ 9EE5
 378+ 9EE5 DD 2A F1 89      ld ix,(Puntero_mov)
 379+ 9EE9 DD 7E 02         ld a,(ix+2)
 380+ 9EEC 32 F8 89         ld (Repetimos_movimiento),a
 381+ 9EEF
 382+ 9EEF C9               ret
 383+ 9EF0
 384+ 9EF0              ; ---------- --------- --------- ---------- ----------
 385+ 9EF0              ;
 386+ 9EF0              ;   26/6/23
 387+ 9EF0              ;
 388+ 9EF0              ;   Inicia_Puntero_mov
 389+ 9EF0              ;
 390+ 9EF0              ;
 391+ 9EF0
 392+ 9EF0 2A EF 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 393+ 9EF3 5E               ld e,(hl)
 394+ 9EF4 23               inc hl
 395+ 9EF5 56               ld d,(hl)
 396+ 9EF6 EB               ex de,hl
 397+ 9EF7 22 F1 89         ld (Puntero_mov),hl
 398+ 9EFA C9               ret
 399+ 9EFB
 400+ 9EFB              ; ---------- --------- --------- ---------- ----------
 401+ 9EFB              ;
 402+ 9EFB              ;   27/06/23
 403+ 9EFB              ;
 404+ 9EFB              ;   Aplica_movimiento.
 405+ 9EFB
 406+ 9EFB              Aplica_desplazamiento
 407+ 9EFB
 408+ 9EFB              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 409+ 9EFB
 410+ 9EFB 2A F1 89         ld hl, (Puntero_mov)
 411+ 9EFE CB 7E            bit 7,(hl)
 412+ 9F00 28 03            jr z,1F
 413+ 9F02 CD 70 99         call Mov_up
 414+ 9F05 2A F1 89     1 ld hl, (Puntero_mov)
 415+ 9F08 CB 76            bit 6,(hl)
 416+ 9F0A 28 03            jr z,2F
 417+ 9F0C CD 3F 99         call Mov_down
 418+ 9F0F 2A F1 89     2 ld hl, (Puntero_mov)
 419+ 9F12 CB 6E            bit 5,(hl)
 420+ 9F14 28 03            jr z,3F
 421+ 9F16 CD D1 9A         call Mov_left
 422+ 9F19 2A F1 89     3 ld hl, (Puntero_mov)
 423+ 9F1C CB 66            bit 4,(hl)
 424+ 9F1E C8               ret z
 425+ 9F1F CD B3 99         call Mov_right
 426+ 9F22 C9               ret
 427+ 9F23
 428+ 9F23              ; ---------- --------- --------- ---------- ----------
 429+ 9F23              ;
 430+ 9F23              ;   26/06/23
 431+ 9F23              ;
 432+ 9F23              ;   Ajusta_velocidad_desplazamiento.
 433+ 9F23
 434+ 9F23              Ajusta_velocidad_desplazamiento
 435+ 9F23
 436+ 9F23              ; 1er byte de la cadena de movimiento.
 437+ 9F23              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 438+ 9F23
 439+ 9F23 CD 41 9F         call Extrae_nibble_alto
 440+ 9F26
 441+ 9F26 32 D5 89         ld (Vel_up),a
 442+ 9F29 79               ld a,c
 443+ 9F2A E6 0F            and $0f
 444+ 9F2C 32 D6 89         ld (Vel_down),a
 445+ 9F2F
 446+ 9F2F              ; Saltamos al 2º byte de la cadena de movimiento.
 447+ 9F2F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 448+ 9F2F
 449+ 9F2F 23               inc hl
 450+ 9F30 CD 41 9F         call Extrae_nibble_alto
 451+ 9F33
 452+ 9F33 32 D3 89         ld (Vel_left),a
 453+ 9F36 79               ld a,c
 454+ 9F37 E6 0F            and $0f
 455+ 9F39 32 D4 89         ld (Vel_right),a
 456+ 9F3C
 457+ 9F3C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 458+ 9F3C
 459+ 9F3C 23               inc hl
 460+ 9F3D 22 F1 89         ld (Puntero_mov),hl
 461+ 9F40 C9               ret
 462+ 9F41
 463+ 9F41 06 04        Extrae_nibble_alto ld b,4
 464+ 9F43 7E               ld a,(hl)
 465+ 9F44 4F               ld c,a
 466+ 9F45 E6 F0            and $f0
 467+ 9F47 CB 3F        1 srl a
 468+ 9F49 10 FC            djnz 1B
 469+ 9F4B C9               ret
 470+ 9F4C
 471+ 9F4C              ; ---------- --------- --------- ---------- ----------
 472+ 9F4C              ;
 473+ 9F4C              ;   5/7/23
 474+ 9F4C              ;
 475+ 9F4C              ;   Incrementa_Puntero_indice_mov
 476+ 9F4C
 477+ 9F4C              Incrementa_Puntero_indice_mov
 478+ 9F4C
 479+ 9F4C 21 F5 89         ld hl,Incrementa_puntero
 480+ 9F4F 34               inc (hl)
 481+ 9F50
 482+ 9F50 2A EF 89         ld hl,(Puntero_indice_mov)
 483+ 9F53 01 02 00         ld bc,2
 484+ 9F56 A7               and a
 485+ 9F57 09               add hl,bc
 486+ 9F58 22 EF 89         ld (Puntero_indice_mov),hl
 487+ 9F5B
 488+ 9F5B 7E               ld a,(hl)
 489+ 9F5C A7               and a
 490+ 9F5D
 491+ 9F5D              ;! STOP. Fin del patrón de movimiento de la entidad.
 492+ 9F5D
 493+ 9F5D 28 FE            jr z,$
 494+ 9F5F
 495+ 9F5F              ;! Reinicia el Patrón de movimiento.
 496+ 9F5F
 497+ 9F5F CC 64 9F         call z,Inicializa_Puntero_indice_mov
 498+ 9F62
 499+ 9F62 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 500+ 9F63
 501+ 9F63 C9               ret
 502+ 9F64
 503+ 9F64
 504+ 9F64              ; ---------- --------- --------- ---------- ----------
 505+ 9F64              ;
 506+ 9F64              ;   12/07/23
 507+ 9F64              ;
 508+ 9F64              ;   Inicializa_Puntero_indice_mov
 509+ 9F64
 510+ 9F64              Inicializa_Puntero_indice_mov
 511+ 9F64
 512+ 9F64              ; Existe etiqueta de bucle principal???
 513+ 9F64
 514+ 9F64              ;    jr $
 515+ 9F64
 516+ 9F64              ;    ld hl,Ctrl_2
 517+ 9F64              ;    res 4,(hl)
 518+ 9F64
 519+ 9F64 2A F3 89         ld hl,(Puntero_indice_mov_bucle)
 520+ 9F67 24               inc h
 521+ 9F68 25               dec h
 522+ 9F69 28 05            jr z,2F
 523+ 9F6B
 524+ 9F6B 22 EF 89         ld (Puntero_indice_mov),hl
 525+ 9F6E 18 0F            jr 3F
 526+ 9F70
 527+ 9F70
 528+ 9F70
 529+ 9F70              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 530+ 9F70
 531+ 9F70 3A F5 89     2 ld a,(Incrementa_puntero)
 532+ 9F73 3C               inc a
 533+ 9F74 47               ld b,a
 534+ 9F75
 535+ 9F75 2A EF 89         ld hl,(Puntero_indice_mov)
 536+ 9F78 2B           1 dec hl
 537+ 9F79 2B               dec hl
 538+ 9F7A 10 FC            djnz 1B
 539+ 9F7C
 540+ 9F7C 22 EF 89         ld (Puntero_indice_mov),hl
 541+ 9F7F
 542+ 9F7F AF           3 xor a
 543+ 9F80 32 F5 89         ld (Incrementa_puntero),a
 544+ 9F83
 545+ 9F83 C9               ret
 546+ 9F84
 547+ 9F84
 548+ 9F84
# file closed: Patrones_de_mov.asm
1276  9F84              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9F84              ; Relojes y temporizaciones.
   2+ 9F84
   3+ 9F84              ; ------------------------------------------------------
   4+ 9F84              ;
   5+ 9F84              ;	16/7/23
   6+ 9F84              ;
   7+ 9F84              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9F84              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9F84              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9F84              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9F84              ;
  12+ 9F84              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9F84              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9F84
  15+ 9F84              ; Disparo_entidad db 1
  16+ 9F84              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9F84              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9F84
  19+ 9F84              Habilita_disparos
  20+ 9F84
  21+ 9F84 7E           	ld a,(hl)
  22+ 9F85 A7           	and a
  23+ 9F86 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9F87
  25+ 9F87 EB           	ex de,hl
  26+ 9F88
  27+ 9F88 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9F89 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9F8A
  30+ 9F8A              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9F8A
  32+ 9F8A 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9F8B 7E           	ld a,(hl)
  34+ 9F8C 23           	inc hl
  35+ 9F8D 77           	ld (hl),a
  36+ 9F8E
  37+ 9F8E EB           	ex de,hl						; Habilitamos disparo.
  38+ 9F8F 3E 01        	ld a,1
  39+ 9F91 77           	ld (hl),a
  40+ 9F92 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1277  9F93              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F93              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F93              ;
   3+ 9F93              ;	3/1/23
   4+ 9F93              ;
   5+ 9F93              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F93
   7+ 9F93              ;	ADC HL,SP	LD (addr),SP
   8+ 9F93              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F93              ;	ADD IX,SP	LD SP,nn
  10+ 9F93              ; 	ADD IY,SP	LD SP,HL
  11+ 9F93              ;				LD SP,IX
  12+ 9F93              ;	DEC SP		LD SP,IY
  13+ 9F93
  14+ 9F93              ;	EX (SP),HL
  15+ 9F93              ;	EX (SP),IX
  16+ 9F93              ;	EX (SP),IY
  17+ 9F93
  18+ 9F93              ;	INC SP
  19+ 9F93
  20+ 9F93
  21+ 9F93                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 11 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 00 8A         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 17 8A         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 15 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 17 8A         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 15 8A     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 11 8A  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1278  7FD5
1279  7FD5              	SAVESNA "Pruebas.sna", START
1280  7FD5
1281  7FD5
1282  7FD5
1283  7FD5
# file closed: Banco_de_pruebas.asm
