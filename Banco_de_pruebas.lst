# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											 ; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 49 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000              ;
 11+  8000              ; Constan de 2Columns y 2scanlines.
 12+  8000
 13+  8000 08 80        Indice_disparo defw Disparo_0
 14+  8002 0C 80        	defw Disparo_f9
 15+  8004 10 80        	defw Disparo_fb
 16+  8006 18 80        	defw Disparo_fd
 17+  8008
 18+  8008              ; Disparo (CTRL_DESPLZ)="0".
 19+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 20+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 21+  800C 60 00 60 00  Disparo_f9 DEFB $60,$00,$60,$00
 22+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 23+  8010 18 00 00 00  Disparo_fb DEFW $18,$00,$18,$00
 23+  8014 18 00 00 00
 24+  8018              ; Disparo (CTRL_DESPLZ)="fd"
 25+  8018 06 00 00 00  Disparo_fd DEFW $06,$00,$06,$00
 25+  801C 06 00 00 00
 26+  8020
 27+  8020              ; ----------------------------------------------------------------------------------------
 28+  8020
 29+  8020              ; Badsat_izq. 2x2.
 30+  8020
 31+  8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
 32+  8022 70 81        	defw Badsat_izq_fe
 33+  8024 40 81        	defw Badsat_izq_fd
 34+  8026 10 81        	defw Badsat_izq_fc
 35+  8028 E0 80        	defw Badsat_izq_fb
 36+  802A B0 80        	defw Badsat_izq_fa
 37+  802C 80 80        	defw Badsat_izq_f9
 38+  802E 50 80        	defw Badsat_izq_f8
 39+  8030
 40+  8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 40+  8034 02 2A 02 55
 41+  8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 41+  803C 7F E8 03 60
 42+  8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 42+  8044 2B E8 54 40
 43+  8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 43+  804C 28 00 10 00
 44+  8050
 45+  8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 45+  8054 0A 00 01 15
 46+  8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 46+  805C 01 55 00 01
 47+  8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 47+  8064 00 01 B0 00
 48+  8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 48+  806C FC 00 15 F4
 49+  8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 49+  8074 55 30 00 2A
 50+  8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 50+  807C 00 08 00 00
 51+  8080
 52+  8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 52+  8084 85 00 00 8A
 53+  8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 53+  808C 00 AA 80 00
 54+  8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 54+  8094 00 00 D8 00
 55+  8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 55+  809C FE 00 0A FA
 56+  80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 56+  80A4 2A 98 00 15
 57+  80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 57+  80AC 00 04 00 00
 58+  80B0
 59+  80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 59+  80B4 42 80 00 45
 60+  80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 60+  80BC 00 55 40 00
 61+  80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 61+  80C4 00 00 6C 00
 62+  80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 62+  80CC FF 00 05 7D
 63+  80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 63+  80D4 15 4C 00 0A
 64+  80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 64+  80DC 00 02 00 00
 65+  80E0
 66+  80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 66+  80E4 21 40 00 22
 67+  80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 67+  80EC 00 2A A0 00
 68+  80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 68+  80F4 80 00 36 00
 69+  80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 69+  80FC 7F 80 02 BE
 70+  8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 70+  8104 0A A6 00 05
 71+  8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 71+  810C 00 01 00 00
 72+  8110
 73+  8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 73+  8114 10 A0 00 11
 74+  8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 74+  811C 00 15 50 00
 75+  8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 75+  8124 40 00 1B 00
 76+  8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 76+  812C BF C0 01 5F
 77+  8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 77+  8134 05 53 00 02
 78+  8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 78+  813C 00 00 80 00
 79+  8140
 80+  8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 80+  8144 08 50 00 08
 81+  8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 81+  814C 00 0A A8 00
 82+  8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 82+  8154 A0 00 0D 80
 83+  8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 83+  815C 5F F8 00 AF
 84+  8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 84+  8164 02 A9 00 01
 85+  8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 85+  816C 00 00 40 00
 86+  8170
 87+  8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 87+  8174 04 28 00 04
 88+  8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 88+  817C 00 05 54 00
 89+  8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 89+  8184 D0 00 06 C0
 90+  8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 90+  818C 2F FC 00 57
 91+  8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 91+  8194 01 54 80 00
 92+  8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 92+  819C 00 00 20 00
 93+  81A0
 94+  81A0
 95+  81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
 96+  81A2 D0 81        	defw Badsat_der_f8
 97+  81A4 00 82        	defw Badsat_der_f9
 98+  81A6 30 82        	defw Badsat_der_fa
 99+  81A8 60 82        	defw Badsat_der_fb
100+  81AA 90 82        	defw Badsat_der_fc
101+  81AC C0 82        	defw Badsat_der_fd
102+  81AE F0 82        	defw Badsat_der_fe
103+  81B0
104+  81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
104+  81B4 54 40 AA 40
105+  81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
105+  81BC 17 FE 06 C0
106+  81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
106+  81C4 17 D4 02 2A
107+  81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
107+  81CC 00 14 00 08
108+  81D0
109+  81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
109+  81D4 20 00 2A 20
110+  81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
110+  81DC 2A A0 00 15
111+  81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
111+  81E4 00 03 60 00
112+  81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
112+  81EC F4 00 0B EA
113+  81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
113+  81F4 03 2A 80 00
114+  81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
114+  81FC 00 00 04 00
115+  8200
116+  8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
116+  8204 10 00 15 10
117+  8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
117+  820C 15 50 00 0A
118+  8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
118+  8214 80 01 B0 00
119+  8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
119+  821C FA 00 05 F5
120+  8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
120+  8224 01 95 40 00
121+  8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
121+  822C 00 00 02 00
122+  8230
123+  8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
123+  8234 08 00 0A 88
124+  8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
124+  823C 0A A8 00 05
125+  8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
125+  8244 C0 00 D8 00
126+  8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
126+  824C FD 00 02 FA
127+  8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
127+  8254 00 CA A0 00
128+  8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
128+  825C 80 00 01 00
129+  8260
130+  8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
130+  8264 84 00 05 44
131+  8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
131+  826C 05 54 00 02
132+  8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
132+  8274 E0 00 6C 00
133+  8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
133+  827C FE 80 01 7D
134+  8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
134+  8284 00 65 50 00
135+  8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
135+  828C 40 00 00 80
136+  8290
137+  8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
137+  8294 42 00 02 A2
138+  8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
138+  829C 02 AA 00 01
139+  82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
139+  82A4 F0 00 36 00
140+  82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
140+  82AC FF 40 00 BE
141+  82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
141+  82B4 00 32 A8 00
142+  82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
142+  82BC A0 00 00 40
143+  82C0
144+  82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
144+  82C4 A1 00 01 51
145+  82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
145+  82CC 01 55 00 00
146+  82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
146+  82D4 F8 00 1B 00
147+  82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
147+  82DC FF A0 00 1F
148+  82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
148+  82E4 00 09 54 00
149+  82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
149+  82EC 50 00 00 20
150+  82F0
151+  82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
151+  82F4 50 80 00 A8
152+  82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
152+  82FC 00 AA 80 00
153+  8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
153+  8304 FC 00 0D 80
154+  8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
154+  830C FF D0 00 0F
155+  8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
155+  8314 00 04 AA 00
156+  8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
156+  831C 28 00 00 10
157+  8320
158+  8320              ; ----------------------------------------------------------------------------------------
159+  8320
160+  8320              ; Amadeus. 2x2.
161+  8320
162+  8320 40 83        Indice_Amadeus_der defw Amadeus
163+  8322 00 00        	defw 0
164+  8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
165+  8326 00 00        	defw 0
166+  8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
167+  832A 00 00        	defw 0
168+  832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
169+  832E 00 00        	defw 0	 								; (Fín de índice).
170+  8330
171+  8330 40 83        Indice_Amadeus_izq defw Amadeus
172+  8332 00 00        	defw 0
173+  8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
174+  8336 00 00        	defw 0
175+  8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
176+  833A 00 00        	defw 0
177+  833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
178+  833E 00 00        	defw 0	 								; (Fín de índice).
179+  8340
180+  8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
180+  8344 26 64 24 24
181+  8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
181+  834C 6F F6 67 E6
182+  8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
182+  8354 F7 EF FF FF
183+  8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
183+  835C 8B D1 71 8E
184+  8360
185+  8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
185+  8364 F1 00 09 99
186+  8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
186+  836C 0B 0D 00 1B
187+  8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
187+  8374 80 19 F9 80
188+  8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
188+  837C F3 C0 3D FB
189+  8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
189+  8384 3E F7 C0 3E
190+  8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
190+  838C 40 1C 63 80
191+  8390
192+  8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
192+  8394 3C 40 02 66
193+  8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
193+  839C 02 C3 40 06
194+  83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
194+  83A4 60 06 7E 60
195+  83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
195+  83AC 3C F0 0F 7E
196+  83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
196+  83B4 0F BD F0 0F
197+  83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
197+  83BC 10 07 18 E0
198+  83C0
199+  83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
199+  83C4 8F 10 00 99
200+  83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
200+  83CC 00 B0 D0 01
201+  83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
201+  83D4 D8 01 9F 98
202+  83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
202+  83DC CF 3C 03 DF
203+  83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
203+  83E4 03 EF 7C 03
204+  83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
204+  83EC 44 01 C6 38
205+  83F0
206+  83F0              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83F0              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83F0
  2+  83F0              ; Base de datos de entidades e Índice.
  3+  83F0              ;
  4+  83F0              ; 17/02/23
  5+  83F0
  6+  83F0              ; Control. %00000001 00000001
  7+  83F0              ;
  8+  83F0              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83F0              ;                  _ hacen las entidades hacia abajo.
 10+  83F0              ;
 11+  83F0              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83F0
 13+  83F0 F6 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83F2 FE 83        	defw Disparo_2A
 15+  83F4 06 84        	defw Disparo_3A
 16+  83F6
 17+  83F6 00 00        Disparo_1A defw 0									; Control.
 18+  83F8 00 00        	defw 0											; Puntero objeto.
 19+  83FA 00 00        	defw 0											; Puntero de impresión.
 20+  83FC 00 00        	defw 0											; Rutina de impresión.
 21+  83FE
 22+  83FE 00 00        Disparo_2A defw 0									; Control.
 23+  8400 00 00        	defw 0											; Puntero objeto.
 24+  8402 00 00        	defw 0											; Puntero de impresión.
 25+  8404 00 00        	defw 0											; Rutina de impresión.
 26+  8406
 27+  8406 00 00        Disparo_3A defw 0
 28+  8408
 29+  8408 1E 84        Indice_de_disparos_entidades defw Disparo_1
 30+  840A 26 84        	defw Disparo_2
 31+  840C 2E 84        	defw Disparo_3
 32+  840E 36 84        	defw Disparo_4
 33+  8410 3E 84        	defw Disparo_5
 34+  8412 46 84        	defw Disparo_6
 35+  8414 4E 84        	defw Disparo_7
 36+  8416 56 84        	defw Disparo_8
 37+  8418 5E 84        	defw Disparo_9
 38+  841A 66 84        	defw Disparo_10
 39+  841C 6E 84        	defw Disparo_11
 40+  841E
 41+  841E 00 00        Disparo_1 defw 0									; Control.
 42+  8420 00 00        	defw 0											; Puntero objeto.
 43+  8422 00 00        	defw 0											; Puntero de impresión.
 44+  8424 00 00        	defw 0											; Rutina de impresión.
 45+  8426
 46+  8426 00 00        Disparo_2 defw 0									; Control.
 47+  8428 00 00        	defw 0											; Puntero objeto.
 48+  842A 00 00        	defw 0											; Puntero de impresión.
 49+  842C 00 00        	defw 0											; Rutina de impresión.
 50+  842E
 51+  842E 00 00        Disparo_3 defw 0									; Control.
 52+  8430 00 00        	defw 0											; Puntero objeto.
 53+  8432 00 00        	defw 0											; Puntero de impresión.
 54+  8434 00 00        	defw 0											; Rutina de impresión.
 55+  8436
 56+  8436 00 00        Disparo_4 defw 0									; Control.
 57+  8438 00 00        	defw 0											; Puntero objeto.
 58+  843A 00 00        	defw 0											; Puntero de impresión.
 59+  843C 00 00        	defw 0											; Rutina de impresión.
 60+  843E
 61+  843E 00 00        Disparo_5 defw 0									; Control.
 62+  8440 00 00        	defw 0											; Puntero objeto.
 63+  8442 00 00        	defw 0											; Puntero de impresión.
 64+  8444 00 00        	defw 0
 65+  8446
 66+  8446 00 00        Disparo_6 defw 0									; Control.
 67+  8448 00 00        	defw 0											; Puntero objeto.
 68+  844A 00 00        	defw 0											; Puntero de impresión.
 69+  844C 00 00        	defw 0											; Rutina de impresión.
 70+  844E
 71+  844E 00 00        Disparo_7 defw 0									; Control.
 72+  8450 00 00        	defw 0											; Puntero objeto.
 73+  8452 00 00        	defw 0											; Puntero de impresión.
 74+  8454 00 00        	defw 0											; Rutina de impresión.
 75+  8456
 76+  8456 00 00        Disparo_8 defw 0									; Control.
 77+  8458 00 00        	defw 0											; Puntero objeto.
 78+  845A 00 00        	defw 0											; Puntero de impresión.
 79+  845C 00 00        	defw 0											; Rutina de impresión.
 80+  845E
 81+  845E 00 00        Disparo_9 defw 0									; Control.
 82+  8460 00 00        	defw 0											; Puntero objeto.
 83+  8462 00 00        	defw 0											; Puntero de impresión.
 84+  8464 00 00        	defw 0											; Rutina de impresión.
 85+  8466
 86+  8466 00 00        Disparo_10 defw 0									; Control.
 87+  8468 00 00        	defw 0											; Puntero objeto.
 88+  846A 00 00        	defw 0											; Puntero de impresión.
 89+  846C 00 00        	defw 0											; Rutina de impresión.
 90+  846E
 91+  846E 00 00        Disparo_11 defw 0
 92+  8470
 93+  8470              ; -------------------------------------------------------------------------------------
 94+  8470
 95+  8470              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8470
 97+  8470 B6 84        	defw Entidad_1
 98+  8472 F0 84        	defw Entidad_2
 99+  8474 2A 85        	defw Entidad_3
100+  8476 64 85        	defw Entidad_4
101+  8478              ;	...
102+  8478              ;	...
103+  8478              ;	+ entidades ...
104+  8478
105+  8478 00 00        	defw 0
106+  847A 00 00        	defw 0
107+  847C
108+  847C              ; ---------- ---------- ---------- ---------- ----------
109+  847C
110+  847C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  847E 00 00        	defw 0		 									; (Posicion_actual).
112+  8480 00 00        	defw 0	 										; (Puntero_objeto).
113+  8482 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  8485
115+  8485 05           	db %00000101									; (Attr).
116+  8486
117+  8486 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8488 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  848A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  848C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  848E
122+  848E D0 50        	defw $50d0										; (Posicion_inicio).
123+  8490 04           	db 4 											; (Cuad_objeto).
124+  8491
125+  8491 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  8495
127+  8495 00 00        	db 0,0											; Variables_de_borrado
128+  8497 00 00        	defw 0											;	" " " " " " "
129+  8499 00 00        	defw 0											;	" " " " " " "
130+  849B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  849F
132+  849F 00 00        	db 0,0											; Variables_de_pintado
133+  84A1 00 00        	defw 0											;	" " " " " " "
134+  84A3 00 00        	defw 0											;	" " " " " " "
135+  84A5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A9
137+  84A9 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
138+  84AB
139+  84AB 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84AF 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84B2
142+  84B2 00           	db 0 											; (Columnas).
143+  84B3 00 00        	defw 0											; (Limite_horizontal).
144+  84B5 00           	db 0											; (Limite_vertical).
145+  84B6
146+  84B6              ; ---------- ---------- ---------- ---------- ----------
147+  84B6
148+  84B6 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B8 00 00        	defw 0											; (Posicion_actual).
150+  84BA 00 00        	defw 0 											; (Puntero_objeto).
151+  84BC 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84BF
153+  84BF 00           	db %00000000 									; (Attr).
154+  84C0
155+  84C0 00 00        	defw 0											; (Indice_Sprite_der).
156+  84C2 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84C4 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84C6 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C8
160+  84C8 00 00        	defw 0											; (Posicion_inicio).
161+  84CA 00           	db 0											; (Cuad_objeto).
162+  84CB
163+  84CB 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84CF
165+  84CF 00 00        	db 0,0										    ; Variables_de_borrado
166+  84D1 00 00        	defw 0											;	" " " " " " "
167+  84D3 00 00        	defw 0											;	" " " " " " "
168+  84D5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D9
170+  84D9 00 00        	db 0,0											; Variables_de_pintado
171+  84DB 00 00        	defw 0											;	" " " " " " "
172+  84DD 00 00        	defw 0											;	" " " " " " "
173+  84DF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84E3
175+  84E3 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84E5
177+  84E5 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E9 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84EC
180+  84EC 00           	db 0 											; (Columnas).
181+  84ED 00 00        	defw 0											; (Limite_horizontal).
182+  84EF 00           	db 0											; (Limite_vertical).
183+  84F0
184+  84F0              ; ---------- ---------- ---------- ---------- ----------
185+  84F0
186+  84F0 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84F2 00 00        	defw 0                                          ; (Posicion_actual).
188+  84F4 00 00        	defw 0											; (Puntero_objeto).
189+  84F6 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F9
191+  84F9 02           	db %00000010									; (Attr).
192+  84FA
193+  84FA A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84FC 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84FE 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  8500 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  8502
198+  8502 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  8504 02           	db 2											; (Cuad_objeto).
200+  8505
201+  8505 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8509
203+  8509 00 00        	db 0,0											; Variables_de_borrado
204+  850B 00 00        	defw 0										 	;	" " " " " " "
205+  850D 00 00        	defw 0											;	" " " " " " "
206+  850F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  8513
208+  8513 00 00        	db 0,0											; Variables_de_pintado
209+  8515 00 00        	defw 0											;	" " " " " " "
210+  8517 00 00        	defw 0											;	" " " " " " "
211+  8519 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  851D
213+  851D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  851F
215+  851F 7E 93 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  8523 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  8526
218+  8526 00           	db 0 											; (Columnas).
219+  8527 00 00        	defw 0											; (Limite_horizontal).
220+  8529 00           	db 0											; (Limite_vertical).
221+  852A
222+  852A              ; ---------- ---------- ---------- ---------- ----------
223+  852A
224+  852A 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  852C 00 00        	defw 0                                          ; (Posicion_actual).
226+  852E 00 00        	defw 0											; (Puntero_objeto).
227+  8530 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  8533
229+  8533 04           	db %00000100									; (Attr).
230+  8534
231+  8534 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  8536 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  8538
234+  8538 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  853A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  853C
237+  853C A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  853E 01           	db 1											; (Cuad_objeto).
239+  853F
240+  853F 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  8543
242+  8543 00 00        	db 0,0											; Variables_de_borrado
243+  8545 00 00        	defw 0										 	;	" " " " " " "
244+  8547 00 00        	defw 0											;	" " " " " " "
245+  8549 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  854D
247+  854D 00 00        	db 0,0											; Variables_de_pintado
248+  854F 00 00        	defw 0											;	" " " " " " "
249+  8551 00 00        	defw 0											;	" " " " " " "
250+  8553 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  8557
252+  8557 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8559
254+  8559 80 93 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  855D 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8560
257+  8560 00           	db 0 											; (Columnas).
258+  8561 00 00        	defw 0											; (Limite_horizontal).
259+  8563 00           	db 0											; (Limite_vertical).
260+  8564
261+  8564              ; ---------- ---------- ---------- ---------- ----------
262+  8564
263+  8564 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  8566 00 00        	defw 0                                          ; (Posicion_actual).
265+  8568 00 00        	defw 0 											; (Puntero_objeto).
266+  856A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  856D
268+  856D 01           	db %00000001									; (Attr).
269+  856E
270+  856E A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8570 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  8572
273+  8572 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  8574 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  8576
276+  8576 BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8578 00           	db 0											; (Cuad_objeto).
278+  8579
279+  8579 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  857D
281+  857D 00 00        	db 0,0											; Variables_de_borrado
282+  857F 00 00        	defw 0										 	;	" " " " " " "
283+  8581 00 00        	defw 0											;	" " " " " " "
284+  8583 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  8587
286+  8587 00 00        	db 0,0											; Variables_de_pintado
287+  8589 00 00        	defw 0											;	" " " " " " "
288+  858B 00 00        	defw 0											;	" " " " " " "
289+  858D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8591
291+  8591 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  8593
293+  8593 70 93 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  8597 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  859A
296+  859A 00           	db 0 											; (Columnas).
297+  859B 00 00        	defw 0											; (Limite_horizontal).
298+  859D 00           	db 0											; (Limite_vertical).
299+  859E
# file closed: Entidades_y_disparos.asm
 21   859E
 22   859E              ; ******************************************************************************************************************************************************************************************
 23   859E              ; Constantes.
 24   859E              ; ******************************************************************************************************************************************************************************************
 25   859E              ;
 26   859E              ; 8/11/22
 27   859E              ;
 28   859E              ; Constantes generales.
 29   859E              ;
 30   859E
 31   859E              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   859E              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   859E              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   859E              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   859E
 36   859E              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   859E              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   859E              ;                               				        ; De momento situamos este almacén en $7000.
 39   859E              Album_de_fotos_disparos equ $7050						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   859E              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   859E              ;                               				        ; De momento situamos este almacén en $7060.
 42   859E
 43   859E              ; ******************************************************************************************************************************************************************************************
 44   859E              ; Variables.
 45   859E              ; ******************************************************************************************************************************************************************************************
 46   859E              ;
 47   859E              ; 10/11/22
 48   859E              ;
 49   859E              ; Variables de DRAW. (Motor principal).
 50   859E              ;
 51   859E              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   859E
 53   859E 02           Filas db 2												; Filas. [DRAW]
 54   859F 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   85A0 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   85A2 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   85A4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   85A5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   85A6
 60   85A6              ; ---------- ---------- ---------- ---------;      ;---------
 61   85A6
 62   85A6 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   85A7              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   85A7              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   85A7 04           Attr db %00000100										; Atributos de la entidad:
 66   85A8
 67   85A8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A8              ;
 69   85A8              ;	COLORES: 0 ..... NEGRO
 70   85A8              ;    		 1 ..... AZUL
 71   85A8              ; 			 2 ..... ROJO
 72   85A8              ;			 3 ..... MAGENTA
 73   85A8              ; 			 4 ..... VERDE
 74   85A8              ; 			 5 ..... CIAN
 75   85A8              ;			 6 ..... AMARILLO
 76   85A8              ; 			 7 ..... BLANCO
 77   85A8
 78   85A8 A0 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85AA 20 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85AC 00 00        Puntero_DESPLZ_der defw 0
 81   85AE 00 00        Puntero_DESPLZ_izq defw 0
 82   85B0
 83   85B0 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85B2 02           Cuad_objeto db 2			 							; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85B3
 86   85B3              ; Variables de objeto. (Características).
 87   85B3
 88   85B3 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85B4 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85B5 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85B6 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85B7
 93   85B7 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85BB 00 00        	defw 0
 96   85BD 00 00 00 00  	db 0,0,0,0
 97   85C1
 98   85C1 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85C3 00 00        	defw 0
100   85C5 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85C7 00 00 00 00  	db 0,0,0,0
102   85CB
103   85CB              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85CB
105   85CB 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85CC              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85CC              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85CC              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85CC              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85CC              ;
111   85CC              ; 														DESCRIPCIÖN:
112   85CC              ;
113   85CC              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85CC              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85CC              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85CC              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85CC              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85CC              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85CC              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85CC              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85CC              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85CC              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85CC              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85CC              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85CC              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85CC              ;
127   85CC              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85CC              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85CC              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85CC
131   85CC 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85CD
133   85CD              ; Movimiento.
134   85CD
135   85CD 6C 93        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
136   85CF 00 00        Puntero_mov defw 0
137   85D1 00           Contador_db_mov db 0
138   85D2 00           Incrementa_puntero db 0
139   85D3 00           Repetimos_db db 0
140   85D4
141   85D4              ; Variables de funcionamiento. [DRAW].
142   85D4
143   85D4 00           Columnas db 0
144   85D5 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85D7              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85D7 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D8
148   85D8              ; 59 Bytes por entidad.
149   85D8              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D8              ;					         		---------;      ;---------
151   85D8
152   85D8
153   85D8              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D8
155   85D8 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D9
157   85D9              ;														DESCRIPCIÓN:
158   85D9              ;
159   85D9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D9              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D9              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D9              ; Gestión de ENTIDADES.
163   85D9
164   85D9 00 00        Puntero_store_entidades defw 0
165   85DB 00 00        Puntero_restore_entidades defw 0
166   85DD 00 00        Indice_restore defw 0
167   85DF 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
168   85E0 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
169   85E1              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
170   85E1              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
171   85E1              ;														; _ (Numero_de_malotes)="0".
172   85E1 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
173   85E3              ;														; _variable para almacenar lo posición del puntero_
174   85E3              ; 														; _de pila, SP.
175   85E3 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
176   85E5              ;														; La utiliza la rutina [Extrae_foto_registros].
177   85E5 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
178   85E7              ;														; _el snapshot de los registros de la siguiente entidad.
179   85E7              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
180   85E7 50 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
181   85E9              ;														; _el snapshot de los registros del siguiente disparo.
182   85E9              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
183   85E9
184   85E9              ; Gestión de Disparos.
185   85E9
186   85E9 00           Numero_de_disparotes db 0
187   85EA 08 84        Stack_guns defw Indice_de_disparos_entidades			; Este puntero se irá desplazando por el índice de disparos_
188   85EC              ;														; _a medida que estos se van creando. Se sitúa en el siguiente_
189   85EC              ;														; _campo "vacio" del índice para alojar un nuevo disparo.
190   85EC 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
191   85EE 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
192   85F0
193   85F0
194   85F0
195   85F0              ; Gestión de FRAMES.
196   85F0
197   85F0 00           Switch db 0
198   85F1
199   85F1              ; Variables de Raster y localización en pantalla.
200   85F1
201   85F1 00 FF        Temp_Raster defw $ff00
202   85F3
203   85F3              ; Rutina principal *************************************************************************************************************************************************************************
204   85F3              ;
205   85F3              ;	14/11/22
206   85F3
207   85F3 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
208   85F6
209   85F6 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
210   85F8 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
211   85FA ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
212   85FC F3           	DI
213   85FD
214   85FD 3E 01        	ld a,1
215   85FF D3 FE        	out ($fe),a
216   8601
217   8601 3E 07        	ld a,%00000111
218   8603 CD A5 8F     	call Cls
219   8606
220   8606              ;	call Pinta_FILAS
221   8606
222   8606 CD 3F 88     	call Pulsa_ENTER
223   8609
224   8609 21 DF 85     	ld hl,Numero_de_entidades
225   860C 46           	ld b,(hl)
226   860D 04           	inc b
227   860E 05           	dec b
228   860F 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
229   8611
230   8611              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
231   8611              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
232   8611              ;	Pintamos el resto de entidades:
233   8611
234   8611 CD 38 87     	call Inicia_punteros_de_entidades
235   8614
236   8614              ;	INICIA ENTIDADES!!!!!
237   8614
238   8614 C5           1 push bc  												; Guardo el contador de entidades.
239   8615 CD 92 87      	call Inicia_Puntero_objeto
240   8618 CD F5 89     	call Draw
241   861B CD A0 7F     	call Guarda_foto_registros
242   861E CD DA 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
243   8621 C1           	pop bc
244   8622 10 F0        	djnz 1B  											; Decremento el contador de entidades.
245   8624
246   8624              ; 	INICIA AMADEUS!!!!!
247   8624
248   8624 CD 1B 88     3 call Restore_Amadeus
249   8627 CD 92 87     	call Inicia_Puntero_objeto
250   862A CD F5 89     	call Draw
251   862D CD A0 7F     	call Guarda_foto_registros
252   8630 CD 2D 88     	call Store_Amadeus
253   8633
254   8633              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
255   8633
256   8633 CD 4E 87     	call Inicia_Puntero_Disparo_Entidades
257   8636 CD 55 87     	call Inicia_Puntero_Disparo_Amadeus
258   8639
259   8639
260   8639              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
261   8639
262   8639 CD 38 87     	call Inicia_punteros_de_entidades
263   863C CD 09 88     	call Restore_Primera_entidad
264   863F
265   863F 3A DF 85     	ld a,(Numero_de_entidades)
266   8642 3C           	inc a
267   8643 32 E0 85     	ld (Numero_de_malotes),a
268   8646
269   8646 FB           2 ei
270   8647 18 FD        	jr 2B
271   8649
272   8649              ; -----------------------------------------------------------------------------------
273   8649
274   8649              Frame
275   8649
276   8649              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
277   8649              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
278   8649
279   8649 3E 02            ld a,2
280   864B D3 FE            out ($fe),a
281   864D CD F9 8C     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
282   8650 CD 32 8D     	call Extrae_foto_registros_disparos
283   8653 3E 01            ld a,1
284   8655 D3 FE            out ($fe),a
285   8657
286   8657              ; ----------------------------------------------------------------------
287   8657
288   8657 21 00 70     	ld hl,Album_de_fotos
289   865A 22 E5 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
290   865D              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
291   865D 3A DF 85         ld a,(Numero_de_entidades)
292   8660 47               ld b,a
293   8661 A7           	and a
294   8662 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
295   8664
296   8664 C5           2 push bc
297   8665 CD B1 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
298   8668 3A CB 85     	ld a,(Ctrl_0)
299   866B CB 67        	bit 4,a
300   866D 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
301   866F
302   866F              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
303   866F              ; Las entidades sólo generan disparo cuando se mueven.
304   866F              ; 16/02/23.
305   866F              ; [[[
306   866F CD 76 88     	call Detecta_disparo_entidad
307   8672              ; ]]]
308   8672
309   8672 CD FF 86     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
310   8675
311   8675 21 CB 85     1 ld hl,Ctrl_0
312   8678 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
313   867A AF           	xor a
314   867B 32 CC 85     	ld (Obj_dibujado),a
315   867E CD DA 87     	call Store_Restore_entidades
316   8681 C1           	pop bc
317   8682 10 E0        	djnz 2B
318   8684
319   8684              ; Tras la gestión de las entidades, ... AMADEUS.
320   8684
321   8684 CD 1B 88     4 call Restore_Amadeus
322   8687 CD D0 86     	call Mov_Amadeus
323   868A 3A CB 85     	ld a,(Ctrl_0)
324   868D CB 67        	bit 4,a
325   868F 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
326   8691 CD FF 86     	call Guarda_foto_entidad_a_pintar
327   8694
328   8694 21 CB 85     3 ld hl,Ctrl_0
329   8697 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
330   8699 AF           	xor a
331   869A 32 CC 85     	ld (Obj_dibujado),a
332   869D CD 2D 88     	call Store_Amadeus
333   86A0
334   86A0              ; -----
335   86A0
336   86A0 CD 38 87     	call Inicia_punteros_de_entidades
337   86A3 CD 09 88     	call Restore_Primera_entidad
338   86A6
339   86A6              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
340   86A6
341   86A6 CD 5C 87     	call Calcula_numero_de_malotes
342   86A9 CD 74 87     	call Calcula_numero_de_disparotes
343   86AC
344   86AC 3E 04        	ld a,4
345   86AE D3 FE        	out ($fe),a
346   86B0 C9           	ret
347   86B1
348   86B1              ; --------------------------------------------------------------------------------------------------------------
349   86B1              ;
350   86B1              ;	29/1/23
351   86B1
352   86B1              Mov_obj
353   86B1
354   86B1              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
355   86B1
356   86B1 AF           	xor a
357   86B2 32 CC 85     	ld (Obj_dibujado),a
358   86B5 CD 09 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
359   86B8              ;														; Obj_dibujado="0".
360   86B8              ; Movemos Entidades malignas.
361   86B8
362   86B8 CD 82 93     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
363   86BB 3A CB 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
364   86BE CB 67        	bit 4,a
365   86C0 C8           	ret z
366   86C1
367   86C1              ; ---------
368   86C1
369   86C1 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
370   86C3 32 CC 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
371   86C6 CD 09 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
372   86C9 CD 20 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
373   86CC CD EF 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
374   86CF C9           	ret													; _de la misma.
375   86D0
376   86D0              ; --------------------------------------------------------------------------------------------------------------
377   86D0              ;
378   86D0              ;	29/1/23
379   86D0
380   86D0              Mov_Amadeus
381   86D0
382   86D0 AF           	xor a
383   86D1 32 CC 85     	ld (Obj_dibujado),a
384   86D4 CD 09 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
385   86D7              ;														; Obj_dibujado="0".
386   86D7              ; Movemos Amadeus.
387   86D7
388   86D7 CD 53 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
389   86DA 3A CB 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
390   86DD CB 67        	bit 4,a
391   86DF C8           	ret z
392   86E0
393   86E0              ; ---------
394   86E0
395   86E0 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
396   86E2 32 CC 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
397   86E5 CD 09 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
398   86E8 CD 20 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
399   86EB CD EF 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
400   86EE C9           	ret													; _de la nave.
401   86EF
402   86EF              ; --------------------------------------------------------------------------------------------------------------
403   86EF              ;
404   86EF              ;	31/01/23
405   86EF              ;
406   86EF              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
407   86EF
408   86EF              Guarda_foto_entidad_a_borrar
409   86EF
410   86EF CD CF 8C     	call Prepara_draw
411   86F2 CD 09 8C     	call calcula_CColumnass
412   86F5 CD 40 8C     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
413   86F8 CD 95 8C     	call Define_rutina_de_impresion
414   86FB CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
415   86FE C9           	ret
416   86FF
417   86FF              ; --------------------------------------------------------------------------------------------------------------
418   86FF              ;
419   86FF              ;	31/01/23
420   86FF              ;
421   86FF              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
422   86FF              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
423   86FF
424   86FF              Guarda_foto_entidad_a_pintar
425   86FF
426   86FF CD 2C 87     	call Repone_pintar
427   8702 CD F5 89     	call Draw
428   8705 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
429   8708 C9           	ret
430   8709
431   8709              ; --------------------------------------------------------------------------------------------------------------
432   8709              ;
433   8709              ;
434   8709
435   8709 21 9E 85     Prepara_var_pintado_borrado	ld hl,Filas
436   870C 3A CC 85     	ld a,(Obj_dibujado)
437   870F A7           	and a
438   8710 28 05        	jr z,1F
439   8712 11 C1 85     	ld de,Variables_de_pintado
440   8715 18 03        	jr 2F
441   8717 11 B7 85     1 ld de,Variables_de_borrado
442   871A 01 08 00     2 ld bc,8
443   871D ED B0        	ldir
444   871F C9           	ret
445   8720
446   8720              ; --------------------------------------------------------------------------------------------------------------
447   8720
448   8720 21 B7 85     Repone_borrar ld hl,Variables_de_borrado
449   8723 11 9E 85     	ld de,Filas
450   8726 01 08 00     	ld bc,8
451   8729 ED B0        	ldir
452   872B C9           	ret
453   872C
454   872C 21 C1 85     Repone_pintar ld hl,Variables_de_pintado
455   872F 11 9E 85     	ld de,Filas
456   8732 01 08 00     	ld bc,8
457   8735 ED B0        	ldir
458   8737 C9           	ret
459   8738
460   8738              ; *************************************************************************************************************************************************************
461   8738              ;
462   8738              ; 8/1/23
463   8738              ;
464   8738              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
465   8738              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
466   8738              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
467   8738
468   8738              ; Destruye HL y DE !!!!!
469   8738
470   8738              Inicia_punteros_de_entidades
471   8738
472   8738 21 70 84     	ld hl,Indice_de_entidades
473   873B CD 8C 87         call Extrae_address
474   873E 22 D9 85         ld (Puntero_store_entidades),hl
475   8741 21 72 84     	ld hl,Indice_de_entidades+2
476   8744 22 DD 85     	ld (Indice_restore),hl
477   8747 CD 8C 87     	call Extrae_address
478   874A 22 DB 85     	ld (Puntero_restore_entidades),hl
479   874D C9               ret
480   874E
481   874E              ; *************************************************************************************************************************************************************
482   874E              ;
483   874E              ; 8/1/23
484   874E              ;
485   874E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
486   874E
487   874E 21 08 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
488   8751 22 EC 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
489   8754 C9           	ret
490   8755 21 F0 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
491   8758 22 EE 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
492   875B C9           	ret
493   875C
494   875C              ; -------------------------------------------------------------------------------------------------------------
495   875C              ;
496   875C              ; 28/2/23
497   875C              ;
498   875C
499   875C              Calcula_numero_de_malotes
500   875C
501   875C 21 00 70     	ld hl,Album_de_fotos
502   875F EB           	ex de,hl
503   8760 2A E5 85     	ld hl,(Stack_snapshot)
504   8763
505   8763 06 00        	ld b,0
506   8765 7D           	ld a,l
507   8766 93           	sub e
508   8767 28 07        	jr z,1F
509   8769
510   8769              ; Nº de malotes no es "0".
511   8769
512   8769 D6 06        2 sub 6
513   876B 04           	inc b
514   876C A7           	and a
515   876D 20 FA        	jr nz,2B
516   876F 78           	ld a,b
517   8770
518   8770 32 E0 85     1 ld (Numero_de_malotes),a
519   8773 C9           	ret
520   8774
521   8774              ; -------------------------------------------------------------------------------------------------------------
522   8774              ;
523   8774              ; 28/2/23
524   8774              ;
525   8774
526   8774              Calcula_numero_de_disparotes
527   8774
528   8774 21 50 70     	ld hl,Album_de_fotos_disparos
529   8777 EB           	ex de,hl
530   8778 2A E7 85     	ld hl,(Stack_snapshot_disparos)
531   877B
532   877B 06 00        	ld b,0
533   877D 7D           	ld a,l
534   877E 93           	sub e
535   877F 28 07        	jr z,1F
536   8781
537   8781              ; Nº de malotes no es "0".
538   8781
539   8781 D6 06        2 sub 6
540   8783 04           	inc b
541   8784 A7           	and a
542   8785 20 FA        	jr nz,2B
543   8787 78           	ld a,b
544   8788
545   8788 32 E9 85     1 ld (Numero_de_disparotes),a
546   878B C9           	ret
547   878C              ; *************************************************************************************************************************************************************
548   878C              ;
549   878C              ; 20/10/22
550   878C              ;
551   878C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
552   878C              ;
553   878C              ; Destruye el puntero y DE !!!!!
554   878C
555   878C 5E           Extrae_address ld e,(hl)
556   878D 23           	inc hl
557   878E 56           	ld d,(hl)
558   878F 2B           	dec hl
559   8790 EB           	ex de,hl
560   8791 C9           	ret
561   8792
562   8792              ; *************************************************************************************************************************************************************
563   8792              ;
564   8792              ;	7/2/23
565   8792              ;
566   8792              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
567   8792              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
568   8792              ;
569   8792              ;   Destruye HL y BC !!!!!,
570   8792              ;
571   8792              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
572   8792              ;					"0" ..... Izquierda.
573   8792
574   8792              Inicia_Puntero_objeto
575   8792
576   8792 3A B2 85     	ld a,(Cuad_objeto)
577   8795 E6 01        	and 1
578   8797 F5           	push af
579   8798 CC B6 87     	call z,Inicia_puntero_objeto_izq
580   879B F1           	pop af
581   879C 28 2B        	jr z,1F
582   879E CD A3 87     	call Inicia_puntero_objeto_der
583   87A1 18 26        	jr 1F
584   87A3
585   87A3              ; Arrancamos desde la parte izquierda de la pantalla.
586   87A3              ; Iniciamos (Indice_Sprite_der).
587   87A3
588   87A3 2A A8 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
589   87A6 22 AC 85     	ld (Puntero_DESPLZ_der),hl
590   87A9 CD 8C 87     	call Extrae_address
591   87AC 22 A2 85     	ld (Puntero_objeto),hl
592   87AF
593   87AF 2A AA 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
594   87B2              ;	call Extrae_address
595   87B2 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
596   87B5 C9           	ret
597   87B6
598   87B6              ; Arrancamos desde la parte derecha de la pantalla.
599   87B6              ; Iniciamos (Indice_Sprite_izq).
600   87B6
601   87B6 2A AA 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
602   87B9 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
603   87BC CD 8C 87     	call Extrae_address
604   87BF 22 A2 85     	ld (Puntero_objeto),hl
605   87C2
606   87C2 2A A8 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
607   87C5              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
608   87C5 22 AC 85     	ld (Puntero_DESPLZ_der),hl
609   87C8 C9           	ret
610   87C9
611   87C9              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
612   87C9
613   87C9 21 40 83     1 ld hl,Amadeus
614   87CC ED 4B A2 85  	ld bc,(Puntero_objeto)
615   87D0 B7 ED 42     	sub hl,bc
616   87D3 C0           	ret nz
617   87D4 21 CB 85     	ld hl,Ctrl_0
618   87D7 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
619   87D9 C9           	ret 												; _de nuestra nave en los extremos.
620   87DA
621   87DA              ; *************************************************************************************************************************************************************
622   87DA              ;
623   87DA              ;	8/1/23
624   87DA              ;
625   87DA              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
626   87DA              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
627   87DA
628   87DA              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
629   87DA              ;	_de la 2ª y 3ª entidad respectivamente.
630   87DA
631   87DA              Store_Restore_entidades
632   87DA
633   87DA E5           	push hl
634   87DB D5           	push de
635   87DC C5            	push bc
636   87DD
637   87DD              ;	STORE !!!!!
638   87DD              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
639   87DD
640   87DD 21 9E 85     	ld hl,Filas
641   87E0 ED 5B D9 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
642   87E4 01 3A 00     	ld bc,58
643   87E7 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
644   87E9
645   87E9              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
646   87E9
647   87E9 2A DB 85     	ld hl,(Puntero_restore_entidades)
648   87EC 22 D9 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
649   87EF 11 9E 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
650   87F2 01 3A 00     	ld bc,58
651   87F5 ED B0        	ldir
652   87F7
653   87F7              ;	Incrementa RESTORE !!!!!
654   87F7
655   87F7 2A DD 85         ld hl,(Indice_restore)
656   87FA 23           	inc hl
657   87FB 23           	inc hl
658   87FC 22 DD 85     	ld (Indice_restore),hl
659   87FF CD 8C 87         call Extrae_address
660   8802 22 DB 85         ld (Puntero_restore_entidades),hl
661   8805 C1           	pop bc
662   8806 D1           	pop de
663   8807 E1           	pop hl
664   8808 C9           	ret
665   8809
666   8809              ; **************************************************************************************************
667   8809              ;
668   8809              ;	29/10/22
669   8809              ;
670   8809              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
671   8809
672   8809 E5           Restore_Primera_entidad push hl
673   880A D5           	push de
674   880B C5            	push bc
675   880C 2A D9 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
676   880F 11 9E 85     	ld de,Filas
677   8812 01 3A 00     	ld bc,58
678   8815 ED B0        	ldir
679   8817 C1           	pop bc
680   8818 D1           	pop de
681   8819 E1           	pop hl
682   881A C9           	ret
683   881B
684   881B              ; **************************************************************************************************
685   881B              ;
686   881B              ;	25/01/23
687   881B              ;
688   881B              ;	Restore_Amadeus
689   881B              ;
690   881B              ;	Cargamos en DRAW los parámetros de Amadeus.
691   881B              ;
692   881B
693   881B E5           Restore_Amadeus	push hl
694   881C D5           	push de
695   881D C5            	push bc
696   881E 21 7C 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
697   8821 11 9E 85     	ld de,Filas
698   8824 01 3A 00     	ld bc,58
699   8827 ED B0        	ldir
700   8829 C1           	pop bc
701   882A D1           	pop de
702   882B E1           	pop hl
703   882C C9           	ret
704   882D
705   882D              ; *************************************************************************************************************************************************************
706   882D              ;
707   882D              ;	29/01/23
708   882D              ;
709   882D              ;	Store_Amadeus
710   882D              ;
711   882D              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
712   882D              ;
713   882D
714   882D E5           Store_Amadeus push hl
715   882E D5           	push de
716   882F C5            	push bc
717   8830 21 9E 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
718   8833 11 7C 84     	ld de,Amadeus_db
719   8836 01 3A 00     	ld bc,58
720   8839 ED B0        	ldir
721   883B C1           	pop bc
722   883C D1           	pop de
723   883D E1           	pop hl
724   883E C9           	ret
725   883F
726   883F              ; **************************************************************************************************
727   883F
728   883F              ; Teclado.
729   883F
730   883F 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
731   8841 DB FE        	in a,($fe)
732   8843 E6 01        	and $01
733   8845 28 02        	jr z,1f
734   8847 18 F6        	jr Pulsa_ENTER
735   8849 C9           1 ret
736   884A
737   884A              ; **************************************************************************************************
738   884A              ;
739   884A              ; Temporización.
740   884A
741   884A              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
742   884A              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
743   884A              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
744   884A              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
745   884A
746   884A              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
747   884A              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
748   884A              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
749   884A
750   884A              ; A partir de $4f61 no hace falta DELAY.
751   884A
752   884A              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
753   884A
754   884A 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
755   884D 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
756   884E 78           	LD A,B
757   884F A7           	AND A
758   8850 20 FB        	JR NZ,wait
759   8852 C9           	RET
760   8853
761   8853              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
762   8853              ;
763   8853              ;	16/02/23
764   8853
765   8853              Movimiento_Amadeus
766   8853
767   8853 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
768   8855 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
769   8857 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
770   8859 CC 33 91         call z,Mov_left											;			"			"			"			"			"			"			"			"
771   885C 3E F7        	ld a,$f7
772   885E DB FE        	in a,($fe)
773   8860 E6 01        	and $01
774   8862 C8           	ret z
775   8863
776   8863 3E F7        	ld a,$f7
777   8865 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
778   8867 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
779   8869 CC 15 90     	call z,Mov_right										;			"			"			"			"			"			"			"			"
780   886C
781   886C              ; Disparo.
782   886C
783   886C 3E F7        	ld a,$f7												; "5" para disparar.
784   886E DB FE        	in a,($fe)
785   8870 E6 10        	and $10
786   8872 CC AA 88     	call z,Genera_disparo
787   8875 C9               ret
788   8876
789   8876              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
790   8876              ;
791   8876              ;	Rutina provisional.
792   8876
793   8876 3E 7F        Detecta_disparo_entidad	ld a,$7f
794   8878 DB FE        	in a,($fe)
795   887A E6 01        	and 1
796   887C C0           	ret nz
797   887D CD AA 88     	call Genera_disparo
798   8880 C9           	ret
799   8881
800   8881              ; Pinta indicadores de FILAS. ------------------------------------------------------
801   8881
802   8881 21 10 40     Pinta_FILAS ld hl,$4010
803   8884              ;	ld b,9
804   8884              ;2 push hl
805   8884              ;	push bc
806   8884 06 BF        	ld b,$bf
807   8886 36 80        1 ld (hl),%10000000
808   8888 CD DB 8C     	call NextScan
809   888B 10 F9        	djnz 1B
810   888D              ;	pop bc
811   888D              ;	pop hl
812   888D              ;	inc l
813   888D              ;	djnz 2B
814   888D 06 03        	ld b,3
815   888F 21 00 47         ld hl,$4700
816   8892 CD 98 88     3 call Bucle_1
817   8895 10 FB            djnz 3B
818   8897 C9               ret
819   8898
820   8898 C5           Bucle_1 push bc
821   8899 E5                   push hl
822   889A D1                   pop de
823   889B 13                   inc de
824   889C 01 FF 00             ld bc,255
825   889F 36 FF                ld (hl),255
826   88A1 ED B0                ldir
827   88A3 23                   inc hl
828   88A4 3E 07                ld a,7
829   88A6 84                   add a,h
830   88A7 67                   ld h,a
831   88A8 C1                   pop bc
832   88A9 C9                   ret
833   88AA
834   88AA              ; ---------------------------------------------------------------
835   88AA
836   88AA              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88AA              ; ******************************************************************************************************************************************************************************************
  2+  88AA              ;
  3+  88AA              ;   19/02/23
  4+  88AA              ;
  5+  88AA              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88AA              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88AA              ;
  8+  88AA              ;
  9+  88AA              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88AA              ;
 11+  88AA              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88AA              ;               _ hacen las entidades hacia abajo.
 13+  88AA              ;
 14+  88AA              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88AA              ;
 16+  88AA              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88AA              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88AA              ;
 19+  88AA              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88AA              ;           _ la bala.
 21+  88AA              ;
 22+  88AA              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88AA              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88AA              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88AA              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88AA              ;           _ en el momento de generarse la bala)).
 27+  88AA
 28+  88AA              Genera_disparo
 29+  88AA
 30+  88AA              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88AA              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88AA              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88AA              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88AA              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88AA              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga dichos valores.
 36+  88AA              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88AA
 38+  88AA 3A D4 85         ld a,(Columnas)
 39+  88AD 47               ld b,a
 40+  88AE 3A 9F 85         ld a,(Columns)
 41+  88B1 B8               cp b
 42+  88B2 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 43+  88B3
 44+  88B3 21 00 80         ld hl,Indice_disparo
 45+  88B6 3A A6 85         ld a,(CTRL_DESPLZ)
 46+  88B9 4F               ld c,a
 47+  88BA A7               and a
 48+  88BB 28 0F            jr z,1F
 49+  88BD E6 01            and 1
 50+  88BF C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 51+  88C0 06 F9            ld b,$f9
 52+  88C2 79               ld a,c
 53+  88C3
 54+  88C3 23           2 inc hl
 55+  88C4 23               inc hl
 56+  88C5 B8               cp b
 57+  88C6 28 04            jr z,1F
 58+  88C8 04               inc b
 59+  88C9 04               inc b
 60+  88CA 18 F7            jr 2B
 61+  88CC
 62+  88CC CD 8C 87     1 call Extrae_address
 63+  88CF E5               push hl
 64+  88D0 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 65+  88D2 DD 21 6E 8F      ld ix, Pinta_Disparo          		; Rutinas_de_impresion en IX.
 66+  88D6
 67+  88D6              ; --------------- ---------------- ----------------- -------------
 68+  88D6              ;
 69+  88D6              ;   Genera disparo.
 70+  88D6              ;
 71+  88D6              ;   Generamos variables de disparo. Varían en función del cuadrante en el que nos encontramos.
 72+  88D6
 73+  88D6 3A B2 85         ld a,(Cuad_objeto)
 74+  88D9 FE 02            cp 2
 75+  88DB 38 54            jr c,3F
 76+  88DD 28 52            jr z,3F
 77+  88DF
 78+  88DF              ; Estamos en mitad inferior de pantalla, (cuadrantes 3 y 4).
 79+  88DF
 80+  88DF E6 01            and 1
 81+  88E1 28 27            jr z,4F
 82+  88E3
 83+  88E3              ; Estamos en el 3er cuadrante de pantalla.
 84+  88E3              ; 3er CUAD. ----- ----- ----- ----- -----
 85+  88E3              ;
 86+  88E3              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 87+  88E3              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 88+  88E3              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 89+  88E3
 90+  88E3 2A A0 85     	ld hl,(Posicion_actual)
 91+  88E6
 92+  88E6              ;   Compruebo si el disparo lo efectúa Amadeus o una entidad para poder calcular el puntero de impresión.
 93+  88E6
 94+  88E6 3A CB 85         ld a,(Ctrl_0)
 95+  88E9 CB 77            bit 6,a
 96+  88EB 28 0B            jr z,8F
 97+  88ED
 98+  88ED              ; Dispara Amadeus.
 99+  88ED
100+  88ED 0E 81            ld c,$81                                        ; Dirección "$81", hacia arriba.
101+  88EF CD EA 8C         call PreviousScan
102+  88F2 CD EA 8C         call PreviousScan
103+  88F5 2B               dec hl                                          ; Puntero de impresión en HL.
104+  88F6 18 0A            jr 10F
105+  88F8
106+  88F8              ; Dispara Entidad.
107+  88F8
108+  88F8 0E 80        8 ld c,$80                                           ; Dirección "$80", hacia abajo.
109+  88FA 06 10            ld b,16
110+  88FC CD DB 8C     9 call NextScan
111+  88FF 10 FB            djnz 9B
112+  8901
113+  8901              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
114+  8901
115+  8901 2B               dec hl                                          ; Puntero de impresión en HL.
116+  8902 CD CD 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
117+  8905              ;                                                   ; _al generar el disparo.
118+  8905
119+  8905              ; LLegados a este punto tendremos:
120+  8905              ;
121+  8905              ;       Puntero_objeto_disparo en IY.
122+  8905              ;       Rutinas_de_impresion en IX.
123+  8905              ;       Puntero_de_impresion en HL.
124+  8905              ;       Impacto/Dirección en BC.
125+  8905
126+  8905 CD 50 89         call Almacena_disparo
127+  8908 18 45            jr 6F                                           ; RET.
128+  890A
129+  890A
130+  890A              ; Estamos en el 4º cuadrante de pantalla.
131+  890A              ; 4º CUAD. ----- ----- ----- ----- -----
132+  890A              ;
133+  890A              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
134+  890A              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
135+  890A              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
136+  890A
137+  890A 2A A0 85     4 ld hl,(Posicion_actual)
138+  890D
139+  890D              ;   Compruebo si el disparo lo efectúa Amadeus o una entidad para poder calcular el puntero de impresión.
140+  890D
141+  890D 3A CB 85         ld a,(Ctrl_0)
142+  8910 CB 77            bit 6,a
143+  8912 28 0B            jr z,11F
144+  8914
145+  8914              ; Dispara Amadeus.
146+  8914
147+  8914 0E 81            ld c,$81                                         ; Dirección "$81", hacia arriba.
148+  8916 23               inc hl
149+  8917 CD EA 8C         call PreviousScan
150+  891A CD EA 8C         call PreviousScan
151+  891D 18 0A            jr 13F
152+  891F
153+  891F              ; Dispara Entidad.
154+  891F
155+  891F 0E 80        11 ld c,$80                                           ; Dirección "0", hacia abajo.
156+  8921 06 10            ld b,16
157+  8923 23               inc hl
158+  8924 CD DB 8C     12 call NextScan
159+  8927 10 FB            djnz 12B
160+  8929
161+  8929              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
162+  8929
163+  8929 CD CD 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
164+  892C              ;                                                     ; _al generar el disparo.
165+  892C
166+  892C              ; LLegados a este punto tendremos:
167+  892C              ;
168+  892C              ;       Puntero_objeto_disparo en IY.
169+  892C              ;       Rutinas_de_impresion en IX.
170+  892C              ;       Puntero_de_impresion en HL.
171+  892C              ;       Impacto/Dirección en BC.
172+  892C
173+  892C CD 50 89         call Almacena_disparo
174+  892F 18 1E            jr 6F                                           ; RET.
175+  8931
176+  8931              ; Estamos en la mitad superior de pantalla, (cuadrantes 1 y 2).
177+  8931
178+  8931 28 0F        3 jr z,5F
179+  8933
180+  8933              ; 1er CUAD. ----- ----- ----- ----- -----
181+  8933              ;
182+  8933              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
183+  8933              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
184+  8933              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
185+  8933              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
186+  8933
187+  8933 2A A0 85     	ld hl,(Posicion_actual)
188+  8936 CD DB 8C     	call NextScan
189+  8939
190+  8939              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
191+  8939
192+  8939 2B               dec hl                                          ; Puntero de impresión en HL.
193+  893A
194+  893A              ; No se produce impacto. B="$80"
195+  893A              ; Dirección del proyectil hacia abajo. C="80"
196+  893A
197+  893A 01 80 80         ld bc,$8080
198+  893D
199+  893D              ; LLegados a este punto tendremos:
200+  893D              ;
201+  893D              ;       Puntero_objeto_disparo en IY.
202+  893D              ;       Rutinas_de_impresion en IX.
203+  893D              ;       Puntero_de_impresion en HL.
204+  893D              ;       Impacto/Dirección en BC.
205+  893D
206+  893D CD 50 89         call Almacena_disparo
207+  8940 18 0D            jr 6F                                           ; RET.
208+  8942
209+  8942              ; Estamos en el 2º cuadrante de pantalla.
210+  8942              ; 2º CUAD. ----- ----- ----- ----- -----
211+  8942              ;
212+  8942              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
213+  8942              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
214+  8942              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
215+  8942              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
216+  8942
217+  8942 2A A0 85     5 ld hl,(Posicion_actual)
218+  8945 23           	inc hl
219+  8946 CD DB 8C     	call NextScan
220+  8949
221+  8949              ; Ahora HL apunta una FILA por debajo de (Posicion_actual).
222+  8949
223+  8949              ; No se produce impacto. B="$80"
224+  8949              ; Dirección del proyectil hacia abajo. C="80"
225+  8949
226+  8949 01 80 80         ld bc,$8080
227+  894C
228+  894C              ; LLegados a este punto tendremos:
229+  894C              ;
230+  894C              ;       Puntero_objeto_disparo en IY.
231+  894C              ;       Rutinas_de_impresion en IX.
232+  894C              ;       Puntero_de_impresion en HL.
233+  894C              ;       Impacto/Dirección en BC.
234+  894C
235+  894C CD 50 89         call Almacena_disparo
236+  894F
237+  894F              ; Preparamos registros para llamar a [Guarda_foto_registros].
238+  894F              ; Antes de llamar a [Guarda_foto_registros] indicamos que se trata de un disparo.
239+  894F
240+  894F C9           6 ret
241+  8950
242+  8950              ; ----------------------------------------------------------------
243+  8950              ;
244+  8950              ;   25/02/23
245+  8950              ;
246+  8950              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
247+  8950              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
248+  8950
249+  8950
250+  8950              Almacena_disparo
251+  8950
252+  8950 E5               push hl
253+  8951 F1               pop af
254+  8952 08               ex af,af                                        ; Puntero_de_impresion en AF'.
255+  8953
256+  8953              3
257+  8953              ;	inc c
258+  8953              ;    dec c
259+  8953              ;    jr z,1F                                        ; Según la `Dirección' del proyectil sabemos si_
260+  8953              ;                                                   ; _ es Amadeus o una entidad la que dispara.
261+  8953
262+  8953 79           	ld a,c
263+  8954 E6 01        	and 1
264+  8956 28 1A        	jr z,1F
265+  8958
266+  8958              ; Dispara AMADEUS.
267+  8958
268+  8958 C5               push bc
269+  8959 01 F4 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A
270+  895C 2A EE 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
271+  895F A7               and a
272+  8960 ED 42            sbc hl,bc
273+  8962 CC 55 87         call z,Inicia_Puntero_Disparo_Amadeus
274+  8965 C1               pop bc
275+  8966 28 4E            jr z,4F
276+  8968
277+  8968 2A EE 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
278+  896B 23               inc hl
279+  896C 23               inc hl
280+  896D 22 EE 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
281+  8970              ;                                                   ; _ Disparo_(+1).
282+  8970 18 18            jr 2F
283+  8972
284+  8972              ; Dispara una entidad.
285+  8972
286+  8972 C5           1 push bc
287+  8973 01 1C 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
288+  8976 2A EC 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
289+  8979 A7               and a
290+  897A ED 42            sbc hl,bc
291+  897C CC 4E 87         call z,Inicia_Puntero_Disparo_Entidades
292+  897F C1               pop bc
293+  8980 28 34            jr z,4F
294+  8982
295+  8982 2A EC 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
296+  8985 23               inc hl
297+  8986 23               inc hl
298+  8987 22 EC 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
299+  898A              ;                                                   ; _ Disparo_(+1).
300+  898A CD 8C 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
301+  898D              ;                                                   ; _ los 8 bytes que definen el disparo:
302+  898D              ;
303+  898D              ;                                                     Puntero_objeto_disparo en IY.
304+  898D              ;                                                     Rutinas_de_impresion en IX.
305+  898D              ;                                                     Puntero_de_impresion en HL.
306+  898D              ;                                                     Impacto/Dirección en BC.
307+  898D
308+  898D 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
309+  898E 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
310+  898F 23               inc hl                                          ; _ al siguiente.
311+  8990 A7               and a
312+  8991 20 C0            jr nz,3B
313+  8993
314+  8993 08               ex af,af
315+  8994 ED 73 E1 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
316+  8998 F9               ld sp,hl
317+  8999
318+  8999 DD E5            push ix                                         ; Rutina de impresión.
319+  899B F5               push af                                         ; Puntero de impresión.
320+  899C FD E5            push iy                                         ; Puntero objeto.
321+  899E C5               push bc                                         ; Control.
322+  899F
323+  899F ED 7B E1 85      ld sp,(Stack)
324+  89A3
325+  89A3              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
326+  89A3
327+  89A3 21 D8 85     	ld hl,Ctrl_1
328+  89A6 CB C6        	set 0,(hl)
329+  89A8
330+  89A8 DD E5        	push ix
331+  89AA E1               pop hl
332+  89AB F5               push af
333+  89AC DD E1            pop ix
334+  89AE
335+  89AE CD A0 7F     	call Guarda_foto_registros
336+  89B1
337+  89B1 21 D8 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
338+  89B4 CB 86        	res 0,(hl)
339+  89B6
340+  89B6 C9           4 ret
341+  89B7
342+  89B7              ; ----------------------------------------------------------------
343+  89B7              ;
344+  89B7              ;   25/02/23
345+  89B7              ;
346+  89B7              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
347+  89B7              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
348+  89B7
349+  89B7              ; 	LLegados a este punto tendremos:
350+  89B7              ;
351+  89B7              ;       Puntero_objeto_disparo en IY.
352+  89B7              ;       Rutinas_de_impresion en IX.
353+  89B7              ;       Puntero_de_impresion en HL.
354+  89B7              ;       Impacto/Dirección en BC.
355+  89B7
356+  89B7              Almacena_disparo2
357+  89B7
358+  89B7              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
359+  89B7
360+  89B7 21 D8 85     	ld hl,Ctrl_1
361+  89BA CB C6        	set 0,(hl)
362+  89BC
363+  89BC DD E5        	push ix
364+  89BE D1               pop de 											; Rutina de impresión en DE.
365+  89BF E5               push hl
366+  89C0 DD E1            pop ix
367+  89C2 D5               push de
368+  89C3 E1               pop hl
369+  89C4
370+  89C4 CD A0 7F     	call Guarda_foto_registros
371+  89C7
372+  89C7 21 D8 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
373+  89CA CB 86        	res 0,(hl)
374+  89CC
375+  89CC              ;3 inc c
376+  89CC              ;    dec c
377+  89CC              ;    jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
378+  89CC              ;                                                   ; _ es Amadeus o una entidad la que dispara.
379+  89CC
380+  89CC              ; Dispara AMADEUS.
381+  89CC
382+  89CC              ;    push bc
383+  89CC              ;    ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A
384+  89CC              ;    ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
385+  89CC              ;    and a
386+  89CC              ;    sbc hl,bc
387+  89CC              ;    call z,Inicia_Puntero_Disparo_Amadeus
388+  89CC              ;    pop bc
389+  89CC              ;    jr z,4F
390+  89CC
391+  89CC              ;    ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
392+  89CC              ;    inc hl
393+  89CC              ;    inc hl
394+  89CC              ;    ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
395+  89CC              ;                                                   ; _ Disparo_(+1).
396+  89CC              ;    jr 2F
397+  89CC
398+  89CC              ; Dispara una entidad.
399+  89CC
400+  89CC              ;1 push bc
401+  89CC              ;    ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
402+  89CC              ;    ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
403+  89CC              ;    and a
404+  89CC              ;    sbc hl,bc
405+  89CC              ;    pop bc
406+  89CC              ;    jr z,4F
407+  89CC
408+  89CC              ;    ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
409+  89CC              ;    inc hl
410+  89CC              ;    inc hl
411+  89CC              ;    ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
412+  89CC              ;                                                   ; _ Disparo_(+1).
413+  89CC              ;2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
414+  89CC              ;                                                   ; _ los 8 bytes que definen el disparo:
415+  89CC              ;
416+  89CC              ;                                                     Puntero_objeto_disparo en IY.
417+  89CC              ;                                                     Rutinas_de_impresion en IX.
418+  89CC              ;                                                     Puntero_de_impresion en HL.
419+  89CC              ;                                                     Impacto/Dirección en BC.
420+  89CC
421+  89CC              ;    dec hl                                          ; Esta parte de la rutina comprueba si este_
422+  89CC              ;    ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
423+  89CC              ;    inc hl                                          ; _ al siguiente.
424+  89CC              ;    and a
425+  89CC              ;    jr nz,3B
426+  89CC
427+  89CC              ;    ex af,af
428+  89CC              ;    ld (Stack),sp                                   ; Guardo SP en (Stack).)
429+  89CC              ;    ld sp,hl
430+  89CC
431+  89CC              ;    push ix                                         ; Rutina de impresión.
432+  89CC              ;    push af                                         ; Puntero de impresión.
433+  89CC              ;    push iy                                         ; Puntero objeto.
434+  89CC              ;    push bc                                         ; Control.
435+  89CC
436+  89CC              ;    ld sp,(Stack)
437+  89CC
438+  89CC C9           4 ret
439+  89CD
440+  89CD              ; ----------------------------------------------------------------
441+  89CD              ;
442+  89CD              ;   20/02/23
443+  89CD
444+  89CD E5           Comprueba_Colision push hl
445+  89CE 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
446+  89D0 CD E7 89         call Bucle_2                                   ; Comprobamos el 1er scanline.
447+  89D3 1C               inc e
448+  89D4 1D               dec e
449+  89D5 7B               ld a,e
450+  89D6 E6 01            and 1
451+  89D8 28 03            jr z,1F                                        ; Si no se produce impacto comprobamos el 2º scanline.
452+  89DA              ; Hay impacto.
453+  89DA 43           2 ld b,e
454+  89DB E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
455+  89DC C9           3 ret
456+  89DD E1           1 pop hl
457+  89DE E5               push hl
458+  89DF CD DB 8C         call NextScan
459+  89E2 CD E7 89         call Bucle_2
460+  89E5 18 F3            jr 2B
461+  89E7
462+  89E7              ; ---------- ----------
463+  89E7
464+  89E7 06 02        Bucle_2 ld b,2
465+  89E9 7E           2 ld a,(hl)
466+  89EA A7               and a
467+  89EB 20 04            jr nz,1F
468+  89ED 23               inc hl
469+  89EE 10 F9            djnz 2B
470+  89F0 C9           3 ret
471+  89F1 1E 81        1 ld e,$81
472+  89F3 18 FB            jr 3B
473+  89F5
474+  89F5              ; -------------------------------------------------------------------------------------------------------------
475+  89F5
476+  89F5
477+  89F5
478+  89F5
479+  89F5
# file closed: Disparo.asm
837   89F5              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  89F5              ; ******************************************************************************************************************************************************************************************
  2+  89F5              ;
  3+  89F5              ; 01/23
  4+  89F5              ;
  5+  89F5              ; DRAW. ************************************************************************************************************************************************************************************
  6+  89F5
  7+  89F5 CD CF 8C     Draw call Prepara_draw
  8+  89F8 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  89F9 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  89FA 28 05        	jr z,2F
 11+  89FC
 12+  89FC 3A B2 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  89FF 18 0C        	jr 1F
 14+  8A01 2A B0 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8A04 22 A0 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8A07 CD 96 8B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8A0A              ;													; _la esquina superior izquierda de la pantalla.
 18+  8A0A CD 04 94     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8A0D 3A CB 85     1 ld a,(Ctrl_0)
 20+  8A10 CB 6F        	bit 5,a
 21+  8A12 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8A14
 23+  8A14 CD 2C 8A     	call Comprueba_limite_horizontal
 24+  8A17 CD BC 8A     	call Comprueba_limite_vertical
 25+  8A1A
 26+  8A1A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8A1A
 28+  8A1A CD 09 8C     3 call calcula_CColumnass
 29+  8A1D CD 40 8C     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8A20 CD 95 8C     	call Define_rutina_de_impresion
 31+  8A23
 32+  8A23 3A CB 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8A26 CB AF        	res 5,a											; _a ser de utilidad.
 34+  8A28 32 CB 85     	ld (Ctrl_0),a
 35+  8A2B
 36+  8A2B C9           	ret
 37+  8A2C
 38+  8A2C              ; *******************************************************************************************************************************************************************************************
 39+  8A2C              ;	21/01/23
 40+  8A2C              ;
 41+  8A2C              ; 	Comprueba_limite_horizontal.
 42+  8A2C              ;
 43+  8A2C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8A2C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8A2C              ;
 46+  8A2C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8A2C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8A2C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8A2C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8A2C
 51+  8A2C
 52+  8A2C
 53+  8A2C 3A CB 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8A2F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8A31 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8A33 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8A35 32 CB 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8A38 18 09            jr 6F
 59+  8A3A CB 5F        1 bit 3,a
 60+  8A3C 28 0A            jr z,2F
 61+  8A3E E6 F7            and $f7
 62+  8A40 32 CB 85         ld (Ctrl_0),a
 63+  8A43 CD 96 8B     6 call Inicializacion
 64+  8A46 18 5B            jr 5F
 65+  8A48 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8A49
 67+  8A49              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8A49              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8A49
 70+  8A49 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8A4A 2A D5 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8A4D CD 9B 8F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8A50 67           	ld h,a
 74+  8A51 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8A52 CD 9B 8F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8A55 67           	ld h,a
 77+  8A56 A7           	and a
 78+  8A57 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8A59 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8A5A 3A B2 85     	ld a,(Cuad_objeto)
 81+  8A5D FE 02        	cp 2
 82+  8A5F 38 1E        	jr c,3F
 83+  8A61 28 1C        	jr z,3F
 84+  8A63 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8A64 28 23            jr z,7F
 86+  8A66 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8A68 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8A6A E1           	pop hl
 89+  8A6B
 90+  8A6B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8A6B              ; _para indicar con E="2" en caso necesario.
 92+  8A6B
 93+  8A6B E5               push hl
 94+  8A6C C5               push bc
 95+  8A6D CD 9B 8F     	call calcula_tercio
 96+  8A70 FE 01        	cp 1
 97+  8A72 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8A74 CD A4 8A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8A77 28 26            jr z,9F
100+  8A79 38 24            jr c,9F
101+  8A7B 1E 00        11 ld e,0
102+  8A7D 18 22            jr 8F
103+  8A7F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8A80 28 07        	jr z, 7F
105+  8A82 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8A84 1E 00         	ld e,0
107+  8A86 E1           	pop hl
108+  8A87 18 04        	jr 4F
109+  8A89 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8A8B 18 15            jr 10F
111+  8A8D
112+  8A8D              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8A8D              ; _para indicar con E="2" en caso necesario.
114+  8A8D
115+  8A8D E5           4 push hl
116+  8A8E C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8A8F CD 9B 8F     	call calcula_tercio
118+  8A92 FE 01        	cp 1
119+  8A94 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8A96 CD A4 8A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8A99 28 04            jr z,9F
122+  8A9B 30 02            jr nc,9F
123+  8A9D 18 02        	jr 8F
124+  8A9F 1E 02        9 ld e,2
125+  8AA1 C1           8 pop bc
126+  8AA2 E1           10 pop hl
127+  8AA3 C9           5 ret
128+  8AA4
129+  8AA4              ; --------------------
130+  8AA4              ;
131+  8AA4              ; 25/08/22
132+  8AA4
133+  8AA4 CD 9B 8F     Comprueba_centro call calcula_tercio
134+  8AA7 67               ld h,a
135+  8AA8 08           	ex af,af
136+  8AA9 FE 02        	cp 2
137+  8AAB 38 07        	jr c,1F
138+  8AAD 28 05        	jr z,1F
139+  8AAF 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8AB2 18 03        	jr 2F
141+  8AB4 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8AB7 08           2 ex af,af
143+  8AB8 A7               and a
144+  8AB9 ED 42            sbc hl,bc
145+  8ABB C9               ret
146+  8ABC
147+  8ABC              ; *********************************************************************************************************************************************************************************************
148+  8ABC              ;
149+  8ABC              ;   16/8/22
150+  8ABC              ;
151+  8ABC              ;	Comprueba_limite_vertical
152+  8ABC              ;
153+  8ABC              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8ABC              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8ABC              ;
156+  8ABC
157+  8ABC 2A A0 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8ABF 7D           	ld a,l
159+  8AC0 E6 1F        	and $1F
160+  8AC2 57           	ld d,a
161+  8AC3 3A D7 85     	ld a,(Limite_vertical)
162+  8AC6 BA           	cp d 											; Límite - Posición.
163+  8AC7 08           	ex af,af 										; Resultado de CP d en F'.
164+  8AC8 3A B2 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8ACB CB 47        	bit 0,a
166+  8ACD 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8ACF
168+  8ACF              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8ACF
170+  8ACF 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8AD0 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8AD2
173+  8AD2              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8AD2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8AD2
176+  8AD2 3A A4 85         ld a,(Coordenada_X)
177+  8AD5 16 0F            ld d,Centro_izquierda
178+  8AD7 A7               and a
179+  8AD8 92               sub d 											 ; Posición - Centro_izquierda.
180+  8AD9 28 1E            jr z,3F
181+  8ADB 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8ADD              ;                                                    ; _salimos sin modificar nada.
183+  8ADD 18 0E            jr 2F
184+  8ADF 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8AE0 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8AE2
187+  8AE2              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8AE2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8AE2
190+  8AE2 3A A4 85         ld a,(Coordenada_X)
191+  8AE5 16 10            ld d,Centro_derecha
192+  8AE7 A7               and a
193+  8AE8 92               sub d
194+  8AE9 28 0E            jr z,3F
195+  8AEB 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8AED              ;                                                    ; _salimos sin modificar nada.
197+  8AED CB 43        2 bit 0,e
198+  8AEF 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8AF1 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8AF2 CD 86 8B         call Modificaccionne
201+  8AF5 C1           	pop bc
202+  8AF6 CD 96 8B         call Inicializacion
203+  8AF9 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8AFA
205+  8AFA              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8AFA
207+  8AFA C5           4 push bc
208+  8AFB 01 9F 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8AFE 0A           	ld a,(bc)
210+  8AFF 3D           	dec a
211+  8B00 47           	ld b,a 											 ; Columnas-1 en B.
212+  8B01 7D           	ld a,l
213+  8B02 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8B03 CB 47        	bit 0,a
215+  8B05 28 03        	jr z,5F
216+  8B07 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8B08 18 2E        	jr 7F
218+  8B0A
219+  8B0A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8B0A
221+  8B0A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8B0B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8B0C 3A CB 85     	ld a,(Ctrl_0)
224+  8B0F CB 4F        	bit 1,a
225+  8B11 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8B13 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8B14
228+  8B14              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8B14
230+  8B14 1C               inc e
231+  8B15 1D               dec e
232+  8B16 20 07            jr nz,12F
233+  8B18 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8B19 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8B1A 22 A0 85     	ld (Posicion_actual),hl
236+  8B1D 18 44        13 jr 9F
237+  8B1F CB 43        12 bit 0,e
238+  8B21 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8B23              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8B23 C1           	pop bc
241+  8B24 18 D3        	jr 3B
242+  8B26 80           14 add b
243+  8B27 6F               ld l,a
244+  8B28 22 A0 85     	ld (Posicion_actual),hl
245+  8B2B CD 86 8B         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8B2E 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8B30 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8B32 32 CB 85         ld (Ctrl_0),a
249+  8B35 F1           	pop af
250+  8B36 18 2B        	jr 9F
251+  8B38
252+  8B38              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8B38
254+  8B38 F5           7 push af
255+  8B39 3A CB 85     	ld a,(Ctrl_0)
256+  8B3C CB 47        	bit 0,a
257+  8B3E 20 1D        	jr nz,8F
258+  8B40 F1           	pop af
259+  8B41
260+  8B41              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8B41
262+  8B41 1C           	inc e
263+  8B42 1D               dec e
264+  8B43 20 07            jr nz,10F
265+  8B45 90           	sub b
266+  8B46 6F               ld l,a
267+  8B47 22 A0 85     	ld (Posicion_actual),hl
268+  8B4A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8B4C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8B4C CB 43        10 bit 0,e
271+  8B4E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8B50              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8B50 C1           	pop bc
274+  8B51 18 A6        	jr 3B
275+  8B53 90           16 sub b
276+  8B54 6F               ld l,a
277+  8B55 22 A0 85     	ld (Posicion_actual),hl
278+  8B58 CD 86 8B         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8B5B 18 06            jr 9F
280+  8B5D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8B5F 32 CB 85         ld (Ctrl_0),a
282+  8B62 F1           	pop af
283+  8B63 C1           9 pop bc
284+  8B64 1E 00        	ld e,0
285+  8B66 CD 96 8B         call Inicializacion
286+  8B69 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8B6A 08           	ex af,af
288+  8B6B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8B6C 18 8B            jr 3B
290+  8B6E
291+  8B6E              ; --------------------
292+  8B6E
293+  8B6E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8B70 CD EA 8C     1 call PreviousScan
295+  8B73 10 FB            djnz 1B
296+  8B75 22 A0 85     	ld (Posicion_actual),hl
297+  8B78 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8B79 C9           	ret
299+  8B7A
300+  8B7A              ; --------------------
301+  8B7A
302+  8B7A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8B7C CD DB 8C     1 call NextScan
304+  8B7F 10 FB            djnz 1B
305+  8B81 22 A0 85     	ld (Posicion_actual),hl
306+  8B84 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8B85 C9           	ret
308+  8B86
309+  8B86              ; --------------------
310+  8B86              ;
311+  8B86              ;	22/01/23
312+  8B86              ;
313+  8B86              ;	E="1". Hemos cambiado de cuadrante.
314+  8B86              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8B86              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8B86
317+  8B86
318+  8B86              Modificaccionne
319+  8B86
320+  8B86 3A B2 85     	ld a,(Cuad_objeto)
321+  8B89 FE 02        	cp 2
322+  8B8B CC 6E 8B         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8B8E DC 6E 8B         call c,Modifica_Pos_actual
324+  8B91 C8           	ret z
325+  8B92 CD 7A 8B         call Modifica_Pos_actual2
326+  8B95 C9               ret
327+  8B96
328+  8B96              ; *************************************************************************************************************************************************************************************************
329+  8B96              ;
330+  8B96              ;	13/8/22
331+  8B96              ;
332+  8B96              ;	Inicializacion
333+  8B96              ;
334+  8B96              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8B96              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8B96              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8B96              ;
338+  8B96              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8B96              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8B96              ;	_ desaparece/aparece.
341+  8B96
342+  8B96              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8B96              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8B96              ;
345+  8B96              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8B96              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8B96              ; 		   [E] ="0"
348+  8B96
349+  8B96              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8B96
351+  8B96 CD 9B 8F     Inicializacion call calcula_tercio
352+  8B99 28 36        	jr z,primit
353+  8B9B E6 02        	and 2
354+  8B9D 20 07        	jr nz,segmit
355+  8B9F 7D           	ld a,l
356+  8BA0 FE 7F        	cp $7f
357+  8BA2 38 2D        	jr c,primit
358+  8BA4 28 2B        	jr z,primit
359+  8BA6 CD 03 8C     segmit call column
360+  8BA9 38 13        	jr c,tercuad
361+  8BAB 3E 04        cuarcuad ld a,4
362+  8BAD 32 B2 85     	ld (Cuad_objeto),a
363+  8BB0 21 20 48     	ld hl,$4820
364+  8BB3 22 D5 85     	ld (Limite_horizontal),hl
365+  8BB6 21 D7 85     	ld hl,Limite_vertical
366+  8BB9 36 0D        	ld (hl),$0d
367+  8BBB 08           	ex af,af
368+  8BBC 18 3C        	jr 1F
369+  8BBE              tercuad
370+  8BBE 3E 03        	ld a,3
371+  8BC0 32 B2 85     	ld (Cuad_objeto),a
372+  8BC3 21 20 48     	ld hl,$4820
373+  8BC6 22 D5 85     	ld (Limite_horizontal),hl
374+  8BC9 21 D7 85     	ld hl,Limite_vertical
375+  8BCC 36 12        	ld (hl),$12
376+  8BCE 08           	ex af,af
377+  8BCF 18 29        	jr 1F
378+  8BD1 CD 03 8C     primit call column
379+  8BD4 38 13        	jr c, primcuad
380+  8BD6              segcuad
381+  8BD6 3E 02        	ld a,2
382+  8BD8 32 B2 85     	ld (Cuad_objeto),a
383+  8BDB 21 C0 4F     	ld hl,$4fc0
384+  8BDE 22 D5 85     	ld (Limite_horizontal),hl
385+  8BE1 21 D7 85     	ld hl,Limite_vertical
386+  8BE4 36 0D        	ld (hl),$0d
387+  8BE6 08           	ex af,af
388+  8BE7 18 11        	jr 1F
389+  8BE9              primcuad
390+  8BE9 3E 01        	ld a,1
391+  8BEB 32 B2 85     	ld (Cuad_objeto),a
392+  8BEE 21 C0 4F     	ld hl,$4fc0
393+  8BF1 22 D5 85     	ld (Limite_horizontal),hl
394+  8BF4 21 D7 85     	ld hl,Limite_vertical
395+  8BF7 36 12        	ld (hl),$12
396+  8BF9 08           	ex af,af
397+  8BFA CD CD 92     1 call Genera_coordenadas
398+  8BFD 21 CB 85     	ld hl,Ctrl_0
399+  8C00 CB EE        	set 5,(hl)
400+  8C02 C9           	ret
401+  8C03
402+  8C03              ; ------------------------------------------------------------------------------------------------------------------
403+  8C03
404+  8C03              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8C03              ;
406+  8C03              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8C03
408+  8C03 7D           column ld a,l
409+  8C04 E6 1F        	and $1f
410+  8C06 FE 10         	cp $10
411+  8C08 C9            	ret
412+  8C09
413+  8C09              ; --------------------------------------------------------------------------------------------------------------------
414+  8C09              ;
415+  8C09              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8C09              ;
417+  8C09              ; 14/12/22
418+  8C09              ;
419+  8C09              ;	Modifica: A y BC.
420+  8C09
421+  8C09 3A B2 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8C0C E6 01        	and 1
423+  8C0E 28 17        	jr z,1F
424+  8C10
425+  8C10              ; Nos encontramos en la parte izquierda de la pantalla
426+  8C10
427+  8C10 3A A4 85     	ld a,(Coordenada_X)
428+  8C13 47           	ld b,a
429+  8C14 04           	inc b											; (Coordenada_X)+1 en B.
430+  8C15 79           	ld a,c
431+  8C16 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8C17 38 08        	jr c,2F
433+  8C19 47           	ld b,a
434+  8C1A 79           	ld a,c
435+  8C1B 90           	sub b
436+  8C1C 32 D4 85     	ld (Columnas),a
437+  8C1F 18 1B        	jr 4F
438+  8C21 79           2 ld a,c
439+  8C22 32 D4 85     	ld (Columnas),a
440+  8C25 18 15        	jr 4F
441+  8C27
442+  8C27              ; Nos encontramos en la parte derecha de la pantalla.
443+  8C27
444+  8C27 3A A4 85     1 ld a,(Coordenada_X)
445+  8C2A 81           	add c
446+  8C2B 3D           	dec a
447+  8C2C D6 1F        	sub $1f
448+  8C2E 38 08        	jr c,3F
449+  8C30 47           	ld b,a
450+  8C31 79           	ld a,c
451+  8C32 90           	sub b
452+  8C33 32 D4 85     	ld (Columnas),a
453+  8C36 18 04        	jr 4F
454+  8C38 79           3 ld a,c
455+  8C39 32 D4 85     	ld (Columnas),a
456+  8C3C D9           4 exx
457+  8C3D 4F           	ld c,a
458+  8C3E D9           	exx
459+  8C3F C9            ret
460+  8C40
461+  8C40              ; --------------------------------------------------------------------------------------------------------------------
462+  8C40              ;
463+  8C40              ; 7/1/23
464+  8C40              ;
465+  8C40              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8C40              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8C40              ;
468+  8C40              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8C40              ;	DESTRUYE: HL,B Y A.
470+  8C40
471+  8C40 3A B2 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8C43 FE 02        	cp 2
473+  8C45 38 18        	jr c,1F
474+  8C47 28 16        	jr z,1F
475+  8C49 E6 01        	and 1
476+  8C4B 28 0D        	jr z,3F
477+  8C4D
478+  8C4D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8C4D
480+  8C4D CD 89 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8C50
482+  8C50 7D           9 ld a,l
483+  8C51 E6 1F        	and $1f
484+  8C53 28 2A        	jr z,7F
485+  8C55 2B           	dec hl
486+  8C56 10 F8        	djnz 9B
487+  8C58 18 25        	jr 7F
488+  8C5A
489+  8C5A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8C5A
491+  8C5A 2A A0 85     3 ld hl,(Posicion_actual)
492+  8C5D 18 20        	jr 7F
493+  8C5F
494+  8C5F 28 14        1 jr z,2F
495+  8C61
496+  8C61              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8C61
498+  8C61 CD 89 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8C64 7D           4 ld a,l
500+  8C65 E6 1F        	and $1f
501+  8C67 28 03        	jr z,6F
502+  8C69 2B           	dec hl
503+  8C6A 10 F8        	djnz 4B
504+  8C6C 06 0F        6 ld b,15
505+  8C6E CD EA 8C     5 call PreviousScan
506+  8C71 10 FB        	djnz 5B
507+  8C73 18 0A        	jr 7F
508+  8C75
509+  8C75              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8C75
511+  8C75 CD 89 8C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8C78 06 0F        	ld b,15
513+  8C7A CD EA 8C     8 call PreviousScan
514+  8C7D 10 FB        	djnz 8B
515+  8C7F
516+  8C7F E5           7 push hl
517+  8C80 DD E1        	pop ix
518+  8C82
519+  8C82 2A A2 85     	ld hl,(Puntero_objeto)
520+  8C85 E5           	push hl
521+  8C86 FD E1        	pop iy
522+  8C88
523+  8C88 C9           	ret
524+  8C89
525+  8C89              ; --------------------------------------------------------------------------------------------------------------------
526+  8C89              ;
527+  8C89              ;	2/1/23
528+  8C89              ;
529+  8C89              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8C89              ;
531+  8C89              ;	Tras esta rutina tenemos:
532+  8C89              ;
533+  8C89              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8C89              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8C89              ;
536+  8C89              ;	DESTRUYE!!!!! HL,B y A.
537+  8C89
538+  8C89 2A A0 85     Operandos ld hl,(Posicion_actual)
539+  8C8C 3A D4 85     	ld a,(Columnas)
540+  8C8F 3D           	dec a
541+  8C90 20 01        	jr nz,1F
542+  8C92 3C           	inc a
543+  8C93 47           1 ld b,a
544+  8C94 C9           	ret
545+  8C95
546+  8C95              ; --------------------------------------------------------------------------------------------------------------------
547+  8C95              ;
548+  8C95              ;	3/1/23
549+  8C95              ;
550+  8C95              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8C95              ;
552+  8C95              ;	Destruye: A,B,HL y DE.
553+  8C95
554+  8C95              Define_rutina_de_impresion
555+  8C95
556+  8C95 3A 9F 85     	ld a,(Columns)
557+  8C98 47           	ld b,a
558+  8C99 3A D4 85     	ld a,(Columnas)
559+  8C9C B8           	cp b
560+  8C9D 20 0D        	jr nz,2f
561+  8C9F
562+  8C9F              ;	La entidad se imprime entera.
563+  8C9F
564+  8C9F 21 6B 8D     	ld hl, Indice_entidades_completas
565+  8CA2 E6 01        	and 1
566+  8CA4 28 02        	jr z,1F
567+  8CA6
568+  8CA6 23           	inc hl
569+  8CA7 23           	inc hl
570+  8CA8
571+  8CA8 CD 8C 87     1 call Extrae_address
572+  8CAB C9           	ret		;	ret
573+  8CAC
574+  8CAC              ;	La entidad no se imprime entera en pantalla.
575+  8CAC
576+  8CAC 3A B2 85     2 ld a,(Cuad_objeto)
577+  8CAF E6 01        	and 1
578+  8CB1 28 17        	jr z,3F
579+  8CB3
580+  8CB3              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8CB3
582+  8CB3 21 6F 8D     	ld hl, Indice_entidades_incompletas_izquierda
583+  8CB6 3A 9F 85     4 ld a,(Columns)
584+  8CB9 E6 01        	and 1
585+  8CBB 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8CBD
587+  8CBD 23           	inc hl
588+  8CBE 23           	inc hl
589+  8CBF
590+  8CBF 3A D4 85     	ld a,(Columnas)
591+  8CC2 E6 01        	and 1
592+  8CC4 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8CC6
594+  8CC6 23           	inc hl
595+  8CC7 23           	inc hl
596+  8CC8
597+  8CC8 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8CCA
599+  8CCA 21 75 8D     3 ld hl, Indice_entidades_incompletas_derecha
600+  8CCD 18 E7        	jr 4B
601+  8CCF
602+  8CCF              ; --------------------------------------------------------------------------------------------------------------------
603+  8CCF              ;
604+  8CCF              ;	Prepara_draw
605+  8CCF              ;
606+  8CCF              ;	Es una rutina de carga.
607+  8CCF              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8CCF              ;
609+  8CCF              ;	FUNCIONAMIENTO:
610+  8CCF              ;
611+  8CCF              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8CCF              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8CCF              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8CCF              ;
615+  8CCF              ;	DESTRUYE:
616+  8CCF              ;
617+  8CCF              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8CCF
619+  8CCF 21 9E 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8CD2 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8CD3 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8CD4 4E           	ld c,(hl)
623+  8CD5 2A A0 85     	ld hl,(Posicion_actual)
624+  8CD8 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8CDA C9           	ret
626+  8CDB
627+  8CDB              ;----------------------------------------------------------------------------------------------------------------
628+  8CDB              ;
629+  8CDB              ;	5/08/22
630+  8CDB              ;
631+  8CDB              ;   NextScan.
632+  8CDB              ;
633+  8CDB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8CDB              ;
635+  8CDB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8CDB              ;
637+  8CDB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8CDB              ;
639+  8CDB              ;       DESTRUIDOS: AF y HL !!!
640+  8CDB              ;
641+  8CDB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8CDB              ;
643+  8CDB
644+  8CDB 24           NextScan inc h          ; Incrementamos el scanline.
645+  8CDC 7C               ld a,h
646+  8CDD E6 07            and 7
647+  8CDF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8CE0
649+  8CE0 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8CE1 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8CE3 6F               ld l,a
652+  8CE4 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8CE5
654+  8CE5 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8CE6 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8CE8 67               ld h,a
657+  8CE9 C9               ret
658+  8CEA
659+  8CEA              ;----------------------------------------------------------------------------------------------------------------
660+  8CEA              ;
661+  8CEA              ;	5/08/22
662+  8CEA              ;
663+  8CEA              ;   PreviousScan.
664+  8CEA              ;
665+  8CEA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8CEA              ;
667+  8CEA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8CEA              ;
669+  8CEA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8CEA              ;
671+  8CEA              ;       DESTRUIDOS: AF y HL !!!
672+  8CEA              ;
673+  8CEA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8CEA              ;
675+  8CEA
676+  8CEA 7C           PreviousScan ld a,h
677+  8CEB 25               dec h               ; Dec H.
678+  8CEC E6 07            and 7
679+  8CEE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8CEF
681+  8CEF 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8CF0 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8CF2 6F               ld l,a
684+  8CF3 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8CF4
686+  8CF4 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8CF5 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8CF7 67               ld h,a
689+  8CF8 C9               ret
690+  8CF9
691+  8CF9              ; -----------------------------------------------------------------------------------
692+  8CF9              ;
693+  8CF9              ;	28/2/23
694+  8CF9              ;
695+  8CF9              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8CF9
697+  8CF9 3A E0 85     Extrae_foto_registros ld a,(Numero_de_malotes)
698+  8CFC A7           	and a
699+  8CFD C8           	ret z
700+  8CFE ED 73 E1 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
701+  8D02 31 00 70     	ld sp,Album_de_fotos
702+  8D05
703+  8D05 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
704+  8D07 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
705+  8D08 D1           	pop de																	; Dirección de la rutina de impresión en DE.
706+  8D09
707+  8D09 ED 73 E3 85  	ld (Stack_2),sp
708+  8D0D ED 7B E1 85  	ld sp,(Stack)
709+  8D11
710+  8D11              ; Fabrica la llamada a la correspondiente rutina de impresión.
711+  8D11
712+  8D11 3E CD        	ld a,$cd
713+  8D13 32 1B 8D     	ld (Imprime),a
714+  8D16 EB           	ex de,hl
715+  8D17 22 1C 8D     	ld (Imprime+1),hl
716+  8D1A EB           	ex de,hl
717+  8D1B
718+  8D1B              ; Ejecuta la llamada:	CALL $xx,xx
719+  8D1B
720+  8D1B 00 00 00     Imprime db 0,0,0
721+  8D1E
722+  8D1E 3A E0 85     	ld a,(Numero_de_malotes)
723+  8D21 3D           	dec a
724+  8D22 28 09        	jr z,1F
725+  8D24 32 E0 85      	ld (Numero_de_malotes),a
726+  8D27
727+  8D27 ED 7B E3 85   	ld sp,(Stack_2)
728+  8D2B 18 D8        	jr 2B
729+  8D2D
730+  8D2D AF           1 xor a
731+  8D2E 32 E3 85     	ld (Stack_2),a
732+  8D31 C9           	ret
733+  8D32
734+  8D32              ; -----------------------------------------------------------------------------------
735+  8D32              ;
736+  8D32              ;	28/2/23
737+  8D32              ;
738+  8D32              ;	Rutina principal de pintado de disparos.
739+  8D32
740+  8D32              Extrae_foto_registros_disparos
741+  8D32
742+  8D32 3A E9 85     	ld a,(Numero_de_disparotes)
743+  8D35 A7           	and a
744+  8D36 C8           	ret z
745+  8D37 ED 73 E1 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
746+  8D3B 31 50 70     	ld sp,Album_de_fotos_disparos
747+  8D3E
748+  8D3E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
749+  8D40 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
750+  8D41 D1           	pop de																	; Dirección de la rutina de impresión en DE.
751+  8D42
752+  8D42 ED 73 E3 85  	ld (Stack_2),sp
753+  8D46 ED 7B E1 85  	ld sp,(Stack)
754+  8D4A
755+  8D4A              ; Fabrica la llamada a la correspondiente rutina de impresión.
756+  8D4A
757+  8D4A 3E CD        	ld a,$cd
758+  8D4C 32 54 8D     	ld (Imprime2),a
759+  8D4F EB           	ex de,hl
760+  8D50 22 55 8D     	ld (Imprime2+1),hl
761+  8D53 EB           	ex de,hl
762+  8D54
763+  8D54              ; Ejecuta la llamada:	CALL $xx,xx
764+  8D54
765+  8D54 00 00 00     Imprime2 db 0,0,0
766+  8D57
767+  8D57 3A E9 85     	ld a,(Numero_de_disparotes)
768+  8D5A 3D           	dec a
769+  8D5B 28 09        	jr z,1F
770+  8D5D 32 E9 85      	ld (Numero_de_disparotes),a
771+  8D60
772+  8D60 ED 7B E3 85  	ld sp,(Stack_2)
773+  8D64 18 D8        	jr 2B
774+  8D66
775+  8D66 AF           1 xor a
776+  8D67 32 E3 85     	ld (Stack_2),a
777+  8D6A C9           	ret
778+  8D6B
# file closed: Draw_XOR.asm
838   8D6B              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8D6B              ;   índices de Rutinas de impresión.
  2+  8D6B
  3+  8D6B 7B 8D        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8D6D A8 8D            defw Pinta_Amadeus_3x2
  5+  8D6F
  6+  8D6F FE 8D        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8D71 9E 8E            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8D73 52 8E            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8D75
 10+  8D75 28 8E        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8D77 2C 8F            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8D79 E0 8E            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8D7B
 14+  8D7B
 15+  8D7B              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8D7B              ;
 17+  8D7B              ;   12/12/22
 18+  8D7B              ;
 19+  8D7B              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8D7B              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8D7B              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8D7B              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8D7B              ;
 24+  8D7B              ;   Modifica: DE y HL.
 25+  8D7B
 26+  8D7B ED 73 E1 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8D7F FD F9        	ld sp,iy
 28+  8D81 06 10            ld b,16
 29+  8D83 D1           1 pop de
 30+  8D84 7B               ld a,e
 31+  8D85 AE               xor (hl)
 32+  8D86 77           	ld (hl),a
 33+  8D87 23           	inc hl
 34+  8D88 7A               ld a,d
 35+  8D89 AE               xor (hl)
 36+  8D8A 77           	ld (hl),a
 37+  8D8B 2B           	dec hl
 38+  8D8C 24           	inc h
 39+  8D8D 7C               ld a,h
 40+  8D8E E6 07            and 7
 41+  8D90 20 0A            jr nz,2F
 42+  8D92 7D               ld a,l
 43+  8D93 C6 20            add a,$20
 44+  8D95 6F               ld l,a
 45+  8D96 38 04            jr c,2F
 46+  8D98 7C               ld a,h
 47+  8D99 D6 08            sub 8
 48+  8D9B 67               ld h,a
 49+  8D9C 7C           2 ld a,h
 50+  8D9D FE 58            cp $58
 51+  8D9F 28 02            jr z,3F
 52+  8DA1 10 E0            djnz 1B
 53+  8DA3 ED 7B E1 85  3 ld sp,(Stack)
 54+  8DA7 C9           	ret
 55+  8DA8
 56+  8DA8 ED 73 E1 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8DAC FD F9        	ld sp,iy
 58+  8DAE 06 08            ld b,8
 59+  8DB0 D1           1 pop de
 60+  8DB1 7B               ld a,e
 61+  8DB2 AE               xor (hl)
 62+  8DB3 77           	ld (hl),a
 63+  8DB4 23           	inc hl
 64+  8DB5 7A               ld a,d
 65+  8DB6 AE               xor (hl)
 66+  8DB7 77           	ld (hl),a
 67+  8DB8 23           	inc hl
 68+  8DB9 D1           	pop de
 69+  8DBA 7B               ld a,e
 70+  8DBB AE               xor (hl)
 71+  8DBC 77           	ld (hl),a
 72+  8DBD 2B           	dec hl
 73+  8DBE 2B           	dec hl
 74+  8DBF 24           	inc h
 75+  8DC0 7C               ld a,h
 76+  8DC1 E6 07            and 7
 77+  8DC3 20 0A            jr nz,2F
 78+  8DC5 7D               ld a,l
 79+  8DC6 C6 20            add a,$20
 80+  8DC8 6F               ld l,a
 81+  8DC9 38 04            jr c,2F
 82+  8DCB 7C               ld a,h
 83+  8DCC D6 08            sub 8
 84+  8DCE 67               ld h,a
 85+  8DCF 7C           2 ld a,h
 86+  8DD0 FE 58            cp $58
 87+  8DD2 28 25            jr z,4F
 88+  8DD4 7A               ld a,d
 89+  8DD5 AE               xor (hl)
 90+  8DD6 77               ld (hl),a
 91+  8DD7 D1           	pop de
 92+  8DD8 23           	inc hl
 93+  8DD9 7B               ld a,e
 94+  8DDA AE               xor (hl)
 95+  8DDB 77           	ld (hl),a
 96+  8DDC 23           	inc hl
 97+  8DDD 7A               ld a,d
 98+  8DDE AE               xor (hl)
 99+  8DDF 77           	ld (hl),a
100+  8DE0 2B           	dec hl
101+  8DE1 2B           	dec hl
102+  8DE2 24           	inc h
103+  8DE3 7C               ld a,h
104+  8DE4 E6 07            and 7
105+  8DE6 20 0A            jr nz,3F
106+  8DE8 7D               ld a,l
107+  8DE9 C6 20            add a,$20
108+  8DEB 6F               ld l,a
109+  8DEC 38 04            jr c,3F
110+  8DEE 7C               ld a,h
111+  8DEF D6 08            sub 8
112+  8DF1 67               ld h,a
113+  8DF2 7C           3 ld a,h
114+  8DF3 FE 58            cp $58
115+  8DF5 28 02            jr z,4F
116+  8DF7 10 B7            djnz 1B
117+  8DF9 ED 7B E1 85  4 ld sp,(Stack)
118+  8DFD C9           	ret
119+  8DFE
120+  8DFE              ; ---------------------------------------------------
121+  8DFE
122+  8DFE ED 73 E1 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8E02 FD F9        	ld sp,iy
124+  8E04
125+  8E04              ; >>>
126+  8E04
127+  8E04 06 10            ld b,16
128+  8E06 D1           1 pop de
129+  8E07 7A           	ld a,d
130+  8E08 AE           	xor (hl)
131+  8E09 77           	ld (hl),a
132+  8E0A 24           	inc h
133+  8E0B 7C               ld a,h
134+  8E0C E6 07            and 7
135+  8E0E 20 0C            jr nz,2F
136+  8E10 7D               ld a,l
137+  8E11 C6 20            add a,$20
138+  8E13 6F               ld l,a
139+  8E14 38 06            jr c,2F
140+  8E16 7C               ld a,h
141+  8E17 D6 08            sub 8
142+  8E19 67               ld h,a
143+  8E1A 18 00            jr 2F
144+  8E1C 7C           2 ld a,h
145+  8E1D FE 58            cp $58
146+  8E1F 28 02            jr z,3F
147+  8E21 10 E3            djnz 1B
148+  8E23 ED 7B E1 85  3 ld sp,(Stack)
149+  8E27 C9           	ret
150+  8E28
151+  8E28 ED 73 E1 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8E2C FD F9        	ld sp,iy
153+  8E2E
154+  8E2E              ; >>>
155+  8E2E
156+  8E2E 06 10            ld b,16
157+  8E30 D1           1 pop de
158+  8E31 7B           	ld a,e
159+  8E32 AE           	xor (hl)
160+  8E33 77           	ld (hl),a
161+  8E34 24           	inc h
162+  8E35 7C               ld a,h
163+  8E36 E6 07            and 7
164+  8E38 20 0C            jr nz,2F
165+  8E3A 7D               ld a,l
166+  8E3B C6 20            add a,$20
167+  8E3D 6F               ld l,a
168+  8E3E 38 06            jr c,2F
169+  8E40 7C               ld a,h
170+  8E41 D6 08            sub 8
171+  8E43 67               ld h,a
172+  8E44 18 00            jr 2F
173+  8E46 7C           2 ld a,h
174+  8E47 FE 58            cp $58
175+  8E49 28 02            jr z,3F
176+  8E4B 10 E3            djnz 1B
177+  8E4D ED 7B E1 85  3 ld sp,(Stack)
178+  8E51 C9           	ret
179+  8E52
180+  8E52              ; ---------------------------------------------------
181+  8E52
182+  8E52 ED 73 E1 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8E56 FD F9        	ld sp,iy
184+  8E58 06 08            ld b,8
185+  8E5A D1           1 pop de
186+  8E5B 7A           	ld a,d
187+  8E5C AE           	xor (hl)
188+  8E5D 77           	ld (hl),a
189+  8E5E 23           	inc hl
190+  8E5F D1           	pop de
191+  8E60 7B           	ld a,e
192+  8E61 AE           	xor (hl)
193+  8E62 77           	ld (hl),a
194+  8E63 2B           	dec hl
195+  8E64 24            	inc h
196+  8E65 7C               ld a,h
197+  8E66 E6 07            and 7
198+  8E68 20 0A            jr nz,2F
199+  8E6A 7D               ld a,l
200+  8E6B C6 20            add a,$20
201+  8E6D 6F               ld l,a
202+  8E6E 38 04            jr c,2F
203+  8E70 7C               ld a,h
204+  8E71 D6 08            sub 8
205+  8E73 67               ld h,a
206+  8E74 7C           2 ld a,h
207+  8E75 FE 58            cp $58
208+  8E77 28 20            jr z,4F
209+  8E79 D1               pop de
210+  8E7A 7B           	ld a,e
211+  8E7B AE           	xor (hl)
212+  8E7C 77           	ld (hl),a
213+  8E7D 23           	inc hl
214+  8E7E 7A           	ld a,d
215+  8E7F AE           	xor (hl)
216+  8E80 77           	ld (hl),a
217+  8E81 2B           	dec hl
218+  8E82 24           	inc h
219+  8E83 7C               ld a,h
220+  8E84 E6 07            and 7
221+  8E86 20 0A            jr nz,3F
222+  8E88 7D               ld a,l
223+  8E89 C6 20            add a,$20
224+  8E8B 6F               ld l,a
225+  8E8C 38 04            jr c,3F
226+  8E8E 7C               ld a,h
227+  8E8F D6 08            sub 8
228+  8E91 67               ld h,a
229+  8E92 7C           3 ld a,h
230+  8E93 FE 58            cp $58
231+  8E95 28 02            jr z,4F
232+  8E97 10 C1            djnz 1B
233+  8E99 ED 7B E1 85  4 ld sp,(Stack)
234+  8E9D C9           	ret
235+  8E9E
236+  8E9E ED 73 E1 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8EA2 FD F9        	ld sp,iy
238+  8EA4 06 08            ld b,8
239+  8EA6 D1           1 pop de
240+  8EA7 D1           	pop de
241+  8EA8 7B           	ld a,e
242+  8EA9 AE           	xor (hl)
243+  8EAA 77           	ld (hl),a
244+  8EAB 24            	inc h
245+  8EAC 7C               ld a,h
246+  8EAD E6 07            and 7
247+  8EAF 20 0A            jr nz,2F
248+  8EB1 7D               ld a,l
249+  8EB2 C6 20            add a,$20
250+  8EB4 6F               ld l,a
251+  8EB5 38 04            jr c,2F
252+  8EB7 7C               ld a,h
253+  8EB8 D6 08            sub 8
254+  8EBA 67               ld h,a
255+  8EBB 7C           2 ld a,h
256+  8EBC FE 58            cp $58
257+  8EBE 28 1B            jr z,4F
258+  8EC0 D1               pop de
259+  8EC1 7A           	ld a,d
260+  8EC2 AE           	xor (hl)
261+  8EC3 77           	ld (hl),a
262+  8EC4 24           	inc h
263+  8EC5 7C               ld a,h
264+  8EC6 E6 07            and 7
265+  8EC8 20 0A            jr nz,3F
266+  8ECA 7D               ld a,l
267+  8ECB C6 20            add a,$20
268+  8ECD 6F               ld l,a
269+  8ECE 38 04            jr c,3F
270+  8ED0 7C               ld a,h
271+  8ED1 D6 08            sub 8
272+  8ED3 67               ld h,a
273+  8ED4 7C           3 ld a,h
274+  8ED5 FE 58            cp $58
275+  8ED7 28 02            jr z,4F
276+  8ED9 10 CB            djnz 1B
277+  8EDB ED 7B E1 85  4 ld sp,(Stack)
278+  8EDF C9           	ret
279+  8EE0
280+  8EE0 ED 73 E1 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  8EE4 FD F9        	ld sp,iy
282+  8EE6 06 08            ld b,8
283+  8EE8 D1           1 pop de
284+  8EE9 7B           	ld a,e
285+  8EEA AE           	xor (hl)
286+  8EEB 77           	ld (hl),a
287+  8EEC 23           	inc hl
288+  8EED 7A           	ld a,d
289+  8EEE AE           	xor (hl)
290+  8EEF 77           	ld (hl),a
291+  8EF0 2B           	dec hl
292+  8EF1 24             	inc h
293+  8EF2 7C               ld a,h
294+  8EF3 E6 07            and 7
295+  8EF5 20 0A            jr nz,2F
296+  8EF7 7D               ld a,l
297+  8EF8 C6 20            add a,$20
298+  8EFA 6F               ld l,a
299+  8EFB 38 04            jr c,2F
300+  8EFD 7C               ld a,h
301+  8EFE D6 08            sub 8
302+  8F00 67               ld h,a
303+  8F01 7C           2 ld a,h
304+  8F02 FE 58            cp $58
305+  8F04 28 21            jr z,4F
306+  8F06 D1               pop de
307+  8F07 7A           	ld a,d
308+  8F08 AE           	xor (hl)
309+  8F09 77           	ld (hl),a
310+  8F0A 23           	inc hl
311+  8F0B D1               pop de
312+  8F0C 7B           	ld a,e
313+  8F0D AE           	xor (hl)
314+  8F0E 77           	ld (hl),a
315+  8F0F 2B           	dec hl
316+  8F10 24           	inc h
317+  8F11 7C               ld a,h
318+  8F12 E6 07            and 7
319+  8F14 20 0A            jr nz,3F
320+  8F16 7D               ld a,l
321+  8F17 C6 20            add a,$20
322+  8F19 6F               ld l,a
323+  8F1A 38 04            jr c,3F
324+  8F1C 7C               ld a,h
325+  8F1D D6 08            sub 8
326+  8F1F 67               ld h,a
327+  8F20 7C           3 ld a,h
328+  8F21 FE 58            cp $58
329+  8F23 28 02            jr z,4F
330+  8F25 10 C1            djnz 1B
331+  8F27 ED 7B E1 85  4 ld sp,(Stack)
332+  8F2B C9           	ret
333+  8F2C
334+  8F2C ED 73 E1 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  8F30 FD F9        	ld sp,iy
336+  8F32 06 08            ld b,8
337+  8F34 D1           1 pop de
338+  8F35 7B           	ld a,e
339+  8F36 AE           	xor (hl)
340+  8F37 77           	ld (hl),a
341+  8F38 24            	inc h
342+  8F39 7C               ld a,h
343+  8F3A E6 07            and 7
344+  8F3C 20 0A            jr nz,2F
345+  8F3E 7D               ld a,l
346+  8F3F C6 20            add a,$20
347+  8F41 6F               ld l,a
348+  8F42 38 04            jr c,2F
349+  8F44 7C               ld a,h
350+  8F45 D6 08            sub 8
351+  8F47 67               ld h,a
352+  8F48 7C           2 ld a,h
353+  8F49 FE 58            cp $58
354+  8F4B 28 1C            jr z,4F
355+  8F4D D1               pop de
356+  8F4E 7A           	ld a,d
357+  8F4F AE           	xor (hl)
358+  8F50 77           	ld (hl),a
359+  8F51 24           	inc h
360+  8F52 7C               ld a,h
361+  8F53 E6 07            and 7
362+  8F55 20 0A            jr nz,3F
363+  8F57 7D               ld a,l
364+  8F58 C6 20            add a,$20
365+  8F5A 6F               ld l,a
366+  8F5B 38 04            jr c,3F
367+  8F5D 7C               ld a,h
368+  8F5E D6 08            sub 8
369+  8F60 67               ld h,a
370+  8F61 7C           3 ld a,h
371+  8F62 FE 58            cp $58
372+  8F64 28 03            jr z,4F
373+  8F66 D1               pop de
374+  8F67 10 CB            djnz 1B
375+  8F69 ED 7B E1 85  4 ld sp,(Stack)
376+  8F6D C9           	ret
377+  8F6E
378+  8F6E              ; ---------------------------------------------------
379+  8F6E              ;
380+  8F6E              ;   27/02/23
381+  8F6E              ;
382+  8F6E              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  8F6E              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  8F6E              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  8F6E
386+  8F6E ED 73 E1 85  Pinta_Disparo ld (Stack),sp
387+  8F72 FD F9            ld sp,iy
388+  8F74 06 02            ld b,2
389+  8F76 D1           1 pop de
390+  8F77 7B               ld a,e
391+  8F78 AE               xor (hl)
392+  8F79 77               ld (hl),a
393+  8F7A 23               inc hl
394+  8F7B 7A               ld a,d
395+  8F7C AE               xor (hl)
396+  8F7D 77               ld (hl),a
397+  8F7E 2B               dec hl
398+  8F7F 24               inc h
399+  8F80 7C               ld a,h
400+  8F81 E6 07            and 7
401+  8F83 20 0A            jr nz,2F
402+  8F85 7D               ld a,l
403+  8F86 C6 20            add a,$20
404+  8F88 6F               ld l,a
405+  8F89 38 04            jr c,2F
406+  8F8B 7C               ld a,h
407+  8F8C D6 08            sub 8
408+  8F8E 67               ld h,a
409+  8F8F 7C           2 ld a,h
410+  8F90 FE 58            cp $58
411+  8F92 28 02            jr z,3F
412+  8F94 10 E0            djnz 1B
413+  8F96 ED 7B E1 85  3 ld sp,(Stack)
414+  8F9A C9               ret
# file closed: Rutinas_de_impresion_sprites.asm
839   8F9B              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  8F9B              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  8F9B              ;
  3+  8F9B              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  8F9B              ;
  5+  8F9B              ; *****************************************************************************************************************************************************************************************
  6+  8F9B              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  8F9B
  8+  8F9B 7C           calcula_tercio ld a,h
  9+  8F9C E6 18        	and $18
 10+  8F9E CB 2F        	sra a
 11+  8FA0 CB 2F        	sra a
 12+  8FA2 CB 2F        	sra a
 13+  8FA4 C9           	ret
 14+  8FA5
# file closed: calcula_tercio.asm
840   8FA5              	include "Cls.asm"
# file opened: Cls.asm
  1+  8FA5              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  8FA5              ;
  3+  8FA5              ;
  4+  8FA5              ;	CLS.
  5+  8FA5              ;
  6+  8FA5              ;	Limpia la pantalla y define sus atributos.
  7+  8FA5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  8FA5              ;
  9+  8FA5              ;	COLORES: 0 ..... NEGRO
 10+  8FA5              ;    		 1 ..... AZUL
 11+  8FA5              ; 			 2 ..... ROJO
 12+  8FA5              ;			 3 ..... MAGENTA
 13+  8FA5              ; 			 4 ..... VERDE
 14+  8FA5              ; 			 5 ..... CIAN
 15+  8FA5              ;			 6 ..... AMARILLO
 16+  8FA5              ; 			 7 ..... BLANCO
 17+  8FA5              ;
 18+  8FA5              ;	INPUT: A contiene los atributos de pantalla.
 19+  8FA5              ;
 20+  8FA5              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  8FA5
 22+  8FA5
 23+  8FA5 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  8FA8 11 01 40     	LD DE,$4001
 25+  8FAB 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  8FAE 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  8FB0 ED B0        	LDIR
 28+  8FB2 01 FF 02     	LD BC,767
 29+  8FB5 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  8FB6 ED B0        	LDIR
 31+  8FB8 C9           	ret
 32+  8FB9
# file closed: Cls.asm
841   8FB9              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  8FB9              ; ******************************************************************************************************************************************************************************************
  2+  8FB9              ;
  3+  8FB9              ;   22/01/23
  4+  8FB9              ;
  5+  8FB9              ;	Mov_down
  6+  8FB9              ;
  7+  8FB9              ; 	Mueve el Sprite X px hacia abajo.
  8+  8FB9              ;
  9+  8FB9              ;
 10+  8FB9 21 CB 85     Mov_down ld hl,Ctrl_0
 11+  8FBC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  8FBE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  8FBE              ; 																	; _ en el caso de que no lo haya.
 14+  8FBE 3A B6 85     	ld a,(Vel_down)
 15+  8FC1 47           	ld b,a
 16+  8FC2 2A A0 85         ld hl,(Posicion_actual)
 17+  8FC5 CD 9B 8F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  8FC8 E6 02        	and 2
 19+  8FCA 28 0F        	jr z,1F
 20+  8FCC
 21+  8FCC              ; Nos encontramos en el último tercio de pantalla.
 22+  8FCC              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  8FCC
 24+  8FCC 7C           	ld a,h
 25+  8FCD FE 57        	cp $57
 26+  8FCF 20 0A        	jr nz,1F
 27+  8FD1 7D           	ld a,l
 28+  8FD2 C6 20        	add $20
 29+  8FD4 30 05        	jr nc,1F
 30+  8FD6
 31+  8FD6              ; ------------------------------
 32+  8FD6 CD B7 92     	call Reaparece_arriba
 33+  8FD9              ;	call Reinicio
 34+  8FD9              ; ------------------------------
 35+  8FD9 18 08        	jr 3F
 36+  8FDB CD DB 8C     1 call NextScan
 37+  8FDE 22 A0 85     	ld (Posicion_actual),hl
 38+  8FE1 10 E2            djnz 2B
 39+  8FE3 CD CD 92     3 call Genera_coordenadas
 40+  8FE6 C9           	ret
 41+  8FE7
 42+  8FE7
 43+  8FE7              ; ******************************************************************************************************************************************************************************************
 44+  8FE7              ;
 45+  8FE7              ;   22/01/23
 46+  8FE7              ;
 47+  8FE7              ;	Mov_up
 48+  8FE7              ;
 49+  8FE7              ; 	Mueve el Sprite hacia arriba.
 50+  8FE7              ;
 51+  8FE7              ;
 52+  8FE7 21 CB 85     Mov_up ld hl,Ctrl_0
 53+  8FEA CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  8FEC              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  8FEC              ; 																		; _ en el caso de que no lo haya.
 56+  8FEC 3A B5 85     	ld a,(Vel_up)
 57+  8FEF 47           	ld b,a
 58+  8FF0 2A A0 85     	ld hl,(Posicion_actual)
 59+  8FF3 CD 9B 8F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  8FF6 A7           	and a
 61+  8FF7 20 10        	jr nz,1F
 62+  8FF9
 63+  8FF9              ; Nos encontramos en el 1er tercio de pantalla.
 64+  8FF9              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  8FF9
 66+  8FF9 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  8FFA FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  8FFC 20 0B            jr nz,1F
 69+  8FFE 7D               ld a,l
 70+  8FFF D6 20            sub $20
 71+  9001 30 06            jr nc,1F
 72+  9003 25               dec h
 73+  9004
 74+  9004              ; -----------------------------
 75+  9004 CD A7 92         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  9007              ;	call Reinicio
 77+  9007              ; -----------------------------
 78+  9007
 79+  9007 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  9009 CD EA 8C     1 call PreviousScan
 81+  900C 22 A0 85     	ld (Posicion_actual),hl
 82+  900F 10 E2            djnz 3B
 83+  9011 CD CD 92     2 call Genera_coordenadas
 84+  9014 C9           	ret
 85+  9015
 86+  9015              ; ******************************************************************************************************************************************************************************************
 87+  9015              ;
 88+  9015              ;	19/10/22
 89+  9015              ;
 90+  9015              ;	Mov_right.
 91+  9015              ;
 92+  9015              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  9015              ;
 94+  9015
 95+  9015 21 CB 85     Mov_right ld hl,Ctrl_0
 96+  9018 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  901A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  901A              ; 																	; _ en el caso de que no lo haya.
 99+  901A 3A CB 85     	ld a,(Ctrl_0)
100+  901D CB 77        	bit 6,a
101+  901F 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9021
103+  9021 CD 55 92     	call Stop_Amadeus_right
104+  9024 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  9025 18 4D        	jr 8F
106+  9027
107+  9027 3A A4 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  902A FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  902C 20 46        	jr nz,8F
110+  902E
111+  902E 3A A6 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  9031 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  9032 28 40        	jr z,8F
114+  9034
115+  9034              ; ---------- ---------- ----------
116+  9034              ;
117+  9034              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  9034
119+  9034 3A B4 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  9037 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  9039 28 11        	jr z,1F
122+  903B 38 06        	jr c,6F
123+  903D FE 04        	cp 4
124+  903F 28 14        	jr z,7F
125+  9041 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9043
127+  9043              ; ---------- ---------- ----------
128+  9043              ;
129+  9043              ; Perfiles de velocidad
130+  9043              ;
131+  9043
132+  9043 3A A6 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  9046 FE FE        	cp $fe
134+  9048 20 2A        	jr nz,8F
135+  904A 18 10        	jr 3F
136+  904C 3A A6 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  904F FE FD        	cp $fd
138+  9051 20 21        	jr nz,8F
139+  9053 18 07        	jr 3F
140+  9055 3A A6 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  9058 FE FB        	cp $fb
142+  905A 20 18        	jr nz,8F
143+  905C
144+  905C              ; ---------- ---------- ----------
145+  905C
146+  905C              3
147+  905C CD 95 92     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  905F              ;	call Reinicio
149+  905F
150+  905F              ; ---------- ---------- ----------
151+  905F              ;
152+  905F              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  905F
154+  905F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  9061 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  9062 CD 7B 90     	call DESPLZ_DER
157+  9065 C1           	pop bc
158+  9066 10 F9        	djnz 5B
159+  9068 2A A0 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  906B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  906C 22 A0 85     	ld (Posicion_actual),hl
162+  906F CD CD 92     	call Genera_coordenadas
163+  9072 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  9074
165+  9074              ; ---------- ---------- ----------
166+  9074
167+  9074 2A A0 85     8 ld hl,(Posicion_actual)
168+  9077 CD 7B 90     	call DESPLZ_DER
169+  907A C9           2 ret
170+  907B
171+  907B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  907B              ;
173+  907B              ;	22/9/22
174+  907B              ;
175+  907B
176+  907B CD 8A 90     DESPLZ_DER call Desplaza_derecha
177+  907E CD D6 90         call modifica_parametros_1er_DESPLZ_2
178+  9081 CD FF 90         call Ciclo_completo
179+  9084 21 CB 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  9087 CB FE        	set 7,(hl)
181+  9089 C9           	ret
182+  908A
183+  908A              ; ******************************************************************************************************************************************************************************************
184+  908A              ;	15/02/23
185+  908A              ;
186+  908A
187+  908A 3A B4 85     Desplaza_derecha ld a,(Vel_right)
188+  908D 47           	ld b,a
189+  908E 2A AC 85     	ld hl,(Puntero_DESPLZ_der)
190+  9091 23           1 inc hl
191+  9092 23           	inc hl
192+  9093 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  9095 22 AC 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  9098 CD 8C 87     	call Extrae_address
195+  909B 22 A2 85     	ld (Puntero_objeto),hl
196+  909E
197+  909E              ; Modifica (Puntero_DESPLZ_izq).
198+  909E
199+  909E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  909E              ; Cuántos movimientos hemos hecho ??
201+  909E              ; DE contiene (Puntero_DESPLZ_der).
202+  909E
203+  909E 2A A8 85     7 ld hl,(Indice_Sprite_der)
204+  90A1 EB           	ex de,hl
205+  90A2 A7           	and a
206+  90A3 ED 52        	sbc hl,de
207+  90A5 CB 3D        	srl l
208+  90A7 3E 08        6 ld a,8
209+  90A9 95           	sub l
210+  90AA 30 1E        	jr nc,3F
211+  90AC
212+  90AC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  90AC              ; B="0".
214+  90AC
215+  90AC 04           4 inc b
216+  90AD 3C           	inc a
217+  90AE 20 FC        	jr nz,4B
218+  90B0 78           	ld a,b
219+  90B1 08           	ex af,af
220+  90B2 2A A8 85     	ld hl,(Indice_Sprite_der)
221+  90B5 23           5 inc hl
222+  90B6 23           	inc hl
223+  90B7 10 FC        	djnz 5B
224+  90B9 22 AC 85     	ld (Puntero_DESPLZ_der),hl
225+  90BC CD 8C 87     	call Extrae_address
226+  90BF 22 A2 85     	ld (Puntero_objeto),hl
227+  90C2
228+  90C2              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  90C2              ; _(Posicion_actual).
230+  90C2
231+  90C2 21 A0 85     	ld hl,Posicion_actual
232+  90C5 34           	inc (hl)
233+  90C6 08               ex af,af
234+  90C7 6F           	ld l,a
235+  90C8 18 DD        	jr 6B
236+  90CA
237+  90CA              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  90CA
239+  90CA 47           3 ld b,a
240+  90CB 2A AA 85     	ld hl,(Indice_Sprite_izq)
241+  90CE 23           2 inc hl
242+  90CF 23           	inc hl
243+  90D0 10 FC        	djnz 2B
244+  90D2 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
245+  90D5 C9           8 ret
246+  90D6
247+  90D6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  90D6              ;
249+  90D6              ;	24/7/22
250+  90D6              ;
251+  90D6              ;	modifica_parametros_1er_DESPLZ_2
252+  90D6              ;
253+  90D6              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  90D6              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  90D6              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  90D6
257+  90D6 3A A6 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  90D9 A7           	and a
259+  90DA 20 1F        	jr nz,1F
260+  90DC D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  90DE 32 A6 85         ld (CTRL_DESPLZ),a
262+  90E1
263+  90E1 21 9F 85     	ld hl,Columns
264+  90E4 34           	inc (hl)
265+  90E5 3A B2 85     	ld a,(Cuad_objeto)
266+  90E8 E6 01        	and 1
267+  90EA 28 0F        	jr z,1F
268+  90EC 2A A0 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  90EF 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  90F0 22 A0 85     	ld (Posicion_actual),hl
271+  90F3 CD CD 92     	call Genera_coordenadas
272+  90F6 CD 61 92     	call Inc_CTRL_DESPLZ
273+  90F9 18 03        	jr 2F
274+  90FB CD 61 92     1 call Inc_CTRL_DESPLZ
275+  90FE C9           2 ret
276+  90FF
277+  90FF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  90FF              ;
279+  90FF              ;	24/7/22
280+  90FF              ;
281+  90FF              ;	Ciclo_completo.
282+  90FF              ;
283+  90FF              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  90FF              ;
285+  90FF              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  90FF              ; 	Decrementamos (Columns).
287+  90FF              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  90FF              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  90FF
290+  90FF
291+  90FF 3A A6 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  9102 FE FF        	cp $ff
293+  9104 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  9106 E6 F0        	and $f0
295+  9108 20 28        	jr nz,3F
296+  910A
297+  910A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  910A
299+  910A 3A A6 85     	ld a,(CTRL_DESPLZ)
300+  910D 47           	ld b,a
301+  910E 3E F8        	ld a,$f8
302+  9110 80           	add b
303+  9111 32 A6 85     	ld (CTRL_DESPLZ),a
304+  9114 18 1C        	jr 3F
305+  9116 21 9F 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  9119 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  911A AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  911B 32 A6 85     	ld (CTRL_DESPLZ),a
309+  911E 3A B2 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9121 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9123 20 0A        	jr nz,2F
312+  9125 2A A0 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  9128 23           	inc hl
314+  9129 22 A0 85     	ld (Posicion_actual),hl
315+  912C CD CD 92     	call Genera_coordenadas
316+  912F
317+  912F              ; Inicia el puntero de Sprite.
318+  912F
319+  912F CD A3 87     2 call Inicia_puntero_objeto_der
320+  9132 C9           3 ret
321+  9133
322+  9133              ; ******************************************************************************************************************************************************************************************
323+  9133              ;
324+  9133              ;	15/02/23
325+  9133              ;
326+  9133              ;	Mov_left.
327+  9133              ;
328+  9133              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  9133              ;
330+  9133              Mov_left
331+  9133
332+  9133 21 CB 85     	ld hl,Ctrl_0
333+  9136 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  9138              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  9138              ; 																	; _ en el caso de que no lo haya.
336+  9138 3A CB 85     	ld a,(Ctrl_0)
337+  913B CB 77        	bit 6,a
338+  913D 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  913F
340+  913F CD 5B 92     	call Stop_Amadeus_left
341+  9142 C8           	ret z
342+  9143 20 50        	jr nz,8F
343+  9145
344+  9145 3A A4 85     11 ld a,(Coordenada_X)
345+  9148 A7           	and a
346+  9149 20 4A        	jr nz,8F
347+  914B
348+  914B 3A A6 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  914E A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  914F 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  9151
352+  9151              ; ---------- ---------- ----------
353+  9151
354+  9151 3A B3 85     	ld a,(Vel_left)
355+  9154 FE 02        	cp 2
356+  9156 28 0F        	jr z,1F
357+  9158 38 04        	jr c,6F
358+  915A FE 04        	cp 4
359+  915C 28 12        	jr z,7F
360+  915E
361+  915E              ; ---------- ---------- ----------
362+  915E
363+  915E 3A A6 85     6 ld a,(CTRL_DESPLZ)
364+  9161 FE F9        	cp $f9
365+  9163 20 30        	jr nz,8F
366+  9165 18 10        	jr 4F
367+  9167 3A A6 85     1 ld a,(CTRL_DESPLZ)
368+  916A FE FA        	cp $fa
369+  916C 20 27        	jr nz,8F
370+  916E 18 07        	jr 4F
371+  9170 3A A6 85     7 ld a,(CTRL_DESPLZ)
372+  9173 FE FC        	cp $fc
373+  9175 20 1E        	jr nz,8F
374+  9177
375+  9177              ; ---------- ---------- ----------
376+  9177
377+  9177              4
378+  9177 CD 83 92     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  917A              ;	call Reinicio
380+  917A
381+  917A              ; ---------- ---------- ----------
382+  917A
383+  917A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  917C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  917D
386+  917D 2A AA 85     	ld hl,(Indice_Sprite_izq)
387+  9180 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
388+  9183
389+  9183 CD 9C 91     	call DESPLZ_IZQ
390+  9186 C1           	pop bc
391+  9187 10 F3        	djnz 5B
392+  9189 2A A0 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  918C 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  918D 22 A0 85     	ld (Posicion_actual),hl
395+  9190 CD CD 92     	call Genera_coordenadas
396+  9193 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  9195
398+  9195              ; ---------- ---------- ----------
399+  9195              ; Movemos, no hay recolocación.
400+  9195
401+  9195 2A A0 85     8 ld hl,(Posicion_actual)
402+  9198 CD 9C 91     	call DESPLZ_IZQ
403+  919B C9           2 ret
404+  919C
405+  919C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  919C              ;
407+  919C              ;	22/9/22
408+  919C
409+  919C              DESPLZ_IZQ
410+  919C
411+  919C CD AB 91     	call Desplaza_izquierda
412+  919F CD F7 91         call modifica_parametros_1er_DESPLZ
413+  91A2 CD 1F 92     	call Ciclo_completo_2
414+  91A5 21 CB 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  91A8 CB BE        	res 7,(hl)
416+  91AA C9           	ret
417+  91AB
418+  91AB              Desplaza_izquierda
419+  91AB
420+  91AB 3A B3 85     	ld a,(Vel_left)
421+  91AE 47           	ld b,a
422+  91AF 2A AE 85     	ld hl,(Puntero_DESPLZ_izq)
423+  91B2 23           1 inc hl
424+  91B3 23           	inc hl
425+  91B4 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  91B6 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
427+  91B9 CD 8C 87     	call Extrae_address
428+  91BC 22 A2 85     	ld (Puntero_objeto),hl
429+  91BF
430+  91BF              ; Modifica (Puntero_DESPLZ_der).
431+  91BF
432+  91BF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  91BF              ; Cuántos movimientos hemos hecho ??
434+  91BF              ; DE contiene (Puntero_DESPLZ_izq).
435+  91BF
436+  91BF 2A AA 85     7 ld hl,(Indice_Sprite_izq)
437+  91C2 EB           	ex de,hl
438+  91C3 A7           	and a
439+  91C4 ED 52        	sbc hl,de
440+  91C6 CB 3D        	srl l
441+  91C8 3E 08        6 ld a,8
442+  91CA 95           	sub l
443+  91CB 30 1E        	jr nc,3F
444+  91CD
445+  91CD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  91CD              ; B="0".
447+  91CD
448+  91CD 04           4 inc b
449+  91CE 3C           	inc a
450+  91CF 20 FC        	jr nz,4B
451+  91D1 78           	ld a,b
452+  91D2 08           	ex af,af
453+  91D3 2A AA 85     	ld hl,(Indice_Sprite_izq)
454+  91D6 23           5 inc hl
455+  91D7 23           	inc hl
456+  91D8 10 FC        	djnz 5B
457+  91DA 22 AE 85     	ld (Puntero_DESPLZ_izq),hl
458+  91DD CD 8C 87     	call Extrae_address
459+  91E0 22 A2 85     	ld (Puntero_objeto),hl
460+  91E3
461+  91E3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  91E3              ; _(Posicion_actual).
463+  91E3
464+  91E3 21 A0 85     	ld hl,Posicion_actual
465+  91E6 35           	dec (hl)
466+  91E7 08           	ex af,af
467+  91E8 6F           	ld l,a
468+  91E9 18 DD        	jr 6B
469+  91EB
470+  91EB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  91EB
472+  91EB 47           3 ld b,a
473+  91EC 2A A8 85     	ld hl,(Indice_Sprite_der)
474+  91EF 23           2 inc hl
475+  91F0 23           	inc hl
476+  91F1 10 FC        	djnz 2B
477+  91F3 22 AC 85     	ld (Puntero_DESPLZ_der),hl
478+  91F6 C9           8 ret
479+  91F7
480+  91F7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  91F7              ;
482+  91F7              ;	modifica_parametros_1er_DESPLZ
483+  91F7              ;
484+  91F7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  91F7              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  91F7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  91F7
488+  91F7 3A A6 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  91FA A7           	and a
490+  91FB 20 1E        	jr nz,1F
491+  91FD 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  91FE 32 A6 85         ld (CTRL_DESPLZ),a
493+  9201 21 9F 85     	ld hl,Columns
494+  9204 34           	inc (hl)
495+  9205 3A B2 85     	ld a,(Cuad_objeto)
496+  9208 E6 01        	and 1
497+  920A 20 0F        	jr nz,1F
498+  920C 2A A0 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  920F 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  9210 22 A0 85     	ld (Posicion_actual),hl
501+  9213 CD CD 92     	call Genera_coordenadas
502+  9216 CD 72 92     	call Dec_CTRL_DESPLZ
503+  9219 18 03        	jr 2F
504+  921B CD 72 92     1 call Dec_CTRL_DESPLZ
505+  921E C9           2 ret
506+  921F
507+  921F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  921F
509+  921F 3A A6 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  9222 FE F7        	cp $f7
511+  9224 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  9226 30 2C        	jr nc,3F
513+  9228
514+  9228              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  9228
516+  9228 06 00        	ld b,0
517+  922A 04           4 inc b
518+  922B 3C           	inc a
519+  922C FE F7        	cp $f7
520+  922E 20 FA        	jr nz,4B
521+  9230 3E FF        	ld a,$ff
522+  9232 90           	sub b
523+  9233 32 A6 85     	ld (CTRL_DESPLZ),a
524+  9236 18 1C        	jr 3F
525+  9238
526+  9238              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  9238
528+  9238 21 9F 85     1 ld hl,Columns
529+  923B 35           	dec (hl)
530+  923C AF           	xor a
531+  923D 32 A6 85     	ld (CTRL_DESPLZ),a
532+  9240 3A B2 85     	ld a,(Cuad_objeto)
533+  9243 E6 01        	and 1
534+  9245 28 0A        	jr z,2F
535+  9247 2A A0 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  924A 2B           	dec hl
537+  924B 22 A0 85     	ld (Posicion_actual),hl
538+  924E CD CD 92     	call Genera_coordenadas
539+  9251
540+  9251              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  9251
542+  9251 CD B6 87     2 call Inicia_puntero_objeto_izq
543+  9254 C9           3 ret
544+  9255
545+  9255              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  9255              ;
547+  9255              ;	19/10/22
548+  9255              ;
549+  9255              ;	(cp 29) para un Amadeus de 3 Columns.
550+  9255              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  9255
552+  9255 3A A4 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  9258 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  925A C9           	ret
555+  925B
556+  925B              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  925B              ;
558+  925B              ;	19/10/22
559+  925B              ;
560+  925B              ;	(cp 2) para un Amadeus de 3 Columns.
561+  925B              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  925B
563+  925B 3A A4 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  925E FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  9260 C9           	ret
566+  9261
567+  9261              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  9261              ;
569+  9261              ;	24/7/22
570+  9261              ;
571+  9261              ;	Inc_CTRL_DESPLZ
572+  9261              ;
573+  9261              ;
574+  9261              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  9261
576+  9261 21 A6 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  9264 3A B4 85     	ld a,(Vel_right)
578+  9267 A7           	and a
579+  9268 28 06        	jr z,1F
580+  926A 47           	ld b,a
581+  926B 34           3 inc (hl)
582+  926C 10 FD        	djnz 3B
583+  926E 18 01        	jr 2F
584+  9270 34           1 inc (hl)
585+  9271 C9           2 ret
586+  9272
587+  9272              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  9272              ;
589+  9272              ;	5/2/23
590+  9272              ;
591+  9272              ;	Dec_CTRL_DESPLZ
592+  9272              ;
593+  9272              ;
594+  9272              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  9272
596+  9272 21 A6 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  9275 3A B3 85     	ld a,(Vel_left)
598+  9278 A7           	and a
599+  9279 28 06        	jr z,1F
600+  927B 47           	ld b,a
601+  927C 35           3 dec (hl)
602+  927D 10 FD        	djnz 3B
603+  927F 18 01        	jr 2F
604+  9281 35           1 dec (hl)
605+  9282 C9           2 ret
606+  9283
607+  9283              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  9283
609+  9283 2A A0 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  9286 01 1F 00     	ld bc,31
611+  9289 A7           	and a
612+  928A ED 4A        	adc hl,bc
613+  928C 22 A0 85     	ld (Posicion_actual),hl
614+  928F 21 CB 85     	ld hl,Ctrl_0														; $xxx1
615+  9292 CB C6        	set 0,(hl)
616+  9294 C9           	ret
617+  9295
618+  9295              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  9295
620+  9295 2A A0 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  9298 01 1F 00     	ld bc,31
622+  929B A7           	and a
623+  929C ED 42        	sbc hl,bc
624+  929E 22 A0 85     	ld (Posicion_actual),hl 											; $xx1x
625+  92A1 21 CB 85     	ld hl,Ctrl_0
626+  92A4 CB CE        	set 1,(hl)
627+  92A6 C9           	ret
628+  92A7
629+  92A7              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  92A7
631+  92A7 24           Reaparece_abajo inc h
632+  92A8 01 E0 17     	ld bc,$17e0
633+  92AB A7           	and a
634+  92AC ED 4A        	adc hl,bc
635+  92AE 22 A0 85     	ld (Posicion_actual),hl
636+  92B1 21 CB 85     	ld hl,Ctrl_0
637+  92B4 CB D6        	set 2,(hl)
638+  92B6 C9           	ret
639+  92B7
640+  92B7              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  92B7
642+  92B7 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  92BA A7           	and a
644+  92BB ED 42        	sbc hl,bc
645+  92BD 22 A0 85     	ld (Posicion_actual),hl
646+  92C0 21 CB 85     	ld hl,Ctrl_0
647+  92C3 CB DE        	set 3,(hl)
648+  92C5 C9           	ret
649+  92C6
650+  92C6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  92C6
652+  92C6 2A B0 85     Reinicio ld hl,(Posicion_inicio)
653+  92C9 22 A0 85     	ld (Posicion_actual),hl
654+  92CC C9           	ret
# file closed: Direcciones.asm
842   92CD              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  92CD              ;	12/12/22
  2+  92CD              ;
  3+  92CD              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  92CD              ;	Fila superior "0", Columna izquierda "0".
  5+  92CD              ;
  6+  92CD              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  92CD              ;
  8+  92CD              ;	Modifica: A
  9+  92CD
 10+  92CD C5           Genera_coordenadas push bc
 11+  92CE E5           	push hl
 12+  92CF 2A A0 85     	ld hl,(Posicion_actual)
 13+  92D2 7D           	ld a,l
 14+  92D3 E6 1F        	and $1f
 15+  92D5 32 A4 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  92D8 CD 9B 8F     	call calcula_tercio
 17+  92DB 47           	ld b,a
 18+  92DC 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  92DD 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  92DF 7D           	ld a,l
 21+  92E0 E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  92E2 28 05        	jr z,2F
 23+  92E4 0C           1 inc c
 24+  92E5 D6 20        	sub 32
 25+  92E7 20 FB        	jr nz,1B
 26+  92E9 0C           2 inc c
 27+  92EA 04           	inc b
 28+  92EB 05           	dec b
 29+  92EC 28 04        	jr z,3F
 30+  92EE 3E E0        	ld a,$e0
 31+  92F0 10 F2        	djnz 1B
 32+  92F2 79           3 ld a,c
 33+  92F3 3D           	dec a
 34+  92F4 32 A5 85     	ld (Coordenada_y),a
 35+  92F7 E1           	pop hl
 36+  92F8 C1           	pop bc
 37+  92F9 C9           	ret
# file closed: Genera_coordenadas.asm
843   92FA              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  92FA
  2+  92FA
  3+  92FA              ;   11/8/22
  4+  92FA              ;
  5+  92FA              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  92FA              ;
  7+  92FA              ;   Mov_obj.asm
  8+  92FA              ;
  9+  92FA              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  92FA              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  92FA              ;
 12+  92FA              ;   Codificación:
 13+  92FA              ;
 14+  92FA              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  92FA
 16+  92FA              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  92FA
 18+  92FA 02 40 00     Arriba db 2,%01000000,0
 19+  92FD 02 80 00     Abajo db 2,%10000000,0
 20+  9300 02 20 00     Derecha db 2,%00100000,0
 21+  9303 02 10 00     Izquierda db 2,%00010000,0
 22+  9306 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  930A 60 42 60 40
 22+  930E 63
 23+  930F 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9313 22 A3 80 A0
 24+  9317 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  931B 84 A0 83 A0
 25+  931F 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9323 80 A3 22 A0
 26+  9327 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  932B 40 60 42 60
 27+  932F 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9333 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  9337 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  933B 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  933F 84
 31+  9340 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  9344 84 00
 32+  9346 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  934A 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  934E 1F 1F 1F 1F
 34+  9352 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  9356 1F 1F 1F 1F
 34+  935A 1F
 35+  935B 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  935F 2F 2F 2F 2F
 35+  9363 2F 2F
 36+  9365 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  9369 2F 2F 00
 37+  936C
 38+  936C
 39+  936C              ; ----- ----- ----- ----- -----
 40+  936C
 41+  936C 4A 93        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  936E 46 93        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  9370 03 93        Indice_mov_Izquierda defw Izquierda
 44+  9372 00 93        Indice_mov_Derecha defw Derecha
 45+  9374 FD 92        Indice_mov_Abajo defw Abajo
 46+  9376 FA 92        Indice_mov_Arriba defw Arriba
 47+  9378 37 93        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  937A 3B 93        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  937C 33 93        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  937E 40 93        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  9380 06 93        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  9382              ; ----- ----- ----- ----- -----
 53+  9382
 54+  9382 3A D1 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  9385 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  9386 28 02            jr z,1F
 57+  9388 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  938A 3A D2 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  938D C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  938F 32 D2 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  9392              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  9392 2A CF 85         ld hl,(Puntero_mov)
 63+  9395 7E               ld a,(hl)
 64+  9396 32 D1 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  9399 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  939A 22 CF 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  939D
 68+  939D 3A D3 85     Decoder ld a,(Repetimos_db)
 69+  93A0 A7               and a
 70+  93A1 20 0C            jr nz,12F
 71+  93A3 2A CF 85         ld hl,(Puntero_mov)
 72+  93A6 7E               ld a,(hl)
 73+  93A7 A7               and a
 74+  93A8 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  93AA E6 0F            and $0f
 76+  93AC 32 D3 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  93AF              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  93AF 2A CF 85     12 ld hl,(Puntero_mov)
 79+  93B2 CB 7E            bit 7,(hl)
 80+  93B4 28 03            jr z,2F
 81+  93B6 CD B9 8F         call Mov_down
 82+  93B9 2A CF 85     2 ld hl, (Puntero_mov)
 83+  93BC CB 76            bit 6,(hl)
 84+  93BE 28 03            jr z,3F
 85+  93C0 CD E7 8F         call Mov_up
 86+  93C3 2A CF 85     3 ld hl, (Puntero_mov)
 87+  93C6 CB 6E            bit 5,(hl)
 88+  93C8 28 03            jr z,4F
 89+  93CA CD 15 90         call Mov_right
 90+  93CD 2A CF 85     4 ld hl, (Puntero_mov)
 91+  93D0 CB 66            bit 4,(hl)
 92+  93D2 28 03            jr z,5F
 93+  93D4 CD 33 91         call Mov_left
 94+  93D7
 95+  93D7              ; ---------- --------- --------- ---------- ----------
 96+  93D7
 97+  93D7 3A D3 85     5 ld a,(Repetimos_db)
 98+  93DA A7               and a
 99+  93DB 28 07            jr z,6F
100+  93DD 3D               dec a
101+  93DE 32 D3 85         ld (Repetimos_db),a
102+  93E1 28 01            jr z,6f
103+  93E3 C9           11 ret
104+  93E4 21 D1 85     6 ld hl,Contador_db_mov
105+  93E7 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  93E8 2A CF 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  93EB 23               inc hl
108+  93EC 22 CF 85         ld (Puntero_mov),hl
109+  93EF 18 F2            jr 11B
110+  93F1 2A CD 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  93F4 3A D2 85         ld a,(Incrementa_puntero)
112+  93F7 47               ld b,a
113+  93F8 23           8 inc hl
114+  93F9 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  93FB 5E               ld e,(hl)
116+  93FC 23               inc hl
117+  93FD 56               ld d,(hl)
118+  93FE EB               ex de,hl
119+  93FF 22 CF 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9402 18 DF            jr 11B
121+  9404
122+  9404              ; ---------- --------- --------- ---------- ----------
123+  9404              ;
124+  9404              ;   11/8/22
125+  9404              ;
126+  9404              ;   Prepara_Puntero_mov
127+  9404
128+  9404 E5           Prepara_Puntero_mov push hl
129+  9405 D5               push de
130+  9406 2A CD 85         ld hl,(Puntero_indice_mov)
131+  9409 5E               ld e,(hl)
132+  940A 23               inc hl
133+  940B 56               ld d,(hl)
134+  940C EB               ex de,hl
135+  940D 22 CF 85         ld (Puntero_mov),hl
136+  9410 D1               pop de
137+  9411 E1               pop hl
138+  9412 C9               ret
139+  9413
140+  9413              ; ---------- --------- --------- ---------- ----------
141+  9413              ;
142+  9413              ;   11/8/22
143+  9413              ;
144+  9413              ;   Reinicia_el_movimiento
145+  9413
146+  9413 CD 04 94     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  9416 AF               xor a
148+  9417 32 D1 85         ld (Contador_db_mov),a
149+  941A 32 D2 85         ld (Incrementa_puntero),a
150+  941D
151+  941D              ;    jr $
152+  941D
153+  941D C3 82 93         jp Movimiento
154+  9420 C9               ret
155+  9421              ; ---------- --------- --------- ---------- ----------
156+  9421
157+  9421
158+  9421
159+  9421
160+  9421
161+  9421
162+  9421
163+  9421
164+  9421
165+  9421
166+  9421
167+  9421
168+  9421
169+  9421
170+  9421
171+  9421
172+  9421
173+  9421
# file closed: Patrones_de_mov.asm
844   9421              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  9421              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  9421              ;
  3+  9421              ;	3/1/23
  4+  9421              ;
  5+  9421              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  9421
  7+  9421              ;	ADC HL,SP	LD (addr),SP
  8+  9421              ;	ADD HL,SP	LD SP,(addr)
  9+  9421              ;	ADD IX,SP	LD SP,nn
 10+  9421              ; 	ADD IY,SP	LD SP,HL
 11+  9421              ;				LD SP,IX
 12+  9421              ;	DEC SP		LD SP,IY
 13+  9421
 14+  9421              ;	EX (SP),HL
 15+  9421              ;	EX (SP),IX
 16+  9421              ;	EX (SP),IY
 17+  9421
 18+  9421              ;	INC SP
 19+  9421
 20+  9421
 21+  9421                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 E1 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D8 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A E7 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6 18 03            jr 4F
 43+  7FB8
 44+  7FB8 2A E5 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 45+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 46+  7FBD
 47+  7FBD D1           1 pop de
 48+  7FBE 73               ld (hl),e
 49+  7FBF 23               inc hl
 50+  7FC0 72               ld (hl),d
 51+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 52+  7FC2 10 F9            djnz 1B
 53+  7FC4
 54+  7FC4 A7               and a
 55+  7FC5 28 05            jr z,5F
 56+  7FC7
 57+  7FC7 22 E7 85         ld (Stack_snapshot_disparos),hl
 58+  7FCA 18 03            jr 6F
 59+  7FCC
 60+  7FCC 22 E5 85     5 ld (Stack_snapshot),hl
 61+  7FCF ED 7B E1 85  6 ld sp,(Stack)
 62+  7FD3
 63+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 64+  7FD4
 65+  7FD4
# file closed: Guarda_foto_registros.asm
845   7FD4
846   7FD4              	SAVESNA "Pruebas.sna", START
847   7FD4
848   7FD4
849   7FD4
# file closed: Banco_de_pruebas.asm
