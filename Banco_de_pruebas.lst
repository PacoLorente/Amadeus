# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 48 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  9+  83E8              ;                    _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AF 84        	defw Entidad_1
 98+  846A EA 84        	defw Entidad_2
 99+  846C 25 85        	defw Entidad_3
100+  846E 60 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
128+  848E
129+  848E 00 00        	db 0,0											; Variables_de_borrado
130+  8490 00 00        	defw 0											;	" " " " " " "
131+  8492 00 00        	defw 0											;	" " " " " " "
132+  8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
133+  8498
134+  8498 00 00        	db 0,0											; Variables_de_pintado
135+  849A 00 00        	defw 0											;	" " " " " " "
136+  849C 00 00        	defw 0											;	" " " " " " "
137+  849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
138+  84A2
139+  84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
140+  84A4
141+  84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
142+  84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
143+  84AB
144+  84AB 00           	db 0 											; (Columnas).
145+  84AC 00 00        	defw 0											; (Limite_horizontal).
146+  84AE 00           	db 0											; (Limite_vertical).
147+  84AF
148+  84AF              ; ---------- ---------- ---------- ---------- ----------
149+  84AF
150+  84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
151+  84B1 00 00        	defw 0											; (Posicion_actual).
152+  84B3 00 00        	defw 0 											; (Puntero_objeto).
153+  84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
154+  84B8
155+  84B8 00           	db %00000000 									; (Attr).
156+  84B9
157+  84B9 00 00        	defw 0											; (Indice_Sprite_der).
158+  84BB 00 00        	defw 0											; (Indice_Sprite_izq).
159+  84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
160+  84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
161+  84C1
162+  84C1 00 00        	defw 0											; (Posicion_inicio).
163+  84C3 00           	db 0											; (Cuad_objeto).
164+  84C4
165+  84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
166+  84C8
167+  84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
168+  84C9
169+  84C9 00 00        	db 0,0										    ; Variables_de_borrado
170+  84CB 00 00        	defw 0											;	" " " " " " "
171+  84CD 00 00        	defw 0											;	" " " " " " "
172+  84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
173+  84D3
174+  84D3 00 00        	db 0,0											; Variables_de_pintado
175+  84D5 00 00        	defw 0											;	" " " " " " "
176+  84D7 00 00        	defw 0											;	" " " " " " "
177+  84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
178+  84DD
179+  84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
180+  84DF
181+  84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
182+  84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
183+  84E6
184+  84E6 00           	db 0 											; (Columnas).
185+  84E7 00 00        	defw 0											; (Limite_horizontal).
186+  84E9 00           	db 0											; (Limite_vertical).
187+  84EA
188+  84EA              ; ---------- ---------- ---------- ---------- ----------
189+  84EA
190+  84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
191+  84EC 00 00        	defw 0                                          ; (Posicion_actual).
192+  84EE 00 00        	defw 0											; (Puntero_objeto).
193+  84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
194+  84F3
195+  84F3 02           	db %00000010									; (Attr).
196+  84F4
197+  84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
198+  84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
199+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
200+  84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
201+  84FC
202+  84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
203+  84FE 03           	db 3											; (Cuad_objeto).
204+  84FF
205+  84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
206+  8503
207+  8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
208+  8504
209+  8504 00 00        	db 0,0											; Variables_de_borrado
210+  8506 00 00        	defw 0										 	;	" " " " " " "
211+  8508 00 00        	defw 0											;	" " " " " " "
212+  850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
213+  850E
214+  850E 00 00        	db 0,0											; Variables_de_pintado
215+  8510 00 00        	defw 0											;	" " " " " " "
216+  8512 00 00        	defw 0											;	" " " " " " "
217+  8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
218+  8518
219+  8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
220+  851A
221+  851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
222+  851E
223+  851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
224+  8521
225+  8521 00           	db 0 											; (Columnas).
226+  8522 00 00        	defw 0											; (Limite_horizontal).
227+  8524 00           	db 0											; (Limite_vertical).
228+  8525
229+  8525              ; ---------- ---------- ---------- ---------- ----------
230+  8525
231+  8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
232+  8527 00 00        	defw 0                                          ; (Posicion_actual).
233+  8529 00 00        	defw 0											; (Puntero_objeto).
234+  852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
235+  852E
236+  852E 04           	db %00000100									; (Attr).
237+  852F
238+  852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
239+  8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
240+  8533
241+  8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
242+  8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
243+  8537
244+  8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
245+  8539 01           	db 1											; (Cuad_objeto).
246+  853A
247+  853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
248+  853E
249+  853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
250+  853F
251+  853F 00 00        	db 0,0											; Variables_de_borrado
252+  8541 00 00        	defw 0										 	;	" " " " " " "
253+  8543 00 00        	defw 0											;	" " " " " " "
254+  8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
255+  8549
256+  8549 00 00        	db 0,0											; Variables_de_pintado
257+  854B 00 00        	defw 0											;	" " " " " " "
258+  854D 00 00        	defw 0											;	" " " " " " "
259+  854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
260+  8553
261+  8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
262+  8555
263+  8555 01 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
264+  8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
265+  855C
266+  855C 00           	db 0 											; (Columnas).
267+  855D 00 00        	defw 0											; (Limite_horizontal).
268+  855F 00           	db 0											; (Limite_vertical).
269+  8560
270+  8560              ; ---------- ---------- ---------- ---------- ----------
271+  8560
272+  8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
273+  8562 00 00        	defw 0                                          ; (Posicion_actual).
274+  8564 00 00        	defw 0 											; (Puntero_objeto).
275+  8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
276+  8569
277+  8569 01           	db %00000001									; (Attr).
278+  856A
279+  856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
280+  856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
281+  856E
282+  856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
283+  8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
284+  8572
285+  8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
286+  8574 00           	db 0											; (Cuad_objeto).
287+  8575
288+  8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
289+  8579
290+  8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
291+  857A
292+  857A 00 00        	db 0,0											; Variables_de_borrado
293+  857C 00 00        	defw 0										 	;	" " " " " " "
294+  857E 00 00        	defw 0											;	" " " " " " "
295+  8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
296+  8584
297+  8584 00 00        	db 0,0											; Variables_de_pintado
298+  8586 00 00        	defw 0											;	" " " " " " "
299+  8588 00 00        	defw 0											;	" " " " " " "
300+  858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
301+  858E
302+  858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
303+  8590
304+  8590 F1 95 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
305+  8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
306+  8597
307+  8597 00           	db 0 											; (Columnas).
308+  8598 00 00        	defw 0											; (Limite_horizontal).
309+  859A 00           	db 0											; (Limite_vertical).
310+  859B
# file closed: Entidades_y_disparos.asm
 21   859B
 22   859B              ; ******************************************************************************************************************************************************************************************
 23   859B              ; Constantes.
 24   859B              ; ******************************************************************************************************************************************************************************************
 25   859B              ;
 26   859B              ; 8/11/22
 27   859B              ;
 28   859B              ; Constantes generales.
 29   859B              ;
 30   859B
 31   859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   859B
 36   859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   859B              ;                               				        ; De momento situamos este almacén en $7000.
 39   859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   859B              ;                               				        ; De momento situamos este almacén en $7060.
 42   859B
 43   859B              ; ******************************************************************************************************************************************************************************************
 44   859B              ; Variables.
 45   859B              ; ******************************************************************************************************************************************************************************************
 46   859B              ;
 47   859B              ; 10/11/22
 48   859B              ;
 49   859B              ; Variables de DRAW. (Motor principal).
 50   859B              ;
 51   859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   859B
 53   859B 02           Filas db 2												; Filas. [DRAW]
 54   859C 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   85A3
 60   85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 61   85A3
 62   85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   85A4 04           Attr db %00000100										; Atributos de la entidad:
 66   85A5
 67   85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A5              ;
 69   85A5              ;	COLORES: 0 ..... NEGRO
 70   85A5              ;    		 1 ..... AZUL
 71   85A5              ; 			 2 ..... ROJO
 72   85A5              ;			 3 ..... MAGENTA
 73   85A5              ; 			 4 ..... VERDE
 74   85A5              ; 			 5 ..... CIAN
 75   85A5              ;			 6 ..... AMARILLO
 76   85A5              ; 			 7 ..... BLANCO
 77   85A5
 78   85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A9 00 00        Puntero_DESPLZ_der defw 0
 81   85AB 00 00        Puntero_DESPLZ_izq defw 0
 82   85AD
 83   85AD 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AF 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85B0
 86   85B0              ; Variables de objeto. (Características).
 87   85B0
 88   85B0 04           Vel_left db 4 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85B3 08           Vel_down db 8 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85B4
 93   85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 94   85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 95   85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 96   85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 97   85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 98   85B9 00 00        	defw 0
 99   85BB 00 00 00 00  	db 0,0,0,0
100   85BF
101   85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
102   85C1 00 00        	defw 0
103   85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
104   85C5 00 00 00 00  	db 0,0,0,0
105   85C9
106   85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
107   85C9
108   85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
109   85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
110   85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
111   85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
112   85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
113   85CA              ;
114   85CA              ; 														DESCRIPCIÖN:
115   85CA              ;
116   85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
117   85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
118   85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
119   85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
120   85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
121   85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
122   85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
123   85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
124   85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
125   85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
126   85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
127   85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
128   85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
129   85CA              ;
130   85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
131   85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
132   85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
133   85CA
134   85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
135   85CB
136   85CB              ; Movimiento.
137   85CB
138   85CB FF 95        Puntero_indice_mov defw Indice_mov_Escaloncitos_izquierda_abajo  ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
139   85CD 00 00        Puntero_mov defw 0
140   85CF 00           Contador_db_mov db 0
141   85D0 00           Incrementa_puntero db 0
142   85D1 00           Repetimos_db db 0
143   85D2
144   85D2              ; Variables de funcionamiento. [DRAW].
145   85D2
146   85D2 00           Columnas db 0
147   85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
148   85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
149   85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
150   85D6
151   85D6              ; 59 Bytes por entidad.
152   85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
153   85D6              ;					         		---------;      ;---------
154   85D6
155   85D6
156   85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
157   85D6
158   85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
159   85D7
160   85D7              ;														DESCRIPCIÓN:
161   85D7              ;
162   85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
163   85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
164   85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
165   85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
166   85D7
167   85D7
168   85D7
169   85D7
170   85D7
171   85D7
172   85D7              ; Gestión de ENTIDADES.
173   85D7
174   85D7 00 00        Puntero_store_entidades defw 0
175   85D9 00 00        Puntero_restore_entidades defw 0
176   85DB 00 00        Indice_restore defw 0
177   85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
178   85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
179   85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
180   85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
181   85DF              ;														; _ (Numero_de_malotes)="0".
182   85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
183   85E1              ;														; _variable para almacenar lo posición del puntero_
184   85E1              ; 														; _de pila, SP.
185   85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
186   85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
187   85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
188   85E5              ;														; _el snapshot de los registros de la siguiente entidad.
189   85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
190   85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
191   85E7              ;														; _el snapshot de los registros del siguiente disparo.
192   85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
193   85E7
194   85E7              ; Gestión de Disparos.
195   85E7
196   85E7 00           Numero_de_disparotes db 0
197   85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
198   85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
199   85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
200   85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
201   85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
202   85ED 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
203   85F0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
204   85F0 00 00 00     Coordenadas_X_Entidad ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
205   85F3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
206   85F3
207   85F3
208   85F3              ; Gestión de FRAMES.
209   85F3
210   85F3 00           Switch db 0
211   85F4
212   85F4              ; Variables de Raster y localización en pantalla.
213   85F4
214   85F4 00 FF        Temp_Raster defw $ff00
215   85F6
216   85F6              ; Rutina principal *************************************************************************************************************************************************************************
217   85F6              ;
218   85F6              ;	14/11/22
219   85F6
220   85F6 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
221   85F9
222   85F9 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
223   85FB ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
224   85FD ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
225   85FF F3           	DI
226   8600
227   8600 3E 07        	ld a,%00000111
228   8602 CD 15 92     	call Cls
229   8605
230   8605              ;	call Pinta_FILAS
231   8605
232   8605 CD 68 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
233   8608
234   8608 21 DD 85     	ld hl,Numero_de_entidades
235   860B 46           	ld b,(hl)
236   860C 04           	inc b
237   860D 05           	dec b
238   860E 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
239   8610
240   8610              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
241   8610              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
242   8610              ;	Pintamos el resto de entidades:
243   8610
244   8610 CD 61 87     	call Inicia_punteros_de_entidades
245   8613
246   8613              ;	INICIA ENTIDADES!!!!!
247   8613
248   8613 C5           1 push bc  												; Guardo el contador de entidades.
249   8614 CD BB 87      	call Inicia_Puntero_objeto
250   8617 CD 65 8C     	call Draw
251   861A CD A0 7F     	call Guarda_foto_registros
252   861D CD 03 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
253   8620 C1           	pop bc
254   8621 10 F0        	djnz 1B  											; Decremento el contador de entidades.
255   8623
256   8623              ; 	INICIA AMADEUS!!!!!
257   8623
258   8623 CD 44 88     3 call Restore_Amadeus
259   8626 CD BB 87     	call Inicia_Puntero_objeto
260   8629 CD 65 8C     	call Draw
261   862C CD A0 7F     	call Guarda_foto_registros
262   862F CD 56 88     	call Store_Amadeus
263   8632
264   8632              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
265   8632
266   8632 CD 77 87     	call Inicia_Puntero_Disparo_Entidades
267   8635 CD 7E 87     	call Inicia_Puntero_Disparo_Amadeus
268   8638
269   8638              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
270   8638
271   8638 CD 61 87     	call Inicia_punteros_de_entidades
272   863B CD 32 88     	call Restore_Primera_entidad
273   863E
274   863E 3A DD 85     	ld a,(Numero_de_entidades)
275   8641 3C           	inc a
276   8642 32 DE 85     	ld (Numero_de_malotes),a
277   8645
278   8645 FB           2 ei
279   8646 18 FD        	jr 2B
280   8648
281   8648              ; -----------------------------------------------------------------------------------
282   8648
283   8648              Frame
284   8648
285   8648              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
286   8648              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
287   8648
288   8648 3E 02            ld a,2
289   864A D3 FE            out ($fe),a
290   864C CD 69 8F     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
291   864F CD A2 8F     	call Extrae_foto_disparos
292   8652 3E 01            ld a,1
293   8654 D3 FE            out ($fe),a
294   8656
295   8656              ; ----------------------------------------------------------------------
296   8656
297   8656              ;	Existe colisión?????
298   8656
299   8656 3A EC 85     	ld a,(Impacto2)
300   8659 A7           	and a
301   865A 28 02        	jr z,5F
302   865C
303   865C              ; Bit 0 a "1" Impacto en entidad por disparo.
304   865C              ; Bit 1 a "1" Impacto en Amadeus por disparo.
305   865C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo).
306   865C
307   865C 18 FE        	jr $
308   865E
309   865E AF           5 xor a
310   865F 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
311   8662
312   8662 CD F7 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
313   8665 21 00 70     	ld hl,Album_de_fotos
314   8668 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
315   866B              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
316   866B 3A DD 85         ld a,(Numero_de_entidades)
317   866E 47               ld b,a
318   866F A7           	and a
319   8670 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
320   8672
321   8672 C5           2 push bc
322   8673 CD CC 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
323   8676
324   8676 3A C9 85     	ld a,(Ctrl_0)
325   8679 CB 67        	bit 4,a
326   867B 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
327   867D
328   867D              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
329   867D              ; Las entidades sólo generan disparo cuando se mueven.
330   867D              ; 16/02/23.
331   867D              ; [[[
332   867D CD 9F 88     	call Detecta_disparo_entidad
333   8680              ; ]]]
334   8680 CD 28 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
335   8683
336   8683 21 C9 85     1 ld hl,Ctrl_0
337   8686 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
338   8688 AF           	xor a
339   8689 32 CA 85     	ld (Obj_dibujado),a
340   868C
341   868C CD 03 88     6 call Store_Restore_entidades
342   868F C1           	pop bc
343   8690 10 E0        	djnz 2B
344   8692
345   8692              ; Tras la gestión de las entidades, ... AMADEUS.
346   8692
347   8692 CD 44 88     4 call Restore_Amadeus
348   8695 CD F9 86     	call Mov_Amadeus
349   8698
350   8698 3A EC 85     	ld a,(Impacto2)
351   869B CB 57        	bit 2,a
352   869D 28 03        	jr z,7F
353   869F
354   869F              ; Comprobamos posible colisión entre Amadeus y una entidad.
355   869F
356   869F CD B8 8A     	call Detecta_colision_nave_entidad
357   86A2
358   86A2 3A C9 85     7 ld a,(Ctrl_0)
359   86A5 CB 67        	bit 4,a
360   86A7 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
361   86A9 CD 28 87     	call Guarda_foto_entidad_a_pintar
362   86AC
363   86AC 21 C9 85     3 ld hl,Ctrl_0
364   86AF CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
365   86B1 AF           	xor a
366   86B2 32 CA 85     	ld (Obj_dibujado),a
367   86B5 CD 56 88     	call Store_Amadeus
368   86B8
369   86B8 CD 15 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
370   86BB
371   86BB              ; -----
372   86BB
373   86BB CD 61 87     	call Inicia_punteros_de_entidades
374   86BE CD 32 88     	call Restore_Primera_entidad
375   86C1
376   86C1              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
377   86C1
378   86C1 CD 85 87     	call Calcula_numero_de_malotes
379   86C4 CD 9D 87     	call Calcula_numero_de_disparotes
380   86C7
381   86C7 3E 04        	ld a,4
382   86C9 D3 FE        	out ($fe),a
383   86CB C9           	ret
384   86CC
385   86CC              ; --------------------------------------------------------------------------------------------------------------
386   86CC              ;
387   86CC              ;	27/03/23
388   86CC
389   86CC              Mov_obj
390   86CC
391   86CC              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
392   86CC
393   86CC AF           	xor a
394   86CD 32 CA 85     	ld (Obj_dibujado),a
395   86D0 CD 32 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
396   86D3              ;														; Obj_dibujado="0".
397   86D3              ; Movemos Entidades malignas.
398   86D3
399   86D3 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
400   86D6 24           	inc h                                               ; Salimos de la rutina.
401   86D7 25           	dec h
402   86D8 C8           	ret z
403   86D9
404   86D9 CD 03 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
405   86DC
406   86DC 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
407   86DF CB 67        	bit 4,a
408   86E1 C8           	ret z
409   86E2
410   86E2              ; Ha habido desplazamiento de la entidad maligna.
411   86E2              ; Ha llegado a zona de AMADEUS ???
412   86E2
413   86E2 3A A2 85     	ld a,(Coordenada_y)
414   86E5 FE 14        	cp $14
415   86E7 D4 5B 8A     	call nc, Compara_coordenadas_X
416   86EA
417   86EA              ; ---------
418   86EA
419   86EA 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
420   86EC 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
421   86EF CD 32 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
422   86F2 CD 49 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
423   86F5 CD 18 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
424   86F8 C9           	ret													; _de la misma.
425   86F9
426   86F9              ; --------------------------------------------------------------------------------------------------------------
427   86F9              ;
428   86F9              ;	29/1/23
429   86F9
430   86F9              Mov_Amadeus
431   86F9
432   86F9 AF           	xor a
433   86FA 32 CA 85     	ld (Obj_dibujado),a
434   86FD CD 32 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
435   8700              ;														; Obj_dibujado="0".
436   8700              ; Movemos Amadeus.
437   8700
438   8700 CD 7C 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
439   8703 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
440   8706 CB 67        	bit 4,a
441   8708 C8           	ret z
442   8709
443   8709              ; ---------
444   8709
445   8709 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
446   870B 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
447   870E CD 32 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
448   8711 CD 49 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
449   8714 CD 18 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
450   8717 C9           	ret													; _de la nave.
451   8718
452   8718              ; --------------------------------------------------------------------------------------------------------------
453   8718              ;
454   8718              ;	31/01/23
455   8718              ;
456   8718              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
457   8718
458   8718              Guarda_foto_entidad_a_borrar
459   8718
460   8718 CD 3F 8F     	call Prepara_draw
461   871B CD 79 8E     	call calcula_CColumnass
462   871E CD B0 8E     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
463   8721 CD 05 8F     	call Define_rutina_de_impresion
464   8724 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
465   8727 C9           	ret
466   8728
467   8728              ; --------------------------------------------------------------------------------------------------------------
468   8728              ;
469   8728              ;	31/01/23
470   8728              ;
471   8728              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
472   8728              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
473   8728
474   8728              Guarda_foto_entidad_a_pintar
475   8728
476   8728 CD 55 87     	call Repone_pintar
477   872B CD 65 8C     	call Draw
478   872E CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
479   8731 C9           	ret
480   8732
481   8732              ; --------------------------------------------------------------------------------------------------------------
482   8732              ;
483   8732              ;
484   8732
485   8732 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
486   8735 3A CA 85     	ld a,(Obj_dibujado)
487   8738 A7           	and a
488   8739 28 05        	jr z,1F
489   873B 11 BF 85     	ld de,Variables_de_pintado
490   873E 18 03        	jr 2F
491   8740 11 B5 85     1 ld de,Variables_de_borrado
492   8743 01 08 00     2 ld bc,8
493   8746 ED B0        	ldir
494   8748 C9           	ret
495   8749
496   8749              ; --------------------------------------------------------------------------------------------------------------
497   8749
498   8749 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
499   874C 11 9B 85     	ld de,Filas
500   874F 01 08 00     	ld bc,8
501   8752 ED B0        	ldir
502   8754 C9           	ret
503   8755
504   8755 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
505   8758 11 9B 85     	ld de,Filas
506   875B 01 08 00     	ld bc,8
507   875E ED B0        	ldir
508   8760 C9           	ret
509   8761
510   8761              ; *************************************************************************************************************************************************************
511   8761              ;
512   8761              ; 8/1/23
513   8761              ;
514   8761              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
515   8761              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
516   8761              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
517   8761
518   8761              ; Destruye HL y DE !!!!!
519   8761
520   8761              Inicia_punteros_de_entidades
521   8761
522   8761 21 68 84     	ld hl,Indice_de_entidades
523   8764 CD B5 87         call Extrae_address
524   8767 22 D7 85         ld (Puntero_store_entidades),hl
525   876A 21 6A 84     	ld hl,Indice_de_entidades+2
526   876D 22 DB 85     	ld (Indice_restore),hl
527   8770 CD B5 87     	call Extrae_address
528   8773 22 D9 85     	ld (Puntero_restore_entidades),hl
529   8776 C9               ret
530   8777
531   8777              ; *************************************************************************************************************************************************************
532   8777              ;
533   8777              ; 8/1/23
534   8777              ;
535   8777              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
536   8777
537   8777 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
538   877A 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
539   877D C9           	ret
540   877E 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
541   8781 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
542   8784 C9           	ret
543   8785
544   8785              ; -------------------------------------------------------------------------------------------------------------
545   8785              ;
546   8785              ; 28/2/23
547   8785              ;
548   8785
549   8785              Calcula_numero_de_malotes
550   8785
551   8785 21 00 70     	ld hl,Album_de_fotos
552   8788 EB           	ex de,hl
553   8789 2A E3 85     	ld hl,(Stack_snapshot)
554   878C
555   878C 06 00        	ld b,0
556   878E 7D           	ld a,l
557   878F 93           	sub e
558   8790 28 07        	jr z,1F
559   8792
560   8792              ; Nº de malotes no es "0".
561   8792
562   8792 D6 06        2 sub 6
563   8794 04           	inc b
564   8795 A7           	and a
565   8796 20 FA        	jr nz,2B
566   8798 78           	ld a,b
567   8799
568   8799 32 DE 85     1 ld (Numero_de_malotes),a
569   879C C9           	ret
570   879D
571   879D              ; -------------------------------------------------------------------------------------------------------------
572   879D              ;
573   879D              ; 28/2/23
574   879D              ;
575   879D
576   879D              Calcula_numero_de_disparotes
577   879D
578   879D 21 60 70     	ld hl,Album_de_fotos_disparos
579   87A0 EB           	ex de,hl
580   87A1 2A E5 85     	ld hl,(Stack_snapshot_disparos)
581   87A4
582   87A4 06 00        	ld b,0
583   87A6 7D           	ld a,l
584   87A7 93           	sub e
585   87A8 28 07        	jr z,1F
586   87AA
587   87AA              ; Nº de malotes no es "0".
588   87AA
589   87AA D6 06        2 sub 6
590   87AC 04           	inc b
591   87AD A7           	and a
592   87AE 20 FA        	jr nz,2B
593   87B0 78           	ld a,b
594   87B1
595   87B1 32 E7 85     1 ld (Numero_de_disparotes),a
596   87B4 C9           	ret
597   87B5              ; *************************************************************************************************************************************************************
598   87B5              ;
599   87B5              ; 20/10/22
600   87B5              ;
601   87B5              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
602   87B5              ;
603   87B5              ; Destruye el puntero y DE !!!!!
604   87B5
605   87B5 5E           Extrae_address ld e,(hl)
606   87B6 23           	inc hl
607   87B7 56           	ld d,(hl)
608   87B8 2B           	dec hl
609   87B9 EB           	ex de,hl
610   87BA C9           	ret
611   87BB
612   87BB              ; *************************************************************************************************************************************************************
613   87BB              ;
614   87BB              ;	7/2/23
615   87BB              ;
616   87BB              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
617   87BB              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
618   87BB              ;
619   87BB              ;   Destruye HL y BC !!!!!,
620   87BB              ;
621   87BB              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
622   87BB              ;					"0" ..... Izquierda.
623   87BB
624   87BB              Inicia_Puntero_objeto
625   87BB
626   87BB 3A AF 85     	ld a,(Cuad_objeto)
627   87BE E6 01        	and 1
628   87C0 F5           	push af
629   87C1 CC DF 87     	call z,Inicia_puntero_objeto_izq
630   87C4 F1           	pop af
631   87C5 28 2B        	jr z,1F
632   87C7 CD CC 87     	call Inicia_puntero_objeto_der
633   87CA 18 26        	jr 1F
634   87CC
635   87CC              ; Arrancamos desde la parte izquierda de la pantalla.
636   87CC              ; Iniciamos (Indice_Sprite_der).
637   87CC
638   87CC 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
639   87CF 22 A9 85     	ld (Puntero_DESPLZ_der),hl
640   87D2 CD B5 87     	call Extrae_address
641   87D5 22 9F 85     	ld (Puntero_objeto),hl
642   87D8
643   87D8 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
644   87DB              ;	call Extrae_address
645   87DB 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
646   87DE C9           	ret
647   87DF
648   87DF              ; Arrancamos desde la parte derecha de la pantalla.
649   87DF              ; Iniciamos (Indice_Sprite_izq).
650   87DF
651   87DF 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
652   87E2 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
653   87E5 CD B5 87     	call Extrae_address
654   87E8 22 9F 85     	ld (Puntero_objeto),hl
655   87EB
656   87EB 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
657   87EE              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
658   87EE 22 A9 85     	ld (Puntero_DESPLZ_der),hl
659   87F1 C9           	ret
660   87F2
661   87F2              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
662   87F2
663   87F2 21 38 83     1 ld hl,Amadeus
664   87F5 ED 4B 9F 85  	ld bc,(Puntero_objeto)
665   87F9 B7 ED 42     	sub hl,bc
666   87FC C0           	ret nz
667   87FD 21 C9 85     	ld hl,Ctrl_0
668   8800 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
669   8802 C9           	ret 												; _de nuestra nave en los extremos.
670   8803
671   8803              ; *************************************************************************************************************************************************************
672   8803              ;
673   8803              ;	8/1/23
674   8803              ;
675   8803              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
676   8803              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
677   8803
678   8803              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
679   8803              ;	_de la 2ª y 3ª entidad respectivamente.
680   8803
681   8803              Store_Restore_entidades
682   8803
683   8803 E5           	push hl
684   8804 D5           	push de
685   8805 C5            	push bc
686   8806
687   8806              ;	STORE !!!!!
688   8806              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
689   8806
690   8806 21 9B 85     	ld hl,Filas
691   8809 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
692   880D 01 3B 00     	ld bc,59
693   8810 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
694   8812
695   8812              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
696   8812
697   8812 2A D9 85     	ld hl,(Puntero_restore_entidades)
698   8815 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
699   8818 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
700   881B 01 3B 00     	ld bc,59
701   881E ED B0        	ldir
702   8820
703   8820              ;	Incrementa RESTORE !!!!!
704   8820
705   8820 2A DB 85         ld hl,(Indice_restore)
706   8823 23           	inc hl
707   8824 23           	inc hl
708   8825 22 DB 85     	ld (Indice_restore),hl
709   8828 CD B5 87         call Extrae_address
710   882B 22 D9 85         ld (Puntero_restore_entidades),hl
711   882E C1           	pop bc
712   882F D1           	pop de
713   8830 E1           	pop hl
714   8831 C9           	ret
715   8832
716   8832              ; **************************************************************************************************
717   8832              ;
718   8832              ;	29/10/22
719   8832              ;
720   8832              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
721   8832
722   8832 E5           Restore_Primera_entidad push hl
723   8833 D5           	push de
724   8834 C5            	push bc
725   8835 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
726   8838 11 9B 85     	ld de,Filas
727   883B 01 3B 00     	ld bc,59
728   883E ED B0        	ldir
729   8840 C1           	pop bc
730   8841 D1           	pop de
731   8842 E1           	pop hl
732   8843 C9           	ret
733   8844
734   8844              ; **************************************************************************************************
735   8844              ;
736   8844              ;	25/01/23
737   8844              ;
738   8844              ;	Restore_Amadeus
739   8844              ;
740   8844              ;	Cargamos en DRAW los parámetros de Amadeus.
741   8844              ;
742   8844
743   8844 E5           Restore_Amadeus	push hl
744   8845 D5           	push de
745   8846 C5            	push bc
746   8847 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
747   884A 11 9B 85     	ld de,Filas
748   884D 01 3B 00     	ld bc,59
749   8850 ED B0        	ldir
750   8852 C1           	pop bc
751   8853 D1           	pop de
752   8854 E1           	pop hl
753   8855 C9           	ret
754   8856
755   8856              ; *************************************************************************************************************************************************************
756   8856              ;
757   8856              ;	29/01/23
758   8856              ;
759   8856              ;	Store_Amadeus
760   8856              ;
761   8856              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
762   8856              ;
763   8856
764   8856 E5           Store_Amadeus push hl
765   8857 D5           	push de
766   8858 C5            	push bc
767   8859 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
768   885C 11 74 84     	ld de,Amadeus_db
769   885F 01 3B 00     	ld bc,59
770   8862 ED B0        	ldir
771   8864 C1           	pop bc
772   8865 D1           	pop de
773   8866 E1           	pop hl
774   8867 C9           	ret
775   8868
776   8868              ; **************************************************************************************************
777   8868
778   8868              ; Teclado.
779   8868
780   8868 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
781   886A DB FE        	in a,($fe)
782   886C E6 01        	and $01
783   886E 28 02        	jr z,1f
784   8870 18 F6        	jr Pulsa_ENTER
785   8872 C9           1 ret
786   8873
787   8873              ; **************************************************************************************************
788   8873              ;
789   8873              ; Temporización.
790   8873
791   8873              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
792   8873              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
793   8873              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
794   8873              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
795   8873
796   8873              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
797   8873              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
798   8873              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
799   8873
800   8873              ; A partir de $4f61 no hace falta DELAY.
801   8873
802   8873              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
803   8873
804   8873 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
805   8876 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
806   8877 78           	LD A,B
807   8878 A7           	AND A
808   8879 20 FB        	JR NZ,wait
809   887B C9           	RET
810   887C
811   887C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
812   887C              ;
813   887C              ;	5/3/23
814   887C              ;
815   887C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
816   887C
817   887C              Movimiento_Amadeus
818   887C
819   887C              ; Disparo.
820   887C
821   887C 3E F7        	ld a,$f7												; "5" para disparar.
822   887E DB FE        	in a,($fe)
823   8880 E6 10        	and $10
824   8882 CC DC 88     	call z,Genera_disparo
825   8885
826   8885 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
827   8887 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
828   8889 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
829   888B CC A3 93         call z,Mov_left											;			"			"			"			"			"			"			"			"
830   888E 3E F7        	ld a,$f7
831   8890 DB FE        	in a,($fe)
832   8892 E6 01        	and $01
833   8894 C8           	ret z
834   8895
835   8895 3E F7        	ld a,$f7
836   8897 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
837   8899 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
838   889B CC 85 92     	call z,Mov_right										;			"			"			"			"			"			"			"			"
839   889E C9           	ret
840   889F
841   889F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
842   889F              ;
843   889F              ;	Rutina provisional para que los malotes cagen balas.
844   889F
845   889F 3E 7F        Detecta_disparo_entidad ld a,$7f
846   88A1 DB FE        	in a,($fe)
847   88A3 E6 01        	and 1
848   88A5 C0           	ret nz
849   88A6 CD DC 88     	call Genera_disparo
850   88A9 C9           	ret
851   88AA
852   88AA              ; Pinta indicadores de FILAS. ------------------------------------------------------
853   88AA
854   88AA 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
855   88AD
856   88AD              ; ----------
857   88AD 06 20        	ld b,32
858   88AF E5           2 push hl
859   88B0 C5           	push bc
860   88B1              ; ----------
861   88B1
862   88B1 06 BF        	ld b,$bf
863   88B3 36 80        1 ld (hl),%10000000
864   88B5 CD 4B 8F     	call NextScan
865   88B8 10 F9        	djnz 1B
866   88BA
867   88BA              ; ----------
868   88BA C1           	pop bc
869   88BB E1           	pop hl
870   88BC 2C           	inc l
871   88BD 10 F0        	djnz 2B
872   88BF              ; ----------
873   88BF
874   88BF 06 03        	ld b,3
875   88C1 21 00 47         ld hl,$4700
876   88C4 CD CA 88     3 call Bucle_1
877   88C7 10 FB            djnz 3B
878   88C9 C9               ret
879   88CA
880   88CA C5           Bucle_1 push bc
881   88CB E5                   push hl
882   88CC D1                   pop de
883   88CD 13                   inc de
884   88CE 01 FF 00             ld bc,255
885   88D1 36 FF                ld (hl),255
886   88D3 ED B0                ldir
887   88D5 23                   inc hl
888   88D6 3E 07                ld a,7
889   88D8 84                   add a,h
890   88D9 67                   ld h,a
891   88DA C1                   pop bc
892   88DB C9                   ret
893   88DC
894   88DC              ; ---------------------------------------------------------------
895   88DC
896   88DC              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88DC              ; ******************************************************************************************************************************************************************************************
  2+  88DC              ;
  3+  88DC              ;   27/03/23
  4+  88DC              ;
  5+  88DC              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88DC              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88DC              ;
  8+  88DC              ;
  9+  88DC              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88DC              ;
 11+  88DC              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88DC              ;               _ hacen las entidades hacia abajo.
 13+  88DC              ;
 14+  88DC              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88DC              ;
 16+  88DC              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88DC              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88DC              ;
 19+  88DC              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88DC              ;           _ la bala.
 21+  88DC              ;
 22+  88DC              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88DC              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88DC              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88DC              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88DC              ;           _ en el momento de generarse la bala)).
 27+  88DC
 28+  88DC              Genera_disparo
 29+  88DC
 30+  88DC              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88DC              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88DC              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88DC              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88DC              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88DC              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88DC              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88DC
 38+  88DC              ; Exclusiones:
 39+  88DC
 40+  88DC 3A D2 85         ld a,(Columnas)
 41+  88DF 47               ld b,a
 42+  88E0 3A 9C 85         ld a,(Columns)
 43+  88E3 B8               cp b
 44+  88E4 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 45+  88E5
 46+  88E5              ; ----- ----- -----
 47+  88E5
 48+  88E5 3A C9 85         ld a,(Ctrl_0)                       ; Una entidad no podrá disparar si se encuentra por_
 49+  88E8 CB 77            bit 6,a                             ; _ debajo de la fila "$14" de pantalla.
 50+  88EA 20 06            jr nz,16F
 51+  88EC
 52+  88EC 3A A2 85         ld a,(Coordenada_y)
 53+  88EF FE 14            cp $14
 54+  88F1 D0               ret nc
 55+  88F2
 56+  88F2              ; ----- ----- -----
 57+  88F2
 58+  88F2              ; Habilita el segundo disparo si el primero ha superado la línea $4860
 59+  88F2
 60+  88F2 21 F2 83     16 ld hl,ON_Disparo_2A
 61+  88F5 CD B5 87         call Extrae_address
 62+  88F8 24               inc h
 63+  88F9 25               dec h
 64+  88FA 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
 65+  88FC
 66+  88FC 11 60 48         ld de,$4860                         ; Si el 1er disparo no ha llegado a esta línea no se autoriza el segundo. RET.
 67+  88FF A7               and a
 68+  8900 ED 52            sbc hl,de
 69+  8902 D0               ret nc
 70+  8903
 71+  8903              ; ----- ----- -----
 72+  8903
 73+  8903 21 00 80     14 ld hl,Indice_disparo
 74+  8906 3A A3 85         ld a,(CTRL_DESPLZ)
 75+  8909 4F               ld c,a
 76+  890A 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 77+  890C              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 78+  890C              ;                                            ""        ""       "f9", B="1"
 79+  890C              ;                                            ""        ""       "fb", B="2"
 80+  890C              ;                                            ""        ""       "fb", B="3"
 81+  890C A7               and a
 82+  890D 28 10            jr z,1F
 83+  890F E6 01            and 1
 84+  8911 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 85+  8912
 86+  8912 79               ld a,c
 87+  8913 16 F9            ld d,$f9
 88+  8915 23           2 inc hl
 89+  8916 23               inc hl
 90+  8917 04               inc b
 91+  8918 BA               cp d
 92+  8919 28 04            jr z,1F
 93+  891B 14               inc d
 94+  891C 14               inc d
 95+  891D 18 F6            jr 2B
 96+  891F
 97+  891F CD B5 87     1 call Extrae_address
 98+  8922 E5               push hl
 99+  8923 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
100+  8925 DD 21 DE 91  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
101+  8929
102+  8929              ;	Se cumplen las condiciones necesarias para generar un disparo.
103+  8929              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
104+  8929
105+  8929 3A AF 85     	ld a,(Cuad_objeto)
106+  892C FE 02            cp 2
107+  892E 38 60            jr c,3F
108+  8930 28 5E            jr z,3F
109+  8932
110+  8932              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
111+  8932
112+  8932 E6 01            and 1
113+  8934 28 2D            jr z,4F
114+  8936
115+  8936              ; 	Estamos en el 3er cuadrante de pantalla.
116+  8936              ; 	3er CUAD. ----- ----- ----- ----- -----
117+  8936              ;
118+  8936              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
119+  8936              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
120+  8936              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
121+  8936
122+  8936 2A 9D 85     	ld hl,(Posicion_actual)
123+  8939
124+  8939              ;   Amadeus o entidad ???.
125+  8939
126+  8939 3A C9 85         ld a,(Ctrl_0)
127+  893C CB 77            bit 6,a
128+  893E 28 0D            jr z,8F
129+  8940
130+  8940              ; 	Dispara Amadeus.
131+  8940
132+  8940 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
133+  8942 CD 5A 8F         call PreviousScan
134+  8945 CD 5A 8F         call PreviousScan
135+  8948
136+  8948              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
137+  8948              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
138+  8948              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
139+  8948              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
140+  8948
141+  8948 CD BA 89         call Ajusta_disparo_parte_izquierda
142+  894B 18 0E            jr 10F
143+  894D
144+  894D              ; 	Dispara Entidad.
145+  894D
146+  894D 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
147+  894F
148+  894F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
149+  894F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
150+  894F
151+  894F C5               push bc
152+  8950 06 10            ld b,16
153+  8952 CD 4B 8F     9 call NextScan
154+  8955 10 FB            djnz 9B
155+  8957 C1               pop bc
156+  8958
157+  8958              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
158+  8958              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
159+  8958              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
160+  8958              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
161+  8958
162+  8958 CD BA 89         call Ajusta_disparo_parte_izquierda
163+  895B
164+  895B CD 2F 8A     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
165+  895E              ;                                                   ; _al generar el disparo.
166+  895E
167+  895E              ; 	LLegados a este punto tendremos:
168+  895E              ;
169+  895E              ;       Puntero_objeto_disparo en IY.
170+  895E              ;       Rutinas_de_impresion en IX.
171+  895E              ;       Puntero_de_impresion en HL.
172+  895E              ;       Impacto/Dirección en BC.
173+  895E
174+  895E CD C2 89         call Almacena_disparo
175+  8961 18 4F            jr 6F                                           ; RET.
176+  8963
177+  8963
178+  8963              ; 	Estamos en el 4º cuadrante de pantalla.
179+  8963              ; 	4º CUAD. ----- ----- ----- ----- -----
180+  8963              ;
181+  8963              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
182+  8963              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
183+  8963              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
184+  8963
185+  8963 2A 9D 85     4 ld hl,(Posicion_actual)
186+  8966
187+  8966              ;   Amadeus o entidad ???.
188+  8966
189+  8966 3A C9 85         ld a,(Ctrl_0)
190+  8969 CB 77            bit 6,a
191+  896B 28 0D            jr z,11F
192+  896D
193+  896D              ; 	Dispara Amadeus.
194+  896D
195+  896D 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
196+  896F CD 5A 8F         call PreviousScan
197+  8972 CD 5A 8F         call PreviousScan
198+  8975
199+  8975              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
200+  8975              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
201+  8975              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
202+  8975              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
203+  8975
204+  8975 CD B3 89         call Ajusta_disparo_parte_derecha
205+  8978 18 0E            jr 13F
206+  897A
207+  897A              ; 	Dispara Entidad.
208+  897A
209+  897A 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
210+  897C
211+  897C              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
212+  897C              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
213+  897C
214+  897C C5               push bc
215+  897D
216+  897D 06 10            ld b,16
217+  897F CD 4B 8F     12 call NextScan
218+  8982 10 FB            djnz 12B
219+  8984
220+  8984 C1               pop bc
221+  8985
222+  8985              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
223+  8985              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
224+  8985              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
225+  8985              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
226+  8985
227+  8985 CD B3 89         call Ajusta_disparo_parte_derecha
228+  8988
229+  8988 CD 2F 8A     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
230+  898B              ;                                                     ; _al generar el disparo.
231+  898B
232+  898B              ; LLegados a este punto tendremos:
233+  898B              ;
234+  898B              ;       Puntero_objeto_disparo en IY.
235+  898B              ;       Rutinas_de_impresion en IX.
236+  898B              ;       Puntero_de_impresion en HL.
237+  898B              ;       Impacto/Dirección en BC.
238+  898B
239+  898B CD C2 89         call Almacena_disparo
240+  898E 18 22            jr 6F                                           ; RET.
241+  8990
242+  8990              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
243+  8990
244+  8990 28 11        3 jr z,5F
245+  8992
246+  8992              ; 	1er CUAD. ----- ----- ----- ----- -----
247+  8992              ;
248+  8992              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
249+  8992              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
250+  8992              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
251+  8992              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
252+  8992
253+  8992              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
254+  8992              ;	   ""        ""       "f9", B="1"
255+  8992              ;	   ""        ""       "fb", B="2"
256+  8992              ; 	   ""        ""       "fb", B="3"
257+  8992
258+  8992 2A 9D 85     	ld hl,(Posicion_actual)
259+  8995 CD 4B 8F     	call NextScan
260+  8998
261+  8998              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
262+  8998              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
263+  8998              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
264+  8998              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
265+  8998
266+  8998 CD BA 89         call Ajusta_disparo_parte_izquierda
267+  899B
268+  899B              ; 	No se produce impacto. B="$80"
269+  899B              ; 	Dirección del proyectil hacia abajo. C="$80"
270+  899B
271+  899B 01 80 80         ld bc,$8080
272+  899E
273+  899E              ; 	LLegados a este punto tendremos:
274+  899E              ;
275+  899E              ;       Puntero_objeto_disparo en IY.
276+  899E              ;       Rutinas_de_impresion en IX.
277+  899E              ;       Puntero_de_impresion en HL.
278+  899E              ;       Impacto/Dirección en BC.
279+  899E
280+  899E CD C2 89         call Almacena_disparo
281+  89A1 18 0F            jr 6F                                           ; RET.
282+  89A3
283+  89A3              ; 	Estamos en el 2º cuadrante de pantalla.
284+  89A3              ; 	2º CUAD. ----- ----- ----- ----- -----
285+  89A3              ;
286+  89A3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
287+  89A3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
288+  89A3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
289+  89A3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
290+  89A3
291+  89A3 2A 9D 85     5 ld hl,(Posicion_actual)
292+  89A6 CD 4B 8F     	call NextScan
293+  89A9
294+  89A9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
295+  89A9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
296+  89A9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
297+  89A9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
298+  89A9
299+  89A9 CD B3 89         call Ajusta_disparo_parte_derecha
300+  89AC
301+  89AC              ; 	No se produce impacto. B="$80"
302+  89AC              ; 	Dirección del proyectil hacia abajo. C="80"
303+  89AC
304+  89AC 01 80 80     15 ld bc,$8080
305+  89AF
306+  89AF              ; 	LLegados a este punto tendremos:
307+  89AF              ;
308+  89AF              ;       Puntero_objeto_disparo en IY.
309+  89AF              ;       Rutinas_de_impresion en IX.
310+  89AF              ;       Puntero_de_impresion en HL.
311+  89AF              ;       Impacto/Dirección en BC.
312+  89AF
313+  89AF CD C2 89         call Almacena_disparo
314+  89B2
315+  89B2 C9           6 ret
316+  89B3
317+  89B3              ; ----------------------------------------------------------------
318+  89B3              ;
319+  89B3              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
320+  89B3              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
321+  89B3              ;	_ (lado izq. o derecho), de la entidad que lo genera.
322+  89B3
323+  89B3 78           Ajusta_disparo_parte_derecha ld a,b
324+  89B4 FE 02            cp 2
325+  89B6 38 01            jr c,1F
326+  89B8 23               inc hl
327+  89B9 C9           1 ret
328+  89BA
329+  89BA 78           Ajusta_disparo_parte_izquierda ld a,b
330+  89BB FE 01        	cp 1
331+  89BD 20 01        	jr nz,1F
332+  89BF 2B           	dec hl
333+  89C0 2B           1 dec hl
334+  89C1 C9               ret
335+  89C2
336+  89C2              ; ----------------------------------------------------------------
337+  89C2              ;
338+  89C2              ;   25/02/23
339+  89C2              ;
340+  89C2              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
341+  89C2              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
342+  89C2
343+  89C2              Almacena_disparo
344+  89C2
345+  89C2 E5               push hl  										; HL contiene el puntero de impresión.
346+  89C3 F1               pop af
347+  89C4 08               ex af,af                                        ; Puntero_de_impresion en AF'.
348+  89C5
349+  89C5 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
350+  89C6 E6 01            and 1
351+  89C8 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
352+  89CA              ;                                                   ; _ es Amadeus o una entidad la que dispara.
353+  89CA              ; 	Dispara AMADEUS.
354+  89CA
355+  89CA              ;	Comprobamos que a Amadeus aún le quedan disparos.
356+  89CA              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
357+  89CA              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
358+  89CA              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
359+  89CA
360+  89CA C5               push bc
361+  89CB 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
362+  89CE 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
363+  89D1 A7               and a
364+  89D2 ED 42            sbc hl,bc
365+  89D4 CC 7E 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
366+  89D7 C1               pop bc
367+  89D8 28 54            jr z,4F
368+  89DA
369+  89DA 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
370+  89DD 23               inc hl
371+  89DE 23               inc hl
372+  89DF 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
373+  89E2              ;                                                   ; _ Disparo_(+1).
374+  89E2 18 18            jr 2F
375+  89E4
376+  89E4              ; Dispara una entidad.
377+  89E4
378+  89E4 C5           1 push bc
379+  89E5 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
380+  89E8 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
381+  89EB A7               and a
382+  89EC ED 42            sbc hl,bc
383+  89EE CC 77 87         call z,Inicia_Puntero_Disparo_Entidades
384+  89F1 C1               pop bc
385+  89F2 28 3A            jr z,4F
386+  89F4
387+  89F4 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
388+  89F7 23               inc hl
389+  89F8 23               inc hl
390+  89F9 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
391+  89FC              ;                                                   ; _ Disparo_(+1).
392+  89FC CD B5 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
393+  89FF              ;                                                   ; _ los 8 bytes que definen el disparo:
394+  89FF              ;
395+  89FF              ;                                                     Puntero_objeto_disparo en IY.
396+  89FF              ;                                                     Rutinas_de_impresion en IX.
397+  89FF              ;                                                     Puntero_de_impresion en HL.
398+  89FF              ;                                                     Impacto/Dirección en BC.
399+  89FF
400+  89FF 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
401+  8A00 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
402+  8A01 23               inc hl                                          ; _ al siguiente.
403+  8A02 A7               and a
404+  8A03 20 C0            jr nz,3B
405+  8A05
406+  8A05 08               ex af,af
407+  8A06 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
408+  8A0A F9               ld sp,hl
409+  8A0B
410+  8A0B DD E5            push ix                                         ; Rutina de impresión.
411+  8A0D F5               push af                                         ; Puntero de impresión.
412+  8A0E FD E5            push iy                                         ; Puntero objeto.
413+  8A10 C5               push bc                                         ; Control.
414+  8A11
415+  8A11 ED 7B DF 85      ld sp,(Stack)
416+  8A15
417+  8A15              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
418+  8A15
419+  8A15 21 D6 85     	ld hl,Ctrl_1
420+  8A18 CB C6        	set 0,(hl)
421+  8A1A
422+  8A1A DD E5        	push ix
423+  8A1C E1               pop hl
424+  8A1D F5               push af
425+  8A1E DD E1            pop ix
426+  8A20
427+  8A20 CD A0 7F     	call Guarda_foto_registros
428+  8A23
429+  8A23 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
430+  8A26 CB 86        	res 0,(hl)
431+  8A28
432+  8A28              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
433+  8A28              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
434+  8A28
435+  8A28 CD 7E 87         call Inicia_Puntero_Disparo_Amadeus
436+  8A2B CD 77 87         call Inicia_Puntero_Disparo_Entidades
437+  8A2E
438+  8A2E C9           4 ret
439+  8A2F
440+  8A2F              ; ----------------------------------------------------------------
441+  8A2F              ;
442+  8A2F              ;   4/3/23
443+  8A2F              ;
444+  8A2F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
445+  8A2F              ;   _ al generarse el disparo.
446+  8A2F              ;
447+  8A2F              ;       "$80" ..... No se produce colisión.
448+  8A2F              ;       "$81" ..... Se produce colisión.
449+  8A2F
450+  8A2F              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
451+  8A2F              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
452+  8A2F
453+  8A2F
454+  8A2F FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
455+  8A31 E5               push hl                                        ; Puntero de impresión.
456+  8A32 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
457+  8A34 CD 4B 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
458+  8A37 E1               pop hl
459+  8A38 E5               push hl
460+  8A39 CD 4B 8F         call NextScan
461+  8A3C
462+  8A3C 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
463+  8A3D FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
464+  8A3F 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
465+  8A41              ;                                                  ; _ 2º scanline si esto es así.
466+  8A41 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
467+  8A43 CD 4B 8A         call Bucle_2
468+  8A46
469+  8A46 43           2 ld b,e
470+  8A47 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
471+  8A48 FD E1            pop iy
472+  8A4A C9               ret
473+  8A4B
474+  8A4B               ; ---------- ----------
475+  8A4B
476+  8A4B 06 02        Bucle_2 ld b,2
477+  8A4D FD 7E 00     2 ld a,(iy)
478+  8A50 A6               and (hl)
479+  8A51 28 02            jr z,1F
480+  8A53 1E 81            ld e,$81
481+  8A55 23           1 inc hl
482+  8A56 FD 23            inc iy
483+  8A58 10 F3            djnz 2B
484+  8A5A C9               ret
485+  8A5B
486+  8A5B              ; -------------------------------------------------------------------------------------------------------------
487+  8A5B              ;
488+  8A5B              ;   11/04/23
489+  8A5B              ;
490+  8A5B              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
491+  8A5B              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
492+  8A5B              ;   _ tanto, existe riesgo alto de colisión entre ambas.
493+  8A5B              ;
494+  8A5B              ;   MODIFICA: HL,DE,BC,A y AF´.
495+  8A5B
496+  8A5B              Compara_coordenadas_X
497+  8A5B
498+  8A5B              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
499+  8A5B
500+  8A5B              ; Preparamos registros:
501+  8A5B
502+  8A5B 21 A1 85         ld hl,Filas+6
503+  8A5E 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
504+  8A5F 23               inc hl
505+  8A60 23               inc hl
506+  8A61 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
507+  8A62 43               ld b,e
508+  8A63 21 AF 85         ld hl,Filas+20
509+  8A66 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
510+  8A67 21 F0 85         ld hl,Coordenadas_X_Entidad
511+  8A6A CD 52 8C         call Guarda_coordenadas_X
512+  8A6D
513+  8A6D              ; Preparamos registros:
514+  8A6D
515+  8A6D 21 7A 84         ld hl,Amadeus_db+6
516+  8A70 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
517+  8A71 23               inc hl
518+  8A72 23               inc hl
519+  8A73 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
520+  8A74 7B               ld a,e
521+  8A75 08               ex af,af'
522+  8A76 21 88 84         ld hl,Amadeus_db+20
523+  8A79 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
524+  8A7A 21 ED 85         ld hl,Coordenadas_X_Amadeus
525+  8A7D CD 52 8C         call Guarda_coordenadas_X
526+  8A80
527+  8A80              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
528+  8A80              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
529+  8A80
530+  8A80 04               inc b
531+  8A81 05               dec b
532+  8A82 28 04            jr z,1F
533+  8A84 06 03            ld b,3
534+  8A86 18 02            jr 2F
535+  8A88 06 02        1 ld b,2
536+  8A8A 08           2 ex af,af'
537+  8A8B 3C               inc a
538+  8A8C 3D               dec a
539+  8A8D 28 04            jr z,5F
540+  8A8F 0E 03            ld c,3
541+  8A91 18 02            jr 6F
542+  8A93 0E 02        5 ld c,2
543+  8A95 79           6 ld a,c
544+  8A96 08               ex af,af'
545+  8A97 11 F0 85         ld de,Coordenadas_X_Entidad
546+  8A9A 1A           4 ld a,(de)
547+  8A9B 21 ED 85         ld hl,Coordenadas_X_Amadeus
548+  8A9E BE           3 cp (hl)
549+  8A9F 28 0B            jr z,7F
550+  8AA1 23               inc hl
551+  8AA2 0D               dec c
552+  8AA3 20 F9            jr nz,3B
553+  8AA5 13               inc de
554+  8AA6 08               ex af,af'
555+  8AA7 4F               ld c,a
556+  8AA8 08               ex af,af'
557+  8AA9 10 EF            djnz 4B
558+  8AAB C9           8 ret
559+  8AAC 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
560+  8AAE 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
561+  8AB1              ;                                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
562+  8AB1 21 EC 85         ld hl,Impacto2
563+  8AB4 CB D6            set 2,(hl)
564+  8AB6 18 F3            jr 8B
565+  8AB8
566+  8AB8              ; -----------------------------------------------------------------------
567+  8AB8              ;
568+  8AB8              ;   11/04/23
569+  8AB8              ;
570+  8AB8
571+  8AB8              Detecta_colision_nave_entidad
572+  8AB8
573+  8AB8              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
574+  8AB8
575+  8AB8 2A 9D 85         ld hl,(Posicion_actual)
576+  8ABB CD B0 8E         call Calcula_puntero_de_impresion
577+  8ABE
578+  8ABE              ; Ahora, IX contiene el "puntero_de_impresión" de la entidad, (arriba-izq).
579+  8ABE              ;        IY contiene el "puntero_objeto" de la entidad, (arriba-izq).
580+  8ABE
581+  8ABE 18 FE            jr $
582+  8AC0
583+  8AC0 DD E5            push ix
584+  8AC2 E1               pop hl
585+  8AC3 E5               push hl
586+  8AC4
587+  8AC4              ; ----- ----- -----
588+  8AC4
589+  8AC4 1E 00            ld e,0                                         ; E,(Impacto)="0".
590+  8AC6 06 10            ld b,16
591+  8AC8
592+  8AC8 CD E5 8A     2 call Bucle_3                                   ; Comprobamos el 1er scanline.
593+  8ACB 7B               ld a,e
594+  8ACC 28 07            jr z,3F
595+  8ACE
596+  8ACE 21 EC 85         ld hl,Impacto2
597+  8AD1 CB D6            set 2,(hl)
598+  8AD3 18 0E            jr 1F
599+  8AD5
600+  8AD5 E1           3 pop hl
601+  8AD6 E5               push hl
602+  8AD7 CD 4B 8F         call NextScan
603+  8ADA 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
604+  8ADB FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
605+  8ADD 28 04            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
606+  8ADF 30 02            jr nc,1F
607+  8AE1              ;                                                  ; _ 2º scanline si esto es así.
608+  8AE1 10 E5            djnz 2B
609+  8AE3
610+  8AE3 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
611+  8AE4 C9               ret
612+  8AE5
613+  8AE5               ; ---------- ----------
614+  8AE5
615+  8AE5 3A 9C 85     Bucle_3 ld a,(Columns)
616+  8AE8 47               ld b,a
617+  8AE9 FD 7E 00     2 ld a,(iy)
618+  8AEC A6               and (hl)
619+  8AED 28 02            jr z,1F
620+  8AEF 1E 01            ld e,1
621+  8AF1 23           1 inc hl
622+  8AF2 FD 23            inc iy
623+  8AF4 10 F3            djnz 2B
624+  8AF6 C9               ret
625+  8AF7
626+  8AF7              ; -------------------------------------------------------------------------------------------------------------
627+  8AF7              ;
628+  8AF7              ;   13/03/23
629+  8AF7              ;
630+  8AF7              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
631+  8AF7              ;
632+  8AF7              ;   DESTRUYE: HL,BC,DE y A.
633+  8AF7
634+  8AF7 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
635+  8AFA 7E               ld a,(hl)
636+  8AFB A7               and a
637+  8AFC C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
638+  8AFD
639+  8AFD 44               ld b,h
640+  8AFE 4D               ld c,l
641+  8AFF 2A E5 85         ld hl,(Stack_snapshot_disparos)
642+  8B02 E5               push hl
643+  8B03 A7               and a
644+  8B04 ED 42            sbc hl,bc
645+  8B06 E5               push hl
646+  8B07 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
647+  8B08
648+  8B08 E1               pop hl
649+  8B09 54               ld d,h
650+  8B0A 5D               ld e,l
651+  8B0B 1B               dec de
652+  8B0C ED B8            lddr                                                ; Limpiamos.
653+  8B0E
654+  8B0E 21 60 70         ld hl,Album_de_fotos_disparos
655+  8B11 22 E5 85         ld (Stack_snapshot_disparos),hl
656+  8B14
657+  8B14 C9               ret
658+  8B15
659+  8B15              ; -------------------------------------------------------------------------------------------------------------
660+  8B15              ;
661+  8B15              ;   28/03/23
662+  8B15              ;
663+  8B15
664+  8B15 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
665+  8B18 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
666+  8B1B
667+  8B1B CD B5 87     2 call Extrae_address
668+  8B1E 7E               ld a,(hl)
669+  8B1F A7               and a
670+  8B20 28 20            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
671+  8B22
672+  8B22              ; ----- ----- ----- ----- ----- -----
673+  8B22
674+  8B22 C5               push bc
675+  8B23 CD CD 8B         call foto_disparo_a_borrar
676+  8B26
677+  8B26              ; Existe colisión con este disparo???
678+  8B26
679+  8B26 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
680+  8B27 7E               ld a,(hl)
681+  8B28 2B               dec hl
682+  8B29 E6 01            and 1
683+  8B2B 28 0C            jr z,9F
684+  8B2D
685+  8B2D              ; Elimino el disparo de la base de datos.
686+  8B2D
687+  8B2D E5               push hl
688+  8B2E CD 47 8C         call Elimina_disparo_de_base_de_datos
689+  8B31 21 EC 85         ld hl,Impacto2
690+  8B34 CB C6            set 0,(hl)
691+  8B36 E1               pop hl                                               ; Indicamos que se ha producido Impacto en una entidad.
692+  8B37 18 06            jr 11F
693+  8B39
694+  8B39 CD F6 8B     9 call Mueve_disparo
695+  8B3C CD CD 8B         call foto_disparo_a_borrar
696+  8B3F
697+  8B3F C1           11 pop bc
698+  8B40
699+  8B40 18 04            jr 7F
700+  8B42
701+  8B42              ; ----- ----- ----- ----- ----- -----
702+  8B42
703+  8B42 ED 42        1 sbc hl,bc
704+  8B44 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
705+  8B46
706+  8B46 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
707+  8B49 23               inc hl
708+  8B4A 23               inc hl
709+  8B4B 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
710+  8B4E 18 CB            jr 2B
711+  8B50
712+  8B50 CD 7E 87     3 call Inicia_Puntero_Disparo_Amadeus
713+  8B53
714+  8B53 01 66 84         ld bc,Disparo_11
715+  8B56 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
716+  8B59
717+  8B59 CD B5 87     5 call Extrae_address
718+  8B5C 7E               ld a,(hl)
719+  8B5D A7               and a
720+  8B5E 28 5B            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
721+  8B60
722+  8B60              ; ----- ----- ----- ----- ----- -----
723+  8B60
724+  8B60 C5               push bc
725+  8B61 CD CD 8B         call foto_disparo_a_borrar
726+  8B64
727+  8B64              ; Existe colisión con este disparo???
728+  8B64
729+  8B64 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
730+  8B65 7E               ld a,(hl)
731+  8B66 2B               dec hl
732+  8B67 E6 01            and 1
733+  8B69 28 47            jr z,10F
734+  8B6B
735+  8B6B              ; La colisión se produce con Amadeus???
736+  8B6B              ; Amadeus siempre tiene (Coordenada_y)="$16".
737+  8B6B
738+  8B6B E5               push hl
739+  8B6C
740+  8B6C 06 04            ld b,4
741+  8B6E 23           16 inc hl
742+  8B6F 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
743+  8B71
744+  8B71 CD B5 87         call Extrae_address
745+  8B74 CD 62 95         call Genera_coordenadas_disparo
746+  8B77 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
747+  8B78 FE 16            cp $16
748+  8B7A 38 24            jr c,15F
749+  8B7C
750+  8B7C              ; (Colisiones en filas 16 y 17).
751+  8B7C
752+  8B7C D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
753+  8B7D
754+  8B7D              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
755+  8B7D
756+  8B7D 21 7A 84         ld hl,Amadeus_db+6
757+  8B80 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
758+  8B81 23               inc hl
759+  8B82 23               inc hl
760+  8B83 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
761+  8B84 21 88 84         ld hl,Amadeus_db+20
762+  8B87 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
763+  8B88 21 ED 85         ld hl,Coordenadas_X_Amadeus
764+  8B8B
765+  8B8B CD 52 8C         call Guarda_coordenadas_X
766+  8B8E
767+  8B8E D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
768+  8B8F
769+  8B8F              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
770+  8B8F
771+  8B8F 21 ED 85         ld hl,Coordenadas_X_Amadeus
772+  8B92 7E               ld a,(hl)
773+  8B93 BA           18 cp d
774+  8B94 20 03            jr nz,17F
775+  8B96
776+  8B96              ; Colisión Amadeus !!!!!!!!!!
777+  8B96
778+  8B96 E1               pop hl
779+  8B97 18 0D            jr 14F
780+  8B99
781+  8B99 23           17 inc hl
782+  8B9A 7E               ld a,(hl)
783+  8B9B
784+  8B9B A7               and a
785+  8B9C 28 02            jr z,15F                                             ; No hay colisión con Amadeus.
786+  8B9E 18 F3            jr 18B
787+  8BA0
788+  8BA0              ; No hay colisión. Amadeus se encuentra en una línea inferior.
789+  8BA0              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
790+  8BA0
791+  8BA0 E1           15  pop hl
792+  8BA1 23               inc hl
793+  8BA2 35               dec (hl)
794+  8BA3 2B               dec hl
795+  8BA4 18 0C            jr 10F
796+  8BA6
797+  8BA6              ; -----------------------debug
798+  8BA6
799+  8BA6              ; Elimino el disparo de la base de datos.
800+  8BA6
801+  8BA6 E5           14 push hl
802+  8BA7 CD 47 8C         call Elimina_disparo_de_base_de_datos
803+  8BAA 21 EC 85         ld hl,Impacto2
804+  8BAD CB CE            set 1,(hl)
805+  8BAF E1               pop hl
806+  8BB0 18 06            jr 12F
807+  8BB2
808+  8BB2 CD F6 8B     10 call Mueve_disparo
809+  8BB5 CD CD 8B         call foto_disparo_a_borrar
810+  8BB8 C1           12 pop bc
811+  8BB9
812+  8BB9 18 04            jr 8F
813+  8BBB
814+  8BBB              ; ----- ----- ----- ----- ----- -----
815+  8BBB
816+  8BBB ED 42        4 sbc hl,bc
817+  8BBD 28 0A            jr z,6F
818+  8BBF
819+  8BBF 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
820+  8BC2 23               inc hl
821+  8BC3 23               inc hl
822+  8BC4 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
823+  8BC7 18 90            jr 5B
824+  8BC9
825+  8BC9 CD 77 87     6 call Inicia_Puntero_Disparo_Entidades
826+  8BCC C9               ret
827+  8BCD
828+  8BCD              ; ------------------------------------------------------------------
829+  8BCD
830+  8BCD              foto_disparo_a_borrar
831+  8BCD
832+  8BCD 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
833+  8BCE A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
834+  8BCF C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
835+  8BD0
836+  8BD0 E5               push hl
837+  8BD1 23               inc hl
838+  8BD2 23               inc hl
839+  8BD3 ED 73 DF 85      ld (Stack),sp
840+  8BD7 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
841+  8BD8 FD E1            pop iy
842+  8BDA DD E1            pop ix
843+  8BDC E1               pop hl
844+  8BDD ED 7B DF 85      ld sp,(Stack)
845+  8BE1 3A D6 85         ld a,(Ctrl_1)
846+  8BE4 CB C7            set 0,a
847+  8BE6 32 D6 85         ld (Ctrl_1),a
848+  8BE9 CD A0 7F         call Guarda_foto_registros
849+  8BEC 3A D6 85         ld a,(Ctrl_1)
850+  8BEF CB 87            res 0,a
851+  8BF1 32 D6 85         ld (Ctrl_1),a
852+  8BF4 E1               pop hl
853+  8BF5 C9               ret
854+  8BF6
855+  8BF6 E5           Mueve_disparo push hl
856+  8BF7 7E               ld a,(hl)
857+  8BF8 06 04            ld b,4
858+  8BFA 23           1 inc hl
859+  8BFB 10 FD            djnz 1B
860+  8BFD
861+  8BFD              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
862+  8BFD
863+  8BFD CD B5 87         call Extrae_address
864+  8C00
865+  8C00 E6 01            and 1
866+  8C02 28 2A            jr z,2F
867+  8C04
868+  8C04              ; Disparo hacia arriba, (Amadeus).
869+  8C04
870+  8C04              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
871+  8C04              ; _ de la dificultad.
872+  8C04
873+  8C04 CD 5A 8F         call PreviousScan
874+  8C07 CD 5A 8F         call PreviousScan
875+  8C0A CD 5A 8F         call PreviousScan
876+  8C0D
877+  8C0D              ; Detecta si el disparo de Amadeus sale de pantalla:
878+  8C0D
879+  8C0D 7C               ld a,h
880+  8C0E FE 40            cp $40
881+  8C10 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
882+  8C12
883+  8C12              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
884+  8C12
885+  8C12 EB               ex de,hl
886+  8C13 06 04            ld b,4
887+  8C15 2B           6 dec hl
888+  8C16 10 FD            djnz 6B
889+  8C18
890+  8C18 CD 47 8C         call Elimina_disparo_de_base_de_datos
891+  8C1B
892+  8C1B 18 0C            jr 4F
893+  8C1D
894+  8C1D              ; Se ha desplazado la bala, compruebo colisión.
895+  8C1D
896+  8C1D D5           3 push de
897+  8C1E C5               push bc
898+  8C1F CD 2F 8A         call Comprueba_Colision
899+  8C22 78               ld a,b
900+  8C23 C1               pop bc
901+  8C24 D1               pop de
902+  8C25
903+  8C25 EB               ex de,hl
904+  8C26
905+  8C26 73               ld (hl),e
906+  8C27 23               inc hl
907+  8C28 72               ld (hl),d
908+  8C29
909+  8C29 E1           4 pop hl
910+  8C2A 23               inc hl
911+  8C2B 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
912+  8C2C 2B               dec hl
913+  8C2D C9               ret
914+  8C2E
915+  8C2E              ; Disparo hacia abajo, (Entidad).
916+  8C2E
917+  8C2E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
918+  8C2E              ; _ de la dificultad.
919+  8C2E
920+  8C2E CD 4B 8F     2 call NextScan
921+  8C31 CD 4B 8F         call NextScan
922+  8C34 CD 4B 8F         call NextScan
923+  8C37
924+  8C37              ; Detecta si el disparo de la entidad sale de la pantalla.
925+  8C37
926+  8C37 7C               ld a,h
927+  8C38 FE 58            cp $58
928+  8C3A 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
929+  8C3C
930+  8C3C EB               ex de,hl
931+  8C3D 06 04            ld b,4
932+  8C3F 2B           5 dec hl
933+  8C40 10 FD            djnz 5B
934+  8C42
935+  8C42 CD 47 8C         call Elimina_disparo_de_base_de_datos
936+  8C45
937+  8C45 18 E2            jr 4B
938+  8C47
939+  8C47              ; HL apunta al primer byte de la base de datos del disparo.
940+  8C47 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
941+  8C4A AF               xor a
942+  8C4B 77               ld (hl),a
943+  8C4C 54               ld d,h
944+  8C4D 5D               ld e,l
945+  8C4E 13               inc de
946+  8C4F ED B0            ldir
947+  8C51 C9               ret
948+  8C52
949+  8C52              ; -----------------------------------------------------------------
950+  8C52              ;
951+  8C52              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
952+  8C52              ;
953+  8C52              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
954+  8C52              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
955+  8C52              ;
956+  8C52              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
957+  8C52              ;
958+  8C52              ;   INPUTS:
959+  8C52              ;
960+  8C52              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
961+  8C52              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
962+  8C52              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
963+  8C52
964+  8C52              ;   MODIFICA: A, HL, DE y C
965+  8C52
966+  8C52 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
967+  8C53 79               ld a,c
968+  8C54 E6 01            and 1
969+  8C56 20 03            jr nz,1F
970+  8C58 14               inc d
971+  8C59 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
972+  8C5B
973+  8C5B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
974+  8C5B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
975+  8C5B
976+  8C5B 15           1 dec d
977+  8C5C 23           2 inc hl
978+  8C5D 72               ld (hl),d
979+  8C5E
980+  8C5E 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
981+  8C5F A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
982+  8C60 C8               ret z
983+  8C61
984+  8C61 AF               xor a
985+  8C62 5F               ld e,a
986+  8C63 18 ED            jr Guarda_coordenadas_X
987+  8C65
# file closed: Disparo.asm
897   8C65              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8C65              ; ******************************************************************************************************************************************************************************************
  2+  8C65              ;
  3+  8C65              ; 01/23
  4+  8C65              ;
  5+  8C65              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8C65
  7+  8C65 CD 3F 8F     Draw call Prepara_draw
  8+  8C68 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8C69 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8C6A 28 05        	jr z,2F
 11+  8C6C
 12+  8C6C 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8C6F 18 0C        	jr 1F
 14+  8C71 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8C74 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8C77 CD 06 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8C7A              ;													; _la esquina superior izquierda de la pantalla.
 18+  8C7A CD 85 96     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8C7D 3A C9 85     1 ld a,(Ctrl_0)
 20+  8C80 CB 6F        	bit 5,a
 21+  8C82 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8C84
 23+  8C84 CD 9C 8C     	call Comprueba_limite_horizontal
 24+  8C87 CD 2C 8D     	call Comprueba_limite_vertical
 25+  8C8A
 26+  8C8A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8C8A
 28+  8C8A CD 79 8E     3 call calcula_CColumnass
 29+  8C8D CD B0 8E     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8C90 CD 05 8F     	call Define_rutina_de_impresion
 31+  8C93
 32+  8C93 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8C96 CB AF        	res 5,a											; _a ser de utilidad.
 34+  8C98 32 C9 85     	ld (Ctrl_0),a
 35+  8C9B
 36+  8C9B C9           	ret
 37+  8C9C
 38+  8C9C              ; *******************************************************************************************************************************************************************************************
 39+  8C9C              ;	21/01/23
 40+  8C9C              ;
 41+  8C9C              ; 	Comprueba_limite_horizontal.
 42+  8C9C              ;
 43+  8C9C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8C9C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8C9C              ;
 46+  8C9C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8C9C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8C9C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8C9C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8C9C
 51+  8C9C
 52+  8C9C
 53+  8C9C 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8C9F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8CA1 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8CA3 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8CA5 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8CA8 18 09            jr 6F
 59+  8CAA CB 5F        1 bit 3,a
 60+  8CAC 28 0A            jr z,2F
 61+  8CAE E6 F7            and $f7
 62+  8CB0 32 C9 85         ld (Ctrl_0),a
 63+  8CB3 CD 06 8E     6 call Inicializacion
 64+  8CB6 18 5B            jr 5F
 65+  8CB8 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8CB9
 67+  8CB9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8CB9              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8CB9
 70+  8CB9 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8CBA 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8CBD CD 0B 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8CC0 67           	ld h,a
 74+  8CC1 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8CC2 CD 0B 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8CC5 67           	ld h,a
 77+  8CC6 A7           	and a
 78+  8CC7 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8CC9 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8CCA 3A AF 85     	ld a,(Cuad_objeto)
 81+  8CCD FE 02        	cp 2
 82+  8CCF 38 1E        	jr c,3F
 83+  8CD1 28 1C        	jr z,3F
 84+  8CD3 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8CD4 28 23            jr z,7F
 86+  8CD6 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8CD8 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8CDA E1           	pop hl
 89+  8CDB
 90+  8CDB              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8CDB              ; _para indicar con E="2" en caso necesario.
 92+  8CDB
 93+  8CDB E5               push hl
 94+  8CDC C5               push bc
 95+  8CDD CD 0B 92     	call calcula_tercio
 96+  8CE0 FE 01        	cp 1
 97+  8CE2 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8CE4 CD 14 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8CE7 28 26            jr z,9F
100+  8CE9 38 24            jr c,9F
101+  8CEB 1E 00        11 ld e,0
102+  8CED 18 22            jr 8F
103+  8CEF 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8CF0 28 07        	jr z, 7F
105+  8CF2 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8CF4 1E 00         	ld e,0
107+  8CF6 E1           	pop hl
108+  8CF7 18 04        	jr 4F
109+  8CF9 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8CFB 18 15            jr 10F
111+  8CFD
112+  8CFD              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8CFD              ; _para indicar con E="2" en caso necesario.
114+  8CFD
115+  8CFD E5           4 push hl
116+  8CFE C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8CFF CD 0B 92     	call calcula_tercio
118+  8D02 FE 01        	cp 1
119+  8D04 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8D06 CD 14 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8D09 28 04            jr z,9F
122+  8D0B 30 02            jr nc,9F
123+  8D0D 18 02        	jr 8F
124+  8D0F 1E 02        9 ld e,2
125+  8D11 C1           8 pop bc
126+  8D12 E1           10 pop hl
127+  8D13 C9           5 ret
128+  8D14
129+  8D14              ; --------------------
130+  8D14              ;
131+  8D14              ; 25/08/22
132+  8D14
133+  8D14 CD 0B 92     Comprueba_centro call calcula_tercio
134+  8D17 67               ld h,a
135+  8D18 08           	ex af,af
136+  8D19 FE 02        	cp 2
137+  8D1B 38 07        	jr c,1F
138+  8D1D 28 05        	jr z,1F
139+  8D1F 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8D22 18 03        	jr 2F
141+  8D24 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8D27 08           2 ex af,af
143+  8D28 A7               and a
144+  8D29 ED 42            sbc hl,bc
145+  8D2B C9               ret
146+  8D2C
147+  8D2C              ; *********************************************************************************************************************************************************************************************
148+  8D2C              ;
149+  8D2C              ;   16/8/22
150+  8D2C              ;
151+  8D2C              ;	Comprueba_limite_vertical
152+  8D2C              ;
153+  8D2C              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8D2C              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8D2C              ;
156+  8D2C
157+  8D2C 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8D2F 7D           	ld a,l
159+  8D30 E6 1F        	and $1F
160+  8D32 57           	ld d,a
161+  8D33 3A D5 85     	ld a,(Limite_vertical)
162+  8D36 BA           	cp d 											; Límite - Posición.
163+  8D37 08           	ex af,af 										; Resultado de CP d en F'.
164+  8D38 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8D3B CB 47        	bit 0,a
166+  8D3D 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8D3F
168+  8D3F              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8D3F
170+  8D3F 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8D40 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8D42
173+  8D42              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8D42              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8D42
176+  8D42 3A A1 85         ld a,(Coordenada_X)
177+  8D45 16 0F            ld d,Centro_izquierda
178+  8D47 A7               and a
179+  8D48 92               sub d 											 ; Posición - Centro_izquierda.
180+  8D49 28 1E            jr z,3F
181+  8D4B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8D4D              ;                                                    ; _salimos sin modificar nada.
183+  8D4D 18 0E            jr 2F
184+  8D4F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8D50 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8D52
187+  8D52              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8D52              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8D52
190+  8D52 3A A1 85         ld a,(Coordenada_X)
191+  8D55 16 10            ld d,Centro_derecha
192+  8D57 A7               and a
193+  8D58 92               sub d
194+  8D59 28 0E            jr z,3F
195+  8D5B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8D5D              ;                                                    ; _salimos sin modificar nada.
197+  8D5D CB 43        2 bit 0,e
198+  8D5F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8D61 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8D62 CD F6 8D         call Modificaccionne
201+  8D65 C1           	pop bc
202+  8D66 CD 06 8E         call Inicializacion
203+  8D69 C9           3 ret 				 								 ; Salimos de la rutina.
204+  8D6A
205+  8D6A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8D6A
207+  8D6A C5           4 push bc
208+  8D6B 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8D6E 0A           	ld a,(bc)
210+  8D6F 3D           	dec a
211+  8D70 47           	ld b,a 											 ; Columnas-1 en B.
212+  8D71 7D           	ld a,l
213+  8D72 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8D73 CB 47        	bit 0,a
215+  8D75 28 03        	jr z,5F
216+  8D77 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8D78 18 2E        	jr 7F
218+  8D7A
219+  8D7A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8D7A
221+  8D7A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8D7B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8D7C 3A C9 85     	ld a,(Ctrl_0)
224+  8D7F CB 4F        	bit 1,a
225+  8D81 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8D83 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8D84
228+  8D84              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8D84
230+  8D84 1C               inc e
231+  8D85 1D               dec e
232+  8D86 20 07            jr nz,12F
233+  8D88 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8D89 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8D8A 22 9D 85     	ld (Posicion_actual),hl
236+  8D8D 18 44        13 jr 9F
237+  8D8F CB 43        12 bit 0,e
238+  8D91 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8D93              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8D93 C1           	pop bc
241+  8D94 18 D3        	jr 3B
242+  8D96 80           14 add b
243+  8D97 6F               ld l,a
244+  8D98 22 9D 85     	ld (Posicion_actual),hl
245+  8D9B CD F6 8D         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8D9E 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8DA0 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8DA2 32 C9 85         ld (Ctrl_0),a
249+  8DA5 F1           	pop af
250+  8DA6 18 2B        	jr 9F
251+  8DA8
252+  8DA8              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8DA8
254+  8DA8 F5           7 push af
255+  8DA9 3A C9 85     	ld a,(Ctrl_0)
256+  8DAC CB 47        	bit 0,a
257+  8DAE 20 1D        	jr nz,8F
258+  8DB0 F1           	pop af
259+  8DB1
260+  8DB1              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8DB1
262+  8DB1 1C           	inc e
263+  8DB2 1D               dec e
264+  8DB3 20 07            jr nz,10F
265+  8DB5 90           	sub b
266+  8DB6 6F               ld l,a
267+  8DB7 22 9D 85     	ld (Posicion_actual),hl
268+  8DBA 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8DBC              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8DBC CB 43        10 bit 0,e
271+  8DBE 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8DC0              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8DC0 C1           	pop bc
274+  8DC1 18 A6        	jr 3B
275+  8DC3 90           16 sub b
276+  8DC4 6F               ld l,a
277+  8DC5 22 9D 85     	ld (Posicion_actual),hl
278+  8DC8 CD F6 8D         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8DCB 18 06            jr 9F
280+  8DCD E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8DCF 32 C9 85         ld (Ctrl_0),a
282+  8DD2 F1           	pop af
283+  8DD3 C1           9 pop bc
284+  8DD4 1E 00        	ld e,0
285+  8DD6 CD 06 8E         call Inicializacion
286+  8DD9 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8DDA 08           	ex af,af
288+  8DDB F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8DDC 18 8B            jr 3B
290+  8DDE
291+  8DDE              ; --------------------
292+  8DDE
293+  8DDE 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8DE0 CD 5A 8F     1 call PreviousScan
295+  8DE3 10 FB            djnz 1B
296+  8DE5 22 9D 85     	ld (Posicion_actual),hl
297+  8DE8 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8DE9 C9           	ret
299+  8DEA
300+  8DEA              ; --------------------
301+  8DEA
302+  8DEA 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8DEC CD 4B 8F     1 call NextScan
304+  8DEF 10 FB            djnz 1B
305+  8DF1 22 9D 85     	ld (Posicion_actual),hl
306+  8DF4 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8DF5 C9           	ret
308+  8DF6
309+  8DF6              ; --------------------
310+  8DF6              ;
311+  8DF6              ;	22/01/23
312+  8DF6              ;
313+  8DF6              ;	E="1". Hemos cambiado de cuadrante.
314+  8DF6              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8DF6              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8DF6
317+  8DF6
318+  8DF6              Modificaccionne
319+  8DF6
320+  8DF6 3A AF 85     	ld a,(Cuad_objeto)
321+  8DF9 FE 02        	cp 2
322+  8DFB CC DE 8D         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8DFE DC DE 8D         call c,Modifica_Pos_actual
324+  8E01 C8           	ret z
325+  8E02 CD EA 8D         call Modifica_Pos_actual2
326+  8E05 C9               ret
327+  8E06
328+  8E06              ; *************************************************************************************************************************************************************************************************
329+  8E06              ;
330+  8E06              ;	13/8/22
331+  8E06              ;
332+  8E06              ;	Inicializacion
333+  8E06              ;
334+  8E06              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8E06              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8E06              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8E06              ;
338+  8E06              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8E06              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8E06              ;	_ desaparece/aparece.
341+  8E06
342+  8E06              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8E06              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8E06              ;
345+  8E06              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8E06              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8E06              ; 		   [E] ="0"
348+  8E06
349+  8E06              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8E06
351+  8E06 CD 0B 92     Inicializacion call calcula_tercio
352+  8E09 28 36        	jr z,primit
353+  8E0B E6 02        	and 2
354+  8E0D 20 07        	jr nz,segmit
355+  8E0F 7D           	ld a,l
356+  8E10 FE 7F        	cp $7f
357+  8E12 38 2D        	jr c,primit
358+  8E14 28 2B        	jr z,primit
359+  8E16 CD 73 8E     segmit call column
360+  8E19 38 13        	jr c,tercuad
361+  8E1B 3E 04        cuarcuad ld a,4
362+  8E1D 32 AF 85     	ld (Cuad_objeto),a
363+  8E20 21 20 48     	ld hl,$4820
364+  8E23 22 D3 85     	ld (Limite_horizontal),hl
365+  8E26 21 D5 85     	ld hl,Limite_vertical
366+  8E29 36 0D        	ld (hl),$0d
367+  8E2B 08           	ex af,af
368+  8E2C 18 3C        	jr 1F
369+  8E2E              tercuad
370+  8E2E 3E 03        	ld a,3
371+  8E30 32 AF 85     	ld (Cuad_objeto),a
372+  8E33 21 20 48     	ld hl,$4820
373+  8E36 22 D3 85     	ld (Limite_horizontal),hl
374+  8E39 21 D5 85     	ld hl,Limite_vertical
375+  8E3C 36 12        	ld (hl),$12
376+  8E3E 08           	ex af,af
377+  8E3F 18 29        	jr 1F
378+  8E41 CD 73 8E     primit call column
379+  8E44 38 13        	jr c, primcuad
380+  8E46              segcuad
381+  8E46 3E 02        	ld a,2
382+  8E48 32 AF 85     	ld (Cuad_objeto),a
383+  8E4B 21 C0 4F     	ld hl,$4fc0
384+  8E4E 22 D3 85     	ld (Limite_horizontal),hl
385+  8E51 21 D5 85     	ld hl,Limite_vertical
386+  8E54 36 0D        	ld (hl),$0d
387+  8E56 08           	ex af,af
388+  8E57 18 11        	jr 1F
389+  8E59              primcuad
390+  8E59 3E 01        	ld a,1
391+  8E5B 32 AF 85     	ld (Cuad_objeto),a
392+  8E5E 21 C0 4F     	ld hl,$4fc0
393+  8E61 22 D3 85     	ld (Limite_horizontal),hl
394+  8E64 21 D5 85     	ld hl,Limite_vertical
395+  8E67 36 12        	ld (hl),$12
396+  8E69 08           	ex af,af
397+  8E6A CD 37 95     1 call Genera_coordenadas
398+  8E6D 21 C9 85     	ld hl,Ctrl_0
399+  8E70 CB EE        	set 5,(hl)
400+  8E72 C9           	ret
401+  8E73
402+  8E73              ; ------------------------------------------------------------------------------------------------------------------
403+  8E73
404+  8E73              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8E73              ;
406+  8E73              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8E73
408+  8E73 7D           column ld a,l
409+  8E74 E6 1F        	and $1f
410+  8E76 FE 10         	cp $10
411+  8E78 C9            	ret
412+  8E79
413+  8E79              ; --------------------------------------------------------------------------------------------------------------------
414+  8E79              ;
415+  8E79              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8E79              ;
417+  8E79              ; 14/12/22
418+  8E79              ;
419+  8E79              ;	Modifica: A y BC.
420+  8E79
421+  8E79 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8E7C E6 01        	and 1
423+  8E7E 28 17        	jr z,1F
424+  8E80
425+  8E80              ; Nos encontramos en la parte izquierda de la pantalla
426+  8E80
427+  8E80 3A A1 85     	ld a,(Coordenada_X)
428+  8E83 47           	ld b,a
429+  8E84 04           	inc b											; (Coordenada_X)+1 en B.
430+  8E85 79           	ld a,c
431+  8E86 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8E87 38 08        	jr c,2F
433+  8E89 47           	ld b,a
434+  8E8A 79           	ld a,c
435+  8E8B 90           	sub b
436+  8E8C 32 D2 85     	ld (Columnas),a
437+  8E8F 18 1B        	jr 4F
438+  8E91 79           2 ld a,c
439+  8E92 32 D2 85     	ld (Columnas),a
440+  8E95 18 15        	jr 4F
441+  8E97
442+  8E97              ; Nos encontramos en la parte derecha de la pantalla.
443+  8E97
444+  8E97 3A A1 85     1 ld a,(Coordenada_X)
445+  8E9A 81           	add c
446+  8E9B 3D           	dec a
447+  8E9C D6 1F        	sub $1f
448+  8E9E 38 08        	jr c,3F
449+  8EA0 47           	ld b,a
450+  8EA1 79           	ld a,c
451+  8EA2 90           	sub b
452+  8EA3 32 D2 85     	ld (Columnas),a
453+  8EA6 18 04        	jr 4F
454+  8EA8 79           3 ld a,c
455+  8EA9 32 D2 85     	ld (Columnas),a
456+  8EAC D9           4 exx
457+  8EAD 4F           	ld c,a
458+  8EAE D9           	exx
459+  8EAF C9            ret
460+  8EB0
461+  8EB0              ; --------------------------------------------------------------------------------------------------------------------
462+  8EB0              ;
463+  8EB0              ; 7/1/23
464+  8EB0              ;
465+  8EB0              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8EB0              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8EB0              ;
468+  8EB0              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8EB0              ;	DESTRUYE: HL,B Y A.
470+  8EB0
471+  8EB0 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8EB3 FE 02        	cp 2
473+  8EB5 38 18        	jr c,1F
474+  8EB7 28 16        	jr z,1F
475+  8EB9 E6 01        	and 1
476+  8EBB 28 0D        	jr z,3F
477+  8EBD
478+  8EBD              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8EBD
480+  8EBD CD F9 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8EC0
482+  8EC0 7D           9 ld a,l
483+  8EC1 E6 1F        	and $1f
484+  8EC3 28 2A        	jr z,7F
485+  8EC5 2B           	dec hl
486+  8EC6 10 F8        	djnz 9B
487+  8EC8 18 25        	jr 7F
488+  8ECA
489+  8ECA              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8ECA
491+  8ECA 2A 9D 85     3 ld hl,(Posicion_actual)
492+  8ECD 18 20        	jr 7F
493+  8ECF
494+  8ECF 28 14        1 jr z,2F
495+  8ED1
496+  8ED1              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8ED1
498+  8ED1 CD F9 8E     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8ED4 7D           4 ld a,l
500+  8ED5 E6 1F        	and $1f
501+  8ED7 28 03        	jr z,6F
502+  8ED9 2B           	dec hl
503+  8EDA 10 F8        	djnz 4B
504+  8EDC 06 0F        6 ld b,15
505+  8EDE CD 5A 8F     5 call PreviousScan
506+  8EE1 10 FB        	djnz 5B
507+  8EE3 18 0A        	jr 7F
508+  8EE5
509+  8EE5              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8EE5
511+  8EE5 CD F9 8E     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8EE8 06 0F        	ld b,15
513+  8EEA CD 5A 8F     8 call PreviousScan
514+  8EED 10 FB        	djnz 8B
515+  8EEF
516+  8EEF E5           7 push hl
517+  8EF0 DD E1        	pop ix
518+  8EF2
519+  8EF2 2A 9F 85     	ld hl,(Puntero_objeto)
520+  8EF5 E5           	push hl
521+  8EF6 FD E1        	pop iy
522+  8EF8
523+  8EF8 C9           	ret
524+  8EF9
525+  8EF9              ; --------------------------------------------------------------------------------------------------------------------
526+  8EF9              ;
527+  8EF9              ;	2/1/23
528+  8EF9              ;
529+  8EF9              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8EF9              ;
531+  8EF9              ;	Tras esta rutina tenemos:
532+  8EF9              ;
533+  8EF9              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8EF9              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8EF9              ;
536+  8EF9              ;	DESTRUYE!!!!! HL,B y A.
537+  8EF9
538+  8EF9 2A 9D 85     Operandos ld hl,(Posicion_actual)
539+  8EFC 3A D2 85     	ld a,(Columnas)
540+  8EFF 3D           	dec a
541+  8F00 20 01        	jr nz,1F
542+  8F02 3C           	inc a
543+  8F03 47           1 ld b,a
544+  8F04 C9           	ret
545+  8F05
546+  8F05              ; --------------------------------------------------------------------------------------------------------------------
547+  8F05              ;
548+  8F05              ;	3/1/23
549+  8F05              ;
550+  8F05              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8F05              ;
552+  8F05              ;	Destruye: A,B,HL y DE.
553+  8F05
554+  8F05              Define_rutina_de_impresion
555+  8F05
556+  8F05 3A 9C 85     	ld a,(Columns)
557+  8F08 47           	ld b,a
558+  8F09 3A D2 85     	ld a,(Columnas)
559+  8F0C B8           	cp b
560+  8F0D 20 0D        	jr nz,2f
561+  8F0F
562+  8F0F              ;	La entidad se imprime entera.
563+  8F0F
564+  8F0F 21 DB 8F     	ld hl, Indice_entidades_completas
565+  8F12 E6 01        	and 1
566+  8F14 28 02        	jr z,1F
567+  8F16
568+  8F16 23           	inc hl
569+  8F17 23           	inc hl
570+  8F18
571+  8F18 CD B5 87     1 call Extrae_address
572+  8F1B C9           	ret		;	ret
573+  8F1C
574+  8F1C              ;	La entidad no se imprime entera en pantalla.
575+  8F1C
576+  8F1C 3A AF 85     2 ld a,(Cuad_objeto)
577+  8F1F E6 01        	and 1
578+  8F21 28 17        	jr z,3F
579+  8F23
580+  8F23              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8F23
582+  8F23 21 DF 8F     	ld hl, Indice_entidades_incompletas_izquierda
583+  8F26 3A 9C 85     4 ld a,(Columns)
584+  8F29 E6 01        	and 1
585+  8F2B 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8F2D
587+  8F2D 23           	inc hl
588+  8F2E 23           	inc hl
589+  8F2F
590+  8F2F 3A D2 85     	ld a,(Columnas)
591+  8F32 E6 01        	and 1
592+  8F34 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8F36
594+  8F36 23           	inc hl
595+  8F37 23           	inc hl
596+  8F38
597+  8F38 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8F3A
599+  8F3A 21 E5 8F     3 ld hl, Indice_entidades_incompletas_derecha
600+  8F3D 18 E7        	jr 4B
601+  8F3F
602+  8F3F              ; --------------------------------------------------------------------------------------------------------------------
603+  8F3F              ;
604+  8F3F              ;	Prepara_draw
605+  8F3F              ;
606+  8F3F              ;	Es una rutina de carga.
607+  8F3F              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8F3F              ;
609+  8F3F              ;	FUNCIONAMIENTO:
610+  8F3F              ;
611+  8F3F              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8F3F              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8F3F              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8F3F              ;
615+  8F3F              ;	DESTRUYE:
616+  8F3F              ;
617+  8F3F              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8F3F
619+  8F3F 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8F42 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8F43 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8F44 4E           	ld c,(hl)
623+  8F45 2A 9D 85     	ld hl,(Posicion_actual)
624+  8F48 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8F4A C9           	ret
626+  8F4B
627+  8F4B              ;----------------------------------------------------------------------------------------------------------------
628+  8F4B              ;
629+  8F4B              ;	5/08/22
630+  8F4B              ;
631+  8F4B              ;   NextScan.
632+  8F4B              ;
633+  8F4B              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8F4B              ;
635+  8F4B              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8F4B              ;
637+  8F4B              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8F4B              ;
639+  8F4B              ;       DESTRUIDOS: AF y HL !!!
640+  8F4B              ;
641+  8F4B              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8F4B              ;
643+  8F4B
644+  8F4B 24           NextScan inc h          ; Incrementamos el scanline.
645+  8F4C 7C               ld a,h
646+  8F4D E6 07            and 7
647+  8F4F C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8F50
649+  8F50 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8F51 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8F53 6F               ld l,a
652+  8F54 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8F55
654+  8F55 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8F56 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8F58 67               ld h,a
657+  8F59 C9               ret
658+  8F5A
659+  8F5A              ;----------------------------------------------------------------------------------------------------------------
660+  8F5A              ;
661+  8F5A              ;	5/08/22
662+  8F5A              ;
663+  8F5A              ;   PreviousScan.
664+  8F5A              ;
665+  8F5A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8F5A              ;
667+  8F5A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8F5A              ;
669+  8F5A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8F5A              ;
671+  8F5A              ;       DESTRUIDOS: AF y HL !!!
672+  8F5A              ;
673+  8F5A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8F5A              ;
675+  8F5A
676+  8F5A 7C           PreviousScan ld a,h
677+  8F5B 25               dec h               ; Dec H.
678+  8F5C E6 07            and 7
679+  8F5E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8F5F
681+  8F5F 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8F60 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8F62 6F               ld l,a
684+  8F63 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8F64
686+  8F64 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8F65 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8F67 67               ld h,a
689+  8F68 C9               ret
690+  8F69
691+  8F69              ; -----------------------------------------------------------------------------------
692+  8F69              ;
693+  8F69              ;	28/2/23
694+  8F69              ;
695+  8F69              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8F69              ;	Extrae fotos de Album_de_fotos.
697+  8F69
698+  8F69 3A DE 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8F6C A7           	and a
700+  8F6D C8           	ret z
701+  8F6E ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8F72 31 00 70     	ld sp,Album_de_fotos
703+  8F75
704+  8F75 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8F77 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8F78 D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8F79
708+  8F79 ED 73 E1 85  	ld (Stack_2),sp
709+  8F7D ED 7B DF 85  	ld sp,(Stack)
710+  8F81
711+  8F81              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8F81
713+  8F81 3E CD        	ld a,$cd
714+  8F83 32 8B 8F     	ld (Imprime),a
715+  8F86 EB           	ex de,hl
716+  8F87 22 8C 8F     	ld (Imprime+1),hl
717+  8F8A EB           	ex de,hl
718+  8F8B
719+  8F8B              ; Ejecuta la llamada:	CALL $xx,xx
720+  8F8B
721+  8F8B 00 00 00     Imprime db 0,0,0
722+  8F8E
723+  8F8E 3A DE 85     	ld a,(Numero_de_malotes)
724+  8F91 3D           	dec a
725+  8F92 28 09        	jr z,1F
726+  8F94 32 DE 85      	ld (Numero_de_malotes),a
727+  8F97
728+  8F97 ED 7B E1 85   	ld sp,(Stack_2)
729+  8F9B 18 D8        	jr 2B
730+  8F9D
731+  8F9D AF           1 xor a
732+  8F9E 32 E1 85     	ld (Stack_2),a
733+  8FA1 C9           	ret
734+  8FA2
735+  8FA2              ; -----------------------------------------------------------------------------------
736+  8FA2              ;
737+  8FA2              ;	28/2/23
738+  8FA2              ;
739+  8FA2              ;	Pinta los disparos generados.
740+  8FA2
741+  8FA2              Extrae_foto_disparos
742+  8FA2
743+  8FA2 3A E7 85     	ld a,(Numero_de_disparotes)
744+  8FA5 A7           	and a
745+  8FA6 C8           	ret z
746+  8FA7 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8FAB 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8FAE
749+  8FAE FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8FB0 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8FB1 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8FB2
753+  8FB2 ED 73 E1 85  	ld (Stack_2),sp
754+  8FB6 ED 7B DF 85  	ld sp,(Stack)
755+  8FBA
756+  8FBA              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8FBA
758+  8FBA 3E CD        	ld a,$cd
759+  8FBC 32 C4 8F     	ld (Imprime2),a
760+  8FBF EB           	ex de,hl
761+  8FC0 22 C5 8F     	ld (Imprime2+1),hl
762+  8FC3 EB           	ex de,hl
763+  8FC4
764+  8FC4              ; Ejecuta la llamada:	CALL $xx,xx
765+  8FC4
766+  8FC4 00 00 00     Imprime2 db 0,0,0
767+  8FC7
768+  8FC7 3A E7 85     	ld a,(Numero_de_disparotes)
769+  8FCA 3D           	dec a
770+  8FCB 28 09        	jr z,1F
771+  8FCD 32 E7 85      	ld (Numero_de_disparotes),a
772+  8FD0
773+  8FD0 ED 7B E1 85  	ld sp,(Stack_2)
774+  8FD4 18 D8        	jr 2B
775+  8FD6
776+  8FD6 AF           1 xor a
777+  8FD7 32 E1 85     	ld (Stack_2),a
778+  8FDA C9           	ret
779+  8FDB
# file closed: Draw_XOR.asm
898   8FDB              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8FDB              ;   índices de Rutinas de impresión.
  2+  8FDB
  3+  8FDB EB 8F        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8FDD 18 90            defw Pinta_Amadeus_3x2
  5+  8FDF
  6+  8FDF 6E 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8FE1 0E 91            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8FE3 C2 90            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8FE5
 10+  8FE5 98 90        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8FE7 9C 91            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8FE9 50 91            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8FEB
 14+  8FEB
 15+  8FEB              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8FEB              ;
 17+  8FEB              ;   12/12/22
 18+  8FEB              ;
 19+  8FEB              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8FEB              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8FEB              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8FEB              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8FEB              ;
 24+  8FEB              ;   Modifica: DE y HL.
 25+  8FEB
 26+  8FEB ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8FEF FD F9        	ld sp,iy
 28+  8FF1 06 10            ld b,16
 29+  8FF3 D1           1 pop de
 30+  8FF4 7B               ld a,e
 31+  8FF5 AE               xor (hl)
 32+  8FF6 77           	ld (hl),a
 33+  8FF7 23           	inc hl
 34+  8FF8 7A               ld a,d
 35+  8FF9 AE               xor (hl)
 36+  8FFA 77           	ld (hl),a
 37+  8FFB 2B           	dec hl
 38+  8FFC 24           	inc h
 39+  8FFD 7C               ld a,h
 40+  8FFE E6 07            and 7
 41+  9000 20 0A            jr nz,2F
 42+  9002 7D               ld a,l
 43+  9003 C6 20            add a,$20
 44+  9005 6F               ld l,a
 45+  9006 38 04            jr c,2F
 46+  9008 7C               ld a,h
 47+  9009 D6 08            sub 8
 48+  900B 67               ld h,a
 49+  900C 7C           2 ld a,h
 50+  900D FE 58            cp $58
 51+  900F 28 02            jr z,3F
 52+  9011 10 E0            djnz 1B
 53+  9013 ED 7B DF 85  3 ld sp,(Stack)
 54+  9017 C9           	ret
 55+  9018
 56+  9018 ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  901C FD F9        	ld sp,iy
 58+  901E 06 08            ld b,8
 59+  9020 D1           1 pop de
 60+  9021 7B               ld a,e
 61+  9022 AE               xor (hl)
 62+  9023 77           	ld (hl),a
 63+  9024 23           	inc hl
 64+  9025 7A               ld a,d
 65+  9026 AE               xor (hl)
 66+  9027 77           	ld (hl),a
 67+  9028 23           	inc hl
 68+  9029 D1           	pop de
 69+  902A 7B               ld a,e
 70+  902B AE               xor (hl)
 71+  902C 77           	ld (hl),a
 72+  902D 2B           	dec hl
 73+  902E 2B           	dec hl
 74+  902F 24           	inc h
 75+  9030 7C               ld a,h
 76+  9031 E6 07            and 7
 77+  9033 20 0A            jr nz,2F
 78+  9035 7D               ld a,l
 79+  9036 C6 20            add a,$20
 80+  9038 6F               ld l,a
 81+  9039 38 04            jr c,2F
 82+  903B 7C               ld a,h
 83+  903C D6 08            sub 8
 84+  903E 67               ld h,a
 85+  903F 7C           2 ld a,h
 86+  9040 FE 58            cp $58
 87+  9042 28 25            jr z,4F
 88+  9044 7A               ld a,d
 89+  9045 AE               xor (hl)
 90+  9046 77               ld (hl),a
 91+  9047 D1           	pop de
 92+  9048 23           	inc hl
 93+  9049 7B               ld a,e
 94+  904A AE               xor (hl)
 95+  904B 77           	ld (hl),a
 96+  904C 23           	inc hl
 97+  904D 7A               ld a,d
 98+  904E AE               xor (hl)
 99+  904F 77           	ld (hl),a
100+  9050 2B           	dec hl
101+  9051 2B           	dec hl
102+  9052 24           	inc h
103+  9053 7C               ld a,h
104+  9054 E6 07            and 7
105+  9056 20 0A            jr nz,3F
106+  9058 7D               ld a,l
107+  9059 C6 20            add a,$20
108+  905B 6F               ld l,a
109+  905C 38 04            jr c,3F
110+  905E 7C               ld a,h
111+  905F D6 08            sub 8
112+  9061 67               ld h,a
113+  9062 7C           3 ld a,h
114+  9063 FE 58            cp $58
115+  9065 28 02            jr z,4F
116+  9067 10 B7            djnz 1B
117+  9069 ED 7B DF 85  4 ld sp,(Stack)
118+  906D C9           	ret
119+  906E
120+  906E              ; ---------------------------------------------------
121+  906E
122+  906E ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  9072 FD F9        	ld sp,iy
124+  9074
125+  9074              ; >>>
126+  9074
127+  9074 06 10            ld b,16
128+  9076 D1           1 pop de
129+  9077 7A           	ld a,d
130+  9078 AE           	xor (hl)
131+  9079 77           	ld (hl),a
132+  907A 24           	inc h
133+  907B 7C               ld a,h
134+  907C E6 07            and 7
135+  907E 20 0C            jr nz,2F
136+  9080 7D               ld a,l
137+  9081 C6 20            add a,$20
138+  9083 6F               ld l,a
139+  9084 38 06            jr c,2F
140+  9086 7C               ld a,h
141+  9087 D6 08            sub 8
142+  9089 67               ld h,a
143+  908A 18 00            jr 2F
144+  908C 7C           2 ld a,h
145+  908D FE 58            cp $58
146+  908F 28 02            jr z,3F
147+  9091 10 E3            djnz 1B
148+  9093 ED 7B DF 85  3 ld sp,(Stack)
149+  9097 C9           	ret
150+  9098
151+  9098 ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  909C FD F9        	ld sp,iy
153+  909E
154+  909E              ; >>>
155+  909E
156+  909E 06 10            ld b,16
157+  90A0 D1           1 pop de
158+  90A1 7B           	ld a,e
159+  90A2 AE           	xor (hl)
160+  90A3 77           	ld (hl),a
161+  90A4 24           	inc h
162+  90A5 7C               ld a,h
163+  90A6 E6 07            and 7
164+  90A8 20 0C            jr nz,2F
165+  90AA 7D               ld a,l
166+  90AB C6 20            add a,$20
167+  90AD 6F               ld l,a
168+  90AE 38 06            jr c,2F
169+  90B0 7C               ld a,h
170+  90B1 D6 08            sub 8
171+  90B3 67               ld h,a
172+  90B4 18 00            jr 2F
173+  90B6 7C           2 ld a,h
174+  90B7 FE 58            cp $58
175+  90B9 28 02            jr z,3F
176+  90BB 10 E3            djnz 1B
177+  90BD ED 7B DF 85  3 ld sp,(Stack)
178+  90C1 C9           	ret
179+  90C2
180+  90C2              ; ---------------------------------------------------
181+  90C2
182+  90C2 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  90C6 FD F9        	ld sp,iy
184+  90C8 06 08            ld b,8
185+  90CA D1           1 pop de
186+  90CB 7A           	ld a,d
187+  90CC AE           	xor (hl)
188+  90CD 77           	ld (hl),a
189+  90CE 23           	inc hl
190+  90CF D1           	pop de
191+  90D0 7B           	ld a,e
192+  90D1 AE           	xor (hl)
193+  90D2 77           	ld (hl),a
194+  90D3 2B           	dec hl
195+  90D4 24            	inc h
196+  90D5 7C               ld a,h
197+  90D6 E6 07            and 7
198+  90D8 20 0A            jr nz,2F
199+  90DA 7D               ld a,l
200+  90DB C6 20            add a,$20
201+  90DD 6F               ld l,a
202+  90DE 38 04            jr c,2F
203+  90E0 7C               ld a,h
204+  90E1 D6 08            sub 8
205+  90E3 67               ld h,a
206+  90E4 7C           2 ld a,h
207+  90E5 FE 58            cp $58
208+  90E7 28 20            jr z,4F
209+  90E9 D1               pop de
210+  90EA 7B           	ld a,e
211+  90EB AE           	xor (hl)
212+  90EC 77           	ld (hl),a
213+  90ED 23           	inc hl
214+  90EE 7A           	ld a,d
215+  90EF AE           	xor (hl)
216+  90F0 77           	ld (hl),a
217+  90F1 2B           	dec hl
218+  90F2 24           	inc h
219+  90F3 7C               ld a,h
220+  90F4 E6 07            and 7
221+  90F6 20 0A            jr nz,3F
222+  90F8 7D               ld a,l
223+  90F9 C6 20            add a,$20
224+  90FB 6F               ld l,a
225+  90FC 38 04            jr c,3F
226+  90FE 7C               ld a,h
227+  90FF D6 08            sub 8
228+  9101 67               ld h,a
229+  9102 7C           3 ld a,h
230+  9103 FE 58            cp $58
231+  9105 28 02            jr z,4F
232+  9107 10 C1            djnz 1B
233+  9109 ED 7B DF 85  4 ld sp,(Stack)
234+  910D C9           	ret
235+  910E
236+  910E ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  9112 FD F9        	ld sp,iy
238+  9114 06 08            ld b,8
239+  9116 D1           1 pop de
240+  9117 D1           	pop de
241+  9118 7B           	ld a,e
242+  9119 AE           	xor (hl)
243+  911A 77           	ld (hl),a
244+  911B 24            	inc h
245+  911C 7C               ld a,h
246+  911D E6 07            and 7
247+  911F 20 0A            jr nz,2F
248+  9121 7D               ld a,l
249+  9122 C6 20            add a,$20
250+  9124 6F               ld l,a
251+  9125 38 04            jr c,2F
252+  9127 7C               ld a,h
253+  9128 D6 08            sub 8
254+  912A 67               ld h,a
255+  912B 7C           2 ld a,h
256+  912C FE 58            cp $58
257+  912E 28 1B            jr z,4F
258+  9130 D1               pop de
259+  9131 7A           	ld a,d
260+  9132 AE           	xor (hl)
261+  9133 77           	ld (hl),a
262+  9134 24           	inc h
263+  9135 7C               ld a,h
264+  9136 E6 07            and 7
265+  9138 20 0A            jr nz,3F
266+  913A 7D               ld a,l
267+  913B C6 20            add a,$20
268+  913D 6F               ld l,a
269+  913E 38 04            jr c,3F
270+  9140 7C               ld a,h
271+  9141 D6 08            sub 8
272+  9143 67               ld h,a
273+  9144 7C           3 ld a,h
274+  9145 FE 58            cp $58
275+  9147 28 02            jr z,4F
276+  9149 10 CB            djnz 1B
277+  914B ED 7B DF 85  4 ld sp,(Stack)
278+  914F C9           	ret
279+  9150
280+  9150 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  9154 FD F9        	ld sp,iy
282+  9156 06 08            ld b,8
283+  9158 D1           1 pop de
284+  9159 7B           	ld a,e
285+  915A AE           	xor (hl)
286+  915B 77           	ld (hl),a
287+  915C 23           	inc hl
288+  915D 7A           	ld a,d
289+  915E AE           	xor (hl)
290+  915F 77           	ld (hl),a
291+  9160 2B           	dec hl
292+  9161 24             	inc h
293+  9162 7C               ld a,h
294+  9163 E6 07            and 7
295+  9165 20 0A            jr nz,2F
296+  9167 7D               ld a,l
297+  9168 C6 20            add a,$20
298+  916A 6F               ld l,a
299+  916B 38 04            jr c,2F
300+  916D 7C               ld a,h
301+  916E D6 08            sub 8
302+  9170 67               ld h,a
303+  9171 7C           2 ld a,h
304+  9172 FE 58            cp $58
305+  9174 28 21            jr z,4F
306+  9176 D1               pop de
307+  9177 7A           	ld a,d
308+  9178 AE           	xor (hl)
309+  9179 77           	ld (hl),a
310+  917A 23           	inc hl
311+  917B D1               pop de
312+  917C 7B           	ld a,e
313+  917D AE           	xor (hl)
314+  917E 77           	ld (hl),a
315+  917F 2B           	dec hl
316+  9180 24           	inc h
317+  9181 7C               ld a,h
318+  9182 E6 07            and 7
319+  9184 20 0A            jr nz,3F
320+  9186 7D               ld a,l
321+  9187 C6 20            add a,$20
322+  9189 6F               ld l,a
323+  918A 38 04            jr c,3F
324+  918C 7C               ld a,h
325+  918D D6 08            sub 8
326+  918F 67               ld h,a
327+  9190 7C           3 ld a,h
328+  9191 FE 58            cp $58
329+  9193 28 02            jr z,4F
330+  9195 10 C1            djnz 1B
331+  9197 ED 7B DF 85  4 ld sp,(Stack)
332+  919B C9           	ret
333+  919C
334+  919C ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  91A0 FD F9        	ld sp,iy
336+  91A2 06 08            ld b,8
337+  91A4 D1           1 pop de
338+  91A5 7B           	ld a,e
339+  91A6 AE           	xor (hl)
340+  91A7 77           	ld (hl),a
341+  91A8 24            	inc h
342+  91A9 7C               ld a,h
343+  91AA E6 07            and 7
344+  91AC 20 0A            jr nz,2F
345+  91AE 7D               ld a,l
346+  91AF C6 20            add a,$20
347+  91B1 6F               ld l,a
348+  91B2 38 04            jr c,2F
349+  91B4 7C               ld a,h
350+  91B5 D6 08            sub 8
351+  91B7 67               ld h,a
352+  91B8 7C           2 ld a,h
353+  91B9 FE 58            cp $58
354+  91BB 28 1C            jr z,4F
355+  91BD D1               pop de
356+  91BE 7A           	ld a,d
357+  91BF AE           	xor (hl)
358+  91C0 77           	ld (hl),a
359+  91C1 24           	inc h
360+  91C2 7C               ld a,h
361+  91C3 E6 07            and 7
362+  91C5 20 0A            jr nz,3F
363+  91C7 7D               ld a,l
364+  91C8 C6 20            add a,$20
365+  91CA 6F               ld l,a
366+  91CB 38 04            jr c,3F
367+  91CD 7C               ld a,h
368+  91CE D6 08            sub 8
369+  91D0 67               ld h,a
370+  91D1 7C           3 ld a,h
371+  91D2 FE 58            cp $58
372+  91D4 28 03            jr z,4F
373+  91D6 D1               pop de
374+  91D7 10 CB            djnz 1B
375+  91D9 ED 7B DF 85  4 ld sp,(Stack)
376+  91DD C9           	ret
377+  91DE
378+  91DE              ; ---------------------------------------------------
379+  91DE              ;
380+  91DE              ;   27/02/23
381+  91DE              ;
382+  91DE              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  91DE              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  91DE              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  91DE
386+  91DE ED 73 DF 85  Pinta_Disparo ld (Stack),sp
387+  91E2 FD F9            ld sp,iy
388+  91E4 06 02            ld b,2
389+  91E6 D1           1 pop de
390+  91E7 7B               ld a,e
391+  91E8 AE               xor (hl)
392+  91E9 77               ld (hl),a
393+  91EA 23               inc hl
394+  91EB 7A               ld a,d
395+  91EC AE               xor (hl)
396+  91ED 77               ld (hl),a
397+  91EE 2B               dec hl
398+  91EF
399+  91EF 24               inc h
400+  91F0 7C               ld a,h
401+  91F1 E6 07            and 7
402+  91F3 20 0A            jr nz,2F
403+  91F5 7D               ld a,l
404+  91F6 C6 20            add a,$20
405+  91F8 6F               ld l,a
406+  91F9 38 04            jr c,2F
407+  91FB 7C               ld a,h
408+  91FC D6 08            sub 8
409+  91FE 67               ld h,a
410+  91FF 7C           2 ld a,h
411+  9200 FE 58            cp $58
412+  9202 28 02            jr z,3F
413+  9204
414+  9204 10 E0            djnz 1B
415+  9206 ED 7B DF 85  3 ld sp,(Stack)
416+  920A C9               ret
417+  920B
# file closed: Rutinas_de_impresion_sprites.asm
899   920B              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  920B              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  920B              ;
  3+  920B              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  920B              ;
  5+  920B              ; *****************************************************************************************************************************************************************************************
  6+  920B              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  920B
  8+  920B 7C           calcula_tercio ld a,h
  9+  920C E6 18        	and $18
 10+  920E CB 2F        	sra a
 11+  9210 CB 2F        	sra a
 12+  9212 CB 2F        	sra a
 13+  9214 C9           	ret
 14+  9215
# file closed: calcula_tercio.asm
900   9215              	include "Cls.asm"
# file opened: Cls.asm
  1+  9215              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  9215              ;
  3+  9215              ;
  4+  9215              ;	CLS.
  5+  9215              ;
  6+  9215              ;	Limpia la pantalla y define sus atributos.
  7+  9215              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  9215              ;
  9+  9215              ;	COLORES: 0 ..... NEGRO
 10+  9215              ;    		 1 ..... AZUL
 11+  9215              ; 			 2 ..... ROJO
 12+  9215              ;			 3 ..... MAGENTA
 13+  9215              ; 			 4 ..... VERDE
 14+  9215              ; 			 5 ..... CIAN
 15+  9215              ;			 6 ..... AMARILLO
 16+  9215              ; 			 7 ..... BLANCO
 17+  9215              ;
 18+  9215              ;	INPUT: A contiene los atributos de pantalla.
 19+  9215              ;
 20+  9215              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  9215
 22+  9215
 23+  9215 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  9218 11 01 40     	LD DE,$4001
 25+  921B 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  921E 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  9220 ED B0        	LDIR
 28+  9222 01 FF 02     	LD BC,767
 29+  9225 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  9226 ED B0        	LDIR
 31+  9228 C9           	ret
 32+  9229
# file closed: Cls.asm
901   9229              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  9229              ; ******************************************************************************************************************************************************************************************
  2+  9229              ;
  3+  9229              ;   22/01/23
  4+  9229              ;
  5+  9229              ;	Mov_down
  6+  9229              ;
  7+  9229              ; 	Mueve el Sprite X px hacia abajo.
  8+  9229              ;
  9+  9229              ;
 10+  9229 21 C9 85     Mov_down ld hl,Ctrl_0
 11+  922C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  922E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  922E              ; 																	; _ en el caso de que no lo haya.
 14+  922E 3A B3 85     	ld a,(Vel_down)
 15+  9231 47           	ld b,a
 16+  9232 2A 9D 85         ld hl,(Posicion_actual)
 17+  9235 CD 0B 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  9238 E6 02        	and 2
 19+  923A 28 0F        	jr z,1F
 20+  923C
 21+  923C              ; Nos encontramos en el último tercio de pantalla.
 22+  923C              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  923C
 24+  923C 7C           	ld a,h
 25+  923D FE 57        	cp $57
 26+  923F 20 0A        	jr nz,1F
 27+  9241 7D           	ld a,l
 28+  9242 C6 20        	add $20
 29+  9244 30 05        	jr nc,1F
 30+  9246
 31+  9246              ; ------------------------------
 32+  9246 CD 21 95     	call Reaparece_arriba
 33+  9249              ;	call Reinicio
 34+  9249              ; ------------------------------
 35+  9249
 36+  9249 18 08        	jr 3F
 37+  924B CD 4B 8F     1 call NextScan
 38+  924E 22 9D 85     	ld (Posicion_actual),hl
 39+  9251 10 E2            djnz 2B
 40+  9253 CD 37 95     3 call Genera_coordenadas
 41+  9256 C9           	ret
 42+  9257
 43+  9257              ; ******************************************************************************************************************************************************************************************
 44+  9257              ;
 45+  9257              ;   22/01/23
 46+  9257              ;
 47+  9257              ;	Mov_up
 48+  9257              ;
 49+  9257              ; 	Mueve el Sprite hacia arriba.
 50+  9257              ;
 51+  9257              ;
 52+  9257 21 C9 85     Mov_up ld hl,Ctrl_0
 53+  925A CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  925C              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  925C              ; 																		; _ en el caso de que no lo haya.
 56+  925C 3A B2 85     	ld a,(Vel_up)
 57+  925F 47           	ld b,a
 58+  9260 2A 9D 85     	ld hl,(Posicion_actual)
 59+  9263 CD 0B 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  9266 A7           	and a
 61+  9267 20 10        	jr nz,1F
 62+  9269
 63+  9269              ; Nos encontramos en el 1er tercio de pantalla.
 64+  9269              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  9269
 66+  9269 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  926A FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  926C 20 0B            jr nz,1F
 69+  926E 7D               ld a,l
 70+  926F D6 20            sub $20
 71+  9271 30 06            jr nc,1F
 72+  9273 25               dec h
 73+  9274
 74+  9274              ; -----------------------------
 75+  9274 CD 11 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  9277              ;	call Reinicio
 77+  9277              ; -----------------------------
 78+  9277
 79+  9277 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  9279 CD 5A 8F     1 call PreviousScan
 81+  927C 22 9D 85     	ld (Posicion_actual),hl
 82+  927F 10 E2            djnz 3B
 83+  9281 CD 37 95     2 call Genera_coordenadas
 84+  9284 C9           	ret
 85+  9285
 86+  9285              ; ******************************************************************************************************************************************************************************************
 87+  9285              ;
 88+  9285              ;	19/10/22
 89+  9285              ;
 90+  9285              ;	Mov_right.
 91+  9285              ;
 92+  9285              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  9285              ;
 94+  9285
 95+  9285 21 C9 85     Mov_right ld hl,Ctrl_0
 96+  9288 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  928A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  928A              ; 																	; _ en el caso de que no lo haya.
 99+  928A 3A C9 85     	ld a,(Ctrl_0)
100+  928D CB 77        	bit 6,a
101+  928F 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9291
103+  9291 CD BF 94     	call Stop_Amadeus_right
104+  9294 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  9295 18 4D        	jr 8F
106+  9297
107+  9297 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  929A FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  929C 20 46        	jr nz,8F
110+  929E
111+  929E 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  92A1 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  92A2 28 40        	jr z,8F
114+  92A4
115+  92A4              ; ---------- ---------- ----------
116+  92A4              ;
117+  92A4              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  92A4
119+  92A4 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  92A7 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  92A9 28 11        	jr z,1F
122+  92AB 38 06        	jr c,6F
123+  92AD FE 04        	cp 4
124+  92AF 28 14        	jr z,7F
125+  92B1 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  92B3
127+  92B3              ; ---------- ---------- ----------
128+  92B3              ;
129+  92B3              ; Perfiles de velocidad
130+  92B3              ;
131+  92B3
132+  92B3 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
133+  92B6 FE FE        	cp $fe
134+  92B8 20 2A        	jr nz,8F
135+  92BA 18 10        	jr 3F
136+  92BC 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
137+  92BF FE FD        	cp $fd
138+  92C1 20 21        	jr nz,8F
139+  92C3 18 07        	jr 3F
140+  92C5 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
141+  92C8 FE FB        	cp $fb
142+  92CA 20 18        	jr nz,8F
143+  92CC
144+  92CC              ; ---------- ---------- ----------
145+  92CC
146+  92CC              3
147+  92CC CD FF 94     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  92CF              ;	call Reinicio
149+  92CF
150+  92CF              ; ---------- ---------- ----------
151+  92CF              ;
152+  92CF              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  92CF
154+  92CF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  92D1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  92D2 CD EB 92     	call DESPLZ_DER
157+  92D5 C1           	pop bc
158+  92D6 10 F9        	djnz 5B
159+  92D8 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  92DB 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  92DC 22 9D 85     	ld (Posicion_actual),hl
162+  92DF CD 37 95     	call Genera_coordenadas
163+  92E2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  92E4
165+  92E4              ; ---------- ---------- ----------
166+  92E4
167+  92E4 2A 9D 85     8 ld hl,(Posicion_actual)
168+  92E7 CD EB 92     	call DESPLZ_DER
169+  92EA C9           2 ret
170+  92EB
171+  92EB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  92EB              ;
173+  92EB              ;	22/9/22
174+  92EB              ;
175+  92EB
176+  92EB CD FA 92     DESPLZ_DER call Desplaza_derecha
177+  92EE CD 46 93         call modifica_parametros_1er_DESPLZ_2
178+  92F1 CD 6F 93         call Ciclo_completo
179+  92F4 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  92F7 CB FE        	set 7,(hl)
181+  92F9 C9           	ret
182+  92FA
183+  92FA              ; ******************************************************************************************************************************************************************************************
184+  92FA              ;	15/02/23
185+  92FA              ;
186+  92FA
187+  92FA 3A B1 85     Desplaza_derecha ld a,(Vel_right)
188+  92FD 47           	ld b,a
189+  92FE 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
190+  9301 23           1 inc hl
191+  9302 23           	inc hl
192+  9303 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  9305 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  9308 CD B5 87     	call Extrae_address
195+  930B 22 9F 85     	ld (Puntero_objeto),hl
196+  930E
197+  930E              ; Modifica (Puntero_DESPLZ_izq).
198+  930E
199+  930E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  930E              ; Cuántos movimientos hemos hecho ??
201+  930E              ; DE contiene (Puntero_DESPLZ_der).
202+  930E
203+  930E 2A A5 85     7 ld hl,(Indice_Sprite_der)
204+  9311 EB           	ex de,hl
205+  9312 A7           	and a
206+  9313 ED 52        	sbc hl,de
207+  9315 CB 3D        	srl l
208+  9317 3E 08        6 ld a,8
209+  9319 95           	sub l
210+  931A 30 1E        	jr nc,3F
211+  931C
212+  931C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  931C              ; B="0".
214+  931C
215+  931C 04           4 inc b
216+  931D 3C           	inc a
217+  931E 20 FC        	jr nz,4B
218+  9320 78           	ld a,b
219+  9321 08           	ex af,af
220+  9322 2A A5 85     	ld hl,(Indice_Sprite_der)
221+  9325 23           5 inc hl
222+  9326 23           	inc hl
223+  9327 10 FC        	djnz 5B
224+  9329 22 A9 85     	ld (Puntero_DESPLZ_der),hl
225+  932C CD B5 87     	call Extrae_address
226+  932F 22 9F 85     	ld (Puntero_objeto),hl
227+  9332
228+  9332              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  9332              ; _(Posicion_actual).
230+  9332
231+  9332 21 9D 85     	ld hl,Posicion_actual
232+  9335 34           	inc (hl)
233+  9336 08               ex af,af
234+  9337 6F           	ld l,a
235+  9338 18 DD        	jr 6B
236+  933A
237+  933A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  933A
239+  933A 47           3 ld b,a
240+  933B 2A A7 85     	ld hl,(Indice_Sprite_izq)
241+  933E 23           2 inc hl
242+  933F 23           	inc hl
243+  9340 10 FC        	djnz 2B
244+  9342 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
245+  9345 C9           8 ret
246+  9346
247+  9346              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  9346              ;
249+  9346              ;	24/7/22
250+  9346              ;
251+  9346              ;	modifica_parametros_1er_DESPLZ_2
252+  9346              ;
253+  9346              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  9346              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  9346              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  9346
257+  9346 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  9349 A7           	and a
259+  934A 20 1F        	jr nz,1F
260+  934C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  934E 32 A3 85         ld (CTRL_DESPLZ),a
262+  9351
263+  9351 21 9C 85     	ld hl,Columns
264+  9354 34           	inc (hl)
265+  9355 3A AF 85     	ld a,(Cuad_objeto)
266+  9358 E6 01        	and 1
267+  935A 28 0F        	jr z,1F
268+  935C 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  935F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  9360 22 9D 85     	ld (Posicion_actual),hl
271+  9363 CD 37 95     	call Genera_coordenadas
272+  9366 CD CB 94     	call Inc_CTRL_DESPLZ
273+  9369 18 03        	jr 2F
274+  936B CD CB 94     1 call Inc_CTRL_DESPLZ
275+  936E C9           2 ret
276+  936F
277+  936F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  936F              ;
279+  936F              ;	24/7/22
280+  936F              ;
281+  936F              ;	Ciclo_completo.
282+  936F              ;
283+  936F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  936F              ;
285+  936F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  936F              ; 	Decrementamos (Columns).
287+  936F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  936F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  936F
290+  936F
291+  936F 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  9372 FE FF        	cp $ff
293+  9374 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  9376 E6 F0        	and $f0
295+  9378 20 28        	jr nz,3F
296+  937A
297+  937A              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  937A
299+  937A 3A A3 85     	ld a,(CTRL_DESPLZ)
300+  937D 47           	ld b,a
301+  937E 3E F8        	ld a,$f8
302+  9380 80           	add b
303+  9381 32 A3 85     	ld (CTRL_DESPLZ),a
304+  9384 18 1C        	jr 3F
305+  9386 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  9389 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  938A AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  938B 32 A3 85     	ld (CTRL_DESPLZ),a
309+  938E 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9391 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9393 20 0A        	jr nz,2F
312+  9395 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  9398 23           	inc hl
314+  9399 22 9D 85     	ld (Posicion_actual),hl
315+  939C CD 37 95     	call Genera_coordenadas
316+  939F
317+  939F              ; Inicia el puntero de Sprite.
318+  939F
319+  939F CD CC 87     2 call Inicia_puntero_objeto_der
320+  93A2 C9           3 ret
321+  93A3
322+  93A3              ; ******************************************************************************************************************************************************************************************
323+  93A3              ;
324+  93A3              ;	15/02/23
325+  93A3              ;
326+  93A3              ;	Mov_left.
327+  93A3              ;
328+  93A3              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  93A3              ;
330+  93A3              Mov_left
331+  93A3
332+  93A3 21 C9 85     	ld hl,Ctrl_0
333+  93A6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  93A8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  93A8              ; 																	; _ en el caso de que no lo haya.
336+  93A8 3A C9 85     	ld a,(Ctrl_0)
337+  93AB CB 77        	bit 6,a
338+  93AD 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  93AF
340+  93AF CD C5 94     	call Stop_Amadeus_left
341+  93B2 C8           	ret z
342+  93B3 20 4A        	jr nz,8F
343+  93B5
344+  93B5 3A A1 85     11 ld a,(Coordenada_X)
345+  93B8 A7           	and a
346+  93B9 20 44        	jr nz,8F
347+  93BB
348+  93BB 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  93BE A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  93BF 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  93C1
352+  93C1              ; ---------- ---------- ----------
353+  93C1
354+  93C1 3A B0 85     	ld a,(Vel_left)
355+  93C4 FE 02        	cp 2
356+  93C6 28 0F        	jr z,1F
357+  93C8 38 04        	jr c,6F
358+  93CA FE 04        	cp 4
359+  93CC 28 12        	jr z,7F
360+  93CE
361+  93CE              ; ---------- ---------- ----------
362+  93CE
363+  93CE 3A A3 85     6 ld a,(CTRL_DESPLZ)
364+  93D1 FE F9        	cp $f9
365+  93D3 20 2A        	jr nz,8F
366+  93D5 18 10        	jr 4F
367+  93D7 3A A3 85     1 ld a,(CTRL_DESPLZ)
368+  93DA FE FA        	cp $fa
369+  93DC 20 21        	jr nz,8F
370+  93DE 18 07        	jr 4F
371+  93E0 3A A3 85     7 ld a,(CTRL_DESPLZ)
372+  93E3 FE FC        	cp $fc
373+  93E5 20 18        	jr nz,8F
374+  93E7
375+  93E7              ; ---------- ---------- ----------
376+  93E7
377+  93E7              4
378+  93E7 CD ED 94     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  93EA              ;	call Reinicio
380+  93EA
381+  93EA              ; ---------- ---------- ----------
382+  93EA
383+  93EA 06 03        	ld b,3 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  93EC C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  93ED
386+  93ED              ;	ld hl,(Indice_Sprite_izq)
387+  93ED              ;	ld (Puntero_DESPLZ_izq),hl
388+  93ED
389+  93ED CD 06 94     	call DESPLZ_IZQ
390+  93F0 C1           	pop bc
391+  93F1 10 F9        	djnz 5B
392+  93F3 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  93F6 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  93F7 22 9D 85     	ld (Posicion_actual),hl
395+  93FA CD 37 95     	call Genera_coordenadas
396+  93FD 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  93FF
398+  93FF              ; ---------- ---------- ----------
399+  93FF
400+  93FF              ; Movemos, no hay recolocación.
401+  93FF
402+  93FF 2A 9D 85     8 ld hl,(Posicion_actual)
403+  9402 CD 06 94     	call DESPLZ_IZQ
404+  9405 C9           2 ret
405+  9406
406+  9406              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
407+  9406              ;
408+  9406              ;	22/9/22
409+  9406
410+  9406              DESPLZ_IZQ
411+  9406
412+  9406 CD 15 94     	call Desplaza_izquierda
413+  9409 CD 61 94         call modifica_parametros_1er_DESPLZ
414+  940C CD 89 94     	call Ciclo_completo_2
415+  940F 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
416+  9412 CB BE        	res 7,(hl)
417+  9414 C9           	ret
418+  9415
419+  9415              Desplaza_izquierda
420+  9415
421+  9415 3A B0 85     	ld a,(Vel_left)
422+  9418 47           	ld b,a
423+  9419 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
424+  941C 23           1 inc hl
425+  941D 23           	inc hl
426+  941E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
427+  9420 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
428+  9423 CD B5 87     	call Extrae_address
429+  9426 22 9F 85     	ld (Puntero_objeto),hl
430+  9429
431+  9429              ; Modifica (Puntero_DESPLZ_der).
432+  9429
433+  9429              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
434+  9429              ; Cuántos movimientos hemos hecho ??
435+  9429              ; DE contiene (Puntero_DESPLZ_izq).
436+  9429
437+  9429 2A A7 85     7 ld hl,(Indice_Sprite_izq)
438+  942C EB           	ex de,hl
439+  942D A7           	and a
440+  942E ED 52        	sbc hl,de
441+  9430 CB 3D        	srl l
442+  9432 3E 08        6 ld a,8
443+  9434 95           	sub l
444+  9435 30 1E        	jr nc,3F
445+  9437
446+  9437              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
447+  9437              ; B="0".
448+  9437
449+  9437 04           4 inc b
450+  9438 3C           	inc a
451+  9439 20 FC        	jr nz,4B
452+  943B 78           	ld a,b
453+  943C 08           	ex af,af
454+  943D 2A A7 85     	ld hl,(Indice_Sprite_izq)
455+  9440 23           5 inc hl
456+  9441 23           	inc hl
457+  9442 10 FC        	djnz 5B
458+  9444 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
459+  9447 CD B5 87     	call Extrae_address
460+  944A 22 9F 85     	ld (Puntero_objeto),hl
461+  944D
462+  944D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
463+  944D              ; _(Posicion_actual).
464+  944D
465+  944D 21 9D 85     	ld hl,Posicion_actual
466+  9450 35           	dec (hl)
467+  9451 08           	ex af,af
468+  9452 6F           	ld l,a
469+  9453 18 DD        	jr 6B
470+  9455
471+  9455              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
472+  9455
473+  9455 47           3 ld b,a
474+  9456 2A A5 85     	ld hl,(Indice_Sprite_der)
475+  9459 23           2 inc hl
476+  945A 23           	inc hl
477+  945B 10 FC        	djnz 2B
478+  945D 22 A9 85     	ld (Puntero_DESPLZ_der),hl
479+  9460 C9           8 ret
480+  9461
481+  9461              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
482+  9461              ;
483+  9461              ;	modifica_parametros_1er_DESPLZ
484+  9461              ;
485+  9461              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
486+  9461              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
487+  9461              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
488+  9461
489+  9461 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
490+  9464 A7           	and a
491+  9465 20 1E        	jr nz,1F
492+  9467 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
493+  9468 32 A3 85         ld (CTRL_DESPLZ),a
494+  946B 21 9C 85     	ld hl,Columns
495+  946E 34           	inc (hl)
496+  946F 3A AF 85     	ld a,(Cuad_objeto)
497+  9472 E6 01        	and 1
498+  9474 20 0F        	jr nz,1F
499+  9476 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
500+  9479 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
501+  947A 22 9D 85     	ld (Posicion_actual),hl
502+  947D CD 37 95     	call Genera_coordenadas
503+  9480 CD DC 94     	call Dec_CTRL_DESPLZ
504+  9483 18 03        	jr 2F
505+  9485 CD DC 94     1 call Dec_CTRL_DESPLZ
506+  9488 C9           2 ret
507+  9489
508+  9489              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
509+  9489
510+  9489 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
511+  948C FE F7        	cp $f7
512+  948E 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
513+  9490 30 2C        	jr nc,3F
514+  9492
515+  9492              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
516+  9492
517+  9492 06 00        	ld b,0
518+  9494 04           4 inc b
519+  9495 3C           	inc a
520+  9496 FE F7        	cp $f7
521+  9498 20 FA        	jr nz,4B
522+  949A 3E FF        	ld a,$ff
523+  949C 90           	sub b
524+  949D 32 A3 85     	ld (CTRL_DESPLZ),a
525+  94A0 18 1C        	jr 3F
526+  94A2
527+  94A2              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
528+  94A2
529+  94A2 21 9C 85     1 ld hl,Columns
530+  94A5 35           	dec (hl)
531+  94A6 AF           	xor a
532+  94A7 32 A3 85     	ld (CTRL_DESPLZ),a
533+  94AA 3A AF 85     	ld a,(Cuad_objeto)
534+  94AD E6 01        	and 1
535+  94AF 28 0A        	jr z,2F
536+  94B1 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
537+  94B4 2B           	dec hl
538+  94B5 22 9D 85     	ld (Posicion_actual),hl
539+  94B8 CD 37 95     	call Genera_coordenadas
540+  94BB
541+  94BB              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
542+  94BB
543+  94BB CD DF 87     2 call Inicia_puntero_objeto_izq
544+  94BE C9           3 ret
545+  94BF
546+  94BF              ; ---------- ---------- ---------- ---------- ---------- ----------
547+  94BF              ;
548+  94BF              ;	19/10/22
549+  94BF              ;
550+  94BF              ;	(cp 29) para un Amadeus de 3 Columns.
551+  94BF              ;	(cp 30)   ""  ""    ""     2 Columns.
552+  94BF
553+  94BF 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
554+  94C2 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
555+  94C4 C9           	ret
556+  94C5
557+  94C5              ; ---------- ---------- ---------- ---------- ---------- ----------
558+  94C5              ;
559+  94C5              ;	19/10/22
560+  94C5              ;
561+  94C5              ;	(cp 2) para un Amadeus de 3 Columns.
562+  94C5              ;	(cp 1)   ""  ""    ""     2 Columns.
563+  94C5
564+  94C5 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
565+  94C8 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
566+  94CA C9           	ret
567+  94CB
568+  94CB              ; ---------- ---------- ---------- ---------- ---------- ----------
569+  94CB              ;
570+  94CB              ;	24/7/22
571+  94CB              ;
572+  94CB              ;	Inc_CTRL_DESPLZ
573+  94CB              ;
574+  94CB              ;
575+  94CB              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
576+  94CB
577+  94CB 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
578+  94CE 3A B1 85     	ld a,(Vel_right)
579+  94D1 A7           	and a
580+  94D2 28 06        	jr z,1F
581+  94D4 47           	ld b,a
582+  94D5 34           3 inc (hl)
583+  94D6 10 FD        	djnz 3B
584+  94D8 18 01        	jr 2F
585+  94DA 34           1 inc (hl)
586+  94DB C9           2 ret
587+  94DC
588+  94DC              ; ---------- ---------- ---------- ---------- ---------- ----------
589+  94DC              ;
590+  94DC              ;	5/2/23
591+  94DC              ;
592+  94DC              ;	Dec_CTRL_DESPLZ
593+  94DC              ;
594+  94DC              ;
595+  94DC              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
596+  94DC
597+  94DC 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
598+  94DF 3A B0 85     	ld a,(Vel_left)
599+  94E2 A7           	and a
600+  94E3 28 06        	jr z,1F
601+  94E5 47           	ld b,a
602+  94E6 35           3 dec (hl)
603+  94E7 10 FD        	djnz 3B
604+  94E9 18 01        	jr 2F
605+  94EB 35           1 dec (hl)
606+  94EC C9           2 ret
607+  94ED
608+  94ED              ; ---------- ---------- ---------- ---------- ---------- ----------
609+  94ED
610+  94ED 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
611+  94F0 01 1F 00     	ld bc,31
612+  94F3 A7           	and a
613+  94F4 ED 4A        	adc hl,bc
614+  94F6 22 9D 85     	ld (Posicion_actual),hl
615+  94F9 21 C9 85     	ld hl,Ctrl_0														; $xxx1
616+  94FC CB C6        	set 0,(hl)
617+  94FE C9           	ret
618+  94FF
619+  94FF              ; ---------- ---------- ---------- ---------- ---------- ----------
620+  94FF
621+  94FF 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
622+  9502 01 1F 00     	ld bc,31
623+  9505 A7           	and a
624+  9506 ED 42        	sbc hl,bc
625+  9508 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
626+  950B 21 C9 85     	ld hl,Ctrl_0
627+  950E CB CE        	set 1,(hl)
628+  9510 C9           	ret
629+  9511
630+  9511              ; ---------- ---------- ---------- ---------- ---------- ----------
631+  9511
632+  9511 24           Reaparece_abajo inc h
633+  9512 01 E0 17     	ld bc,$17e0
634+  9515 A7           	and a
635+  9516 ED 4A        	adc hl,bc
636+  9518 22 9D 85     	ld (Posicion_actual),hl
637+  951B 21 C9 85     	ld hl,Ctrl_0
638+  951E CB D6        	set 2,(hl)
639+  9520 C9           	ret
640+  9521
641+  9521              ; ---------- ---------- ---------- ---------- ---------- ----------
642+  9521
643+  9521 01 E0 17     Reaparece_arriba ld bc,$17e0
644+  9524 A7           	and a
645+  9525 ED 42        	sbc hl,bc
646+  9527 22 9D 85     	ld (Posicion_actual),hl
647+  952A 21 C9 85     	ld hl,Ctrl_0
648+  952D CB DE        	set 3,(hl)
649+  952F C9           	ret
650+  9530
651+  9530              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
652+  9530
653+  9530 2A AD 85     Reinicio ld hl,(Posicion_inicio)
654+  9533 22 9D 85     	ld (Posicion_actual),hl
655+  9536 C9           	ret
# file closed: Direcciones.asm
902   9537              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  9537              ; ------------------------------------------------------------------------
  2+  9537              ;
  3+  9537              ;	02/04/23
  4+  9537              ;
  5+  9537              ;	Proporciona las coordenadas del objeto a imprimir.
  6+  9537              ;	Fila superior "0", Columna izquierda "0".
  7+  9537              ;
  8+  9537              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  9+  9537              ;
 10+  9537              ;	Modifica: A,BC y DE.
 11+  9537
 12+  9537 C5           Genera_coordenadas push bc
 13+  9538 E5           	push hl
 14+  9539 D5           	push de
 15+  953A
 16+  953A 2A 9D 85     	ld hl,(Posicion_actual)
 17+  953D
 18+  953D 7D           	ld a,l
 19+  953E E6 1F        	and $1f
 20+  9540 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
 21+  9543
 22+  9543 CD 0B 92     	call calcula_tercio
 23+  9546 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
 24+  9547
 25+  9547 1E 00        	ld e,0
 26+  9549 7D           	ld a,l
 27+  954A E6 E0        	and $e0
 28+  954C 28 01        	jr z,1F
 29+  954E 04           	inc b
 30+  954F
 31+  954F 04           1 inc b
 32+  9550 05           	dec b
 33+  9551 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
 34+  9553              ;														; _ , salimos.
 35+  9553 1C           3 inc e
 36+  9554 D6 20        	sub 32
 37+  9556 20 FB        	jr nz,3B
 38+  9558 10 F5        	djnz 1B
 39+  955A
 40+  955A 7B           2 ld a,e
 41+  955B 32 A2 85     	ld (Coordenada_y),a
 42+  955E
 43+  955E D1           	pop de
 44+  955F E1           	pop hl
 45+  9560 C1           	pop bc
 46+  9561
 47+  9561 C9           	ret
 48+  9562
 49+  9562              ; ------------------------------------------------------------------------
 50+  9562              ;	28/03/23
 51+  9562              ;
 52+  9562              ;	Proporciona las coordenadas del disparo a imprimir.
 53+  9562              ;	Fila superior "0", Columna izquierda "0".
 54+  9562              ;
 55+  9562              ;	Input: HL contendrá la posición del proyectil en pantalla.
 56+  9562              ;	Output: DE contendrá las coordenadas del disparo:
 57+  9562              ;
 58+  9562              ;		DE="$120d"
 59+  9562              ;
 60+  9562              ;		D, (Coordenada_X), Columnas, $12
 61+  9562              ;		E, (Coordenada_y), Filas, $0d
 62+  9562              ;
 63+  9562              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
 64+  9562
 65+  9562              ;	Modifica: A,BC y DE.
 66+  9562
 67+  9562
 68+  9562              Genera_coordenadas_disparo
 69+  9562
 70+  9562              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
 71+  9562
 72+  9562 7D           	ld a,l
 73+  9563 E6 1F        	and $1f
 74+  9565 57           	ld d,a 												; Columnas en D. Coordenada_X.
 75+  9566 CD 0B 92     	call calcula_tercio
 76+  9569 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
 77+  956A 1E 00        	ld e,0
 78+  956C 7D           	ld a,l
 79+  956D E6 E0        	and $e0
 80+  956F 28 01        	jr z,1F
 81+  9571 04           	inc b
 82+  9572 1C           1 inc e
 83+  9573 D6 20        	sub 32
 84+  9575 20 FB        	jr nz,1B
 85+  9577 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
 86+  9579 C9           	ret
 87+  957A
# file closed: Genera_coordenadas.asm
903   957A              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  957A
  2+  957A
  3+  957A              ;   11/8/22
  4+  957A              ;
  5+  957A              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  957A              ;
  7+  957A              ;   Mov_obj.asm
  8+  957A              ;
  9+  957A              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  957A              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  957A              ;
 12+  957A              ;   Codificación:
 13+  957A              ;
 14+  957A              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  957A
 16+  957A              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  957A
 18+  957A 02 40 00     Arriba db 2,%01000000,0
 19+  957D 02 80 00     Abajo db 2,%10000000,0
 20+  9580 02 20 00     Derecha db 2,%00100000,0
 21+  9583 02 10 00     Izquierda db 2,%00010000,0
 22+  9586 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  958A 60 42 60 40
 22+  958E 63
 23+  958F 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9593 22 A3 80 A0
 24+  9597 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  959B 84 A0 83 A0
 25+  959F 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  95A3 80 A3 22 A0
 26+  95A7 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  95AB 40 60 42 60
 27+  95AF 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  95B3
 29+  95B3 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 30+  95B7 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 31+  95BB 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
 31+  95BF 84 00
 32+  95C1 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 32+  95C5 84 00
 33+  95C7 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 34+  95CB 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  95CF 1F 1F 1F 1F
 35+  95D3 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 35+  95D7 1F 1F 1F 1F
 35+  95DB 1F
 36+  95DC 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 36+  95E0 2F 2F 2F 2F
 36+  95E4 2F 2F
 37+  95E6 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 37+  95EA 2F 2F 00
 38+  95ED
 39+  95ED              ; ----- ----- ----- ----- -----
 40+  95ED
 41+  95ED CB 95        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  95EF C7 95        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  95F1 83 95        Indice_mov_Izquierda defw Izquierda
 44+  95F3 80 95        Indice_mov_Derecha defw Derecha
 45+  95F5 7D 95        Indice_mov_Abajo defw Abajo
 46+  95F7 7A 95        Indice_mov_Arriba defw Arriba
 47+  95F9 B7 95        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  95FB BB 95        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  95FD B3 95        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  95FF C1 95        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  9601 86 95        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  9603              ; ----- ----- ----- ----- -----
 53+  9603
 54+  9603 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  9606 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  9607 28 02            jr z,1F
 57+  9609 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  960B 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  960E C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  9610 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  9613              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  9613 2A CD 85         ld hl,(Puntero_mov)
 63+  9616 7E               ld a,(hl)
 64+  9617 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  961A 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  961B 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  961E
 68+  961E 3A D1 85     Decoder ld a,(Repetimos_db)
 69+  9621 A7               and a
 70+  9622 20 0C            jr nz,12F
 71+  9624 2A CD 85         ld hl,(Puntero_mov)
 72+  9627 7E               ld a,(hl)
 73+  9628 A7               and a
 74+  9629 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  962B E6 0F            and $0f
 76+  962D 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  9630              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  9630 2A CD 85     12 ld hl,(Puntero_mov)
 79+  9633 CB 7E            bit 7,(hl)
 80+  9635 28 03            jr z,2F
 81+  9637 CD 29 92         call Mov_down
 82+  963A 2A CD 85     2 ld hl, (Puntero_mov)
 83+  963D CB 76            bit 6,(hl)
 84+  963F 28 03            jr z,3F
 85+  9641 CD 57 92         call Mov_up
 86+  9644 2A CD 85     3 ld hl, (Puntero_mov)
 87+  9647 CB 6E            bit 5,(hl)
 88+  9649 28 03            jr z,4F
 89+  964B CD 85 92         call Mov_right
 90+  964E 2A CD 85     4 ld hl, (Puntero_mov)
 91+  9651 CB 66            bit 4,(hl)
 92+  9653 28 03            jr z,5F
 93+  9655 CD A3 93         call Mov_left
 94+  9658
 95+  9658              ; ---------- --------- --------- ---------- ----------
 96+  9658
 97+  9658 3A D1 85     5 ld a,(Repetimos_db)
 98+  965B A7               and a
 99+  965C 28 07            jr z,6F
100+  965E 3D               dec a
101+  965F 32 D1 85         ld (Repetimos_db),a
102+  9662 28 01            jr z,6f
103+  9664 C9           11 ret
104+  9665 21 CF 85     6 ld hl,Contador_db_mov
105+  9668 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  9669 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  966C 23               inc hl
108+  966D 22 CD 85         ld (Puntero_mov),hl
109+  9670 18 F2            jr 11B
110+  9672 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  9675 3A D0 85         ld a,(Incrementa_puntero)
112+  9678 47               ld b,a
113+  9679 23           8 inc hl
114+  967A 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  967C 5E               ld e,(hl)
116+  967D 23               inc hl
117+  967E 56               ld d,(hl)
118+  967F EB               ex de,hl
119+  9680 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9683 18 DF            jr 11B
121+  9685
122+  9685              ; ---------- --------- --------- ---------- ----------
123+  9685              ;
124+  9685              ;   11/8/22
125+  9685              ;
126+  9685              ;   Prepara_Puntero_mov
127+  9685
128+  9685 E5           Prepara_Puntero_mov push hl
129+  9686 D5               push de
130+  9687 2A CB 85         ld hl,(Puntero_indice_mov)
131+  968A 5E               ld e,(hl)
132+  968B 23               inc hl
133+  968C 56               ld d,(hl)
134+  968D EB               ex de,hl
135+  968E 22 CD 85         ld (Puntero_mov),hl
136+  9691 D1               pop de
137+  9692 E1               pop hl
138+  9693 C9               ret
139+  9694
140+  9694              ; ---------- --------- --------- ---------- ----------
141+  9694              ;
142+  9694              ;   11/8/22
143+  9694              ;
144+  9694              ;   Reinicia_el_movimiento
145+  9694
146+  9694 CD 85 96     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  9697 AF               xor a
148+  9698 32 CF 85         ld (Contador_db_mov),a
149+  969B 32 D0 85         ld (Incrementa_puntero),a
150+  969E C3 03 96         jp Movimiento
151+  96A1 C9               ret
152+  96A2              ; ---------- --------- --------- ---------- ----------
153+  96A2
154+  96A2
155+  96A2
156+  96A2
157+  96A2
158+  96A2
159+  96A2
160+  96A2
161+  96A2
162+  96A2
163+  96A2
164+  96A2
165+  96A2
166+  96A2
167+  96A2
168+  96A2
169+  96A2
170+  96A2
# file closed: Patrones_de_mov.asm
904   96A2              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  96A2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  96A2              ;
  3+  96A2              ;	3/1/23
  4+  96A2              ;
  5+  96A2              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  96A2
  7+  96A2              ;	ADC HL,SP	LD (addr),SP
  8+  96A2              ;	ADD HL,SP	LD SP,(addr)
  9+  96A2              ;	ADD IX,SP	LD SP,nn
 10+  96A2              ; 	ADD IY,SP	LD SP,HL
 11+  96A2              ;				LD SP,IX
 12+  96A2              ;	DEC SP		LD SP,IY
 13+  96A2
 14+  96A2              ;	EX (SP),HL
 15+  96A2              ;	EX (SP),IX
 16+  96A2              ;	EX (SP),IY
 17+  96A2
 18+  96A2              ;	INC SP
 19+  96A2
 20+  96A2
 21+  96A2                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D6 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 E3 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B DF 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
905   7FD4
906   7FD4              	SAVESNA "Pruebas.sna", START
907   7FD4
908   7FD4
909   7FD4
# file closed: Banco_de_pruebas.asm
