# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF 45 83        	defw $8345															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_Amadeus_scanlines_album equ $827c	;	($827c - $828c) 		; Inicialmente 16 bytes, $10.
  39  FE01              Disparos_Amadeus_scanlines_album_2 equ $828e	;	($828e - $829e)
  40  FE01              Disparos_Entidades_scanlines_album equ $82a1	;	($82a1 - $82f1)		; Inicialmente 80 bytes, $50.
  41  FE01              Disparos_Entidades_scanlines_album_2 equ $82f3	;	($82f3 - $8343)
  42  FE01
  43  FE01
  44  FE01
  45  FE01
  46  FE01              ;																		; Scanlines_album.
  47  FE01
  48  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  49  FE01
  50  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  51  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  52  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  53  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  54  FE01
  55  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  56  FE01              ;
  57  FE01              ;	13/08/24
  58  FE01              ;
  59  FE01
  60  FE01              	org $8345
  61  8345
  62  8345 F5           	push af
  63  8346 E5           	push hl
  64  8347
  65  8347              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  66  8347 21 9D 8C     	ld hl,Ctrl_3
  67  834A CB 46        	bit 0,(hl)
  68  834C 28 FE        	jr z,$
  69  834E              ;! -------------------
  70  834E
  71  834E              ; Shield -----------------------
  72  834E
  73  834E              Temporizacion_shield
  74  834E
  75  834E 21 C2 8C     	ld hl,Shield
  76  8351 7E           	ld a,(hl)
  77  8352 A7           	and a
  78  8353 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  79  8355
  80  8355 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  81  8356
  82  8356 23           	inc hl
  83  8357 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  84  8358
  85  8358 20 17        	jr nz,Incrementa_FRAMES
  86  835A
  87  835A              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  88  835A
  89  835A              Cambio_de_estado
  90  835A
  91  835A              ;	Indica cambio de estado.
  92  835A
  93  835A 23           	inc hl						;	Sitúa en (Shield_3).
  94  835B
  95  835B CB 5E        	bit 3,(hl)
  96  835D 28 05        	jr z,2F
  97  835F
  98  835F CD F8 90     	call Inicia_Shield
  99  8362
 100  8362 18 0D        	jr Incrementa_FRAMES
 101  8364
 102  8364 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 103  8366
 104  8366              ;	Carga en (Shield_2) la siguiente temporización.
 105  8366
 106  8366 2A C0 8C     	ld hl,(Puntero_datos_shield)
 107  8369 23           	inc hl
 108  836A 22 C0 8C     	ld (Puntero_datos_shield),hl
 109  836D 7E           	ld a,(hl)
 110  836E 32 C3 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 111  8371
 112  8371              Incrementa_FRAMES
 113  8371
 114  8371 2A 78 5C     	ld hl,(FRAMES)
 115  8374 23           	inc hl
 116  8375 22 78 5C     	ld (FRAMES),hl
 117  8378
 118  8378 7C           	ld a,h
 119  8379 B5           	or l
 120  837A 20 04        	jr nz,1F
 121  837C
 122  837C 21 7A 5C     	ld hl,FRAMES_3
 123  837F 34           	inc (hl)
 124  8380
 125  8380 D5           1 push de
 126  8381 C5           	push bc
 127  8382
 128  8382 CD 08 91     	call Actualiza_pantalla
 129  8385
 130  8385 C1           	pop bc
 131  8386 D1           	pop de
 132  8387 E1           	pop hl
 133  8388 F1           	pop af
 134  8389
 135  8389 FB           	ei
 136  838A
 137  838A C9           	ret
 138  838B
 139  838B              ; --------------------------------------------------------------------------------
 140  838B
 141  838B              	include "Sprites_e_indices.asm"						; Comienza en $83c0
# file opened: Sprites_e_indices.asm
   1+ 838B              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 838B              ;
   3+ 838B              ;	17/02/23
   4+ 838B              ;
   5+ 838B              ;	Sprites e índices.
   6+ 838B
   7+ 838B              	org $83c0
   8+ 83C0
   9+ 83C0              ; Disparo.
  10+ 83C0
  11+ 83C0 C8 83        Indice_disparo defw Disparo_0
  12+ 83C2 CA 83        	defw Disparo_f9
  13+ 83C4 CC 83        	defw Disparo_fb
  14+ 83C6 CE 83        	defw Disparo_fd
  15+ 83C8
  16+ 83C8              ; Disparo (CTRL_DESPLZ)="0".
  17+ 83C8 01 80        Disparo_0 DEFB $01,$80
  18+ 83CA              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 83CA 00 60        Disparo_f9 DEFB $00,$60
  20+ 83CC              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 83CC 18 00        Disparo_fb DEFB $18,$00
  22+ 83CE              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 83CE 06 00        Disparo_fd DEFB $06,$00
  24+ 83D0
  25+ 83D0              ; ----------------------------------------------------------------------------------------
  26+ 83D0
  27+ 83D0              ; Badsat_izq. 2x2.
  28+ 83D0
  29+ 83D0 00 84        Indice_Badsat_izq defw Badsat_izquierda
  30+ 83D2 60 85        	defw Badsat_izq_fe
  31+ 83D4 30 85        	defw Badsat_izq_fd
  32+ 83D6 00 85        	defw Badsat_izq_fc
  33+ 83D8 C0 84        	defw Badsat_izq_fb
  34+ 83DA 90 84        	defw Badsat_izq_fa
  35+ 83DC 60 84        	defw Badsat_izq_f9
  36+ 83DE 30 84        	defw Badsat_izq_f8
  37+ 83E0
  38+ 83E0              	org $8400
  39+ 8400
  40+ 8400 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  41+ 8403 02 14 00     	DEFB 	$02,$14,$00
  42+ 8406 02 2A 00     	DEFB 	$02,$2A,$00
  43+ 8409 02 55 00     	DEFB 	$02,$55,$00
  44+ 840C 02 AA 00     	DEFB	$02,$AA,$00
  45+ 840F 02 54 00     	DEFB 	$02,$54,$00
  46+ 8412 7F E8 00     	DEFB 	$7F,$E8,$00
  47+ 8415 03 60 00     	DEFB 	$03,$60,$00
  48+ 8418 0A E0 00     	DEFB	$0A,$E0,$00
  49+ 841B 17 F8 00     	DEFB 	$17,$F8,$00
  50+ 841E 2B E8 00     	DEFB 	$2B,$E8,$00
  51+ 8421 54 40 00     	DEFB 	$54,$40,$00
  52+ 8424 AA 60 00     	DEFB	$AA,$60,$00
  53+ 8427 54 00 00     	DEFB 	$54,$00,$00
  54+ 842A 28 00 00     	DEFB 	$28,$00,$00
  55+ 842D 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  56+ 8430
  57+ 8430 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  57+ 8434 0A 00 01 15
  58+ 8438 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  58+ 843C 01 55 00 01
  59+ 8440 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  59+ 8444 00 01 B0 00
  60+ 8448 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  60+ 844C FC 00 15 F4
  61+ 8450 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  61+ 8454 55 30 00 2A
  62+ 8458 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  62+ 845C 00 08 00 00
  63+ 8460
  64+ 8460 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8464 85 00 00 8A
  65+ 8468 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 846C 00 AA 80 00
  66+ 8470 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8474 00 00 D8 00
  67+ 8478 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 847C FE 00 0A FA
  68+ 8480 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8484 2A 98 00 15
  69+ 8488 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 848C 00 04 00 00
  70+ 8490
  71+ 8490 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8494 42 80 00 45
  72+ 8498 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 849C 00 55 40 00
  73+ 84A0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 84A4 00 00 6C 00
  74+ 84A8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 84AC FF 00 05 7D
  75+ 84B0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 84B4 15 4C 00 0A
  76+ 84B8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 84BC 00 02 00 00
  77+ 84C0
  78+ 84C0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 84C4 21 40 00 22
  79+ 84C8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 84CC 00 2A A0 00
  80+ 84D0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 84D4 80 00 36 00
  81+ 84D8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 84DC 7F 80 02 BE
  82+ 84E0 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 84E4 0A A6 00 05
  83+ 84E8 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 84EC 00 01 00 00
  84+ 84F0
  85+ 84F0              	org $8500
  86+ 8500
  87+ 8500 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  87+ 8504 10 A0 00 11
  88+ 8508 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  88+ 850C 00 15 50 00
  89+ 8510 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  89+ 8514 40 00 1B 00
  90+ 8518 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  90+ 851C BF C0 01 5F
  91+ 8520 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  91+ 8524 05 53 00 02
  92+ 8528 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  92+ 852C 00 00 80 00
  93+ 8530
  94+ 8530 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  94+ 8534 08 50 00 08
  95+ 8538 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  95+ 853C 00 0A A8 00
  96+ 8540 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  96+ 8544 A0 00 0D 80
  97+ 8548 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  97+ 854C 5F F8 00 AF
  98+ 8550 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  98+ 8554 02 A9 00 01
  99+ 8558 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  99+ 855C 00 00 40 00
 100+ 8560
 101+ 8560 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8564 04 28 00 04
 102+ 8568 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 856C 00 05 54 00
 103+ 8570 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8574 D0 00 06 C0
 104+ 8578 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 857C 2F FC 00 57
 105+ 8580 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8584 01 54 80 00
 106+ 8588 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 858C 00 00 20 00
 107+ 8590
 108+ 8590
 109+ 8590 A0 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8592 D0 85        	defw Badsat_der_f8
 111+ 8594 00 86        	defw Badsat_der_f9
 112+ 8596 30 86        	defw Badsat_der_fa
 113+ 8598 60 86        	defw Badsat_der_fb
 114+ 859A 90 86        	defw Badsat_der_fc
 115+ 859C C0 86        	defw Badsat_der_fd
 116+ 859E 00 87        	defw Badsat_der_fe
 117+ 85A0
 118+ 85A0 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 85A3 28 40 00     	DEFB    $28,$40,$00
 120+ 85A6 54 40 00     	DEFB	$54,$40,$00
 121+ 85A9 AA 40 00     	DEFB	$AA,$40,$00
 122+ 85AC 55 40 00     	DEFB	$55,$40,$00
 123+ 85AF 2A 40 00     	DEFB	$2A,$40,$00
 124+ 85B2 17 FE 00     	DEFB	$17,$FE,$00
 125+ 85B5 06 C0 00     	DEFB	$06,$C0,$00
 126+ 85B8 07 50 00     	DEFB	$07,$50,$00
 127+ 85BB 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 85BE 17 D4 00     	DEFB	$17,$D4,$00
 129+ 85C1 02 2A 00     	DEFB	$02,$2A,$00
 130+ 85C4 06 55 00     	DEFB	$06,$55,$00
 131+ 85C7 00 2A 00     	DEFB	$00,$2A,$00
 132+ 85CA 00 14 00     	DEFB	$00,$14,$00
 133+ 85CD 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 85D0
 135+ 85D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 85D4 20 00 2A 20
 136+ 85D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 85DC 2A A0 00 15
 137+ 85E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 85E4 00 03 60 00
 138+ 85E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 85EC F4 00 0B EA
 139+ 85F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 85F4 03 2A 80 00
 140+ 85F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 85FC 00 00 04 00
 141+ 8600
 142+ 8600 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 8604 10 00 15 10
 143+ 8608 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 860C 15 50 00 0A
 144+ 8610 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 8614 80 01 B0 00
 145+ 8618 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 861C FA 00 05 F5
 146+ 8620 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 8624 01 95 40 00
 147+ 8628 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 862C 00 00 02 00
 148+ 8630
 149+ 8630 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 8634 08 00 0A 88
 150+ 8638 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 863C 0A A8 00 05
 151+ 8640 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 8644 C0 00 D8 00
 152+ 8648 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 864C FD 00 02 FA
 153+ 8650 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 8654 00 CA A0 00
 154+ 8658 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 865C 80 00 01 00
 155+ 8660
 156+ 8660 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8664 84 00 05 44
 157+ 8668 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 866C 05 54 00 02
 158+ 8670 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8674 E0 00 6C 00
 159+ 8678 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 867C FE 80 01 7D
 160+ 8680 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8684 00 65 50 00
 161+ 8688 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 868C 40 00 00 80
 162+ 8690
 163+ 8690 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8694 42 00 02 A2
 164+ 8698 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 869C 02 AA 00 01
 165+ 86A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 86A4 F0 00 36 00
 166+ 86A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 86AC FF 40 00 BE
 167+ 86B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 86B4 00 32 A8 00
 168+ 86B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 86BC A0 00 00 40
 169+ 86C0
 170+ 86C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 86C4 A1 00 01 51
 171+ 86C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 86CC 01 55 00 00
 172+ 86D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 86D4 F8 00 1B 00
 173+ 86D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 86DC FF A0 00 1F
 174+ 86E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 86E4 00 09 54 00
 175+ 86E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 86EC 50 00 00 20
 176+ 86F0
 177+ 86F0              	org $8700
 178+ 8700
 179+ 8700 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 179+ 8704 50 80 00 A8
 180+ 8708 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 180+ 870C 00 AA 80 00
 181+ 8710 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 181+ 8714 FC 00 0D 80
 182+ 8718 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 182+ 871C FF D0 00 0F
 183+ 8720 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 183+ 8724 00 04 AA 00
 184+ 8728 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 184+ 872C 28 00 00 10
 185+ 8730
 186+ 8730              ; ----------------------------------------------------------------------------------------
 187+ 8730
 188+ 8730              ; Amadeus. 2x2.
 189+ 8730
 190+ 8730 50 87        Indice_Amadeus_der defw Amadeus
 191+ 8732 00 00        	defw 0
 192+ 8734 80 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 193+ 8736 00 00        	defw 0
 194+ 8738 B0 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 195+ 873A 00 00        	defw 0
 196+ 873C 00 88        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 197+ 873E 00 00        	defw 0	 								; (Fín de índice).
 198+ 8740
 199+ 8740 50 87        Indice_Amadeus_izq defw Amadeus
 200+ 8742 00 00        	defw 0
 201+ 8744 00 88        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 202+ 8746 00 00        	defw 0
 203+ 8748 B0 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 204+ 874A 00 00        	defw 0
 205+ 874C 80 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 206+ 874E 00 00        	defw 0	 								; (Fín de índice).
 207+ 8750
 208+ 8750 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8753 23 C4 00     	DEFB	$23,$C4,0
 210+ 8756 26 64 00     	DEFB	$26,$64,0
 211+ 8759 24 24 00     	DEFB	$24,$24,0
 212+ 875C 2C 34 00     	DEFB	$2C,$34,0
 213+ 875F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8762 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8765 67 E6 00     	DEFB	$67,$E6,0
 216+ 8768 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 876B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 876E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8771 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8774 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8777 FB DF 00     	DEFB	$FB,$DF,0
 222+ 877A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 877D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8780
 225+ 8780 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8784 F1 00 09 99
 226+ 8788 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 878C 0B 0D 00 1B
 227+ 8790 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8794 80 19 F9 80
 228+ 8798 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 879C F3 C0 3D FB
 229+ 87A0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 87A4 3E F7 C0 3E
 230+ 87A8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 87AC 40 1C 63 80
 231+ 87B0
 232+ 87B0 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 87B4 3C 40 02 66
 233+ 87B8 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 87BC 02 C3 40 06
 234+ 87C0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 87C4 60 06 7E 60
 235+ 87C8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 87CC 3C F0 0F 7E
 236+ 87D0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 87D4 0F BD F0 0F
 237+ 87D8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 87DC 10 07 18 E0
 238+ 87E0
 239+ 87E0              	org $8800
 240+ 8800
 241+ 8800 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 241+ 8804 8F 10 00 99
 242+ 8808 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 242+ 880C 00 B0 D0 01
 243+ 8810 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 243+ 8814 D8 01 9F 98
 244+ 8818 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 244+ 881C CF 3C 03 DF
 245+ 8820 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 245+ 8824 03 EF 7C 03
 246+ 8828 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 246+ 882C 44 01 C6 38
 247+ 8830
 248+ 8830              ; ----------------------------------------------------------------------------------------
 249+ 8830
 250+ 8830 36 88        Indice_Explosion_entidades defw Explosion_entidades_1
 251+ 8832 66 88        	defw Explosion_entidades_2
 252+ 8834 96 88        	defw Explosion_entidades_3
 253+ 8836
 254+ 8836 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 255+ 8839 08 10 00     	DEFB 	$08,$10,$00
 256+ 883C 04 38 40     	DEFB	$04,$38,$40
 257+ 883F 03 7D 80     	DEFB	$03,$7D,$80
 258+ 8842 02 E6 80     	DEFB	$02,$E6,$80
 259+ 8845 01 B7 00     	DEFB	$01,$B7,$00
 260+ 8848 01 7F 00     	DEFB	$01,$7F,$00
 261+ 884B 03 DD 80     	DEFB	$03,$DD,$80
 262+ 884E 0F FF E0     	DEFB	$0F,$FF,$E0
 263+ 8851 03 3B 80     	DEFB	$03,$3B,$80
 264+ 8854 01 9D 00     	DEFB	$01,$9D,$00
 265+ 8857 01 F6 00     	DEFB	$01,$F6,$00
 266+ 885A 02 FD 80     	DEFB	$02,$FD,$80
 267+ 885D 03 00 40     	DEFB	$03,$00,$40
 268+ 8860 04 00 00     	DEFB	$04,$00,$00
 269+ 8863 08 00 00     	DEFB	$08,$00,$00
 270+ 8866
 271+ 8866 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 886A 38 10 03 BC
 272+ 886E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 8872 04 06 C0 00
 273+ 8876 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 887A 00 03 DD 80
 274+ 887E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 8882 3A 70 01 9C
 275+ 8886 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 888A 04 F8 80 06
 276+ 888E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 8892 00 00 00 00
 277+ 8896
 278+ 8896 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 889A 00 20 08 00
 279+ 889E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 88A2 00 06 00 00
 280+ 88A6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 88AA 00 00 14 30
 281+ 88AE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 88B2 38 00 01 08
 282+ 88B6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 88BA 00 80 00 04
 283+ 88BE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 88C2 10 08 00 20
 284+ 88C6
 285+ 88C6              ; ------------------------------------------
 286+ 88C6
 287+ 88C6 CC 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 88C8 00 89        	defw Explosion_Amadeus_2
 289+ 88CA 30 89        	defw Explosion_Amadeus_3
 290+ 88CC
 291+ 88CC 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 88CF 02 3C 36     	DEFB	$02,$3C,$36
 293+ 88D2 02 66 56     	DEFB	$02,$66,$56
 294+ 88D5 02 42 48     	DEFB	$02,$42,$48
 295+ 88D8 02 C3 32     	DEFB	$02,$C3,$32
 296+ 88DB 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 88DE 06 FE 46     	DEFB	$06,$FE,$46
 298+ 88E1 06 79 68     	DEFB	$06,$79,$68
 299+ 88E4 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 88E7 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 88EA 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 88ED 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 88F0 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 88F3 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 88F6 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 88F9 07 19 80     	DEFB	$07,$19,$80
 307+ 88FC
 308+ 88FC              	org $8900
 309+ 8900
 310+ 8900 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 311+ 8903 00 3C 36     	DEFB	$00,$3C,$36
 312+ 8906 00 66 56     	DEFB	$00,$66,$56
 313+ 8909 04 42 48     	DEFB	$04,$42,$48
 314+ 890C 0A 03 32     	DEFB	$0A,$03,$32
 315+ 890F 14 DB 0C     	DEFB	$14,$DB,$0C
 316+ 8912 1C DE 46     	DEFB	$1C,$DE,$46
 317+ 8915 36 49 68     	DEFB 	$36,$49,$68
 318+ 8918 0C 76 D8     	DEFB	$0C,$76,$D8
 319+ 891B 10 34 6C     	DEFB	$10,$34,$6C
 320+ 891E 2B 6E BE     	DEFB	$2B,$6E,$BE
 321+ 8921 0E AF B0     	DEFB	$0E,$AF,$B0
 322+ 8924 29 B5 A0     	DEFB	$29,$B5,$A0
 323+ 8927 0C 91 8A     	DEFB	$0C,$91,$8A
 324+ 892A 08 BA 4C     	DEFB	$08,$BA,$4C
 325+ 892D 07 19 80     	DEFB	$07,$19,$80
 326+ 8930
 327+ 8930 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 328+ 8933 00 00 00     	DEFB	$00,$00,$00
 329+ 8936 00 00 00     	DEFB	$00,$00,$00
 330+ 8939 00 00 40     	DEFB	$00,$00,$40
 331+ 893C 00 00 30     	DEFB	$00,$00,$30
 332+ 893F 00 00 08     	DEFB	$00,$00,$08
 333+ 8942 00 82 40     	DEFB	$00,$82,$40
 334+ 8945 04 04 68     	DEFB	$04,$04,$68
 335+ 8948 04 20 58     	DEFB	$04,$20,$58
 336+ 894B 18 12 2C     	DEFB	$18,$12,$2C
 337+ 894E 2A 40 3C     	DEFB	$2A,$40,$3C
 338+ 8951 0F C2 30     	DEFB	$0F,$C2,$30
 339+ 8954 29 80 A0     	DEFB	$29,$80,$A0
 340+ 8957 0F 84 88     	DEFB	$0F,$84,$88
 341+ 895A 08 A0 4C     	DEFB	$08,$A0,$4C
 342+ 895D 07 11 80     	DEFB	$07,$11,$80
 343+ 8960
# file closed: Sprites_e_indices.asm
 142  8960              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8960              ; ---------------------------------------------------------------------
   2+ 8960              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8960              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8960              ; ---------------------------------------------------------------------
   5+ 8960
   6+ 8960              ; 30/05/24
   7+ 8960              ;
   8+ 8960              ;	En esta tabla iremos almacenando:
   9+ 8960              ;
  10+ 8960              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 8960              ;
  12+ 8960              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 8960
  14+ 8960 00 00 00...  Numeros_aleatorios ds 7
  15+ 8967
  16+ 8967 00 00 00...  Tabla_de_pintado ds 27
  17+ 8982
  18+ 8982              ;	db 0, defw 0
  19+ 8982              ;	db 0, defw 0
  20+ 8982              ;	db 0, defw 0
  21+ 8982              ;	db 0, defw 0
  22+ 8982              ;	db 0, defw 0
  23+ 8982              ;	db 0, defw 0
  24+ 8982              ;	db 0, defw 0
  25+ 8982
  26+ 8982 77 8A        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  27+ 8984              ;	defw ...
  28+ 8984              ; 	defw ...
  29+ 8984 00 00        	defw 0
  30+ 8986
  31+ 8986 8A 89        Indice_de_disparos_Amadeus defw Disparo_1A
  32+ 8988 8F 89        	defw Disparo_2A
  33+ 898A
  34+ 898A 00 00        Disparo_1A defw 0									; Puntero objeto.
  35+ 898C 00 00        	defw 0											; Puntero de impresión.
  36+ 898E 00           	db 0											; Impacto.
  37+ 898F
  38+ 898F 00 00        Disparo_2A defw 0									; Puntero objeto.
  39+ 8991 00 00        	defw 0											; Puntero de impresión.
  40+ 8993 00           	db 0											; Impacto.
  41+ 8994
  42+ 8994 A8 89        Indice_de_disparos_entidades defw Disparo_1
  43+ 8996 AD 89        	defw Disparo_2
  44+ 8998 B2 89        	defw Disparo_3
  45+ 899A B7 89        	defw Disparo_4
  46+ 899C BC 89        	defw Disparo_5
  47+ 899E C1 89        	defw Disparo_6
  48+ 89A0 C6 89        	defw Disparo_7
  49+ 89A2 CB 89        	defw Disparo_8
  50+ 89A4 D0 89        	defw Disparo_9
  51+ 89A6 D5 89        	defw Disparo_10
  52+ 89A8
  53+ 89A8 00 00        Disparo_1 defw 0									; Puntero objeto.
  54+ 89AA 00 00        	defw 0											; Puntero de impresión.
  55+ 89AC 00           	db 0											; Control.
  56+ 89AD
  57+ 89AD 00 00        Disparo_2 defw 0									; Puntero objeto.
  58+ 89AF 00 00        	defw 0											; Puntero de impresión.
  59+ 89B1 00           	db 0											; Control.
  60+ 89B2
  61+ 89B2 00 00        Disparo_3 defw 0									; Puntero objeto.
  62+ 89B4 00 00        	defw 0											; Puntero de impresión.
  63+ 89B6 00           	db 0											; Control.
  64+ 89B7
  65+ 89B7 00 00        Disparo_4 defw 0									; Puntero objeto.
  66+ 89B9 00 00        	defw 0											; Puntero de impresión.
  67+ 89BB 00           	db 0											; Control.
  68+ 89BC
  69+ 89BC 00 00        Disparo_5 defw 0									; Puntero objeto.
  70+ 89BE 00 00        	defw 0											; Puntero de impresión.
  71+ 89C0 00           	db 0											; Control.
  72+ 89C1
  73+ 89C1 00 00        Disparo_6 defw 0									; Puntero objeto.
  74+ 89C3 00 00        	defw 0											; Puntero de impresión.
  75+ 89C5 00           	db 0											; Control.
  76+ 89C6
  77+ 89C6 00 00        Disparo_7 defw 0									; Puntero objeto.
  78+ 89C8 00 00        	defw 0											; Puntero de impresión.
  79+ 89CA 00           	db 0											; Control.
  80+ 89CB
  81+ 89CB 00 00        Disparo_8 defw 0									; Puntero objeto.
  82+ 89CD 00 00        	defw 0											; Puntero de impresión.
  83+ 89CF 00           	db 0											; Control.
  84+ 89D0
  85+ 89D0 00 00        Disparo_9 defw 0									; Puntero objeto.
  86+ 89D2 00 00        	defw 0											; Puntero de impresión.
  87+ 89D4 00           	db 0											; Control.
  88+ 89D5
  89+ 89D5 00 00        Disparo_10 defw 0									; Puntero objeto.
  90+ 89D7 00 00        	defw 0											; Puntero de impresión.
  91+ 89D9 00           	db 0											; Control.
  92+ 89DA
  93+ 89DA              ; -------------------------------------------------------------------------------------
  94+ 89DA              ;
  95+ 89DA              ;	Índice de cajas de entidades.
  96+ 89DA              ;
  97+ 89DA              ;	18/1/24
  98+ 89DA              ;
  99+ 89DA
 100+ 89DA              Indice_de_cajas_de_entidades
 101+ 89DA
 102+ 89DA F8 89        	defw Caja_1
 103+ 89DC 04 8A        	defw Caja_2
 104+ 89DE 10 8A        	defw Caja_3
 105+ 89E0 1C 8A        	defw Caja_4
 106+ 89E2 28 8A        	defw Caja_5
 107+ 89E4 34 8A        	defw Caja_6
 108+ 89E6 40 8A        	defw Caja_7
 109+ 89E8
 110+ 89E8 00 00        	defw 0
 111+ 89EA 00 00        	defw 0
 112+ 89EC
 113+ 89EC              ; -------------------------
 114+ 89EC
 115+ 89EC              ; Relleno para que no se corrompa el movimiento. ?????
 116+ 89EC
 117+ 89EC              ;	db 0
 118+ 89EC
 119+ 89EC              ; ---------- ---------- ---------- ---------- ----------
 120+ 89EC              ;
 121+ 89EC              ;	28/05/24
 122+ 89EC              ;
 123+ 89EC              ; 	Cada caja tiene 14 bytes !!!
 124+ 89EC              ;
 125+ 89EC              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 126+ 89EC
 127+ 89EC 00           Amadeus_BOX db 0										; (Tipo).
 128+ 89ED 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 129+ 89EF 00           	db 0												; (Contador_de_vueltas).
 130+ 89F0 00           Impacto_Amadeus	db 0									; (Impacto).
 131+ 89F1 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 132+ 89F3 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 133+ 89F5 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 134+ 89F7 00           	db 0												; (Velocidad).
 135+ 89F8
 136+ 89F8              ; ---------- ---------- ---------- ---------- ----------
 137+ 89F8              ;
 138+ 89F8              ;	22/01/24
 139+ 89F8              ;
 140+ 89F8              ; 	Cada caja tiene 12 bytes !!!
 141+ 89F8
 142+ 89F8 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 143+ 89FB 00           	db 0												; (Contador_de_vueltas).
 144+ 89FC 00           	db 0												; (Impacto).
 145+ 89FD 00 00        	defw 0												; (Puntero_de_impresion).
 146+ 89FF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 147+ 8A01 00 00        	defw 0 												; (Contador_de_mov_masticados).
 148+ 8A03 00           	db 0												; (Velocidad).
 149+ 8A04
 150+ 8A04              ; ---------- ---------- ---------- ---------- ----------
 151+ 8A04
 152+ 8A04 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 153+ 8A07 00           	db 0 												; (Contador_de_vueltas).
 154+ 8A08 00           	db 0												; (Impacto).
 155+ 8A09 00 00        	defw 0												; (Puntero_de_impresion).
 156+ 8A0B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 157+ 8A0D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 158+ 8A0F 00           	db 0												; (Velocidad).
 159+ 8A10
 160+ 8A10              ; ---------- ---------- ---------- ---------- ----------
 161+ 8A10
 162+ 8A10 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 163+ 8A13 00           	db 0 												; (Contador_de_vueltas).
 164+ 8A14 00           	db 0												; (Impacto).
 165+ 8A15 00 00        	defw 0												; (Puntero_de_impresion).
 166+ 8A17 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 167+ 8A19 00 00        	defw 0 												; (Contador_de_mov_masticados).
 168+ 8A1B 00           	db 0												; (Velocidad).
 169+ 8A1C
 170+ 8A1C              ; ---------- ---------- ---------- ---------- ----------
 171+ 8A1C
 172+ 8A1C 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 173+ 8A1F 00           	db 0 												; (Contador_de_vueltas).
 174+ 8A20 00           	db 0												; (Impacto).
 175+ 8A21 00 00        	defw 0												; (Puntero_de_impresion).
 176+ 8A23 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 177+ 8A25 00 00        	defw 0 												; (Contador_de_mov_masticados).
 178+ 8A27 00           	db 0												; (Velocidad).
 179+ 8A28
 180+ 8A28              ; ---------- ---------- ---------- ---------- ----------
 181+ 8A28
 182+ 8A28 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8A2B 00           	db 0 												; (Contador_de_vueltas).
 184+ 8A2C 00           	db 0												; (Impacto).
 185+ 8A2D 00 00        	defw 0												; (Puntero_de_impresion).
 186+ 8A2F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 187+ 8A31 00 00        	defw 0 												; (Contador_de_mov_masticados).
 188+ 8A33 00           	db 0												; (Velocidad).
 189+ 8A34
 190+ 8A34              ; ---------- ---------- ---------- ---------- ----------
 191+ 8A34
 192+ 8A34 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 193+ 8A37 00           	db 0 												; (Contador_de_vueltas).
 194+ 8A38 00           	db 0												; (Impacto).
 195+ 8A39 00 00        	defw 0												; (Puntero_de_impresion).
 196+ 8A3B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 197+ 8A3D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 198+ 8A3F 00           	db 0												; (Velocidad).
 199+ 8A40
 200+ 8A40              ; ---------- ---------- ---------- ---------- ----------
 201+ 8A40
 202+ 8A40 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 203+ 8A43 00           	db 0 												; (Contador_de_vueltas).
 204+ 8A44 00           	db 0												; (Impacto).
 205+ 8A45 00 00        	defw 0												; (Puntero_de_impresion).
 206+ 8A47 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 207+ 8A49 00 00        	defw 0 												; (Contador_de_mov_masticados).
 208+ 8A4B 00           	db 0												; (Velocidad).
 209+ 8A4C
 210+ 8A4C              ; -------------------------------------------------------------------------------------
 211+ 8A4C              ;
 212+ 8A4C              ;	11/1/24
 213+ 8A4C              ;
 214+ 8A4C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 215+ 8A4C              ;
 216+ 8A4C              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 217+ 8A4C              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 218+ 8A4C              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 219+ 8A4C              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 220+ 8A4C
 221+ 8A4C              Indice_de_definiciones_de_entidades
 222+ 8A4C
 223+ 8A4C 50 8A        	defw Entidad_1
 224+ 8A4E 5D 8A        	defw Entidad_2
 225+ 8A50
 226+ 8A50              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 227+ 8A50
 228+ 8A50              ;	BADSAT, (Satélite malvado).
 229+ 8A50
 230+ 8A50 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 231+ 8A53 01           	db 1												; (Contador_de_vueltas).
 232+ 8A54 90 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 233+ 8A56 D0 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 234+ 8A58 03 40        	defw $4003	                                     	; (Posicion_inicio).
 235+ 8A5A 01           	db 1												; (Cuad_objeto).
 236+ 8A5B 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 237+ 8A5D
 238+ 8A5D 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 239+ 8A60 01           	db 1												; (Contador_de_vueltas).
 240+ 8A61 90 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 241+ 8A63 D0 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 242+ 8A65 40 50        	defw $5040                                      	; (Posicion_inicio).
 243+ 8A67 01           	db 1												; (Cuad_objeto).
 244+ 8A68 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 245+ 8A6A
 246+ 8A6A              ; -------------------------------------------------------------------------------------
 247+ 8A6A              ;
 248+ 8A6A              ;	28/05/24
 249+ 8A6A              ;
 250+ 8A6A              ;	Definición de Amadeus.
 251+ 8A6A              ;
 252+ 8A6A              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 253+ 8A6A              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 254+ 8A6A
 255+ 8A6A 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 256+ 8A6D 00           	db 0												; (Contador_de_vueltas).
 257+ 8A6E 30 87        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 258+ 8A70 40 87        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 259+ 8A72 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 260+ 8A74 03           	db 3												; (Cuad_objeto).
 261+ 8A75 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 143  8A77              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 8A77
   2+ 8A77
   3+ 8A77              ;   07/07/23
   4+ 8A77              ;
   5+ 8A77              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 8A77              ;
   7+ 8A77              ;   Codificación:
   8+ 8A77              ;
   9+ 8A77              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 8A77              ;
  11+ 8A77              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 8A77              ;
  13+ 8A77              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 8A77              ;
  15+ 8A77              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 8A77              ;
  17+ 8A77              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 8A77              ;                               ..... %01000010 Vel_up 4
  19+ 8A77              ;                                               Vel_down 2
  20+ 8A77              ;                               ..... $42
  21+ 8A77              ;
  22+ 8A77              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 8A77              ;
  24+ 8A77              ;                               ..... %01000010 Vel_left 4
  25+ 8A77              ;                                               Vel_right 2
  26+ 8A77              ;                               ..... $42
  27+ 8A77              ;
  28+ 8A77              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 8A77              ;
  30+ 8A77              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 8A77              ;
  32+ 8A77              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 8A77              ;
  34+ 8A77              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 8A77              ;                                     $53
  36+ 8A77              ;
  37+ 8A77              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 8A77              ;
  39+ 8A77              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 8A77              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 8A77              ;
  42+ 8A77              ;                       Arriba ..... $81
  43+ 8A77              ;                       Arriba - izquierda ..... $a1
  44+ 8A77              ;                       Arriba - derecha ..... $91
  45+ 8A77              ;
  46+ 8A77              ;                       Abajo ..... $41
  47+ 8A77              ;                       Abajo - izquierda ..... $61
  48+ 8A77              ;                       Abajo - derecha ..... $51
  49+ 8A77              ;
  50+ 8A77              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 8A77              ;
  52+ 8A77              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 8A77              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 8A77              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 8A77              ;
  56+ 8A77              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 8A77              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 8A77              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 8A77              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 8A77              ;
  61+ 8A77              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 8A77              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 8A77              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 8A77              ;
  65+ 8A77              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 8A77              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 8A77              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 8A77              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 8A77
  70+ 8A77              ; ----- ----- ----- ----- -----
  71+ 8A77
  72+ 8A77 A3 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 8A79 AB 8A            defw F_1
  74+ 8A7B B5 8A            defw F_2
  75+ 8A7D BF 8A            defw Codo_abajo_derecha
  76+ 8A7F F3 8A            defw Derecha_y_subiendo
  77+ 8A81 FD 8A            defw Derecha_y_subiendo_1
  78+ 8A83 07 8B            defw F_3
  79+ 8A85 11 8B            defw F_4
  80+ 8A87 1B 8B            defw Derecha_y_bajando
  81+ 8A89 25 8B            defw Derecha_y_bajando_1
  82+ 8A8B 2F 8B            defw Derecha_y_bajando_2
  83+ 8A8D 39 8B            defw Codo_derecha_abajo
  84+ 8A8F 69 8B            defw Codo_abajo_izq.
  85+ 8A91 9D 8B            defw Izquierda_y_subiendo
  86+ 8A93 A7 8B            defw Izquierda_y_subiendo_1
  87+ 8A95 B1 8B            defw F_5
  88+ 8A97 BB 8B            defw F_6
  89+ 8A99 C5 8B            defw Izquierda_y_bajando
  90+ 8A9B CF 8B            defw Izquierda_y_bajando_1
  91+ 8A9D D9 8B            defw Izquierda_y_bajando_2
  92+ 8A9F E3 8B            defw Codo_izquierda_abajo
  93+ 8AA1 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8AA3
  95+ 8AA3 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8AA7 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8AAB
  98+ 8AAB 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8AAF 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8AB3 08 00
 100+ 8AB5
 101+ 8AB5 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8AB9 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8ABD 0F FE
 103+ 8ABF
 104+ 8ABF 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8AC3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8AC7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8ACB 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8ACF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8AD3 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8AD7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8ADB 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8ADF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8AE3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8AE7 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8AEB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8AEF 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8AF3
 118+ 8AF3 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8AF7 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8AFB 06 00
 120+ 8AFD
 121+ 8AFD 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8B01 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8B05 02 00
 123+ 8B07
 124+ 8B07 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8B0B 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8B0F 04 00
 126+ 8B11
 127+ 8B11 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8B15 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8B19 08 00
 129+ 8B1B
 130+ 8B1B 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8B1F 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8B23 02 00
 132+ 8B25
 133+ 8B25 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8B29 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8B2D 06 00
 135+ 8B2F
 136+ 8B2F 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8B33 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8B37 06 00
 138+ 8B39
 139+ 8B39              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8B39
 141+ 8B39 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8B3D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8B41 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8B45 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8B49 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8B4D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8B51 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8B55 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8B59 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8B5D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8B61 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8B65 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8B69
 154+ 8B69 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8B6D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8B71 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8B75 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8B79 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B7D 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B81 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B85 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B89 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B8D 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B91 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B95 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B99 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B9D
 168+ 8B9D 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8BA1 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8BA5 06 00
 170+ 8BA7
 171+ 8BA7 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8BAB 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8BAF 02 00
 173+ 8BB1
 174+ 8BB1 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8BB5 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8BB9 04 00
 176+ 8BBB
 177+ 8BBB 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8BBF 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8BC3 08 00
 179+ 8BC5
 180+ 8BC5 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8BC9 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8BCD 02 00
 182+ 8BCF
 183+ 8BCF 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8BD3 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8BD7 06 00
 185+ 8BD9
 186+ 8BD9 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8BDD 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8BE1 06 00
 188+ 8BE3
 189+ 8BE3 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8BE7 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8BEB 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8BEF 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8BF3 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8BF7 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8BFB 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8BFF 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8C03 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8C07 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8C0B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8C0F 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8C13
 202+ 8C13
 203+ 8C13
 204+ 8C13
 205+ 8C13
 206+ 8C13
 207+ 8C13
 208+ 8C13
 209+ 8C13
 210+ 8C13
# file closed: Patrones_de_mov.asm
 144  8C13              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8C13              ; 19/1/24
   2+ 8C13
   3+ 8C13              Indice_de_niveles
   4+ 8C13
   5+ 8C13 1B 8C        	defw Nivel_1
   6+ 8C15 26 8C        	defw Nivel_2
   7+ 8C17
   8+ 8C17              ;	...
   9+ 8C17              ;	...
  10+ 8C17              ;	+ Niveles ...
  11+ 8C17
  12+ 8C17 00 00        	defw 0
  13+ 8C19 00 00        	defw 0
  14+ 8C1B
  15+ 8C1B 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8C1C 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8C20 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8C24 01 01
  18+ 8C26
  19+ 8C26 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8C27 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8C2B 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8C2F 01 02
  22+ 8C31 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8C35 01 02
  23+ 8C37
# file closed: Niveles.asm
 145  8C37
 146  8C37              ; --------------------------------------------------------------------------------
 147  8C37              ;
 148  8C37              ; 12/05/24
 149  8C37              ;
 150  8C37              ; Parámetros DRAW.
 151  8C37              ;
 152  8C37
 153  8C37              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 154  8C37
 155  8C37 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 156  8C38              ;															- Patrón de movimiento.
 157  8C38 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  8C39 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  8C3A
 160  8C3A 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 161  8C3B              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 162  8C3B
 163  8C3B              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 164  8C3B              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 165  8C3B              ; Ejemplos.
 166  8C3B
 167  8C3B              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 168  8C3B              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 169  8C3B              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 170  8C3B              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 171  8C3B              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 172  8C3B
 173  8C3B 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 174  8C3C              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 175  8C3C              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 176  8C3C
 177  8C3C 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 178  8C3E              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 179  8C3E
 180  8C3E 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 181  8C40
 182  8C40              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 183  8C40              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 184  8C40
 185  8C40 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 186  8C42              ;														; _palabras que componen el "movimiento_masticado".
 187  8C42
 188  8C42              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 189  8C42
 190  8C42 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 191  8C43              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 192  8C43              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 193  8C43              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 194  8C43              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 195  8C43
 196  8C43 00           Ctrl_2 db 0
 197  8C44              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 198  8C44              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 199  8C44              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 200  8C44              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 201  8C44              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 202  8C44              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 203  8C44              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 204  8C44              ;
 205  8C44              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 206  8C44              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 207  8C44              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 208  8C44              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 209  8C44              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 210  8C44              ;														BIT 4, ???
 211  8C44              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 212  8C44
 213  8C44 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 214  8C45              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 215  8C45              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 216  8C45              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 217  8C45              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 218  8C45              ;
 219  8C45              ; 														DESCRIPCIÖN:
 220  8C45              ;
 221  8C45              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 222  8C45              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 223  8C45              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 224  8C45              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 225  8C45              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 226  8C45              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 227  8C45              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 228  8C45              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 229  8C45              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 230  8C45              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 231  8C45              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 232  8C45              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 233  8C45              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 234  8C45              ;
 235  8C45              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 236  8C45              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 237  8C45              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 238  8C45
 239  8C45              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 240  8C45
 241  8C45 00           Filas db 0												; Filas. [DRAW]
 242  8C46 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 243  8C47 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 244  8C49 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 245  8C4B
 246  8C4B              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 247  8C4B
 248  8C4B 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 249  8C4C              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 250  8C4C              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 251  8C4C
 252  8C4C              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 253  8C4C
 254  8C4C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 255  8C4C              ;
 256  8C4C              ;	COLORES: 0 ..... NEGRO
 257  8C4C              ;    		 1 ..... AZUL
 258  8C4C              ; 			 2 ..... ROJO
 259  8C4C              ;			 3 ..... MAGENTA
 260  8C4C              ; 			 4 ..... VERDE
 261  8C4C              ; 			 5 ..... CIAN
 262  8C4C              ;			 6 ..... AMARILLO
 263  8C4C              ; 			 7 ..... BLANCO
 264  8C4C
 265  8C4C 00 00        Indice_Sprite_der defw 0
 266  8C4E 00 00        Indice_Sprite_izq defw 0
 267  8C50 00 00        Puntero_DESPLZ_der defw 0
 268  8C52 00 00        Puntero_DESPLZ_izq defw 0
 269  8C54
 270  8C54 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 271  8C56 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 272  8C57 00           Columnas db 0
 273  8C58 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 274  8C5A              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8C5A 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 276  8C5B
 277  8C5B              ; variables de control general.
 278  8C5B
 279  8C5B 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 280  8C5C
 281  8C5C              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 282  8C5C
 283  8C5C              Perfiles_de_velocidad
 284  8C5C
 285  8C5C 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 286  8C5D 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 287  8C5E 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 288  8C5F 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 289  8C60
 290  8C60              ; Contadores de 16 bits.
 291  8C60
 292  8C60 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 293  8C62 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 294  8C64 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 295  8C66 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 296  8C68
 297  8C68              ; Movimiento. ------------------------------------------------------------------------------------------------------
 298  8C68
 299  8C68 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 300  8C6A 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 301  8C6C 00 00        Puntero_indice_mov_bucle defw 0							;
 302  8C6E              ;
 303  8C6E              ;
 304  8C6E 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 305  8C6F              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 306  8C6F              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 307  8C6F 00           Incrementa_puntero_backup db 0
 308  8C70 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 309  8C71              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 310  8C71 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 311  8C72 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 312  8C73 00           Cola_de_desplazamiento db 0								; Este byte indica:
 313  8C74              ;
 314  8C74              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 315  8C74              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 316  8C74              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 317  8C74              ;
 318  8C74              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 319  8C74              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 320  8C74              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 321  8C74              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 322  8C74              ;
 323  8C74              ;														;	"$ff" ..... Bucle infinito de repetición.
 324  8C74              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 325  8C74              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 326  8C74
 327  8C74 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 328  8C75
 329  8C75              ;														DESCRIPCIÓN:
 330  8C75              ;
 331  8C75              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 332  8C75              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 333  8C75              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 334  8C75              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 335  8C75              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 336  8C75              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 337  8C75
 338  8C75              ;														BIT 3, Recarga de nueva oleada.
 339  8C75              ;														BIT 4, Recarga de nueva oleada.
 340  8C75              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 341  8C75              ;														BIT 6, **** Frame completo.
 342  8C75              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 343  8C75
 344  8C75 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 345  8C77              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 346  8C77              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 347  8C77              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 348  8C77
 349  8C77              ; Gestión de ENTIDADES y CAJAS.
 350  8C77
 351  8C77 00 00        Puntero_store_caja defw 0
 352  8C79 00 00        Puntero_restore_caja defw 0
 353  8C7B 00 00        Indice_restore_caja defw 0
 354  8C7D 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 355  8C7E 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 356  8C7F 00           Entidades_en_curso db 0									; ..... ..... .....
 357  8C80              ;Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 358  8C80              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 359  8C80              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 360  8C80              ;														; _ (Numero_de_malotes)="0".
 361  8C80 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  8C82 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  8C84              ;														; _ puntero (Indice_entidades).
 364  8C84
 365  8C84              ;---------------------------------------------------------------------------------------------------------------
 366  8C84              ;
 367  8C84              ;	12/08/24
 368  8C84              ;
 369  8C84              ;	Álbumes.
 370  8C84
 371  8C84 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  8C86              ;														; _variable para almacenar lo posición del puntero_
 373  8C86              ; 														; _de pila, SP.
 374  8C86 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  8C88              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  8C88
 377  8C88              ; Impresión. ----------------------------------------------------------------------------------------------------
 378  8C88
 379  8C88 00 00        Album_de_pintado defw 0
 380  8C8A 00 00        Album_de_borrado defw 0
 381  8C8C 00 00        Album_de_pintado_Amadeus defw 0
 382  8C8E 00 00        Album_de_borrado_Amadeus defw 0
 383  8C90 00 00        Techo_Scanlines_album defw 0
 384  8C92 00 00        Techo_Scanlines_album_2 defw 0
 385  8C94 00           Switch db 0
 386  8C95 00 00        Techo defw 0
 387  8C97 00 00        Scanlines_album_SP defw 0
 388  8C99 67 89        India_SP defw Tabla_de_pintado
 389  8C9B 6A 89        India_2_SP defw Tabla_de_pintado+3
 390  8C9D
 391  8C9D 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 392  8C9E              ;
 393  8C9E              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 394  8C9E              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 395  8C9E              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 396  8C9E              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 397  8C9E              ;																Habilita el borrado/pintado de sprites.
 398  8C9E              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 399  8C9E              ;																_ a la baja.
 400  8C9E              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 401  8C9E              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 402  8C9E              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 403  8C9E              ; 																_ el último frame de la explosión de nuestra nave.
 404  8C9E              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 405  8C9E              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 406  8C9E
 407  8C9E 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 408  8C9F              ;
 409  8C9F              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 410  8C9F              ;
 411  8C9F              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 412  8C9F              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 413  8C9F              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 414  8C9F              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 415  8C9F              ;
 416  8C9F              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 417  8C9F              ;															_ masticados ya generados.
 418  8C9F              ;
 419  8C9F              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 420  8C9F              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 421  8C9F              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 422  8C9F              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 423  8C9F
 424  8C9F
 425  8C9F              ; Gestión de Disparos.
 426  8C9F
 427  8C9F              ;Numero_de_disparotes db 0
 428  8C9F
 429  8C9F 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 430  8CA1 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 431  8CA3
 432  8CA3 00           Impacto2 db 0											; Byte de control de impactos.
 433  8CA4
 434  8CA4              ;
 435  8CA4              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 436  8CA4              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 437  8CA4              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 438  8CA4              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 439  8CA4
 440  8CA4
 441  8CA4
 442  8CA4
 443  8CA4
 444  8CA4
 445  8CA4
 446  8CA4 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 447  8CA6              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 448  8CA6              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 449  8CA6
 450  8CA6 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 451  8CA8              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 452  8CA8 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 453  8CAB              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 454  8CAB 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 455  8CAE              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 456  8CAE
 457  8CAE              ;---------------------------------------------------------------------------------------------------------------
 458  8CAE
 459  8CAE              ; Relojes y temporizaciones.
 460  8CAE
 461  8CAE 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 462  8CAF 05           Clock_explosion_Amadeus db 5
 463  8CB0 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 464  8CB1
 465  8CB1 60 89        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 466  8CB3
 467  8CB3 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 468  8CB5 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 469  8CB6              ;														; Repite la oleada de entidades.
 470  8CB6 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 471  8CB7
 472  8CB7              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 473  8CB7              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 474  8CB7
 475  8CB7              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 476  8CB7              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 477  8CB7              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 478  8CB7
 479  8CB7              ;---------------------------------------------------------------------------------------------------------------
 480  8CB7
 481  8CB7              ; Gestión de NIVELES.
 482  8CB7
 483  8CB7 00           Nivel db 0												; Nivel actual del juego.
 484  8CB8 00 00        Puntero_indice_NIVELES defw 0
 485  8CBA 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 486  8CBC              ; 														; _ que definen el NIVEL.
 487  8CBC
 488  8CBC              ; ---------------------------------------------------------------------------------------------------------------
 489  8CBC
 490  8CBC              ; Temporizaciones Shield.
 491  8CBC
 492  8CBC 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 493  8CC0 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 494  8CC2 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 495  8CC3 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 496  8CC4 00           Shield_3 db 0
 497  8CC5
 498  8CC5 06           Lives db 6
 499  8CC6
 500  8CC6              ; 	INICIO  *************************************************************************************************************************************************************************
 501  8CC6              ;
 502  8CC6              ;	5/1/24
 503  8CC6
 504  8CC6              START
 505  8CC6
 506  8CC6 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 507  8CC9 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 508  8CCB ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 509  8CCD ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 510  8CCF F3           	DI
 511  8CD0
 512  8CD0              ; Limpiamos pantalla.
 513  8CD0
 514  8CD0 3E 07        	ld a,%00000111
 515  8CD2              ;	call Cls
 516  8CD2 CD ED 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 517  8CD5
 518  8CD5              ; INICIALIZACIÓN.
 519  8CD5
 520  8CD5 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 521  8CD7 CD 3A 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 522  8CDA CD 94 8E     	call Extrae_numero_aleatorio_y_avanza
 523  8CDD
 524  8CDD 6F           	ld l,a
 525  8CDE 26 00        	ld h,0
 526  8CE0 22 B3 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 527  8CE3
 528  8CE3              ;	Inicializa 1er Nivel.
 529  8CE3
 530  8CE3 21 13 8C     	ld hl,Indice_de_niveles
 531  8CE6 22 B8 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 532  8CE9 CD 6A 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 533  8CEC              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 534  8CEC              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 535  8CEC              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 536  8CEC CD 49 90     	call Inicia_albumes_de_lineas
 537  8CEF              ;
 538  8CEF CD 59 90     	call Inicia_albumes_de_lineas_Amadeus
 539  8CF2
 540  8CF2 CD AF 92     4 call Inicia_Entidades
 541  8CF5 CD 12 93     	call Inicia_Amadeus
 542  8CF8
 543  8CF8              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 544  8CF8              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 545  8CF8              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 546  8CF8
 547  8CF8 11 EC 89     	ld de,Amadeus_BOX
 548  8CFB CD 65 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 549  8CFE CD 55 93     	call Limpiamos_bandeja_DRAW
 550  8D01
 551  8D01              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 552  8D01
 553  8D01 06 3C        	ld b,60
 554  8D03 CD 37 9D     2 call Amadeus_a_izquierda
 555  8D06 10 FB        	djnz 2B
 556  8D08
 557  8D08 CD 27 90     	call Genera_datos_de_impresion_Amadeus
 558  8D0B
 559  8D0B              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 560  8D0B
 561  8D0B CD 66 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 562  8D0E              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 563  8D0E
 564  8D0E              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 565  8D0E              ; (Esto se dá cuando se inicia una nueva oleada).
 566  8D0E
 567  8D0E              ;	ld a,(Ctrl_1)
 568  8D0E              ;	bit 3,a
 569  8D0E              ;	jr nz,5F											 ; Loop
 570  8D0E
 571  8D0E              ;	ld de,Amadeus_db
 572  8D0E              ;	call Store_Amadeus
 573  8D0E
 574  8D0E              ; 	INICIA DISPAROS !!!!!
 575  8D0E
 576  8D0E CD 7C 90     	call Inicia_Puntero_Disparo_Entidades
 577  8D11 CD 83 90     	call Inicia_Puntero_Disparo_Amadeus
 578  8D14
 579  8D14              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 580  8D14
 581  8D14              ;5 call Inicia_punteros_de_cajas
 582  8D14              ;	call Restore_entidad
 583  8D14
 584  8D14              ;	ld a,(Ctrl_1)
 585  8D14              ;	bit 3,a
 586  8D14              ;	jr z,6F
 587  8D14
 588  8D14              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 589  8D14
 590  8D14              ;	ld hl,Ctrl_1
 591  8D14              ;	res 3,(hl)
 592  8D14              ;	jr Main
 593  8D14
 594  8D14              ; Damos por concluida la construcción del FRAME.
 595  8D14              ;
 596  8D14
 597  8D14 CD F8 90     	call Inicia_Shield
 598  8D17
 599  8D17
 600  8D17 2A 97 8C     6 ld hl,(Scanlines_album_SP)
 601  8D1A 22 90 8C     	ld (Techo_Scanlines_album),hl
 602  8D1D
 603  8D1D 2A 8A 8C     	ld hl,(Album_de_borrado)
 604  8D20 22 97 8C     	ld (Scanlines_album_SP),hl
 605  8D23
 606  8D23 21 67 89     	ld hl,Tabla_de_pintado
 607  8D26 22 99 8C     	ld (India_SP),hl
 608  8D29
 609  8D29 21 9D 8C     	ld hl,Ctrl_3
 610  8D2C CB C6        	set 0,(hl) 											; Indica Frame completo.
 611  8D2E CB D6        	set 2,(hl)
 612  8D30 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 613  8D32
 614  8D32 FB           	ei 													; Ha de apuntar a $5c3a.
 615  8D33
 616  8D33 76           	halt
 617  8D34
 618  8D34              ; ------------------------------------
 619  8D34
 620  8D34              Main
 621  8D34              ;
 622  8D34              ; 13/05/24
 623  8D34
 624  8D34              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 625  8D34              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 626  8D34              ; Este hecho lo indica el bit2 de (Impacto2).
 627  8D34
 628  8D34 CD 01 A0     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 629  8D37
 630  8D37 2A B3 8C     16 ld hl,(Clock_next_entity)
 631  8D3A ED 4B 78 5C  	ld bc,(FRAMES)
 632  8D3E A7           	and a
 633  8D3F ED 42        	sbc hl,bc
 634  8D41 20 16        	jr nz,13F
 635  8D43
 636  8D43              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 637  8D43              ; _ (Clock_next_entity) para la siguiente entidad.
 638  8D43
 639  8D43 3A 7E 8C     21 ld a,(Numero_parcial_de_entidades)
 640  8D46 47           	ld b,a
 641  8D47 3A 7F 8C     	ld a,(Entidades_en_curso)
 642  8D4A B8           	cp b
 643  8D4B 28 0C        	jr z,13F
 644  8D4D 30 0A        	jr nc,13F
 645  8D4F
 646  8D4F 3C           	inc a
 647  8D50 32 7F 8C     	ld (Entidades_en_curso),a
 648  8D53
 649  8D53              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 650  8D53
 651  8D53 CD 94 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 652  8D56 CD B0 8E     	call Define_Clock_next_entity
 653  8D59
 654  8D59              ; -------------------------------------------------------------------------------------------------------------
 655  8D59
 656  8D59              ; Habilita disparos.
 657  8D59
 658  8D59              13
 659  8D59
 660  8D59              ;	ld hl,Disparo_Amadeus
 661  8D59              ;	ld de,CLOCK_repone_disparo_Amadeus
 662  8D59              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 663  8D59
 664  8D59              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 665  8D59              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 666  8D59              ;	call Habilita_disparos
 667  8D59
 668  8D59              ; COLISIONES.
 669  8D59
 670  8D59              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 671  8D59
 672  8D59              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 673  8D59              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 674  8D59              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 675  8D59
 676  8D59              ;	xor a
 677  8D59              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 678  8D59
 679  8D59              ;	call Inicia_punteros_de_cajas
 680  8D59              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 681  8D59              ; 														; _ en DRAW.
 682  8D59
 683  8D59              ;	ld a,(Filas)
 684  8D59              ;	and a
 685  8D59              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 686  8D59              ;	call Incrementa_punteros_de_cajas
 687  8D59              ;	jr 12B
 688  8D59
 689  8D59              ; ---------------------------------------------------------------------------------------
 690  8D59
 691  8D59              ;10 ld a,(Numero_parcial_de_entidades)
 692  8D59              ;    ld b,a
 693  8D59              ;	and a
 694  8D59              ;	jr nz,11F
 695  8D59
 696  8D59              ;	ld hl,Ctrl_1;
 697  8D59              ;	bit 4,(hl)
 698  8D59              ;	jp nz,16F
 699  8D59
 700  8D59              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 701  8D59
 702  8D59              ;	ld hl,Ctrl_1
 703  8D59              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 704  8D59
 705  8D59              ;	ld a,(Contador_de_frames)
 706  8D59              ;	inc a
 707  8D59              ;	ld (Activa_recarga_cajas),a
 708  8D59
 709  8D59              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 710  8D59
 711  8D59 3A 7F 8C     11 ld a,(Entidades_en_curso)
 712  8D5C A7           	and a
 713  8D5D CA C5 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 714  8D60 47           	ld b,a												; No hay entidades que gestionar.
 715  8D61
 716  8D61              ; ( Código que ejecutamos con cada entidad: ).
 717  8D61
 718  8D61              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 719  8D61              ;
 720  8D61              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 721  8D61
 722  8D61 21 67 89     	ld hl,Tabla_de_pintado
 723  8D64 22 99 8C     	ld (India_SP),hl
 724  8D67
 725  8D67 21 9D 8C     	ld hl,Ctrl_3
 726  8D6A CB D6        	set 2,(hl)
 727  8D6C CD 69 8E     	call Change
 728  8D6F
 729  8D6F C5           15 push bc 												; Nº de entidades en curso.
 730  8D70
 731  8D70 CD C5 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 732  8D73 ED 5B 97 8C  	ld de,(Scanlines_album_SP)
 733  8D77
 734  8D77              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 735  8D77
 736  8D77              ; En 1er lugar, ... existe (Impacto) en esta entidad ???
 737  8D77
 738  8D77 3A 3B 8C     	ld a,(Impacto)
 739  8D7A A7           	and a
 740  8D7B 28 13        	jr z,8F
 741  8D7D
 742  8D7D              ; 5/7/24
 743  8D7D              ; Nota importante:
 744  8D7D              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 745  8D7D              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 746  8D7D              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 747  8D7D
 748  8D7D 3A 9D 8C     	ld a,(Ctrl_3)
 749  8D80 CB 7F        	bit 7,a
 750  8D82 20 0C        	jr nz,8F												; El bit 7 de (Ctrl_3) indica que Amadeus esta explotando.
 751  8D84              ;															; No vamos a generar una nueva explosión en más de una entidad a la vez.
 752  8D84 3A F0 89     	ld a,(Impacto_Amadeus)
 753  8D87 A7           	and a
 754  8D88 C4 D5 91     	call nz,Genera_explosion
 755  8D8B 20 1B        	jr nz,Gestiona_siguiente_entidad
 756  8D8D
 757  8D8D              ; Falsa colisión !!!
 758  8D8D
 759  8D8D 32 3B 8C     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 760  8D90
 761  8D90              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 762  8D90              ;	set 1,(hl)
 763  8D90              ;	jr 7F
 764  8D90
 765  8D90              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 766  8D90              ; _con las coordenadas de la entidad almacenada en DRAW.
 767  8D90
 768  8D90              ;	ld a,(Ctrl_1)
 769  8D90              ;	bit 2,a
 770  8D90              ;	jr z,7F
 771  8D90
 772  8D90              ;	ld hl,(Coordenadas_disparo_certero)
 773  8D90              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 774  8D90              ;														; E contiene la coordenada_X del disparo.
 775  8D90              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 776  8D90              ;														; H FILA, (Coordenada_y de la entidad).
 777  8D90              ;	and a
 778  8D90              ;	sbc hl,de
 779  8D90
 780  8D90              ;	call Determina_resultado_comparativa
 781  8D90
 782  8D90              ;	ld a,b
 783  8D90              ;	and a
 784  8D90              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 785  8D90
 786  8D90              ; ----- ----- -----
 787  8D90
 788  8D90              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 789  8D90              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 790  8D90
 791  8D90              ;	ld hl,Ctrl_1
 792  8D90              ;	res 2,(hl)
 793  8D90
 794  8D90              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 795  8D90
 796  8D90              ;	ld a,(Ctrl_0)
 797  8D90              ;	bit 4,a
 798  8D90              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 799  8D90
 800  8D90              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 801  8D90              ; [[[
 802  8D90              ;	call Detecta_disparo_entidad
 803  8D90              ; ]]]
 804  8D90
 805  8D90              ;	dec a
 806  8D90              ;	ld (Impacto),a
 807  8D90
 808  8D90              ; Existe "Entidad_guía" ???.
 809  8D90              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 810  8D90
 811  8D90              ;	ld a,(Ctrl_3)
 812  8D90              ;	bit 1,a
 813  8D90              ;	jr nz,22F
 814  8D90
 815  8D90              ; Almacén de "Movimientos_masticados" lleno ???
 816  8D90              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 817  8D90              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 818  8D90
 819  8D90              ;;	ld a,(Ctrl_3)
 820  8D90              ;;	bit 3,a
 821  8D90              ;;	jr nz,22F
 822  8D90
 823  8D90              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 824  8D90
 825  8D90              ;	ld hl,Ctrl_2
 826  8D90              ;	set 5,(hl)
 827  8D90              ;	ld hl,Ctrl_3
 828  8D90              ;	set 1,(hl)
 829  8D90
 830  8D90              ; -------------------------------------------
 831  8D90
 832  8D90 CD F4 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 833  8D93 CD 49 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 834  8D96 CD E0 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 835  8D99 CD D5 94     	call Genera_datos_de_impresion
 836  8D9C CD 78 93     	call Decrementa_Contador_de_mov_masticados
 837  8D9F
 838  8D9F              ; -------------------------------------------
 839  8D9F
 840  8D9F              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 841  8D9F
 842  8D9F 2A 3C 8C     	ld hl,(Puntero_de_impresion)
 843  8DA2 CD A9 94     	call Genera_coordenadas
 844  8DA5
 845  8DA5 CD 7F 9F     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 846  8DA8
 847  8DA8              ;	ld hl,Ctrl_0
 848  8DA8              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 849  8DA8
 850  8DA8              Gestiona_siguiente_entidad
 851  8DA8
 852  8DA8 CD 4A 93      	call Store_Restore_cajas
 853  8DAB C1           	pop bc
 854  8DAC 10 C1        	djnz 15B
 855  8DAE
 856  8DAE              ; Hemos gestionado todas las entidades.
 857  8DAE
 858  8DAE CD 04 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 859  8DB1 CD 1B 8F     	call Ordena_tabla_de_impresion
 860  8DB4 CD 66 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 861  8DB7
 862  8DB7              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 863  8DB7              ; Hemos gestionado todas las unidades.
 864  8DB7              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 865  8DB7
 866  8DB7              ;	ld hl,Ctrl_1
 867  8DB7              ;	res 2,(hl)
 868  8DB7
 869  8DB7 CD C5 8E     	call Borra_diferencia
 870  8DBA
 871  8DBA 3A 9D 8C     	ld a,(Ctrl_3)
 872  8DBD CB 5F        	bit 3,a
 873  8DBF 20 04        	jr nz,Gestion_de_Amadeus
 874  8DC1
 875  8DC1 EB           	ex de,hl
 876  8DC2 71           	ld (hl),c
 877  8DC3 2C           	inc l
 878  8DC4 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 879  8DC5
 880  8DC5
 881  8DC5              ;! GESTIONA AMADEUS !!!!!!!!!!
 882  8DC5
 883  8DC5              Gestion_de_Amadeus
 884  8DC5
 885  8DC5 21 9D 8C     	ld hl,Ctrl_3
 886  8DC8 CB 76        	bit 6,(hl)
 887  8DCA 28 13        	jr z,Amadeus_vivo
 888  8DCC
 889  8DCC              ; Amadeus ha sido destruido.
 890  8DCC              ; Decrementa (Temp_new_live).
 891  8DCC
 892  8DCC 21 B0 8C     	ld hl,Temp_new_live
 893  8DCF 35           	dec (hl)
 894  8DD0 20 26        	jr nz,End_frame
 895  8DD2
 896  8DD2              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 897  8DD2
 898  8DD2 21 C5 8C     	ld hl,Lives
 899  8DD5 35           	dec (hl)
 900  8DD6
 901  8DD6              ;! Fin del juego
 902  8DD6
 903  8DD6 F3           	di
 904  8DD7 28 FE        	jr z,$
 905  8DD9 FB           	ei
 906  8DDA
 907  8DDA              ; Nueva nave.
 908  8DDA
 909  8DDA CD 0F 8E     	call Reinicia_Amadeus
 910  8DDD 18 19        	jr End_frame
 911  8DDF
 912  8DDF              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 913  8DDF
 914  8DDF              Amadeus_vivo
 915  8DDF
 916  8DDF 3A F0 89     	ld a,(Impacto_Amadeus)
 917  8DE2 A7           	and a
 918  8DE3 C4 05 92     	call nz, Genera_explosion_Amadeus
 919  8DE6 20 10        	jr nz, End_frame
 920  8DE8
 921  8DE8 CD B2 91     	call Teclado
 922  8DEB
 923  8DEB 21 9D 8C     	ld hl,Ctrl_3
 924  8DEE CB 6E        	bit 5,(hl)
 925  8DF0 28 06        	jr z,End_frame
 926  8DF2
 927  8DF2              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 928  8DF2
 929  8DF2 CD 84 8E     	call Change_Amadeus
 930  8DF5 CD 27 90     	call Genera_datos_de_impresion_Amadeus
 931  8DF8
 932  8DF8              End_frame
 933  8DF8
 934  8DF8 2A 8A 8C     	ld hl,(Album_de_borrado)
 935  8DFB 22 97 8C     	ld (Scanlines_album_SP),hl
 936  8DFE
 937  8DFE 21 9D 8C     	ld hl,Ctrl_3
 938  8E01 CB C6        	set 0,(hl) 											; Indica Frame completo.
 939  8E03 CB 9E        	res 3,(hl)
 940  8E05 CB A6        	res 4,(hl)
 941  8E07
 942  8E07 AF           	xor a
 943  8E08 D3 FE        	out ($fe),a
 944  8E0A
 945  8E0A 76           	halt
 946  8E0B
 947  8E0B              ; ----------------------------------------
 948  8E0B
 949  8E0B              ;	ld a,(Ctrl_1) 										; Existe Loop?
 950  8E0B              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 951  8E0B CA 34 8D     	jp z,Main
 952  8E0E
 953  8E0E              ; RECARGA DE NUEVA OLEADA.
 954  8E0E
 955  8E0E              ;	ld a,(Contador_de_frames)
 956  8E0E              ;	ld b,a
 957  8E0E              ;	ld a,(Activa_recarga_cajas)
 958  8E0E              ;	cp b
 959  8E0E              ;	jr z,20F
 960  8E0E
 961  8E0E              ;	ld hl,Ctrl_1
 962  8E0E              ;	set 4,(hl)
 963  8E0E              ;	jp Main
 964  8E0E
 965  8E0E              ;20 ld hl,Ctrl_1
 966  8E0E              ;	res 4,(hl)
 967  8E0E
 968  8E0E              ;	ld a,(Contador_de_frames)
 969  8E0E
 970  8E0E              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 971  8E0E              ;! _ IMPREDECIBLE !!!!
 972  8E0E
 973  8E0E              ;	add 10
 974  8E0E              ;	ld (Clock_next_entity),a
 975  8E0E
 976  8E0E              ;	jp 4B
 977  8E0E
 978  8E0E C9           	ret
 979  8E0F
 980  8E0F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 981  8E0F              ;
 982  8E0F              ;	16/11/23
 983  8E0F
 984  8E0F              ;;Gestiona_Amadeus
 985  8E0F
 986  8E0F              ;! Activa/desactiva impacto con Amadeus.
 987  8E0F
 988  8E0F              ;	ld a,(Impacto)
 989  8E0F              ;	and a
 990  8E0F              ;	jr nz,2F
 991  8E0F
 992  8E0F              ;;	call Mov_Amadeus
 993  8E0F
 994  8E0F              ;;2 ld a,(Ctrl_0)
 995  8E0F              ;;	bit 4,a
 996  8E0F              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 997  8E0F
 998  8E0F              ;;	call Guarda_foto_entidad_a_pintar
 999  8E0F              ;;	call Guarda_datos_de_borrado_Amadeus
1000  8E0F
1001  8E0F              ;;1 ld hl,Ctrl_0
1002  8E0F              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
1003  8E0F
1004  8E0F              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
1005  8E0F
1006  8E0F              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
1007  8E0F
1008  8E0F              ;	call Calcula_numero_de_disparotes
1009  8E0F
1010  8E0F              ;;	ret
1011  8E0F
1012  8E0F              ; -----------------------------
1013  8E0F              ;
1014  8E0F              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
1015  8E0F              ;
1016  8E0F              ;	INPUTS: B a de estar a "0".
1017  8E0F
1018  8E0F              ;Prepara_Borra_sprites
1019  8E0F
1020  8E0F              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
1021  8E0F              ;	ld a,l
1022  8E0F              ;	ret z
1023  8E0F
1024  8E0F              ;	srl a
1025  8E0F
1026  8E0F              ;2 sub 16
1027  8E0F              ;	jr z,1F
1028  8E0F              ;	inc b
1029  8E0F              ;	jr 2B
1030  8E0F
1031  8E0F              ;1 inc b
1032  8E0F
1033  8E0F              ;	exx
1034  8E0F              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1035  8E0F              ;	exx
1036  8E0F
1037  8E0F              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1038  8E0F              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1039  8E0F
1040  8E0F              ;	ret
1041  8E0F
1042  8E0F              ; --------------------------------------------------------------------------------------------------------------
1043  8E0F              ;
1044  8E0F              ;	15/12/23
1045  8E0F
1046  8E0F              ;Mov_obj
1047  8E0F
1048  8E0F              ;	ld a,(Ctrl_2)
1049  8E0F              ;	bit 1,a
1050  8E0F              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1051  8E0F
1052  8E0F              ; Explosión:
1053  8E0F
1054  8E0F              ;	ld a,(Frames_explosion)
1055  8E0F              ;	and a
1056  8E0F              ;	jr nz,4F
1057  8E0F
1058  8E0F              ;!  Una alimaña menos!!!!!!!!!1
1059  8E0F
1060  8E0F              ; Se trataba de una Entidad_guía ???
1061  8E0F
1062  8E0F              ;	ld a,(Ctrl_2)
1063  8E0F              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1064  8E0F              ;	jr z,5F
1065  8E0F
1066  8E0F              ;	ld hl,Ctrl_3
1067  8E0F              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1068  8E0F
1069  8E0F              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1070  8E0F              ;!! _generado puede ser distinto, (aletoriedad).
1071  8E0F
1072  8E0F              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1073  8E0F              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1074  8E0F              ;	dec (hl)
1075  8E0F              ;	ld hl,Entidades_en_curso
1076  8E0F              ;	dec (hl)
1077  8E0F              ;	ld hl,Numero_de_entidades
1078  8E0F              ;	dec (hl)
1079  8E0F              ;	jr 3F
1080  8E0F
1081  8E0F              ; -----
1082  8E0F
1083  8E0F              ;	`Movemos´ la explosión.
1084  8E0F
1085  8E0F              ;4 ld hl,(Puntero_DESPLZ_der)
1086  8E0F              ;	inc hl
1087  8E0F              ;	inc hl
1088  8E0F              ;	call Extrae_address
1089  8E0F              ;;	ld (Puntero_objeto),hl
1090  8E0F
1091  8E0F              ;;	ld hl,Frames_explosion
1092  8E0F              ;;	dec (hl)
1093  8E0F
1094  8E0F              ;;	ld hl,Ctrl_0
1095  8E0F              ;;	set 4,(hl);;
1096  8E0F
1097  8E0F              ;;	jr 3F
1098  8E0F
1099  8E0F              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1100  8E0F
1101  8E0F              ;2 xor a
1102  8E0F              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1103  8E0F
1104  8E0F              ; Movemos Entidades malignas.
1105  8E0F              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1106  8E0F
1107  8E0F              ;	ld a,(Ctrl_2)
1108  8E0F              ;	bit 5,a
1109  8E0F              ;	jr nz,8F
1110  8E0F
1111  8E0F              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1112  8E0F              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1113  8E0F              ;	jr 7F
1114  8E0F
1115  8E0F              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1116  8E0F
1117  8E0F              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1118  8E0F              ;	bit 4,a
1119  8E0F              ;	ret z
1120  8E0F
1121  8E0F              ; Ha habido desplazamiento de la entidad maligna.
1122  8E0F              ; Ha llegado a zona de AMADEUS ???
1123  8E0F
1124  8E0F              ;7 ld a,(Coordenada_y)
1125  8E0F              ;	cp $14
1126  8E0F              ;	jr c,1F
1127  8E0F
1128  8E0F              ; ---------
1129  8E0F
1130  8E0F              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1131  8E0F              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1132  8E0F
1133  8E0F              ;	di
1134  8E0F              ;	call Genera_coordenadas_X
1135  8E0F              ;	call Compara_coordenadas_X
1136  8E0F              ;	ei
1137  8E0F
1138  8E0F              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1139  8E0F
1140  8E0F              ; ---------
1141  8E0F
1142  8E0F              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1143  8E0F              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1144  8E0F              ;	call Limpia_Variables_de_borrado
1145  8E0F
1146  8E0F              ;3 ret
1147  8E0F
1148  8E0F              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1149  8E0F              ;
1150  8E0F              ;	24/07/24
1151  8E0F
1152  8E0F              Reinicia_Amadeus
1153  8E0F
1154  8E0F              ;	Reinicia posición y estado.
1155  8E0F
1156  8E0F 21 CF 50     	ld hl,$50cf
1157  8E12 22 F1 89     	ld (p.imp.amadeus),hl
1158  8E15 21 F0 E0     	ld hl,$e0f0
1159  8E18 22 F3 89     	ld (Pamm_Amadeus),hl
1160  8E1B 21 3D 00     	ld hl,$003d
1161  8E1E 22 F5 89     	ld (Comm_Amadeus),hl
1162  8E21
1163  8E21              ;	limpiamos el álbum de borrado.
1164  8E21
1165  8E21 2A 8E 8C     	ld hl,(Album_de_borrado_Amadeus)
1166  8E24
1167  8E24 AF           	xor a
1168  8E25 77           	ld (hl),a
1169  8E26
1170  8E26 E5           	push hl
1171  8E27 D1           	pop de
1172  8E28 13           	inc de
1173  8E29
1174  8E29 01 23 00     	ld bc,35
1175  8E2C ED B0        	ldir
1176  8E2E
1177  8E2E CD 27 90     	call Genera_datos_de_impresion_Amadeus
1178  8E31
1179  8E31              ;	Reinicia temporizaciones.
1180  8E31
1181  8E31 CD F8 90     	call Inicia_Shield
1182  8E34
1183  8E34 3E 5A        	ld a,90
1184  8E36 32 C2 8C     	ld (Shield),a
1185  8E39
1186  8E39 3E 64        	ld a,100
1187  8E3B 32 B0 8C     	ld (Temp_new_live),a
1188  8E3E
1189  8E3E              ; 	Restauramos el FLAG: Amadeus vivo.
1190  8E3E
1191  8E3E 21 9D 8C     	ld hl,Ctrl_3
1192  8E41 CB B6        	res 6,(hl)
1193  8E43
1194  8E43              ;	Fuerza la impresión de la nave en el siguiente frame.
1195  8E43
1196  8E43 21 9D 8C      	ld hl,Ctrl_3
1197  8E46 CB EE        	set 5,(hl)
1198  8E48
1199  8E48 C9           	ret
1200  8E49
1201  8E49              ; --------------------------------------------------------------------------------------------------------------
1202  8E49              ;
1203  8E49              ;	12/05/24
1204  8E49
1205  8E49 3A 42 8C     Ajusta_velocidad_entidad ld a,(Velocidad)
1206  8E4C CB 27        	sla a
1207  8E4E 32 42 8C     	ld (Velocidad),a
1208  8E51 E6 10        	and $10
1209  8E53 C8           	ret z
1210  8E54
1211  8E54              ; Restaura (Velocidad) a razón del nº de vueltas.
1212  8E54
1213  8E54 3A 3A 8C     	ld a,(Contador_de_vueltas)
1214  8E57 CB 2F        	sra a
1215  8E59 CB 2F        	sra a
1216  8E5B 32 42 8C     	ld (Velocidad),a
1217  8E5E
1218  8E5E 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1219  8E61 23           	inc hl
1220  8E62 23           	inc hl
1221  8E63 23           	inc hl
1222  8E64 23           	inc hl
1223  8E65 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1224  8E68
1225  8E68 C9           	ret
1226  8E69
1227  8E69              ; --------------------------------------------------------------------------------------------------------------
1228  8E69              ;
1229  8E69              ;	18/06/24
1230  8E69
1231  8E69              Change
1232  8E69
1233  8E69 3A 94 8C     	ld a,(Switch)
1234  8E6C EE 01        	xor 1
1235  8E6E 32 94 8C     	ld (Switch),a
1236  8E71 2A 88 8C     	ld hl,(Album_de_pintado)
1237  8E74 ED 5B 8A 8C  	ld de,(Album_de_borrado)
1238  8E78 EB           	ex de,hl
1239  8E79 22 88 8C     	ld (Album_de_pintado),hl
1240  8E7C 22 97 8C     	ld (Scanlines_album_SP),hl
1241  8E7F ED 53 8A 8C  	ld (Album_de_borrado),de
1242  8E83 C9           	ret
1243  8E84
1244  8E84              Change_Amadeus
1245  8E84
1246  8E84 2A 8C 8C     	ld hl,(Album_de_pintado_Amadeus)
1247  8E87 ED 5B 8E 8C  	ld de,(Album_de_borrado_Amadeus)
1248  8E8B EB           	ex de,hl
1249  8E8C 22 8C 8C     	ld (Album_de_pintado_Amadeus),hl
1250  8E8F ED 53 8E 8C  	ld (Album_de_borrado_Amadeus),de
1251  8E93 C9           	ret
1252  8E94
1253  8E94              ; ------------------------------------
1254  8E94              ;
1255  8E94              ; 1/05/24
1256  8E94
1257  8E94              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1258  8E94              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1259  8E94
1260  8E94              ;	DESTRUYE: HL,DE,A
1261  8E94              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1262  8E94
1263  8E94              ;	Variables implicadas: (RND_SP).
1264  8E94
1265  8E94              Extrae_numero_aleatorio_y_avanza
1266  8E94
1267  8E94 21 67 89     	ld hl,Tabla_de_pintado
1268  8E97 EB           	ex de,hl
1269  8E98 2A B1 8C     	ld hl,(RND_SP)
1270  8E9B EB           	ex de,hl
1271  8E9C A7           	and a
1272  8E9D ED 52        	sbc hl,de
1273  8E9F
1274  8E9F 2A B1 8C     	ld hl,(RND_SP)
1275  8EA2 20 06        	jr nz,1F
1276  8EA4
1277  8EA4              ; Sitúa HL al principio de la tabla de nº aleatorios.
1278  8EA4
1279  8EA4 21 60 89     	ld hl,Numeros_aleatorios
1280  8EA7 22 B1 8C     	ld (RND_SP),HL
1281  8EAA
1282  8EAA              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1283  8EAA
1284  8EAA 7E           1 ld a,(hl)
1285  8EAB 23           	inc hl
1286  8EAC 22 B1 8C     	ld (RND_SP),hl
1287  8EAF C9           	ret
1288  8EB0
1289  8EB0              ; ------------------------------------
1290  8EB0              ;
1291  8EB0              ; 1/05/24
1292  8EB0
1293  8EB0              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1294  8EB0              ; (1 a 4 segundos).
1295  8EB0              ; Actualizamos (Clock_next_entity) con A.
1296  8EB0
1297  8EB0              ;	DESTRUYE: A y B.
1298  8EB0              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1299  8EB0              ;			 Actualiza (Clock_next_entity) con A.
1300  8EB0
1301  8EB0              ;	Variables implicadas: (Clock_next_entity).
1302  8EB0
1303  8EB0              ; Notas:
1304  8EB0
1305  8EB0              ; 	$32 1 seg.
1306  8EB0              ; 	$64 2 seg.
1307  8EB0              ; 	$96 3 seg.
1308  8EB0              ; 	$c8 4 seg.
1309  8EB0              ; 	$fa 5 seg.
1310  8EB0
1311  8EB0              ; $ffff 1310,7 seg, 22 minutos.
1312  8EB0
1313  8EB0              ;	$0100  5 seg. aproximadamente.
1314  8EB0              ;	$0200 10 seg. aproximadamente.
1315  8EB0              ;	$0300 15 seg. aproximadamente.
1316  8EB0              ;	$0400 20 seg. aproximadamente.
1317  8EB0              ;	$0500 25 seg. aproximadamente.
1318  8EB0              ;	$0600 30 seg. aproximadamente.
1319  8EB0
1320  8EB0              Define_Clock_next_entity
1321  8EB0
1322  8EB0 FE 34        	cp $34
1323  8EB2 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1324  8EB4
1325  8EB4              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1326  8EB4
1327  8EB4 4F           3 ld c,a
1328  8EB5 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1329  8EB7 2A 78 5C     	ld hl,(FRAMES)
1330  8EBA A7           	and a
1331  8EBB ED 4A        	adc hl,bc
1332  8EBD 22 B3 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1333  8EC0 C9           	ret
1334  8EC1
1335  8EC1 3E 34        1 ld a,$34
1336  8EC3 18 EF        	jr 3B
1337  8EC5
1338  8EC5              ; ------------------------------------
1339  8EC5              ;
1340  8EC5              ; 18/03/24
1341  8EC5
1342  8EC5              Borra_diferencia
1343  8EC5
1344  8EC5 ED 4B 97 8C  	ld bc,(Scanlines_album_SP)
1345  8EC9
1346  8EC9 3A 94 8C     	ld a,(Switch)
1347  8ECC A7           	and a
1348  8ECD 28 08        	jr z,2F
1349  8ECF
1350  8ECF 2A 92 8C     	ld hl,(Techo_Scanlines_album_2)
1351  8ED2 11 92 8C     	ld de,Techo_Scanlines_album_2
1352  8ED5 18 06        	jr 3F
1353  8ED7
1354  8ED7 2A 90 8C     2 ld hl,(Techo_Scanlines_album)
1355  8EDA 11 90 8C     	ld de,Techo_Scanlines_album
1356  8EDD
1357  8EDD              ; Diferencia.
1358  8EDD
1359  8EDD ED 42        3 sbc hl,bc
1360  8EDF
1361  8EDF C8           	ret z
1362  8EE0 D8           	ret c
1363  8EE1
1364  8EE1              ; Nuevo techo, (más bajo que el anterior).
1365  8EE1              ; Fijamos nuevo techo y borramos bytes sobrantes.
1366  8EE1
1367  8EE1 EB           	ex de,hl
1368  8EE2
1369  8EE2 71           	ld (hl),c
1370  8EE3 2C           	inc l
1371  8EE4 70           	ld (hl),b
1372  8EE5
1373  8EE5 AF           	xor a
1374  8EE6 43           	ld b,e
1375  8EE7
1376  8EE7 2A 97 8C     	ld hl,(Scanlines_album_SP)
1377  8EEA
1378  8EEA 77           1 ld (hl),a
1379  8EEB 23           	inc hl
1380  8EEC 10 FC        	djnz 1B
1381  8EEE
1382  8EEE              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1383  8EEE
1384  8EEE 21 9D 8C     	ld hl,Ctrl_3
1385  8EF1 CB DE        	set 3,(hl)
1386  8EF3
1387  8EF3 C9           	ret
1388  8EF4
1389  8EF4              ; --------------------------------------------------------------------------------------------------------------
1390  8EF4              ;
1391  8EF4              ;	26/3/24
1392  8EF4
1393  8EF4              Recauda_informacion_de_entidad_en_curso
1394  8EF4
1395  8EF4              ; Almacena la Coordenada Y de la entidad en curso.
1396  8EF4
1397  8EF4              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1398  8EF4
1399  8EF4 3A 39 8C     	ld a,(Coordenada_y)
1400  8EF7 2A 99 8C     	ld hl,(India_SP)
1401  8EFA 77           	ld (hl),a
1402  8EFB 2C           	inc l
1403  8EFC
1404  8EFC              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1405  8EFC
1406  8EFC              ;	ld de,(Scanlines_album_SP)
1407  8EFC
1408  8EFC 73           	ld (hl),e
1409  8EFD 2C           	inc l
1410  8EFE 72           	ld (hl),d
1411  8EFF 2C           	inc l
1412  8F00
1413  8F00 22 99 8C     	ld (India_SP),hl
1414  8F03
1415  8F03 C9           	ret
1416  8F04
1417  8F04              ; --------------------------------------------------------------------------------------------------------------
1418  8F04              ;
1419  8F04              ;	27/03/24
1420  8F04              ;
1421  8F04
1422  8F04              Inicializa_India_y_limpia_Tabla_de_impresion
1423  8F04
1424  8F04 2A 99 8C     	ld hl,(India_SP)
1425  8F07 01 7F 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1426  8F0A
1427  8F0A 79           	ld a,c
1428  8F0B 95           	sub l
1429  8F0C 28 06        	jr z,2F
1430  8F0E 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1431  8F0F              ;														; _ y pasamos a inicializar (India_SP).
1432  8F0F AF           	xor a
1433  8F10
1434  8F10 77           1 ld (hl),a
1435  8F11 2C           	inc l
1436  8F12 10 FC        	djnz 1B												; Limpia Tabla.
1437  8F14
1438  8F14 21 67 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1439  8F17 22 99 8C     	ld (India_SP),hl
1440  8F1A
1441  8F1A C9           	ret
1442  8F1B
1443  8F1B              ; --------------------------------------------------------------------------------------------------------------
1444  8F1B              ;
1445  8F1B              ;	31/3/24
1446  8F1B
1447  8F1B              Ordena_tabla_de_impresion
1448  8F1B
1449  8F1B              ; 5794 T/states.
1450  8F1B              ; 6278 T/states.
1451  8F1B              ; 5310 T/states.
1452  8F1B
1453  8F1B              ; Inicializamos punteros (India_SP) e (India_2_SP).
1454  8F1B              ; Inicializamos contador de comparaciones, [C].
1455  8F1B              ; Cargamos los registros A y B para efectuar comparación.
1456  8F1B
1457  8F1B FD 2E 00     	ld iyl,0
1458  8F1E
1459  8F1E 3A 7F 8C     	ld a,(Entidades_en_curso)
1460  8F21 FE 04        	cp 4 	;	4
1461  8F23 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1462  8F24
1463  8F24 3D           	dec a
1464  8F25 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1465  8F26 51           	ld d,c 										; Copia de respaldo.
1466  8F27
1467  8F27 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1468  8F28
1469  8F28 21 6A 89     	ld hl,Tabla_de_pintado+3
1470  8F2B 46           	ld b,(hl)
1471  8F2C 22 9B 8C     	ld (India_2_SP),hl
1472  8F2F
1473  8F2F B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1474  8F30 DC 58 8F     	call c, Avanza_India_2_SP
1475  8F33 CC 58 8F     	call z, Avanza_India_2_SP
1476  8F36
1477  8F36 FD 2D        	dec iyl
1478  8F38 28 18        	jr z,2F
1479  8F3A
1480  8F3A
1481  8F3A              ; --------------------------------------------------------------------------------------------------------------
1482  8F3A              ;
1483  8F3A              ;	7/4/24
1484  8F3A
1485  8F3A              Trueque
1486  8F3A
1487  8F3A              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1488  8F3A              ;  			A contiene en nº de fila de (India_SP).
1489  8F3A              ;			HL contiene (India_2_SP).
1490  8F3A
1491  8F3A D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1492  8F3B E5           	push hl										; Preservo (India_2_SP).
1493  8F3C
1494  8F3C ED 5B 99 8C  	ld de,(India_SP)
1495  8F40 EB           	ex de,hl
1496  8F41 70           	ld (hl),b
1497  8F42 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1498  8F43
1499  8F43 CD 84 8F     	call Intercambia_1_byte
1500  8F46 CD 84 8F     	call Intercambia_1_byte
1501  8F49
1502  8F49
1503  8F49              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1504  8F49              ; Recuperamos (India_2_SP) en HL.
1505  8F49
1506  8F49 2A 99 8C     	ld hl,(India_SP)
1507  8F4C 7E           	ld a,(hl)
1508  8F4D
1509  8F4D E1           	pop hl
1510  8F4E D1           	pop de
1511  8F4F
1512  8F4F              ; --------------------------------------------------------------------------------------------------------------
1513  8F4F
1514  8F4F CD 58 8F     	call Avanza_India_2_SP
1515  8F52
1516  8F52 14           2 inc d
1517  8F53 15           	dec d
1518  8F54 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1519  8F55 18 D8        	jr 1B
1520  8F57
1521  8F57 C9           	ret
1522  8F58
1523  8F58              ; ----- ----- ----- ----- -----
1524  8F58
1525  8F58              Avanza_India_2_SP
1526  8F58
1527  8F58 0D           	dec c
1528  8F59 28 0A        	jr z,Avanza_punteros_indios
1529  8F5B
1530  8F5B FD 2C        	inc iyl
1531  8F5D
1532  8F5D 2C           	inc l
1533  8F5E 2C           	inc l
1534  8F5F 2C           	inc l
1535  8F60
1536  8F60 46           	ld b,(hl)
1537  8F61 22 9B 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1538  8F64
1539  8F64 C9           	ret
1540  8F65
1541  8F65              ; ----- ----- ----- ----- -----
1542  8F65
1543  8F65              Avanza_punteros_indios
1544  8F65
1545  8F65 15           	dec d
1546  8F66 28 15        	jr z,Prepara_salida
1547  8F68
1548  8F68 4A           	ld c,d
1549  8F69
1550  8F69 2A 99 8C     	ld hl,(India_SP)
1551  8F6C 2C           	inc l
1552  8F6D 2C           	inc l
1553  8F6E 2C           	inc l
1554  8F6F 7E           	ld a,(hl)
1555  8F70 22 99 8C     	ld (India_SP),hl
1556  8F73
1557  8F73 2C           	inc l
1558  8F74 2C           	inc l
1559  8F75 2C           	inc l
1560  8F76 46           	ld b,(hl)
1561  8F77 22 9B 8C     	ld (India_2_SP),hl
1562  8F7A
1563  8F7A FD 2C        	inc iyl
1564  8F7C
1565  8F7C C9           	ret
1566  8F7D
1567  8F7D              Prepara_salida
1568  8F7D
1569  8F7D 21 67 89     	ld hl,Tabla_de_pintado
1570  8F80 22 99 8C     	ld (India_SP),hl
1571  8F83 C9           	ret
1572  8F84
1573  8F84
1574  8F84 2C           Intercambia_1_byte inc l
1575  8F85 1C           	inc e
1576  8F86 46           	ld b,(hl)
1577  8F87 1A           	ld a,(de)
1578  8F88 EB           	ex de,hl
1579  8F89 70           	ld (hl),b
1580  8F8A 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1581  8F8B C9           	ret
1582  8F8C
1583  8F8C              ; -----------------------------------------------------------------------------------
1584  8F8C              ;
1585  8F8C              ;	20/01/24
1586  8F8C              ;
1587  8F8C              ;
1588  8F8C
1589  8F8C              Construye_movimientos_masticados_entidad
1590  8F8C
1591  8F8C 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1592  8F8F E5           	push hl
1593  8F90 CD D3 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1594  8F93              ;															; _ el (Contador_de_mov_masticados).
1595  8F93 CD 90 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1596  8F96              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1597  8F96 CD BD 99     	call Recompone_posicion_inicio
1598  8F99
1599  8F99 CD ED 96     1 call Draw
1600  8F9C CD B8 8F     	call Guarda_movimiento_masticado
1601  8F9F
1602  8F9F CD 6A 9D     	call Movimiento
1603  8FA2
1604  8FA2 3A 9D 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1605  8FA5 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1606  8FA7 28 F0        	jr z,1B
1607  8FA9
1608  8FA9              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1609  8FA9              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1610  8FA9
1611  8FA9 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1612  8FAA 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1613  8FAD
1614  8FAD              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1615  8FAD
1616  8FAD CD CE 9E     	call Situa_en_contador_general_de_mov_masticados
1617  8FB0
1618  8FB0              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1619  8FB0              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1620  8FB0
1621  8FB0 ED 4B 40 8C  	ld bc,(Contador_de_mov_masticados)
1622  8FB4
1623  8FB4 71           	ld (hl),c
1624  8FB5 23           	inc hl
1625  8FB6 70           	ld (hl),b
1626  8FB7
1627  8FB7 C9           	ret
1628  8FB8
1629  8FB8              ; -----------------------------------------------------------------------------------
1630  8FB8              ;
1631  8FB8              ;	28/12/23
1632  8FB8              ;
1633  8FB8              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1634  8FB8              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1635  8FB8
1636  8FB8              Guarda_movimiento_masticado
1637  8FB8
1638  8FB8 ED 73 84 8C  	ld (Stack),sp
1639  8FBC ED 7B 3E 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1640  8FC0
1641  8FC0 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1642  8FC2 FD E5            push iy 												; Pushea Puntero_objeto.
1643  8FC4
1644  8FC4 ED 7B 84 8C      ld sp,(Stack)
1645  8FC8
1646  8FC8 2A 40 8C        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1647  8FCB 23           	inc hl
1648  8FCC 22 40 8C     	ld (Contador_de_mov_masticados),hl
1649  8FCF
1650  8FCF CD D3 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1651  8FD2              ;															; _ el (Contador_de_mov_masticados).
1652  8FD2 C9               ret
1653  8FD3
1654  8FD3              ; --------------------------------------------------------------------------------------------------------------
1655  8FD3              ;
1656  8FD3              ;	12/1/24
1657  8FD3              ;
1658  8FD3              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1659  8FD3
1660  8FD3              Actualiza_Puntero_de_almacen_de_mov_masticados
1661  8FD3
1662  8FD3 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1663  8FD6 01 04 00     	ld bc,4
1664  8FD9 A7           	and a
1665  8FDA ED 4A        	adc hl,bc
1666  8FDC 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
1667  8FDF C9           	ret
1668  8FE0
1669  8FE0              ; --------------------------------------------------------------------------------------------------------------
1670  8FE0              ;
1671  8FE0              ;	24/03/24
1672  8FE0              ;
1673  8FE0              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1674  8FE0              ;
1675  8FE0              ;	IX contiene el puntero de impresión.
1676  8FE0              ;	DE contiene (Puntero_objeto).
1677  8FE0
1678  8FE0
1679  8FE0              Cargamos_registros_con_mov_masticado
1680  8FE0
1681  8FE0 ED 73 84 8C  	ld (Stack),sp
1682  8FE4 ED 7B 3E 8C  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1683  8FE8
1684  8FE8 D1           	pop de 															; DE contiene Puntero_objeto
1685  8FE9 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1686  8FEB
1687  8FEB ED 73 3E 8C  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1688  8FEF ED 7B 84 8C  	ld sp,(Stack)
1689  8FF3
1690  8FF3 7B           	ld a,e
1691  8FF4 82           	add d															; Comprueba si ya no hay datos en el almacén.
1692  8FF5
1693  8FF5 CC 80 93     	call z,Reinicia_entidad_maliciosa
1694  8FF8
1695  8FF8 C9           	ret
1696  8FF9
1697  8FF9              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1698  8FF9              ;
1699  8FF9              ;	22/7/24
1700  8FF9
1701  8FF9              Cargamos_registros_con_explosion
1702  8FF9
1703  8FF9
1704  8FF9 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1705  8FFC CD 8A 90     	call Extrae_address
1706  8FFF
1707  8FFF 5D           	ld e,l
1708  9000 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1709  9001
1710  9001 DD 2A 3C 8C  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1711  9005
1712  9005 C9           	ret
1713  9006
1714  9006
1715  9006              Cargamos_registros_con_explosion_Amadeus
1716  9006
1717  9006 2A F3 89     	ld hl,(Pamm_Amadeus)
1718  9009 CD 8A 90     	call Extrae_address
1719  900C
1720  900C 5D           	ld e,l
1721  900D 54           	ld d,h
1722  900E
1723  900E DD 2A F1 89  	ld ix,(p.imp.amadeus)
1724  9012
1725  9012 C9           	ret
1726  9013
1727  9013              ; --------------------------------------------------------------------------------------------------------------
1728  9013              ;
1729  9013              ;	17/06/24
1730  9013              ;
1731  9013              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1732  9013              ;
1733  9013              ;	IX contiene el puntero de impresión.
1734  9013              ;	DE contiene (Puntero_objeto).
1735  9013
1736  9013
1737  9013              Cargamos_registros_con_mov_masticado_Amadeus
1738  9013
1739  9013 ED 73 84 8C  	ld (Stack),sp
1740  9017 ED 7B F3 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1741  901B D1           	pop de 															; DE contiene Puntero_objeto
1742  901C DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1743  901E DD 22 F1 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1744  9022 ED 7B 84 8C  	ld sp,(Stack)
1745  9026 C9           	ret
1746  9027
1747  9027              ; ---------------------------------------------------------------------------------------------------------------------
1748  9027              ;
1749  9027              ;	18/6/24
1750  9027              ;
1751  9027              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1752  9027
1753  9027              Genera_datos_de_impresion_Amadeus
1754  9027
1755  9027 3A F0 89     	ld a,(Impacto_Amadeus)
1756  902A A7           	and a
1757  902B 20 03        	jr nz,1F
1758  902D
1759  902D              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1760  902D              ; _apuntando a la correspondiente explosión.
1761  902D
1762  902D CD 13 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1763  9030
1764  9030 DD 7D        1 ld a,ixl
1765  9032 E6 1F        	and $1f
1766  9034 32 ED 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1767  9037
1768  9037 2A 97 8C     	ld hl,(Scanlines_album_SP)
1769  903A E5           	push hl
1770  903B
1771  903B 2A 8C 8C     	ld hl,(Album_de_pintado_Amadeus)
1772  903E 22 97 8C     	ld (Scanlines_album_SP),hl
1773  9041
1774  9041 CD D5 94     	call Genera_datos_de_impresion
1775  9044
1776  9044 E1           	pop hl
1777  9045 22 97 8C     	ld (Scanlines_album_SP),hl
1778  9048
1779  9048 C9           	ret
1780  9049
1781  9049              ; ---------------------------------------------------------------------------------------------------------------------
1782  9049              ;
1783  9049              ;	13/03/24
1784  9049              ;
1785  9049
1786  9049              Inicia_albumes_de_lineas
1787  9049
1788  9049              ;	Entidades.
1789  9049
1790  9049 21 00 80     	ld hl,Scanlines_album
1791  904C 22 88 8C     	ld (Album_de_pintado),hl
1792  904F 22 97 8C     	ld (Scanlines_album_SP),hl
1793  9052
1794  9052 21 1A 81     	ld hl,Scanlines_album_2
1795  9055 22 8A 8C     	ld (Album_de_borrado),hl
1796  9058
1797  9058 C9           	ret
1798  9059
1799  9059              Inicia_albumes_de_lineas_Amadeus
1800  9059
1801  9059 21 34 82     	ld hl,Amadeus_scanlines_album
1802  905C 22 8C 8C     	ld (Album_de_pintado_Amadeus),hl
1803  905F 21 58 82     	ld hl,Amadeus_scanlines_album_2
1804  9062 22 8E 8C     	ld (Album_de_borrado_Amadeus),hl
1805  9065
1806  9065 C9           	ret
1807  9066
1808  9066              ; ---------------------------------------------------------------------------------------------------------------------
1809  9066              ;
1810  9066              ; 8/1/23
1811  9066              ;
1812  9066              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1813  9066              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1814  9066              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1815  9066
1816  9066              ; Destruye HL y DE !!!!!
1817  9066
1818  9066              Inicia_punteros_de_cajas
1819  9066
1820  9066 21 DA 89     	ld hl,Indice_de_cajas_de_entidades
1821  9069 CD 8A 90         call Extrae_address
1822  906C 22 77 8C         ld (Puntero_store_caja),hl
1823  906F 21 DC 89     	ld hl,Indice_de_cajas_de_entidades+2
1824  9072 22 7B 8C     	ld (Indice_restore_caja),hl
1825  9075 CD 8A 90     	call Extrae_address
1826  9078 22 79 8C     	ld (Puntero_restore_caja),hl
1827  907B C9               ret
1828  907C
1829  907C              ; *************************************************************************************************************************************************************
1830  907C              ;
1831  907C              ; 8/1/23
1832  907C              ;
1833  907C              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1834  907C
1835  907C 21 94 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1836  907F 22 9F 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1837  9082 C9           	ret
1838  9083 21 86 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1839  9086 22 A1 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1840  9089 C9           	ret
1841  908A
1842  908A              ; *************************************************************************************************************************************************************
1843  908A              ;
1844  908A              ; 20/10/22
1845  908A              ;
1846  908A              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1847  908A              ;
1848  908A              ; Destruye el puntero y DE !!!!!
1849  908A
1850  908A 5E           Extrae_address ld e,(hl)
1851  908B 23           	inc hl
1852  908C 56           	ld d,(hl)
1853  908D 2B           	dec hl
1854  908E EB           	ex de,hl
1855  908F C9           	ret
1856  9090
1857  9090              ; *************************************************************************************************************************************************************
1858  9090              ;
1859  9090              ;	20/1/24
1860  9090              ;
1861  9090              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1862  9090              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1863  9090              ;
1864  9090              ;   Destruye HL y BC !!!!!,
1865  9090              ;
1866  9090              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1867  9090              ;					"0" ..... Izquierda.
1868  9090
1869  9090              Inicia_Puntero_objeto
1870  9090
1871  9090 3A 56 8C     	ld a,(Cuad_objeto)
1872  9093 E6 01        	and 1
1873  9095 F5           	push af
1874  9096 CC B2 90     	call z,Inicia_puntero_objeto_izq
1875  9099 F1           	pop af
1876  909A C8           	ret z
1877  909B CD 9F 90     	call Inicia_puntero_objeto_der
1878  909E C9           	ret
1879  909F
1880  909F              ; Arrancamos desde la parte izquierda de la pantalla.
1881  909F              ; Iniciamos (Indice_Sprite_der).
1882  909F
1883  909F 2A 4C 8C     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1884  90A2 22 50 8C     	ld (Puntero_DESPLZ_der),hl
1885  90A5 CD 8A 90     	call Extrae_address
1886  90A8 22 49 8C     	ld (Puntero_objeto),hl
1887  90AB
1888  90AB 2A 4E 8C     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1889  90AE 22 52 8C     	ld (Puntero_DESPLZ_izq),hl
1890  90B1 C9           	ret
1891  90B2
1892  90B2              ; Arrancamos desde la parte derecha de la pantalla.
1893  90B2              ; Iniciamos (Indice_Sprite_izq).
1894  90B2
1895  90B2 2A 4E 8C     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1896  90B5 22 52 8C     	ld (Puntero_DESPLZ_izq),hl
1897  90B8 CD 8A 90     	call Extrae_address
1898  90BB 22 49 8C     	ld (Puntero_objeto),hl
1899  90BE
1900  90BE 2A 4C 8C     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1901  90C1 22 50 8C     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1902  90C4 C9           	ret
1903  90C5
1904  90C5              ; **************************************************************************************************
1905  90C5              ;
1906  90C5              ;	06/07/24
1907  90C5              ;
1908  90C5              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1909  90C5
1910  90C5              Restore_entidad
1911  90C5
1912  90C5 2A 77 8C     	ld hl,(Puntero_store_caja)
1913  90C8 7E           	ld a,(hl)
1914  90C9 A7           	and a
1915  90CA CC D8 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1916  90CD 28 F6        	jr z,Restore_entidad
1917  90CF
1918  90CF 11 37 8C     	ld de,Bandeja_DRAW
1919  90D2 01 0C 00     	ld bc,12
1920  90D5 ED B0        	ldir
1921  90D7 C9           	ret
1922  90D8
1923  90D8              ; **************************************************************************************************
1924  90D8              ;
1925  90D8              ;	08/05/23
1926  90D8              ;
1927  90D8              ;	Incrementamos los dos punteros de entidades. (+1).
1928  90D8
1929  90D8              Incrementa_punteros_de_cajas
1930  90D8
1931  90D8 2A 79 8C     	ld hl,(Puntero_restore_caja)
1932  90DB 22 77 8C     	ld (Puntero_store_caja),hl
1933  90DE 2A 7B 8C     	ld hl,(Indice_restore_caja)
1934  90E1 23           	inc hl
1935  90E2 23           	inc hl
1936  90E3 22 7B 8C     	ld (Indice_restore_caja),hl
1937  90E6 CD 8A 90         call Extrae_address
1938  90E9 22 79 8C         ld (Puntero_restore_caja),hl
1939  90EC C9               ret
1940  90ED
1941  90ED              ; -----------------------------------------------------------
1942  90ED
1943  90ED              ; Teclado.
1944  90ED
1945  90ED 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1946  90EF DB FE        	in a,($fe)
1947  90F1 E6 01        	and $01
1948  90F3 28 02        	jr z,1f
1949  90F5 18 F6        	jr Pulsa_ENTER
1950  90F7 C9           1 ret
1951  90F8
1952  90F8              ; **************************************************************************************************
1953  90F8              ;
1954  90F8              ; Temporización.
1955  90F8
1956  90F8              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1957  90F8              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1958  90F8              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1959  90F8              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1960  90F8
1961  90F8              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1962  90F8              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1963  90F8              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1964  90F8
1965  90F8              ; A partir de $4f61 no hace falta DELAY.
1966  90F8
1967  90F8              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1968  90F8
1969  90F8              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1970  90F8              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1971  90F8              ;	LD A,B
1972  90F8              ;	AND A
1973  90F8              ;	JR NZ,wait
1974  90F8              ;	RET
1975  90F8
1976  90F8              ; ---------------------------------------------------------------------------------------------------------------
1977  90F8              ;
1978  90F8              ;	13/07/24
1979  90F8              ;
1980  90F8
1981  90F8              Inicia_Shield
1982  90F8
1983  90F8 21 BC 8C     	ld hl,Datos_Shield
1984  90FB 22 C0 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1985  90FE
1986  90FE 7E           	ld a,(hl)
1987  90FF 32 C3 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1988  9102
1989  9102 3E 01        	ld a,1
1990  9104 32 C4 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1991  9107
1992  9107 C9           	ret
1993  9108
1994  9108              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1995  9108              ;
1996  9108              ;	4/6/24
1997  9108              ;
1998  9108              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1999  9108              ;
2000  9108              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2001  9108              ;
2002  9108
2003  9108              Actualiza_pantalla
2004  9108
2005  9108 3E 02        	ld a,2
2006  910A D3 FE        	out ($fe),a
2007  910C
2008  910C 3A 9D 8C     	ld a,(Ctrl_3)
2009  910F              ;	bit 0,a
2010  910F              ;	jr z,Ejecuta_escudo									 		  	; No pintamos si el FRAME no se ha completado.
2011  910F CB 57        	bit 2,a
2012  9111 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2013  9113
2014  9113              Borrando_entidades
2015  9113
2016  9113 2A 97 8C     	ld hl,(Scanlines_album_SP)
2017  9116 CD 8A 90     	call Extrae_address
2018  9119 24           	inc h
2019  911A 25           	dec h
2020  911B 28 05        	jr z,Pintando_entidades
2021  911D CD CA 95     	call Pinta_Sprites
2022  9120 18 F1        	jr Borrando_entidades
2023  9122
2024  9122              Pintando_entidades
2025  9122
2026  9122 2A 99 8C     	ld hl,(India_SP)
2027  9125 2C           	inc l
2028  9126 CD 8A 90     	call Extrae_address
2029  9129 24           	inc h
2030  912A 25           	dec h
2031  912B 28 0E        	jr z,Ejecuta_escudo
2032  912D 1C           	inc e
2033  912E 1C           	inc e
2034  912F ED 53 99 8C  	ld (India_SP),de
2035  9133 CD 8A 90     	call Extrae_address
2036  9136 CD CA 95     	call Pinta_Sprites
2037  9139 18 E7        	jr Pintando_entidades
2038  913B
2039  913B              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2040  913B
2041  913B              Ejecuta_escudo
2042  913B
2043  913B 3A C2 8C     	ld a,(Shield)
2044  913E A7           	and a
2045  913F 20 2F        	jr nz,Aplica_Shield
2046  9141
2047  9141              Borrando_Amadeus
2048  9141
2049  9141 21 9D 8C     	ld hl,Ctrl_3
2050  9144 CB 6E        	bit 5,(hl)
2051  9146 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2052  9148
2053  9148 2A 8E 8C     	ld hl,(Album_de_borrado_Amadeus)
2054  914B CD 8A 90     	call Extrae_address
2055  914E 24           	inc h
2056  914F 25           	dec h
2057  9150 28 03        	jr z,Pintando_Amadeus
2058  9152 CD CA 95     	call Pinta_Sprites
2059  9155
2060  9155              Pintando_Amadeus
2061  9155
2062  9155 2A 8C 8C     	ld hl,(Album_de_pintado_Amadeus)
2063  9158 CD 8A 90     	call Extrae_address
2064  915B 24           	inc h
2065  915C 25           	dec h
2066  915D 28 03        	jr z,1F
2067  915F CD CA 95     	call Pinta_Sprites
2068  9162
2069  9162              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2070  9162
2071  9162 21 9D 8C     1 ld hl,Ctrl_3
2072  9165 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2073  9167 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2074  9169 CB AE        	res 5,(hl)
2075  916B
2076  916B 3E 01        	ld a,1												; Borde azul.
2077  916D D3 FE        	out ($fe),a
2078  916F
2079  916F C9           	ret
2080  9170
2081  9170
2082  9170
2083  9170              Aplica_Shield
2084  9170
2085  9170              ;	Bit 1 "1" (Shield_3) Sólo borra.
2086  9170              ;		  "0"     ""     Borra/Pinta.
2087  9170              ;	Bit 2    ""  RET.	 No borra, no pinta.
2088  9170
2089  9170 21 C4 8C     	ld hl,Shield_3
2090  9173
2091  9173 CB 5E        	bit 3,(hl)
2092  9175 20 DE        	jr nz,Pintando_Amadeus
2093  9177
2094  9177 CB 56        	bit 2,(hl)
2095  9179 20 E7        	jr nz,1B
2096  917B
2097  917B CB 4E        	bit 1,(hl)
2098  917D C4 84 91     	call nz,Borra_Amadeus_shield
2099  9180
2100  9180 28 BF        	jr z,Borrando_Amadeus
2101  9182 18 DE        	jr 1B
2102  9184
2103  9184              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2104  9184
2105  9184              Borra_Amadeus_shield
2106  9184
2107  9184 3A 9D 8C     	ld a,(Ctrl_3)
2108  9187 CB 6F        	bit 5,a
2109  9189 28 08        	jr z,1F
2110  918B
2111  918B 2A 8E 8C     	ld hl,(Album_de_borrado_Amadeus)
2112  918E CD 8A 90     	call Extrae_address
2113  9191 18 06        	jr 2F
2114  9193
2115  9193 2A 8C 8C     1 ld hl,(Album_de_pintado_Amadeus)
2116  9196 CD 8A 90     	call Extrae_address
2117  9199
2118  9199 CD CA 95     2 call Pinta_Sprites
2119  919C
2120  919C AF           	xor a
2121  919D 3C           	inc a											; Asegura NZ en la salida de la rutina.
2122  919E
2123  919E C9           	ret
2124  919F
2125  919F              Pinta_Amadeus_shield
2126  919F
2127  919F 2A 8C 8C     	ld hl,(Album_de_pintado_Amadeus)
2128  91A2 CD 8A 90     	call Extrae_address
2129  91A5 CD CA 95     	call Pinta_Sprites
2130  91A8
2131  91A8 AF           	xor a
2132  91A9 3C           	inc a											; Asegura NZ en la salida de la rutina.
2133  91AA
2134  91AA C9           	ret
2135  91AB
2136  91AB              Borra_Pinta_Amadeus_shield
2137  91AB
2138  91AB CD 84 91     	call Borra_Amadeus_shield
2139  91AE CD 9F 91     	call Pinta_Amadeus_shield
2140  91B1 C9           	ret
2141  91B2
2142  91B2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2143  91B2              ;
2144  91B2              ;	19/6/24
2145  91B2              ;
2146  91B2
2147  91B2              Teclado
2148  91B2
2149  91B2              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2150  91B2
2151  91B2 3E F7        	ld a,$f7												; "5" para disparar.
2152  91B4 DB FE        	in a,($fe)
2153  91B6 E6 10        	and $10
2154  91B8
2155  91B8 CC E4 9E     	call z,Genera_disparo_Amadeus
2156  91BB
2157  91BB 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2158  91BD DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2159  91BF E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2160  91C1 CC 37 9D         call z,Amadeus_a_izquierda
2161  91C4
2162  91C4 3E F7        	ld a,$f7
2163  91C6 DB FE        	in a,($fe)
2164  91C8 E6 01        	and $01
2165  91CA C8           	ret z
2166  91CB
2167  91CB 3E F7        	ld a,$f7
2168  91CD DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2169  91CF E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2170  91D1 CC 4F 9D     	call z,Amadeus_a_derecha
2171  91D4
2172  91D4 C9           	ret
2173  91D5
2174  91D5              ; ------------------------------------------------------------------------------------------------------------------------
2175  91D5              ;
2176  91D5              ;	06/07/24
2177  91D5              ;
2178  91D5
2179  91D5              Genera_explosion
2180  91D5
2181  91D5 21 AE 8C     	ld hl,Clock_explosion
2182  91D8 35           	dec (hl)
2183  91D9 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2184  91DB
2185  91DB              Borra_entidad_colisionada
2186  91DB
2187  91DB CD F4 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2188  91DE CD F9 8F     	call Cargamos_registros_con_explosion
2189  91E1 CD D5 94     	call Genera_datos_de_impresion
2190  91E4
2191  91E4 AF           	xor a
2192  91E5 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2193  91E6
2194  91E6 C9           	ret
2195  91E7
2196  91E7              Siguiente_frame_explosion
2197  91E7
2198  91E7 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2199  91E9
2200  91E9              ; Avanza Frame de explosión.
2201  91E9
2202  91E9 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2203  91EC 01 34 88     	ld bc,Indice_Explosion_entidades+4
2204  91EF
2205  91EF 79           	ld a,c
2206  91F0 95           	sub l
2207  91F1 20 0B        	jr nz,1F
2208  91F3
2209  91F3              ; Fín de la entidad !!!!!!!!!!!!!
2210  91F3
2211  91F3 21 7E 8C     	ld hl,Numero_parcial_de_entidades
2212  91F6 35           	dec (hl)
2213  91F7 23           	inc hl
2214  91F8 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2215  91F9
2216  91F9 CD 55 93     	call Limpiamos_bandeja_DRAW
2217  91FC 18 DD        	jr Borra_entidad_colisionada
2218  91FE
2219  91FE 23           1 inc hl
2220  91FF 23           	inc hl
2221  9200 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
2222  9203 18 D6        	jr Borra_entidad_colisionada
2223  9205
2224  9205              ; ----- ----- ----- ----- -----
2225  9205
2226  9205              Genera_explosion_Amadeus
2227  9205
2228  9205 21 AF 8C     	ld hl,Clock_explosion_Amadeus
2229  9208 35           	dec (hl)
2230  9209 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2231  920B
2232  920B              Borra_Amadeus_impactado
2233  920B
2234  920B CD 84 8E     	call Change_Amadeus
2235  920E CD 06 90     	call Cargamos_registros_con_explosion_Amadeus
2236  9211 CD 27 90     	call Genera_datos_de_impresion_Amadeus
2237  9214
2238  9214 21 9D 8C     	ld hl,Ctrl_3
2239  9217 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2240  9219
2241  9219 AF           	xor a
2242  921A 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2243  921B
2244  921B C9           	ret
2245  921C
2246  921C              Siguiente_frame_explosion_Amadeus
2247  921C
2248  921C 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2249  921E
2250  921E              ; Avanza Frame de explosión.
2251  921E
2252  921E 2A F3 89     	ld hl,(Pamm_Amadeus)
2253  9221 01 CA 88     	ld bc,Indice_Explosion_Amadeus+4
2254  9224
2255  9224 79           	ld a,c
2256  9225 95           	sub l
2257  9226 20 0B        	jr nz,1F
2258  9228
2259  9228              ; Fín de Amadeus !!!!!!!!!!!!!
2260  9228              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2261  9228
2262  9228 AF           	xor a
2263  9229 32 F0 89     	ld (Impacto_Amadeus),a
2264  922C 21 9D 8C     	ld hl,Ctrl_3
2265  922F CB F6        	set 6,(hl)
2266  9231
2267  9231 18 D8        	jr Borra_Amadeus_impactado
2268  9233
2269  9233 23           1 inc hl
2270  9234 23           	inc hl
2271  9235 22 F3 89     	ld (Pamm_Amadeus),hl
2272  9238 18 D1        	jr Borra_Amadeus_impactado
2273  923A
2274  923A              ; ---------------------------------------------------------------
2275  923A
2276  923A              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 923A              ; ******************************************************************************************************************************************************************************************
   2+ 923A              ;
   3+ 923A              ;   21/04/24
   4+ 923A              ;
   5+ 923A              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 923A              ;   (XOR) bit a bit.
   7+ 923A              ;
   8+ 923A              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 923A
  10+ 923A              Derivando_RND
  11+ 923A
  12+ 923A 21 60 89         ld hl,Numeros_aleatorios
  13+ 923D
  14+ 923D ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 923F C5               push bc
  16+ 9240              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9240 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9243              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9243
  20+ 9243 A7           6 and a                                 ; Carry a "0".
  21+ 9244 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9246 30 02            jr nc,1F
  23+ 9248
  24+ 9248 CB C1            set 0,c
  25+ 924A
  26+ 924A 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 924B E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 924D 5F               ld e,a
  29+ 924E
  30+ 924E 7A               ld a,d
  31+ 924F E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9251 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9253
  34+ 9253 CB 3F            srl a
  35+ 9255
  36+ 9255 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9256
  38+ 9256 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9257 28 04            jr z,4F
  40+ 9259
  41+ 9259 CB FF            set 7,a
  42+ 925B 18 02            jr 5F
  43+ 925D
  44+ 925D CB BF        4 res 7,a
  45+ 925F
  46+ 925F CB 21        5 sla c
  47+ 9261 10 E0            djnz 6B
  48+ 9263
  49+ 9263 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9264
  51+ 9264 77               ld (hl),a
  52+ 9265 23               inc hl
  53+ 9266 C1               pop bc
  54+ 9267 10 D4            djnz 3B
  55+ 9269
  56+ 9269 C9               ret
  57+ 926A
  58+ 926A
  59+ 926A
# file closed: RND_Derivando.asm
2277  926A              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 926A              ;---------------------------------------------------------------------------------------------------------------
   2+ 926A              ;
   3+ 926A              ;   8/3/24
   4+ 926A              ;
   5+ 926A              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 926A              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 926A              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 926A              ;	_ de la 1ª entidad del Nivel.
   9+ 926A              ;
  10+ 926A              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 926A
  12+ 926A              ;	MODIFICA: HL,DE y A.
  13+ 926A              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 926A
  15+ 926A              Inicializa_Nivel
  16+ 926A
  17+ 926A 2A B8 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 926D CD 8A 90     	call Extrae_address
  19+ 9270 7E           	ld a,(hl)
  20+ 9271 32 7D 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9274 23           	inc hl
  22+ 9275 CD 82 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9278 22 BA 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 927B CD 8B 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 927E
  26+ 927E CD 9C 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 9281 C9           	ret
  28+ 9282
  29+ 9282              ; ----------------------
  30+ 9282
  31+ 9282 11 5C 8C     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9285 01 04 00     	ld bc,4
  33+ 9288 ED B0        	ldir
  34+ 928A C9           	ret
  35+ 928B
  36+ 928B 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 928C CD 26 94         call Calcula_salto_en_BC
  38+ 928F 21 82 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 9292 A7               and a
  40+ 9293 ED 4A            adc hl,bc
  41+ 9295 CD 8A 90         call Extrae_address
  42+ 9298 22 68 8C         ld (Puntero_indice_mov),hl
  43+ 929B C9               ret
  44+ 929C
  45+ 929C 3A 37 8C     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 929F CD 26 94     	call Calcula_salto_en_BC
  47+ 92A2 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92A5 A7               and a
  49+ 92A6 ED 4A            adc hl,bc
  50+ 92A8 CD 8A 90         call Extrae_address
  51+ 92AB 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92AE C9           	ret
  53+ 92AF
  54+ 92AF              ;---------------------------------------------------------------------------------------------------------------
  55+ 92AF              ;
  56+ 92AF              ;   5/1/24
  57+ 92AF              ;
  58+ 92AF              ;	Destruye A,BC,HL,DE
  59+ 92AF
  60+ 92AF              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92AF              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92AF
  63+ 92AF              Inicia_Entidades
  64+ 92AF
  65+ 92AF              ; Preparamos los punteros de las cajas de entidades:
  66+ 92AF
  67+ 92AF CD 66 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92B2              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92B2 CD 6E 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92B5
  71+ 92B5 2A BA 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92B8
  73+ 92B8 22 BA 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92BB
  75+ 92BB CD D4 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92BE
  77+ 92BE 2A BA 8C     	ld hl,(Datos_de_nivel)
  78+ 92C1
  79+ 92C1              ; En este punto:
  80+ 92C1              ;
  81+ 92C1              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92C1              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92C1
  84+ 92C1 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92C2
  86+ 92C2 7E           	ld a,(hl)
  87+ 92C3 CD 40 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92C6
  89+ 92C6 CD 38 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92C9
  91+ 92C9              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92C9
  93+ 92C9 CD F6 93     	call Busca_mov_masticados_segun_tipo
  94+ 92CC
  95+ 92CC A7           	and a
  96+ 92CD 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92CF
  98+ 92CF              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92CF
 100+ 92CF              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92CF              ;	_ de este tipo de entidad.
 102+ 92CF
 103+ 92CF CD CE 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92D2 CD DB 9E     	call Transfiere_datos_de_contadores
 105+ 92D5
 106+ 92D5 18 06        	jr 4F
 107+ 92D7
 108+ 92D7 CD 8C 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92DA
 110+ 92DA              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92DA              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92DA              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92DA              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92DA              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92DA
 116+ 92DA CD B4 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92DD              ;																; _ Mov_masticados ya generados.
 118+ 92DD
 119+ 92DD CD E0 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92E0
 121+ 92E0 DD E5        	push ix
 122+ 92E2 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92E3
 124+ 92E3 D5           	push de
 125+ 92E4 CD A9 94     	call Genera_coordenadas
 126+ 92E7
 127+ 92E7 ED 5B 97 8C  	ld de,(Scanlines_album_SP)
 128+ 92EB CD F4 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92EE D1           	pop de
 130+ 92EF
 131+ 92EF CD D5 94     	call Genera_datos_de_impresion
 132+ 92F2              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92F2              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92F2              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92F2              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92F2
 137+ 92F2 CD 78 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92F5
 139+ 92F5              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92F5
 141+ 92F5 ED 5B 77 8C  	ld de,(Puntero_store_caja)
 142+ 92F9 CD 65 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92FC
 144+ 92FC CD 55 93     	call Limpiamos_bandeja_DRAW
 145+ 92FF CD D8 90     	call Incrementa_punteros_de_cajas
 146+ 9302
 147+ 9302              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9302              ; _ entidad del Nivel.
 149+ 9302
 150+ 9302 3A 9E 8C     	ld a,(Ctrl_4)
 151+ 9305 E6 F0        	and $f0
 152+ 9307 32 9E 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 930A
 154+ 930A              ; Siguiente entidad del Nivel.
 155+ 930A
 156+ 930A 2A BA 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 930D 23           	inc hl 														; _ entidad del Nivel.
 158+ 930E
 159+ 930E C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 930F
 161+ 930F 10 A7        	djnz 2B
 162+ 9311
 163+ 9311 C9           	ret
 164+ 9312
 165+ 9312              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9312              ;
 167+ 9312              ;	27/5/24
 168+ 9312              ;
 169+ 9312              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9312              ;
 171+ 9312
 172+ 9312              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9312              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9312
 175+ 9312 21 6A 8A     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9315 CD 38 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9318
 178+ 9318
 179+ 9318              Construye_movimientos_masticados_Amadeus
 180+ 9318
 181+ 9318 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 931B CD D3 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 931E              ;															; _ el (Contador_de_mov_masticados).
 184+ 931E CD 90 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9321              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9321
 187+ 9321              ; Generamos movimientos masticados de Amadeus.
 188+ 9321
 189+ 9321 06 79        	ld b,121												; $0079, 121d.
 190+ 9323
 191+ 9323 C5           1 push bc
 192+ 9324 CD ED 96     	call Draw
 193+ 9327 CD B8 8F     	call Guarda_movimiento_masticado
 194+ 932A
 195+ 932A CD 61 9A     	call Mov_right
 196+ 932D CD 61 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9330
 198+ 9330 C1           	pop bc
 199+ 9331 10 F0        	djnz 1B
 200+ 9333
 201+ 9333              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9333
 203+ 9333              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9333              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9333
 206+ 9333 2A 3E 8C     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9336 01 08 00     	ld bc,8
 208+ 9339 A7           	and a
 209+ 933A ED 42        	sbc hl,bc
 210+ 933C 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 933F
 212+ 933F C9           	ret
 213+ 9340
 214+ 9340              ; ---------------------------------------------------------------------
 215+ 9340              ;
 216+ 9340              ;	10/02/24
 217+ 9340              ;
 218+ 9340              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9340              ;
 220+ 9340              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9340
 222+ 9340              Definicion_segun_tipo
 223+ 9340
 224+ 9340 CD 26 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9343 21 4C 8A     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9346 CD 2E 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9349 C9           	ret
 228+ 934A
 229+ 934A              ; ---------------------------------------------------------------------
 230+ 934A              ;
 231+ 934A              ;	6/7/24
 232+ 934A
 233+ 934A
 234+ 934A              Store_Restore_cajas
 235+ 934A
 236+ 934A ED 5B 77 8C  	ld de,(Puntero_store_caja)
 237+ 934E CD 65 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9351 CD D8 90     	call Incrementa_punteros_de_cajas
 239+ 9354 C9           	ret
 240+ 9355
 241+ 9355              ; ---------------------------------------------------------------------
 242+ 9355              ;
 243+ 9355              ;	23/6/24
 244+ 9355              ;
 245+ 9355              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9355              ;
 247+ 9355              ;	MODIFY: HL
 248+ 9355
 249+ 9355              Limpiamos_bandeja_DRAW
 250+ 9355
 251+ 9355 ED 73 84 8C  	ld (Stack),sp
 252+ 9359 31 5C 8C     	ld sp,Vel_left
 253+ 935C
 254+ 935C AF           	xor a
 255+ 935D 67           	ld h,a
 256+ 935E 6F           	ld l,a
 257+ 935F
 258+ 935F E5           	push hl
 259+ 9360 E5           	push hl
 260+ 9361 E5           	push hl
 261+ 9362 E5           	push hl
 262+ 9363 E5           	push hl
 263+ 9364 E5           	push hl
 264+ 9365 E5           	push hl
 265+ 9366 E5           	push hl
 266+ 9367 E5           	push hl
 267+ 9368 E5           	push hl
 268+ 9369 E5           	push hl
 269+ 936A E5           	push hl
 270+ 936B E5           	push hl
 271+ 936C E5           	push hl
 272+ 936D E5           	push hl
 273+ 936E E5           	push hl
 274+ 936F E5           	push hl
 275+ 9370 E5           	push hl
 276+ 9371
 277+ 9371 33           	inc sp
 278+ 9372
 279+ 9372 E5           	push hl
 280+ 9373 ED 7B 84 8C  	ld sp,(Stack)
 281+ 9377
 282+ 9377 C9           	ret
 283+ 9378
 284+ 9378              ; ---------------------------------------------------------------------
 285+ 9378              ;
 286+ 9378              ;	24/03/24
 287+ 9378
 288+ 9378 2A 40 8C     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 937B 2B           	dec hl
 290+ 937C 22 40 8C     	ld (Contador_de_mov_masticados),hl
 291+ 937F C9           	ret
 292+ 9380
 293+ 9380              ; ---------------------------------------------------------------------
 294+ 9380              ;
 295+ 9380              ;	8/5/24
 296+ 9380
 297+ 9380              Reinicia_entidad_maliciosa
 298+ 9380
 299+ 9380              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 9380
 301+ 9380 CD CE 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 9383 CD DB 9E     	call Transfiere_datos_de_contadores
 303+ 9386
 304+ 9386              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9386
 306+ 9386 3A 37 8C     	ld a,(Tipo)
 307+ 9389 CD 40 93     	call Definicion_segun_tipo
 308+ 938C
 309+ 938C E5           	push hl
 310+ 938D DD E1        	pop ix
 311+ 938F
 312+ 938F DD 6E 0B     	ld l,(ix+11)
 313+ 9392 DD 66 0C     	ld h,(ix+12)
 314+ 9395
 315+ 9395 22 3E 8C     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9398
 317+ 9398 CD E0 8F     	call Cargamos_registros_con_mov_masticado
 318+ 939B
 319+ 939B              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 939B              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 939B              ; Ejemplos.
 322+ 939B
 323+ 939B              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 939B              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 939B              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 939B              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 939B              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 939B
 329+ 939B 21 3A 8C     	ld hl,Contador_de_vueltas
 330+ 939E CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93A0
 332+ 93A0 7E           	ld a,(hl)
 333+ 93A1 CB 2F        	sra a
 334+ 93A3 CB 2F        	sra a
 335+ 93A5
 336+ 93A5 32 42 8C     	ld (Velocidad),a
 337+ 93A8
 338+ 93A8 3E 40        	ld a,$40
 339+ 93AA BE           	cp (hl)
 340+ 93AB C0           	ret nz
 341+ 93AC
 342+ 93AC              ; Límitador.
 343+ 93AC
 344+ 93AC              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93AC
 346+ 93AC CB 2E        	sra (hl)
 347+ 93AE 21 42 8C     	ld hl,Velocidad
 348+ 93B1 CB 2E        	sra (hl)
 349+ 93B3
 350+ 93B3 C9           	ret
 351+ 93B4
 352+ 93B4              ; ---------------------------------------------------------------------
 353+ 93B4              ;
 354+ 93B4              ;	22/01/24
 355+ 93B4
 356+ 93B4 21 9E 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93B7 CB 46        	bit 0,(hl)
 358+ 93B9 20 0D        	jr nz,1F
 359+ 93BB CB 4E        	bit 1,(hl)
 360+ 93BD 20 0C        	jr nz,2F
 361+ 93BF CB 56        	bit 2,(hl)
 362+ 93C1 20 0B        	jr nz,3F
 363+ 93C3 CB 5E        	bit 3,(hl)
 364+ 93C5 20 0A        	jr nz,4F
 365+ 93C7 C9           	ret
 366+ 93C8
 367+ 93C8 CB E6        1 set 4,(hl)
 368+ 93CA C9           	ret
 369+ 93CB CB EE        2 set 5,(hl)
 370+ 93CD C9           	ret
 371+ 93CE CB F6        3 set 6,(hl)
 372+ 93D0 C9           	ret
 373+ 93D1 CB FE        4 set 7,(hl)
 374+ 93D3 C9           	ret
 375+ 93D4
 376+ 93D4              ; ---------------------------------------------------------------------
 377+ 93D4              ;
 378+ 93D4              ;	23/01/24
 379+ 93D4              ;
 380+ 93D4              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93D4              ;
 382+ 93D4              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93D4              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93D4              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93D4              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93D4
 387+ 93D4              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93D4
 389+ 93D4 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93D5 3D           	dec a
 391+ 93D6 20 06        	jr nz,1F
 392+ 93D8
 393+ 93D8              ; --- Tipo_1
 394+ 93D8
 395+ 93D8 21 9E 8C     	ld hl,Ctrl_4
 396+ 93DB CB C6        	set 0,(hl)
 397+ 93DD C9           	ret
 398+ 93DE
 399+ 93DE 3D           1 dec a
 400+ 93DF 20 06        	jr nz,2F
 401+ 93E1
 402+ 93E1              ; --- Tipo_2
 403+ 93E1
 404+ 93E1 21 9E 8C     	ld hl,Ctrl_4
 405+ 93E4 CB CE        	set 1,(hl)
 406+ 93E6 C9           	ret
 407+ 93E7
 408+ 93E7 3D           2 dec a
 409+ 93E8 20 06        	jr nz,3F
 410+ 93EA
 411+ 93EA              ; --- Tipo_3
 412+ 93EA
 413+ 93EA 21 9E 8C     	ld hl,Ctrl_4
 414+ 93ED CB D6        	set 2,(hl)
 415+ 93EF C9           	ret
 416+ 93F0
 417+ 93F0              ; --- Tipo_3
 418+ 93F0
 419+ 93F0 21 9E 8C     3 ld hl,Ctrl_4
 420+ 93F3 CB D6        	set 2,(hl)
 421+ 93F5 C9           	ret
 422+ 93F6
 423+ 93F6              ; ---------------------------------------------------------------------
 424+ 93F6              ;
 425+ 93F6              ;	22/01/24
 426+ 93F6
 427+ 93F6 21 9E 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93F9 CB 46        	bit 0,(hl)
 429+ 93FB 20 0E        	jr nz,1F
 430+ 93FD
 431+ 93FD CB 4E        	bit 1,(hl)
 432+ 93FF 20 10        	jr nz,2F
 433+ 9401
 434+ 9401 CB 56        	bit 2,(hl)
 435+ 9403 20 12        	jr nz,3F
 436+ 9405
 437+ 9405 CB 5E        	bit 3,(hl)
 438+ 9407 20 14        	jr nz,4F
 439+ 9409 18 19        	jr 6F
 440+ 940B
 441+ 940B              ; Entidad_de_Tipo_1.
 442+ 940B
 443+ 940B CB 66        1 bit 4,(hl)
 444+ 940D 28 15        	jr z,6F
 445+ 940F 18 10        	jr 5F
 446+ 9411
 447+ 9411              ; Entidad_de_Tipo_2.
 448+ 9411
 449+ 9411 CB 6E        2 bit 5,(hl)
 450+ 9413 28 0F        	jr z,6F
 451+ 9415 18 0A        	jr 5F
 452+ 9417
 453+ 9417              ; Entidad_de_Tipo_3.
 454+ 9417
 455+ 9417 CB 76        3 bit 6,(hl)
 456+ 9419 28 09        	jr z,6F
 457+ 941B 18 04        	jr 5F
 458+ 941D
 459+ 941D              ; Entidad_de_Tipo_4.
 460+ 941D
 461+ 941D CB 7E        4 bit 7,(hl)
 462+ 941F 28 03        	jr z,6F
 463+ 9421
 464+ 9421              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9421
 466+ 9421 AF           5 xor a
 467+ 9422 3C           	inc a
 468+ 9423 C9           	ret
 469+ 9424
 470+ 9424              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9424
 472+ 9424 AF           6 xor a
 473+ 9425 C9           	ret
 474+ 9426
 475+ 9426              ;	------------------------------------------------------------------------------------
 476+ 9426              ;
 477+ 9426              ;	12/01/24
 478+ 9426              ;
 479+ 9426              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9426              ;
 481+ 9426              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9426              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9426
 484+ 9426 CB 27        Calcula_salto_en_BC sla a
 485+ 9428 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 942A 4F           	ld c,a
 487+ 942B 06 00        	ld b,0
 488+ 942D C9           	ret
 489+ 942E
 490+ 942E              ; ------------------------------------------------------------------
 491+ 942E              ;
 492+ 942E              ;	19/1/24
 493+ 942E              ;
 494+ 942E              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 942E              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 942E
 497+ 942E A7           Situa_en_datos_de_definicion and a
 498+ 942F ED 4A        	adc hl,bc
 499+ 9431 CD 8A 90     	call Extrae_address
 500+ 9434 22 82 8C         ld (Datos_de_entidad),hl
 501+ 9437 C9           	ret
 502+ 9438
 503+ 9438              ; ------------------------------------------------------------------
 504+ 9438
 505+ 9438              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9438              ; 	inc de
 507+ 9438              ; 	inc de
 508+ 9438              ; 	ex de,hl
 509+ 9438              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9438              ; 	ret
 511+ 9438
 512+ 9438              ; ----------------------------------------------------------------------------------------------------------
 513+ 9438              ;
 514+ 9438              ;	24/6/24
 515+ 9438              ;
 516+ 9438              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9438              ;	_ de entidad.
 518+ 9438              ;
 519+ 9438              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9438              ;
 521+ 9438              ;
 522+ 9438              ;	MODIFICA: HL,DE y BC
 523+ 9438
 524+ 9438
 525+ 9438              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9438
 527+ 9438 11 37 8C     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 943B 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 943C 12           	ld (de),a
 530+ 943D 23           	inc hl
 531+ 943E              ;
 532+ 943E 11 45 8C     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9441 01 02 00     	ld bc,2
 534+ 9444 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9446              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9446 11 3A 8C     	ld de,Contador_de_vueltas
 537+ 9449 7E           	ld a,(hl)
 538+ 944A 12           	ld (de),a
 539+ 944B 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 944C
 541+ 944C 11 4C 8C     	ld de,Indice_Sprite_der
 542+ 944F 01 04 00     	ld bc,4
 543+ 9452 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9454
 545+ 9454 11 54 8C     	ld de,Posicion_inicio
 546+ 9457 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 945A ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 945C
 549+ 945C 11 3E 8C     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 945F 01 02 00     	ld bc,2
 551+ 9462 ED B0        	ldir
 552+ 9464
 553+ 9464 C9           	ret
 554+ 9465
 555+ 9465              ; ----------------------------------------------------------------------------------------------------------
 556+ 9465              ;
 557+ 9465              ;	1/8/24
 558+ 9465              ;
 559+ 9465
 560+ 9465              Parametros_de_bandeja_DRAW_a_caja
 561+ 9465
 562+ 9465 21 37 8C     	ld hl,Bandeja_DRAW
 563+ 9468 01 0C 00     	ld bc,12
 564+ 946B ED B0        	ldir
 565+ 946D C9           	ret
 566+ 946E
 567+ 946E              ;---------------------------------------------------------------------------------------------------------------
 568+ 946E              ;
 569+ 946E              ;	5/1/24
 570+ 946E              ;
 571+ 946E              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 946E              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 946E              ;
 574+ 946E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 946E              ;
 576+ 946E              ;	(Numero_parcial_de_entidades)="7".
 577+ 946E              ;
 578+ 946E              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 946E              ;
 580+ 946E              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 946E              ;
 582+ 946E              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 946E              ;	MODIFICA: A y B.
 584+ 946E              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 946E
 586+ 946E              Inicializa_Numero_parcial_de_entidades
 587+ 946E
 588+ 946E              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 946E
 590+ 946E 3A 7D 8C     	ld a,(Numero_de_entidades)
 591+ 9471 A7           	and a
 592+ 9472
 593+ 9472              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9472              ;	jr z,$
 595+ 9472              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9472
 597+ 9472 20 03        	jr nz,3F
 598+ 9474
 599+ 9474              ; ---------- ---------- ----------
 600+ 9474
 601+ 9474              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9474              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9474
 604+ 9474 CD 6A 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9477
 606+ 9477              ; ---------- ---------- ----------
 607+ 9477
 608+ 9477 3A 7D 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 947A FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 947C 38 08        	jr c,1F
 611+ 947E
 612+ 947E              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 947E              ; Actualizamos variables.
 614+ 947E
 615+ 947E 3E 07        	ld a,7
 616+ 9480 32 7E 8C     	ld (Numero_parcial_de_entidades),a
 617+ 9483 47           	ld b,a
 618+ 9484 18 04        	jr 2F
 619+ 9486
 620+ 9486              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9486              ; (Numero_de_entidades)="0".
 622+ 9486
 623+ 9486 32 7E 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9489 47           	ld b,a
 625+ 948A C9           2 ret
 626+ 948B
# file closed: Rutinas_de_inicio_y_niveles.asm
2278  948B              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 948B              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 948B              ;
   3+ 948B              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 948B              ;
   5+ 948B              ; *****************************************************************************************************************************************************************************************
   6+ 948B              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 948B
   8+ 948B 7C           calcula_tercio ld a,h
   9+ 948C E6 18        	and $18
  10+ 948E CB 2F        	sra a
  11+ 9490 CB 2F        	sra a
  12+ 9492 CB 2F        	sra a
  13+ 9494 C9           	ret
  14+ 9495
# file closed: calcula_tercio.asm
2279  9495              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9495              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9495              ;
   3+ 9495              ;
   4+ 9495              ;	CLS.
   5+ 9495              ;
   6+ 9495              ;	Limpia la pantalla y define sus atributos.
   7+ 9495              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9495              ;
   9+ 9495              ;	COLORES: 0 ..... NEGRO
  10+ 9495              ;    		 1 ..... AZUL
  11+ 9495              ; 			 2 ..... ROJO
  12+ 9495              ;			 3 ..... MAGENTA
  13+ 9495              ; 			 4 ..... VERDE
  14+ 9495              ; 			 5 ..... CIAN
  15+ 9495              ;			 6 ..... AMARILLO
  16+ 9495              ; 			 7 ..... BLANCO
  17+ 9495              ;
  18+ 9495              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9495              ;
  20+ 9495              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9495
  22+ 9495
  23+ 9495 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9498 11 01 40     	LD DE,$4001
  25+ 949B 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 949E 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94A0 ED B0        	LDIR
  28+ 94A2 01 FF 02     	LD BC,767
  29+ 94A5 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94A6 ED B0        	LDIR
  31+ 94A8 C9           	ret
  32+ 94A9
# file closed: Cls.asm
2280  94A9              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94A9              ; ------------------------------------------------------------------------
   2+ 94A9              ;
   3+ 94A9              ;	30/1/24
   4+ 94A9              ;
   5+ 94A9              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94A9              ;	Fila superior "0", Columna izquierda "0".
   7+ 94A9              ;
   8+ 94A9              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94A9              ;
  10+ 94A9              ;	Modifica: A,BC y DE.
  11+ 94A9
  12+ 94A9 7D           Genera_coordenadas ld a,l
  13+ 94AA E6 1F        	and $1f
  14+ 94AC 32 38 8C     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94AF
  16+ 94AF 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94B0 FE 40        	cp $40
  18+ 94B2 38 1C        	jr c,4F
  19+ 94B4
  20+ 94B4 CD 8B 94     	call calcula_tercio
  21+ 94B7 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94B8
  23+ 94B8 1E 00        	ld e,0
  24+ 94BA 7D           	ld a,l
  25+ 94BB E6 E0        	and $e0
  26+ 94BD 28 01        	jr z,1F
  27+ 94BF 04           	inc b
  28+ 94C0
  29+ 94C0 04           1 inc b
  30+ 94C1 05           	dec b
  31+ 94C2 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94C4              ;														; _ , salimos.
  33+ 94C4 1C           3 inc e
  34+ 94C5 D6 20        	sub 32
  35+ 94C7 20 FB        	jr nz,3B
  36+ 94C9 10 F5        	djnz 1B
  37+ 94CB
  38+ 94CB 7B           2 ld a,e
  39+ 94CC 32 39 8C     	ld (Coordenada_y),a
  40+ 94CF C9           	ret
  41+ 94D0
  42+ 94D0 AF           4 xor a
  43+ 94D1 32 39 8C     	ld (Coordenada_y),a
  44+ 94D4 C9           	ret
  45+ 94D5
# file closed: Genera_coordenadas.asm
2281  94D5              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94D5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94D5              ;
   3+ 94D5              ;	11/03/24
   4+ 94D5              ;
   5+ 94D5              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94D5              ;   DE contiene Puntero_objeto.
   7+ 94D5              ;   IX contiene el Puntero de impresión.
   8+ 94D5
   9+ 94D5              Genera_datos_de_impresion
  10+ 94D5
  11+ 94D5 ED 73 84 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94D9
  13+ 94D9 31 3E 8C         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94DC DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94DE
  16+ 94DE 2A 97 8C         ld hl,(Scanlines_album_SP)
  17+ 94E1
  18+ 94E1 3E 05            ld a,5
  19+ 94E3 85               add l
  20+ 94E4 6F               ld l,a
  21+ 94E5
  22+ 94E5 F9               ld sp,hl
  23+ 94E6 22 97 8C         ld (Scanlines_album_SP),hl
  24+ 94E9
  25+ 94E9 21 00 00         ld hl,0
  26+ 94EC
  27+ 94EC DD E5            push ix
  28+ 94EE 3B               dec sp
  29+ 94EF ED 7A            adc hl,sp
  30+ 94F1 D5               push de
  31+ 94F2
  32+ 94F2              ; Recuperamos SP.
  33+ 94F2
  34+ 94F2 ED 7B 84 8C      ld sp,(Stack)
  35+ 94F6
  36+ 94F6 E5               push hl
  37+ 94F7 F1               pop af
  38+ 94F8 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94F9
  40+ 94F9              ; Tenemos el encabezado listo.
  41+ 94F9              ; Preparamos registros para generar los scanlines.
  42+ 94F9
  43+ 94F9 DD E5            push ix
  44+ 94FB E1               pop hl                                          ; 1er scanline en HL.
  45+ 94FC
  46+ 94FC ED 5B 97 8C      ld de,(Scanlines_album_SP)
  47+ 9500
  48+ 9500              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9500              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9500
  51+ 9500 7C               ld a,h
  52+ 9501 FE 50            cp $50
  53+ 9503 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9505
  55+ 9505 20 05            jr nz,2F
  56+ 9507
  57+ 9507 7D               ld a,l
  58+ 9508 FE E0            cp $e0
  59+ 950A 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 950C
  61+ 950C 7D           2 ld a,l
  62+ 950D FE C0            cp $c0
  63+ 950F D2 A1 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9512
  65+ 9512              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9512
  67+ 9512 CD 9F 99         call NextScan
  68+ 9515 EB               ex de,hl
  69+ 9516
  70+ 9516 73               ld (hl),e
  71+ 9517 23               inc hl
  72+ 9518 72               ld (hl),d
  73+ 9519 23               inc hl
  74+ 951A
  75+ 951A EB               ex de,hl
  76+ 951B
  77+ 951B CD 9F 99         call NextScan
  78+ 951E EB               ex de,hl
  79+ 951F
  80+ 951F 73               ld (hl),e
  81+ 9520 23               inc hl
  82+ 9521 72               ld (hl),d
  83+ 9522 23               inc hl
  84+ 9523
  85+ 9523 EB               ex de,hl
  86+ 9524
  87+ 9524 CD 9F 99         call NextScan
  88+ 9527 EB               ex de,hl
  89+ 9528
  90+ 9528 73               ld (hl),e
  91+ 9529 23               inc hl
  92+ 952A 72               ld (hl),d
  93+ 952B 23               inc hl
  94+ 952C
  95+ 952C EB               ex de,hl
  96+ 952D
  97+ 952D CD 9F 99         call NextScan
  98+ 9530 EB               ex de,hl
  99+ 9531
 100+ 9531 73               ld (hl),e
 101+ 9532 23               inc hl
 102+ 9533 72               ld (hl),d
 103+ 9534 23               inc hl
 104+ 9535
 105+ 9535 EB               ex de,hl
 106+ 9536
 107+ 9536 CD 9F 99         call NextScan
 108+ 9539 EB               ex de,hl
 109+ 953A
 110+ 953A 73               ld (hl),e
 111+ 953B 23               inc hl
 112+ 953C 72               ld (hl),d
 113+ 953D 23               inc hl
 114+ 953E
 115+ 953E EB               ex de,hl
 116+ 953F
 117+ 953F CD 9F 99         call NextScan
 118+ 9542 EB               ex de,hl
 119+ 9543
 120+ 9543 73               ld (hl),e
 121+ 9544 23               inc hl
 122+ 9545 72               ld (hl),d
 123+ 9546 23               inc hl
 124+ 9547
 125+ 9547 EB               ex de,hl
 126+ 9548
 127+ 9548 CD 9F 99         call NextScan
 128+ 954B EB               ex de,hl
 129+ 954C
 130+ 954C 73               ld (hl),e
 131+ 954D 23               inc hl
 132+ 954E 72               ld (hl),d
 133+ 954F 23               inc hl
 134+ 9550
 135+ 9550 EB               ex de,hl
 136+ 9551
 137+ 9551 CD 9F 99         call NextScan
 138+ 9554 EB               ex de,hl
 139+ 9555
 140+ 9555 73               ld (hl),e
 141+ 9556 23               inc hl
 142+ 9557 72               ld (hl),d
 143+ 9558 23               inc hl
 144+ 9559
 145+ 9559 EB               ex de,hl
 146+ 955A
 147+ 955A CD 9F 99         call NextScan
 148+ 955D EB               ex de,hl
 149+ 955E
 150+ 955E 73               ld (hl),e
 151+ 955F 23               inc hl
 152+ 9560 72               ld (hl),d
 153+ 9561 23               inc hl
 154+ 9562
 155+ 9562 EB               ex de,hl
 156+ 9563
 157+ 9563 CD 9F 99         call NextScan
 158+ 9566 EB               ex de,hl
 159+ 9567
 160+ 9567 73               ld (hl),e
 161+ 9568 23               inc hl
 162+ 9569 72               ld (hl),d
 163+ 956A 23               inc hl
 164+ 956B
 165+ 956B EB               ex de,hl
 166+ 956C
 167+ 956C CD 9F 99         call NextScan
 168+ 956F EB               ex de,hl
 169+ 9570
 170+ 9570 73               ld (hl),e
 171+ 9571 23               inc hl
 172+ 9572 72               ld (hl),d
 173+ 9573 23               inc hl
 174+ 9574
 175+ 9574 EB               ex de,hl
 176+ 9575
 177+ 9575 CD 9F 99         call NextScan
 178+ 9578 EB               ex de,hl
 179+ 9579
 180+ 9579 73               ld (hl),e
 181+ 957A 23               inc hl
 182+ 957B 72               ld (hl),d
 183+ 957C 23               inc hl
 184+ 957D
 185+ 957D EB               ex de,hl
 186+ 957E
 187+ 957E CD 9F 99         call NextScan
 188+ 9581 EB               ex de,hl
 189+ 9582
 190+ 9582 73               ld (hl),e
 191+ 9583 23               inc hl
 192+ 9584 72               ld (hl),d
 193+ 9585 23               inc hl
 194+ 9586
 195+ 9586 EB               ex de,hl
 196+ 9587
 197+ 9587 CD 9F 99         call NextScan
 198+ 958A EB               ex de,hl
 199+ 958B
 200+ 958B 73               ld (hl),e
 201+ 958C 23               inc hl
 202+ 958D 72               ld (hl),d
 203+ 958E 23               inc hl
 204+ 958F
 205+ 958F EB               ex de,hl
 206+ 9590
 207+ 9590 CD 9F 99         call NextScan
 208+ 9593 EB               ex de,hl
 209+ 9594
 210+ 9594 73               ld (hl),e
 211+ 9595 23               inc hl
 212+ 9596 72               ld (hl),d
 213+ 9597 23               inc hl
 214+ 9598
 215+ 9598              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 9598
 217+ 9598 22 97 8C         ld (Scanlines_album_SP),hl
 218+ 959B
 219+ 959B              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 959B
 221+ 959B 08               ex af,af
 222+ 959C
 223+ 959C F5               push af
 224+ 959D E1               pop hl
 225+ 959E
 226+ 959E 36 10            ld (hl),16
 227+ 95A0
 228+ 95A0 C9               ret
 229+ 95A1
 230+ 95A1              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 95A1
 232+ 95A1              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 95A1
 234+ 95A1 3E 57            ld a,$57
 235+ 95A3 94               sub h
 236+ 95A4 47               ld b,a
 237+ 95A5
 238+ 95A5 3E DF            ld a,$df
 239+ 95A7 BD               cp l
 240+ 95A8 38 04            jr c,1F
 241+ 95AA
 242+ 95AA 3E 08            ld a,8
 243+ 95AC 80               add b
 244+ 95AD 47               ld b,a
 245+ 95AE
 246+ 95AE              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 95AE              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 95AE
 249+ 95AE 48           1 ld c,b
 250+ 95AF 0C               inc c
 251+ 95B0
 252+ 95B0 04               inc b
 253+ 95B1 05               dec b
 254+ 95B2 20 02            jr nz,3F
 255+ 95B4
 256+ 95B4 18 0B            jr 6F
 257+ 95B6
 258+ 95B6 CD 9F 99     3 call NextScan
 259+ 95B9 EB               ex de,hl
 260+ 95BA
 261+ 95BA 73               ld (hl),e
 262+ 95BB 23               inc hl
 263+ 95BC 72               ld (hl),d
 264+ 95BD 23               inc hl
 265+ 95BE
 266+ 95BE EB               ex de,hl
 267+ 95BF 10 F5            djnz 3B
 268+ 95C1
 269+ 95C1 ED 53 97 8C  6 ld (Scanlines_album_SP),de
 270+ 95C5
 271+ 95C5 08           5 ex af,af
 272+ 95C6 F5               push af
 273+ 95C7 E1               pop hl
 274+ 95C8
 275+ 95C8 71               ld (hl),c
 276+ 95C9
 277+ 95C9 C9               ret
 278+ 95CA
# file closed: Genera_datos_de_impresion.asm
2282  95CA              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95CA              ; -----------------------------------------------------------------------------
   2+ 95CA              ;
   3+ 95CA              ;   11/03/24
   4+ 95CA              ;
   5+ 95CA
   6+ 95CA              Pinta_Sprites
   7+ 95CA
   8+ 95CA              ;    ld hl,(Scanlines_album_SP)
   9+ 95CA              ;    call Extrae_address
  10+ 95CA
  11+ 95CA              ;    inc h
  12+ 95CA              ;    dec h
  13+ 95CA              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95CA
  15+ 95CA ED 73 84 8C      ld (Stack),sp
  16+ 95CE
  17+ 95CE EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95CF              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95CF 2C               inc l
  20+ 95D0 2C               inc l
  21+ 95D1
  22+ 95D1 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95D2
  24+ 95D2 2C               inc l
  25+ 95D3 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95D4
  27+ 95D4              ;   Seleccionamos rutina de impresión:
  28+ 95D4
  29+ 95D4 3E 10            ld a,16
  30+ 95D6 B8               cp b
  31+ 95D7 C2 D3 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95DA
  33+ 95DA              ;   Rutinas:
  34+ 95DA
  35+ 95DA              Pinta_rapido    ;   1520 t/states.
  36+ 95DA
  37+ 95DA E1               pop hl
  38+ 95DB
  39+ 95DB 1A               ld a,(de)
  40+ 95DC AE               xor (hl)
  41+ 95DD 77               ld (hl),a
  42+ 95DE 2C               inc l
  43+ 95DF 1C               inc e
  44+ 95E0 1A               ld a,(de)
  45+ 95E1 AE               xor (hl)
  46+ 95E2 77               ld (hl),a
  47+ 95E3 2C               inc l
  48+ 95E4 1C               inc e
  49+ 95E5 1A               ld a,(de)
  50+ 95E6 AE               xor (hl)
  51+ 95E7 77               ld (hl),a
  52+ 95E8 13               inc de
  53+ 95E9
  54+ 95E9 E1               pop hl
  55+ 95EA
  56+ 95EA 1A               ld a,(de)
  57+ 95EB AE               xor (hl)
  58+ 95EC 77               ld (hl),a
  59+ 95ED 2C               inc l
  60+ 95EE 1C               inc e
  61+ 95EF 1A               ld a,(de)
  62+ 95F0 AE               xor (hl)
  63+ 95F1 77               ld (hl),a
  64+ 95F2 2C               inc l
  65+ 95F3 1C               inc e
  66+ 95F4 1A               ld a,(de)
  67+ 95F5 AE               xor (hl)
  68+ 95F6 77               ld (hl),a
  69+ 95F7 13               inc de
  70+ 95F8
  71+ 95F8 E1               pop hl
  72+ 95F9
  73+ 95F9 1A               ld a,(de)
  74+ 95FA AE               xor (hl)
  75+ 95FB 77               ld (hl),a
  76+ 95FC 2C               inc l
  77+ 95FD 1C               inc e
  78+ 95FE 1A               ld a,(de)
  79+ 95FF AE               xor (hl)
  80+ 9600 77               ld (hl),a
  81+ 9601 2C               inc l
  82+ 9602 1C               inc e
  83+ 9603 1A               ld a,(de)
  84+ 9604 AE               xor (hl)
  85+ 9605 77               ld (hl),a
  86+ 9606 13               inc de
  87+ 9607
  88+ 9607 E1               pop hl
  89+ 9608
  90+ 9608 1A               ld a,(de)
  91+ 9609 AE               xor (hl)
  92+ 960A 77               ld (hl),a
  93+ 960B 2C               inc l
  94+ 960C 1C               inc e
  95+ 960D 1A               ld a,(de)
  96+ 960E AE               xor (hl)
  97+ 960F 77               ld (hl),a
  98+ 9610 2C               inc l
  99+ 9611 1C               inc e
 100+ 9612 1A               ld a,(de)
 101+ 9613 AE               xor (hl)
 102+ 9614 77               ld (hl),a
 103+ 9615 13               inc de
 104+ 9616
 105+ 9616 E1               pop hl
 106+ 9617
 107+ 9617 1A               ld a,(de)
 108+ 9618 AE               xor (hl)
 109+ 9619 77               ld (hl),a
 110+ 961A 2C               inc l
 111+ 961B 1C               inc e
 112+ 961C 1A               ld a,(de)
 113+ 961D AE               xor (hl)
 114+ 961E 77               ld (hl),a
 115+ 961F 2C               inc l
 116+ 9620 1C               inc e
 117+ 9621 1A               ld a,(de)
 118+ 9622 AE               xor (hl)
 119+ 9623 77               ld (hl),a
 120+ 9624 13               inc de
 121+ 9625
 122+ 9625 E1               pop hl
 123+ 9626
 124+ 9626 1A               ld a,(de)
 125+ 9627 AE               xor (hl)
 126+ 9628 77               ld (hl),a
 127+ 9629 2C               inc l
 128+ 962A 1C               inc e
 129+ 962B 1A               ld a,(de)
 130+ 962C AE               xor (hl)
 131+ 962D 77               ld (hl),a
 132+ 962E 2C               inc l
 133+ 962F 1C               inc e
 134+ 9630 1A               ld a,(de)
 135+ 9631 AE               xor (hl)
 136+ 9632 77               ld (hl),a
 137+ 9633 13               inc de
 138+ 9634
 139+ 9634 E1               pop hl
 140+ 9635
 141+ 9635 1A               ld a,(de)
 142+ 9636 AE               xor (hl)
 143+ 9637 77               ld (hl),a
 144+ 9638 2C               inc l
 145+ 9639 1C               inc e
 146+ 963A 1A               ld a,(de)
 147+ 963B AE               xor (hl)
 148+ 963C 77               ld (hl),a
 149+ 963D 2C               inc l
 150+ 963E 1C               inc e
 151+ 963F 1A               ld a,(de)
 152+ 9640 AE               xor (hl)
 153+ 9641 77               ld (hl),a
 154+ 9642 13               inc de
 155+ 9643
 156+ 9643 E1               pop hl
 157+ 9644
 158+ 9644 1A               ld a,(de)
 159+ 9645 AE               xor (hl)
 160+ 9646 77               ld (hl),a
 161+ 9647 2C               inc l
 162+ 9648 1C               inc e
 163+ 9649 1A               ld a,(de)
 164+ 964A AE               xor (hl)
 165+ 964B 77               ld (hl),a
 166+ 964C 2C               inc l
 167+ 964D 1C               inc e
 168+ 964E 1A               ld a,(de)
 169+ 964F AE               xor (hl)
 170+ 9650 77               ld (hl),a
 171+ 9651 13               inc de
 172+ 9652
 173+ 9652 E1               pop hl
 174+ 9653
 175+ 9653 1A               ld a,(de)
 176+ 9654 AE               xor (hl)
 177+ 9655 77               ld (hl),a
 178+ 9656 2C               inc l
 179+ 9657 1C               inc e
 180+ 9658 1A               ld a,(de)
 181+ 9659 AE               xor (hl)
 182+ 965A 77               ld (hl),a
 183+ 965B 2C               inc l
 184+ 965C 1C               inc e
 185+ 965D 1A               ld a,(de)
 186+ 965E AE               xor (hl)
 187+ 965F 77               ld (hl),a
 188+ 9660 13               inc de
 189+ 9661
 190+ 9661 E1               pop hl
 191+ 9662
 192+ 9662 1A               ld a,(de)
 193+ 9663 AE               xor (hl)
 194+ 9664 77               ld (hl),a
 195+ 9665 2C               inc l
 196+ 9666 1C               inc e
 197+ 9667 1A               ld a,(de)
 198+ 9668 AE               xor (hl)
 199+ 9669 77               ld (hl),a
 200+ 966A 2C               inc l
 201+ 966B 1C               inc e
 202+ 966C 1A               ld a,(de)
 203+ 966D AE               xor (hl)
 204+ 966E 77               ld (hl),a
 205+ 966F 13               inc de
 206+ 9670
 207+ 9670 E1               pop hl
 208+ 9671
 209+ 9671 1A               ld a,(de)
 210+ 9672 AE               xor (hl)
 211+ 9673 77               ld (hl),a
 212+ 9674 2C               inc l
 213+ 9675 1C               inc e
 214+ 9676 1A               ld a,(de)
 215+ 9677 AE               xor (hl)
 216+ 9678 77               ld (hl),a
 217+ 9679 2C               inc l
 218+ 967A 1C               inc e
 219+ 967B 1A               ld a,(de)
 220+ 967C AE               xor (hl)
 221+ 967D 77               ld (hl),a
 222+ 967E 13               inc de
 223+ 967F
 224+ 967F E1               pop hl
 225+ 9680
 226+ 9680 1A               ld a,(de)
 227+ 9681 AE               xor (hl)
 228+ 9682 77               ld (hl),a
 229+ 9683 2C               inc l
 230+ 9684 1C               inc e
 231+ 9685 1A               ld a,(de)
 232+ 9686 AE               xor (hl)
 233+ 9687 77               ld (hl),a
 234+ 9688 2C               inc l
 235+ 9689 1C               inc e
 236+ 968A 1A               ld a,(de)
 237+ 968B AE               xor (hl)
 238+ 968C 77               ld (hl),a
 239+ 968D 13               inc de
 240+ 968E
 241+ 968E E1               pop hl
 242+ 968F
 243+ 968F 1A               ld a,(de)
 244+ 9690 AE               xor (hl)
 245+ 9691 77               ld (hl),a
 246+ 9692 2C               inc l
 247+ 9693 1C               inc e
 248+ 9694 1A               ld a,(de)
 249+ 9695 AE               xor (hl)
 250+ 9696 77               ld (hl),a
 251+ 9697 2C               inc l
 252+ 9698 1C               inc e
 253+ 9699 1A               ld a,(de)
 254+ 969A AE               xor (hl)
 255+ 969B 77               ld (hl),a
 256+ 969C 13               inc de
 257+ 969D
 258+ 969D E1               pop hl
 259+ 969E
 260+ 969E 1A               ld a,(de)
 261+ 969F AE               xor (hl)
 262+ 96A0 77               ld (hl),a
 263+ 96A1 2C               inc l
 264+ 96A2 1C               inc e
 265+ 96A3 1A               ld a,(de)
 266+ 96A4 AE               xor (hl)
 267+ 96A5 77               ld (hl),a
 268+ 96A6 2C               inc l
 269+ 96A7 1C               inc e
 270+ 96A8 1A               ld a,(de)
 271+ 96A9 AE               xor (hl)
 272+ 96AA 77               ld (hl),a
 273+ 96AB 13               inc de
 274+ 96AC
 275+ 96AC E1               pop hl
 276+ 96AD
 277+ 96AD 1A               ld a,(de)
 278+ 96AE AE               xor (hl)
 279+ 96AF 77               ld (hl),a
 280+ 96B0 2C               inc l
 281+ 96B1 1C               inc e
 282+ 96B2 1A               ld a,(de)
 283+ 96B3 AE               xor (hl)
 284+ 96B4 77               ld (hl),a
 285+ 96B5 2C               inc l
 286+ 96B6 1C               inc e
 287+ 96B7 1A               ld a,(de)
 288+ 96B8 AE               xor (hl)
 289+ 96B9 77               ld (hl),a
 290+ 96BA 13               inc de
 291+ 96BB
 292+ 96BB E1               pop hl
 293+ 96BC
 294+ 96BC 1A               ld a,(de)
 295+ 96BD AE               xor (hl)
 296+ 96BE 77               ld (hl),a
 297+ 96BF 2C               inc l
 298+ 96C0 1C               inc e
 299+ 96C1 1A               ld a,(de)
 300+ 96C2 AE               xor (hl)
 301+ 96C3 77               ld (hl),a
 302+ 96C4 2C               inc l
 303+ 96C5 1C               inc e
 304+ 96C6 1A               ld a,(de)
 305+ 96C7 AE               xor (hl)
 306+ 96C8 77               ld (hl),a
 307+ 96C9 13               inc de
 308+ 96CA
 309+ 96CA ED 73 97 8C      ld (Scanlines_album_SP),sp
 310+ 96CE ED 7B 84 8C      ld sp,(Stack)
 311+ 96D2 C9               ret
 312+ 96D3
 313+ 96D3              Pinta_lento
 314+ 96D3
 315+ 96D3 E1           1 pop hl
 316+ 96D4
 317+ 96D4 1A               ld a,(de)
 318+ 96D5 AE               xor (hl)
 319+ 96D6 77               ld (hl),a
 320+ 96D7 2C               inc l
 321+ 96D8 1C               inc e
 322+ 96D9 1A               ld a,(de)
 323+ 96DA AE               xor (hl)
 324+ 96DB 77               ld (hl),a
 325+ 96DC 2C               inc l
 326+ 96DD 1C               inc e
 327+ 96DE 1A               ld a,(de)
 328+ 96DF AE               xor (hl)
 329+ 96E0 77               ld (hl),a
 330+ 96E1 13               inc de
 331+ 96E2
 332+ 96E2 10 EF            djnz 1B
 333+ 96E4
 334+ 96E4 ED 73 97 8C      ld (Scanlines_album_SP),sp
 335+ 96E8 ED 7B 84 8C      ld sp,(Stack)
 336+ 96EC C9               ret
# file closed: Pinta_Sprites.asm
2283  96ED              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96ED              ; ******************************************************************************************************************************************************************************************
   2+ 96ED              ;
   3+ 96ED              ; 26/06/23
   4+ 96ED              ;
   5+ 96ED              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96ED
   7+ 96ED              Draw
   8+ 96ED
   9+ 96ED CD 93 99     	call Prepara_draw
  10+ 96F0 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96F1 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96F2 28 05        	jr z,2F
  13+ 96F4
  14+ 96F4 3A 56 8C     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96F7 18 0C        	jr 1F
  16+ 96F9
  17+ 96F9 2A 54 8C     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96FC 22 47 8C     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96FF CD 8B 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9702              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9702
  22+ 9702 CD 32 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9705
  24+ 9705 3A 44 8C     1 ld a,(Ctrl_0)
  25+ 9708 CB 6F        	bit 5,a
  26+ 970A 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 970C
  28+ 970C CD 21 97     	call Comprueba_limite_horizontal
  29+ 970F CD B1 97     	call Comprueba_limite_vertical
  30+ 9712
  31+ 9712              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9712              ; -----------------------
  33+ 9712              ; -----------------------
  34+ 9712              ; -----------------------
  35+ 9712
  36+ 9712 CD 07 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9715 CD 3E 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9718
  39+ 9718 3A 44 8C     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 971B CB AF        	res 5,a											; _a ser de utilidad.
  41+ 971D 32 44 8C     	ld (Ctrl_0),a
  42+ 9720
  43+ 9720 C9           	ret
  44+ 9721
  45+ 9721              ; *******************************************************************************************************************************************************************************************
  46+ 9721              ;	21/01/23
  47+ 9721              ;
  48+ 9721              ; 	Comprueba_limite_horizontal.
  49+ 9721              ;
  50+ 9721              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9721              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9721              ;
  53+ 9721              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9721              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9721              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9721              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9721
  58+ 9721
  59+ 9721
  60+ 9721 3A 44 8C     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9724 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9726 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9728 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 972A 32 44 8C     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 972D 18 09            jr 6F
  66+ 972F CB 5F        1 bit 3,a
  67+ 9731 28 0A            jr z,2F
  68+ 9733 E6 F7            and $f7
  69+ 9735 32 44 8C         ld (Ctrl_0),a
  70+ 9738 CD 8B 98     6 call Inicializacion
  71+ 973B 18 5B            jr 5F
  72+ 973D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 973E
  74+ 973E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 973E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 973E
  77+ 973E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 973F 2A 58 8C     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9742 CD 8B 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9745 67           	ld h,a
  81+ 9746 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9747 CD 8B 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 974A 67           	ld h,a
  84+ 974B A7           	and a
  85+ 974C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 974E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 974F 3A 56 8C     	ld a,(Cuad_objeto)
  88+ 9752 FE 02        	cp 2
  89+ 9754 38 1E        	jr c,3F
  90+ 9756 28 1C        	jr z,3F
  91+ 9758 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9759 28 23            jr z,7F
  93+ 975B 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 975D 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 975F E1           	pop hl
  96+ 9760
  97+ 9760              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 9760              ; _para indicar con E="2" en caso necesario.
  99+ 9760
 100+ 9760 E5               push hl
 101+ 9761 C5               push bc
 102+ 9762 CD 8B 94     	call calcula_tercio
 103+ 9765 FE 01        	cp 1
 104+ 9767 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9769 CD 99 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 976C 28 26            jr z,9F
 107+ 976E 38 24            jr c,9F
 108+ 9770 1E 00        11 ld e,0
 109+ 9772 18 22            jr 8F
 110+ 9774 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9775 28 07        	jr z, 7F
 112+ 9777 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9779 1E 00         	ld e,0
 114+ 977B E1           	pop hl
 115+ 977C 18 04        	jr 4F
 116+ 977E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 9780 18 15            jr 10F
 118+ 9782
 119+ 9782              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9782              ; _para indicar con E="2" en caso necesario.
 121+ 9782
 122+ 9782 E5           4 push hl
 123+ 9783 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9784 CD 8B 94     	call calcula_tercio
 125+ 9787 FE 01        	cp 1
 126+ 9789 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 978B CD 99 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 978E 28 04            jr z,9F
 129+ 9790 30 02            jr nc,9F
 130+ 9792 18 02        	jr 8F
 131+ 9794 1E 02        9 ld e,2
 132+ 9796 C1           8 pop bc
 133+ 9797 E1           10 pop hl
 134+ 9798 C9           5 ret
 135+ 9799
 136+ 9799              ; --------------------
 137+ 9799              ;
 138+ 9799              ; 25/08/22
 139+ 9799
 140+ 9799 CD 8B 94     Comprueba_centro call calcula_tercio
 141+ 979C 67               ld h,a
 142+ 979D 08           	ex af,af
 143+ 979E FE 02        	cp 2
 144+ 97A0 38 07        	jr c,1F
 145+ 97A2 28 05        	jr z,1F
 146+ 97A4 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97A7 18 03        	jr 2F
 148+ 97A9 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97AC 08           2 ex af,af
 150+ 97AD A7               and a
 151+ 97AE ED 42            sbc hl,bc
 152+ 97B0 C9               ret
 153+ 97B1
 154+ 97B1              ; *********************************************************************************************************************************************************************************************
 155+ 97B1              ;
 156+ 97B1              ;   16/8/22
 157+ 97B1              ;
 158+ 97B1              ;	Comprueba_limite_vertical
 159+ 97B1              ;
 160+ 97B1              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97B1              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97B1              ;
 163+ 97B1
 164+ 97B1 2A 47 8C     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97B4 7D           	ld a,l
 166+ 97B5 E6 1F        	and $1F
 167+ 97B7 57           	ld d,a
 168+ 97B8 3A 5A 8C     	ld a,(Limite_vertical)
 169+ 97BB BA           	cp d 											; Límite - Posición.
 170+ 97BC 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97BD 3A 56 8C     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97C0 CB 47        	bit 0,a
 173+ 97C2 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97C4
 175+ 97C4              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97C4
 177+ 97C4 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97C5 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97C7
 180+ 97C7              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97C7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97C7
 183+ 97C7 3A 38 8C         ld a,(Coordenada_X)
 184+ 97CA 16 0F            ld d,Centro_izquierda
 185+ 97CC A7               and a
 186+ 97CD 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97CE 28 1E            jr z,3F
 188+ 97D0 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97D2              ;                                                    ; _salimos sin modificar nada.
 190+ 97D2 18 0E            jr 2F
 191+ 97D4 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97D5 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97D7
 194+ 97D7              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97D7              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97D7
 197+ 97D7 3A 38 8C         ld a,(Coordenada_X)
 198+ 97DA 16 10            ld d,Centro_derecha
 199+ 97DC A7               and a
 200+ 97DD 92               sub d
 201+ 97DE 28 0E            jr z,3F
 202+ 97E0 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97E2              ;                                                    ; _salimos sin modificar nada.
 204+ 97E2 CB 43        2 bit 0,e
 205+ 97E4 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97E6 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97E7 CD 7B 98         call Modificaccionne
 208+ 97EA C1           	pop bc
 209+ 97EB CD 8B 98         call Inicializacion
 210+ 97EE C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97EF
 212+ 97EF              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97EF
 214+ 97EF C5           4 push bc
 215+ 97F0 01 46 8C     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97F3 0A           	ld a,(bc)
 217+ 97F4 3D           	dec a
 218+ 97F5 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97F6 7D           	ld a,l
 220+ 97F7 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97F8 CB 47        	bit 0,a
 222+ 97FA 28 03        	jr z,5F
 223+ 97FC 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97FD 18 2E        	jr 7F
 225+ 97FF
 226+ 97FF              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97FF
 228+ 97FF 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 9800 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9801 3A 44 8C     	ld a,(Ctrl_0)
 231+ 9804 CB 4F        	bit 1,a
 232+ 9806 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9808 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9809
 235+ 9809              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9809
 237+ 9809 1C               inc e
 238+ 980A 1D               dec e
 239+ 980B 20 07            jr nz,12F
 240+ 980D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 980E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 980F 22 47 8C     	ld (Posicion_actual),hl
 243+ 9812 18 44        13 jr 9F
 244+ 9814 CB 43        12 bit 0,e
 245+ 9816 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9818              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9818 C1           	pop bc
 248+ 9819 18 D3        	jr 3B
 249+ 981B 80           14 add b
 250+ 981C 6F               ld l,a
 251+ 981D 22 47 8C     	ld (Posicion_actual),hl
 252+ 9820 CD 7B 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9823 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9825 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9827 32 44 8C         ld (Ctrl_0),a
 256+ 982A F1           	pop af
 257+ 982B 18 2B        	jr 9F
 258+ 982D
 259+ 982D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 982D
 261+ 982D F5           7 push af
 262+ 982E 3A 44 8C     	ld a,(Ctrl_0)
 263+ 9831 CB 47        	bit 0,a
 264+ 9833 20 1D        	jr nz,8F
 265+ 9835 F1           	pop af
 266+ 9836
 267+ 9836              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9836
 269+ 9836 1C           	inc e
 270+ 9837 1D               dec e
 271+ 9838 20 07            jr nz,10F
 272+ 983A 90           	sub b
 273+ 983B 6F               ld l,a
 274+ 983C 22 47 8C     	ld (Posicion_actual),hl
 275+ 983F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9841              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9841 CB 43        10 bit 0,e
 278+ 9843 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9845              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9845 C1           	pop bc
 281+ 9846 18 A6        	jr 3B
 282+ 9848 90           16 sub b
 283+ 9849 6F               ld l,a
 284+ 984A 22 47 8C     	ld (Posicion_actual),hl
 285+ 984D CD 7B 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 9850 18 06            jr 9F
 287+ 9852 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9854 32 44 8C         ld (Ctrl_0),a
 289+ 9857 F1           	pop af
 290+ 9858 C1           9 pop bc
 291+ 9859 1E 00        	ld e,0
 292+ 985B CD 8B 98         call Inicializacion
 293+ 985E F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 985F 08           	ex af,af
 295+ 9860 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 9861 18 8B            jr 3B
 297+ 9863
 298+ 9863              ; --------------------
 299+ 9863
 300+ 9863 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9865 CD AE 99     1 call PreviousScan
 302+ 9868 10 FB            djnz 1B
 303+ 986A 22 47 8C     	ld (Posicion_actual),hl
 304+ 986D AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 986E C9           	ret
 306+ 986F
 307+ 986F              ; --------------------
 308+ 986F
 309+ 986F 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 9871 CD 9F 99     1 call NextScan
 311+ 9874 10 FB            djnz 1B
 312+ 9876 22 47 8C     	ld (Posicion_actual),hl
 313+ 9879 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 987A C9           	ret
 315+ 987B
 316+ 987B              ; --------------------
 317+ 987B              ;
 318+ 987B              ;	22/01/23
 319+ 987B              ;
 320+ 987B              ;	E="1". Hemos cambiado de cuadrante.
 321+ 987B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 987B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 987B
 324+ 987B
 325+ 987B              Modificaccionne
 326+ 987B
 327+ 987B 3A 56 8C     	ld a,(Cuad_objeto)
 328+ 987E FE 02        	cp 2
 329+ 9880 CC 63 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9883 DC 63 98         call c,Modifica_Pos_actual
 331+ 9886 C8           	ret z
 332+ 9887 CD 6F 98         call Modifica_Pos_actual2
 333+ 988A C9               ret
 334+ 988B
 335+ 988B              ; *************************************************************************************************************************************************************************************************
 336+ 988B              ;
 337+ 988B              ;	13/8/22
 338+ 988B              ;
 339+ 988B              ;	Inicializacion
 340+ 988B              ;
 341+ 988B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 988B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 988B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 988B              ;
 345+ 988B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 988B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 988B              ;	_ desaparece/aparece.
 348+ 988B
 349+ 988B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 988B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 988B              ;
 352+ 988B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 988B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 988B              ; 		   [E] ="0"
 355+ 988B
 356+ 988B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 988B
 358+ 988B CD 8B 94     Inicializacion call calcula_tercio
 359+ 988E 28 36        	jr z,primit
 360+ 9890 E6 02        	and 2
 361+ 9892 20 07        	jr nz,segmit
 362+ 9894 7D           	ld a,l
 363+ 9895 FE 7F        	cp $7f
 364+ 9897 38 2D        	jr c,primit
 365+ 9899 28 2B        	jr z,primit
 366+ 989B CD 01 99     segmit call column
 367+ 989E 38 13        	jr c,tercuad
 368+ 98A0 3E 04        cuarcuad ld a,4
 369+ 98A2 32 56 8C     	ld (Cuad_objeto),a
 370+ 98A5 21 20 48     	ld hl,$4820
 371+ 98A8 22 58 8C     	ld (Limite_horizontal),hl
 372+ 98AB 21 5A 8C     	ld hl,Limite_vertical
 373+ 98AE 36 0D        	ld (hl),$0d
 374+ 98B0 08           	ex af,af
 375+ 98B1 18 3C        	jr 1F
 376+ 98B3              tercuad
 377+ 98B3 3E 03        	ld a,3
 378+ 98B5 32 56 8C     	ld (Cuad_objeto),a
 379+ 98B8 21 20 48     	ld hl,$4820
 380+ 98BB 22 58 8C     	ld (Limite_horizontal),hl
 381+ 98BE 21 5A 8C     	ld hl,Limite_vertical
 382+ 98C1 36 12        	ld (hl),$12
 383+ 98C3 08           	ex af,af
 384+ 98C4 18 29        	jr 1F
 385+ 98C6 CD 01 99     primit call column
 386+ 98C9 38 13        	jr c, primcuad
 387+ 98CB              segcuad
 388+ 98CB 3E 02        	ld a,2
 389+ 98CD 32 56 8C     	ld (Cuad_objeto),a
 390+ 98D0 21 C0 4F     	ld hl,$4fc0
 391+ 98D3 22 58 8C     	ld (Limite_horizontal),hl
 392+ 98D6 21 5A 8C     	ld hl,Limite_vertical
 393+ 98D9 36 0D        	ld (hl),$0d
 394+ 98DB 08           	ex af,af
 395+ 98DC 18 11        	jr 1F
 396+ 98DE              primcuad
 397+ 98DE 3E 01        	ld a,1
 398+ 98E0 32 56 8C     	ld (Cuad_objeto),a
 399+ 98E3 21 C0 4F     	ld hl,$4fc0
 400+ 98E6 22 58 8C     	ld (Limite_horizontal),hl
 401+ 98E9 21 5A 8C     	ld hl,Limite_vertical
 402+ 98EC 36 12        	ld (hl),$12
 403+ 98EE 08           	ex af,af
 404+ 98EF
 405+ 98EF C5           1 push bc
 406+ 98F0 E5           	push hl
 407+ 98F1 D5           	push de
 408+ 98F2
 409+ 98F2 2A 47 8C     	ld hl,(Posicion_actual)
 410+ 98F5 CD A9 94     	call Genera_coordenadas
 411+ 98F8
 412+ 98F8 D1           	pop de
 413+ 98F9 E1           	pop hl
 414+ 98FA C1           	pop bc
 415+ 98FB
 416+ 98FB 21 44 8C     	ld hl,Ctrl_0
 417+ 98FE CB EE        	set 5,(hl)
 418+ 9900 C9           	ret
 419+ 9901
 420+ 9901              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9901
 422+ 9901              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9901              ;
 424+ 9901              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9901
 426+ 9901 7D           column ld a,l
 427+ 9902 E6 1F        	and $1f
 428+ 9904 FE 10         	cp $10
 429+ 9906 C9            	ret
 430+ 9907
 431+ 9907              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9907              ;
 433+ 9907              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9907              ;
 435+ 9907              ; 14/12/22
 436+ 9907              ;
 437+ 9907              ;	Modifica: A y BC.
 438+ 9907
 439+ 9907 3A 56 8C     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 990A E6 01        	and 1
 441+ 990C 28 17        	jr z,1F
 442+ 990E
 443+ 990E              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 990E
 445+ 990E 3A 38 8C     	ld a,(Coordenada_X)
 446+ 9911 47           	ld b,a
 447+ 9912 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9913 79           	ld a,c
 449+ 9914 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9915 38 08        	jr c,2F
 451+ 9917 47           	ld b,a
 452+ 9918 79           	ld a,c
 453+ 9919 90           	sub b
 454+ 991A 32 57 8C     	ld (Columnas),a
 455+ 991D 18 1B        	jr 4F
 456+ 991F 79           2 ld a,c
 457+ 9920 32 57 8C     	ld (Columnas),a
 458+ 9923 18 15        	jr 4F
 459+ 9925
 460+ 9925              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9925
 462+ 9925 3A 38 8C     1 ld a,(Coordenada_X)
 463+ 9928 81           	add c
 464+ 9929 3D           	dec a
 465+ 992A D6 1F        	sub $1f
 466+ 992C 38 08        	jr c,3F
 467+ 992E 47           	ld b,a
 468+ 992F 79           	ld a,c
 469+ 9930 90           	sub b
 470+ 9931 32 57 8C     	ld (Columnas),a
 471+ 9934 18 04        	jr 4F
 472+ 9936 79           3 ld a,c
 473+ 9937 32 57 8C     	ld (Columnas),a
 474+ 993A D9           4 exx
 475+ 993B 4F           	ld c,a
 476+ 993C D9           	exx
 477+ 993D C9            ret
 478+ 993E
 479+ 993E              ; --------------------------------------------------------------------------------------------------------------------
 480+ 993E              ;
 481+ 993E              ;   19/7/23
 482+ 993E              ;
 483+ 993E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 993E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 993E              ;
 486+ 993E              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 993E              ;			HL e IY Contienen (Puntero_objeto).
 488+ 993E              ;
 489+ 993E              ;	DESTRUYE: HL,B Y A.
 490+ 993E
 491+ 993E 3A 56 8C     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9941 FE 02        	cp 2
 493+ 9943 38 18        	jr c,1F
 494+ 9945 28 16        	jr z,1F
 495+ 9947 E6 01        	and 1
 496+ 9949 28 0D        	jr z,3F
 497+ 994B
 498+ 994B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 994B
 500+ 994B CD 87 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 994E
 502+ 994E 7D           9 ld a,l
 503+ 994F E6 1F        	and $1f
 504+ 9951 28 2A        	jr z,7F
 505+ 9953 2B           	dec hl
 506+ 9954 10 F8        	djnz 9B
 507+ 9956 18 25        	jr 7F
 508+ 9958
 509+ 9958              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9958
 511+ 9958 2A 47 8C     3 ld hl,(Posicion_actual)
 512+ 995B 18 20        	jr 7F
 513+ 995D
 514+ 995D 28 14        1 jr z,2F
 515+ 995F
 516+ 995F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 995F
 518+ 995F CD 87 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 9962
 520+ 9962 7D           4 ld a,l
 521+ 9963 E6 1F        	and $1f
 522+ 9965 28 03        	jr z,6F
 523+ 9967 2B           	dec hl
 524+ 9968 10 F8        	djnz 4B
 525+ 996A 06 0F        6 ld b,15
 526+ 996C CD AE 99     5 call PreviousScan
 527+ 996F 10 FB        	djnz 5B
 528+ 9971 18 0A        	jr 7F
 529+ 9973
 530+ 9973              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 9973
 532+ 9973 CD 87 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9976 06 0F        	ld b,15
 534+ 9978 CD AE 99     8 call PreviousScan
 535+ 997B 10 FB        	djnz 8B
 536+ 997D
 537+ 997D E5           7 push hl
 538+ 997E DD E1        	pop ix
 539+ 9980
 540+ 9980 2A 49 8C     	ld hl,(Puntero_objeto)
 541+ 9983 E5           	push hl
 542+ 9984 FD E1        	pop iy
 543+ 9986
 544+ 9986 C9           	ret
 545+ 9987
 546+ 9987              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9987              ;
 548+ 9987              ;	2/1/23
 549+ 9987              ;
 550+ 9987              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9987              ;
 552+ 9987              ;	Tras esta rutina tenemos:
 553+ 9987              ;
 554+ 9987              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9987              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9987              ;
 557+ 9987              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9987
 559+ 9987 2A 47 8C     Operandos ld hl,(Posicion_actual)
 560+ 998A 3A 57 8C     	ld a,(Columnas)
 561+ 998D 3D           	dec a
 562+ 998E 20 01        	jr nz,1F
 563+ 9990 3C           	inc a
 564+ 9991 47           1 ld b,a
 565+ 9992 C9           	ret
 566+ 9993
 567+ 9993              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9993              ;
 569+ 9993              ;	Prepara_draw
 570+ 9993              ;
 571+ 9993              ;	Es una rutina de carga.
 572+ 9993              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 9993              ;
 574+ 9993              ;	FUNCIONAMIENTO:
 575+ 9993              ;
 576+ 9993              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 9993              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 9993              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 9993              ;
 580+ 9993              ;	DESTRUYE:
 581+ 9993              ;
 582+ 9993              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 9993
 584+ 9993 21 45 8C     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9996 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9997 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9998 4E           	ld c,(hl)
 588+ 9999 2A 47 8C     	ld hl,(Posicion_actual)
 589+ 999C 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 999E C9           	ret
 591+ 999F
 592+ 999F              ;----------------------------------------------------------------------------------------------------------------
 593+ 999F              ;
 594+ 999F              ;	5/08/22
 595+ 999F              ;
 596+ 999F              ;   NextScan.
 597+ 999F              ;
 598+ 999F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 999F              ;
 600+ 999F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 999F              ;
 602+ 999F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 999F              ;
 604+ 999F              ;       DESTRUIDOS: AF y HL !!!
 605+ 999F              ;
 606+ 999F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 999F              ;
 608+ 999F
 609+ 999F 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99A0 7C               ld a,h
 611+ 99A1 E6 07            and 7
 612+ 99A3 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99A4
 614+ 99A4 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99A5 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99A7 6F               ld l,a
 617+ 99A8 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99A9
 619+ 99A9 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99AA D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99AC 67               ld h,a
 622+ 99AD C9               ret
 623+ 99AE
 624+ 99AE              ;----------------------------------------------------------------------------------------------------------------
 625+ 99AE              ;
 626+ 99AE              ;	5/08/22
 627+ 99AE              ;
 628+ 99AE              ;   PreviousScan.
 629+ 99AE              ;
 630+ 99AE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99AE              ;
 632+ 99AE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99AE              ;
 634+ 99AE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99AE              ;
 636+ 99AE              ;       DESTRUIDOS: AF y HL !!!
 637+ 99AE              ;
 638+ 99AE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99AE              ;
 640+ 99AE
 641+ 99AE 7C           PreviousScan ld a,h
 642+ 99AF 25               dec h               ; Dec H.
 643+ 99B0 E6 07            and 7
 644+ 99B2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99B3
 646+ 99B3 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99B4 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99B6 6F               ld l,a
 649+ 99B7 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99B8
 651+ 99B8 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99B9 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99BB 67               ld h,a
 654+ 99BC C9               ret
 655+ 99BD
 656+ 99BD
 657+ 99BD
 658+ 99BD
 659+ 99BD
 660+ 99BD
 661+ 99BD
 662+ 99BD
 663+ 99BD
 664+ 99BD
 665+ 99BD
 666+ 99BD
# file closed: Draw_XOR.asm
2284  99BD              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99BD
   2+ 99BD              ; ******************************************************************************************************************************************************************************************
   3+ 99BD              ;
   4+ 99BD              ;   20/05/23
   5+ 99BD              ;
   6+ 99BD              ;	Recompone_posicion_inicio
   7+ 99BD              ;
   8+ 99BD              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99BD              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99BD              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99BD              ;	_ a una u otra rutina.
  12+ 99BD
  13+ 99BD              Recompone_posicion_inicio
  14+ 99BD
  15+ 99BD 2A 54 8C     	ld hl,(Posicion_inicio)
  16+ 99C0 7D           	ld a,l
  17+ 99C1 E6 1F        	and $1f
  18+ 99C3 28 16        	jr z,1F
  19+ 99C5
  20+ 99C5 FE 1F        	cp $1f
  21+ 99C7 28 0D        	jr z,3F
  22+ 99C9
  23+ 99C9 21 43 8C     	ld hl,Ctrl_2
  24+ 99CC CB C6        	set 0,(hl)
  25+ 99CE 2A 49 8C     	ld hl,(Puntero_objeto)
  26+ 99D1 22 75 8C     	ld (Repone_puntero_objeto),hl
  27+ 99D4 18 08        	jr 2F
  28+ 99D6
  29+ 99D6 CD 84 9B     3 call Mov_left
  30+ 99D9 18 03        	jr 2F
  31+ 99DB
  32+ 99DB CD 61 9A     1 call Mov_right
  33+ 99DE 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99E1 22 49 8C     	ld (Puntero_objeto),hl
  35+ 99E4 C9           	ret
  36+ 99E5
  37+ 99E5              ; ******************************************************************************************************************************************************************************************
  38+ 99E5              ;
  39+ 99E5              ;   27/05/23
  40+ 99E5              ;
  41+ 99E5              ;	Mov_down
  42+ 99E5              ;
  43+ 99E5              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99E5              ;
  45+ 99E5              ;
  46+ 99E5              Mov_down
  47+ 99E5
  48+ 99E5 CD 4F 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99E8              ;																	; _ repone (Puntero_objeto).
  50+ 99E8 21 44 8C     	ld hl,Ctrl_0
  51+ 99EB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99ED              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99ED              ; 																	; _ en el caso de que no lo haya.
  54+ 99ED 3A 5F 8C     	ld a,(Vel_down)
  55+ 99F0 47           	ld b,a
  56+ 99F1 2A 47 8C         ld hl,(Posicion_actual)
  57+ 99F4 CD 8B 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99F7 E6 02        	and 2
  59+ 99F9 28 17        	jr z,1F
  60+ 99FB
  61+ 99FB              ; Nos encontramos en el último tercio de pantalla.
  62+ 99FB              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99FB
  64+ 99FB 7C           	ld a,h
  65+ 99FC FE 57        	cp $57
  66+ 99FE 20 12        	jr nz,1F
  67+ 9A00
  68+ 9A00 7D           	ld a,l
  69+ 9A01 C6 20        	add $20
  70+ 9A03 30 0D        	jr nc,1F
  71+ 9A05
  72+ 9A05              ; ------------------------------
  73+ 9A05              ;
  74+ 9A05              ;	12/01/24
  75+ 9A05
  76+ 9A05              ;	call Reaparece_arriba
  77+ 9A05 CD 11 9D     	call Reinicio
  78+ 9A08
  79+ 9A08              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A08
  81+ 9A08 3A 9D 8C     	ld a,(Ctrl_3)
  82+ 9A0B CB CF        	set 1,a
  83+ 9A0D 32 9D 8C     	ld (Ctrl_3),a
  84+ 9A10
  85+ 9A10 18 08        	jr 3F
  86+ 9A12              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A12              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A12              ; ------------------------------
  89+ 9A12
  90+ 9A12 CD 9F 99     1 call NextScan
  91+ 9A15 22 47 8C     	ld (Posicion_actual),hl
  92+ 9A18 10 DA            djnz 2B
  93+ 9A1A CD A9 94     3 call Genera_coordenadas
  94+ 9A1D C9           	ret
  95+ 9A1E
  96+ 9A1E              ; ******************************************************************************************************************************************************************************************
  97+ 9A1E              ;
  98+ 9A1E              ;   27/05/23
  99+ 9A1E              ;
 100+ 9A1E              ;	Mov_up
 101+ 9A1E              ;
 102+ 9A1E              ; 	Mueve el Sprite hacia arriba.
 103+ 9A1E              ;
 104+ 9A1E              ;
 105+ 9A1E              Mov_up
 106+ 9A1E
 107+ 9A1E CD 4F 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A21              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A21 21 44 8C     	ld hl,Ctrl_0
 110+ 9A24 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A26              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A26              ; 																		; _ en el caso de que no lo haya.
 113+ 9A26 3A 5E 8C     	ld a,(Vel_up)
 114+ 9A29 47           	ld b,a
 115+ 9A2A 2A 47 8C     	ld hl,(Posicion_actual)
 116+ 9A2D CD 8B 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A30 A7           	and a
 118+ 9A31 20 10        	jr nz,1F
 119+ 9A33
 120+ 9A33              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A33              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A33
 123+ 9A33 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A34 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A36 20 0B            jr nz,1F
 126+ 9A38 7D               ld a,l
 127+ 9A39 D6 20            sub $20
 128+ 9A3B 30 06            jr nc,1F
 129+ 9A3D 25               dec h
 130+ 9A3E
 131+ 9A3E              ; -----------------------------
 132+ 9A3E CD F2 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A41              ;	call Reinicio
 134+ 9A41              ; -----------------------------
 135+ 9A41
 136+ 9A41 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A43 CD AE 99     1 call PreviousScan
 138+ 9A46 22 47 8C     	ld (Posicion_actual),hl
 139+ 9A49 10 E2            djnz 3B
 140+ 9A4B CD A9 94     2 call Genera_coordenadas
 141+ 9A4E C9           	ret
 142+ 9A4F
 143+ 9A4F              ; -----------------------------
 144+ 9A4F              ;
 145+ 9A4F              ;	27/5/23
 146+ 9A4F              ;
 147+ 9A4F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A4F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A4F              ;
 150+ 9A4F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A4F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A4F              ;
 153+ 9A4F              ;	Modifica: A y (Puntero_objeto).
 154+ 9A4F
 155+ 9A4F 3A 43 8C     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A52 CB 47        	bit 0,a
 157+ 9A54 C8           	ret z
 158+ 9A55 CB 87        	res 0,a
 159+ 9A57 32 43 8C     	ld (Ctrl_2),a
 160+ 9A5A 2A 75 8C     	ld hl,(Repone_puntero_objeto)
 161+ 9A5D 22 49 8C     	ld (Puntero_objeto),hl
 162+ 9A60 C9           	ret
 163+ 9A61
 164+ 9A61              ; ******************************************************************************************************************************************************************************************
 165+ 9A61              ;
 166+ 9A61              ;	19/10/22
 167+ 9A61              ;
 168+ 9A61              ;	Mov_right.
 169+ 9A61              ;
 170+ 9A61              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A61              ;
 172+ 9A61
 173+ 9A61 3A 44 8C     Mov_right ld a,(Ctrl_0)
 174+ 9A64 CB 77        	bit 6,a
 175+ 9A66 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A68
 177+ 9A68 CD A0 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A6B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A6C
 180+ 9A6C 21 44 8C     	ld hl,Ctrl_0
 181+ 9A6F CB E6        	set 4,(hl)
 182+ 9A71 18 52        	jr 8F
 183+ 9A73
 184+ 9A73 21 44 8C     10 ld hl,Ctrl_0
 185+ 9A76 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A78              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A78              ; 																	; _ en el caso de que no lo haya.
 188+ 9A78 3A 38 8C     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A7B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A7D 20 46        	jr nz,8F
 191+ 9A7F
 192+ 9A7F 3A 4B 8C     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A82 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A83 28 40        	jr z,8F
 195+ 9A85
 196+ 9A85              ; ---------- ---------- ----------
 197+ 9A85              ;
 198+ 9A85              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A85
 200+ 9A85 3A 5D 8C     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A88 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A8A 28 11        	jr z,1F
 203+ 9A8C 38 06        	jr c,6F
 204+ 9A8E FE 04        	cp 4
 205+ 9A90 28 14        	jr z,7F
 206+ 9A92 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A94
 208+ 9A94              ; ---------- ---------- ----------
 209+ 9A94              ;
 210+ 9A94              ; Perfiles de velocidad
 211+ 9A94              ;
 212+ 9A94
 213+ 9A94 3A 4B 8C     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A97 FE FE        	cp $fe
 215+ 9A99 20 2A        	jr nz,8F
 216+ 9A9B 18 10        	jr 3F
 217+ 9A9D 3A 4B 8C     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9AA0 FE FD        	cp $fd
 219+ 9AA2 20 21        	jr nz,8F
 220+ 9AA4 18 07        	jr 3F
 221+ 9AA6 3A 4B 8C     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AA9 FE FB        	cp $fb
 223+ 9AAB 20 18        	jr nz,8F
 224+ 9AAD
 225+ 9AAD              ; ---------- ---------- ----------
 226+ 9AAD
 227+ 9AAD              3
 228+ 9AAD CD E0 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9AB0              ;	call Reinicio
 230+ 9AB0
 231+ 9AB0              ; ---------- ---------- ----------
 232+ 9AB0              ;
 233+ 9AB0              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9AB0
 235+ 9AB0 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9AB2 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AB3 CD CC 9A     	call DESPLZ_DER
 238+ 9AB6 C1           	pop bc
 239+ 9AB7 10 F9        	djnz 5B
 240+ 9AB9 2A 47 8C     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9ABC 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9ABD 22 47 8C     	ld (Posicion_actual),hl
 243+ 9AC0 CD A9 94     	call Genera_coordenadas
 244+ 9AC3 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AC5
 246+ 9AC5              ; ---------- ---------- ----------
 247+ 9AC5
 248+ 9AC5 2A 47 8C     8 ld hl,(Posicion_actual)
 249+ 9AC8 CD CC 9A     	call DESPLZ_DER
 250+ 9ACB C9           2 ret
 251+ 9ACC
 252+ 9ACC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9ACC              ;
 254+ 9ACC              ;	22/9/22
 255+ 9ACC              ;
 256+ 9ACC
 257+ 9ACC CD DB 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9ACF CD 27 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AD2 CD 50 9B         call Ciclo_completo
 260+ 9AD5 21 44 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AD8 CB FE        	set 7,(hl)
 262+ 9ADA C9           	ret
 263+ 9ADB
 264+ 9ADB              ; ******************************************************************************************************************************************************************************************
 265+ 9ADB              ;	15/02/23
 266+ 9ADB              ;
 267+ 9ADB
 268+ 9ADB 3A 5D 8C     Desplaza_derecha ld a,(Vel_right)
 269+ 9ADE 47           	ld b,a
 270+ 9ADF 2A 50 8C     	ld hl,(Puntero_DESPLZ_der)
 271+ 9AE2 23           1 inc hl
 272+ 9AE3 23           	inc hl
 273+ 9AE4 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AE6 22 50 8C     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AE9 CD 8A 90     	call Extrae_address
 276+ 9AEC 22 49 8C     	ld (Puntero_objeto),hl
 277+ 9AEF
 278+ 9AEF              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9AEF
 280+ 9AEF              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9AEF              ; Cuántos movimientos hemos hecho ??
 282+ 9AEF              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9AEF
 284+ 9AEF 2A 4C 8C     7 ld hl,(Indice_Sprite_der)
 285+ 9AF2 EB           	ex de,hl
 286+ 9AF3 A7           	and a
 287+ 9AF4 ED 52        	sbc hl,de
 288+ 9AF6 CB 3D        	srl l
 289+ 9AF8 3E 08        6 ld a,8
 290+ 9AFA 95           	sub l
 291+ 9AFB 30 1E        	jr nc,3F
 292+ 9AFD
 293+ 9AFD              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AFD              ; B="0".
 295+ 9AFD
 296+ 9AFD 04           4 inc b
 297+ 9AFE 3C           	inc a
 298+ 9AFF 20 FC        	jr nz,4B
 299+ 9B01 78           	ld a,b
 300+ 9B02 08           	ex af,af
 301+ 9B03 2A 4C 8C     	ld hl,(Indice_Sprite_der)
 302+ 9B06 23           5 inc hl
 303+ 9B07 23           	inc hl
 304+ 9B08 10 FC        	djnz 5B
 305+ 9B0A 22 50 8C     	ld (Puntero_DESPLZ_der),hl
 306+ 9B0D CD 8A 90     	call Extrae_address
 307+ 9B10 22 49 8C     	ld (Puntero_objeto),hl
 308+ 9B13
 309+ 9B13              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B13              ; _(Posicion_actual).
 311+ 9B13
 312+ 9B13 21 47 8C     	ld hl,Posicion_actual
 313+ 9B16 34           	inc (hl)
 314+ 9B17 08               ex af,af
 315+ 9B18 6F           	ld l,a
 316+ 9B19 18 DD        	jr 6B
 317+ 9B1B
 318+ 9B1B              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B1B
 320+ 9B1B 47           3 ld b,a
 321+ 9B1C 2A 4E 8C     	ld hl,(Indice_Sprite_izq)
 322+ 9B1F 23           2 inc hl
 323+ 9B20 23           	inc hl
 324+ 9B21 10 FC        	djnz 2B
 325+ 9B23 22 52 8C     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B26 C9           8 ret
 327+ 9B27
 328+ 9B27              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B27              ;
 330+ 9B27              ;	24/7/22
 331+ 9B27              ;
 332+ 9B27              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B27              ;
 334+ 9B27              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B27              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B27              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B27
 338+ 9B27 3A 4B 8C     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B2A A7           	and a
 340+ 9B2B 20 1F        	jr nz,1F
 341+ 9B2D D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B2F 32 4B 8C         ld (CTRL_DESPLZ),a
 343+ 9B32
 344+ 9B32 21 46 8C     	ld hl,Columns
 345+ 9B35 34           	inc (hl)
 346+ 9B36 3A 56 8C     	ld a,(Cuad_objeto)
 347+ 9B39 E6 01        	and 1
 348+ 9B3B 28 0F        	jr z,1F
 349+ 9B3D 2A 47 8C     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B40 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B41 22 47 8C     	ld (Posicion_actual),hl
 352+ 9B44 CD A9 94     	call Genera_coordenadas
 353+ 9B47 CD AC 9C     	call Inc_CTRL_DESPLZ
 354+ 9B4A 18 03        	jr 2F
 355+ 9B4C CD AC 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B4F C9           2 ret
 357+ 9B50
 358+ 9B50              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B50              ;
 360+ 9B50              ;	24/7/22
 361+ 9B50              ;
 362+ 9B50              ;	Ciclo_completo.
 363+ 9B50              ;
 364+ 9B50              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B50              ;
 366+ 9B50              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B50              ; 	Decrementamos (Columns).
 368+ 9B50              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B50              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B50
 371+ 9B50
 372+ 9B50 3A 4B 8C     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B53 FE FF        	cp $ff
 374+ 9B55 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B57 E6 F0        	and $f0
 376+ 9B59 20 28        	jr nz,3F
 377+ 9B5B
 378+ 9B5B              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B5B
 380+ 9B5B 3A 4B 8C     	ld a,(CTRL_DESPLZ)
 381+ 9B5E 47           	ld b,a
 382+ 9B5F 3E F8        	ld a,$f8
 383+ 9B61 80           	add b
 384+ 9B62 32 4B 8C     	ld (CTRL_DESPLZ),a
 385+ 9B65 18 1C        	jr 3F
 386+ 9B67 21 46 8C     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B6A 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B6B AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B6C 32 4B 8C     	ld (CTRL_DESPLZ),a
 390+ 9B6F 3A 56 8C     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B72 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B74 20 0A        	jr nz,2F
 393+ 9B76 2A 47 8C     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B79 23           	inc hl
 395+ 9B7A 22 47 8C     	ld (Posicion_actual),hl
 396+ 9B7D CD A9 94     	call Genera_coordenadas
 397+ 9B80
 398+ 9B80              ; Inicia el puntero de Sprite.
 399+ 9B80
 400+ 9B80 CD 9F 90     2 call Inicia_puntero_objeto_der
 401+ 9B83 C9           3 ret
 402+ 9B84
 403+ 9B84              ; ******************************************************************************************************************************************************************************************
 404+ 9B84              ;
 405+ 9B84              ;	15/02/23
 406+ 9B84              ;
 407+ 9B84              ;	Mov_left.
 408+ 9B84              ;
 409+ 9B84              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B84              ;
 411+ 9B84              Mov_left
 412+ 9B84
 413+ 9B84 21 44 8C     	ld hl,Ctrl_0
 414+ 9B87 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B89              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B89              ; 																	; _ en el caso de que no lo haya.
 417+ 9B89 3A 44 8C     	ld a,(Ctrl_0)
 418+ 9B8C CB 77        	bit 6,a
 419+ 9B8E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B90
 421+ 9B90 CD A6 9C     	call Stop_Amadeus_left
 422+ 9B93 C8           	ret z
 423+ 9B94 20 4A        	jr nz,8F
 424+ 9B96
 425+ 9B96 3A 38 8C     11 ld a,(Coordenada_X)
 426+ 9B99 A7           	and a
 427+ 9B9A 20 44        	jr nz,8F
 428+ 9B9C
 429+ 9B9C 3A 4B 8C     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B9F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BA0 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BA2
 433+ 9BA2              ; ---------- ---------- ----------
 434+ 9BA2
 435+ 9BA2 3A 5C 8C     	ld a,(Vel_left)
 436+ 9BA5 FE 02        	cp 2
 437+ 9BA7 28 0F        	jr z,1F
 438+ 9BA9 38 04        	jr c,6F
 439+ 9BAB FE 04        	cp 4
 440+ 9BAD 28 12        	jr z,7F
 441+ 9BAF
 442+ 9BAF              ; ---------- ---------- ----------
 443+ 9BAF
 444+ 9BAF 3A 4B 8C     6 ld a,(CTRL_DESPLZ)
 445+ 9BB2 FE F8        	cp $f8
 446+ 9BB4 20 2A        	jr nz,8F
 447+ 9BB6 18 10        	jr 4F
 448+ 9BB8 3A 4B 8C     1 ld a,(CTRL_DESPLZ)
 449+ 9BBB FE F9        	cp $f9
 450+ 9BBD 20 21        	jr nz,8F
 451+ 9BBF 18 07        	jr 4F
 452+ 9BC1 3A 4B 8C     7 ld a,(CTRL_DESPLZ)
 453+ 9BC4 FE FB        	cp $fb
 454+ 9BC6 20 18        	jr nz,8F
 455+ 9BC8
 456+ 9BC8              ; ---------- ---------- ----------
 457+ 9BC8
 458+ 9BC8              4
 459+ 9BC8 CD CE 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BCB              ;	call Reinicio
 461+ 9BCB
 462+ 9BCB              ; ---------- ---------- ----------
 463+ 9BCB
 464+ 9BCB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BCD C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BCE
 467+ 9BCE              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BCE              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BCE
 470+ 9BCE CD E7 9B     	call DESPLZ_IZQ
 471+ 9BD1 C1           	pop bc
 472+ 9BD2 10 F9        	djnz 5B
 473+ 9BD4 2A 47 8C     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BD7 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BD8 22 47 8C     	ld (Posicion_actual),hl
 476+ 9BDB CD A9 94     	call Genera_coordenadas
 477+ 9BDE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BE0
 479+ 9BE0              ; ---------- ---------- ----------
 480+ 9BE0
 481+ 9BE0              ; Movemos, no hay recolocación.
 482+ 9BE0
 483+ 9BE0 2A 47 8C     8 ld hl,(Posicion_actual)
 484+ 9BE3 CD E7 9B     	call DESPLZ_IZQ
 485+ 9BE6 C9           2 ret
 486+ 9BE7
 487+ 9BE7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BE7              ;
 489+ 9BE7              ;	22/9/22
 490+ 9BE7
 491+ 9BE7              DESPLZ_IZQ
 492+ 9BE7
 493+ 9BE7 CD F6 9B     	call Desplaza_izquierda
 494+ 9BEA CD 42 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BED CD 6A 9C     	call Ciclo_completo_2
 496+ 9BF0 21 44 8C     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BF3 CB BE        	res 7,(hl)
 498+ 9BF5 C9           	ret
 499+ 9BF6
 500+ 9BF6              Desplaza_izquierda
 501+ 9BF6
 502+ 9BF6 3A 5C 8C     	ld a,(Vel_left)
 503+ 9BF9 47           	ld b,a
 504+ 9BFA 2A 52 8C     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BFD 23           1 inc hl
 506+ 9BFE 23           	inc hl
 507+ 9BFF 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C01 22 52 8C     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C04 CD 8A 90     	call Extrae_address
 510+ 9C07 22 49 8C     	ld (Puntero_objeto),hl
 511+ 9C0A
 512+ 9C0A              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C0A
 514+ 9C0A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C0A              ; Cuántos movimientos hemos hecho ??
 516+ 9C0A              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C0A
 518+ 9C0A 2A 4E 8C     7 ld hl,(Indice_Sprite_izq)
 519+ 9C0D EB           	ex de,hl
 520+ 9C0E A7           	and a
 521+ 9C0F ED 52        	sbc hl,de
 522+ 9C11 CB 3D        	srl l
 523+ 9C13 3E 08        6 ld a,8
 524+ 9C15 95           	sub l
 525+ 9C16 30 1E        	jr nc,3F
 526+ 9C18
 527+ 9C18              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C18              ; B="0".
 529+ 9C18
 530+ 9C18 04           4 inc b
 531+ 9C19 3C           	inc a
 532+ 9C1A 20 FC        	jr nz,4B
 533+ 9C1C 78           	ld a,b
 534+ 9C1D 08           	ex af,af
 535+ 9C1E 2A 4E 8C     	ld hl,(Indice_Sprite_izq)
 536+ 9C21 23           5 inc hl
 537+ 9C22 23           	inc hl
 538+ 9C23 10 FC        	djnz 5B
 539+ 9C25 22 52 8C     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C28 CD 8A 90     	call Extrae_address
 541+ 9C2B 22 49 8C     	ld (Puntero_objeto),hl
 542+ 9C2E
 543+ 9C2E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C2E              ; _(Posicion_actual).
 545+ 9C2E
 546+ 9C2E 21 47 8C     	ld hl,Posicion_actual
 547+ 9C31 35           	dec (hl)
 548+ 9C32 08           	ex af,af
 549+ 9C33 6F           	ld l,a
 550+ 9C34 18 DD        	jr 6B
 551+ 9C36
 552+ 9C36              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C36
 554+ 9C36 47           3 ld b,a
 555+ 9C37 2A 4C 8C     	ld hl,(Indice_Sprite_der)
 556+ 9C3A 23           2 inc hl
 557+ 9C3B 23           	inc hl
 558+ 9C3C 10 FC        	djnz 2B
 559+ 9C3E 22 50 8C     	ld (Puntero_DESPLZ_der),hl
 560+ 9C41 C9           8 ret
 561+ 9C42
 562+ 9C42              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C42              ;
 564+ 9C42              ;	modifica_parametros_1er_DESPLZ
 565+ 9C42              ;
 566+ 9C42              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C42              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C42              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C42
 570+ 9C42 3A 4B 8C     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C45 A7           	and a
 572+ 9C46 20 1E        	jr nz,1F
 573+ 9C48 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C49 32 4B 8C         ld (CTRL_DESPLZ),a
 575+ 9C4C 21 46 8C     	ld hl,Columns
 576+ 9C4F 34           	inc (hl)
 577+ 9C50 3A 56 8C     	ld a,(Cuad_objeto)
 578+ 9C53 E6 01        	and 1
 579+ 9C55 20 0F        	jr nz,1F
 580+ 9C57 2A 47 8C     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C5A 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C5B 22 47 8C     	ld (Posicion_actual),hl
 583+ 9C5E CD A9 94     	call Genera_coordenadas
 584+ 9C61 CD BD 9C     	call Dec_CTRL_DESPLZ
 585+ 9C64 18 03        	jr 2F
 586+ 9C66 CD BD 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C69 C9           2 ret
 588+ 9C6A
 589+ 9C6A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C6A
 591+ 9C6A 3A 4B 8C     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C6D FE F7        	cp $f7
 593+ 9C6F 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C71 30 2C        	jr nc,3F
 595+ 9C73
 596+ 9C73              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C73
 598+ 9C73 06 00        	ld b,0
 599+ 9C75 04           4 inc b
 600+ 9C76 3C           	inc a
 601+ 9C77 FE F7        	cp $f7
 602+ 9C79 20 FA        	jr nz,4B
 603+ 9C7B 3E FF        	ld a,$ff
 604+ 9C7D 90           	sub b
 605+ 9C7E 32 4B 8C     	ld (CTRL_DESPLZ),a
 606+ 9C81 18 1C        	jr 3F
 607+ 9C83
 608+ 9C83              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C83
 610+ 9C83 21 46 8C     1 ld hl,Columns
 611+ 9C86 35           	dec (hl)
 612+ 9C87 AF           	xor a
 613+ 9C88 32 4B 8C     	ld (CTRL_DESPLZ),a
 614+ 9C8B 3A 56 8C     	ld a,(Cuad_objeto)
 615+ 9C8E E6 01        	and 1
 616+ 9C90 28 0A        	jr z,2F
 617+ 9C92 2A 47 8C     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C95 2B           	dec hl
 619+ 9C96 22 47 8C     	ld (Posicion_actual),hl
 620+ 9C99 CD A9 94     	call Genera_coordenadas
 621+ 9C9C
 622+ 9C9C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C9C
 624+ 9C9C CD B2 90     2 call Inicia_puntero_objeto_izq
 625+ 9C9F C9           3 ret
 626+ 9CA0
 627+ 9CA0              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CA0              ;
 629+ 9CA0              ;	19/10/22
 630+ 9CA0              ;
 631+ 9CA0              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CA0              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CA0
 634+ 9CA0 3A 38 8C     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CA3 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CA5 C9           	ret
 637+ 9CA6
 638+ 9CA6              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CA6              ;
 640+ 9CA6              ;	19/10/22
 641+ 9CA6              ;
 642+ 9CA6              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CA6              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CA6
 645+ 9CA6 3A 38 8C     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CA9 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CAB C9           	ret
 648+ 9CAC
 649+ 9CAC              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CAC              ;
 651+ 9CAC              ;	24/7/22
 652+ 9CAC              ;
 653+ 9CAC              ;	Inc_CTRL_DESPLZ
 654+ 9CAC              ;
 655+ 9CAC              ;
 656+ 9CAC              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CAC
 658+ 9CAC 21 4B 8C     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CAF 3A 5D 8C     	ld a,(Vel_right)
 660+ 9CB2 A7           	and a
 661+ 9CB3 28 06        	jr z,1F
 662+ 9CB5 47           	ld b,a
 663+ 9CB6 34           3 inc (hl)
 664+ 9CB7 10 FD        	djnz 3B
 665+ 9CB9 18 01        	jr 2F
 666+ 9CBB 34           1 inc (hl)
 667+ 9CBC C9           2 ret
 668+ 9CBD
 669+ 9CBD              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CBD              ;
 671+ 9CBD              ;	5/2/23
 672+ 9CBD              ;
 673+ 9CBD              ;	Dec_CTRL_DESPLZ
 674+ 9CBD              ;
 675+ 9CBD              ;
 676+ 9CBD              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CBD
 678+ 9CBD 21 4B 8C     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CC0 3A 5C 8C     	ld a,(Vel_left)
 680+ 9CC3 A7           	and a
 681+ 9CC4 28 06        	jr z,1F
 682+ 9CC6 47           	ld b,a
 683+ 9CC7 35           3 dec (hl)
 684+ 9CC8 10 FD        	djnz 3B
 685+ 9CCA 18 01        	jr 2F
 686+ 9CCC 35           1 dec (hl)
 687+ 9CCD C9           2 ret
 688+ 9CCE
 689+ 9CCE              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CCE
 691+ 9CCE 2A 47 8C     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CD1 01 1F 00     	ld bc,31
 693+ 9CD4 A7           	and a
 694+ 9CD5 ED 4A        	adc hl,bc
 695+ 9CD7 22 47 8C     	ld (Posicion_actual),hl
 696+ 9CDA 21 44 8C     	ld hl,Ctrl_0														; $xxx1
 697+ 9CDD CB C6        	set 0,(hl)
 698+ 9CDF C9           	ret
 699+ 9CE0
 700+ 9CE0              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CE0
 702+ 9CE0 2A 47 8C     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CE3 01 1F 00     	ld bc,31
 704+ 9CE6 A7           	and a
 705+ 9CE7 ED 42        	sbc hl,bc
 706+ 9CE9 22 47 8C     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CEC 21 44 8C     	ld hl,Ctrl_0
 708+ 9CEF CB CE        	set 1,(hl)
 709+ 9CF1 C9           	ret
 710+ 9CF2
 711+ 9CF2              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CF2
 713+ 9CF2 24           Reaparece_abajo inc h
 714+ 9CF3 01 E0 17     	ld bc,$17e0
 715+ 9CF6 A7           	and a
 716+ 9CF7 ED 4A        	adc hl,bc
 717+ 9CF9 22 47 8C     	ld (Posicion_actual),hl
 718+ 9CFC 21 44 8C     	ld hl,Ctrl_0
 719+ 9CFF CB D6        	set 2,(hl)
 720+ 9D01 C9           	ret
 721+ 9D02
 722+ 9D02              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D02
 724+ 9D02 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D05 A7           	and a
 726+ 9D06 ED 42        	sbc hl,bc
 727+ 9D08 22 47 8C     	ld (Posicion_actual),hl
 728+ 9D0B 21 44 8C     	ld hl,Ctrl_0
 729+ 9D0E CB DE        	set 3,(hl)
 730+ 9D10 C9           	ret
 731+ 9D11
 732+ 9D11              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D11              ;
 734+ 9D11              ;	15/07/23
 735+ 9D11
 736+ 9D11              Reinicio
 737+ 9D11
 738+ 9D11              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D11
 740+ 9D11 AF           	xor a
 741+ 9D12 21 6C 8C     	ld hl,Puntero_indice_mov_bucle
 742+ 9D15 CD 33 9D     	call Limpia_contenido_hl
 743+ 9D18
 744+ 9D18 21 47 8C     	ld hl,Posicion_actual
 745+ 9D1B CD 33 9D     	call Limpia_contenido_hl
 746+ 9D1E
 747+ 9D1E CD 8B 92     	call Inicializa_Puntero_indice_mov
 748+ 9D21 CD 32 9E     	call Inicia_Puntero_mov
 749+ 9D24
 750+ 9D24 21 6E 8C     	ld hl,Incrementa_puntero
 751+ 9D27 06 05        	ld b,5
 752+ 9D29 77           1 ld (hl),a
 753+ 9D2A 23           	inc hl
 754+ 9D2B 10 FC        	djnz 1B
 755+ 9D2D
 756+ 9D2D 21 43 8C     	ld hl,Ctrl_2
 757+ 9D30 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D32
 759+ 9D32 C9           	ret
 760+ 9D33
 761+ 9D33 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D34 23           	inc hl
 763+ 9D35 77           	ld (hl),a
 764+ 9D36 C9           	ret
 765+ 9D37
 766+ 9D37              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D37              ;
 768+ 9D37              ;	18/6/24
 769+ 9D37              ;
 770+ 9D37
 771+ 9D37              Amadeus_a_izquierda
 772+ 9D37
 773+ 9D37              ;	Actualiza contador de movimientos.
 774+ 9D37
 775+ 9D37 21 F5 89     	ld hl,Comm_Amadeus
 776+ 9D3A 35           	dec (hl)
 777+ 9D3B 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D3D
 779+ 9D3D 2A F3 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D40 2B           	dec hl
 781+ 9D41 2B           	dec hl
 782+ 9D42 2B           	dec hl
 783+ 9D43 2B           	dec hl
 784+ 9D44 22 F3 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D47
 786+ 9D47 21 9D 8C     	ld hl,Ctrl_3
 787+ 9D4A CB EE        	set 5,(hl)
 788+ 9D4C
 789+ 9D4C C9           	ret
 790+ 9D4D
 791+ 9D4D 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D4E C9           	ret
 793+ 9D4F
 794+ 9D4F
 795+ 9D4F              Amadeus_a_derecha
 796+ 9D4F
 797+ 9D4F              ;	Actualiza contador de movimientos.
 798+ 9D4F
 799+ 9D4F 21 F5 89     	ld hl,Comm_Amadeus
 800+ 9D52 34           	inc (hl)
 801+ 9D53 3E 7A        	ld a,$7a
 802+ 9D55 BE           	cp (hl)
 803+ 9D56 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D58
 805+ 9D58 2A F3 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D5B 23           	inc hl
 807+ 9D5C 23           	inc hl
 808+ 9D5D 23           	inc hl
 809+ 9D5E 23           	inc hl
 810+ 9D5F 22 F3 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D62
 812+ 9D62 21 9D 8C     	ld hl,Ctrl_3
 813+ 9D65 CB EE        	set 5,(hl)
 814+ 9D67 C9           	ret
 815+ 9D68
 816+ 9D68 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D69 C9           	ret
# file closed: Direcciones.asm
2285  9D6A              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D6A              ; ----- ----- ----- ----- -----
   2+ 9D6A              ;
   3+ 9D6A              ;   28/12/23
   4+ 9D6A
   5+ 9D6A              Movimiento
   6+ 9D6A
   7+ 9D6A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D6A
   9+ 9D6A 3A 43 8C         ld a,(Ctrl_2)
  10+ 9D6D CB 57            bit 2,a
  11+ 9D6F 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D71
  13+ 9D71 2A 6A 8C         ld hl,(Puntero_mov)
  14+ 9D74 7E               ld a,(hl)
  15+ 9D75
  16+ 9D75              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D75
  18+ 9D75              Inicia_desplazamiento.
  19+ 9D75
  20+ 9D75              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D75
  22+ 9D75 CD 68 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D78
  24+ 9D78              ; Iniciamos (Repetimos_mov).
  25+ 9D78
  26+ 9D78 7E               ld a,(hl)
  27+ 9D79 E6 0F            and $0f
  28+ 9D7B 32 70 8C         ld (Repetimos_desplazamiento),a
  29+ 9D7E 32 71 8C         ld (Repetimos_desplazamiento_backup),a
  30+ 9D81
  31+ 9D81              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D81
  33+ 9D81 23               inc hl
  34+ 9D82 7E               ld a,(hl)
  35+ 9D83 32 73 8C         ld (Cola_de_desplazamiento),a
  36+ 9D86 2B               dec hl
  37+ 9D87
  38+ 9D87 21 43 8C         ld hl,Ctrl_2
  39+ 9D8A CB D6            set 2,(hl)
  40+ 9D8C
  41+ 9D8C              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D8C              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D8C
  44+ 9D8C              Desplazamiento_iniciado
  45+ 9D8C
  46+ 9D8C CD 3C 9E         call Aplica_desplazamiento
  47+ 9D8F
  48+ 9D8F              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D8F
  50+ 9D8F 3A 9D 8C         ld a,(Ctrl_3)
  51+ 9D92 CB 4F            bit 1,a
  52+ 9D94 C0               ret nz
  53+ 9D95
  54+ 9D95 21 70 8C     3 ld hl,Repetimos_desplazamiento
  55+ 9D98 35               dec (hl)
  56+ 9D99 C0               ret nz
  57+ 9D9A
  58+ 9D9A              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D9A              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D9A              ; Analiza (Cola_de_desplazamiento).
  61+ 9D9A
  62+ 9D9A 3A 73 8C     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D9D A7               and a
  64+ 9D9E CC 91 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DA1 28 30            jr z,Reinicia_el_movimiento
  66+ 9DA3
  67+ 9DA3 FE FF            cp $ff
  68+ 9DA5 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DA7
  70+ 9DA7 FE FE            cp $fe
  71+ 9DA9 CC 16 9E         call z,Fijamos_bucle
  72+ 9DAC 28 25            jr z,Reinicia_el_movimiento
  73+ 9DAE
  74+ 9DAE FE FD            cp $fd
  75+ 9DB0 20 11            jr nz,1F
  76+ 9DB2
  77+ 9DB2              ; ---
  78+ 9DB2              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DB2
  80+ 9DB2 3A 43 8C         ld a,(Ctrl_2)
  81+ 9DB5 CB 5F            bit 3,a
  82+ 9DB7 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DB9
  84+ 9DB9              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DB9
  86+ 9DB9 21 43 8C         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DBC CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DBE
  89+ 9DBE CD 27 9E         call Inicia_Repetimos_movimiento
  90+ 9DC1 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DC3              ; ---
  92+ 9DC3
  93+ 9DC3 FE 01        1 cp 1
  94+ 9DC5 CA 00 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DC8
  96+ 9DC8 3D               dec a
  97+ 9DC9 32 73 8C         ld (Cola_de_desplazamiento),a
  98+ 9DCC
  99+ 9DCC 3A 71 8C         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DCF 32 70 8C         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DD2              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DD2 C9               ret
 103+ 9DD3
 104+ 9DD3              Reinicia_el_movimiento
 105+ 9DD3
 106+ 9DD3 3A 43 8C         ld a,(Ctrl_2)
 107+ 9DD6 CB 5F            bit 3,a
 108+ 9DD8 28 1B            jr z,2F
 109+ 9DDA
 110+ 9DDA              ; (Cola_de_desplazamiento)="254".
 111+ 9DDA
 112+ 9DDA 21 72 8C         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DDD 35               dec (hl)
 114+ 9DDE 20 15            jr nz,2F
 115+ 9DE0
 116+ 9DE0              ; Fin de las repeticiones del último movimiento.
 117+ 9DE0
 118+ 9DE0 21 43 8C         ld hl,Ctrl_2
 119+ 9DE3 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DE5
 121+ 9DE5 2A 6A 8C         ld hl,(Puntero_mov)
 122+ 9DE8 23               inc hl
 123+ 9DE9 23               inc hl
 124+ 9DEA 23               inc hl
 125+ 9DEB 22 6A 8C         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DEE              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DEE 7E               ld a,(hl)
 128+ 9DEF 32 73 8C         ld (Cola_de_desplazamiento),a
 129+ 9DF2
 130+ 9DF2 C3 9A 9D         jp Cola
 131+ 9DF5
 132+ 9DF5 CD 32 9E     2 call Inicia_Puntero_mov
 133+ 9DF8
 134+ 9DF8 21 43 8C         ld hl,Ctrl_2
 135+ 9DFB CB 96            res 2,(hl)
 136+ 9DFD
 137+ 9DFD C3 6A 9D         jp Movimiento
 138+ 9E00
 139+ 9E00              Siguiente_desplazamiento
 140+ 9E00
 141+ 9E00              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E00              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E00
 144+ 9E00 21 43 8C         ld hl,Ctrl_2
 145+ 9E03 CB 96            res 2,(hl)
 146+ 9E05
 147+ 9E05 2A 6A 8C         ld hl,(Puntero_mov)
 148+ 9E08 23               inc hl
 149+ 9E09 23               inc hl
 150+ 9E0A 22 6A 8C         ld (Puntero_mov),hl
 151+ 9E0D
 152+ 9E0D 7E               ld a,(hl)
 153+ 9E0E A7               and a
 154+ 9E0F CC 91 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E12 CA D3 9D         jp z,Reinicia_el_movimiento
 156+ 9E15
 157+ 9E15 C9               ret
 158+ 9E16
 159+ 9E16              ; Subrutinas -----------------------------------------
 160+ 9E16              ; ---------- --------- --------- ---------- ----------
 161+ 9E16              ;
 162+ 9E16              ;   24/07/23
 163+ 9E16              ;
 164+ 9E16              ;   Fijamos_bucle
 165+ 9E16              ;
 166+ 9E16              ;
 167+ 9E16
 168+ 9E16              Fijamos_bucle
 169+ 9E16
 170+ 9E16 3A 6E 8C         ld a,(Incrementa_puntero)
 171+ 9E19 3C               inc a
 172+ 9E1A 32 6F 8C         ld (Incrementa_puntero_backup),a
 173+ 9E1D
 174+ 9E1D CD 91 9E         call Incrementa_Puntero_indice_mov
 175+ 9E20 2A 68 8C         ld hl,(Puntero_indice_mov)
 176+ 9E23 22 6C 8C         ld (Puntero_indice_mov_bucle),hl
 177+ 9E26 C9               ret
 178+ 9E27
 179+ 9E27              ; ---------- --------- --------- ---------- ----------
 180+ 9E27              ;
 181+ 9E27              ;   07/7/23
 182+ 9E27              ;
 183+ 9E27              ;   Inicia_Repetimos_movimiento
 184+ 9E27              ;
 185+ 9E27              ;
 186+ 9E27
 187+ 9E27              Inicia_Repetimos_movimiento
 188+ 9E27
 189+ 9E27              ; Iniciamos (Repetimos_movimiento).
 190+ 9E27
 191+ 9E27 DD 2A 6A 8C      ld ix,(Puntero_mov)
 192+ 9E2B DD 7E 02         ld a,(ix+2)
 193+ 9E2E 32 72 8C         ld (Repetimos_movimiento),a
 194+ 9E31
 195+ 9E31 C9               ret
 196+ 9E32
 197+ 9E32              ; ---------- --------- --------- ---------- ----------
 198+ 9E32              ;
 199+ 9E32              ;   26/6/23
 200+ 9E32              ;
 201+ 9E32              ;   Inicia_Puntero_mov
 202+ 9E32              ;
 203+ 9E32              ;
 204+ 9E32
 205+ 9E32 2A 68 8C     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E35 CD 8A 90         call Extrae_address
 207+ 9E38 22 6A 8C         ld (Puntero_mov),hl
 208+ 9E3B C9               ret
 209+ 9E3C
 210+ 9E3C              ; ---------- --------- --------- ---------- ----------
 211+ 9E3C              ;
 212+ 9E3C              ;   27/06/23
 213+ 9E3C              ;
 214+ 9E3C              ;   Aplica_movimiento.
 215+ 9E3C
 216+ 9E3C              Aplica_desplazamiento
 217+ 9E3C
 218+ 9E3C              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E3C
 220+ 9E3C 2A 6A 8C         ld hl, (Puntero_mov)
 221+ 9E3F
 222+ 9E3F 7E               ld a,(hl)
 223+ 9E40 E6 F0            and $f0
 224+ 9E42 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E43
 226+ 9E43 CB 7E            bit 7,(hl)
 227+ 9E45 28 03            jr z,1F
 228+ 9E47 CD 1E 9A         call Mov_up
 229+ 9E4A 2A 6A 8C     1 ld hl, (Puntero_mov)
 230+ 9E4D CB 76            bit 6,(hl)
 231+ 9E4F 28 03            jr z,2F
 232+ 9E51 CD E5 99         call Mov_down
 233+ 9E54
 234+ 9E54              ; Se ha aplicado reinicio ???
 235+ 9E54              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E54
 237+ 9E54              ;    ld a,(Ctrl_3)
 238+ 9E54              ;    bit 1,a
 239+ 9E54              ;    ret nz
 240+ 9E54
 241+ 9E54 2A 6A 8C     2 ld hl, (Puntero_mov)
 242+ 9E57 CB 6E            bit 5,(hl)
 243+ 9E59 28 03            jr z,3F
 244+ 9E5B CD 84 9B         call Mov_left
 245+ 9E5E 2A 6A 8C     3 ld hl, (Puntero_mov)
 246+ 9E61 CB 66            bit 4,(hl)
 247+ 9E63 C8               ret z
 248+ 9E64 CD 61 9A         call Mov_right
 249+ 9E67 C9               ret
 250+ 9E68
 251+ 9E68              ; ---------- --------- --------- ---------- ----------
 252+ 9E68              ;
 253+ 9E68              ;   26/06/23
 254+ 9E68              ;
 255+ 9E68              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E68
 257+ 9E68              Ajusta_velocidad_desplazamiento
 258+ 9E68
 259+ 9E68              ; 1er byte de la cadena de movimiento.
 260+ 9E68              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E68
 262+ 9E68 CD 86 9E         call Extrae_nibble_alto
 263+ 9E6B
 264+ 9E6B 32 5E 8C         ld (Vel_up),a
 265+ 9E6E 79               ld a,c
 266+ 9E6F E6 0F            and $0f
 267+ 9E71 32 5F 8C         ld (Vel_down),a
 268+ 9E74
 269+ 9E74              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E74              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E74
 272+ 9E74 23               inc hl
 273+ 9E75 CD 86 9E         call Extrae_nibble_alto
 274+ 9E78
 275+ 9E78 32 5C 8C         ld (Vel_left),a
 276+ 9E7B 79               ld a,c
 277+ 9E7C E6 0F            and $0f
 278+ 9E7E 32 5D 8C         ld (Vel_right),a
 279+ 9E81
 280+ 9E81              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E81
 282+ 9E81 23               inc hl
 283+ 9E82 22 6A 8C         ld (Puntero_mov),hl
 284+ 9E85 C9               ret
 285+ 9E86
 286+ 9E86 06 04        Extrae_nibble_alto ld b,4
 287+ 9E88 7E               ld a,(hl)
 288+ 9E89 4F               ld c,a
 289+ 9E8A E6 F0            and $f0
 290+ 9E8C CB 3F        1 srl a
 291+ 9E8E 10 FC            djnz 1B
 292+ 9E90 C9               ret
 293+ 9E91
 294+ 9E91              ; ---------- --------- --------- ---------- ----------
 295+ 9E91              ;
 296+ 9E91              ;   5/7/23
 297+ 9E91              ;
 298+ 9E91              ;   Incrementa_Puntero_indice_mov
 299+ 9E91
 300+ 9E91              Incrementa_Puntero_indice_mov
 301+ 9E91
 302+ 9E91 21 6E 8C         ld hl,Incrementa_puntero
 303+ 9E94 34               inc (hl)
 304+ 9E95
 305+ 9E95 2A 68 8C         ld hl,(Puntero_indice_mov)
 306+ 9E98 01 02 00         ld bc,2
 307+ 9E9B A7               and a
 308+ 9E9C 09               add hl,bc
 309+ 9E9D 22 68 8C         ld (Puntero_indice_mov),hl
 310+ 9EA0
 311+ 9EA0 7E               ld a,(hl)
 312+ 9EA1 A7               and a
 313+ 9EA2
 314+ 9EA2              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9EA2
 316+ 9EA2              ;    jr z,$
 317+ 9EA2
 318+ 9EA2              ;! Reinicia el Patrón de movimiento.
 319+ 9EA2
 320+ 9EA2 CC A7 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9EA5
 322+ 9EA5 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9EA6
 324+ 9EA6 C9               ret
 325+ 9EA7
 326+ 9EA7              ; ---------- --------- --------- ---------- ----------
 327+ 9EA7              ;
 328+ 9EA7              ;   15/01/24
 329+ 9EA7              ;
 330+ 9EA7              ;   Inicializa_Puntero_indice_mov
 331+ 9EA7
 332+ 9EA7              Inicializa_Puntero_indice_mov_2
 333+ 9EA7
 334+ 9EA7              ; Existe etiqueta de bucle principal???
 335+ 9EA7
 336+ 9EA7 2A 6C 8C         ld hl,(Puntero_indice_mov_bucle)
 337+ 9EAA 24               inc h
 338+ 9EAB 25               dec h
 339+ 9EAC 28 05            jr z,2F
 340+ 9EAE
 341+ 9EAE 22 68 8C         ld (Puntero_indice_mov),hl
 342+ 9EB1 18 14            jr 3F
 343+ 9EB3
 344+ 9EB3              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EB3
 346+ 9EB3 3A 6E 8C     2 ld a,(Incrementa_puntero)
 347+ 9EB6 47               ld b,a
 348+ 9EB7
 349+ 9EB7 2A 68 8C         ld hl,(Puntero_indice_mov)
 350+ 9EBA 2B           1 dec hl
 351+ 9EBB 2B               dec hl
 352+ 9EBC 10 FC            djnz 1B
 353+ 9EBE 22 68 8C         ld (Puntero_indice_mov),hl
 354+ 9EC1
 355+ 9EC1 AF               xor a
 356+ 9EC2 32 6E 8C         ld (Incrementa_puntero),a
 357+ 9EC5 18 06            jr 4F
 358+ 9EC7
 359+ 9EC7 3A 6F 8C     3 ld a,(Incrementa_puntero_backup)
 360+ 9ECA 32 6E 8C         ld (Incrementa_puntero),a
 361+ 9ECD C9           4 ret
 362+ 9ECE
 363+ 9ECE              ; ----------------------------------------------------------------------
 364+ 9ECE              ;
 365+ 9ECE              ;   30/01/24
 366+ 9ECE              ;
 367+ 9ECE              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9ECE
 369+ 9ECE 3A 37 8C     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9ED1 CD 26 94         call Calcula_salto_en_BC
 371+ 9ED4 21 60 8C         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9ED7 A7               and a
 373+ 9ED8 ED 4A            adc hl,bc
 374+ 9EDA C9               ret
 375+ 9EDB
 376+ 9EDB              ; ----------------------------------------------------------------------
 377+ 9EDB              ;
 378+ 9EDB              ;   30/01/24
 379+ 9EDB              ;
 380+ 9EDB              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EDB              ;
 382+ 9EDB              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EDB
 384+ 9EDB 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EDC 23               inc hl
 386+ 9EDD 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EDE 69               ld l,c
 388+ 9EDF 60               ld h,b
 389+ 9EE0 22 40 8C         ld (Contador_de_mov_masticados),hl
 390+ 9EE3 C9               ret
 391+ 9EE4
# file closed: Movimiento.asm
2286  9EE4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9EE4              ; --------------------------------------------------------------------------------------
   2+ 9EE4              ;
   3+ 9EE4              ;   12/8/24
   4+ 9EE4              ;
   5+ 9EE4
   6+ 9EE4              Genera_disparo_Amadeus
   7+ 9EE4
   8+ 9EE4              ;   Exclusiones.
   9+ 9EE4
  10+ 9EE4 3A B6 8C         ld a,(Disparo_Amadeus)
  11+ 9EE7 A7               and a
  12+ 9EE8 C8               ret z                                                    ; Salimos si el disparo de nuestra nave no está habilitado.
  13+ 9EE9
  14+ 9EE9              Define_puntero_objeto_disparo
  15+ 9EE9
  16+ 9EE9              ;    dec a
  17+ 9EE9              ;    ld (Disparo_Amadeus),a                                  ;  Deshabilita el disparo.
  18+ 9EE9
  19+ 9EE9              ;   Inicializamos contador.
  20+ 9EE9
  21+ 9EE9 06 00            ld b,0
  22+ 9EEB 2A F1 89         ld hl,(p.imp.amadeus)
  23+ 9EEE 2C               inc l
  24+ 9EEF
  25+ 9EEF 3E 80            ld a,$80
  26+ 9EF1 BE               cp (hl)
  27+ 9EF2 28 0D            jr z,1F
  28+ 9EF4
  29+ 9EF4 04               inc b
  30+ 9EF5 3E 60            ld a,$60
  31+ 9EF7 BE               cp (hl)
  32+ 9EF8 28 07            jr z,1F
  33+ 9EFA
  34+ 9EFA 04               inc b
  35+ 9EFB 3E 18            ld a,$18
  36+ 9EFD BE               cp (hl)
  37+ 9EFE 28 01            jr z,1F
  38+ 9F00
  39+ 9F00 04               inc b
  40+ 9F01
  41+ 9F01              ;   Calcula el Puntero_de_impresión del disparo.
  42+ 9F01
  43+ 9F01 CD AE 99     1 call PreviousScan
  44+ 9F04 CD AE 99         call PreviousScan
  45+ 9F07 CD AE 99         call PreviousScan
  46+ 9F0A
  47+ 9F0A 78               ld a,b
  48+ 9F0B CB 3F            srl a
  49+ 9F0D 28 03            jr z,4F
  50+ 9F0F
  51+ 9F0F              ; --- Guarda el puntero_de_impresión del disparo en la pila.
  52+ 9F0F E5               push hl
  53+ 9F10 18 02            jr 5F
  54+ 9F12 2D           4 dec l
  55+ 9F13 E5               push hl
  56+ 9F14              ; ---
  57+ 9F14
  58+ 9F14              ;   Calcula el Puntero_objeto del disparo.
  59+ 9F14
  60+ 9F14 21 C0 83     5 ld hl,Indice_disparo
  61+ 9F17 04               inc b
  62+ 9F18 05               dec b
  63+ 9F19 28 04            jr z,2F
  64+ 9F1B
  65+ 9F1B              ;   Nos desplazamos por el índice de disparos.
  66+ 9F1B
  67+ 9F1B 2C           3 inc l
  68+ 9F1C 2C               inc l
  69+ 9F1D 10 FC            djnz 3B
  70+ 9F1F
  71+ 9F1F              ; --- Guarda el Puntero_objeto del disparo en la pila.
  72+ 9F1F CD 8A 90     2 call Extrae_address
  73+ 9F22 E5               push hl
  74+ 9F23              ; ---
  75+ 9F23
  76+ 9F23              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
  77+ 9F23              ; HL en el 1er .db de la caja y (Puntero_DESPLZ_DISPARO_AMADEUS) avanza una posición en el índice.
  78+ 9F23
  79+ 9F23 2A A1 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
  80+ 9F26 CD 8A 90         call Extrae_address
  81+ 9F29
  82+ 9F29 06 02            ld b,2
  83+ 9F2B
  84+ 9F2B D1           6 pop de
  85+ 9F2C 73               ld (hl),e
  86+ 9F2D 23               inc hl
  87+ 9F2E 72               ld (hl),d
  88+ 9F2F 23               inc hl
  89+ 9F30
  90+ 9F30 10 F9            djnz 6B
  91+ 9F32
  92+ 9F32              Detecta_impacto_en_disparo_de_Amadeus
  93+ 9F32
  94+ 9F32 CD 67 9F         call Detecta_impacto_en_disparo_de_Amadeus01
  95+ 9F35
  96+ 9F35 2A A1 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
  97+ 9F38 23               inc hl
  98+ 9F39 23               inc hl
  99+ 9F3A CD 8A 90         call Extrae_address
 100+ 9F3D 2B               dec hl                                               ;  Sitúa el puntero en el .db (Impacto) de la caja del disparo.
 101+ 9F3E 28 02            jr z,7F
 102+ 9F40 3E 01            ld a,1
 103+ 9F42 77           7 ld (hl),a
 104+ 9F43 C8               ret z
 105+ 9F44
 106+ 9F44              Genera_coordenadas_de_disparo_Amadeus
 107+ 9F44
 108+ 9F44              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 109+ 9F44              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 110+ 9F44
 111+ 9F44 F3               di
 112+ 9F45 18 FE            jr $
 113+ 9F47 FB               ei
 114+ 9F48
 115+ 9F48 2A A1 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 116+ 9F4B CD 8A 90         call Extrae_address
 117+ 9F4E 23               inc hl
 118+ 9F4F 23               inc hl
 119+ 9F50
 120+ 9F50 CD 8A 90         call Extrae_address                                 ;   Puntero_de_impresión del disparo en HL.
 121+ 9F53 CD A9 94         call Genera_coordenadas
 122+ 9F56
 123+ 9F56 3D               dec a
 124+ 9F57
 125+ 9F57 21 A6 8C         ld hl,Coordenadas_disparo_certero
 126+ 9F5A 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 127+ 9F5B 23               inc hl
 128+ 9F5C 3A 38 8C         ld a,(Coordenada_X)
 129+ 9F5F 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 130+ 9F60
 131+ 9F60 21 A3 8C         ld hl,Impacto2
 132+ 9F63 CB DE            set 3,(hl)                                          ;   Indica que un disparo de nuestra nave ha alcanzado a una entidad.
 133+ 9F65
 134+ 9F65 AF               xor a                                               ;   Siempre "Z" cuando ejecutamos [Genera_disparo_Amadeus].
 135+ 9F66 C9               ret
 136+ 9F67
 137+ 9F67              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 138+ 9F67              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 139+ 9F67              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 140+ 9F67
 141+ 9F67              ; ----------------------------------------------
 142+ 9F67              ;
 143+ 9F67              ;   12/08/24
 144+ 9F67              ;
 145+ 9F67
 146+ 9F67
 147+ 9F67              Detecta_impacto_en_disparo_de_Amadeus01
 148+ 9F67
 149+ 9F67              Extraccion_de_datos
 150+ 9F67
 151+ 9F67 21 86 89         ld hl,Indice_de_disparos_Amadeus
 152+ 9F6A CD 8A 90         call Extrae_address
 153+ 9F6D
 154+ 9F6D 5E               ld e,(hl)
 155+ 9F6E 23               inc hl
 156+ 9F6F 56               ld d,(hl)
 157+ 9F70 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 158+ 9F71
 159+ 9F71 4E               ld c,(hl)
 160+ 9F72 23               inc hl
 161+ 9F73 46               ld b,(hl)
 162+ 9F74 23               inc hl                                                 ;    Puntero_de_impresión del disparo en BC.
 163+ 9F75
 164+ 9F75 C5               push bc
 165+ 9F76 E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 166+ 9F77
 167+ 9F77              Detecta_impacto_
 168+ 9F77
 169+ 9F77 1A               ld a,(de)
 170+ 9F78 A6               and (hl)
 171+ 9F79 C0               ret nz
 172+ 9F7A
 173+ 9F7A 13               inc de
 174+ 9F7B 23               inc hl
 175+ 9F7C
 176+ 9F7C 1A               ld a,(de)
 177+ 9F7D A6               and (hl)
 178+ 9F7E C9               ret
 179+ 9F7F
 180+ 9F7F              ; -------------------------------------------------------------------------------------------------------------
 181+ 9F7F              ;
 182+ 9F7F              ;   8/8/24
 183+ 9F7F              ;
 184+ 9F7F              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 185+ 9F7F              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 186+ 9F7F              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 187+ 9F7F              ;
 188+ 9F7F              ;   MODIFICA: HL,DE,BC y A.
 189+ 9F7F              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 190+ 9F7F              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 191+ 9F7F
 192+ 9F7F              Colision_Entidad_Amadeus
 193+ 9F7F
 194+ 9F7F              ; Posible contacto de entidad con Amadeus. ?????
 195+ 9F7F
 196+ 9F7F              ; Exclusiones:
 197+ 9F7F
 198+ 9F7F 3A C2 8C         ld a,(Shield)
 199+ 9F82 A7               and a
 200+ 9F83 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 201+ 9F84
 202+ 9F84 21 9D 8C         ld hl,Ctrl_3
 203+ 9F87 CB 76            bit 6,(hl)
 204+ 9F89 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 205+ 9F8A
 206+ 9F8A 21 A3 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 207+ 9F8D CB 56            bit 2,(hl)
 208+ 9F8F C0               ret nz
 209+ 9F90
 210+ 9F90 3A 39 8C     	ld a,(Coordenada_y)
 211+ 9F93 FE 14        	cp $14
 212+ 9F95 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 213+ 9F96
 214+ 9F96 3A F0 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 215+ 9F99 A7               and a
 216+ 9F9A C0               ret nz
 217+ 9F9B
 218+ 9F9B              Genera_coordenadas_X
 219+ 9F9B
 220+ 9F9B              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 221+ 9F9B              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 222+ 9F9B
 223+ 9F9B              ;   Limpiamos almacenes.
 224+ 9F9B
 225+ 9F9B              ;    call Limpia_Coordenadas_X
 226+ 9F9B
 227+ 9F9B              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 228+ 9F9B
 229+ 9F9B 21 A8 8C         ld hl,Coordenadas_X_Entidad
 230+ 9F9E 3A 38 8C         ld a,(Coordenada_X)
 231+ 9FA1 CD C3 9F         call Guarda_coordenadas_X
 232+ 9FA4
 233+ 9FA4              ;   Almacenamos las coordenadas X de Amadeus.
 234+ 9FA4
 235+ 9FA4 3A ED 89         ld a,(CX_Amadeus)
 236+ 9FA7 CD C3 9F         call Guarda_coordenadas_X
 237+ 9FAA CD D7 9F         call Compara_coordenadas_X
 238+ 9FAD C0               ret nz
 239+ 9FAE
 240+ 9FAE 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 241+ 9FB0 32 3B 8C         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 242+ 9FB3
 243+ 9FB3 2A 77 8C         ld hl,(Puntero_store_caja)
 244+ 9FB6 2C               inc l
 245+ 9FB7 2C               inc l
 246+ 9FB8 2C               inc l
 247+ 9FB9 2C               inc l
 248+ 9FBA 22 A4 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 249+ 9FBD
 250+ 9FBD 21 A3 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 251+ 9FC0 CB D6            set 2,(hl)
 252+ 9FC2
 253+ 9FC2 C9               ret
 254+ 9FC3
 255+ 9FC3               ; ----- ----- ----- ----- -----
 256+ 9FC3
 257+ 9FC3 77           Guarda_coordenadas_X ld (hl),a
 258+ 9FC4 3C               inc a
 259+ 9FC5 2C               inc l
 260+ 9FC6 77               ld (hl),a
 261+ 9FC7 3C               inc a
 262+ 9FC8 2C               inc l
 263+ 9FC9 77               ld (hl),a
 264+ 9FCA 2C               inc l
 265+ 9FCB C9               ret
 266+ 9FCC
 267+ 9FCC AF           Limpia_Coordenadas_X xor a
 268+ 9FCD 06 06            ld b,6
 269+ 9FCF 21 AB 8C         ld hl,Coordenadas_X_Amadeus
 270+ 9FD2 77           1 ld (hl),a
 271+ 9FD3 23               inc hl
 272+ 9FD4 10 FC            djnz 1B
 273+ 9FD6 C9               ret
 274+ 9FD7
 275+ 9FD7              ; ----- ----- ----- ----- -----
 276+ 9FD7
 277+ 9FD7              Compara_coordenadas_X
 278+ 9FD7
 279+ 9FD7 DD 21 A8 8C      ld ix,Coordenadas_X_Entidad
 280+ 9FDB DD 7E 00         ld a,(ix+0)
 281+ 9FDE CD EC 9F         call Comparando
 282+ 9FE1 C8               ret z
 283+ 9FE2
 284+ 9FE2 3C               inc a
 285+ 9FE3 CD FB 9F         call Comparando_1
 286+ 9FE6 C8               ret z
 287+ 9FE7
 288+ 9FE7 3C               inc a
 289+ 9FE8 CD FB 9F         call Comparando_1
 290+ 9FEB C9               ret
 291+ 9FEC
 292+ 9FEC              ; ----- ----- ----- ----- -----
 293+ 9FEC              ;
 294+ 9FEC              ;   4/12/23
 295+ 9FEC              ;
 296+ 9FEC              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 297+ 9FEC
 298+ 9FEC              Comparando
 299+ 9FEC
 300+ 9FEC DD 2C            inc ixl
 301+ 9FEE DD 2C            inc ixl
 302+ 9FF0 DD 2C            inc ixl
 303+ 9FF2
 304+ 9FF2 DD 46 00         ld b,(ix+0)
 305+ 9FF5 DD 4E 01         ld c,(ix+1)
 306+ 9FF8 DD 56 02         ld d,(ix+2)
 307+ 9FFB
 308+ 9FFB B8           Comparando_1 cp b
 309+ 9FFC C8               ret z
 310+ 9FFD B9               cp c
 311+ 9FFE C8               ret z
 312+ 9FFF BA               cp d
 313+ A000 C9               ret
 314+ A001
 315+ A001              ; -----------------------------------------------------------------------
 316+ A001              ;
 317+ A001              ;   04/7/24
 318+ A001              ;
 319+ A001
 320+ A001              Detecta_colision_nave_entidad
 321+ A001
 322+ A001              ; Exclusiones:
 323+ A001
 324+ A001              ; Salimos de la rutina si no hay advertencia de posible colisión.
 325+ A001
 326+ A001 21 A3 8C     	ld hl,Impacto2
 327+ A004 CB 56        	bit 2,(hl)
 328+ A006 C8           	ret z
 329+ A007
 330+ A007              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 331+ A007
 332+ A007 2A F3 89         ld hl,(Pamm_Amadeus)
 333+ A00A CD 8A 90         call Extrae_address
 334+ A00D 54               ld d,h
 335+ A00E 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 336+ A00F
 337+ A00F 2A F1 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 338+ A012 06 10            ld b,16                                        ; Contador de scanlines en B.
 339+ A014 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 340+ A017
 341+ A017 C5           1 push bc
 342+ A018 06 03            ld b,3
 343+ A01A E5               push hl
 344+ A01B
 345+ A01B              ; .db
 346+ A01B
 347+ A01B 1A           3 ld a,(de)
 348+ A01C A7               and a
 349+ A01D 20 03            jr nz,4F
 350+ A01F
 351+ A01F 2C               inc l
 352+ A020 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 353+ A022
 354+ A022 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 355+ A024 28 04            jr z,2F
 356+ A026
 357+ A026              ; Impacto.
 358+ A026 FD 2D            dec iyl
 359+ A028 28 22            jr z,5F
 360+ A02A
 361+ A02A 1C           2 inc e
 362+ A02B 10 EE            djnz 3B
 363+ A02D
 364+ A02D E1               pop hl
 365+ A02E
 366+ A02E              ; Hay salto de línea en el puntero de impresión ???
 367+ A02E
 368+ A02E 7C               ld a,h
 369+ A02F D6 57            sub $57
 370+ A031 20 0A            jr nz,6F
 371+ A033
 372+ A033              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 373+ A033
 374+ A033 2A F1 89         ld hl,(p.imp.amadeus)
 375+ A036 3E 20            ld a,$20
 376+ A038 A7               and a
 377+ A039 85               add l
 378+ A03A 6F               ld l,a
 379+ A03B 18 01            jr 7F
 380+ A03D
 381+ A03D 24           6 inc h
 382+ A03E
 383+ A03E C1           7 pop bc
 384+ A03F 10 D6            djnz 1B
 385+ A041
 386+ A041              ;   Fin de la comparativa.
 387+ A041
 388+ A041              ;   NO HAY COLISIÓN !!!!!.
 389+ A041              ;
 390+ A041              ;   .db (Impacto) de Amadeus a "0".
 391+ A041              ;   RES el bit2 de (Impacto2).
 392+ A041              ;
 393+ A041              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 394+ A041              ;   Lo colocamos a "0".
 395+ A041
 396+ A041 21 A3 8C         ld hl,Impacto2
 397+ A044 CB 96            res 2,(hl)
 398+ A046 2A A4 8C         ld hl,(Entidad_sospechosa_de_colision)
 399+ A049 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 400+ A04B C9               ret
 401+ A04C
 402+ A04C              ;   COLISIÓN !!!!!.
 403+ A04C              ;
 404+ A04C              ;   .db (Impacto) de Amadeus a "1".
 405+ A04C              ;   SET el bit3 de (Impacto2).
 406+ A04C              ;
 407+ A04C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 408+ A04C
 409+ A04C E1           5 pop hl
 410+ A04D C1               pop bc
 411+ A04E
 412+ A04E 21 F0 89         ld hl,Impacto_Amadeus
 413+ A051 36 01            ld (hl),1
 414+ A053 21 A3 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 415+ A056 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 416+ A058
 417+ A058 11 30 88         ld de,Indice_Explosion_entidades
 418+ A05B 2A A4 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 419+ A05E
 420+ A05E 23               inc hl
 421+ A05F 23               inc hl
 422+ A060 23               inc hl
 423+ A061
 424+ A061 73               ld (hl),e
 425+ A062 23               inc hl
 426+ A063 72               ld (hl),d
 427+ A064
 428+ A064              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 429+ A064
 430+ A064 11 C6 88         ld de,Indice_Explosion_Amadeus
 431+ A067 21 F3 89         ld hl,Pamm_Amadeus
 432+ A06A
 433+ A06A 73               ld (hl),e
 434+ A06B 23               inc hl
 435+ A06C 72               ld (hl),d
 436+ A06D
 437+ A06D C9               ret
 438+ A06E
 439+ A06E
 440+ A06E
# file closed: Disparo.asm
2287  A06E
2288  A06E              	SAVESNA "Pruebas.sna", START
2289  A06E
2290  A06E
2291  A06E
2292  A06E
# file closed: Banco_de_pruebas.asm
