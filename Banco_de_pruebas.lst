# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 92 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 B1 84        	defw Entidad_1
  98+ 846A EC 84        	defw Entidad_2
  99+ 846C 27 85        	defw Entidad_3
 100+ 846E 62 85        	defw Entidad_4
 101+ 8470 9D 85        	defw Entidad_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480
 119+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 120+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B
 127+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 128+ 848F
 129+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 130+ 8490
 131+ 8490 00 00        	db 0,0											; Variables_de_borrado
 132+ 8492 00 00        	defw 0											;	" " " " " " "
 133+ 8494 00 00        	defw 0											;	" " " " " " "
 134+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 135+ 849A
 136+ 849A 00 00        	db 0,0											; Variables_de_pintado
 137+ 849C 00 00        	defw 0											;	" " " " " " "
 138+ 849E 00 00        	defw 0											;	" " " " " " "
 139+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 140+ 84A4
 141+ 84A4 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 142+ 84A6
 143+ 84A6 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 144+ 84AA 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 145+ 84AD
 146+ 84AD 00           	db 0 											; (Columnas).
 147+ 84AE 00 00        	defw 0											; (Limite_horizontal).
 148+ 84B0 00           	db 0											; (Limite_vertical).
 149+ 84B1
 150+ 84B1              ; ---------- ---------- ---------- ---------- ----------
 151+ 84B1
 152+ 84B1 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 153+ 84B3 00 00        	defw 0											; (Posicion_actual).
 154+ 84B5 00 00        	defw 0 											; (Puntero_objeto).
 155+ 84B7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 84BA
 157+ 84BA 00           	db %00000000 									; (Attr).
 158+ 84BB
 159+ 84BB 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 84BD 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 84C1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 84C3
 164+ 84C3 00 00        	defw 0											; (Posicion_inicio).
 165+ 84C5 00           	db 0											; (Cuad_objeto).
 166+ 84C6
 167+ 84C6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 84CA
 169+ 84CA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 84CB
 171+ 84CB 00 00        	db 0,0										    ; Variables_de_borrado
 172+ 84CD 00 00        	defw 0											;	" " " " " " "
 173+ 84CF 00 00        	defw 0											;	" " " " " " "
 174+ 84D1 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 84D5
 176+ 84D5 00 00        	db 0,0											; Variables_de_pintado
 177+ 84D7 00 00        	defw 0											;	" " " " " " "
 178+ 84D9 00 00        	defw 0											;	" " " " " " "
 179+ 84DB 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 84DF
 181+ 84DF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 182+ 84E1
 183+ 84E1 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 184+ 84E5 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 185+ 84E8
 186+ 84E8 00           	db 0 											; (Columnas).
 187+ 84E9 00 00        	defw 0											; (Limite_horizontal).
 188+ 84EB 00           	db 0											; (Limite_vertical).
 189+ 84EC
 190+ 84EC              ; ---------- ---------- ---------- ---------- ----------
 191+ 84EC
 192+ 84EC 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 193+ 84EE 00 00        	defw 0                                          ; (Posicion_actual).
 194+ 84F0 00 00        	defw 0											; (Puntero_objeto).
 195+ 84F2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 196+ 84F5
 197+ 84F5 02           	db %00000010									; (Attr).
 198+ 84F6
 199+ 84F6 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 200+ 84F8 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 201+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 202+ 84FC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 203+ 84FE
 204+ 84FE 5E 48        	defw $485e                                      ; (Posicion_inicio).
 205+ 8500 02           	db 2											; (Cuad_objeto).
 206+ 8501
 207+ 8501 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 208+ 8505
 209+ 8505 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 210+ 8506
 211+ 8506 00 00        	db 0,0											; Variables_de_borrado
 212+ 8508 00 00        	defw 0										 	;	" " " " " " "
 213+ 850A 00 00        	defw 0											;	" " " " " " "
 214+ 850C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 215+ 8510
 216+ 8510 00 00        	db 0,0											; Variables_de_pintado
 217+ 8512 00 00        	defw 0											;	" " " " " " "
 218+ 8514 00 00        	defw 0											;	" " " " " " "
 219+ 8516 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 851A
 221+ 851A 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 222+ 851C
 223+ 851C 60 97 00 00  	defw Indice_mov_Izquierda_y_derecha,0			; (Puntero_indice_mov) / (Puntero_mov).
 224+ 8520
 225+ 8520 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 226+ 8523
 227+ 8523 00           	db 0 											; (Columnas).
 228+ 8524 00 00        	defw 0											; (Limite_horizontal).
 229+ 8526 00           	db 0											; (Limite_vertical).
 230+ 8527
 231+ 8527              ; ---------- ---------- ---------- ---------- ----------
 232+ 8527
 233+ 8527 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 234+ 8529 00 00        	defw 0                                          ; (Posicion_actual).
 235+ 852B 00 00        	defw 0											; (Puntero_objeto).
 236+ 852D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 237+ 8530
 238+ 8530 04           	db %00000100									; (Attr).
 239+ 8531
 240+ 8531 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 241+ 8533 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 242+ 8535
 243+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_der).
 244+ 8537 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 245+ 8539
 246+ 8539 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 247+ 853B 01           	db 1											; (Cuad_objeto).
 248+ 853C
 249+ 853C 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 250+ 8540
 251+ 8540 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 252+ 8541
 253+ 8541 00 00        	db 0,0											; Variables_de_borrado
 254+ 8543 00 00        	defw 0										 	;	" " " " " " "
 255+ 8545 00 00        	defw 0											;	" " " " " " "
 256+ 8547 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 854B
 258+ 854B 00 00        	db 0,0											; Variables_de_pintado
 259+ 854D 00 00        	defw 0											;	" " " " " " "
 260+ 854F 00 00        	defw 0											;	" " " " " " "
 261+ 8551 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 262+ 8555
 263+ 8555 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 264+ 8557
 265+ 8557 66 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 266+ 855B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 267+ 855E
 268+ 855E 00           	db 0 											; (Columnas).
 269+ 855F 00 00        	defw 0											; (Limite_horizontal).
 270+ 8561 00           	db 0											; (Limite_vertical).
 271+ 8562
 272+ 8562              ; ---------- ---------- ---------- ---------- ----------
 273+ 8562
 274+ 8562 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 275+ 8564 00 00        	defw 0                                          ; (Posicion_actual).
 276+ 8566 00 00        	defw 0 											; (Puntero_objeto).
 277+ 8568 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 278+ 856B
 279+ 856B 01           	db %00000001									; (Attr).
 280+ 856C
 281+ 856C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 282+ 856E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 283+ 8570
 284+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_der).
 285+ 8572 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 286+ 8574
 287+ 8574 BE 47        	defw $47be                                      ; (Posicion_inicio).
 288+ 8576 00           	db 0											; (Cuad_objeto).
 289+ 8577
 290+ 8577 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 291+ 857B
 292+ 857B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 293+ 857C
 294+ 857C 00 00        	db 0,0											; Variables_de_borrado
 295+ 857E 00 00        	defw 0										 	;	" " " " " " "
 296+ 8580 00 00        	defw 0											;	" " " " " " "
 297+ 8582 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 8586
 299+ 8586 00 00        	db 0,0											; Variables_de_pintado
 300+ 8588 00 00        	defw 0											;	" " " " " " "
 301+ 858A 00 00        	defw 0											;	" " " " " " "
 302+ 858C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 303+ 8590
 304+ 8590 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 305+ 8592
 306+ 8592 64 97 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 307+ 8596 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 308+ 8599
 309+ 8599 00           	db 0 											; (Columnas).
 310+ 859A 00 00        	defw 0											; (Limite_horizontal).
 311+ 859C 00           	db 0											; (Limite_vertical).
 312+ 859D
 313+ 859D              ; ---------- ---------- ---------- ---------- ----------
 314+ 859D
 315+ 859D 02 02        Entidad_5 db 2,2                                  	; (Filas) / (Columns).
 316+ 859F 00 00        	defw 0                                          ; (Posicion_actual).
 317+ 85A1 00 00        	defw 0 											; (Puntero_objeto).
 318+ 85A3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 319+ 85A6
 320+ 85A6 01           	db %00000001									; (Attr).
 321+ 85A7
 322+ 85A7 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 323+ 85A9 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 324+ 85AB
 325+ 85AB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 326+ 85AD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 327+ 85AF
 328+ 85AF 00 40        	defw $4000                                      ; (Posicion_inicio).
 329+ 85B1 01           	db 1											; (Cuad_objeto).
 330+ 85B2
 331+ 85B2 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 332+ 85B6
 333+ 85B6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 334+ 85B7
 335+ 85B7 00 00        	db 0,0											; Variables_de_borrado
 336+ 85B9 00 00        	defw 0										 	;	" " " " " " "
 337+ 85BB 00 00        	defw 0											;	" " " " " " "
 338+ 85BD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 85C1
 340+ 85C1 00 00        	db 0,0											; Variables_de_pintado
 341+ 85C3 00 00        	defw 0											;	" " " " " " "
 342+ 85C5 00 00        	defw 0											;	" " " " " " "
 343+ 85C7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 344+ 85CB
 345+ 85CB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 346+ 85CD
 347+ 85CD 68 97 00 00  	defw Indice_mov_Abajo,0   		                ; (Puntero_indice_mov) / (Puntero_mov).
 348+ 85D1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 349+ 85D4
 350+ 85D4 00           	db 0 											; (Columnas).
 351+ 85D5 00 00        	defw 0											; (Limite_horizontal).
 352+ 85D7 00           	db 0											; (Limite_vertical).
# file closed: Entidades_y_disparos.asm
  21  85D8
  22  85D8              ; ******************************************************************************************************************************************************************************************
  23  85D8              ; Constantes.
  24  85D8              ; ******************************************************************************************************************************************************************************************
  25  85D8              ;
  26  85D8              ; 8/11/22
  27  85D8              ;
  28  85D8              ; Constantes generales.
  29  85D8              ;
  30  85D8
  31  85D8              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  85D8              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  85D8              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  85D8              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  85D8
  36  85D8              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  85D8              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  85D8              ;                               				        ; De momento situamos este almacén en $7000.
  39  85D8              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  85D8              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  85D8              ;                               				        ; De momento situamos este almacén en $7060.
  42  85D8
  43  85D8              ; ******************************************************************************************************************************************************************************************
  44  85D8              ; Variables.
  45  85D8              ; ******************************************************************************************************************************************************************************************
  46  85D8              ;
  47  85D8              ; 10/11/22
  48  85D8              ;
  49  85D8              ; Variables de DRAW. (Motor principal).
  50  85D8              ;
  51  85D8              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  85D8
  53  85D8 02           Filas db 2												; Filas. [DRAW]
  54  85D9 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  85DA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  85DC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85DE 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85DF 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85E0
  60  85E0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85E0
  62  85E0 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85E1              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85E1              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85E1 04           Attr db %00000100										; Atributos de la entidad:
  66  85E2
  67  85E2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85E2              ;
  69  85E2              ;	COLORES: 0 ..... NEGRO
  70  85E2              ;    		 1 ..... AZUL
  71  85E2              ; 			 2 ..... ROJO
  72  85E2              ;			 3 ..... MAGENTA
  73  85E2              ; 			 4 ..... VERDE
  74  85E2              ; 			 5 ..... CIAN
  75  85E2              ;			 6 ..... AMARILLO
  76  85E2              ; 			 7 ..... BLANCO
  77  85E2
  78  85E2 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85E4 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85E6 00 00        Puntero_DESPLZ_der defw 0
  81  85E8 00 00        Puntero_DESPLZ_izq defw 0
  82  85EA
  83  85EA 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85EC 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85ED
  86  85ED              ; Variables de objeto. (Características).
  87  85ED
  88  85ED 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85EE 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85EF 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85F0 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85F1
  93  85F1 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85F2              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85F2              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85F2 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85F4 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85F6 00 00        	defw 0
  99  85F8 00 00 00 00  	db 0,0,0,0
 100  85FC
 101  85FC 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85FE 00 00        	defw 0
 103  8600 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  8602 00 00 00 00  	db 0,0,0,0
 105  8606
 106  8606              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  8606
 108  8606 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  8607              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  8607              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  8607              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  8607              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  8607              ;
 114  8607              ; 														DESCRIPCIÖN:
 115  8607              ;
 116  8607              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  8607              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  8607              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  8607              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  8607              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  8607              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  8607              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  8607              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  8607              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  8607              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  8607              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  8607              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  8607              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  8607              ;
 130  8607              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  8607              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  8607              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  8607
 134  8607 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  8608
 136  8608              ; Movimiento.
 137  8608
 138  8608 74 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  860A 00 00        Puntero_mov defw 0
 140  860C 00           Contador_db_mov db 0
 141  860D 00           Incrementa_puntero db 0
 142  860E 00           Repetimos_db db 0
 143  860F
 144  860F              ; Variables de funcionamiento. [DRAW].
 145  860F
 146  860F 00           Columnas db 0
 147  8610 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  8612              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  8612 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  8613
 151  8613              ; 59 Bytes por entidad.
 152  8613              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  8613              ;					         		---------;      ;---------
 154  8613
 155  8613
 156  8613              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  8613
 158  8613 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  8614
 160  8614              ;														DESCRIPCIÓN:
 161  8614              ;
 162  8614              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  8614              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  8614              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  8614              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  8614              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad, hay que confirmarlo_
 167  8614              ; 															_ comparando las coordenadas del disparo con las de la entidad almacenada en DRAW.
 168  8614
 169  8614              ; Gestión de ENTIDADES.
 170  8614
 171  8614 00 00        Puntero_store_entidades defw 0
 172  8616 00 00        Puntero_restore_entidades defw 0
 173  8618 00 00        Indice_restore defw 0
 174  861A 03           Numero_de_entidades db 3								; Nº de entidades en pantalla, (contando con Amadeus).
 175  861B 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 176  861C              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 177  861C              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 178  861C              ;														; _ (Numero_de_malotes)="0".
 179  861C 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 180  861E              ;														; _variable para almacenar lo posición del puntero_
 181  861E              ; 														; _de pila, SP.
 182  861E 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 183  8620              ;														; La utiliza la rutina [Extrae_foto_registros].
 184  8620 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 185  8622              ;														; _el snapshot de los registros de la siguiente entidad.
 186  8622              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 187  8622 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 188  8624              ;														; _el snapshot de los registros del siguiente disparo.
 189  8624              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 190  8624
 191  8624              ;---------------------------------------------------------------------------------------------------------------
 192  8624
 193  8624              ; Gestión de Disparos.
 194  8624
 195  8624 00           Numero_de_disparotes db 0
 196  8625 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 197  8627 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 198  8629 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 199  862A              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 200  862A              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 201  862A 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 202  862C              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 203  862C              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 204  862C              ;														; _produzca colisión.
 205  862C 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 206  862E              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 207  862E 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 208  8631              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 209  8631 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 210  8634              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 211  8634
 212  8634              ;---------------------------------------------------------------------------------------------------------------
 213  8634
 214  8634              ; Relojes y temporizaciones.
 215  8634
 216  8634 01           Habilita_disparo_Amadeus db 1
 217  8635 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 218  8636 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 219  8637
 220  8637 01           Habilita_disparo_entidad db 1
 221  8638 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 222  8639 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 223  863A
 224  863A              ;---------------------------------------------------------------------------------------------------------------
 225  863A
 226  863A              ; Gestión de FRAMES.
 227  863A
 228  863A 00           Switch db 0
 229  863B
 230  863B              ; Variables de Raster y localización en pantalla.
 231  863B
 232  863B 00 FF        Temp_Raster defw $ff00
 233  863D
 234  863D              ; Rutina principal *************************************************************************************************************************************************************************
 235  863D              ;
 236  863D              ;	14/11/22
 237  863D
 238  863D 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 239  8640
 240  8640 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 241  8642 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 242  8644 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 243  8646 F3           	DI
 244  8647
 245  8647 3E 07        	ld a,%00000111
 246  8649 CD 88 93     	call Cls
 247  864C
 248  864C              ;	call Pinta_FILAS
 249  864C
 250  864C CD 38 89     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 251  864F
 252  864F 21 1A 86     	ld hl,Numero_de_entidades
 253  8652 46           	ld b,(hl)
 254  8653 04           	inc b
 255  8654 05           	dec b
 256  8655 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 257  8657
 258  8657 CD F8 87     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 259  865A              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 260  865A
 261  865A              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 262  865A              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 263  865A              ;	Pintamos el resto de entidades:
 264  865A
 265  865A              ;	INICIA ENTIDADES !!!!!
 266  865A
 267  865A C5           1 push bc  												; Guardo el contador de entidades.
 268  865B CD 52 88      	call Inicia_Puntero_objeto
 269  865E CD D8 8D     	call Draw
 270  8661 CD A0 7F     	call Guarda_foto_registros
 271  8664 CD 9A 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 272  8667 C1           	pop bc
 273  8668 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 274  866A
 275  866A              ; 	INICIA AMADEUS !!!!!
 276  866A
 277  866A CD 0F 89     3 call Restore_Amadeus
 278  866D CD 52 88     	call Inicia_Puntero_objeto
 279  8670 CD D8 8D     	call Draw
 280  8673 CD A0 7F     	call Guarda_foto_registros
 281  8676
 282  8676 11 76 84     	ld de,Amadeus_db
 283  8679 CD 21 89     	call Store_Amadeus
 284  867C
 285  867C              ; 	INICIA DISPAROS !!!!!
 286  867C
 287  867C CD 0E 88     	call Inicia_Puntero_Disparo_Entidades
 288  867F CD 15 88     	call Inicia_Puntero_Disparo_Amadeus
 289  8682
 290  8682              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 291  8682
 292  8682 CD F8 87     	call Inicia_punteros_de_entidades
 293  8685 CD FD 88     	call Restore_Primera_entidad
 294  8688
 295  8688 3A 1A 86     	ld a,(Numero_de_entidades)
 296  868B 3C           	inc a
 297  868C 32 1B 86     	ld (Numero_de_malotes),a
 298  868F
 299  868F FB           2 ei
 300  8690 18 FD        	jr 2B
 301  8692
 302  8692              ; -----------------------------------------------------------------------------------
 303  8692
 304  8692              Frame
 305  8692
 306  8692              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 307  8692              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 308  8692
 309  8692              ; PINTAMOS.
 310  8692
 311  8692 3E 02            ld a,2
 312  8694 D3 FE            out ($fe),a
 313  8696 CD DC 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 314  8699 CD 15 91     	call Extrae_foto_disparos
 315  869C 3E 01            ld a,1
 316  869E D3 FE            out ($fe),a
 317  86A0
 318  86A0              ; ----------------------------------------------------------------------
 319  86A0
 320  86A0              ; RELOJES.
 321  86A0
 322  86A0 21 34 86     	ld hl,Habilita_disparo_Amadeus
 323  86A3 11 36 86     	ld de,Temporiza_disparo_Amadeus
 324  86A6 CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 325  86A9
 326  86A9 21 37 86     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 327  86AC 11 39 86     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 328  86AF CD D5 7F     	call Habilita_disparos
 329  86B2
 330  86B2              ; COLISIONES.
 331  86B2
 332  86B2 CD 7A 8D     	call Selector_de_impactos
 333  86B5
 334  86B5              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 335  86B5              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 336  86B5              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 337  86B5
 338  86B5 AF           	xor a
 339  86B6 32 29 86     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 340  86B9
 341  86B9 CD F8 87     	call Inicia_punteros_de_entidades
 342  86BC CD FD 88     	call Restore_Primera_entidad
 343  86BF
 344  86BF 3A D8 85     	ld a,(Filas)
 345  86C2 A7           	and a
 346  86C3 20 03        	jr nz,10F 											; Si la 1ª entidad está vacía, saltamos a la siguiente.
 347  86C5
 348  86C5 CD 9A 88     	call Store_Restore_entidades
 349  86C8
 350  86C8              ; ---------------------------------------------------------------------------------------
 351  86C8
 352  86C8 CD FA 8B     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 353  86CB 21 00 70     	ld hl,Album_de_fotos
 354  86CE 22 20 86         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 355  86D1              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 356  86D1 3A 1A 86     	ld a,(Numero_de_entidades)
 357  86D4 47               ld b,a
 358  86D5 A7           	and a
 359  86D6 28 55        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 360  86D8
 361  86D8              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 362  86D8
 363  86D8              ; Código que ejecutamos con cada entidad:
 364  86D8
 365  86D8              ; Impacto ???
 366  86D8
 367  86D8 3A F1 85     2 ld a,(Impacto)
 368  86DB A7           	and a
 369  86DC 28 0D        	jr z,8F
 370  86DE
 371  86DE              ; Hay Impacto en esta entidad.
 372  86DE
 373  86DE C5           	push bc
 374  86DF CD AF 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 375  86E2 CD 2A 89     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 376  86E5              ;	ld hl,(Puntero_store_entidades)
 377  86E5              ;	ld d,h
 378  86E5              ;	ld e,l
 379  86E5              ;	call Store_Amadeus									; Limpiamos `su base de datos´.
 380  86E5 21 1A 86     	ld hl,Numero_de_entidades							; Una alimaña menos.
 381  86E8 35           	dec (hl)
 382  86E9
 383  86E9              ;	jr $
 384  86E9
 385  86E9 18 3C        	jr 6F
 386  86EB
 387  86EB              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 388  86EB              ; _con las coordenadas de la entidad almacenada en DRAW.
 389  86EB
 390  86EB 3A 13 86     8 ld a,(Ctrl_1)
 391  86EE CB 57        	bit 2,a
 392  86F0 28 1B        	jr z,7F
 393  86F2
 394  86F2 2A 2C 86     	ld hl,(Coordenadas_disparo_certero)
 395  86F5 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 396  86F6              ;														; E contiene la coordenada_X del disparo.
 397  86F6 2A DE 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 398  86F9              ;														; H Coordenado_y de la entidad.
 399  86F9 A7           	and a
 400  86FA ED 52        	sbc hl,de
 401  86FC CD B1 8D     	call Determina_resultado_comparativa
 402  86FF 04           	inc b
 403  8700 05           	dec b
 404  8701 28 0A        	jr z,7F
 405  8703
 406  8703              ; ----- ----- -----
 407  8703
 408  8703 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 409  8705 32 F1 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 410  8708 21 13 86     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 411  870B CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 412  870D
 413  870D C5           7 push bc
 414  870E
 415  870E CD 60 87     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 416  8711
 417  8711 3A 06 86     	ld a,(Ctrl_0)
 418  8714 CB 67        	bit 4,a
 419  8716 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 420  8718
 421  8718              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 422  8718              ; [[[
 423  8718 CD 83 89     	call Detecta_disparo_entidad
 424  871B              ; ]]]
 425  871B CD BF 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 426  871E
 427  871E 21 06 86     	ld hl,Ctrl_0
 428  8721 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 429  8723 AF           	xor a
 430  8724 32 07 86     	ld (Obj_dibujado),a
 431  8727
 432  8727 CD 9A 88     6 call Store_Restore_entidades
 433  872A C1           	pop bc
 434  872B 10 AB        	djnz 2B
 435  872D
 436  872D              ; Tras la gestión de las entidades, ... AMADEUS.
 437  872D
 438  872D CD 0F 89     4 call Restore_Amadeus
 439  8730
 440  8730 3A F1 85     	ld a,(Impacto)
 441  8733 A7           	and a
 442  8734 20 FE        	jr nz,$
 443  8736
 444  8736              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 445  8736
 446  8736 CD 90 87     	call Mov_Amadeus
 447  8739
 448  8739 3A 06 86     	ld a,(Ctrl_0)
 449  873C CB 67        	bit 4,a
 450  873E 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 451  8740
 452  8740 CD BF 87     	call Guarda_foto_entidad_a_pintar
 453  8743
 454  8743 21 06 86     3 ld hl,Ctrl_0
 455  8746 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 456  8748 AF           	xor a
 457  8749 32 07 86     	ld (Obj_dibujado),a
 458  874C
 459  874C 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 460  874F CD 21 89     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 461  8752
 462  8752 CD 18 8C     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 463  8755
 464  8755              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 465  8755
 466  8755 CD 34 88     	call Calcula_numero_de_disparotes
 467  8758 CD 1C 88     9 call Calcula_numero_de_malotes
 468  875B
 469  875B 3E 04        	ld a,4
 470  875D D3 FE        	out ($fe),a
 471  875F
 472  875F C9           	ret
 473  8760
 474  8760              ; --------------------------------------------------------------------------------------------------------------
 475  8760              ;
 476  8760              ;	27/03/23
 477  8760
 478  8760              Mov_obj
 479  8760
 480  8760              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 481  8760
 482  8760 AF           	xor a
 483  8761 32 07 86     	ld (Obj_dibujado),a
 484  8764 32 06 86     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 485  8767              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 486  8767              ; 														; _de la entidad.
 487  8767 CD C9 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 488  876A              ;														; Obj_dibujado="0".
 489  876A              ; Movemos Entidades malignas.
 490  876A
 491  876A 2A 08 86     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 492  876D 24           	inc h                                               ; Salimos de la rutina.
 493  876E 25           	dec h
 494  876F C8           	ret z
 495  8770
 496  8770 CD 76 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 497  8773
 498  8773 3A 06 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 499  8776 CB 67        	bit 4,a
 500  8778 C8           	ret z
 501  8779
 502  8779              ; Ha habido desplazamiento de la entidad maligna.
 503  8779              ; Ha llegado a zona de AMADEUS ???
 504  8779
 505  8779 3A DF 85     	ld a,(Coordenada_y)
 506  877C FE 14        	cp $14
 507  877E D4 49 8B     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 508  8781              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 509  8781              ; ---------
 510  8781
 511  8781 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 512  8783 32 07 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 513  8786 CD C9 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 514  8789 CD E0 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 515  878C CD AF 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 516  878F C9           	ret													; _de la misma.
 517  8790
 518  8790              ; --------------------------------------------------------------------------------------------------------------
 519  8790              ;
 520  8790              ;	29/1/23
 521  8790
 522  8790              Mov_Amadeus
 523  8790
 524  8790 AF           	xor a
 525  8791 32 07 86     	ld (Obj_dibujado),a
 526  8794 CD C9 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 527  8797              ;														; Obj_dibujado="0".
 528  8797              ; Movemos Amadeus.
 529  8797
 530  8797 CD 4C 89     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 531  879A 3A 06 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 532  879D CB 67        	bit 4,a
 533  879F C8           	ret z
 534  87A0
 535  87A0              ; ---------
 536  87A0
 537  87A0 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 538  87A2 32 07 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 539  87A5 CD C9 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 540  87A8 CD E0 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 541  87AB CD AF 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 542  87AE C9           	ret													; _de la nave.
 543  87AF
 544  87AF              ; --------------------------------------------------------------------------------------------------------------
 545  87AF              ;
 546  87AF              ;	31/01/23
 547  87AF              ;
 548  87AF              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 549  87AF
 550  87AF              Guarda_foto_entidad_a_borrar
 551  87AF
 552  87AF CD B2 90     	call Prepara_draw
 553  87B2 CD EC 8F     	call calcula_CColumnass
 554  87B5 CD 23 90     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 555  87B8 CD 78 90     	call Define_rutina_de_impresion
 556  87BB CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 557  87BE C9           	ret
 558  87BF
 559  87BF              ; --------------------------------------------------------------------------------------------------------------
 560  87BF              ;
 561  87BF              ;	31/01/23
 562  87BF              ;
 563  87BF              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 564  87BF              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 565  87BF
 566  87BF              Guarda_foto_entidad_a_pintar
 567  87BF
 568  87BF CD EC 87     	call Repone_pintar
 569  87C2 CD D8 8D     	call Draw
 570  87C5 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 571  87C8 C9           	ret
 572  87C9
 573  87C9              ; --------------------------------------------------------------------------------------------------------------
 574  87C9              ;
 575  87C9              ;
 576  87C9
 577  87C9 21 D8 85     Prepara_var_pintado_borrado	ld hl,Filas
 578  87CC 3A 07 86     	ld a,(Obj_dibujado)
 579  87CF A7           	and a
 580  87D0 28 05        	jr z,1F
 581  87D2 11 FC 85     	ld de,Variables_de_pintado
 582  87D5 18 03        	jr 2F
 583  87D7 11 F2 85     1 ld de,Variables_de_borrado
 584  87DA 01 08 00     2 ld bc,8
 585  87DD ED B0        	ldir
 586  87DF C9           	ret
 587  87E0
 588  87E0              ; --------------------------------------------------------------------------------------------------------------
 589  87E0
 590  87E0 21 F2 85     Repone_borrar ld hl,Variables_de_borrado
 591  87E3 11 D8 85     	ld de,Filas
 592  87E6 01 08 00     	ld bc,8
 593  87E9 ED B0        	ldir
 594  87EB C9           	ret
 595  87EC
 596  87EC 21 FC 85     Repone_pintar ld hl,Variables_de_pintado
 597  87EF 11 D8 85     	ld de,Filas
 598  87F2 01 08 00     	ld bc,8
 599  87F5 ED B0        	ldir
 600  87F7 C9           	ret
 601  87F8
 602  87F8              ; *************************************************************************************************************************************************************
 603  87F8              ;
 604  87F8              ; 8/1/23
 605  87F8              ;
 606  87F8              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 607  87F8              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 608  87F8              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 609  87F8
 610  87F8              ; Destruye HL y DE !!!!!
 611  87F8
 612  87F8              Inicia_punteros_de_entidades
 613  87F8
 614  87F8 21 68 84     	ld hl,Indice_de_entidades
 615  87FB CD 4C 88         call Extrae_address
 616  87FE 22 14 86         ld (Puntero_store_entidades),hl
 617  8801 21 6A 84     	ld hl,Indice_de_entidades+2
 618  8804 22 18 86     	ld (Indice_restore),hl
 619  8807 CD 4C 88     	call Extrae_address
 620  880A 22 16 86     	ld (Puntero_restore_entidades),hl
 621  880D C9               ret
 622  880E
 623  880E              ; *************************************************************************************************************************************************************
 624  880E              ;
 625  880E              ; 8/1/23
 626  880E              ;
 627  880E              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 628  880E
 629  880E 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 630  8811 22 25 86     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 631  8814 C9           	ret
 632  8815 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 633  8818 22 27 86     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 634  881B C9           	ret
 635  881C
 636  881C              ; -------------------------------------------------------------------------------------------------------------
 637  881C              ;
 638  881C              ; 28/2/23
 639  881C              ;
 640  881C
 641  881C              Calcula_numero_de_malotes
 642  881C
 643  881C 21 00 70     	ld hl,Album_de_fotos
 644  881F EB           	ex de,hl
 645  8820 2A 20 86     	ld hl,(Stack_snapshot)
 646  8823
 647  8823 06 00        	ld b,0
 648  8825 7D           	ld a,l
 649  8826 93           	sub e
 650  8827 28 07        	jr z,1F
 651  8829
 652  8829              ; Nº de malotes no es "0".
 653  8829
 654  8829 D6 06        2 sub 6
 655  882B 04           	inc b
 656  882C A7           	and a
 657  882D 20 FA        	jr nz,2B
 658  882F 78           	ld a,b
 659  8830
 660  8830 32 1B 86     1 ld (Numero_de_malotes),a
 661  8833 C9           	ret
 662  8834
 663  8834              ; -------------------------------------------------------------------------------------------------------------
 664  8834              ;
 665  8834              ; 28/2/23
 666  8834              ;
 667  8834
 668  8834              Calcula_numero_de_disparotes
 669  8834
 670  8834 21 60 70     	ld hl,Album_de_fotos_disparos
 671  8837 EB           	ex de,hl
 672  8838 2A 22 86     	ld hl,(Stack_snapshot_disparos)
 673  883B
 674  883B 06 00        	ld b,0
 675  883D 7D           	ld a,l
 676  883E 93           	sub e
 677  883F 28 07        	jr z,1F
 678  8841
 679  8841              ; Nº de malotes no es "0".
 680  8841
 681  8841 D6 06        2 sub 6
 682  8843 04           	inc b
 683  8844 A7           	and a
 684  8845 20 FA        	jr nz,2B
 685  8847 78           	ld a,b
 686  8848
 687  8848 32 24 86     1 ld (Numero_de_disparotes),a
 688  884B C9           	ret
 689  884C              ; *************************************************************************************************************************************************************
 690  884C              ;
 691  884C              ; 20/10/22
 692  884C              ;
 693  884C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 694  884C              ;
 695  884C              ; Destruye el puntero y DE !!!!!
 696  884C
 697  884C 5E           Extrae_address ld e,(hl)
 698  884D 23           	inc hl
 699  884E 56           	ld d,(hl)
 700  884F 2B           	dec hl
 701  8850 EB           	ex de,hl
 702  8851 C9           	ret
 703  8852
 704  8852              ; *************************************************************************************************************************************************************
 705  8852              ;
 706  8852              ;	7/2/23
 707  8852              ;
 708  8852              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 709  8852              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 710  8852              ;
 711  8852              ;   Destruye HL y BC !!!!!,
 712  8852              ;
 713  8852              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 714  8852              ;					"0" ..... Izquierda.
 715  8852
 716  8852              Inicia_Puntero_objeto
 717  8852
 718  8852 3A EC 85     	ld a,(Cuad_objeto)
 719  8855 E6 01        	and 1
 720  8857 F5           	push af
 721  8858 CC 76 88     	call z,Inicia_puntero_objeto_izq
 722  885B F1           	pop af
 723  885C 28 2B        	jr z,1F
 724  885E CD 63 88     	call Inicia_puntero_objeto_der
 725  8861 18 26        	jr 1F
 726  8863
 727  8863              ; Arrancamos desde la parte izquierda de la pantalla.
 728  8863              ; Iniciamos (Indice_Sprite_der).
 729  8863
 730  8863 2A E2 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 731  8866 22 E6 85     	ld (Puntero_DESPLZ_der),hl
 732  8869 CD 4C 88     	call Extrae_address
 733  886C 22 DC 85     	ld (Puntero_objeto),hl
 734  886F
 735  886F 2A E4 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 736  8872 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 737  8875 C9           	ret
 738  8876
 739  8876              ; Arrancamos desde la parte derecha de la pantalla.
 740  8876              ; Iniciamos (Indice_Sprite_izq).
 741  8876
 742  8876 2A E4 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 743  8879 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 744  887C CD 4C 88     	call Extrae_address
 745  887F 22 DC 85     	ld (Puntero_objeto),hl
 746  8882
 747  8882 2A E2 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 748  8885 22 E6 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 749  8888 C9           	ret
 750  8889
 751  8889              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 752  8889
 753  8889 21 38 83     1 ld hl,Amadeus
 754  888C ED 4B DC 85  	ld bc,(Puntero_objeto)
 755  8890 B7 ED 42     	sub hl,bc
 756  8893 C0           	ret nz
 757  8894 21 06 86     	ld hl,Ctrl_0
 758  8897 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 759  8899 C9           	ret 												; _de nuestra nave en los extremos.
 760  889A
 761  889A              ; *************************************************************************************************************************************************************
 762  889A              ;
 763  889A              ;	8/1/23
 764  889A              ;
 765  889A              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 766  889A              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 767  889A
 768  889A              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 769  889A              ;	_de la 2ª y 3ª entidad respectivamente.
 770  889A
 771  889A              Store_Restore_entidades
 772  889A
 773  889A 3A 1A 86     	ld a,(Numero_de_entidades)
 774  889D A7           	and a
 775  889E C8           	ret z												 ; Salimos de la rutina si no quedan entidades vivitas y coleando.
 776  889F
 777  889F E5           	push hl
 778  88A0 D5           	push de
 779  88A1 C5            	push bc
 780  88A2
 781  88A2              ;	STORE !!!!!
 782  88A2              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 783  88A2
 784  88A2 21 D8 85     2 ld hl,Filas
 785  88A5 ED 5B 14 86  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 786  88A9 01 3B 00     	ld bc,59
 787  88AC ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 788  88AE
 789  88AE              ; 	Entidad_sospechosa. 20/4/23
 790  88AE
 791  88AE 3A F1 85     	ld a,(Impacto)
 792  88B1 A7           	and a
 793  88B2 28 0C        	jr z,1F
 794  88B4
 795  88B4 2A 14 86     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 796  88B7 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 797  88BA A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 798  88BB ED 4A        	adc hl,bc 											; _ "0" más adelante.
 799  88BD 22 2A 86     	ld (Entidad_sospechosa_de_colision),hl
 800  88C0
 801  88C0              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 802  88C0
 803  88C0 2A 16 86     1 ld hl,(Puntero_restore_entidades)
 804  88C3 22 14 86     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 805  88C6
 806  88C6 7E           	ld a,(hl)
 807  88C7 A7           	and a
 808  88C8 F5           	push af
 809  88C9 28 08        	jr z,3F
 810  88CB
 811  88CB 11 D8 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 812  88CE 01 3B 00     	ld bc,59
 813  88D1 ED B0        	ldir
 814  88D3
 815  88D3              ;	Incrementa RESTORE !!!!!
 816  88D3
 817  88D3 2A 18 86     3 ld hl,(Indice_restore)
 818  88D6 23           	inc hl
 819  88D7 23           	inc hl
 820  88D8 22 18 86     	ld (Indice_restore),hl
 821  88DB CD 4C 88         call Extrae_address
 822  88DE 22 16 86         ld (Puntero_restore_entidades),hl
 823  88E1
 824  88E1 2A 14 86     	ld hl,(Puntero_store_entidades)
 825  88E4 11 9D 85     	ld de,Entidad_5
 826  88E7 EB           	ex de,hl
 827  88E8 A7           	and a
 828  88E9 ED 52        	sbc hl,de
 829  88EB 20 08        	jr nz,5F
 830  88ED
 831  88ED CC F8 87     	call z,Inicia_punteros_de_entidades
 832  88F0 CD FD 88     	call Restore_Primera_entidad
 833  88F3 18 04        	jr 4F
 834  88F5
 835  88F5 F1           5 pop af
 836  88F6 A7           	and a
 837  88F7 28 C7        	jr z,1B
 838  88F9
 839  88F9 C1           4 pop bc
 840  88FA D1           	pop de
 841  88FB E1           	pop hl
 842  88FC C9           	ret
 843  88FD
 844  88FD              ; **************************************************************************************************
 845  88FD              ;
 846  88FD              ;	29/10/22
 847  88FD              ;
 848  88FD              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 849  88FD
 850  88FD E5           Restore_Primera_entidad push hl
 851  88FE D5           	push de
 852  88FF C5            	push bc
 853  8900 2A 14 86     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 854  8903 11 D8 85     	ld de,Filas
 855  8906 01 3B 00     	ld bc,59
 856  8909 ED B0        	ldir
 857  890B C1           	pop bc
 858  890C D1           	pop de
 859  890D E1           	pop hl
 860  890E C9           	ret
 861  890F
 862  890F              ; **************************************************************************************************
 863  890F              ;
 864  890F              ;	25/01/23
 865  890F              ;
 866  890F              ;	Restore_Amadeus
 867  890F              ;
 868  890F              ;	Cargamos en DRAW los parámetros de Amadeus.
 869  890F              ;
 870  890F
 871  890F E5           Restore_Amadeus	push hl
 872  8910 D5           	push de
 873  8911 C5            	push bc
 874  8912 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 875  8915 11 D8 85     	ld de,Filas
 876  8918 01 3B 00     	ld bc,59
 877  891B ED B0        	ldir
 878  891D C1           	pop bc
 879  891E D1           	pop de
 880  891F E1           	pop hl
 881  8920 C9           	ret
 882  8921
 883  8921              ; *************************************************************************************************************************************************************
 884  8921              ;
 885  8921              ;	29/04/23
 886  8921              ;
 887  8921              ;	Store_Amadeus
 888  8921              ;
 889  8921              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 890  8921              ;
 891  8921              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 892  8921              ;
 893  8921              ;	DESTRUYE: HL y BC y DE.
 894  8921
 895  8921 21 D8 85     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 896  8924 01 3B 00     	ld bc,59
 897  8927 ED B0        	ldir
 898  8929 C9           	ret
 899  892A
 900  892A              ; -----------------------------------------------------------
 901  892A              ;
 902  892A              ;	27/04/23
 903  892A              ;
 904  892A              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 905  892A              ;
 906  892A              ;	Destruye: HL,BC,DE,A
 907  892A
 908  892A 21 D8 85     Borra_datos_entidad ld hl,Filas
 909  892D 01 3A 00     	ld bc,58
 910  8930 AF           	xor a
 911  8931 77           	ld (hl),a
 912  8932 11 D9 85     	ld de,Filas+1
 913  8935 ED B0        	ldir
 914  8937 C9           	ret
 915  8938
 916  8938              ; -----------------------------------------------------------
 917  8938
 918  8938              ; Teclado.
 919  8938
 920  8938 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 921  893A DB FE        	in a,($fe)
 922  893C E6 01        	and $01
 923  893E 28 02        	jr z,1f
 924  8940 18 F6        	jr Pulsa_ENTER
 925  8942 C9           1 ret
 926  8943
 927  8943              ; **************************************************************************************************
 928  8943              ;
 929  8943              ; Temporización.
 930  8943
 931  8943              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 932  8943              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 933  8943              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 934  8943              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 935  8943
 936  8943              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 937  8943              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 938  8943              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 939  8943
 940  8943              ; A partir de $4f61 no hace falta DELAY.
 941  8943
 942  8943              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 943  8943
 944  8943 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 945  8946 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 946  8947 78           	LD A,B
 947  8948 A7           	AND A
 948  8949 20 FB        	JR NZ,wait
 949  894B C9           	RET
 950  894C
 951  894C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 952  894C              ;
 953  894C              ;	5/3/23
 954  894C              ;
 955  894C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 956  894C
 957  894C              Movimiento_Amadeus
 958  894C
 959  894C              ; Disparo.
 960  894C
 961  894C 3A 34 86     	ld a,(Habilita_disparo_Amadeus)
 962  894F A7           	and a
 963  8950 20 02        	jr nz,1F
 964  8952 18 15        	jr 2F
 965  8954
 966  8954 3E F7        1 ld a,$f7													; "5" para disparar.
 967  8956 DB FE        	in a,($fe)
 968  8958 E6 10        	and $10
 969  895A
 970  895A F5           	push af
 971  895B CC C5 89     	call z,Genera_disparo
 972  895E F1           	pop af
 973  895F 20 08        	jr nz,2F
 974  8961
 975  8961 3A 34 86     	ld a,(Habilita_disparo_Amadeus)
 976  8964 EE 01        	xor 1
 977  8966 32 34 86     	ld (Habilita_disparo_Amadeus),a
 978  8969
 979  8969 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 980  896B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 981  896D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 982  896F CC 16 95         call z,Mov_left											;			"			"			"			"			"			"			"			"
 983  8972 3E F7        	ld a,$f7
 984  8974 DB FE        	in a,($fe)
 985  8976 E6 01        	and $01
 986  8978 C8           	ret z
 987  8979
 988  8979 3E F7        	ld a,$f7
 989  897B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 990  897D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 991  897F CC F8 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 992  8982 C9           	ret
 993  8983
 994  8983              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 995  8983              ;
 996  8983              ;	Rutina provisional para que los malotes cagen balas.
 997  8983
 998  8983              Detecta_disparo_entidad
 999  8983
1000  8983 3A 37 86     	ld a,(Habilita_disparo_entidad)
1001  8986 A7           	and a
1002  8987 C8           	ret z
1003  8988 3E 7F        	ld a,$7f
1004  898A DB FE        	in a,($fe)
1005  898C E6 01        	and 1
1006  898E C0           	ret nz
1007  898F CD C5 89     	call Genera_disparo
1008  8992 C9           	ret
1009  8993
1010  8993              ; Pinta indicadores de FILAS. ------------------------------------------------------
1011  8993
1012  8993 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1013  8996
1014  8996              ; ----------
1015  8996 06 20        	ld b,32
1016  8998 E5           2 push hl
1017  8999 C5           	push bc
1018  899A              ; ----------
1019  899A
1020  899A 06 BF        	ld b,$bf
1021  899C 36 80        1 ld (hl),%10000000
1022  899E CD BE 90     	call NextScan
1023  89A1 10 F9        	djnz 1B
1024  89A3
1025  89A3              ; ----------
1026  89A3 C1           	pop bc
1027  89A4 E1           	pop hl
1028  89A5 2C           	inc l
1029  89A6 10 F0        	djnz 2B
1030  89A8              ; ----------
1031  89A8
1032  89A8 06 03        	ld b,3
1033  89AA 21 00 47         ld hl,$4700
1034  89AD CD B3 89     3 call Bucle_1
1035  89B0 10 FB            djnz 3B
1036  89B2 C9               ret
1037  89B3
1038  89B3 C5           Bucle_1 push bc
1039  89B4 E5                   push hl
1040  89B5 D1                   pop de
1041  89B6 13                   inc de
1042  89B7 01 FF 00             ld bc,255
1043  89BA 36 FF                ld (hl),255
1044  89BC ED B0                ldir
1045  89BE 23                   inc hl
1046  89BF 3E 07                ld a,7
1047  89C1 84                   add a,h
1048  89C2 67                   ld h,a
1049  89C3 C1                   pop bc
1050  89C4 C9                   ret
1051  89C5
1052  89C5              ; ---------------------------------------------------------------
1053  89C5
1054  89C5              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 89C5              ; ******************************************************************************************************************************************************************************************
   2+ 89C5              ;
   3+ 89C5              ;   17/04/23
   4+ 89C5              ;
   5+ 89C5              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 89C5              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 89C5              ;
   8+ 89C5              ;
   9+ 89C5              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 89C5              ;
  11+ 89C5              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 89C5              ;               _ hacen las entidades hacia abajo.
  13+ 89C5              ;
  14+ 89C5              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 89C5              ;
  16+ 89C5              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 89C5              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 89C5              ;
  19+ 89C5              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 89C5              ;           _ la bala.
  21+ 89C5              ;
  22+ 89C5              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 89C5              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 89C5              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 89C5              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 89C5              ;           _ en el momento de generarse la bala)).
  27+ 89C5
  28+ 89C5              Genera_disparo
  29+ 89C5
  30+ 89C5              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 89C5              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 89C5              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 89C5              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 89C5              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 89C5              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 89C5              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 89C5
  38+ 89C5              ; Exclusiones:
  39+ 89C5
  40+ 89C5 3A 0F 86         ld a,(Columnas)
  41+ 89C8 47               ld b,a
  42+ 89C9 3A D9 85         ld a,(Columns)
  43+ 89CC B8               cp b
  44+ 89CD C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 89CE
  46+ 89CE              ; ----- ----- -----
  47+ 89CE
  48+ 89CE 3A 06 86         ld a,(Ctrl_0)
  49+ 89D1 CB 77            bit 6,a
  50+ 89D3 20 06            jr nz,14F
  51+ 89D5
  52+ 89D5 3A DF 85         ld a,(Coordenada_y)
  53+ 89D8 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 89DA D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 89DB
  56+ 89DB 21 00 80     14 ld hl,Indice_disparo
  57+ 89DE 3A E0 85         ld a,(CTRL_DESPLZ)
  58+ 89E1 4F               ld c,a
  59+ 89E2 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 89E4              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 89E4              ;                                            ""        ""       "f9", B="1"
  62+ 89E4              ;                                            ""        ""       "fb", B="2"
  63+ 89E4              ;                                            ""        ""       "fb", B="3"
  64+ 89E4 A7               and a
  65+ 89E5 28 10            jr z,1F
  66+ 89E7 E6 01            and 1
  67+ 89E9 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 89EA
  69+ 89EA 79               ld a,c
  70+ 89EB 16 F9            ld d,$f9
  71+ 89ED 23           2 inc hl
  72+ 89EE 23               inc hl
  73+ 89EF 04               inc b
  74+ 89F0 BA               cp d
  75+ 89F1 28 04            jr z,1F
  76+ 89F3 14               inc d
  77+ 89F4 14               inc d
  78+ 89F5 18 F6            jr 2B
  79+ 89F7
  80+ 89F7 CD 4C 88     1 call Extrae_address
  81+ 89FA E5               push hl
  82+ 89FB FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 89FD DD 21 51 93  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8A01
  85+ 8A01              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8A01              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8A01
  88+ 8A01 3A 06 86         ld a,(Ctrl_0)
  89+ 8A04 CB 77            bit 6,a
  90+ 8A06 20 04            jr nz,19F
  91+ 8A08
  92+ 8A08 AF               xor a
  93+ 8A09 32 37 86         ld (Habilita_disparo_entidad),a
  94+ 8A0C
  95+ 8A0C 3A EC 85     19 ld a,(Cuad_objeto)
  96+ 8A0F FE 02            cp 2
  97+ 8A11 38 66            jr c,3F
  98+ 8A13 28 64            jr z,3F
  99+ 8A15
 100+ 8A15              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8A15
 102+ 8A15 E6 01            and 1
 103+ 8A17 28 30            jr z,4F
 104+ 8A19
 105+ 8A19              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8A19              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8A19              ;
 108+ 8A19              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8A19              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8A19              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8A19
 112+ 8A19 2A DA 85     	ld hl,(Posicion_actual)
 113+ 8A1C
 114+ 8A1C              ;   Amadeus o entidad ???.
 115+ 8A1C
 116+ 8A1C 3A 06 86         ld a,(Ctrl_0)
 117+ 8A1F CB 77            bit 6,a
 118+ 8A21 28 0A            jr z,8F
 119+ 8A23
 120+ 8A23              ; 	Dispara Amadeus.
 121+ 8A23
 122+ 8A23 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8A25 CD CD 90         call PreviousScan
 124+ 8A28 CD CD 90         call PreviousScan
 125+ 8A2B
 126+ 8A2B              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8A2B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8A2B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8A2B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8A2B
 131+ 8A2B 18 11            jr 10F
 132+ 8A2D
 133+ 8A2D              ; 	Dispara Entidad.
 134+ 8A2D
 135+ 8A2D 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8A30              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8A30
 138+ 8A30              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8A30              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8A30
 141+ 8A30 C5               push bc
 142+ 8A31 06 10            ld b,16
 143+ 8A33 CD BE 90     9 call NextScan
 144+ 8A36 10 FB            djnz 9B
 145+ 8A38 C1               pop bc
 146+ 8A39 CD A3 8A         call Ajusta_disparo_parte_izquierda
 147+ 8A3C 18 06            jr 17F
 148+ 8A3E
 149+ 8A3E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8A3E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8A3E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8A3E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8A3E
 154+ 8A3E CD A3 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 8A41 CD 18 8B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8A44              ;                                                      ; _al generar el disparo.
 157+ 8A44
 158+ 8A44              ; 	LLegados a este punto tendremos:
 159+ 8A44              ;
 160+ 8A44              ;       Puntero_objeto_disparo en IY.
 161+ 8A44              ;       Rutinas_de_impresion en IX.
 162+ 8A44              ;       Puntero_de_impresion en HL.
 163+ 8A44              ;       Impacto/Dirección en BC.
 164+ 8A44
 165+ 8A44 CD AB 8A     17 call Almacena_disparo
 166+ 8A47 18 52            jr 6F                                             ; RET.
 167+ 8A49
 168+ 8A49              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8A49              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8A49              ;
 171+ 8A49              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8A49              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8A49              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8A49
 175+ 8A49 2A DA 85     4 ld hl,(Posicion_actual)
 176+ 8A4C
 177+ 8A4C              ;   Amadeus o entidad ???.
 178+ 8A4C
 179+ 8A4C 3A 06 86         ld a,(Ctrl_0)
 180+ 8A4F CB 77            bit 6,a
 181+ 8A51 28 0A            jr z,11F
 182+ 8A53
 183+ 8A53              ; 	Dispara Amadeus.
 184+ 8A53
 185+ 8A53 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8A55 CD CD 90         call PreviousScan
 187+ 8A58 CD CD 90         call PreviousScan
 188+ 8A5B
 189+ 8A5B              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A5B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A5B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A5B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A5B
 194+ 8A5B 18 11            jr 13F
 195+ 8A5D
 196+ 8A5D              ; 	Dispara Entidad.
 197+ 8A5D
 198+ 8A5D 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A60              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A60
 201+ 8A60              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A60              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A60
 204+ 8A60 C5               push bc
 205+ 8A61 06 10            ld b,16
 206+ 8A63 CD BE 90     12 call NextScan
 207+ 8A66 10 FB            djnz 12B
 208+ 8A68 C1               pop bc
 209+ 8A69
 210+ 8A69 CD 9C 8A         call Ajusta_disparo_parte_derecha
 211+ 8A6C 18 06            jr 18F
 212+ 8A6E
 213+ 8A6E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A6E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A6E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A6E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A6E
 218+ 8A6E CD 9C 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A71 CD 18 8B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A74              ;                                                       ; _al generar el disparo.
 221+ 8A74
 222+ 8A74              ; LLegados a este punto tendremos:
 223+ 8A74              ;
 224+ 8A74              ;       Puntero_objeto_disparo en IY.
 225+ 8A74              ;       Rutinas_de_impresion en IX.
 226+ 8A74              ;       Puntero_de_impresion en HL.
 227+ 8A74              ;       Impacto/Dirección en BC.
 228+ 8A74
 229+ 8A74 CD AB 8A     18 call Almacena_disparo
 230+ 8A77 18 22            jr 6F                                               ; RET.
 231+ 8A79
 232+ 8A79              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A79
 234+ 8A79 28 11        3 jr z,5F
 235+ 8A7B
 236+ 8A7B              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A7B              ;
 238+ 8A7B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A7B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A7B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A7B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A7B
 243+ 8A7B              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A7B              ;	   ""        ""       "f9", B="1"
 245+ 8A7B              ;	   ""        ""       "fb", B="2"
 246+ 8A7B              ; 	   ""        ""       "fb", B="3"
 247+ 8A7B
 248+ 8A7B 2A DA 85     	ld hl,(Posicion_actual)
 249+ 8A7E CD BE 90     	call NextScan
 250+ 8A81
 251+ 8A81              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A81              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A81              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A81              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A81
 256+ 8A81 CD A3 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A84
 258+ 8A84              ; 	No se produce impacto. B="$80"
 259+ 8A84              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A84
 261+ 8A84 01 80 80         ld bc,$8080
 262+ 8A87
 263+ 8A87              ; 	LLegados a este punto tendremos:
 264+ 8A87              ;
 265+ 8A87              ;       Puntero_objeto_disparo en IY.
 266+ 8A87              ;       Rutinas_de_impresion en IX.
 267+ 8A87              ;       Puntero_de_impresion en HL.
 268+ 8A87              ;       Impacto/Dirección en BC.
 269+ 8A87
 270+ 8A87 CD AB 8A         call Almacena_disparo
 271+ 8A8A 18 0F            jr 6F                                           ; RET.
 272+ 8A8C
 273+ 8A8C              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A8C              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A8C              ;
 276+ 8A8C              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A8C              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A8C              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A8C              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A8C
 281+ 8A8C 2A DA 85     5 ld hl,(Posicion_actual)
 282+ 8A8F CD BE 90     	call NextScan
 283+ 8A92
 284+ 8A92              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A92              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A92              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A92              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A92
 289+ 8A92 CD 9C 8A         call Ajusta_disparo_parte_derecha
 290+ 8A95
 291+ 8A95              ; 	No se produce impacto. B="$80"
 292+ 8A95              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A95
 294+ 8A95 01 80 80     15 ld bc,$8080
 295+ 8A98
 296+ 8A98              ; 	LLegados a este punto tendremos:
 297+ 8A98              ;
 298+ 8A98              ;       Puntero_objeto_disparo en IY.
 299+ 8A98              ;       Rutinas_de_impresion en IX.
 300+ 8A98              ;       Puntero_de_impresion en HL.
 301+ 8A98              ;       Impacto/Dirección en BC.
 302+ 8A98
 303+ 8A98 CD AB 8A         call Almacena_disparo
 304+ 8A9B
 305+ 8A9B C9           6 ret
 306+ 8A9C
 307+ 8A9C              ; ----------------------------------------------------------------
 308+ 8A9C              ;
 309+ 8A9C              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A9C              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A9C              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A9C
 313+ 8A9C 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A9D FE 02            cp 2
 315+ 8A9F 38 01            jr c,1F
 316+ 8AA1 23               inc hl
 317+ 8AA2 C9           1 ret
 318+ 8AA3
 319+ 8AA3 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8AA4 FE 01        	cp 1
 321+ 8AA6 20 01        	jr nz,1F
 322+ 8AA8 2B           	dec hl
 323+ 8AA9 2B           1 dec hl
 324+ 8AAA C9               ret
 325+ 8AAB
 326+ 8AAB              ; ----------------------------------------------------------------
 327+ 8AAB              ;
 328+ 8AAB              ;   25/02/23
 329+ 8AAB              ;
 330+ 8AAB              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8AAB              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8AAB              ;
 333+ 8AAB              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8AAB              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8AAB
 336+ 8AAB              Almacena_disparo
 337+ 8AAB
 338+ 8AAB E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8AAC F1               pop af
 340+ 8AAD 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8AAE
 342+ 8AAE 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8AAF E6 01            and 1
 344+ 8AB1 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8AB3              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8AB3              ; 	Dispara AMADEUS.
 347+ 8AB3
 348+ 8AB3              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8AB3              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8AB3              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8AB3              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8AB3
 353+ 8AB3 C5               push bc
 354+ 8AB4 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8AB7 2A 27 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8ABA A7               and a
 357+ 8ABB ED 42            sbc hl,bc
 358+ 8ABD CC 15 88         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8AC0 C1               pop bc
 360+ 8AC1 28 54            jr z,4F
 361+ 8AC3
 362+ 8AC3 2A 27 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8AC6 23               inc hl
 364+ 8AC7 23               inc hl
 365+ 8AC8 22 27 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8ACB              ;                                                   ; _ Disparo_(+1).
 367+ 8ACB 18 18            jr 2F
 368+ 8ACD
 369+ 8ACD              ; Dispara una entidad.
 370+ 8ACD
 371+ 8ACD C5           1 push bc
 372+ 8ACE 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8AD1 2A 25 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8AD4 A7               and a
 375+ 8AD5 ED 42            sbc hl,bc
 376+ 8AD7 CC 0E 88         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8ADA C1               pop bc
 378+ 8ADB 28 3A            jr z,4F
 379+ 8ADD
 380+ 8ADD 2A 25 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8AE0 23               inc hl
 382+ 8AE1 23               inc hl
 383+ 8AE2 22 25 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8AE5              ;                                                   ; _ Disparo_(+1).
 385+ 8AE5 CD 4C 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8AE8              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8AE8              ;
 388+ 8AE8              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8AE8              ;                                                     Rutinas_de_impresion en IX.
 390+ 8AE8              ;                                                     Puntero_de_impresion en HL.
 391+ 8AE8              ;                                                     Impacto/Dirección en BC.
 392+ 8AE8
 393+ 8AE8 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8AE9 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8AEA 23               inc hl                                          ; _ al siguiente.
 396+ 8AEB A7               and a
 397+ 8AEC 20 C0            jr nz,3B
 398+ 8AEE
 399+ 8AEE 08               ex af,af
 400+ 8AEF ED 73 1C 86      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8AF3 F9               ld sp,hl
 402+ 8AF4
 403+ 8AF4 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8AF6 F5               push af                                         ; Puntero de impresión.
 405+ 8AF7 FD E5            push iy                                         ; Puntero objeto.
 406+ 8AF9 C5               push bc                                         ; Control.
 407+ 8AFA
 408+ 8AFA ED 7B 1C 86      ld sp,(Stack)
 409+ 8AFE
 410+ 8AFE              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8AFE
 412+ 8AFE 21 13 86     	ld hl,Ctrl_1
 413+ 8B01 CB C6        	set 0,(hl)
 414+ 8B03
 415+ 8B03 DD E5        	push ix
 416+ 8B05 E1               pop hl
 417+ 8B06 F5               push af
 418+ 8B07 DD E1            pop ix
 419+ 8B09
 420+ 8B09 CD A0 7F     	call Guarda_foto_registros
 421+ 8B0C
 422+ 8B0C 21 13 86     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8B0F CB 86        	res 0,(hl)
 424+ 8B11
 425+ 8B11              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8B11              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8B11
 428+ 8B11 CD 15 88         call Inicia_Puntero_Disparo_Amadeus
 429+ 8B14 CD 0E 88         call Inicia_Puntero_Disparo_Entidades
 430+ 8B17
 431+ 8B17 C9           4 ret
 432+ 8B18
 433+ 8B18              ; ----------------------------------------------------------------
 434+ 8B18              ;
 435+ 8B18              ;   4/3/23
 436+ 8B18              ;
 437+ 8B18              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8B18              ;   _ al generarse el disparo.
 439+ 8B18              ;
 440+ 8B18              ;       "$80" ..... No se produce colisión.
 441+ 8B18              ;       "$81" ..... Se produce colisión.
 442+ 8B18
 443+ 8B18              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8B18              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8B18
 446+ 8B18
 447+ 8B18 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8B1A E5               push hl                                        ; Puntero de impresión.
 449+ 8B1B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8B1D CD 39 8B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8B20
 452+ 8B20 7B               ld a,e
 453+ 8B21 E6 01            and 1
 454+ 8B23 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8B25
 456+ 8B25 E1               pop hl
 457+ 8B26 E5               push hl
 458+ 8B27 CD BE 90         call NextScan
 459+ 8B2A
 460+ 8B2A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8B2B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8B2D 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8B2F              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8B2F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8B31 CD 39 8B         call Bucle_2
 466+ 8B34
 467+ 8B34 43           2 ld b,e
 468+ 8B35 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8B36 FD E1            pop iy
 470+ 8B38 C9               ret
 471+ 8B39
 472+ 8B39               ; ---------- ----------
 473+ 8B39
 474+ 8B39 06 02        Bucle_2 ld b,2
 475+ 8B3B FD 7E 00     2 ld a,(iy)
 476+ 8B3E A6               and (hl)
 477+ 8B3F 28 02            jr z,1F
 478+ 8B41 1E 81            ld e,$81
 479+ 8B43 23           1 inc hl
 480+ 8B44 FD 23            inc iy
 481+ 8B46 10 F3            djnz 2B
 482+ 8B48 C9               ret
 483+ 8B49
 484+ 8B49              ; -------------------------------------------------------------------------------------------------------------
 485+ 8B49              ;
 486+ 8B49              ;   11/04/23
 487+ 8B49              ;
 488+ 8B49              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8B49              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8B49              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8B49              ;
 492+ 8B49              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8B49
 494+ 8B49              Compara_coordenadas_X
 495+ 8B49
 496+ 8B49              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8B49              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8B49
 499+ 8B49              ; Preparamos registros:
 500+ 8B49
 501+ 8B49 21 DE 85         ld hl,Filas+6
 502+ 8B4C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8B4D 23               inc hl
 504+ 8B4E 23               inc hl
 505+ 8B4F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8B50 43               ld b,e
 507+ 8B51 21 EC 85         ld hl,Filas+20
 508+ 8B54 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8B55 21 31 86         ld hl,Coordenadas_X_Entidad
 510+ 8B58 CD 67 8D         call Guarda_coordenadas_X
 511+ 8B5B
 512+ 8B5B              ; Preparamos registros:
 513+ 8B5B
 514+ 8B5B 21 7C 84         ld hl,Amadeus_db+6
 515+ 8B5E 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8B5F 23               inc hl
 517+ 8B60 23               inc hl
 518+ 8B61 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8B62 7B               ld a,e
 520+ 8B63 08               ex af,af'
 521+ 8B64 21 8A 84         ld hl,Amadeus_db+20
 522+ 8B67 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8B68 21 2E 86         ld hl,Coordenadas_X_Amadeus
 524+ 8B6B CD 67 8D         call Guarda_coordenadas_X
 525+ 8B6E
 526+ 8B6E              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8B6E              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8B6E
 529+ 8B6E 04               inc b
 530+ 8B6F 05               dec b
 531+ 8B70 28 04            jr z,1F
 532+ 8B72 06 03            ld b,3
 533+ 8B74 18 02            jr 2F
 534+ 8B76 06 02        1 ld b,2
 535+ 8B78 08           2 ex af,af'
 536+ 8B79 3C               inc a
 537+ 8B7A 3D               dec a
 538+ 8B7B 28 04            jr z,5F
 539+ 8B7D 0E 03            ld c,3
 540+ 8B7F 18 02            jr 6F
 541+ 8B81 0E 02        5 ld c,2
 542+ 8B83 79           6 ld a,c
 543+ 8B84 08               ex af,af'
 544+ 8B85 11 31 86         ld de,Coordenadas_X_Entidad
 545+ 8B88 1A           4 ld a,(de)
 546+ 8B89 21 2E 86         ld hl,Coordenadas_X_Amadeus
 547+ 8B8C BE           3 cp (hl)
 548+ 8B8D 28 0E            jr z,7F
 549+ 8B8F 23               inc hl
 550+ 8B90 0D               dec c
 551+ 8B91 20 F9            jr nz,3B
 552+ 8B93 13               inc de
 553+ 8B94 08               ex af,af'
 554+ 8B95 4F               ld c,a
 555+ 8B96 08               ex af,af'
 556+ 8B97 10 EF            djnz 4B
 557+ 8B99
 558+ 8B99              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8B99
 560+ 8B99 CD A6 8D     8 call Limpia_Coordenadas_X
 561+ 8B9C C9               ret
 562+ 8B9D
 563+ 8B9D              7
 564+ 8B9D 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 565+ 8B9F 32 F1 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 566+ 8BA2 21 29 86         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 567+ 8BA5 CB D6            set 2,(hl)
 568+ 8BA7 18 F0            jr 8B
 569+ 8BA9
 570+ 8BA9              ; -----------------------------------------------------------------------
 571+ 8BA9              ;
 572+ 8BA9              ;   17/04/23
 573+ 8BA9              ;
 574+ 8BA9
 575+ 8BA9              Detecta_colision_nave_entidad
 576+ 8BA9
 577+ 8BA9              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 578+ 8BA9
 579+ 8BA9 2A DA 85         ld hl,(Posicion_actual)
 580+ 8BAC CD 23 90         call Calcula_puntero_de_impresion
 581+ 8BAF
 582+ 8BAF              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 583+ 8BAF              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 584+ 8BAF
 585+ 8BAF DD E5            push ix
 586+ 8BB1 E1               pop hl
 587+ 8BB2 E5               push hl
 588+ 8BB3
 589+ 8BB3              ; ----- ----- -----
 590+ 8BB3 1E 00            ld e,0                                         ; Indica impacto.
 591+ 8BB5 06 0A            ld b,10
 592+ 8BB7 CD E7 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 593+ 8BBA 7B               ld a,e
 594+ 8BBB FE 05            cp 5
 595+ 8BBD 38 0E            jr c,3F
 596+ 8BBF
 597+ 8BBF              ; LLegados a este punto:
 598+ 8BBF              ;
 599+ 8BBF              ;   HAY COLISIÓN !!!!!.
 600+ 8BBF              ;
 601+ 8BBF              ;   .db (Impacto) de Amadeus a "1".
 602+ 8BBF              ;   SET el bit3 de (Impacto2).
 603+ 8BBF              ;
 604+ 8BBF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 605+ 8BBF
 606+ 8BBF 21 8F 84         ld hl,Amadeus_db+25
 607+ 8BC2 36 01            ld (hl),1
 608+ 8BC4 21 29 86         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 609+ 8BC7 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 610+ 8BC9 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 611+ 8BCB 18 18            jr 1F
 612+ 8BCD
 613+ 8BCD              ; -----
 614+ 8BCD
 615+ 8BCD E1           3 pop hl
 616+ 8BCE CD BE 90         call NextScan
 617+ 8BD1 E5               push hl
 618+ 8BD2 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 619+ 8BD3 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 620+ 8BD5 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 621+ 8BD7 30 0C            jr nc,1F
 622+ 8BD9              ;                                                  ; _ 2º scanline si esto es así.
 623+ 8BD9 10 DC            djnz 2B
 624+ 8BDB
 625+ 8BDB              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 626+ 8BDB
 627+ 8BDB              ; LLegados a este punto:
 628+ 8BDB              ;
 629+ 8BDB              ;   NO HAY COLISIÓN !!!!!.
 630+ 8BDB              ;
 631+ 8BDB              ;   .db (Impacto) de Amadeus a "0".
 632+ 8BDB              ;   RES el bit2 de (Impacto2).
 633+ 8BDB              ;
 634+ 8BDB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 635+ 8BDB              ;   Lo colocamos a "0".
 636+ 8BDB
 637+ 8BDB 21 29 86         ld hl,Impacto2
 638+ 8BDE CB 96            res 2,(hl)
 639+ 8BE0 2A 2A 86         ld hl,(Entidad_sospechosa_de_colision)
 640+ 8BE3 36 00            ld (hl),0
 641+ 8BE5
 642+ 8BE5 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 643+ 8BE6 C9               ret
 644+ 8BE7
 645+ 8BE7               ; ---------- ----------
 646+ 8BE7
 647+ 8BE7 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 648+ 8BE8 3A D9 85         ld a,(Columns)
 649+ 8BEB 47               ld b,a
 650+ 8BEC FD 7E 00     2 ld a,(iy)
 651+ 8BEF BE               cp (hl)
 652+ 8BF0 28 01            jr z,1F
 653+ 8BF2
 654+ 8BF2 1C               inc e
 655+ 8BF3
 656+ 8BF3 23           1 inc hl
 657+ 8BF4 FD 23            inc iy
 658+ 8BF6 10 F4            djnz 2B
 659+ 8BF8 C1               pop bc
 660+ 8BF9 C9               ret
 661+ 8BFA
 662+ 8BFA              ; -------------------------------------------------------------------------------------------------------------
 663+ 8BFA              ;
 664+ 8BFA              ;   13/03/23
 665+ 8BFA              ;
 666+ 8BFA              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 667+ 8BFA              ;
 668+ 8BFA              ;   DESTRUYE: HL,BC,DE y A.
 669+ 8BFA
 670+ 8BFA 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 671+ 8BFD 7E               ld a,(hl)
 672+ 8BFE A7               and a
 673+ 8BFF C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 674+ 8C00
 675+ 8C00 44               ld b,h
 676+ 8C01 4D               ld c,l
 677+ 8C02 2A 22 86         ld hl,(Stack_snapshot_disparos)
 678+ 8C05 E5               push hl
 679+ 8C06 A7               and a
 680+ 8C07 ED 42            sbc hl,bc
 681+ 8C09 E5               push hl
 682+ 8C0A C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 683+ 8C0B
 684+ 8C0B E1               pop hl
 685+ 8C0C 54               ld d,h
 686+ 8C0D 5D               ld e,l
 687+ 8C0E 1B               dec de
 688+ 8C0F ED B8            lddr                                                ; Limpiamos.
 689+ 8C11
 690+ 8C11 21 60 70         ld hl,Album_de_fotos_disparos
 691+ 8C14 22 22 86         ld (Stack_snapshot_disparos),hl
 692+ 8C17
 693+ 8C17 C9               ret
 694+ 8C18
 695+ 8C18              ; -------------------------------------------------------------------------------------------------------------
 696+ 8C18              ;
 697+ 8C18              ;   28/03/23
 698+ 8C18              ;
 699+ 8C18
 700+ 8C18 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 701+ 8C1B 2A 27 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 702+ 8C1E
 703+ 8C1E CD 4C 88     2 call Extrae_address
 704+ 8C21 7E               ld a,(hl)
 705+ 8C22 A7               and a
 706+ 8C23 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 707+ 8C25
 708+ 8C25              ; ----- ----- ----- ----- ----- -----
 709+ 8C25
 710+ 8C25 C5               push bc
 711+ 8C26 CD E2 8C         call foto_disparo_a_borrar
 712+ 8C29
 713+ 8C29              ; Existe colisión con este disparo???
 714+ 8C29
 715+ 8C29 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 716+ 8C2A 7E               ld a,(hl)
 717+ 8C2B 2B               dec hl
 718+ 8C2C E6 01            and 1
 719+ 8C2E 28 1D            jr z,9F
 720+ 8C30
 721+ 8C30              ;   En este punto:
 722+ 8C30              ;
 723+ 8C30              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 724+ 8C30              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 725+ 8C30              ;   _con la entidad).
 726+ 8C30              ;
 727+ 8C30              ;   Disparo_2A defw 0                                ; Control.
 728+ 8C30              ;    defw 0                                          ; Puntero objeto.
 729+ 8C30              ;    defw 0                                          ; Puntero de impresión.
 730+ 8C30              ;    defw 0                                          ; Rutina de impresión.
 731+ 8C30
 732+ 8C30 E5               push hl
 733+ 8C31
 734+ 8C31 06 04            ld b,4
 735+ 8C33 23           19 inc hl
 736+ 8C34 10 FD            djnz 19B
 737+ 8C36
 738+ 8C36 CD 4C 88         call Extrae_address
 739+ 8C39 CD D5 96         call Genera_coordenadas_disparo
 740+ 8C3C
 741+ 8C3C              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 742+ 8C3C
 743+ 8C3C 21 2C 86         ld hl,Coordenadas_disparo_certero
 744+ 8C3F 72               ld (hl),d
 745+ 8C40 23               inc hl
 746+ 8C41 73               ld (hl),e
 747+ 8C42
 748+ 8C42              ; Elimino el disparo de la base de datos.
 749+ 8C42
 750+ 8C42 E1               pop hl
 751+ 8C43 CD 5C 8D         call Elimina_disparo_de_base_de_datos
 752+ 8C46 21 29 86         ld hl,Impacto2
 753+ 8C49 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 754+ 8C4B
 755+ 8C4B 18 06            jr 11F
 756+ 8C4D
 757+ 8C4D CD 0B 8D     9 call Mueve_disparo
 758+ 8C50 CD E2 8C         call foto_disparo_a_borrar
 759+ 8C53
 760+ 8C53 C1           11 pop bc
 761+ 8C54 18 04            jr 7F
 762+ 8C56
 763+ 8C56              ; ----- ----- ----- ----- ----- -----
 764+ 8C56
 765+ 8C56 ED 42        1 sbc hl,bc
 766+ 8C58 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 767+ 8C5A
 768+ 8C5A 2A 27 86     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8C5D 23               inc hl
 770+ 8C5E 23               inc hl
 771+ 8C5F 22 27 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8C62 18 BA            jr 2B
 773+ 8C64
 774+ 8C64 CD 15 88     3 call Inicia_Puntero_Disparo_Amadeus
 775+ 8C67 01 66 84         ld bc,Disparo_11
 776+ 8C6A 2A 25 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8C6D
 778+ 8C6D CD 4C 88     5 call Extrae_address
 779+ 8C70 7E               ld a,(hl)
 780+ 8C71 A7               and a
 781+ 8C72 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8C74
 783+ 8C74              ; ----- ----- ----- ----- ----- -----
 784+ 8C74
 785+ 8C74 C5               push bc
 786+ 8C75 CD E2 8C         call foto_disparo_a_borrar
 787+ 8C78
 788+ 8C78              ; Existe colisión con este disparo???
 789+ 8C78
 790+ 8C78 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8C79 7E               ld a,(hl)
 792+ 8C7A 2B               dec hl
 793+ 8C7B E6 01            and 1
 794+ 8C7D 28 48            jr z,10F
 795+ 8C7F
 796+ 8C7F              ; La colisión se produce con Amadeus???
 797+ 8C7F              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8C7F
 799+ 8C7F E5               push hl
 800+ 8C80
 801+ 8C80 06 04            ld b,4
 802+ 8C82 23           16 inc hl
 803+ 8C83 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8C85 CD 4C 88         call Extrae_address
 805+ 8C88 CD D5 96         call Genera_coordenadas_disparo
 806+ 8C8B
 807+ 8C8B 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8C8C FE 16            cp $16
 809+ 8C8E 38 22            jr c,15F
 810+ 8C90
 811+ 8C90              ; (Colisiones en filas 16 y 17).
 812+ 8C90
 813+ 8C90 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8C91
 815+ 8C91              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8C91
 817+ 8C91 21 7C 84         ld hl,Amadeus_db+6
 818+ 8C94 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8C95 23               inc hl
 820+ 8C96 23               inc hl
 821+ 8C97 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8C98 21 8A 84         ld hl,Amadeus_db+20
 823+ 8C9B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8C9C 21 2E 86         ld hl,Coordenadas_X_Amadeus
 825+ 8C9F CD 67 8D         call Guarda_coordenadas_X
 826+ 8CA2
 827+ 8CA2 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8CA3
 829+ 8CA3              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8CA3
 831+ 8CA3 06 03            ld b,3
 832+ 8CA5 21 2E 86         ld hl,Coordenadas_X_Amadeus
 833+ 8CA8 7E           18 ld a,(hl)
 834+ 8CA9 BA               cp d
 835+ 8CAA 20 03            jr nz,17F
 836+ 8CAC
 837+ 8CAC              ; Colisión Amadeus !!!!!!!!!!
 838+ 8CAC
 839+ 8CAC E1               pop hl
 840+ 8CAD 18 09            jr 14F
 841+ 8CAF
 842+ 8CAF 23           17 inc hl
 843+ 8CB0 10 F6            djnz 18B
 844+ 8CB2
 845+ 8CB2              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8CB2              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8CB2
 848+ 8CB2 E1           15 pop hl
 849+ 8CB3 23               inc hl
 850+ 8CB4 35               dec (hl)
 851+ 8CB5 2B               dec hl
 852+ 8CB6 18 0F            jr 10F
 853+ 8CB8
 854+ 8CB8              ; -----------------------debug
 855+ 8CB8
 856+ 8CB8              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8CB8              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8CB8
 859+ 8CB8 E5           14 push hl
 860+ 8CB9 CD 5C 8D         call Elimina_disparo_de_base_de_datos
 861+ 8CBC 21 29 86         ld hl,Impacto2
 862+ 8CBF CB CE            set 1,(hl)
 863+ 8CC1 CD A6 8D         call Limpia_Coordenadas_X
 864+ 8CC4
 865+ 8CC4 E1               pop hl
 866+ 8CC5 18 06            jr 12F
 867+ 8CC7
 868+ 8CC7 CD 0B 8D     10 call Mueve_disparo
 869+ 8CCA CD E2 8C         call foto_disparo_a_borrar
 870+ 8CCD C1           12 pop bc
 871+ 8CCE
 872+ 8CCE 18 04            jr 8F
 873+ 8CD0
 874+ 8CD0              ; ----- ----- ----- ----- ----- -----
 875+ 8CD0
 876+ 8CD0 ED 42        4 sbc hl,bc
 877+ 8CD2 28 0A            jr z,6F
 878+ 8CD4
 879+ 8CD4 2A 25 86     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8CD7 23               inc hl
 881+ 8CD8 23               inc hl
 882+ 8CD9 22 25 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8CDC 18 8F            jr 5B
 884+ 8CDE
 885+ 8CDE CD 0E 88     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8CE1 C9               ret
 887+ 8CE2
 888+ 8CE2              ; ------------------------------------------------------------------
 889+ 8CE2
 890+ 8CE2              foto_disparo_a_borrar
 891+ 8CE2
 892+ 8CE2 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8CE3 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8CE4 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8CE5
 896+ 8CE5 E5               push hl
 897+ 8CE6 23               inc hl
 898+ 8CE7 23               inc hl
 899+ 8CE8 ED 73 1C 86      ld (Stack),sp
 900+ 8CEC F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8CED FD E1            pop iy
 902+ 8CEF DD E1            pop ix
 903+ 8CF1 E1               pop hl
 904+ 8CF2 ED 7B 1C 86      ld sp,(Stack)
 905+ 8CF6 3A 13 86         ld a,(Ctrl_1)
 906+ 8CF9 CB C7            set 0,a
 907+ 8CFB 32 13 86         ld (Ctrl_1),a
 908+ 8CFE CD A0 7F         call Guarda_foto_registros
 909+ 8D01 3A 13 86         ld a,(Ctrl_1)
 910+ 8D04 CB 87            res 0,a
 911+ 8D06 32 13 86         ld (Ctrl_1),a
 912+ 8D09 E1               pop hl
 913+ 8D0A C9               ret
 914+ 8D0B
 915+ 8D0B E5           Mueve_disparo push hl
 916+ 8D0C 7E               ld a,(hl)
 917+ 8D0D 06 04            ld b,4
 918+ 8D0F 23           1 inc hl
 919+ 8D10 10 FD            djnz 1B
 920+ 8D12
 921+ 8D12              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8D12
 923+ 8D12 CD 4C 88         call Extrae_address
 924+ 8D15
 925+ 8D15 E6 01            and 1
 926+ 8D17 28 2A            jr z,2F
 927+ 8D19
 928+ 8D19              ; Disparo hacia arriba, (Amadeus).
 929+ 8D19
 930+ 8D19              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8D19              ; _ de la dificultad.
 932+ 8D19
 933+ 8D19 CD CD 90         call PreviousScan
 934+ 8D1C CD CD 90         call PreviousScan
 935+ 8D1F CD CD 90         call PreviousScan
 936+ 8D22
 937+ 8D22              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8D22
 939+ 8D22 7C               ld a,h
 940+ 8D23 FE 40            cp $40
 941+ 8D25 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8D27
 943+ 8D27              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8D27
 945+ 8D27 EB               ex de,hl
 946+ 8D28 06 04            ld b,4
 947+ 8D2A 2B           6 dec hl
 948+ 8D2B 10 FD            djnz 6B
 949+ 8D2D
 950+ 8D2D CD 5C 8D         call Elimina_disparo_de_base_de_datos
 951+ 8D30
 952+ 8D30 18 0C            jr 4F
 953+ 8D32
 954+ 8D32              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8D32
 956+ 8D32 D5           3 push de
 957+ 8D33 C5               push bc
 958+ 8D34 CD 18 8B         call Comprueba_Colision
 959+ 8D37 78               ld a,b
 960+ 8D38 C1               pop bc
 961+ 8D39 D1               pop de
 962+ 8D3A
 963+ 8D3A EB               ex de,hl
 964+ 8D3B
 965+ 8D3B 73               ld (hl),e
 966+ 8D3C 23               inc hl
 967+ 8D3D 72               ld (hl),d
 968+ 8D3E
 969+ 8D3E E1           4 pop hl
 970+ 8D3F 23               inc hl
 971+ 8D40 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 972+ 8D41 2B               dec hl
 973+ 8D42 C9               ret
 974+ 8D43
 975+ 8D43              ; Disparo hacia abajo, (Entidad).
 976+ 8D43
 977+ 8D43              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 978+ 8D43              ; _ de la dificultad.
 979+ 8D43
 980+ 8D43 CD BE 90     2 call NextScan
 981+ 8D46 CD BE 90         call NextScan
 982+ 8D49 CD BE 90         call NextScan
 983+ 8D4C
 984+ 8D4C              ; Detecta si el disparo de la entidad sale de la pantalla.
 985+ 8D4C
 986+ 8D4C 7C               ld a,h
 987+ 8D4D FE 58            cp $58
 988+ 8D4F 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 989+ 8D51
 990+ 8D51 EB               ex de,hl
 991+ 8D52 06 04            ld b,4
 992+ 8D54 2B           5 dec hl
 993+ 8D55 10 FD            djnz 5B
 994+ 8D57
 995+ 8D57 CD 5C 8D         call Elimina_disparo_de_base_de_datos
 996+ 8D5A
 997+ 8D5A 18 E2            jr 4B
 998+ 8D5C
 999+ 8D5C              ; HL apunta al primer byte de la base de datos del disparo.
1000+ 8D5C
1001+ 8D5C 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1002+ 8D5F AF               xor a
1003+ 8D60 77               ld (hl),a
1004+ 8D61 54               ld d,h
1005+ 8D62 5D               ld e,l
1006+ 8D63 13               inc de
1007+ 8D64 ED B0            ldir
1008+ 8D66 C9               ret
1009+ 8D67
1010+ 8D67              ; -----------------------------------------------------------------
1011+ 8D67              ;
1012+ 8D67              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1013+ 8D67              ;
1014+ 8D67              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1015+ 8D67              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1016+ 8D67              ;
1017+ 8D67              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1018+ 8D67              ;
1019+ 8D67              ;   INPUTS:
1020+ 8D67              ;
1021+ 8D67              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1022+ 8D67              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1023+ 8D67              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1024+ 8D67
1025+ 8D67              ;   MODIFICA: A, HL, DE y C
1026+ 8D67
1027+ 8D67 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1028+ 8D68 79               ld a,c
1029+ 8D69 E6 01            and 1
1030+ 8D6B 20 03            jr nz,1F
1031+ 8D6D 14               inc d
1032+ 8D6E 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1033+ 8D70
1034+ 8D70              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8D70              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1036+ 8D70
1037+ 8D70 15           1 dec d
1038+ 8D71 23           2 inc hl
1039+ 8D72 72               ld (hl),d
1040+ 8D73
1041+ 8D73 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1042+ 8D74 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1043+ 8D75 C8               ret z
1044+ 8D76
1045+ 8D76 AF               xor a
1046+ 8D77 5F               ld e,a
1047+ 8D78 18 ED            jr Guarda_coordenadas_X
1048+ 8D7A
1049+ 8D7A              ; -----------------------------------------------------------------
1050+ 8D7A              ;
1051+ 8D7A              ;   12/04/23
1052+ 8D7A              ;
1053+ 8D7A
1054+ 8D7A 3A 29 86     Selector_de_impactos ld a,(Impacto2)
1055+ 8D7D A7               and a
1056+ 8D7E C8               ret z
1057+ 8D7F
1058+ 8D7F FE 04            cp 4
1059+ 8D81 20 09            jr nz,1F
1060+ 8D83
1061+ 8D83
1062+ 8D83              ; La colisión se produce por contacto entre Amadeus y una entidad.
1063+ 8D83
1064+ 8D83 CD A9 8B         call Detecta_colision_nave_entidad
1065+ 8D86
1066+ 8D86 21 29 86         ld hl,Impacto2
1067+ 8D89 CB 5E            bit 3,(hl)
1068+ 8D8B C0               ret nz                                               ; Existe colisión, RET.
1069+ 8D8C
1070+ 8D8C              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1071+ 8D8C              ; Primero analizamos si algún disparo impacta en Amadeus.
1072+ 8D8C
1073+ 8D8C 21 29 86     1 ld hl,Impacto2
1074+ 8D8F CB 4E            bit 1,(hl)
1075+ 8D91 28 07            jr z,2F
1076+ 8D93
1077+ 8D93 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1078+ 8D96 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1079+ 8D98 18 0B            jr 3F
1080+ 8D9A
1081+ 8D9A 21 29 86     2 ld hl,Impacto2
1082+ 8D9D CB 46            bit 0,(hl)
1083+ 8D9F C8               ret z
1084+ 8DA0
1085+ 8DA0              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1086+ 8DA0
1087+ 8DA0 21 13 86         ld hl,Ctrl_1
1088+ 8DA3 CB D6            set 2,(hl)
1089+ 8DA5
1090+ 8DA5 C9           3 ret
1091+ 8DA6
1092+ 8DA6              ; -----------------------------------------------------------------
1093+ 8DA6              ;
1094+ 8DA6              ;   16/04/23
1095+ 8DA6              ;
1096+ 8DA6
1097+ 8DA6 AF           Limpia_Coordenadas_X xor a
1098+ 8DA7 06 06            ld b,6
1099+ 8DA9 21 2E 86         ld hl,Coordenadas_X_Amadeus
1100+ 8DAC 77           1 ld (hl),a
1101+ 8DAD 23               inc hl
1102+ 8DAE 10 FC            djnz 1B
1103+ 8DB0 C9               ret
1104+ 8DB1
1105+ 8DB1              ; -----------------------------------------------------------------
1106+ 8DB1              ;
1107+ 8DB1              ;   25/04/23
1108+ 8DB1              ;
1109+ 8DB1
1110+ 8DB1              Determina_resultado_comparativa
1111+ 8DB1
1112+ 8DB1 7C               ld a,h
1113+ 8DB2 06 00            ld b,0
1114+ 8DB4
1115+ 8DB4 CD CC 8D         call Compara_cositas
1116+ 8DB7 04               inc b
1117+ 8DB8 05               dec b
1118+ 8DB9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1119+ 8DBA
1120+ 8DBA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1121+ 8DBB 06 00            ld b,0
1122+ 8DBD FE 02            cp $02
1123+ 8DBF 28 09            jr z,1F
1124+ 8DC1 FE FE            cp $fe
1125+ 8DC3 28 05            jr z,1F
1126+ 8DC5
1127+ 8DC5 CD CC 8D         call Compara_cositas
1128+ 8DC8 18 01            jr 2F
1129+ 8DCA
1130+ 8DCA 04           1 inc b
1131+ 8DCB C9           2 ret
1132+ 8DCC
1133+ 8DCC A7           Compara_cositas and a
1134+ 8DCD 28 07            jr z,1F
1135+ 8DCF FE FF            cp $ff
1136+ 8DD1 28 03            jr z,1F
1137+ 8DD3 FE 01            cp $01
1138+ 8DD5 C0               ret nz
1139+ 8DD6 04           1 inc b
1140+ 8DD7 C9               ret
1141+ 8DD8
# file closed: Disparo.asm
1055  8DD8              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8DD8              ; ******************************************************************************************************************************************************************************************
   2+ 8DD8              ;
   3+ 8DD8              ; 01/23
   4+ 8DD8              ;
   5+ 8DD8              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8DD8
   7+ 8DD8 CD B2 90     Draw call Prepara_draw
   8+ 8DDB 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8DDC A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8DDD 28 05        	jr z,2F
  11+ 8DDF
  12+ 8DDF 3A EC 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8DE2 18 0C        	jr 1F
  14+ 8DE4 2A EA 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8DE7 22 DA 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8DEA CD 79 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8DED              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8DED CD F8 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8DF0 3A 06 86     1 ld a,(Ctrl_0)
  20+ 8DF3 CB 6F        	bit 5,a
  21+ 8DF5 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8DF7
  23+ 8DF7 CD 0F 8E     	call Comprueba_limite_horizontal
  24+ 8DFA CD 9F 8E     	call Comprueba_limite_vertical
  25+ 8DFD
  26+ 8DFD              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8DFD
  28+ 8DFD CD EC 8F     3 call calcula_CColumnass
  29+ 8E00 CD 23 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8E03 CD 78 90     	call Define_rutina_de_impresion
  31+ 8E06
  32+ 8E06 3A 06 86     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8E09 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8E0B 32 06 86     	ld (Ctrl_0),a
  35+ 8E0E
  36+ 8E0E C9           	ret
  37+ 8E0F
  38+ 8E0F              ; *******************************************************************************************************************************************************************************************
  39+ 8E0F              ;	21/01/23
  40+ 8E0F              ;
  41+ 8E0F              ; 	Comprueba_limite_horizontal.
  42+ 8E0F              ;
  43+ 8E0F              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8E0F              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8E0F              ;
  46+ 8E0F              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8E0F              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8E0F              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8E0F              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8E0F
  51+ 8E0F
  52+ 8E0F
  53+ 8E0F 3A 06 86     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8E12 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8E14 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8E16 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8E18 32 06 86     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8E1B 18 09            jr 6F
  59+ 8E1D CB 5F        1 bit 3,a
  60+ 8E1F 28 0A            jr z,2F
  61+ 8E21 E6 F7            and $f7
  62+ 8E23 32 06 86         ld (Ctrl_0),a
  63+ 8E26 CD 79 8F     6 call Inicializacion
  64+ 8E29 18 5B            jr 5F
  65+ 8E2B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8E2C
  67+ 8E2C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8E2C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8E2C
  70+ 8E2C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8E2D 2A 10 86     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8E30 CD 7E 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8E33 67           	ld h,a
  74+ 8E34 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8E35 CD 7E 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8E38 67           	ld h,a
  77+ 8E39 A7           	and a
  78+ 8E3A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8E3C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8E3D 3A EC 85     	ld a,(Cuad_objeto)
  81+ 8E40 FE 02        	cp 2
  82+ 8E42 38 1E        	jr c,3F
  83+ 8E44 28 1C        	jr z,3F
  84+ 8E46 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8E47 28 23            jr z,7F
  86+ 8E49 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8E4B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8E4D E1           	pop hl
  89+ 8E4E
  90+ 8E4E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8E4E              ; _para indicar con E="2" en caso necesario.
  92+ 8E4E
  93+ 8E4E E5               push hl
  94+ 8E4F C5               push bc
  95+ 8E50 CD 7E 93     	call calcula_tercio
  96+ 8E53 FE 01        	cp 1
  97+ 8E55 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8E57 CD 87 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E5A 28 26            jr z,9F
 100+ 8E5C 38 24            jr c,9F
 101+ 8E5E 1E 00        11 ld e,0
 102+ 8E60 18 22            jr 8F
 103+ 8E62 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E63 28 07        	jr z, 7F
 105+ 8E65 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E67 1E 00         	ld e,0
 107+ 8E69 E1           	pop hl
 108+ 8E6A 18 04        	jr 4F
 109+ 8E6C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E6E 18 15            jr 10F
 111+ 8E70
 112+ 8E70              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E70              ; _para indicar con E="2" en caso necesario.
 114+ 8E70
 115+ 8E70 E5           4 push hl
 116+ 8E71 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E72 CD 7E 93     	call calcula_tercio
 118+ 8E75 FE 01        	cp 1
 119+ 8E77 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E79 CD 87 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E7C 28 04            jr z,9F
 122+ 8E7E 30 02            jr nc,9F
 123+ 8E80 18 02        	jr 8F
 124+ 8E82 1E 02        9 ld e,2
 125+ 8E84 C1           8 pop bc
 126+ 8E85 E1           10 pop hl
 127+ 8E86 C9           5 ret
 128+ 8E87
 129+ 8E87              ; --------------------
 130+ 8E87              ;
 131+ 8E87              ; 25/08/22
 132+ 8E87
 133+ 8E87 CD 7E 93     Comprueba_centro call calcula_tercio
 134+ 8E8A 67               ld h,a
 135+ 8E8B 08           	ex af,af
 136+ 8E8C FE 02        	cp 2
 137+ 8E8E 38 07        	jr c,1F
 138+ 8E90 28 05        	jr z,1F
 139+ 8E92 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E95 18 03        	jr 2F
 141+ 8E97 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E9A 08           2 ex af,af
 143+ 8E9B A7               and a
 144+ 8E9C ED 42            sbc hl,bc
 145+ 8E9E C9               ret
 146+ 8E9F
 147+ 8E9F              ; *********************************************************************************************************************************************************************************************
 148+ 8E9F              ;
 149+ 8E9F              ;   16/8/22
 150+ 8E9F              ;
 151+ 8E9F              ;	Comprueba_limite_vertical
 152+ 8E9F              ;
 153+ 8E9F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E9F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E9F              ;
 156+ 8E9F
 157+ 8E9F 2A DA 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8EA2 7D           	ld a,l
 159+ 8EA3 E6 1F        	and $1F
 160+ 8EA5 57           	ld d,a
 161+ 8EA6 3A 12 86     	ld a,(Limite_vertical)
 162+ 8EA9 BA           	cp d 											; Límite - Posición.
 163+ 8EAA 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8EAB 3A EC 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8EAE CB 47        	bit 0,a
 166+ 8EB0 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8EB2
 168+ 8EB2              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8EB2
 170+ 8EB2 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8EB3 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8EB5
 173+ 8EB5              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8EB5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8EB5
 176+ 8EB5 3A DE 85         ld a,(Coordenada_X)
 177+ 8EB8 16 0F            ld d,Centro_izquierda
 178+ 8EBA A7               and a
 179+ 8EBB 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8EBC 28 1E            jr z,3F
 181+ 8EBE 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8EC0              ;                                                    ; _salimos sin modificar nada.
 183+ 8EC0 18 0E            jr 2F
 184+ 8EC2 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8EC3 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8EC5
 187+ 8EC5              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8EC5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8EC5
 190+ 8EC5 3A DE 85         ld a,(Coordenada_X)
 191+ 8EC8 16 10            ld d,Centro_derecha
 192+ 8ECA A7               and a
 193+ 8ECB 92               sub d
 194+ 8ECC 28 0E            jr z,3F
 195+ 8ECE 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8ED0              ;                                                    ; _salimos sin modificar nada.
 197+ 8ED0 CB 43        2 bit 0,e
 198+ 8ED2 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8ED4 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8ED5 CD 69 8F         call Modificaccionne
 201+ 8ED8 C1           	pop bc
 202+ 8ED9 CD 79 8F         call Inicializacion
 203+ 8EDC C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8EDD
 205+ 8EDD              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8EDD
 207+ 8EDD C5           4 push bc
 208+ 8EDE 01 D9 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8EE1 0A           	ld a,(bc)
 210+ 8EE2 3D           	dec a
 211+ 8EE3 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8EE4 7D           	ld a,l
 213+ 8EE5 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8EE6 CB 47        	bit 0,a
 215+ 8EE8 28 03        	jr z,5F
 216+ 8EEA 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8EEB 18 2E        	jr 7F
 218+ 8EED
 219+ 8EED              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8EED
 221+ 8EED 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8EEE F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8EEF 3A 06 86     	ld a,(Ctrl_0)
 224+ 8EF2 CB 4F        	bit 1,a
 225+ 8EF4 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8EF6 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8EF7
 228+ 8EF7              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8EF7
 230+ 8EF7 1C               inc e
 231+ 8EF8 1D               dec e
 232+ 8EF9 20 07            jr nz,12F
 233+ 8EFB 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8EFC 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8EFD 22 DA 85     	ld (Posicion_actual),hl
 236+ 8F00 18 44        13 jr 9F
 237+ 8F02 CB 43        12 bit 0,e
 238+ 8F04 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8F06              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8F06 C1           	pop bc
 241+ 8F07 18 D3        	jr 3B
 242+ 8F09 80           14 add b
 243+ 8F0A 6F               ld l,a
 244+ 8F0B 22 DA 85     	ld (Posicion_actual),hl
 245+ 8F0E CD 69 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8F11 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8F13 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8F15 32 06 86         ld (Ctrl_0),a
 249+ 8F18 F1           	pop af
 250+ 8F19 18 2B        	jr 9F
 251+ 8F1B
 252+ 8F1B              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8F1B
 254+ 8F1B F5           7 push af
 255+ 8F1C 3A 06 86     	ld a,(Ctrl_0)
 256+ 8F1F CB 47        	bit 0,a
 257+ 8F21 20 1D        	jr nz,8F
 258+ 8F23 F1           	pop af
 259+ 8F24
 260+ 8F24              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8F24
 262+ 8F24 1C           	inc e
 263+ 8F25 1D               dec e
 264+ 8F26 20 07            jr nz,10F
 265+ 8F28 90           	sub b
 266+ 8F29 6F               ld l,a
 267+ 8F2A 22 DA 85     	ld (Posicion_actual),hl
 268+ 8F2D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8F2F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8F2F CB 43        10 bit 0,e
 271+ 8F31 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8F33              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8F33 C1           	pop bc
 274+ 8F34 18 A6        	jr 3B
 275+ 8F36 90           16 sub b
 276+ 8F37 6F               ld l,a
 277+ 8F38 22 DA 85     	ld (Posicion_actual),hl
 278+ 8F3B CD 69 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8F3E 18 06            jr 9F
 280+ 8F40 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8F42 32 06 86         ld (Ctrl_0),a
 282+ 8F45 F1           	pop af
 283+ 8F46 C1           9 pop bc
 284+ 8F47 1E 00        	ld e,0
 285+ 8F49 CD 79 8F         call Inicializacion
 286+ 8F4C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8F4D 08           	ex af,af
 288+ 8F4E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8F4F 18 8B            jr 3B
 290+ 8F51
 291+ 8F51              ; --------------------
 292+ 8F51
 293+ 8F51 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8F53 CD CD 90     1 call PreviousScan
 295+ 8F56 10 FB            djnz 1B
 296+ 8F58 22 DA 85     	ld (Posicion_actual),hl
 297+ 8F5B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F5C C9           	ret
 299+ 8F5D
 300+ 8F5D              ; --------------------
 301+ 8F5D
 302+ 8F5D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F5F CD BE 90     1 call NextScan
 304+ 8F62 10 FB            djnz 1B
 305+ 8F64 22 DA 85     	ld (Posicion_actual),hl
 306+ 8F67 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F68 C9           	ret
 308+ 8F69
 309+ 8F69              ; --------------------
 310+ 8F69              ;
 311+ 8F69              ;	22/01/23
 312+ 8F69              ;
 313+ 8F69              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F69              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F69              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F69
 317+ 8F69
 318+ 8F69              Modificaccionne
 319+ 8F69
 320+ 8F69 3A EC 85     	ld a,(Cuad_objeto)
 321+ 8F6C FE 02        	cp 2
 322+ 8F6E CC 51 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F71 DC 51 8F         call c,Modifica_Pos_actual
 324+ 8F74 C8           	ret z
 325+ 8F75 CD 5D 8F         call Modifica_Pos_actual2
 326+ 8F78 C9               ret
 327+ 8F79
 328+ 8F79              ; *************************************************************************************************************************************************************************************************
 329+ 8F79              ;
 330+ 8F79              ;	13/8/22
 331+ 8F79              ;
 332+ 8F79              ;	Inicializacion
 333+ 8F79              ;
 334+ 8F79              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F79              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F79              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F79              ;
 338+ 8F79              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F79              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F79              ;	_ desaparece/aparece.
 341+ 8F79
 342+ 8F79              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F79              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F79              ;
 345+ 8F79              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F79              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F79              ; 		   [E] ="0"
 348+ 8F79
 349+ 8F79              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F79
 351+ 8F79 CD 7E 93     Inicializacion call calcula_tercio
 352+ 8F7C 28 36        	jr z,primit
 353+ 8F7E E6 02        	and 2
 354+ 8F80 20 07        	jr nz,segmit
 355+ 8F82 7D           	ld a,l
 356+ 8F83 FE 7F        	cp $7f
 357+ 8F85 38 2D        	jr c,primit
 358+ 8F87 28 2B        	jr z,primit
 359+ 8F89 CD E6 8F     segmit call column
 360+ 8F8C 38 13        	jr c,tercuad
 361+ 8F8E 3E 04        cuarcuad ld a,4
 362+ 8F90 32 EC 85     	ld (Cuad_objeto),a
 363+ 8F93 21 20 48     	ld hl,$4820
 364+ 8F96 22 10 86     	ld (Limite_horizontal),hl
 365+ 8F99 21 12 86     	ld hl,Limite_vertical
 366+ 8F9C 36 0D        	ld (hl),$0d
 367+ 8F9E 08           	ex af,af
 368+ 8F9F 18 3C        	jr 1F
 369+ 8FA1              tercuad
 370+ 8FA1 3E 03        	ld a,3
 371+ 8FA3 32 EC 85     	ld (Cuad_objeto),a
 372+ 8FA6 21 20 48     	ld hl,$4820
 373+ 8FA9 22 10 86     	ld (Limite_horizontal),hl
 374+ 8FAC 21 12 86     	ld hl,Limite_vertical
 375+ 8FAF 36 12        	ld (hl),$12
 376+ 8FB1 08           	ex af,af
 377+ 8FB2 18 29        	jr 1F
 378+ 8FB4 CD E6 8F     primit call column
 379+ 8FB7 38 13        	jr c, primcuad
 380+ 8FB9              segcuad
 381+ 8FB9 3E 02        	ld a,2
 382+ 8FBB 32 EC 85     	ld (Cuad_objeto),a
 383+ 8FBE 21 C0 4F     	ld hl,$4fc0
 384+ 8FC1 22 10 86     	ld (Limite_horizontal),hl
 385+ 8FC4 21 12 86     	ld hl,Limite_vertical
 386+ 8FC7 36 0D        	ld (hl),$0d
 387+ 8FC9 08           	ex af,af
 388+ 8FCA 18 11        	jr 1F
 389+ 8FCC              primcuad
 390+ 8FCC 3E 01        	ld a,1
 391+ 8FCE 32 EC 85     	ld (Cuad_objeto),a
 392+ 8FD1 21 C0 4F     	ld hl,$4fc0
 393+ 8FD4 22 10 86     	ld (Limite_horizontal),hl
 394+ 8FD7 21 12 86     	ld hl,Limite_vertical
 395+ 8FDA 36 12        	ld (hl),$12
 396+ 8FDC 08           	ex af,af
 397+ 8FDD CD AA 96     1 call Genera_coordenadas
 398+ 8FE0 21 06 86     	ld hl,Ctrl_0
 399+ 8FE3 CB EE        	set 5,(hl)
 400+ 8FE5 C9           	ret
 401+ 8FE6
 402+ 8FE6              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8FE6
 404+ 8FE6              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8FE6              ;
 406+ 8FE6              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8FE6
 408+ 8FE6 7D           column ld a,l
 409+ 8FE7 E6 1F        	and $1f
 410+ 8FE9 FE 10         	cp $10
 411+ 8FEB C9            	ret
 412+ 8FEC
 413+ 8FEC              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8FEC              ;
 415+ 8FEC              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8FEC              ;
 417+ 8FEC              ; 14/12/22
 418+ 8FEC              ;
 419+ 8FEC              ;	Modifica: A y BC.
 420+ 8FEC
 421+ 8FEC 3A EC 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8FEF E6 01        	and 1
 423+ 8FF1 28 17        	jr z,1F
 424+ 8FF3
 425+ 8FF3              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8FF3
 427+ 8FF3 3A DE 85     	ld a,(Coordenada_X)
 428+ 8FF6 47           	ld b,a
 429+ 8FF7 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8FF8 79           	ld a,c
 431+ 8FF9 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8FFA 38 08        	jr c,2F
 433+ 8FFC 47           	ld b,a
 434+ 8FFD 79           	ld a,c
 435+ 8FFE 90           	sub b
 436+ 8FFF 32 0F 86     	ld (Columnas),a
 437+ 9002 18 1B        	jr 4F
 438+ 9004 79           2 ld a,c
 439+ 9005 32 0F 86     	ld (Columnas),a
 440+ 9008 18 15        	jr 4F
 441+ 900A
 442+ 900A              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 900A
 444+ 900A 3A DE 85     1 ld a,(Coordenada_X)
 445+ 900D 81           	add c
 446+ 900E 3D           	dec a
 447+ 900F D6 1F        	sub $1f
 448+ 9011 38 08        	jr c,3F
 449+ 9013 47           	ld b,a
 450+ 9014 79           	ld a,c
 451+ 9015 90           	sub b
 452+ 9016 32 0F 86     	ld (Columnas),a
 453+ 9019 18 04        	jr 4F
 454+ 901B 79           3 ld a,c
 455+ 901C 32 0F 86     	ld (Columnas),a
 456+ 901F D9           4 exx
 457+ 9020 4F           	ld c,a
 458+ 9021 D9           	exx
 459+ 9022 C9            ret
 460+ 9023
 461+ 9023              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9023              ;
 463+ 9023              ; 7/1/23
 464+ 9023              ;
 465+ 9023              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9023              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9023              ;
 468+ 9023              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9023              ;	DESTRUYE: HL,B Y A.
 470+ 9023
 471+ 9023 3A EC 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9026 FE 02        	cp 2
 473+ 9028 38 18        	jr c,1F
 474+ 902A 28 16        	jr z,1F
 475+ 902C E6 01        	and 1
 476+ 902E 28 0D        	jr z,3F
 477+ 9030
 478+ 9030              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9030
 480+ 9030 CD 6C 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9033
 482+ 9033 7D           9 ld a,l
 483+ 9034 E6 1F        	and $1f
 484+ 9036 28 2A        	jr z,7F
 485+ 9038 2B           	dec hl
 486+ 9039 10 F8        	djnz 9B
 487+ 903B 18 25        	jr 7F
 488+ 903D
 489+ 903D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 903D
 491+ 903D 2A DA 85     3 ld hl,(Posicion_actual)
 492+ 9040 18 20        	jr 7F
 493+ 9042
 494+ 9042 28 14        1 jr z,2F
 495+ 9044
 496+ 9044              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9044
 498+ 9044 CD 6C 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9047 7D           4 ld a,l
 500+ 9048 E6 1F        	and $1f
 501+ 904A 28 03        	jr z,6F
 502+ 904C 2B           	dec hl
 503+ 904D 10 F8        	djnz 4B
 504+ 904F 06 0F        6 ld b,15
 505+ 9051 CD CD 90     5 call PreviousScan
 506+ 9054 10 FB        	djnz 5B
 507+ 9056 18 0A        	jr 7F
 508+ 9058
 509+ 9058              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9058
 511+ 9058 CD 6C 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 905B 06 0F        	ld b,15
 513+ 905D CD CD 90     8 call PreviousScan
 514+ 9060 10 FB        	djnz 8B
 515+ 9062
 516+ 9062 E5           7 push hl
 517+ 9063 DD E1        	pop ix
 518+ 9065
 519+ 9065 2A DC 85     	ld hl,(Puntero_objeto)
 520+ 9068 E5           	push hl
 521+ 9069 FD E1        	pop iy
 522+ 906B
 523+ 906B C9           	ret
 524+ 906C
 525+ 906C              ; --------------------------------------------------------------------------------------------------------------------
 526+ 906C              ;
 527+ 906C              ;	2/1/23
 528+ 906C              ;
 529+ 906C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 906C              ;
 531+ 906C              ;	Tras esta rutina tenemos:
 532+ 906C              ;
 533+ 906C              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 906C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 906C              ;
 536+ 906C              ;	DESTRUYE!!!!! HL,B y A.
 537+ 906C
 538+ 906C 2A DA 85     Operandos ld hl,(Posicion_actual)
 539+ 906F 3A 0F 86     	ld a,(Columnas)
 540+ 9072 3D           	dec a
 541+ 9073 20 01        	jr nz,1F
 542+ 9075 3C           	inc a
 543+ 9076 47           1 ld b,a
 544+ 9077 C9           	ret
 545+ 9078
 546+ 9078              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9078              ;
 548+ 9078              ;	3/1/23
 549+ 9078              ;
 550+ 9078              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9078              ;
 552+ 9078              ;	Destruye: A,B,HL y DE.
 553+ 9078
 554+ 9078              Define_rutina_de_impresion
 555+ 9078
 556+ 9078 3A D9 85     	ld a,(Columns)
 557+ 907B 47           	ld b,a
 558+ 907C 3A 0F 86     	ld a,(Columnas)
 559+ 907F B8           	cp b
 560+ 9080 20 0D        	jr nz,2f
 561+ 9082
 562+ 9082              ;	La entidad se imprime entera.
 563+ 9082
 564+ 9082 21 4E 91     	ld hl, Indice_entidades_completas
 565+ 9085 E6 01        	and 1
 566+ 9087 28 02        	jr z,1F
 567+ 9089
 568+ 9089 23           	inc hl
 569+ 908A 23           	inc hl
 570+ 908B
 571+ 908B CD 4C 88     1 call Extrae_address
 572+ 908E C9           	ret		;	ret
 573+ 908F
 574+ 908F              ;	La entidad no se imprime entera en pantalla.
 575+ 908F
 576+ 908F 3A EC 85     2 ld a,(Cuad_objeto)
 577+ 9092 E6 01        	and 1
 578+ 9094 28 17        	jr z,3F
 579+ 9096
 580+ 9096              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9096
 582+ 9096 21 52 91     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 9099 3A D9 85     4 ld a,(Columns)
 584+ 909C E6 01        	and 1
 585+ 909E 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 90A0
 587+ 90A0 23           	inc hl
 588+ 90A1 23           	inc hl
 589+ 90A2
 590+ 90A2 3A 0F 86     	ld a,(Columnas)
 591+ 90A5 E6 01        	and 1
 592+ 90A7 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 90A9
 594+ 90A9 23           	inc hl
 595+ 90AA 23           	inc hl
 596+ 90AB
 597+ 90AB 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 90AD
 599+ 90AD 21 58 91     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 90B0 18 E7        	jr 4B
 601+ 90B2
 602+ 90B2              ; --------------------------------------------------------------------------------------------------------------------
 603+ 90B2              ;
 604+ 90B2              ;	Prepara_draw
 605+ 90B2              ;
 606+ 90B2              ;	Es una rutina de carga.
 607+ 90B2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 90B2              ;
 609+ 90B2              ;	FUNCIONAMIENTO:
 610+ 90B2              ;
 611+ 90B2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 90B2              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 90B2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 90B2              ;
 615+ 90B2              ;	DESTRUYE:
 616+ 90B2              ;
 617+ 90B2              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 90B2
 619+ 90B2 21 D8 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 90B5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 90B6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 90B7 4E           	ld c,(hl)
 623+ 90B8 2A DA 85     	ld hl,(Posicion_actual)
 624+ 90BB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 90BD C9           	ret
 626+ 90BE
 627+ 90BE              ;----------------------------------------------------------------------------------------------------------------
 628+ 90BE              ;
 629+ 90BE              ;	5/08/22
 630+ 90BE              ;
 631+ 90BE              ;   NextScan.
 632+ 90BE              ;
 633+ 90BE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 90BE              ;
 635+ 90BE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 90BE              ;
 637+ 90BE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 90BE              ;
 639+ 90BE              ;       DESTRUIDOS: AF y HL !!!
 640+ 90BE              ;
 641+ 90BE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 90BE              ;
 643+ 90BE
 644+ 90BE 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 90BF 7C               ld a,h
 646+ 90C0 E6 07            and 7
 647+ 90C2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 90C3
 649+ 90C3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 90C4 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 90C6 6F               ld l,a
 652+ 90C7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 90C8
 654+ 90C8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 90C9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 90CB 67               ld h,a
 657+ 90CC C9               ret
 658+ 90CD
 659+ 90CD              ;----------------------------------------------------------------------------------------------------------------
 660+ 90CD              ;
 661+ 90CD              ;	5/08/22
 662+ 90CD              ;
 663+ 90CD              ;   PreviousScan.
 664+ 90CD              ;
 665+ 90CD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 90CD              ;
 667+ 90CD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 90CD              ;
 669+ 90CD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 90CD              ;
 671+ 90CD              ;       DESTRUIDOS: AF y HL !!!
 672+ 90CD              ;
 673+ 90CD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 90CD              ;
 675+ 90CD
 676+ 90CD 7C           PreviousScan ld a,h
 677+ 90CE 25               dec h               ; Dec H.
 678+ 90CF E6 07            and 7
 679+ 90D1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 90D2
 681+ 90D2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 90D3 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 90D5 6F               ld l,a
 684+ 90D6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 90D7
 686+ 90D7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 90D8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 90DA 67               ld h,a
 689+ 90DB C9               ret
 690+ 90DC
 691+ 90DC              ; -----------------------------------------------------------------------------------
 692+ 90DC              ;
 693+ 90DC              ;	28/2/23
 694+ 90DC              ;
 695+ 90DC              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 90DC              ;	Extrae fotos de Album_de_fotos.
 697+ 90DC
 698+ 90DC              Extrae_foto_entidades
 699+ 90DC
 700+ 90DC 3A 1B 86     	ld a,(Numero_de_malotes)
 701+ 90DF A7           	and a
 702+ 90E0 C8           	ret z
 703+ 90E1 ED 73 1C 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 90E5 31 00 70     	ld sp,Album_de_fotos
 705+ 90E8
 706+ 90E8 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 90EA E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 90EB D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 90EC
 710+ 90EC ED 73 1E 86  	ld (Stack_2),sp
 711+ 90F0 ED 7B 1C 86  	ld sp,(Stack)
 712+ 90F4
 713+ 90F4              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 90F4
 715+ 90F4 3E CD        	ld a,$cd
 716+ 90F6 32 FE 90     	ld (Imprime),a
 717+ 90F9 EB           	ex de,hl
 718+ 90FA 22 FF 90     	ld (Imprime+1),hl
 719+ 90FD EB           	ex de,hl
 720+ 90FE
 721+ 90FE              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 90FE
 723+ 90FE 00 00 00     Imprime db 0,0,0
 724+ 9101
 725+ 9101 3A 1B 86     	ld a,(Numero_de_malotes)
 726+ 9104 3D           	dec a
 727+ 9105 28 09        	jr z,1F
 728+ 9107 32 1B 86      	ld (Numero_de_malotes),a
 729+ 910A
 730+ 910A ED 7B 1E 86   	ld sp,(Stack_2)
 731+ 910E 18 D8        	jr 2B
 732+ 9110
 733+ 9110 AF           1 xor a
 734+ 9111 32 1E 86     	ld (Stack_2),a
 735+ 9114 C9           	ret
 736+ 9115
 737+ 9115              ; -----------------------------------------------------------------------------------
 738+ 9115              ;
 739+ 9115              ;	28/2/23
 740+ 9115              ;
 741+ 9115              ;	Pinta los disparos generados.
 742+ 9115
 743+ 9115              Extrae_foto_disparos
 744+ 9115
 745+ 9115 3A 24 86     	ld a,(Numero_de_disparotes)
 746+ 9118 A7           	and a
 747+ 9119 C8           	ret z
 748+ 911A ED 73 1C 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 911E 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 9121
 751+ 9121 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 9123 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 9124 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 9125
 755+ 9125 ED 73 1E 86  	ld (Stack_2),sp
 756+ 9129 ED 7B 1C 86  	ld sp,(Stack)
 757+ 912D
 758+ 912D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 912D
 760+ 912D 3E CD        	ld a,$cd
 761+ 912F 32 37 91     	ld (Imprime2),a
 762+ 9132 EB           	ex de,hl
 763+ 9133 22 38 91     	ld (Imprime2+1),hl
 764+ 9136 EB           	ex de,hl
 765+ 9137
 766+ 9137              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9137
 768+ 9137 00 00 00     Imprime2 db 0,0,0
 769+ 913A
 770+ 913A 3A 24 86     	ld a,(Numero_de_disparotes)
 771+ 913D 3D           	dec a
 772+ 913E 28 09        	jr z,1F
 773+ 9140 32 24 86      	ld (Numero_de_disparotes),a
 774+ 9143
 775+ 9143 ED 7B 1E 86  	ld sp,(Stack_2)
 776+ 9147 18 D8        	jr 2B
 777+ 9149
 778+ 9149 AF           1 xor a
 779+ 914A 32 1E 86     	ld (Stack_2),a
 780+ 914D C9           	ret
 781+ 914E
# file closed: Draw_XOR.asm
1056  914E              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 914E              ;   índices de Rutinas de impresión.
   2+ 914E
   3+ 914E 5E 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9150 8B 91            defw Pinta_Amadeus_3x2
   5+ 9152
   6+ 9152 E1 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9154 81 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9156 35 92            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9158
  10+ 9158 0B 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 915A 0F 93            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 915C C3 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 915E
  14+ 915E
  15+ 915E              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 915E              ;
  17+ 915E              ;   12/12/22
  18+ 915E              ;
  19+ 915E              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 915E              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 915E              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 915E              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 915E              ;
  24+ 915E              ;   Modifica: DE y HL.
  25+ 915E
  26+ 915E ED 73 1C 86  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9162 FD F9        	ld sp,iy
  28+ 9164 06 10            ld b,16
  29+ 9166 D1           1 pop de
  30+ 9167 7B               ld a,e
  31+ 9168 AE               xor (hl)
  32+ 9169 77           	ld (hl),a
  33+ 916A 23           	inc hl
  34+ 916B 7A               ld a,d
  35+ 916C AE               xor (hl)
  36+ 916D 77           	ld (hl),a
  37+ 916E 2B           	dec hl
  38+ 916F 24           	inc h
  39+ 9170 7C               ld a,h
  40+ 9171 E6 07            and 7
  41+ 9173 20 0A            jr nz,2F
  42+ 9175 7D               ld a,l
  43+ 9176 C6 20            add a,$20
  44+ 9178 6F               ld l,a
  45+ 9179 38 04            jr c,2F
  46+ 917B 7C               ld a,h
  47+ 917C D6 08            sub 8
  48+ 917E 67               ld h,a
  49+ 917F 7C           2 ld a,h
  50+ 9180 FE 58            cp $58
  51+ 9182 28 02            jr z,3F
  52+ 9184 10 E0            djnz 1B
  53+ 9186 ED 7B 1C 86  3 ld sp,(Stack)
  54+ 918A C9           	ret
  55+ 918B
  56+ 918B ED 73 1C 86  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 918F FD F9        	ld sp,iy
  58+ 9191 06 08            ld b,8
  59+ 9193 D1           1 pop de
  60+ 9194 7B               ld a,e
  61+ 9195 AE               xor (hl)
  62+ 9196 77           	ld (hl),a
  63+ 9197 23           	inc hl
  64+ 9198 7A               ld a,d
  65+ 9199 AE               xor (hl)
  66+ 919A 77           	ld (hl),a
  67+ 919B 23           	inc hl
  68+ 919C D1           	pop de
  69+ 919D 7B               ld a,e
  70+ 919E AE               xor (hl)
  71+ 919F 77           	ld (hl),a
  72+ 91A0 2B           	dec hl
  73+ 91A1 2B           	dec hl
  74+ 91A2 24           	inc h
  75+ 91A3 7C               ld a,h
  76+ 91A4 E6 07            and 7
  77+ 91A6 20 0A            jr nz,2F
  78+ 91A8 7D               ld a,l
  79+ 91A9 C6 20            add a,$20
  80+ 91AB 6F               ld l,a
  81+ 91AC 38 04            jr c,2F
  82+ 91AE 7C               ld a,h
  83+ 91AF D6 08            sub 8
  84+ 91B1 67               ld h,a
  85+ 91B2 7C           2 ld a,h
  86+ 91B3 FE 58            cp $58
  87+ 91B5 28 25            jr z,4F
  88+ 91B7 7A               ld a,d
  89+ 91B8 AE               xor (hl)
  90+ 91B9 77               ld (hl),a
  91+ 91BA D1           	pop de
  92+ 91BB 23           	inc hl
  93+ 91BC 7B               ld a,e
  94+ 91BD AE               xor (hl)
  95+ 91BE 77           	ld (hl),a
  96+ 91BF 23           	inc hl
  97+ 91C0 7A               ld a,d
  98+ 91C1 AE               xor (hl)
  99+ 91C2 77           	ld (hl),a
 100+ 91C3 2B           	dec hl
 101+ 91C4 2B           	dec hl
 102+ 91C5 24           	inc h
 103+ 91C6 7C               ld a,h
 104+ 91C7 E6 07            and 7
 105+ 91C9 20 0A            jr nz,3F
 106+ 91CB 7D               ld a,l
 107+ 91CC C6 20            add a,$20
 108+ 91CE 6F               ld l,a
 109+ 91CF 38 04            jr c,3F
 110+ 91D1 7C               ld a,h
 111+ 91D2 D6 08            sub 8
 112+ 91D4 67               ld h,a
 113+ 91D5 7C           3 ld a,h
 114+ 91D6 FE 58            cp $58
 115+ 91D8 28 02            jr z,4F
 116+ 91DA 10 B7            djnz 1B
 117+ 91DC ED 7B 1C 86  4 ld sp,(Stack)
 118+ 91E0 C9           	ret
 119+ 91E1
 120+ 91E1              ; ---------------------------------------------------
 121+ 91E1
 122+ 91E1 ED 73 1C 86  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 91E5 FD F9        	ld sp,iy
 124+ 91E7
 125+ 91E7              ; >>>
 126+ 91E7
 127+ 91E7 06 10            ld b,16
 128+ 91E9 D1           1 pop de
 129+ 91EA 7A           	ld a,d
 130+ 91EB AE           	xor (hl)
 131+ 91EC 77           	ld (hl),a
 132+ 91ED 24           	inc h
 133+ 91EE 7C               ld a,h
 134+ 91EF E6 07            and 7
 135+ 91F1 20 0C            jr nz,2F
 136+ 91F3 7D               ld a,l
 137+ 91F4 C6 20            add a,$20
 138+ 91F6 6F               ld l,a
 139+ 91F7 38 06            jr c,2F
 140+ 91F9 7C               ld a,h
 141+ 91FA D6 08            sub 8
 142+ 91FC 67               ld h,a
 143+ 91FD 18 00            jr 2F
 144+ 91FF 7C           2 ld a,h
 145+ 9200 FE 58            cp $58
 146+ 9202 28 02            jr z,3F
 147+ 9204 10 E3            djnz 1B
 148+ 9206 ED 7B 1C 86  3 ld sp,(Stack)
 149+ 920A C9           	ret
 150+ 920B
 151+ 920B ED 73 1C 86  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 920F FD F9        	ld sp,iy
 153+ 9211
 154+ 9211              ; >>>
 155+ 9211
 156+ 9211 06 10            ld b,16
 157+ 9213 D1           1 pop de
 158+ 9214 7B           	ld a,e
 159+ 9215 AE           	xor (hl)
 160+ 9216 77           	ld (hl),a
 161+ 9217 24           	inc h
 162+ 9218 7C               ld a,h
 163+ 9219 E6 07            and 7
 164+ 921B 20 0C            jr nz,2F
 165+ 921D 7D               ld a,l
 166+ 921E C6 20            add a,$20
 167+ 9220 6F               ld l,a
 168+ 9221 38 06            jr c,2F
 169+ 9223 7C               ld a,h
 170+ 9224 D6 08            sub 8
 171+ 9226 67               ld h,a
 172+ 9227 18 00            jr 2F
 173+ 9229 7C           2 ld a,h
 174+ 922A FE 58            cp $58
 175+ 922C 28 02            jr z,3F
 176+ 922E 10 E3            djnz 1B
 177+ 9230 ED 7B 1C 86  3 ld sp,(Stack)
 178+ 9234 C9           	ret
 179+ 9235
 180+ 9235              ; ---------------------------------------------------
 181+ 9235
 182+ 9235 ED 73 1C 86  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9239 FD F9        	ld sp,iy
 184+ 923B 06 08            ld b,8
 185+ 923D D1           1 pop de
 186+ 923E 7A           	ld a,d
 187+ 923F AE           	xor (hl)
 188+ 9240 77           	ld (hl),a
 189+ 9241 23           	inc hl
 190+ 9242 D1           	pop de
 191+ 9243 7B           	ld a,e
 192+ 9244 AE           	xor (hl)
 193+ 9245 77           	ld (hl),a
 194+ 9246 2B           	dec hl
 195+ 9247 24            	inc h
 196+ 9248 7C               ld a,h
 197+ 9249 E6 07            and 7
 198+ 924B 20 0A            jr nz,2F
 199+ 924D 7D               ld a,l
 200+ 924E C6 20            add a,$20
 201+ 9250 6F               ld l,a
 202+ 9251 38 04            jr c,2F
 203+ 9253 7C               ld a,h
 204+ 9254 D6 08            sub 8
 205+ 9256 67               ld h,a
 206+ 9257 7C           2 ld a,h
 207+ 9258 FE 58            cp $58
 208+ 925A 28 20            jr z,4F
 209+ 925C D1               pop de
 210+ 925D 7B           	ld a,e
 211+ 925E AE           	xor (hl)
 212+ 925F 77           	ld (hl),a
 213+ 9260 23           	inc hl
 214+ 9261 7A           	ld a,d
 215+ 9262 AE           	xor (hl)
 216+ 9263 77           	ld (hl),a
 217+ 9264 2B           	dec hl
 218+ 9265 24           	inc h
 219+ 9266 7C               ld a,h
 220+ 9267 E6 07            and 7
 221+ 9269 20 0A            jr nz,3F
 222+ 926B 7D               ld a,l
 223+ 926C C6 20            add a,$20
 224+ 926E 6F               ld l,a
 225+ 926F 38 04            jr c,3F
 226+ 9271 7C               ld a,h
 227+ 9272 D6 08            sub 8
 228+ 9274 67               ld h,a
 229+ 9275 7C           3 ld a,h
 230+ 9276 FE 58            cp $58
 231+ 9278 28 02            jr z,4F
 232+ 927A 10 C1            djnz 1B
 233+ 927C ED 7B 1C 86  4 ld sp,(Stack)
 234+ 9280 C9           	ret
 235+ 9281
 236+ 9281 ED 73 1C 86  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9285 FD F9        	ld sp,iy
 238+ 9287 06 08            ld b,8
 239+ 9289 D1           1 pop de
 240+ 928A D1           	pop de
 241+ 928B 7B           	ld a,e
 242+ 928C AE           	xor (hl)
 243+ 928D 77           	ld (hl),a
 244+ 928E 24            	inc h
 245+ 928F 7C               ld a,h
 246+ 9290 E6 07            and 7
 247+ 9292 20 0A            jr nz,2F
 248+ 9294 7D               ld a,l
 249+ 9295 C6 20            add a,$20
 250+ 9297 6F               ld l,a
 251+ 9298 38 04            jr c,2F
 252+ 929A 7C               ld a,h
 253+ 929B D6 08            sub 8
 254+ 929D 67               ld h,a
 255+ 929E 7C           2 ld a,h
 256+ 929F FE 58            cp $58
 257+ 92A1 28 1B            jr z,4F
 258+ 92A3 D1               pop de
 259+ 92A4 7A           	ld a,d
 260+ 92A5 AE           	xor (hl)
 261+ 92A6 77           	ld (hl),a
 262+ 92A7 24           	inc h
 263+ 92A8 7C               ld a,h
 264+ 92A9 E6 07            and 7
 265+ 92AB 20 0A            jr nz,3F
 266+ 92AD 7D               ld a,l
 267+ 92AE C6 20            add a,$20
 268+ 92B0 6F               ld l,a
 269+ 92B1 38 04            jr c,3F
 270+ 92B3 7C               ld a,h
 271+ 92B4 D6 08            sub 8
 272+ 92B6 67               ld h,a
 273+ 92B7 7C           3 ld a,h
 274+ 92B8 FE 58            cp $58
 275+ 92BA 28 02            jr z,4F
 276+ 92BC 10 CB            djnz 1B
 277+ 92BE ED 7B 1C 86  4 ld sp,(Stack)
 278+ 92C2 C9           	ret
 279+ 92C3
 280+ 92C3 ED 73 1C 86  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 92C7 FD F9        	ld sp,iy
 282+ 92C9 06 08            ld b,8
 283+ 92CB D1           1 pop de
 284+ 92CC 7B           	ld a,e
 285+ 92CD AE           	xor (hl)
 286+ 92CE 77           	ld (hl),a
 287+ 92CF 23           	inc hl
 288+ 92D0 7A           	ld a,d
 289+ 92D1 AE           	xor (hl)
 290+ 92D2 77           	ld (hl),a
 291+ 92D3 2B           	dec hl
 292+ 92D4 24             	inc h
 293+ 92D5 7C               ld a,h
 294+ 92D6 E6 07            and 7
 295+ 92D8 20 0A            jr nz,2F
 296+ 92DA 7D               ld a,l
 297+ 92DB C6 20            add a,$20
 298+ 92DD 6F               ld l,a
 299+ 92DE 38 04            jr c,2F
 300+ 92E0 7C               ld a,h
 301+ 92E1 D6 08            sub 8
 302+ 92E3 67               ld h,a
 303+ 92E4 7C           2 ld a,h
 304+ 92E5 FE 58            cp $58
 305+ 92E7 28 21            jr z,4F
 306+ 92E9 D1               pop de
 307+ 92EA 7A           	ld a,d
 308+ 92EB AE           	xor (hl)
 309+ 92EC 77           	ld (hl),a
 310+ 92ED 23           	inc hl
 311+ 92EE D1               pop de
 312+ 92EF 7B           	ld a,e
 313+ 92F0 AE           	xor (hl)
 314+ 92F1 77           	ld (hl),a
 315+ 92F2 2B           	dec hl
 316+ 92F3 24           	inc h
 317+ 92F4 7C               ld a,h
 318+ 92F5 E6 07            and 7
 319+ 92F7 20 0A            jr nz,3F
 320+ 92F9 7D               ld a,l
 321+ 92FA C6 20            add a,$20
 322+ 92FC 6F               ld l,a
 323+ 92FD 38 04            jr c,3F
 324+ 92FF 7C               ld a,h
 325+ 9300 D6 08            sub 8
 326+ 9302 67               ld h,a
 327+ 9303 7C           3 ld a,h
 328+ 9304 FE 58            cp $58
 329+ 9306 28 02            jr z,4F
 330+ 9308 10 C1            djnz 1B
 331+ 930A ED 7B 1C 86  4 ld sp,(Stack)
 332+ 930E C9           	ret
 333+ 930F
 334+ 930F ED 73 1C 86  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9313 FD F9        	ld sp,iy
 336+ 9315 06 08            ld b,8
 337+ 9317 D1           1 pop de
 338+ 9318 7B           	ld a,e
 339+ 9319 AE           	xor (hl)
 340+ 931A 77           	ld (hl),a
 341+ 931B 24            	inc h
 342+ 931C 7C               ld a,h
 343+ 931D E6 07            and 7
 344+ 931F 20 0A            jr nz,2F
 345+ 9321 7D               ld a,l
 346+ 9322 C6 20            add a,$20
 347+ 9324 6F               ld l,a
 348+ 9325 38 04            jr c,2F
 349+ 9327 7C               ld a,h
 350+ 9328 D6 08            sub 8
 351+ 932A 67               ld h,a
 352+ 932B 7C           2 ld a,h
 353+ 932C FE 58            cp $58
 354+ 932E 28 1C            jr z,4F
 355+ 9330 D1               pop de
 356+ 9331 7A           	ld a,d
 357+ 9332 AE           	xor (hl)
 358+ 9333 77           	ld (hl),a
 359+ 9334 24           	inc h
 360+ 9335 7C               ld a,h
 361+ 9336 E6 07            and 7
 362+ 9338 20 0A            jr nz,3F
 363+ 933A 7D               ld a,l
 364+ 933B C6 20            add a,$20
 365+ 933D 6F               ld l,a
 366+ 933E 38 04            jr c,3F
 367+ 9340 7C               ld a,h
 368+ 9341 D6 08            sub 8
 369+ 9343 67               ld h,a
 370+ 9344 7C           3 ld a,h
 371+ 9345 FE 58            cp $58
 372+ 9347 28 03            jr z,4F
 373+ 9349 D1               pop de
 374+ 934A 10 CB            djnz 1B
 375+ 934C ED 7B 1C 86  4 ld sp,(Stack)
 376+ 9350 C9           	ret
 377+ 9351
 378+ 9351              ; ---------------------------------------------------
 379+ 9351              ;
 380+ 9351              ;   27/02/23
 381+ 9351              ;
 382+ 9351              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9351              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9351              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9351
 386+ 9351 ED 73 1C 86  Pinta_Disparo ld (Stack),sp
 387+ 9355 FD F9            ld sp,iy
 388+ 9357 06 02            ld b,2
 389+ 9359 D1           1 pop de
 390+ 935A 7B               ld a,e
 391+ 935B AE               xor (hl)
 392+ 935C 77               ld (hl),a
 393+ 935D 23               inc hl
 394+ 935E 7A               ld a,d
 395+ 935F AE               xor (hl)
 396+ 9360 77               ld (hl),a
 397+ 9361 2B               dec hl
 398+ 9362
 399+ 9362 24               inc h
 400+ 9363 7C               ld a,h
 401+ 9364 E6 07            and 7
 402+ 9366 20 0A            jr nz,2F
 403+ 9368 7D               ld a,l
 404+ 9369 C6 20            add a,$20
 405+ 936B 6F               ld l,a
 406+ 936C 38 04            jr c,2F
 407+ 936E 7C               ld a,h
 408+ 936F D6 08            sub 8
 409+ 9371 67               ld h,a
 410+ 9372 7C           2 ld a,h
 411+ 9373 FE 58            cp $58
 412+ 9375 28 02            jr z,3F
 413+ 9377
 414+ 9377 10 E0            djnz 1B
 415+ 9379 ED 7B 1C 86  3 ld sp,(Stack)
 416+ 937D C9               ret
 417+ 937E
# file closed: Rutinas_de_impresion_sprites.asm
1057  937E              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 937E              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 937E              ;
   3+ 937E              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 937E              ;
   5+ 937E              ; *****************************************************************************************************************************************************************************************
   6+ 937E              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 937E
   8+ 937E 7C           calcula_tercio ld a,h
   9+ 937F E6 18        	and $18
  10+ 9381 CB 2F        	sra a
  11+ 9383 CB 2F        	sra a
  12+ 9385 CB 2F        	sra a
  13+ 9387 C9           	ret
  14+ 9388
# file closed: calcula_tercio.asm
1058  9388              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9388              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9388              ;
   3+ 9388              ;
   4+ 9388              ;	CLS.
   5+ 9388              ;
   6+ 9388              ;	Limpia la pantalla y define sus atributos.
   7+ 9388              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9388              ;
   9+ 9388              ;	COLORES: 0 ..... NEGRO
  10+ 9388              ;    		 1 ..... AZUL
  11+ 9388              ; 			 2 ..... ROJO
  12+ 9388              ;			 3 ..... MAGENTA
  13+ 9388              ; 			 4 ..... VERDE
  14+ 9388              ; 			 5 ..... CIAN
  15+ 9388              ;			 6 ..... AMARILLO
  16+ 9388              ; 			 7 ..... BLANCO
  17+ 9388              ;
  18+ 9388              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9388              ;
  20+ 9388              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9388
  22+ 9388
  23+ 9388 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 938B 11 01 40     	LD DE,$4001
  25+ 938E 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9391 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9393 ED B0        	LDIR
  28+ 9395 01 FF 02     	LD BC,767
  29+ 9398 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9399 ED B0        	LDIR
  31+ 939B C9           	ret
  32+ 939C
# file closed: Cls.asm
1059  939C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 939C              ; ******************************************************************************************************************************************************************************************
   2+ 939C              ;
   3+ 939C              ;   22/01/23
   4+ 939C              ;
   5+ 939C              ;	Mov_down
   6+ 939C              ;
   7+ 939C              ; 	Mueve el Sprite X px hacia abajo.
   8+ 939C              ;
   9+ 939C              ;
  10+ 939C 21 06 86     Mov_down ld hl,Ctrl_0
  11+ 939F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 93A1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 93A1              ; 																	; _ en el caso de que no lo haya.
  14+ 93A1 3A F0 85     	ld a,(Vel_down)
  15+ 93A4 47           	ld b,a
  16+ 93A5 2A DA 85         ld hl,(Posicion_actual)
  17+ 93A8 CD 7E 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 93AB E6 02        	and 2
  19+ 93AD 28 0F        	jr z,1F
  20+ 93AF
  21+ 93AF              ; Nos encontramos en el último tercio de pantalla.
  22+ 93AF              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 93AF
  24+ 93AF 7C           	ld a,h
  25+ 93B0 FE 57        	cp $57
  26+ 93B2 20 0A        	jr nz,1F
  27+ 93B4 7D           	ld a,l
  28+ 93B5 C6 20        	add $20
  29+ 93B7 30 05        	jr nc,1F
  30+ 93B9
  31+ 93B9              ; ------------------------------
  32+ 93B9 CD 94 96     	call Reaparece_arriba
  33+ 93BC              ;	call Reinicio
  34+ 93BC              ; ------------------------------
  35+ 93BC
  36+ 93BC 18 08        	jr 3F
  37+ 93BE CD BE 90     1 call NextScan
  38+ 93C1 22 DA 85     	ld (Posicion_actual),hl
  39+ 93C4 10 E2            djnz 2B
  40+ 93C6 CD AA 96     3 call Genera_coordenadas
  41+ 93C9 C9           	ret
  42+ 93CA
  43+ 93CA              ; ******************************************************************************************************************************************************************************************
  44+ 93CA              ;
  45+ 93CA              ;   22/01/23
  46+ 93CA              ;
  47+ 93CA              ;	Mov_up
  48+ 93CA              ;
  49+ 93CA              ; 	Mueve el Sprite hacia arriba.
  50+ 93CA              ;
  51+ 93CA              ;
  52+ 93CA 21 06 86     Mov_up ld hl,Ctrl_0
  53+ 93CD CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 93CF              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 93CF              ; 																		; _ en el caso de que no lo haya.
  56+ 93CF 3A EF 85     	ld a,(Vel_up)
  57+ 93D2 47           	ld b,a
  58+ 93D3 2A DA 85     	ld hl,(Posicion_actual)
  59+ 93D6 CD 7E 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 93D9 A7           	and a
  61+ 93DA 20 10        	jr nz,1F
  62+ 93DC
  63+ 93DC              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 93DC              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 93DC
  66+ 93DC 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 93DD FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 93DF 20 0B            jr nz,1F
  69+ 93E1 7D               ld a,l
  70+ 93E2 D6 20            sub $20
  71+ 93E4 30 06            jr nc,1F
  72+ 93E6 25               dec h
  73+ 93E7
  74+ 93E7              ; -----------------------------
  75+ 93E7 CD 84 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 93EA              ;	call Reinicio
  77+ 93EA              ; -----------------------------
  78+ 93EA
  79+ 93EA 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 93EC CD CD 90     1 call PreviousScan
  81+ 93EF 22 DA 85     	ld (Posicion_actual),hl
  82+ 93F2 10 E2            djnz 3B
  83+ 93F4 CD AA 96     2 call Genera_coordenadas
  84+ 93F7 C9           	ret
  85+ 93F8
  86+ 93F8              ; ******************************************************************************************************************************************************************************************
  87+ 93F8              ;
  88+ 93F8              ;	19/10/22
  89+ 93F8              ;
  90+ 93F8              ;	Mov_right.
  91+ 93F8              ;
  92+ 93F8              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 93F8              ;
  94+ 93F8
  95+ 93F8 21 06 86     Mov_right ld hl,Ctrl_0
  96+ 93FB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 93FD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 93FD              ; 																	; _ en el caso de que no lo haya.
  99+ 93FD 3A 06 86     	ld a,(Ctrl_0)
 100+ 9400 CB 77        	bit 6,a
 101+ 9402 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9404
 103+ 9404 CD 32 96     	call Stop_Amadeus_right
 104+ 9407 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 9408 18 4D        	jr 8F
 106+ 940A
 107+ 940A 3A DE 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 940D FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 940F 20 46        	jr nz,8F
 110+ 9411
 111+ 9411 3A E0 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 9414 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9415 28 40        	jr z,8F
 114+ 9417
 115+ 9417              ; ---------- ---------- ----------
 116+ 9417              ;
 117+ 9417              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9417
 119+ 9417 3A EE 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 941A FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 941C 28 11        	jr z,1F
 122+ 941E 38 06        	jr c,6F
 123+ 9420 FE 04        	cp 4
 124+ 9422 28 14        	jr z,7F
 125+ 9424 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 9426
 127+ 9426              ; ---------- ---------- ----------
 128+ 9426              ;
 129+ 9426              ; Perfiles de velocidad
 130+ 9426              ;
 131+ 9426
 132+ 9426 3A E0 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 9429 FE FE        	cp $fe
 134+ 942B 20 2A        	jr nz,8F
 135+ 942D 18 10        	jr 3F
 136+ 942F 3A E0 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 9432 FE FD        	cp $fd
 138+ 9434 20 21        	jr nz,8F
 139+ 9436 18 07        	jr 3F
 140+ 9438 3A E0 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 943B FE FB        	cp $fb
 142+ 943D 20 18        	jr nz,8F
 143+ 943F
 144+ 943F              ; ---------- ---------- ----------
 145+ 943F
 146+ 943F              3
 147+ 943F CD 72 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 9442              ;	call Reinicio
 149+ 9442
 150+ 9442              ; ---------- ---------- ----------
 151+ 9442              ;
 152+ 9442              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 9442
 154+ 9442 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 9444 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 9445 CD 5E 94     	call DESPLZ_DER
 157+ 9448 C1           	pop bc
 158+ 9449 10 F9        	djnz 5B
 159+ 944B 2A DA 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 944E 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 944F 22 DA 85     	ld (Posicion_actual),hl
 162+ 9452 CD AA 96     	call Genera_coordenadas
 163+ 9455 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9457
 165+ 9457              ; ---------- ---------- ----------
 166+ 9457
 167+ 9457 2A DA 85     8 ld hl,(Posicion_actual)
 168+ 945A CD 5E 94     	call DESPLZ_DER
 169+ 945D C9           2 ret
 170+ 945E
 171+ 945E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 945E              ;
 173+ 945E              ;	22/9/22
 174+ 945E              ;
 175+ 945E
 176+ 945E CD 6D 94     DESPLZ_DER call Desplaza_derecha
 177+ 9461 CD B9 94         call modifica_parametros_1er_DESPLZ_2
 178+ 9464 CD E2 94         call Ciclo_completo
 179+ 9467 21 06 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 946A CB FE        	set 7,(hl)
 181+ 946C C9           	ret
 182+ 946D
 183+ 946D              ; ******************************************************************************************************************************************************************************************
 184+ 946D              ;	15/02/23
 185+ 946D              ;
 186+ 946D
 187+ 946D 3A EE 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9470 47           	ld b,a
 189+ 9471 2A E6 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9474 23           1 inc hl
 191+ 9475 23           	inc hl
 192+ 9476 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9478 22 E6 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 947B CD 4C 88     	call Extrae_address
 195+ 947E 22 DC 85     	ld (Puntero_objeto),hl
 196+ 9481
 197+ 9481              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9481
 199+ 9481              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9481              ; Cuántos movimientos hemos hecho ??
 201+ 9481              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9481
 203+ 9481 2A E2 85     7 ld hl,(Indice_Sprite_der)
 204+ 9484 EB           	ex de,hl
 205+ 9485 A7           	and a
 206+ 9486 ED 52        	sbc hl,de
 207+ 9488 CB 3D        	srl l
 208+ 948A 3E 08        6 ld a,8
 209+ 948C 95           	sub l
 210+ 948D 30 1E        	jr nc,3F
 211+ 948F
 212+ 948F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 948F              ; B="0".
 214+ 948F
 215+ 948F 04           4 inc b
 216+ 9490 3C           	inc a
 217+ 9491 20 FC        	jr nz,4B
 218+ 9493 78           	ld a,b
 219+ 9494 08           	ex af,af
 220+ 9495 2A E2 85     	ld hl,(Indice_Sprite_der)
 221+ 9498 23           5 inc hl
 222+ 9499 23           	inc hl
 223+ 949A 10 FC        	djnz 5B
 224+ 949C 22 E6 85     	ld (Puntero_DESPLZ_der),hl
 225+ 949F CD 4C 88     	call Extrae_address
 226+ 94A2 22 DC 85     	ld (Puntero_objeto),hl
 227+ 94A5
 228+ 94A5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 94A5              ; _(Posicion_actual).
 230+ 94A5
 231+ 94A5 21 DA 85     	ld hl,Posicion_actual
 232+ 94A8 34           	inc (hl)
 233+ 94A9 08               ex af,af
 234+ 94AA 6F           	ld l,a
 235+ 94AB 18 DD        	jr 6B
 236+ 94AD
 237+ 94AD              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 94AD
 239+ 94AD 47           3 ld b,a
 240+ 94AE 2A E4 85     	ld hl,(Indice_Sprite_izq)
 241+ 94B1 23           2 inc hl
 242+ 94B2 23           	inc hl
 243+ 94B3 10 FC        	djnz 2B
 244+ 94B5 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 94B8 C9           8 ret
 246+ 94B9
 247+ 94B9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 94B9              ;
 249+ 94B9              ;	24/7/22
 250+ 94B9              ;
 251+ 94B9              ;	modifica_parametros_1er_DESPLZ_2
 252+ 94B9              ;
 253+ 94B9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 94B9              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 94B9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 94B9
 257+ 94B9 3A E0 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 94BC A7           	and a
 259+ 94BD 20 1F        	jr nz,1F
 260+ 94BF D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 94C1 32 E0 85         ld (CTRL_DESPLZ),a
 262+ 94C4
 263+ 94C4 21 D9 85     	ld hl,Columns
 264+ 94C7 34           	inc (hl)
 265+ 94C8 3A EC 85     	ld a,(Cuad_objeto)
 266+ 94CB E6 01        	and 1
 267+ 94CD 28 0F        	jr z,1F
 268+ 94CF 2A DA 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 94D2 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 94D3 22 DA 85     	ld (Posicion_actual),hl
 271+ 94D6 CD AA 96     	call Genera_coordenadas
 272+ 94D9 CD 3E 96     	call Inc_CTRL_DESPLZ
 273+ 94DC 18 03        	jr 2F
 274+ 94DE CD 3E 96     1 call Inc_CTRL_DESPLZ
 275+ 94E1 C9           2 ret
 276+ 94E2
 277+ 94E2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 94E2              ;
 279+ 94E2              ;	24/7/22
 280+ 94E2              ;
 281+ 94E2              ;	Ciclo_completo.
 282+ 94E2              ;
 283+ 94E2              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 94E2              ;
 285+ 94E2              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 94E2              ; 	Decrementamos (Columns).
 287+ 94E2              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 94E2              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 94E2
 290+ 94E2
 291+ 94E2 3A E0 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 94E5 FE FF        	cp $ff
 293+ 94E7 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 94E9 E6 F0        	and $f0
 295+ 94EB 20 28        	jr nz,3F
 296+ 94ED
 297+ 94ED              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 94ED
 299+ 94ED 3A E0 85     	ld a,(CTRL_DESPLZ)
 300+ 94F0 47           	ld b,a
 301+ 94F1 3E F8        	ld a,$f8
 302+ 94F3 80           	add b
 303+ 94F4 32 E0 85     	ld (CTRL_DESPLZ),a
 304+ 94F7 18 1C        	jr 3F
 305+ 94F9 21 D9 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 94FC 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 94FD AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 94FE 32 E0 85     	ld (CTRL_DESPLZ),a
 309+ 9501 3A EC 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9504 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9506 20 0A        	jr nz,2F
 312+ 9508 2A DA 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 950B 23           	inc hl
 314+ 950C 22 DA 85     	ld (Posicion_actual),hl
 315+ 950F CD AA 96     	call Genera_coordenadas
 316+ 9512
 317+ 9512              ; Inicia el puntero de Sprite.
 318+ 9512
 319+ 9512 CD 63 88     2 call Inicia_puntero_objeto_der
 320+ 9515 C9           3 ret
 321+ 9516
 322+ 9516              ; ******************************************************************************************************************************************************************************************
 323+ 9516              ;
 324+ 9516              ;	15/02/23
 325+ 9516              ;
 326+ 9516              ;	Mov_left.
 327+ 9516              ;
 328+ 9516              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9516              ;
 330+ 9516              Mov_left
 331+ 9516
 332+ 9516 21 06 86     	ld hl,Ctrl_0
 333+ 9519 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 951B              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 951B              ; 																	; _ en el caso de que no lo haya.
 336+ 951B 3A 06 86     	ld a,(Ctrl_0)
 337+ 951E CB 77        	bit 6,a
 338+ 9520 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 9522
 340+ 9522 CD 38 96     	call Stop_Amadeus_left
 341+ 9525 C8           	ret z
 342+ 9526 20 4A        	jr nz,8F
 343+ 9528
 344+ 9528 3A DE 85     11 ld a,(Coordenada_X)
 345+ 952B A7           	and a
 346+ 952C 20 44        	jr nz,8F
 347+ 952E
 348+ 952E 3A E0 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 9531 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 9532 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 9534
 352+ 9534              ; ---------- ---------- ----------
 353+ 9534
 354+ 9534 3A ED 85     	ld a,(Vel_left)
 355+ 9537 FE 02        	cp 2
 356+ 9539 28 0F        	jr z,1F
 357+ 953B 38 04        	jr c,6F
 358+ 953D FE 04        	cp 4
 359+ 953F 28 12        	jr z,7F
 360+ 9541
 361+ 9541              ; ---------- ---------- ----------
 362+ 9541
 363+ 9541 3A E0 85     6 ld a,(CTRL_DESPLZ)
 364+ 9544 FE F8        	cp $f8
 365+ 9546 20 2A        	jr nz,8F
 366+ 9548 18 10        	jr 4F
 367+ 954A 3A E0 85     1 ld a,(CTRL_DESPLZ)
 368+ 954D FE F9        	cp $f9
 369+ 954F 20 21        	jr nz,8F
 370+ 9551 18 07        	jr 4F
 371+ 9553 3A E0 85     7 ld a,(CTRL_DESPLZ)
 372+ 9556 FE FB        	cp $fb
 373+ 9558 20 18        	jr nz,8F
 374+ 955A
 375+ 955A              ; ---------- ---------- ----------
 376+ 955A
 377+ 955A              4
 378+ 955A CD 60 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 955D              ;	call Reinicio
 380+ 955D
 381+ 955D              ; ---------- ---------- ----------
 382+ 955D
 383+ 955D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 955F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9560
 386+ 9560              ;	ld hl,(Indice_Sprite_izq)
 387+ 9560              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9560
 389+ 9560 CD 79 95     	call DESPLZ_IZQ
 390+ 9563 C1           	pop bc
 391+ 9564 10 F9        	djnz 5B
 392+ 9566 2A DA 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9569 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 956A 22 DA 85     	ld (Posicion_actual),hl
 395+ 956D CD AA 96     	call Genera_coordenadas
 396+ 9570 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9572
 398+ 9572              ; ---------- ---------- ----------
 399+ 9572
 400+ 9572              ; Movemos, no hay recolocación.
 401+ 9572
 402+ 9572 2A DA 85     8 ld hl,(Posicion_actual)
 403+ 9575 CD 79 95     	call DESPLZ_IZQ
 404+ 9578 C9           2 ret
 405+ 9579
 406+ 9579              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9579              ;
 408+ 9579              ;	22/9/22
 409+ 9579
 410+ 9579              DESPLZ_IZQ
 411+ 9579
 412+ 9579 CD 88 95     	call Desplaza_izquierda
 413+ 957C CD D4 95         call modifica_parametros_1er_DESPLZ
 414+ 957F CD FC 95     	call Ciclo_completo_2
 415+ 9582 21 06 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9585 CB BE        	res 7,(hl)
 417+ 9587 C9           	ret
 418+ 9588
 419+ 9588              Desplaza_izquierda
 420+ 9588
 421+ 9588 3A ED 85     	ld a,(Vel_left)
 422+ 958B 47           	ld b,a
 423+ 958C 2A E8 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 958F 23           1 inc hl
 425+ 9590 23           	inc hl
 426+ 9591 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9593 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9596 CD 4C 88     	call Extrae_address
 429+ 9599 22 DC 85     	ld (Puntero_objeto),hl
 430+ 959C
 431+ 959C              ; Modifica (Puntero_DESPLZ_der).
 432+ 959C
 433+ 959C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 959C              ; Cuántos movimientos hemos hecho ??
 435+ 959C              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 959C
 437+ 959C 2A E4 85     7 ld hl,(Indice_Sprite_izq)
 438+ 959F EB           	ex de,hl
 439+ 95A0 A7           	and a
 440+ 95A1 ED 52        	sbc hl,de
 441+ 95A3 CB 3D        	srl l
 442+ 95A5 3E 08        6 ld a,8
 443+ 95A7 95           	sub l
 444+ 95A8 30 1E        	jr nc,3F
 445+ 95AA
 446+ 95AA              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 95AA              ; B="0".
 448+ 95AA
 449+ 95AA 04           4 inc b
 450+ 95AB 3C           	inc a
 451+ 95AC 20 FC        	jr nz,4B
 452+ 95AE 78           	ld a,b
 453+ 95AF 08           	ex af,af
 454+ 95B0 2A E4 85     	ld hl,(Indice_Sprite_izq)
 455+ 95B3 23           5 inc hl
 456+ 95B4 23           	inc hl
 457+ 95B5 10 FC        	djnz 5B
 458+ 95B7 22 E8 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 95BA CD 4C 88     	call Extrae_address
 460+ 95BD 22 DC 85     	ld (Puntero_objeto),hl
 461+ 95C0
 462+ 95C0              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 95C0              ; _(Posicion_actual).
 464+ 95C0
 465+ 95C0 21 DA 85     	ld hl,Posicion_actual
 466+ 95C3 35           	dec (hl)
 467+ 95C4 08           	ex af,af
 468+ 95C5 6F           	ld l,a
 469+ 95C6 18 DD        	jr 6B
 470+ 95C8
 471+ 95C8              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 95C8
 473+ 95C8 47           3 ld b,a
 474+ 95C9 2A E2 85     	ld hl,(Indice_Sprite_der)
 475+ 95CC 23           2 inc hl
 476+ 95CD 23           	inc hl
 477+ 95CE 10 FC        	djnz 2B
 478+ 95D0 22 E6 85     	ld (Puntero_DESPLZ_der),hl
 479+ 95D3 C9           8 ret
 480+ 95D4
 481+ 95D4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 95D4              ;
 483+ 95D4              ;	modifica_parametros_1er_DESPLZ
 484+ 95D4              ;
 485+ 95D4              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 95D4              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 95D4              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 95D4
 489+ 95D4 3A E0 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 95D7 A7           	and a
 491+ 95D8 20 1E        	jr nz,1F
 492+ 95DA 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 95DB 32 E0 85         ld (CTRL_DESPLZ),a
 494+ 95DE 21 D9 85     	ld hl,Columns
 495+ 95E1 34           	inc (hl)
 496+ 95E2 3A EC 85     	ld a,(Cuad_objeto)
 497+ 95E5 E6 01        	and 1
 498+ 95E7 20 0F        	jr nz,1F
 499+ 95E9 2A DA 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 95EC 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 95ED 22 DA 85     	ld (Posicion_actual),hl
 502+ 95F0 CD AA 96     	call Genera_coordenadas
 503+ 95F3 CD 4F 96     	call Dec_CTRL_DESPLZ
 504+ 95F6 18 03        	jr 2F
 505+ 95F8 CD 4F 96     1 call Dec_CTRL_DESPLZ
 506+ 95FB C9           2 ret
 507+ 95FC
 508+ 95FC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 95FC
 510+ 95FC 3A E0 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 95FF FE F7        	cp $f7
 512+ 9601 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9603 30 2C        	jr nc,3F
 514+ 9605
 515+ 9605              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9605
 517+ 9605 06 00        	ld b,0
 518+ 9607 04           4 inc b
 519+ 9608 3C           	inc a
 520+ 9609 FE F7        	cp $f7
 521+ 960B 20 FA        	jr nz,4B
 522+ 960D 3E FF        	ld a,$ff
 523+ 960F 90           	sub b
 524+ 9610 32 E0 85     	ld (CTRL_DESPLZ),a
 525+ 9613 18 1C        	jr 3F
 526+ 9615
 527+ 9615              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9615
 529+ 9615 21 D9 85     1 ld hl,Columns
 530+ 9618 35           	dec (hl)
 531+ 9619 AF           	xor a
 532+ 961A 32 E0 85     	ld (CTRL_DESPLZ),a
 533+ 961D 3A EC 85     	ld a,(Cuad_objeto)
 534+ 9620 E6 01        	and 1
 535+ 9622 28 0A        	jr z,2F
 536+ 9624 2A DA 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9627 2B           	dec hl
 538+ 9628 22 DA 85     	ld (Posicion_actual),hl
 539+ 962B CD AA 96     	call Genera_coordenadas
 540+ 962E
 541+ 962E              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 962E
 543+ 962E CD 76 88     2 call Inicia_puntero_objeto_izq
 544+ 9631 C9           3 ret
 545+ 9632
 546+ 9632              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 9632              ;
 548+ 9632              ;	19/10/22
 549+ 9632              ;
 550+ 9632              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 9632              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 9632
 553+ 9632 3A DE 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 9635 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 9637 C9           	ret
 556+ 9638
 557+ 9638              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 9638              ;
 559+ 9638              ;	19/10/22
 560+ 9638              ;
 561+ 9638              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 9638              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 9638
 564+ 9638 3A DE 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 963B FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 963D C9           	ret
 567+ 963E
 568+ 963E              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 963E              ;
 570+ 963E              ;	24/7/22
 571+ 963E              ;
 572+ 963E              ;	Inc_CTRL_DESPLZ
 573+ 963E              ;
 574+ 963E              ;
 575+ 963E              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 963E
 577+ 963E 21 E0 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 9641 3A EE 85     	ld a,(Vel_right)
 579+ 9644 A7           	and a
 580+ 9645 28 06        	jr z,1F
 581+ 9647 47           	ld b,a
 582+ 9648 34           3 inc (hl)
 583+ 9649 10 FD        	djnz 3B
 584+ 964B 18 01        	jr 2F
 585+ 964D 34           1 inc (hl)
 586+ 964E C9           2 ret
 587+ 964F
 588+ 964F              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 964F              ;
 590+ 964F              ;	5/2/23
 591+ 964F              ;
 592+ 964F              ;	Dec_CTRL_DESPLZ
 593+ 964F              ;
 594+ 964F              ;
 595+ 964F              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 964F
 597+ 964F 21 E0 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9652 3A ED 85     	ld a,(Vel_left)
 599+ 9655 A7           	and a
 600+ 9656 28 06        	jr z,1F
 601+ 9658 47           	ld b,a
 602+ 9659 35           3 dec (hl)
 603+ 965A 10 FD        	djnz 3B
 604+ 965C 18 01        	jr 2F
 605+ 965E 35           1 dec (hl)
 606+ 965F C9           2 ret
 607+ 9660
 608+ 9660              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9660
 610+ 9660 2A DA 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9663 01 1F 00     	ld bc,31
 612+ 9666 A7           	and a
 613+ 9667 ED 4A        	adc hl,bc
 614+ 9669 22 DA 85     	ld (Posicion_actual),hl
 615+ 966C 21 06 86     	ld hl,Ctrl_0														; $xxx1
 616+ 966F CB C6        	set 0,(hl)
 617+ 9671 C9           	ret
 618+ 9672
 619+ 9672              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9672
 621+ 9672 2A DA 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9675 01 1F 00     	ld bc,31
 623+ 9678 A7           	and a
 624+ 9679 ED 42        	sbc hl,bc
 625+ 967B 22 DA 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 967E 21 06 86     	ld hl,Ctrl_0
 627+ 9681 CB CE        	set 1,(hl)
 628+ 9683 C9           	ret
 629+ 9684
 630+ 9684              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9684
 632+ 9684 24           Reaparece_abajo inc h
 633+ 9685 01 E0 17     	ld bc,$17e0
 634+ 9688 A7           	and a
 635+ 9689 ED 4A        	adc hl,bc
 636+ 968B 22 DA 85     	ld (Posicion_actual),hl
 637+ 968E 21 06 86     	ld hl,Ctrl_0
 638+ 9691 CB D6        	set 2,(hl)
 639+ 9693 C9           	ret
 640+ 9694
 641+ 9694              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9694
 643+ 9694 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9697 A7           	and a
 645+ 9698 ED 42        	sbc hl,bc
 646+ 969A 22 DA 85     	ld (Posicion_actual),hl
 647+ 969D 21 06 86     	ld hl,Ctrl_0
 648+ 96A0 CB DE        	set 3,(hl)
 649+ 96A2 C9           	ret
 650+ 96A3
 651+ 96A3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 96A3
 653+ 96A3 2A EA 85     Reinicio ld hl,(Posicion_inicio)
 654+ 96A6 22 DA 85     	ld (Posicion_actual),hl
 655+ 96A9 C9           	ret
# file closed: Direcciones.asm
1060  96AA              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 96AA              ; ------------------------------------------------------------------------
   2+ 96AA              ;
   3+ 96AA              ;	02/04/23
   4+ 96AA              ;
   5+ 96AA              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 96AA              ;	Fila superior "0", Columna izquierda "0".
   7+ 96AA              ;
   8+ 96AA              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 96AA              ;
  10+ 96AA              ;	Modifica: A,BC y DE.
  11+ 96AA
  12+ 96AA C5           Genera_coordenadas push bc
  13+ 96AB E5           	push hl
  14+ 96AC D5           	push de
  15+ 96AD
  16+ 96AD 2A DA 85     	ld hl,(Posicion_actual)
  17+ 96B0
  18+ 96B0 7D           	ld a,l
  19+ 96B1 E6 1F        	and $1f
  20+ 96B3 32 DE 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 96B6
  22+ 96B6 CD 7E 93     	call calcula_tercio
  23+ 96B9 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 96BA
  25+ 96BA 1E 00        	ld e,0
  26+ 96BC 7D           	ld a,l
  27+ 96BD E6 E0        	and $e0
  28+ 96BF 28 01        	jr z,1F
  29+ 96C1 04           	inc b
  30+ 96C2
  31+ 96C2 04           1 inc b
  32+ 96C3 05           	dec b
  33+ 96C4 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 96C6              ;														; _ , salimos.
  35+ 96C6 1C           3 inc e
  36+ 96C7 D6 20        	sub 32
  37+ 96C9 20 FB        	jr nz,3B
  38+ 96CB 10 F5        	djnz 1B
  39+ 96CD
  40+ 96CD 7B           2 ld a,e
  41+ 96CE 32 DF 85     	ld (Coordenada_y),a
  42+ 96D1
  43+ 96D1 D1           	pop de
  44+ 96D2 E1           	pop hl
  45+ 96D3 C1           	pop bc
  46+ 96D4
  47+ 96D4 C9           	ret
  48+ 96D5
  49+ 96D5              ; ------------------------------------------------------------------------
  50+ 96D5              ;	28/03/23
  51+ 96D5              ;
  52+ 96D5              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 96D5              ;	Fila superior "0", Columna izquierda "0".
  54+ 96D5              ;
  55+ 96D5              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 96D5              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 96D5              ;
  58+ 96D5              ;		DE="$120d"
  59+ 96D5              ;
  60+ 96D5              ;		D, (Coordenada_X), Columnas, $12
  61+ 96D5              ;		E, (Coordenada_y), Filas, $0d
  62+ 96D5              ;
  63+ 96D5              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 96D5
  65+ 96D5              ;	Modifica: A,BC y DE.
  66+ 96D5
  67+ 96D5
  68+ 96D5              Genera_coordenadas_disparo
  69+ 96D5
  70+ 96D5              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 96D5
  72+ 96D5 7D           	ld a,l
  73+ 96D6 E6 1F        	and $1f
  74+ 96D8 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 96D9 CD 7E 93     	call calcula_tercio
  76+ 96DC 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 96DD 1E 00        	ld e,0
  78+ 96DF 7D           	ld a,l
  79+ 96E0 E6 E0        	and $e0
  80+ 96E2 28 01        	jr z,1F
  81+ 96E4 04           	inc b
  82+ 96E5 1C           1 inc e
  83+ 96E6 D6 20        	sub 32
  84+ 96E8 20 FB        	jr nz,1B
  85+ 96EA 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 96EC C9           	ret
  87+ 96ED
# file closed: Genera_coordenadas.asm
1061  96ED              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 96ED
   2+ 96ED
   3+ 96ED              ;   11/8/22
   4+ 96ED              ;
   5+ 96ED              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 96ED              ;
   7+ 96ED              ;   Mov_obj.asm
   8+ 96ED              ;
   9+ 96ED              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 96ED              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 96ED              ;
  12+ 96ED              ;   Codificación:
  13+ 96ED              ;
  14+ 96ED              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 96ED
  16+ 96ED              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 96ED
  18+ 96ED 02 40 00     Arriba db 2,%01000000,0
  19+ 96F0 02 80 00     Abajo db 2,%10000000,0
  20+ 96F3 02 20 00     Derecha db 2,%00100000,0
  21+ 96F6 02 10 00     Izquierda db 2,%00010000,0
  22+ 96F9 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 96FD 60 42 60 40
  22+ 9701 63
  23+ 9702 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9706 22 A3 80 A0
  24+ 970A 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 970E 84 A0 83 A0
  25+ 9712 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9716 80 A3 22 A0
  26+ 971A 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 971E 40 60 42 60
  27+ 9722 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9726
  29+ 9726 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 972A 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 972E 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9732 84 00
  32+ 9734 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9738 84 00
  33+ 973A 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 973E 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9742 1F 1F 1F 1F
  35+ 9746 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 974A 1F 1F 1F 1F
  35+ 974E 1F
  36+ 974F 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9753 2F 2F 2F 2F
  36+ 9757 2F 2F
  37+ 9759 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 975D 2F 2F 00
  38+ 9760
  39+ 9760              ; ----- ----- ----- ----- -----
  40+ 9760
  41+ 9760 3E 97        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9762 3A 97        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9764 F6 96        Indice_mov_Izquierda defw Izquierda
  44+ 9766 F3 96        Indice_mov_Derecha defw Derecha
  45+ 9768 F0 96        Indice_mov_Abajo defw Abajo
  46+ 976A ED 96        Indice_mov_Arriba defw Arriba
  47+ 976C 2A 97        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 976E 2E 97        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9770 26 97        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9772 34 97        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9774 F9 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9776              ; ----- ----- ----- ----- -----
  53+ 9776
  54+ 9776 3A 0C 86     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9779 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 977A 28 02            jr z,1F
  57+ 977C 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 977E 3A 0D 86     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9781 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9783 32 0D 86         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9786              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9786 2A 0A 86         ld hl,(Puntero_mov)
  63+ 9789 7E               ld a,(hl)
  64+ 978A 32 0C 86         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 978D 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 978E 22 0A 86         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9791
  68+ 9791 3A 0E 86     Decoder ld a,(Repetimos_db)
  69+ 9794 A7               and a
  70+ 9795 20 0C            jr nz,12F
  71+ 9797 2A 0A 86         ld hl,(Puntero_mov)
  72+ 979A 7E               ld a,(hl)
  73+ 979B A7               and a
  74+ 979C 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 979E E6 0F            and $0f
  76+ 97A0 32 0E 86         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 97A3              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 97A3 2A 0A 86     12 ld hl,(Puntero_mov)
  79+ 97A6 CB 7E            bit 7,(hl)
  80+ 97A8 28 03            jr z,2F
  81+ 97AA CD 9C 93         call Mov_down
  82+ 97AD 2A 0A 86     2 ld hl, (Puntero_mov)
  83+ 97B0 CB 76            bit 6,(hl)
  84+ 97B2 28 03            jr z,3F
  85+ 97B4 CD CA 93         call Mov_up
  86+ 97B7 2A 0A 86     3 ld hl, (Puntero_mov)
  87+ 97BA CB 6E            bit 5,(hl)
  88+ 97BC 28 03            jr z,4F
  89+ 97BE CD F8 93         call Mov_right
  90+ 97C1 2A 0A 86     4 ld hl, (Puntero_mov)
  91+ 97C4 CB 66            bit 4,(hl)
  92+ 97C6 28 03            jr z,5F
  93+ 97C8 CD 16 95         call Mov_left
  94+ 97CB
  95+ 97CB              ; ---------- --------- --------- ---------- ----------
  96+ 97CB
  97+ 97CB 3A 0E 86     5 ld a,(Repetimos_db)
  98+ 97CE A7               and a
  99+ 97CF 28 07            jr z,6F
 100+ 97D1 3D               dec a
 101+ 97D2 32 0E 86         ld (Repetimos_db),a
 102+ 97D5 28 01            jr z,6f
 103+ 97D7 C9           11 ret
 104+ 97D8 21 0C 86     6 ld hl,Contador_db_mov
 105+ 97DB 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 97DC 2A 0A 86         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 97DF 23               inc hl
 108+ 97E0 22 0A 86         ld (Puntero_mov),hl
 109+ 97E3 18 F2            jr 11B
 110+ 97E5 2A 08 86     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 97E8 3A 0D 86         ld a,(Incrementa_puntero)
 112+ 97EB 47               ld b,a
 113+ 97EC 23           8 inc hl
 114+ 97ED 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 97EF 5E               ld e,(hl)
 116+ 97F0 23               inc hl
 117+ 97F1 56               ld d,(hl)
 118+ 97F2 EB               ex de,hl
 119+ 97F3 22 0A 86         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 97F6 18 DF            jr 11B
 121+ 97F8
 122+ 97F8              ; ---------- --------- --------- ---------- ----------
 123+ 97F8              ;
 124+ 97F8              ;   11/8/22
 125+ 97F8              ;
 126+ 97F8              ;   Prepara_Puntero_mov
 127+ 97F8
 128+ 97F8 E5           Prepara_Puntero_mov push hl
 129+ 97F9 D5               push de
 130+ 97FA 2A 08 86         ld hl,(Puntero_indice_mov)
 131+ 97FD 5E               ld e,(hl)
 132+ 97FE 23               inc hl
 133+ 97FF 56               ld d,(hl)
 134+ 9800 EB               ex de,hl
 135+ 9801 22 0A 86         ld (Puntero_mov),hl
 136+ 9804 D1               pop de
 137+ 9805 E1               pop hl
 138+ 9806 C9               ret
 139+ 9807
 140+ 9807              ; ---------- --------- --------- ---------- ----------
 141+ 9807              ;
 142+ 9807              ;   11/8/22
 143+ 9807              ;
 144+ 9807              ;   Reinicia_el_movimiento
 145+ 9807
 146+ 9807 CD F8 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 980A AF               xor a
 148+ 980B 32 0C 86         ld (Contador_db_mov),a
 149+ 980E 32 0D 86         ld (Incrementa_puntero),a
 150+ 9811 C3 76 97         jp Movimiento
 151+ 9814 C9               ret
 152+ 9815              ; ---------- --------- --------- ---------- ----------
 153+ 9815
 154+ 9815
 155+ 9815
 156+ 9815
 157+ 9815
 158+ 9815
 159+ 9815
 160+ 9815
 161+ 9815
 162+ 9815
 163+ 9815
 164+ 9815
 165+ 9815
 166+ 9815
 167+ 9815
 168+ 9815
 169+ 9815
 170+ 9815
# file closed: Patrones_de_mov.asm
1062  9815              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9815              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9815              ;
   3+ 9815              ;	3/1/23
   4+ 9815              ;
   5+ 9815              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9815
   7+ 9815              ;	ADC HL,SP	LD (addr),SP
   8+ 9815              ;	ADD HL,SP	LD SP,(addr)
   9+ 9815              ;	ADD IX,SP	LD SP,nn
  10+ 9815              ; 	ADD IY,SP	LD SP,HL
  11+ 9815              ;				LD SP,IX
  12+ 9815              ;	DEC SP		LD SP,IY
  13+ 9815
  14+ 9815              ;	EX (SP),HL
  15+ 9815              ;	EX (SP),IX
  16+ 9815              ;	EX (SP),IY
  17+ 9815
  18+ 9815              ;	INC SP
  19+ 9815
  20+ 9815
  21+ 9815                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 1C 86      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 13 86         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 22 86         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 20 86     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 22 86         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 20 86     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 1C 86  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1063  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1064  7FE6
1065  7FE6              	SAVESNA "Pruebas.sna", START
1066  7FE6
1067  7FE6
1068  7FE6
# file closed: Banco_de_pruebas.asm
