# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  39  FE01              Disparos_scanlines_album_2 equ $828e	;	($82b8 - $82f2)
  40  FE01
  41  FE01              ;																		; Scanlines_album.
  42  FE01
  43  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  44  FE01
  45  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  46  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  47  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  48  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  49  FE01
  50  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  51  FE01              ;
  52  FE01              ;	13/08/24
  53  FE01              ;
  54  FE01
  55  FE01              	org $82f4
  56  82F4
  57  82F4 F5           	push af
  58  82F5 E5           	push hl
  59  82F6
  60  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  61  82F6 21 2E 8C     	ld hl,Ctrl_3
  62  82F9 CB 46        	bit 0,(hl)
  63  82FB 28 FE        	jr z,$
  64  82FD              ;! -------------------
  65  82FD
  66  82FD              ; Disparos.
  67  82FD
  68  82FD CD B4 9F     	call Pinta_disparos
  69  8300
  70  8300              ; Shield -----------------------
  71  8300
  72  8300              Temporizacion_shield
  73  8300
  74  8300 21 53 8C     	ld hl,Shield
  75  8303 7E           	ld a,(hl)
  76  8304 A7           	and a
  77  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  78  8307
  79  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  80  8308
  81  8308 23           	inc hl
  82  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  83  830A
  84  830A 20 17        	jr nz,Incrementa_FRAMES
  85  830C
  86  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  87  830C
  88  830C              Cambio_de_estado
  89  830C
  90  830C              ;	Indica cambio de estado.
  91  830C
  92  830C 23           	inc hl						;	Sitúa en (Shield_3).
  93  830D
  94  830D CB 5E        	bit 3,(hl)
  95  830F 28 05        	jr z,2F
  96  8311
  97  8311 CD E3 90     	call Inicia_Shield
  98  8314
  99  8314 18 0D        	jr Incrementa_FRAMES
 100  8316
 101  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 102  8318
 103  8318              ;	Carga en (Shield_2) la siguiente temporización.
 104  8318
 105  8318 2A 51 8C     	ld hl,(Puntero_datos_shield)
 106  831B 23           	inc hl
 107  831C 22 51 8C     	ld (Puntero_datos_shield),hl
 108  831F 7E           	ld a,(hl)
 109  8320 32 54 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 110  8323
 111  8323              Incrementa_FRAMES
 112  8323
 113  8323 2A 78 5C     	ld hl,(FRAMES)
 114  8326 23           	inc hl
 115  8327 22 78 5C     	ld (FRAMES),hl
 116  832A
 117  832A 7C           	ld a,h
 118  832B B5           	or l
 119  832C 20 04        	jr nz,1F
 120  832E
 121  832E 21 7A 5C     	ld hl,FRAMES_3
 122  8331 34           	inc (hl)
 123  8332
 124  8332 D5           1 push de
 125  8333 C5           	push bc
 126  8334
 127  8334 CD F3 90     	call Actualiza_pantalla
 128  8337
 129  8337 C1           	pop bc
 130  8338 D1           	pop de
 131  8339 E1           	pop hl
 132  833A F1           	pop af
 133  833B
 134  833B FB           	ei
 135  833C
 136  833C C9           	ret
 137  833D
 138  833D              ; --------------------------------------------------------------------------------
 139  833D
 140  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 78 83        Indice_disparo defw Disparo_0
  12+ 8372 7A 83        	defw Disparo_f9
  13+ 8374 7C 83        	defw Disparo_fb
  14+ 8376 7E 83        	defw Disparo_fd
  15+ 8378
  16+ 8378              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8378 01 80        Disparo_0 DEFB $01,$80
  18+ 837A              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 837A 00 60        Disparo_f9 DEFB $00,$60
  20+ 837C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 837C 18 00        Disparo_fb DEFB $18,$00
  22+ 837E              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 837E 06 00        Disparo_fd DEFB $06,$00
  24+ 8380
  25+ 8380              ; ----------------------------------------------------------------------------------------
  26+ 8380
  27+ 8380              ; Badsat_izq. 2x2.
  28+ 8380
  29+ 8380 90 83        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8382 00 85        	defw Badsat_izq_fe
  31+ 8384 C0 84        	defw Badsat_izq_fd
  32+ 8386 90 84        	defw Badsat_izq_fc
  33+ 8388 60 84        	defw Badsat_izq_fb
  34+ 838A 30 84        	defw Badsat_izq_fa
  35+ 838C 00 84        	defw Badsat_izq_f9
  36+ 838E C0 83        	defw Badsat_izq_f8
  37+ 8390
  38+ 8390 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 8393 02 14 00     	DEFB 	$02,$14,$00
  40+ 8396 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 8399 02 55 00     	DEFB 	$02,$55,$00
  42+ 839C 02 AA 00     	DEFB	$02,$AA,$00
  43+ 839F 02 54 00     	DEFB 	$02,$54,$00
  44+ 83A2 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 83A5 03 60 00     	DEFB 	$03,$60,$00
  46+ 83A8 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 83AB 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 83AE 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 83B1 54 40 00     	DEFB 	$54,$40,$00
  50+ 83B4 AA 60 00     	DEFB	$AA,$60,$00
  51+ 83B7 54 00 00     	DEFB 	$54,$00,$00
  52+ 83BA 28 00 00     	DEFB 	$28,$00,$00
  53+ 83BD 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 83C0
  55+ 83C0 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 83C4 0A 00 01 15
  56+ 83C8 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 83CC 01 55 00 01
  57+ 83D0 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 83D4 00 01 B0 00
  58+ 83D8 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 83DC FC 00 15 F4
  59+ 83E0 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 83E4 55 30 00 2A
  60+ 83E8 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 83EC 00 08 00 00
  61+ 83F0
  62+ 83F0              	org $8400
  63+ 8400
  64+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8404 85 00 00 8A
  65+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 840C 00 AA 80 00
  66+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8414 00 00 D8 00
  67+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 841C FE 00 0A FA
  68+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8424 2A 98 00 15
  69+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 842C 00 04 00 00
  70+ 8430
  71+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8434 42 80 00 45
  72+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 843C 00 55 40 00
  73+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8444 00 00 6C 00
  74+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 844C FF 00 05 7D
  75+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8454 15 4C 00 0A
  76+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 845C 00 02 00 00
  77+ 8460
  78+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8464 21 40 00 22
  79+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 846C 00 2A A0 00
  80+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8474 80 00 36 00
  81+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 847C 7F 80 02 BE
  82+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8484 0A A6 00 05
  83+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 848C 00 01 00 00
  84+ 8490
  85+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8494 10 A0 00 11
  86+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 849C 00 15 50 00
  87+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 84A4 40 00 1B 00
  88+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 84AC BF C0 01 5F
  89+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 84B4 05 53 00 02
  90+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 84BC 00 00 80 00
  91+ 84C0
  92+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 84C4 08 50 00 08
  93+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 84CC 00 0A A8 00
  94+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 84D4 A0 00 0D 80
  95+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 84DC 5F F8 00 AF
  96+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 84E4 02 A9 00 01
  97+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 84EC 00 00 40 00
  98+ 84F0
  99+ 84F0              	org $8500
 100+ 8500
 101+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8504 04 28 00 04
 102+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 850C 00 05 54 00
 103+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8514 D0 00 06 C0
 104+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 851C 2F FC 00 57
 105+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8524 01 54 80 00
 106+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 852C 00 00 20 00
 107+ 8530
 108+ 8530
 109+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 110+ 8532 70 85        	defw Badsat_der_f8
 111+ 8534 A0 85        	defw Badsat_der_f9
 112+ 8536 D0 85        	defw Badsat_der_fa
 113+ 8538 00 86        	defw Badsat_der_fb
 114+ 853A 30 86        	defw Badsat_der_fc
 115+ 853C 60 86        	defw Badsat_der_fd
 116+ 853E 90 86        	defw Badsat_der_fe
 117+ 8540
 118+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8543 28 40 00     	DEFB    $28,$40,$00
 120+ 8546 54 40 00     	DEFB	$54,$40,$00
 121+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 122+ 854C 55 40 00     	DEFB	$55,$40,$00
 123+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8558 07 50 00     	DEFB	$07,$50,$00
 127+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8564 06 55 00     	DEFB	$06,$55,$00
 131+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 132+ 856A 00 14 00     	DEFB	$00,$14,$00
 133+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8570
 135+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8574 20 00 2A 20
 136+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 857C 2A A0 00 15
 137+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8584 00 03 60 00
 138+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 858C F4 00 0B EA
 139+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8594 03 2A 80 00
 140+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 859C 00 00 04 00
 141+ 85A0
 142+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 85A4 10 00 15 10
 143+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 85AC 15 50 00 0A
 144+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 85B4 80 01 B0 00
 145+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 85BC FA 00 05 F5
 146+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 85C4 01 95 40 00
 147+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 85CC 00 00 02 00
 148+ 85D0
 149+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 85D4 08 00 0A 88
 150+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 85DC 0A A8 00 05
 151+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 85E4 C0 00 D8 00
 152+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 85EC FD 00 02 FA
 153+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 85F4 00 CA A0 00
 154+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 85FC 80 00 01 00
 155+ 8600
 156+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8604 84 00 05 44
 157+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 860C 05 54 00 02
 158+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8614 E0 00 6C 00
 159+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 861C FE 80 01 7D
 160+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8624 00 65 50 00
 161+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 862C 40 00 00 80
 162+ 8630
 163+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 163+ 8634 42 00 02 A2
 164+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 164+ 863C 02 AA 00 01
 165+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 165+ 8644 F0 00 36 00
 166+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 166+ 864C FF 40 00 BE
 167+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 167+ 8654 00 32 A8 00
 168+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 168+ 865C A0 00 00 40
 169+ 8660
 170+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 170+ 8664 A1 00 01 51
 171+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 171+ 866C 01 55 00 00
 172+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 172+ 8674 F8 00 1B 00
 173+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 173+ 867C FF A0 00 1F
 174+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 174+ 8684 00 09 54 00
 175+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 175+ 868C 50 00 00 20
 176+ 8690
 177+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 177+ 8694 50 80 00 A8
 178+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 178+ 869C 00 AA 80 00
 179+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 179+ 86A4 FC 00 0D 80
 180+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 180+ 86AC FF D0 00 0F
 181+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 181+ 86B4 00 04 AA 00
 182+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 182+ 86BC 28 00 00 10
 183+ 86C0
 184+ 86C0              ; ----------------------------------------------------------------------------------------
 185+ 86C0
 186+ 86C0              ; Amadeus. 2x2.
 187+ 86C0
 188+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 189+ 86C2 00 00        	defw 0
 190+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 191+ 86C6 00 00        	defw 0
 192+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 193+ 86CA 00 00        	defw 0
 194+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 195+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 196+ 86D0
 197+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 198+ 86D2 00 00        	defw 0
 199+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 200+ 86D6 00 00        	defw 0
 201+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 202+ 86DA 00 00        	defw 0
 203+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 204+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 205+ 86E0
 206+ 86E0              	org $8700
 207+ 8700
 208+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 209+ 8703 23 C4 00     	DEFB	$23,$C4,0
 210+ 8706 26 64 00     	DEFB	$26,$64,0
 211+ 8709 24 24 00     	DEFB	$24,$24,0
 212+ 870C 2C 34 00     	DEFB	$2C,$34,0
 213+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 214+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 215+ 8715 67 E6 00     	DEFB	$67,$E6,0
 216+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 217+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 218+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 219+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 220+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 221+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 222+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 223+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 224+ 8730
 225+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 225+ 8734 F1 00 09 99
 226+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 226+ 873C 0B 0D 00 1B
 227+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 227+ 8744 80 19 F9 80
 228+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 228+ 874C F3 C0 3D FB
 229+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 229+ 8754 3E F7 C0 3E
 230+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 230+ 875C 40 1C 63 80
 231+ 8760
 232+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 232+ 8764 3C 40 02 66
 233+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 233+ 876C 02 C3 40 06
 234+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 234+ 8774 60 06 7E 60
 235+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 235+ 877C 3C F0 0F 7E
 236+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 236+ 8784 0F BD F0 0F
 237+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 237+ 878C 10 07 18 E0
 238+ 8790
 239+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 239+ 8794 8F 10 00 99
 240+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 240+ 879C 00 B0 D0 01
 241+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 241+ 87A4 D8 01 9F 98
 242+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 242+ 87AC CF 3C 03 DF
 243+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 243+ 87B4 03 EF 7C 03
 244+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 244+ 87BC 44 01 C6 38
 245+ 87C0
 246+ 87C0              ; ----------------------------------------------------------------------------------------
 247+ 87C0
 248+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 249+ 87C2 00 88        	defw Explosion_entidades_2
 250+ 87C4 30 88        	defw Explosion_entidades_3
 251+ 87C6
 252+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 253+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 254+ 87CC 04 38 40     	DEFB	$04,$38,$40
 255+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 256+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 257+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 258+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 259+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 260+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 261+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 262+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 263+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 264+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 265+ 87ED 03 00 40     	DEFB	$03,$00,$40
 266+ 87F0 04 00 00     	DEFB	$04,$00,$00
 267+ 87F3 08 00 00     	DEFB	$08,$00,$00
 268+ 87F6
 269+ 87F6              	org $8800
 270+ 8800
 271+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 271+ 8804 38 10 03 BC
 272+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 272+ 880C 04 06 C0 00
 273+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 273+ 8814 00 03 DD 80
 274+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 274+ 881C 3A 70 01 9C
 275+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 275+ 8824 04 F8 80 06
 276+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 276+ 882C 00 00 00 00
 277+ 8830
 278+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 278+ 8834 00 20 08 00
 279+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 279+ 883C 00 06 00 00
 280+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 280+ 8844 00 00 14 30
 281+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 281+ 884C 38 00 01 08
 282+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 282+ 8854 00 80 00 04
 283+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 283+ 885C 10 08 00 20
 284+ 8860
 285+ 8860              ; ------------------------------------------
 286+ 8860
 287+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 288+ 8862 96 88        	defw Explosion_Amadeus_2
 289+ 8864 C6 88        	defw Explosion_Amadeus_3
 290+ 8866
 291+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 292+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 293+ 886C 02 66 56     	DEFB	$02,$66,$56
 294+ 886F 02 42 48     	DEFB	$02,$42,$48
 295+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 296+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 297+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 298+ 887B 06 79 68     	DEFB	$06,$79,$68
 299+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 300+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 301+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 302+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 303+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 304+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 305+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 306+ 8893 07 19 80     	DEFB	$07,$19,$80
 307+ 8896
 308+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 309+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 310+ 889C 00 66 56     	DEFB	$00,$66,$56
 311+ 889F 04 42 48     	DEFB	$04,$42,$48
 312+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 313+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 314+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 315+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 316+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 317+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 318+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 319+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 320+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 321+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 322+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 323+ 88C3 07 19 80     	DEFB	$07,$19,$80
 324+ 88C6
 325+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 326+ 88C9 00 00 00     	DEFB	$00,$00,$00
 327+ 88CC 00 00 00     	DEFB	$00,$00,$00
 328+ 88CF 00 00 40     	DEFB	$00,$00,$40
 329+ 88D2 00 00 30     	DEFB	$00,$00,$30
 330+ 88D5 00 00 08     	DEFB	$00,$00,$08
 331+ 88D8 00 82 40     	DEFB	$00,$82,$40
 332+ 88DB 04 04 68     	DEFB	$04,$04,$68
 333+ 88DE 04 20 58     	DEFB	$04,$20,$58
 334+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 335+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 336+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 337+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 338+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 339+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 340+ 88F3 07 11 80     	DEFB	$07,$11,$80
 341+ 88F6
# file closed: Sprites_e_indices.asm
 141  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B FB 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F 23 89        Indice_de_disparos_Amadeus defw Disparo_1A
  34+ 8921 28 89        	defw Disparo_2A
  35+ 8923
  36+ 8923 00 00        Disparo_1A defw 0									; Puntero objeto.
  37+ 8925 00 00        	defw 0											; Puntero de impresión.
  38+ 8927 00           	db 0											; Impacto.
  39+ 8928
  40+ 8928 00 00        Disparo_2A defw 0									; Puntero objeto.
  41+ 892A 00 00        	defw 0											; Puntero de impresión.
  42+ 892C 00           	db 0											; Impacto.
  43+ 892D
  44+ 892D 3B 89        Indice_de_disparos_entidades defw Disparo_1
  45+ 892F 40 89        	defw Disparo_2
  46+ 8931 45 89        	defw Disparo_3
  47+ 8933 4A 89        	defw Disparo_4
  48+ 8935 4F 89        	defw Disparo_5
  49+ 8937 54 89        	defw Disparo_6
  50+ 8939 59 89        	defw Disparo_7
  51+ 893B
  52+ 893B 00 00        Disparo_1 defw 0									; Puntero objeto.
  53+ 893D 00 00        	defw 0											; Puntero de impresión.
  54+ 893F 00           	db 0											; Control.
  55+ 8940
  56+ 8940 00 00        Disparo_2 defw 0									; Puntero objeto.
  57+ 8942 00 00        	defw 0											; Puntero de impresión.
  58+ 8944 00           	db 0											; Control.
  59+ 8945
  60+ 8945 00 00        Disparo_3 defw 0									; Puntero objeto.
  61+ 8947 00 00        	defw 0											; Puntero de impresión.
  62+ 8949 00           	db 0											; Control.
  63+ 894A
  64+ 894A 00 00        Disparo_4 defw 0									; Puntero objeto.
  65+ 894C 00 00        	defw 0											; Puntero de impresión.
  66+ 894E 00           	db 0											; Control.
  67+ 894F
  68+ 894F 00 00        Disparo_5 defw 0									; Puntero objeto.
  69+ 8951 00 00        	defw 0											; Puntero de impresión.
  70+ 8953 00           	db 0											; Control.
  71+ 8954
  72+ 8954 00 00        Disparo_6 defw 0									; Puntero objeto.
  73+ 8956 00 00        	defw 0											; Puntero de impresión.
  74+ 8958 00           	db 0											; Control.
  75+ 8959
  76+ 8959 00 00        Disparo_7 defw 0									; Puntero objeto.
  77+ 895B 00 00        	defw 0											; Puntero de impresión.
  78+ 895D 00           	db 0											; Control.
  79+ 895E
  80+ 895E              ; -------------------------------------------------------------------------------------
  81+ 895E              ;
  82+ 895E              ;	Índice de cajas de entidades.
  83+ 895E              ;
  84+ 895E              ;	18/1/24
  85+ 895E              ;
  86+ 895E
  87+ 895E              Indice_de_cajas_de_entidades
  88+ 895E
  89+ 895E 7C 89        	defw Caja_1
  90+ 8960 88 89        	defw Caja_2
  91+ 8962 94 89        	defw Caja_3
  92+ 8964 A0 89        	defw Caja_4
  93+ 8966 AC 89        	defw Caja_5
  94+ 8968 B8 89        	defw Caja_6
  95+ 896A C4 89        	defw Caja_7
  96+ 896C
  97+ 896C 00 00        	defw 0
  98+ 896E 00 00        	defw 0
  99+ 8970
 100+ 8970              ; -------------------------
 101+ 8970
 102+ 8970              ; Relleno para que no se corrompa el movimiento. ?????
 103+ 8970
 104+ 8970              ;	db 0
 105+ 8970
 106+ 8970              ; ---------- ---------- ---------- ---------- ----------
 107+ 8970              ;
 108+ 8970              ;	28/05/24
 109+ 8970              ;
 110+ 8970              ; 	Cada caja tiene 14 bytes !!!
 111+ 8970              ;
 112+ 8970              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 113+ 8970
 114+ 8970 00           Amadeus_BOX db 0										; (Tipo).
 115+ 8971 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 116+ 8973 00           	db 0												; (Contador_de_vueltas).
 117+ 8974 00           Impacto_Amadeus	db 0									; (Impacto).
 118+ 8975 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 119+ 8977 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 120+ 8979 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 121+ 897B 00           	db 0												; (Velocidad).
 122+ 897C
 123+ 897C              ; ---------- ---------- ---------- ---------- ----------
 124+ 897C              ;
 125+ 897C              ;	22/01/24
 126+ 897C              ;
 127+ 897C              ; 	Cada caja tiene 12 bytes !!!
 128+ 897C
 129+ 897C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 130+ 897F 00           	db 0												; (Contador_de_vueltas).
 131+ 8980 00           	db 0												; (Impacto).
 132+ 8981 00 00        	defw 0												; (Puntero_de_impresion).
 133+ 8983 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 134+ 8985 00 00        	defw 0 												; (Contador_de_mov_masticados).
 135+ 8987 00           	db 0												; (Velocidad).
 136+ 8988
 137+ 8988              ; ---------- ---------- ---------- ---------- ----------
 138+ 8988
 139+ 8988 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 140+ 898B 00           	db 0 												; (Contador_de_vueltas).
 141+ 898C 00           	db 0												; (Impacto).
 142+ 898D 00 00        	defw 0												; (Puntero_de_impresion).
 143+ 898F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 144+ 8991 00 00        	defw 0 												; (Contador_de_mov_masticados).
 145+ 8993 00           	db 0												; (Velocidad).
 146+ 8994
 147+ 8994              ; ---------- ---------- ---------- ---------- ----------
 148+ 8994
 149+ 8994 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 150+ 8997 00           	db 0 												; (Contador_de_vueltas).
 151+ 8998 00           	db 0												; (Impacto).
 152+ 8999 00 00        	defw 0												; (Puntero_de_impresion).
 153+ 899B 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 154+ 899D 00 00        	defw 0 												; (Contador_de_mov_masticados).
 155+ 899F 00           	db 0												; (Velocidad).
 156+ 89A0
 157+ 89A0              ; ---------- ---------- ---------- ---------- ----------
 158+ 89A0
 159+ 89A0 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 160+ 89A3 00           	db 0 												; (Contador_de_vueltas).
 161+ 89A4 00           	db 0												; (Impacto).
 162+ 89A5 00 00        	defw 0												; (Puntero_de_impresion).
 163+ 89A7 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 164+ 89A9 00 00        	defw 0 												; (Contador_de_mov_masticados).
 165+ 89AB 00           	db 0												; (Velocidad).
 166+ 89AC
 167+ 89AC              ; ---------- ---------- ---------- ---------- ----------
 168+ 89AC
 169+ 89AC 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 89AF 00           	db 0 												; (Contador_de_vueltas).
 171+ 89B0 00           	db 0												; (Impacto).
 172+ 89B1 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 89B3 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 89B5 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 89B7 00           	db 0												; (Velocidad).
 176+ 89B8
 177+ 89B8              ; ---------- ---------- ---------- ---------- ----------
 178+ 89B8
 179+ 89B8 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 180+ 89BB 00           	db 0 												; (Contador_de_vueltas).
 181+ 89BC 00           	db 0												; (Impacto).
 182+ 89BD 00 00        	defw 0												; (Puntero_de_impresion).
 183+ 89BF 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 184+ 89C1 00 00        	defw 0 												; (Contador_de_mov_masticados).
 185+ 89C3 00           	db 0												; (Velocidad).
 186+ 89C4
 187+ 89C4              ; ---------- ---------- ---------- ---------- ----------
 188+ 89C4
 189+ 89C4 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 190+ 89C7 00           	db 0 												; (Contador_de_vueltas).
 191+ 89C8 00           	db 0												; (Impacto).
 192+ 89C9 00 00        	defw 0												; (Puntero_de_impresion).
 193+ 89CB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 194+ 89CD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 195+ 89CF 00           	db 0												; (Velocidad).
 196+ 89D0
 197+ 89D0              ; -------------------------------------------------------------------------------------
 198+ 89D0              ;
 199+ 89D0              ;	11/1/24
 200+ 89D0              ;
 201+ 89D0              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 202+ 89D0              ;
 203+ 89D0              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 204+ 89D0              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 205+ 89D0              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 206+ 89D0              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 207+ 89D0
 208+ 89D0              Indice_de_definiciones_de_entidades
 209+ 89D0
 210+ 89D0 D4 89        	defw Entidad_1
 211+ 89D2 E1 89        	defw Entidad_2
 212+ 89D4
 213+ 89D4              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 214+ 89D4
 215+ 89D4              ;	BADSAT, (Satélite malvado).
 216+ 89D4
 217+ 89D4 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 218+ 89D7 01           	db 1												; (Contador_de_vueltas).
 219+ 89D8 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 220+ 89DA 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 221+ 89DC 03 40        	defw $4003	                                     	; (Posicion_inicio).
 222+ 89DE 01           	db 1												; (Cuad_objeto).
 223+ 89DF 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 224+ 89E1
 225+ 89E1 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 226+ 89E4 01           	db 1												; (Contador_de_vueltas).
 227+ 89E5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 228+ 89E7 80 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 229+ 89E9 40 50        	defw $5040                                      	; (Posicion_inicio).
 230+ 89EB 01           	db 1												; (Cuad_objeto).
 231+ 89EC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 232+ 89EE
 233+ 89EE              ; -------------------------------------------------------------------------------------
 234+ 89EE              ;
 235+ 89EE              ;	28/05/24
 236+ 89EE              ;
 237+ 89EE              ;	Definición de Amadeus.
 238+ 89EE              ;
 239+ 89EE              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 240+ 89EE              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 241+ 89EE
 242+ 89EE 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 243+ 89F1 00           	db 0												; (Contador_de_vueltas).
 244+ 89F2 C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 245+ 89F4 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 246+ 89F6 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 247+ 89F8 03           	db 3												; (Cuad_objeto).
 248+ 89F9 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 142  89FB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89FB
   2+ 89FB
   3+ 89FB              ;   07/07/23
   4+ 89FB              ;
   5+ 89FB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89FB              ;
   7+ 89FB              ;   Codificación:
   8+ 89FB              ;
   9+ 89FB              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89FB              ;
  11+ 89FB              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89FB              ;
  13+ 89FB              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89FB              ;
  15+ 89FB              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89FB              ;
  17+ 89FB              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89FB              ;                               ..... %01000010 Vel_up 4
  19+ 89FB              ;                                               Vel_down 2
  20+ 89FB              ;                               ..... $42
  21+ 89FB              ;
  22+ 89FB              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89FB              ;
  24+ 89FB              ;                               ..... %01000010 Vel_left 4
  25+ 89FB              ;                                               Vel_right 2
  26+ 89FB              ;                               ..... $42
  27+ 89FB              ;
  28+ 89FB              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89FB              ;
  30+ 89FB              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89FB              ;
  32+ 89FB              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89FB              ;
  34+ 89FB              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89FB              ;                                     $53
  36+ 89FB              ;
  37+ 89FB              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89FB              ;
  39+ 89FB              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89FB              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89FB              ;
  42+ 89FB              ;                       Arriba ..... $81
  43+ 89FB              ;                       Arriba - izquierda ..... $a1
  44+ 89FB              ;                       Arriba - derecha ..... $91
  45+ 89FB              ;
  46+ 89FB              ;                       Abajo ..... $41
  47+ 89FB              ;                       Abajo - izquierda ..... $61
  48+ 89FB              ;                       Abajo - derecha ..... $51
  49+ 89FB              ;
  50+ 89FB              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89FB              ;
  52+ 89FB              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89FB              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89FB              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89FB              ;
  56+ 89FB              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89FB              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89FB              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89FB              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89FB              ;
  61+ 89FB              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89FB              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89FB              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89FB              ;
  65+ 89FB              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89FB              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89FB              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89FB              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89FB
  70+ 89FB              ; ----- ----- ----- ----- -----
  71+ 89FB
  72+ 89FB 27 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FD 2F 8A            defw F_1
  74+ 89FF 39 8A            defw F_2
  75+ 8A01 43 8A            defw Codo_abajo_derecha
  76+ 8A03 77 8A            defw Derecha_y_subiendo
  77+ 8A05 81 8A            defw Derecha_y_subiendo_1
  78+ 8A07 8B 8A            defw F_3
  79+ 8A09 95 8A            defw F_4
  80+ 8A0B 9F 8A            defw Derecha_y_bajando
  81+ 8A0D A9 8A            defw Derecha_y_bajando_1
  82+ 8A0F B3 8A            defw Derecha_y_bajando_2
  83+ 8A11 BD 8A            defw Codo_derecha_abajo
  84+ 8A13 ED 8A            defw Codo_abajo_izq.
  85+ 8A15 21 8B            defw Izquierda_y_subiendo
  86+ 8A17 2B 8B            defw Izquierda_y_subiendo_1
  87+ 8A19 35 8B            defw F_5
  88+ 8A1B 3F 8B            defw F_6
  89+ 8A1D 49 8B            defw Izquierda_y_bajando
  90+ 8A1F 53 8B            defw Izquierda_y_bajando_1
  91+ 8A21 5D 8B            defw Izquierda_y_bajando_2
  92+ 8A23 67 8B            defw Codo_izquierda_abajo
  93+ 8A25 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A27
  95+ 8A27 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A2B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2F
  98+ 8A2F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A33 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A37 08 00
 100+ 8A39
 101+ 8A39 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A41 0F FE
 103+ 8A43
 104+ 8A43 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A47 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A4B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4F 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A53 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A57 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A5B 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5F 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A63 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A67 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A6B 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6F 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A73 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A77
 118+ 8A77 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A7B 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7F 06 00
 120+ 8A81
 121+ 8A81 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A85 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A89 02 00
 123+ 8A8B
 124+ 8A8B 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8F 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A93 04 00
 126+ 8A95
 127+ 8A95 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A99 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9D 08 00
 129+ 8A9F
 130+ 8A9F 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA3 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA7 02 00
 132+ 8AA9
 133+ 8AA9 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAD 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AB1 06 00
 135+ 8AB3
 136+ 8AB3 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB7 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8ABB 06 00
 138+ 8ABD
 139+ 8ABD              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABD
 141+ 8ABD 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8AC1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC9 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8AD1 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8AE1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE9 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AED
 154+ 8AED 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AF1 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF5 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF9 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFD 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8B01 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B05 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B09 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B11 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B15 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B19 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B21
 168+ 8B21 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B25 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B29 06 00
 170+ 8B2B
 171+ 8B2B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B33 02 00
 173+ 8B35
 174+ 8B35 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B39 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3D 04 00
 176+ 8B3F
 177+ 8B3F 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B43 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B47 08 00
 179+ 8B49
 180+ 8B49 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4D 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B51 02 00
 182+ 8B53
 183+ 8B53 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B57 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B5B 06 00
 185+ 8B5D
 186+ 8B5D 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B61 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B65 06 00
 188+ 8B67
 189+ 8B67 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B6B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B73 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B77 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B7B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B83 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B87 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B8B 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B93 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B97
 202+ 8B97
 203+ 8B97
 204+ 8B97
 205+ 8B97
 206+ 8B97
 207+ 8B97
 208+ 8B97
 209+ 8B97
 210+ 8B97
# file closed: Patrones_de_mov.asm
 143  8B97              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B97              ; 19/1/24
   2+ 8B97
   3+ 8B97              Indice_de_niveles
   4+ 8B97
   5+ 8B97 9F 8B        	defw Nivel_1
   6+ 8B99 AA 8B        	defw Nivel_2
   7+ 8B9B
   8+ 8B9B              ;	...
   9+ 8B9B              ;	...
  10+ 8B9B              ;	+ Niveles ...
  11+ 8B9B
  12+ 8B9B 00 00        	defw 0
  13+ 8B9D 00 00        	defw 0
  14+ 8B9F
  15+ 8B9F 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8BA0 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA4 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8BA8 01 01
  18+ 8BAA
  19+ 8BAA 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BAB 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BB3 01 02
  22+ 8BB5 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB9 01 02
  23+ 8BBB
# file closed: Niveles.asm
 144  8BBB
 145  8BBB              ; --------------------------------------------------------------------------------
 146  8BBB              ;
 147  8BBB              ; 12/05/24
 148  8BBB              ;
 149  8BBB              ; Parámetros DRAW.
 150  8BBB              ;
 151  8BBB
 152  8BBB              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 153  8BBB
 154  8BBB 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 155  8BBC              ;															- Patrón de movimiento.
 156  8BBC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 157  8BBD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 158  8BBE
 159  8BBE 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 160  8BBF              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 161  8BBF
 162  8BBF              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 163  8BBF              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 164  8BBF              ; Ejemplos.
 165  8BBF
 166  8BBF              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 167  8BBF              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 168  8BBF              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 169  8BBF              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 170  8BBF              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 171  8BBF
 172  8BBF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 173  8BC0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 174  8BC0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 175  8BC0
 176  8BC0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 177  8BC2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 178  8BC2
 179  8BC2 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 180  8BC4
 181  8BC4              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 182  8BC4              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 183  8BC4
 184  8BC4 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BC6              ;														; _palabras que componen el "movimiento_masticado".
 186  8BC6
 187  8BC6              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BC6
 189  8BC6 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BC7              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BC7              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BC7              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BC7              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BC7
 195  8BC7 00           Ctrl_2 db 0
 196  8BC8              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC8              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC8              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC8              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC8              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC8              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC8              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC8              ;
 204  8BC8              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC8              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC8              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC8              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC8              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC8              ;														BIT 4, ???
 210  8BC8              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC8
 212  8BC8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC9              ;
 218  8BC9              ; 														DESCRIPCIÖN:
 219  8BC9              ;
 220  8BC9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC9              ;
 234  8BC9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC9
 238  8BC9              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC9
 240  8BC9 00           Filas db 0												; Filas. [DRAW]
 241  8BCA 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BCB 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BCD 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BCF
 245  8BCF              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BCF
 247  8BCF 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BD0              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BD0              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BD0
 251  8BD0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BD0
 253  8BD0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BD0              ;
 255  8BD0              ;	COLORES: 0 ..... NEGRO
 256  8BD0              ;    		 1 ..... AZUL
 257  8BD0              ; 			 2 ..... ROJO
 258  8BD0              ;			 3 ..... MAGENTA
 259  8BD0              ; 			 4 ..... VERDE
 260  8BD0              ; 			 5 ..... CIAN
 261  8BD0              ;			 6 ..... AMARILLO
 262  8BD0              ; 			 7 ..... BLANCO
 263  8BD0
 264  8BD0 00 00        Indice_Sprite_der defw 0
 265  8BD2 00 00        Indice_Sprite_izq defw 0
 266  8BD4 00 00        Puntero_DESPLZ_der defw 0
 267  8BD6 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD8
 269  8BD8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BDA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BDB 00           Columnas db 0
 272  8BDC 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BDE              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BDE 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BDF
 276  8BDF              ; variables de control general.
 277  8BDF
 278  8BDF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BE0
 280  8BE0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BE0
 282  8BE0              Perfiles_de_velocidad
 283  8BE0
 284  8BE0 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BE1 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BE2 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BE3 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BE4
 289  8BE4              ; Contadores de 16 bits.
 290  8BE4
 291  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BE6 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE8 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BEA 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BEC
 296  8BEC              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BEC
 298  8BEC 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BEE 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BF0 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BF2              ;
 302  8BF2              ;
 303  8BF2 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BF3              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BF3              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BF3 00           Incrementa_puntero_backup db 0
 307  8BF4 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BF5              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BF5 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BF6 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BF7 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF8              ;
 313  8BF8              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF8              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF8              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF8              ;
 317  8BF8              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF8              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF8              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF8              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF8              ;
 322  8BF8              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF8              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF8              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF8
 326  8BF8 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF9
 328  8BF9              ;														DESCRIPCIÓN:
 329  8BF9              ;
 330  8BF9              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF9              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF9              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF9              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF9              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF9              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF9
 337  8BF9              ;														BIT 3, Recarga de nueva oleada.
 338  8BF9              ;														BIT 4, Recarga de nueva oleada.
 339  8BF9              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF9              ;														BIT 6, **** Frame completo.
 341  8BF9              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF9
 343  8BF9 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BFB              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BFB              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BFB              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BFB
 348  8BFB              ; Gestión de ENTIDADES y CAJAS.
 349  8BFB
 350  8BFB 00 00        Puntero_store_caja defw 0
 351  8BFD 00 00        Puntero_restore_caja defw 0
 352  8BFF 00 00        Indice_restore_caja defw 0
 353  8C01 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8C02 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8C03 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8C04
 357  8C04 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  8C06 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  8C08              ;														; _ puntero (Indice_entidades).
 360  8C08
 361  8C08              ;---------------------------------------------------------------------------------------------------------------
 362  8C08              ;
 363  8C08              ;	12/08/24
 364  8C08              ;
 365  8C08              ;	Álbumes.
 366  8C08
 367  8C08 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  8C0A              ;														; _variable para almacenar lo posición del puntero_
 369  8C0A              ; 														; _de pila, SP.
 370  8C0A 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  8C0C              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  8C0C
 373  8C0C              ; Impresión. ----------------------------------------------------------------------------------------------------
 374  8C0C
 375  8C0C 00 00        Album_de_pintado defw 0
 376  8C0E 00 00        Album_de_borrado defw 0
 377  8C10 00 00        Album_de_pintado_Amadeus defw 0
 378  8C12 00 00        Album_de_borrado_Amadeus defw 0
 379  8C14 00 00        Album_de_pintado_disparos defw 0
 380  8C16 00 00        Album_de_borrado_disparos defw 0
 381  8C18
 382  8C18 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 383  8C1A 00           Num_de_bytes_album_de_disparos db 0
 384  8C1B 00           Num_de_bytes_album_de_disparos_2 db 0
 385  8C1C
 386  8C1C 00           Numero_de_disparos_de_Amadeus db 0
 387  8C1D 00           Numero_de_disparos_de_entidades db 0
 388  8C1E
 389  8C1E 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 390  8C1F              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 391  8C1F
 392  8C1F 00 00        Puntero_rancio_disparos_album defw 0
 393  8C21
 394  8C21 00 00        Techo_Scanlines_album defw 0
 395  8C23 00 00        Techo_Scanlines_album_2 defw 0
 396  8C25 00           Switch db 0
 397  8C26 00 00        Techo defw 0
 398  8C28 00 00        Scanlines_album_SP defw 0
 399  8C2A 00 89        India_SP defw Tabla_de_pintado
 400  8C2C 03 89        India_2_SP defw Tabla_de_pintado+3
 401  8C2E
 402  8C2E 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 403  8C2F              ;
 404  8C2F              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 405  8C2F              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 406  8C2F              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 407  8C2F              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 408  8C2F              ;																Habilita el borrado/pintado de sprites.
 409  8C2F              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 410  8C2F              ;																_ a la baja.
 411  8C2F              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 412  8C2F              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 413  8C2F              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 414  8C2F              ; 																_ el último frame de la explosión de nuestra nave.
 415  8C2F              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 416  8C2F              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 417  8C2F
 418  8C2F 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 419  8C30              ;
 420  8C30              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 421  8C30              ;
 422  8C30              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 423  8C30              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 424  8C30              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 425  8C30              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 426  8C30              ;
 427  8C30              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 428  8C30              ;															_ masticados ya generados.
 429  8C30              ;
 430  8C30              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 431  8C30              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 432  8C30              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 433  8C30              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 434  8C30
 435  8C30 00           Ctrl_5 db 0
 436  8C31
 437  8C31              ; Gestión de Disparos.
 438  8C31
 439  8C31 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 440  8C33 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 441  8C35
 442  8C35 00           Impacto2 db 0											; Byte de control de impactos.
 443  8C36
 444  8C36              ;
 445  8C36              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 446  8C36              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 447  8C36              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 448  8C36              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 449  8C36
 450  8C36
 451  8C36
 452  8C36
 453  8C36
 454  8C36
 455  8C36
 456  8C36 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 457  8C38              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 458  8C38              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 459  8C38
 460  8C38 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 461  8C3A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 462  8C3A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 463  8C3D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 464  8C3D 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  8C40              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 466  8C40
 467  8C40              ;---------------------------------------------------------------------------------------------------------------
 468  8C40
 469  8C40              ; Relojes y temporizaciones.
 470  8C40
 471  8C40 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 472  8C41 05           Clock_explosion_Amadeus db 5
 473  8C42 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 474  8C43
 475  8C43 F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 476  8C45
 477  8C45 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 478  8C47 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 479  8C48              ;														; Repite la oleada de entidades.
 480  8C48
 481  8C48              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 482  8C48              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 483  8C48              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 484  8C48              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 485  8C48
 486  8C48              ;---------------------------------------------------------------------------------------------------------------
 487  8C48
 488  8C48              ; Gestión de NIVELES.
 489  8C48
 490  8C48 00           Nivel db 0												; Nivel actual del juego.
 491  8C49 00 00        Puntero_indice_NIVELES defw 0
 492  8C4B 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 493  8C4D              ; 														; _ que definen el NIVEL.
 494  8C4D
 495  8C4D              ; ---------------------------------------------------------------------------------------------------------------
 496  8C4D
 497  8C4D              ; Temporizaciones Shield.
 498  8C4D
 499  8C4D 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 500  8C51 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 501  8C53 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 502  8C54 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 503  8C55 00           Shield_3 db 0
 504  8C56
 505  8C56 06           Lives db 6
 506  8C57
 507  8C57              ; 	INICIO  *************************************************************************************************************************************************************************
 508  8C57              ;
 509  8C57              ;	5/1/24
 510  8C57
 511  8C57              START
 512  8C57
 513  8C57 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 514  8C5A 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 515  8C5C ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 516  8C5E ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 517  8C60 F3           	DI
 518  8C61
 519  8C61              ; Limpiamos pantalla.
 520  8C61
 521  8C61 3E 07        	ld a,%00000111
 522  8C63              ;	call Cls
 523  8C63 CD D8 90     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 524  8C66
 525  8C66              ; INICIALIZACIÓN.
 526  8C66
 527  8C66 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 528  8C68 CD 25 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 529  8C6B CD 6C 8E     	call Extrae_numero_aleatorio_y_avanza
 530  8C6E
 531  8C6E 6F           	ld l,a
 532  8C6F 26 00        	ld h,0
 533  8C71 22 45 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 534  8C74
 535  8C74              ;	Inicializa 1er Nivel.
 536  8C74
 537  8C74 21 97 8B     	ld hl,Indice_de_niveles
 538  8C77 22 49 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 539  8C7A CD 55 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 540  8C7D              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 541  8C7D              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 542  8C7D              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 543  8C7D
 544  8C7D              ;	Inicia los álbumes de líneas.
 545  8C7D
 546  8C7D CD 21 90     	call Inicia_albumes_de_lineas
 547  8C80              ;
 548  8C80 CD 31 90     	call Inicia_albumes_de_lineas_Amadeus
 549  8C83 CD 3E 90     	call Inicia_albumes_de_disparos
 550  8C86
 551  8C86
 552  8C86 CD 9A 92     4 call Inicia_Entidades
 553  8C89 CD FD 92     	call Inicia_Amadeus
 554  8C8C
 555  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 556  8C8C              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 557  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 558  8C8C
 559  8C8C 11 70 89     	ld de,Amadeus_BOX
 560  8C8F CD 50 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 561  8C92 CD 40 93     	call Limpiamos_bandeja_DRAW
 562  8C95
 563  8C95              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 564  8C95
 565  8C95 06 3C        	ld b,60
 566  8C97 CD 22 9D     2 call Amadeus_a_izquierda
 567  8C9A 10 FB        	djnz 2B
 568  8C9C
 569  8C9C CD FF 8F     	call Genera_datos_de_impresion_Amadeus
 570  8C9F
 571  8C9F              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 572  8C9F
 573  8C9F CD 51 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 574  8CA2              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 575  8CA2
 576  8CA2              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 577  8CA2              ; (Esto se dá cuando se inicia una nueva oleada).
 578  8CA2
 579  8CA2              ;	ld a,(Ctrl_1)
 580  8CA2              ;	bit 3,a
 581  8CA2              ;	jr nz,5F											 ; Loop
 582  8CA2
 583  8CA2              ;	ld de,Amadeus_db
 584  8CA2              ;	call Store_Amadeus
 585  8CA2
 586  8CA2              ; 	INICIA DISPAROS !!!!!
 587  8CA2
 588  8CA2 CD 67 90     	call Inicia_Puntero_Disparo_Entidades
 589  8CA5 CD 6E 90     	call Inicia_Puntero_Disparo_Amadeus
 590  8CA8
 591  8CA8              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 592  8CA8
 593  8CA8              ;5 call Inicia_punteros_de_cajas
 594  8CA8              ;	call Restore_entidad
 595  8CA8
 596  8CA8              ;	ld a,(Ctrl_1)
 597  8CA8              ;	bit 3,a
 598  8CA8              ;	jr z,6F
 599  8CA8
 600  8CA8              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 601  8CA8
 602  8CA8              ;	ld hl,Ctrl_1
 603  8CA8              ;	res 3,(hl)
 604  8CA8              ;	jr Main
 605  8CA8
 606  8CA8              ; Damos por concluida la construcción del FRAME.
 607  8CA8              ;
 608  8CA8
 609  8CA8 CD E3 90     	call Inicia_Shield
 610  8CAB
 611  8CAB
 612  8CAB 2A 28 8C     6 ld hl,(Scanlines_album_SP)
 613  8CAE 22 21 8C     	ld (Techo_Scanlines_album),hl
 614  8CB1
 615  8CB1 2A 0E 8C     	ld hl,(Album_de_borrado)
 616  8CB4 22 28 8C     	ld (Scanlines_album_SP),hl
 617  8CB7
 618  8CB7 21 00 89     	ld hl,Tabla_de_pintado
 619  8CBA 22 2A 8C     	ld (India_SP),hl
 620  8CBD
 621  8CBD 21 2E 8C     	ld hl,Ctrl_3
 622  8CC0 CB C6        	set 0,(hl) 											; Indica Frame completo.
 623  8CC2 CB D6        	set 2,(hl)
 624  8CC4 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 625  8CC6
 626  8CC6 FB           	ei 													; Ha de apuntar a $5c3a.
 627  8CC7
 628  8CC7 76           	halt
 629  8CC8
 630  8CC8              ; ------------------------------------
 631  8CC8
 632  8CC8              Main
 633  8CC8              ;
 634  8CC8              ; 22/08/24
 635  8CC8
 636  8CC8              ; Gestión de disparos.
 637  8CC8
 638  8CC8 CD DC 9E     	call Limpia_album_de_borrado_disparos
 639  8CCB CD 4E 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 640  8CCE CD 1E 9F     	call Mueve_Disparos
 641  8CD1
 642  8CD1              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 643  8CD1              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 644  8CD1              ; Este hecho lo indica el bit2 de (Impacto2).
 645  8CD1
 646  8CD1 CD 35 A1     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 647  8CD4
 648  8CD4 2A 45 8C     16 ld hl,(Clock_next_entity)
 649  8CD7 ED 4B 78 5C  	ld bc,(FRAMES)
 650  8CDB A7           	and a
 651  8CDC ED 42        	sbc hl,bc
 652  8CDE 20 16        	jr nz,13F
 653  8CE0
 654  8CE0              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 655  8CE0              ; _ (Clock_next_entity) para la siguiente entidad.
 656  8CE0
 657  8CE0 3A 02 8C     21 ld a,(Numero_parcial_de_entidades)
 658  8CE3 47           	ld b,a
 659  8CE4 3A 03 8C     	ld a,(Entidades_en_curso)
 660  8CE7 B8           	cp b
 661  8CE8 28 0C        	jr z,13F
 662  8CEA 30 0A        	jr nc,13F
 663  8CEC
 664  8CEC 3C           	inc a
 665  8CED 32 03 8C     	ld (Entidades_en_curso),a
 666  8CF0
 667  8CF0              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 668  8CF0
 669  8CF0 CD 6C 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 670  8CF3 CD 88 8E     	call Define_Clock_next_entity
 671  8CF6
 672  8CF6              ; -------------------------------------------------------------------------------------------------------------
 673  8CF6
 674  8CF6              ; Habilita disparos.
 675  8CF6
 676  8CF6              13
 677  8CF6
 678  8CF6              ;	ld hl,Disparo_Amadeus
 679  8CF6              ;	ld de,CLOCK_repone_disparo_Amadeus
 680  8CF6              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 681  8CF6
 682  8CF6              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 683  8CF6              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 684  8CF6              ;	call Habilita_disparos
 685  8CF6
 686  8CF6              ; COLISIONES.
 687  8CF6
 688  8CF6              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 689  8CF6
 690  8CF6              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 691  8CF6              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 692  8CF6              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 693  8CF6
 694  8CF6              ;	xor a
 695  8CF6              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 696  8CF6
 697  8CF6              ;	call Inicia_punteros_de_cajas
 698  8CF6              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 699  8CF6              ; 														; _ en DRAW.
 700  8CF6
 701  8CF6              ;	ld a,(Filas)
 702  8CF6              ;	and a
 703  8CF6              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 704  8CF6              ;	call Incrementa_punteros_de_cajas
 705  8CF6              ;	jr 12B
 706  8CF6
 707  8CF6              ; ---------------------------------------------------------------------------------------
 708  8CF6
 709  8CF6              ;10 ld a,(Numero_parcial_de_entidades)
 710  8CF6              ;    ld b,a
 711  8CF6              ;	and a
 712  8CF6              ;	jr nz,11F
 713  8CF6
 714  8CF6              ;	ld hl,Ctrl_1;
 715  8CF6              ;	bit 4,(hl)
 716  8CF6              ;	jp nz,16F
 717  8CF6
 718  8CF6              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 719  8CF6
 720  8CF6              ;	ld hl,Ctrl_1
 721  8CF6              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 722  8CF6
 723  8CF6              ;	ld a,(Contador_de_frames)
 724  8CF6              ;	inc a
 725  8CF6              ;	ld (Activa_recarga_cajas),a
 726  8CF6
 727  8CF6              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 728  8CF6
 729  8CF6 3A 03 8C     11 ld a,(Entidades_en_curso)
 730  8CF9 A7           	and a
 731  8CFA CA 6A 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 732  8CFD 47           	ld b,a												; No hay entidades que gestionar.
 733  8CFE
 734  8CFE              ; ( Código que ejecutamos con cada entidad: ).
 735  8CFE
 736  8CFE              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 737  8CFE              ;
 738  8CFE              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 739  8CFE
 740  8CFE 21 00 89     	ld hl,Tabla_de_pintado
 741  8D01 22 2A 8C     	ld (India_SP),hl
 742  8D04
 743  8D04 21 2E 8C     	ld hl,Ctrl_3
 744  8D07 CB D6        	set 2,(hl)
 745  8D09 CD 23 8E     	call Change
 746  8D0C
 747  8D0C C5           15 push bc 												; Nº de entidades en curso.
 748  8D0D
 749  8D0D CD B0 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 750  8D10 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 751  8D14
 752  8D14              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 753  8D14
 754  8D14              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 755  8D14
 756  8D14 21 35 8C     	ld hl,Impacto2
 757  8D17 CB 5E        	bit 3,(hl)
 758  8D19 C4 CF 9E     	call nz,Compara_con_coordenadas_de_disparo
 759  8D1C
 760  8D1C
 761  8D1C              ; En 2º lugar, ... existe Colisión de esta entidad con Amadeus ???
 762  8D1C
 763  8D1C 3A BF 8B     	ld a,(Impacto)
 764  8D1F A7           	and a
 765  8D20 28 13        	jr z,8F
 766  8D22
 767  8D22              ; 5/7/24
 768  8D22              ; Nota importante:
 769  8D22              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 770  8D22              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 771  8D22              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 772  8D22
 773  8D22 3A 2E 8C     	ld a,(Ctrl_3)
 774  8D25 CB 7F        	bit 7,a
 775  8D27 20 0C        	jr nz,8F												; El bit 7 de (Ctrl_3) indica que Amadeus esta explotando.
 776  8D29              ;															; No vamos a generar una nueva explosión en más de una entidad a la vez.
 777  8D29 3A 74 89     	ld a,(Impacto_Amadeus)
 778  8D2C A7           	and a
 779  8D2D C4 C0 91     	call nz,Genera_explosion
 780  8D30 20 1B        	jr nz,Gestiona_siguiente_entidad
 781  8D32
 782  8D32              ; Falsa colisión !!!
 783  8D32
 784  8D32 32 BF 8B     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 785  8D35
 786  8D35              ; -------------------------------------------
 787  8D35
 788  8D35 CD CC 8E     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 789  8D38 CD 03 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 790  8D3B CD B8 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 791  8D3E CD C0 94     	call Genera_datos_de_impresion
 792  8D41 CD 63 93     	call Decrementa_Contador_de_mov_masticados
 793  8D44
 794  8D44              ; -------------------------------------------
 795  8D44
 796  8D44              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 797  8D44
 798  8D44 2A C0 8B     	ld hl,(Puntero_de_impresion)
 799  8D47 CD 94 94     	call Genera_coordenadas
 800  8D4A
 801  8D4A CD B3 A0     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 802  8D4D
 803  8D4D              ;	ld hl,Ctrl_0
 804  8D4D              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 805  8D4D
 806  8D4D              Gestiona_siguiente_entidad
 807  8D4D
 808  8D4D CD 35 93      	call Store_Restore_cajas
 809  8D50 C1           	pop bc
 810  8D51 10 B9        	djnz 15B
 811  8D53
 812  8D53              ; Hemos gestionado todas las entidades.
 813  8D53
 814  8D53 CD DC 8E     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 815  8D56 CD F3 8E     	call Ordena_tabla_de_impresion
 816  8D59 CD 51 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 817  8D5C
 818  8D5C              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 819  8D5C              ; Hemos gestionado todas las unidades.
 820  8D5C              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 821  8D5C
 822  8D5C              ;	ld hl,Ctrl_1
 823  8D5C              ;	res 2,(hl)
 824  8D5C
 825  8D5C CD 9D 8E     	call Borra_diferencia
 826  8D5F
 827  8D5F 3A 2E 8C     	ld a,(Ctrl_3)
 828  8D62 CB 5F        	bit 3,a
 829  8D64 20 04        	jr nz,Gestion_de_Amadeus
 830  8D66
 831  8D66 EB           	ex de,hl
 832  8D67 71           	ld (hl),c
 833  8D68 2C           	inc l
 834  8D69 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 835  8D6A
 836  8D6A
 837  8D6A              ;! GESTIONA AMADEUS !!!!!!!!!!
 838  8D6A
 839  8D6A              Gestion_de_Amadeus
 840  8D6A
 841  8D6A              ; ----- ----- -----
 842  8D6A
 843  8D6A 21 35 8C     	ld hl,Impacto2
 844  8D6D CB 9E        	res 3,(hl)																; Deshabilitamos el FLAG de "Impacto" en disparos de Amadeus.
 845  8D6F              ;																			; Vuelta a empezar.
 846  8D6F 21 38 8C     	ld hl,Coordenadas_disparo_certero
 847  8D72 AF           	xor a
 848  8D73 77           	ld (hl),a
 849  8D74 23           	inc hl
 850  8D75 77           	ld (hl),a
 851  8D76
 852  8D76              ; ----- ----- -----
 853  8D76
 854  8D76 21 2E 8C     	ld hl,Ctrl_3
 855  8D79 CB 76        	bit 6,(hl)
 856  8D7B 28 13        	jr z,Amadeus_vivo
 857  8D7D
 858  8D7D              ; Amadeus ha sido destruido.
 859  8D7D              ; Decrementa (Temp_new_live).
 860  8D7D
 861  8D7D 21 42 8C     	ld hl,Temp_new_live
 862  8D80 35           	dec (hl)
 863  8D81 20 26        	jr nz,End_frame
 864  8D83
 865  8D83              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 866  8D83
 867  8D83 21 56 8C     	ld hl,Lives
 868  8D86 35           	dec (hl)
 869  8D87
 870  8D87              ;! Fin del juego
 871  8D87
 872  8D87 F3           	di
 873  8D88 28 FE        	jr z,$
 874  8D8A FB           	ei
 875  8D8B
 876  8D8B              ; Nueva nave.
 877  8D8B
 878  8D8B CD C9 8D     	call Reinicia_Amadeus
 879  8D8E 18 19        	jr End_frame
 880  8D90
 881  8D90              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 882  8D90
 883  8D90              Amadeus_vivo
 884  8D90
 885  8D90 3A 74 89     	ld a,(Impacto_Amadeus)
 886  8D93 A7           	and a
 887  8D94 C4 F0 91     	call nz, Genera_explosion_Amadeus
 888  8D97 20 10        	jr nz, End_frame
 889  8D99
 890  8D99 CD 9D 91     	call Teclado
 891  8D9C
 892  8D9C 21 2E 8C     	ld hl,Ctrl_3
 893  8D9F CB 6E        	bit 5,(hl)
 894  8DA1 28 06        	jr z,End_frame
 895  8DA3
 896  8DA3              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 897  8DA3
 898  8DA3 CD 3E 8E     	call Change_Amadeus
 899  8DA6 CD FF 8F     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 900  8DA9
 901  8DA9              End_frame
 902  8DA9
 903  8DA9              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 904  8DA9              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 905  8DA9
 906  8DA9 CD E5 9F     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos.
 907  8DAC CD F7 9E     	call Calcula_bytes_pintado_disparos
 908  8DAF CD 04 9F     	call Limpia_album_de_pintado_disparos
 909  8DB2
 910  8DB2              ; ------------ ------------- --------------
 911  8DB2
 912  8DB2 2A 0E 8C     	ld hl,(Album_de_borrado)
 913  8DB5 22 28 8C     	ld (Scanlines_album_SP),hl
 914  8DB8
 915  8DB8 21 2E 8C     	ld hl,Ctrl_3
 916  8DBB CB C6        	set 0,(hl) 											; Indica Frame completo.
 917  8DBD CB 9E        	res 3,(hl)
 918  8DBF CB A6        	res 4,(hl)
 919  8DC1
 920  8DC1 AF           	xor a
 921  8DC2 D3 FE        	out ($fe),a
 922  8DC4
 923  8DC4 76           	halt
 924  8DC5
 925  8DC5              ; ----------------------------------------
 926  8DC5
 927  8DC5              ;	ld a,(Ctrl_1) 										; Existe Loop?
 928  8DC5              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 929  8DC5 CA C8 8C     	jp z,Main
 930  8DC8
 931  8DC8              ; RECARGA DE NUEVA OLEADA.
 932  8DC8
 933  8DC8              ;	ld a,(Contador_de_frames)
 934  8DC8              ;	ld b,a
 935  8DC8              ;	ld a,(Activa_recarga_cajas)
 936  8DC8              ;	cp b
 937  8DC8              ;	jr z,20F
 938  8DC8
 939  8DC8              ;	ld hl,Ctrl_1
 940  8DC8              ;	set 4,(hl)
 941  8DC8              ;	jp Main
 942  8DC8
 943  8DC8              ;20 ld hl,Ctrl_1
 944  8DC8              ;	res 4,(hl)
 945  8DC8
 946  8DC8              ;	ld a,(Contador_de_frames)
 947  8DC8
 948  8DC8              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 949  8DC8              ;! _ IMPREDECIBLE !!!!
 950  8DC8
 951  8DC8              ;	add 10
 952  8DC8              ;	ld (Clock_next_entity),a
 953  8DC8
 954  8DC8              ;	jp 4B
 955  8DC8
 956  8DC8 C9           	ret
 957  8DC9
 958  8DC9              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 959  8DC9              ;
 960  8DC9              ;	16/11/23
 961  8DC9
 962  8DC9              ;;Gestiona_Amadeus
 963  8DC9
 964  8DC9              ;! Activa/desactiva impacto con Amadeus.
 965  8DC9
 966  8DC9              ;	ld a,(Impacto)
 967  8DC9              ;	and a
 968  8DC9              ;	jr nz,2F
 969  8DC9
 970  8DC9              ;;	call Mov_Amadeus
 971  8DC9
 972  8DC9              ;;2 ld a,(Ctrl_0)
 973  8DC9              ;;	bit 4,a
 974  8DC9              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 975  8DC9
 976  8DC9              ;;	call Guarda_foto_entidad_a_pintar
 977  8DC9              ;;	call Guarda_datos_de_borrado_Amadeus
 978  8DC9
 979  8DC9              ;;1 ld hl,Ctrl_0
 980  8DC9              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 981  8DC9
 982  8DC9              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 983  8DC9
 984  8DC9              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 985  8DC9
 986  8DC9              ;	call Calcula_numero_de_disparotes
 987  8DC9
 988  8DC9              ;;	ret
 989  8DC9
 990  8DC9              ; -----------------------------
 991  8DC9              ;
 992  8DC9              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 993  8DC9              ;
 994  8DC9              ;	INPUTS: B a de estar a "0".
 995  8DC9
 996  8DC9              ;Prepara_Borra_sprites
 997  8DC9
 998  8DC9              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 999  8DC9              ;	ld a,l
1000  8DC9              ;	ret z
1001  8DC9
1002  8DC9              ;	srl a
1003  8DC9
1004  8DC9              ;2 sub 16
1005  8DC9              ;	jr z,1F
1006  8DC9              ;	inc b
1007  8DC9              ;	jr 2B
1008  8DC9
1009  8DC9              ;1 inc b
1010  8DC9
1011  8DC9              ;	exx
1012  8DC9              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1013  8DC9              ;	exx
1014  8DC9
1015  8DC9              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1016  8DC9              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1017  8DC9
1018  8DC9              ;	ret
1019  8DC9
1020  8DC9              ; --------------------------------------------------------------------------------------------------------------
1021  8DC9              ;
1022  8DC9              ;	15/12/23
1023  8DC9
1024  8DC9              ;Mov_obj
1025  8DC9
1026  8DC9              ;	ld a,(Ctrl_2)
1027  8DC9              ;	bit 1,a
1028  8DC9              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1029  8DC9
1030  8DC9              ; Explosión:
1031  8DC9
1032  8DC9              ;	ld a,(Frames_explosion)
1033  8DC9              ;	and a
1034  8DC9              ;	jr nz,4F
1035  8DC9
1036  8DC9              ;!  Una alimaña menos!!!!!!!!!1
1037  8DC9
1038  8DC9              ; Se trataba de una Entidad_guía ???
1039  8DC9
1040  8DC9              ;	ld a,(Ctrl_2)
1041  8DC9              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1042  8DC9              ;	jr z,5F
1043  8DC9
1044  8DC9              ;	ld hl,Ctrl_3
1045  8DC9              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1046  8DC9
1047  8DC9              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1048  8DC9              ;!! _generado puede ser distinto, (aletoriedad).
1049  8DC9
1050  8DC9              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1051  8DC9              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1052  8DC9              ;	dec (hl)
1053  8DC9              ;	ld hl,Entidades_en_curso
1054  8DC9              ;	dec (hl)
1055  8DC9              ;	ld hl,Numero_de_entidades
1056  8DC9              ;	dec (hl)
1057  8DC9              ;	jr 3F
1058  8DC9
1059  8DC9              ; -----
1060  8DC9
1061  8DC9              ;	`Movemos´ la explosión.
1062  8DC9
1063  8DC9              ;4 ld hl,(Puntero_DESPLZ_der)
1064  8DC9              ;	inc hl
1065  8DC9              ;	inc hl
1066  8DC9              ;	call Extrae_address
1067  8DC9              ;;	ld (Puntero_objeto),hl
1068  8DC9
1069  8DC9              ;;	ld hl,Frames_explosion
1070  8DC9              ;;	dec (hl)
1071  8DC9
1072  8DC9              ;;	ld hl,Ctrl_0
1073  8DC9              ;;	set 4,(hl);;
1074  8DC9
1075  8DC9              ;;	jr 3F
1076  8DC9
1077  8DC9              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1078  8DC9
1079  8DC9              ;2 xor a
1080  8DC9              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1081  8DC9
1082  8DC9              ; Movemos Entidades malignas.
1083  8DC9              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1084  8DC9
1085  8DC9              ;	ld a,(Ctrl_2)
1086  8DC9              ;	bit 5,a
1087  8DC9              ;	jr nz,8F
1088  8DC9
1089  8DC9              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1090  8DC9              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1091  8DC9              ;	jr 7F
1092  8DC9
1093  8DC9              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1094  8DC9
1095  8DC9              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1096  8DC9              ;	bit 4,a
1097  8DC9              ;	ret z
1098  8DC9
1099  8DC9              ; Ha habido desplazamiento de la entidad maligna.
1100  8DC9              ; Ha llegado a zona de AMADEUS ???
1101  8DC9
1102  8DC9              ;7 ld a,(Coordenada_y)
1103  8DC9              ;	cp $14
1104  8DC9              ;	jr c,1F
1105  8DC9
1106  8DC9              ; ---------
1107  8DC9
1108  8DC9              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1109  8DC9              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1110  8DC9
1111  8DC9              ;	di
1112  8DC9              ;	call Genera_coordenadas_X
1113  8DC9              ;	call Compara_coordenadas_X
1114  8DC9              ;	ei
1115  8DC9
1116  8DC9              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1117  8DC9
1118  8DC9              ; ---------
1119  8DC9
1120  8DC9              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1121  8DC9              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1122  8DC9              ;	call Limpia_Variables_de_borrado
1123  8DC9
1124  8DC9              ;3 ret
1125  8DC9
1126  8DC9              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1127  8DC9              ;
1128  8DC9              ;	24/07/24
1129  8DC9
1130  8DC9              Reinicia_Amadeus
1131  8DC9
1132  8DC9              ;	Reinicia posición y estado.
1133  8DC9
1134  8DC9 21 CF 50     	ld hl,$50cf
1135  8DCC 22 75 89     	ld (p.imp.amadeus),hl
1136  8DCF 21 F0 E0     	ld hl,$e0f0
1137  8DD2 22 77 89     	ld (Pamm_Amadeus),hl
1138  8DD5 21 3D 00     	ld hl,$003d
1139  8DD8 22 79 89     	ld (Comm_Amadeus),hl
1140  8DDB
1141  8DDB              ;	limpiamos el álbum de borrado.
1142  8DDB
1143  8DDB 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
1144  8DDE
1145  8DDE AF           	xor a
1146  8DDF 77           	ld (hl),a
1147  8DE0
1148  8DE0 E5           	push hl
1149  8DE1 D1           	pop de
1150  8DE2 13           	inc de
1151  8DE3
1152  8DE3 01 23 00     	ld bc,35
1153  8DE6 ED B0        	ldir
1154  8DE8
1155  8DE8 CD FF 8F     	call Genera_datos_de_impresion_Amadeus
1156  8DEB
1157  8DEB              ;	Reinicia temporizaciones.
1158  8DEB
1159  8DEB CD E3 90     	call Inicia_Shield
1160  8DEE
1161  8DEE 3E 5A        	ld a,90
1162  8DF0 32 53 8C     	ld (Shield),a
1163  8DF3
1164  8DF3 3E 64        	ld a,100
1165  8DF5 32 42 8C     	ld (Temp_new_live),a
1166  8DF8
1167  8DF8              ; 	Restauramos el FLAG: Amadeus vivo.
1168  8DF8
1169  8DF8 21 2E 8C     	ld hl,Ctrl_3
1170  8DFB CB B6        	res 6,(hl)
1171  8DFD
1172  8DFD              ;	Fuerza la impresión de la nave en el siguiente frame.
1173  8DFD
1174  8DFD 21 2E 8C      	ld hl,Ctrl_3
1175  8E00 CB EE        	set 5,(hl)
1176  8E02
1177  8E02 C9           	ret
1178  8E03
1179  8E03              ; --------------------------------------------------------------------------------------------------------------
1180  8E03              ;
1181  8E03              ;	12/05/24
1182  8E03
1183  8E03 3A C6 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1184  8E06 CB 27        	sla a
1185  8E08 32 C6 8B     	ld (Velocidad),a
1186  8E0B E6 10        	and $10
1187  8E0D C8           	ret z
1188  8E0E
1189  8E0E              ; Restaura (Velocidad) a razón del nº de vueltas.
1190  8E0E
1191  8E0E 3A BE 8B     	ld a,(Contador_de_vueltas)
1192  8E11 CB 2F        	sra a
1193  8E13 CB 2F        	sra a
1194  8E15 32 C6 8B     	ld (Velocidad),a
1195  8E18
1196  8E18 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1197  8E1B 23           	inc hl
1198  8E1C 23           	inc hl
1199  8E1D 23           	inc hl
1200  8E1E 23           	inc hl
1201  8E1F 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1202  8E22
1203  8E22 C9           	ret
1204  8E23
1205  8E23              ; --------------------------------------------------------------------------------------------------------------
1206  8E23              ;
1207  8E23              ;	25/08/24
1208  8E23
1209  8E23              Change
1210  8E23
1211  8E23 3A 25 8C     	ld a,(Switch)
1212  8E26 EE 01        	xor 1
1213  8E28 32 25 8C     	ld (Switch),a
1214  8E2B 2A 0C 8C     	ld hl,(Album_de_pintado)
1215  8E2E ED 5B 0E 8C  	ld de,(Album_de_borrado)
1216  8E32 EB           	ex de,hl
1217  8E33 22 0C 8C     	ld (Album_de_pintado),hl
1218  8E36 22 28 8C     	ld (Scanlines_album_SP),hl
1219  8E39 ED 53 0E 8C  	ld (Album_de_borrado),de
1220  8E3D C9           	ret
1221  8E3E
1222  8E3E              Change_Amadeus
1223  8E3E
1224  8E3E 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1225  8E41 ED 5B 12 8C  	ld de,(Album_de_borrado_Amadeus)
1226  8E45 EB           	ex de,hl
1227  8E46 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1228  8E49 ED 53 12 8C  	ld (Album_de_borrado_Amadeus),de
1229  8E4D C9           	ret
1230  8E4E
1231  8E4E              Change_Disparos
1232  8E4E
1233  8E4E              ;	Exclusiones:
1234  8E4E
1235  8E4E 3A 1C 8C     	ld a,(Numero_de_disparos_de_Amadeus)
1236  8E51 A7           	and a
1237  8E52 C8           	ret z
1238  8E53
1239  8E53              ; -----
1240  8E53
1241  8E53 2A 14 8C     	ld hl,(Album_de_pintado_disparos)
1242  8E56 ED 5B 16 8C  	ld de,(Album_de_borrado_disparos)
1243  8E5A EB           	ex de,hl
1244  8E5B 22 14 8C     	ld (Album_de_pintado_disparos),hl
1245  8E5E ED 53 16 8C  	ld (Album_de_borrado_disparos),de
1246  8E62 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1247  8E65
1248  8E65 3A 1A 8C     	ld a,(Num_de_bytes_album_de_disparos)
1249  8E68 32 1B 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1250  8E6B
1251  8E6B C9           	ret
1252  8E6C
1253  8E6C              ; ------------------------------------
1254  8E6C              ;
1255  8E6C              ; 1/05/24
1256  8E6C
1257  8E6C              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1258  8E6C              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1259  8E6C
1260  8E6C              ;	DESTRUYE: HL,DE,A
1261  8E6C              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1262  8E6C
1263  8E6C              ;	Variables implicadas: (RND_SP).
1264  8E6C
1265  8E6C              Extrae_numero_aleatorio_y_avanza
1266  8E6C
1267  8E6C 21 00 89     	ld hl,Tabla_de_pintado
1268  8E6F EB           	ex de,hl
1269  8E70 2A 43 8C     	ld hl,(RND_SP)
1270  8E73 EB           	ex de,hl
1271  8E74 A7           	and a
1272  8E75 ED 52        	sbc hl,de
1273  8E77
1274  8E77 2A 43 8C     	ld hl,(RND_SP)
1275  8E7A 20 06        	jr nz,1F
1276  8E7C
1277  8E7C              ; Sitúa HL al principio de la tabla de nº aleatorios.
1278  8E7C
1279  8E7C 21 F6 88     	ld hl,Numeros_aleatorios
1280  8E7F 22 43 8C     	ld (RND_SP),HL
1281  8E82
1282  8E82              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1283  8E82
1284  8E82 7E           1 ld a,(hl)
1285  8E83 23           	inc hl
1286  8E84 22 43 8C     	ld (RND_SP),hl
1287  8E87 C9           	ret
1288  8E88
1289  8E88              ; ------------------------------------
1290  8E88              ;
1291  8E88              ; 1/05/24
1292  8E88
1293  8E88              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1294  8E88              ; (1 a 4 segundos).
1295  8E88              ; Actualizamos (Clock_next_entity) con A.
1296  8E88
1297  8E88              ;	DESTRUYE: A y B.
1298  8E88              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1299  8E88              ;			 Actualiza (Clock_next_entity) con A.
1300  8E88
1301  8E88              ;	Variables implicadas: (Clock_next_entity).
1302  8E88
1303  8E88              ; Notas:
1304  8E88
1305  8E88              ; 	$32 1 seg.
1306  8E88              ; 	$64 2 seg.
1307  8E88              ; 	$96 3 seg.
1308  8E88              ; 	$c8 4 seg.
1309  8E88              ; 	$fa 5 seg.
1310  8E88
1311  8E88              ; $ffff 1310,7 seg, 22 minutos.
1312  8E88
1313  8E88              ;	$0100  5 seg. aproximadamente.
1314  8E88              ;	$0200 10 seg. aproximadamente.
1315  8E88              ;	$0300 15 seg. aproximadamente.
1316  8E88              ;	$0400 20 seg. aproximadamente.
1317  8E88              ;	$0500 25 seg. aproximadamente.
1318  8E88              ;	$0600 30 seg. aproximadamente.
1319  8E88
1320  8E88              Define_Clock_next_entity
1321  8E88
1322  8E88 FE 34        	cp $34
1323  8E8A 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1324  8E8C
1325  8E8C              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1326  8E8C
1327  8E8C 4F           3 ld c,a
1328  8E8D 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1329  8E8F 2A 78 5C     	ld hl,(FRAMES)
1330  8E92 A7           	and a
1331  8E93 ED 4A        	adc hl,bc
1332  8E95 22 45 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1333  8E98 C9           	ret
1334  8E99
1335  8E99 3E 34        1 ld a,$34
1336  8E9B 18 EF        	jr 3B
1337  8E9D
1338  8E9D              ; ------------------------------------
1339  8E9D              ;
1340  8E9D              ; 18/03/24
1341  8E9D
1342  8E9D              Borra_diferencia
1343  8E9D
1344  8E9D ED 4B 28 8C  	ld bc,(Scanlines_album_SP)
1345  8EA1
1346  8EA1 3A 25 8C     	ld a,(Switch)
1347  8EA4 A7           	and a
1348  8EA5 28 08        	jr z,2F
1349  8EA7
1350  8EA7 2A 23 8C     	ld hl,(Techo_Scanlines_album_2)
1351  8EAA 11 23 8C     	ld de,Techo_Scanlines_album_2
1352  8EAD 18 06        	jr 3F
1353  8EAF
1354  8EAF 2A 21 8C     2 ld hl,(Techo_Scanlines_album)
1355  8EB2 11 21 8C     	ld de,Techo_Scanlines_album
1356  8EB5
1357  8EB5              ; Diferencia.
1358  8EB5
1359  8EB5 ED 42        3 sbc hl,bc
1360  8EB7
1361  8EB7 C8           	ret z
1362  8EB8 D8           	ret c
1363  8EB9
1364  8EB9              ; Nuevo techo, (más bajo que el anterior).
1365  8EB9              ; Fijamos nuevo techo y borramos bytes sobrantes.
1366  8EB9
1367  8EB9 EB           	ex de,hl
1368  8EBA
1369  8EBA 71           	ld (hl),c
1370  8EBB 2C           	inc l
1371  8EBC 70           	ld (hl),b
1372  8EBD
1373  8EBD AF           	xor a
1374  8EBE 43           	ld b,e
1375  8EBF
1376  8EBF 2A 28 8C     	ld hl,(Scanlines_album_SP)
1377  8EC2
1378  8EC2 77           1 ld (hl),a
1379  8EC3 23           	inc hl
1380  8EC4 10 FC        	djnz 1B
1381  8EC6
1382  8EC6              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1383  8EC6
1384  8EC6 21 2E 8C     	ld hl,Ctrl_3
1385  8EC9 CB DE        	set 3,(hl)
1386  8ECB
1387  8ECB C9           	ret
1388  8ECC
1389  8ECC              ; --------------------------------------------------------------------------------------------------------------
1390  8ECC              ;
1391  8ECC              ;	26/3/24
1392  8ECC
1393  8ECC              Recauda_informacion_de_entidad_en_curso
1394  8ECC
1395  8ECC              ; Almacena la Coordenada Y de la entidad en curso.
1396  8ECC
1397  8ECC              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1398  8ECC
1399  8ECC 3A BD 8B     	ld a,(Coordenada_y)
1400  8ECF 2A 2A 8C     	ld hl,(India_SP)
1401  8ED2 77           	ld (hl),a
1402  8ED3 2C           	inc l
1403  8ED4
1404  8ED4              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1405  8ED4
1406  8ED4              ;	ld de,(Scanlines_album_SP)
1407  8ED4
1408  8ED4 73           	ld (hl),e
1409  8ED5 2C           	inc l
1410  8ED6 72           	ld (hl),d
1411  8ED7 2C           	inc l
1412  8ED8
1413  8ED8 22 2A 8C     	ld (India_SP),hl
1414  8EDB
1415  8EDB C9           	ret
1416  8EDC
1417  8EDC              ; --------------------------------------------------------------------------------------------------------------
1418  8EDC              ;
1419  8EDC              ;	27/03/24
1420  8EDC              ;
1421  8EDC
1422  8EDC              Inicializa_India_y_limpia_Tabla_de_impresion
1423  8EDC
1424  8EDC 2A 2A 8C     	ld hl,(India_SP)
1425  8EDF 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1426  8EE2
1427  8EE2 79           	ld a,c
1428  8EE3 95           	sub l
1429  8EE4 28 06        	jr z,2F
1430  8EE6 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1431  8EE7              ;														; _ y pasamos a inicializar (India_SP).
1432  8EE7 AF           	xor a
1433  8EE8
1434  8EE8 77           1 ld (hl),a
1435  8EE9 2C           	inc l
1436  8EEA 10 FC        	djnz 1B												; Limpia Tabla.
1437  8EEC
1438  8EEC 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1439  8EEF 22 2A 8C     	ld (India_SP),hl
1440  8EF2
1441  8EF2 C9           	ret
1442  8EF3
1443  8EF3              ; --------------------------------------------------------------------------------------------------------------
1444  8EF3              ;
1445  8EF3              ;	31/3/24
1446  8EF3
1447  8EF3              Ordena_tabla_de_impresion
1448  8EF3
1449  8EF3              ; 5794 T/states.
1450  8EF3              ; 6278 T/states.
1451  8EF3              ; 5310 T/states.
1452  8EF3
1453  8EF3              ; Inicializamos punteros (India_SP) e (India_2_SP).
1454  8EF3              ; Inicializamos contador de comparaciones, [C].
1455  8EF3              ; Cargamos los registros A y B para efectuar comparación.
1456  8EF3
1457  8EF3 FD 2E 00     	ld iyl,0
1458  8EF6
1459  8EF6 3A 03 8C     	ld a,(Entidades_en_curso)
1460  8EF9 FE 04        	cp 4 	;	4
1461  8EFB D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1462  8EFC
1463  8EFC 3D           	dec a
1464  8EFD 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1465  8EFE 51           	ld d,c 										; Copia de respaldo.
1466  8EFF
1467  8EFF 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1468  8F00
1469  8F00 21 03 89     	ld hl,Tabla_de_pintado+3
1470  8F03 46           	ld b,(hl)
1471  8F04 22 2C 8C     	ld (India_2_SP),hl
1472  8F07
1473  8F07 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1474  8F08 DC 30 8F     	call c, Avanza_India_2_SP
1475  8F0B CC 30 8F     	call z, Avanza_India_2_SP
1476  8F0E
1477  8F0E FD 2D        	dec iyl
1478  8F10 28 18        	jr z,2F
1479  8F12
1480  8F12
1481  8F12              ; --------------------------------------------------------------------------------------------------------------
1482  8F12              ;
1483  8F12              ;	7/4/24
1484  8F12
1485  8F12              Trueque
1486  8F12
1487  8F12              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1488  8F12              ;  			A contiene en nº de fila de (India_SP).
1489  8F12              ;			HL contiene (India_2_SP).
1490  8F12
1491  8F12 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1492  8F13 E5           	push hl										; Preservo (India_2_SP).
1493  8F14
1494  8F14 ED 5B 2A 8C  	ld de,(India_SP)
1495  8F18 EB           	ex de,hl
1496  8F19 70           	ld (hl),b
1497  8F1A 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1498  8F1B
1499  8F1B CD 5C 8F     	call Intercambia_1_byte
1500  8F1E CD 5C 8F     	call Intercambia_1_byte
1501  8F21
1502  8F21
1503  8F21              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1504  8F21              ; Recuperamos (India_2_SP) en HL.
1505  8F21
1506  8F21 2A 2A 8C     	ld hl,(India_SP)
1507  8F24 7E           	ld a,(hl)
1508  8F25
1509  8F25 E1           	pop hl
1510  8F26 D1           	pop de
1511  8F27
1512  8F27              ; --------------------------------------------------------------------------------------------------------------
1513  8F27
1514  8F27 CD 30 8F     	call Avanza_India_2_SP
1515  8F2A
1516  8F2A 14           2 inc d
1517  8F2B 15           	dec d
1518  8F2C C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1519  8F2D 18 D8        	jr 1B
1520  8F2F
1521  8F2F C9           	ret
1522  8F30
1523  8F30              ; ----- ----- ----- ----- -----
1524  8F30
1525  8F30              Avanza_India_2_SP
1526  8F30
1527  8F30 0D           	dec c
1528  8F31 28 0A        	jr z,Avanza_punteros_indios
1529  8F33
1530  8F33 FD 2C        	inc iyl
1531  8F35
1532  8F35 2C           	inc l
1533  8F36 2C           	inc l
1534  8F37 2C           	inc l
1535  8F38
1536  8F38 46           	ld b,(hl)
1537  8F39 22 2C 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1538  8F3C
1539  8F3C C9           	ret
1540  8F3D
1541  8F3D              ; ----- ----- ----- ----- -----
1542  8F3D
1543  8F3D              Avanza_punteros_indios
1544  8F3D
1545  8F3D 15           	dec d
1546  8F3E 28 15        	jr z,Prepara_salida
1547  8F40
1548  8F40 4A           	ld c,d
1549  8F41
1550  8F41 2A 2A 8C     	ld hl,(India_SP)
1551  8F44 2C           	inc l
1552  8F45 2C           	inc l
1553  8F46 2C           	inc l
1554  8F47 7E           	ld a,(hl)
1555  8F48 22 2A 8C     	ld (India_SP),hl
1556  8F4B
1557  8F4B 2C           	inc l
1558  8F4C 2C           	inc l
1559  8F4D 2C           	inc l
1560  8F4E 46           	ld b,(hl)
1561  8F4F 22 2C 8C     	ld (India_2_SP),hl
1562  8F52
1563  8F52 FD 2C        	inc iyl
1564  8F54
1565  8F54 C9           	ret
1566  8F55
1567  8F55              Prepara_salida
1568  8F55
1569  8F55 21 00 89     	ld hl,Tabla_de_pintado
1570  8F58 22 2A 8C     	ld (India_SP),hl
1571  8F5B C9           	ret
1572  8F5C
1573  8F5C
1574  8F5C 2C           Intercambia_1_byte inc l
1575  8F5D 1C           	inc e
1576  8F5E 46           	ld b,(hl)
1577  8F5F 1A           	ld a,(de)
1578  8F60 EB           	ex de,hl
1579  8F61 70           	ld (hl),b
1580  8F62 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1581  8F63 C9           	ret
1582  8F64
1583  8F64              ; -----------------------------------------------------------------------------------
1584  8F64              ;
1585  8F64              ;	20/01/24
1586  8F64              ;
1587  8F64              ;
1588  8F64
1589  8F64              Construye_movimientos_masticados_entidad
1590  8F64
1591  8F64 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1592  8F67 E5           	push hl
1593  8F68 CD AB 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1594  8F6B              ;															; _ el (Contador_de_mov_masticados).
1595  8F6B CD 7B 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1596  8F6E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1597  8F6E CD A8 99     	call Recompone_posicion_inicio
1598  8F71
1599  8F71 CD D8 96     1 call Draw
1600  8F74 CD 90 8F     	call Guarda_movimiento_masticado
1601  8F77
1602  8F77 CD 55 9D     	call Movimiento
1603  8F7A
1604  8F7A 3A 2E 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1605  8F7D CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1606  8F7F 28 F0        	jr z,1B
1607  8F81
1608  8F81              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1609  8F81              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1610  8F81
1611  8F81 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1612  8F82 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1613  8F85
1614  8F85              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1615  8F85
1616  8F85 CD B9 9E     	call Situa_en_contador_general_de_mov_masticados
1617  8F88
1618  8F88              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1619  8F88              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1620  8F88
1621  8F88 ED 4B C4 8B  	ld bc,(Contador_de_mov_masticados)
1622  8F8C
1623  8F8C 71           	ld (hl),c
1624  8F8D 23           	inc hl
1625  8F8E 70           	ld (hl),b
1626  8F8F
1627  8F8F C9           	ret
1628  8F90
1629  8F90              ; -----------------------------------------------------------------------------------
1630  8F90              ;
1631  8F90              ;	28/12/23
1632  8F90              ;
1633  8F90              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1634  8F90              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1635  8F90
1636  8F90              Guarda_movimiento_masticado
1637  8F90
1638  8F90 ED 73 08 8C  	ld (Stack),sp
1639  8F94 ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1640  8F98
1641  8F98 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1642  8F9A FD E5            push iy 												; Pushea Puntero_objeto.
1643  8F9C
1644  8F9C ED 7B 08 8C      ld sp,(Stack)
1645  8FA0
1646  8FA0 2A C4 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1647  8FA3 23           	inc hl
1648  8FA4 22 C4 8B     	ld (Contador_de_mov_masticados),hl
1649  8FA7
1650  8FA7 CD AB 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1651  8FAA              ;															; _ el (Contador_de_mov_masticados).
1652  8FAA C9               ret
1653  8FAB
1654  8FAB              ; --------------------------------------------------------------------------------------------------------------
1655  8FAB              ;
1656  8FAB              ;	12/1/24
1657  8FAB              ;
1658  8FAB              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1659  8FAB
1660  8FAB              Actualiza_Puntero_de_almacen_de_mov_masticados
1661  8FAB
1662  8FAB 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1663  8FAE 01 04 00     	ld bc,4
1664  8FB1 A7           	and a
1665  8FB2 ED 4A        	adc hl,bc
1666  8FB4 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1667  8FB7 C9           	ret
1668  8FB8
1669  8FB8              ; --------------------------------------------------------------------------------------------------------------
1670  8FB8              ;
1671  8FB8              ;	24/03/24
1672  8FB8              ;
1673  8FB8              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1674  8FB8              ;
1675  8FB8              ;	IX contiene el puntero de impresión.
1676  8FB8              ;	DE contiene (Puntero_objeto).
1677  8FB8
1678  8FB8
1679  8FB8              Cargamos_registros_con_mov_masticado
1680  8FB8
1681  8FB8 ED 73 08 8C  	ld (Stack),sp
1682  8FBC ED 7B C2 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1683  8FC0
1684  8FC0 D1           	pop de 															; DE contiene Puntero_objeto
1685  8FC1 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1686  8FC3
1687  8FC3 ED 73 C2 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1688  8FC7 ED 7B 08 8C  	ld sp,(Stack)
1689  8FCB
1690  8FCB 7B           	ld a,e
1691  8FCC 82           	add d															; Comprueba si ya no hay datos en el almacén.
1692  8FCD
1693  8FCD CC 6B 93     	call z,Reinicia_entidad_maliciosa
1694  8FD0
1695  8FD0 C9           	ret
1696  8FD1
1697  8FD1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1698  8FD1              ;
1699  8FD1              ;	22/7/24
1700  8FD1
1701  8FD1              Cargamos_registros_con_explosion
1702  8FD1
1703  8FD1
1704  8FD1 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1705  8FD4 CD 75 90     	call Extrae_address
1706  8FD7
1707  8FD7 5D           	ld e,l
1708  8FD8 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1709  8FD9
1710  8FD9 DD 2A C0 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1711  8FDD
1712  8FDD C9           	ret
1713  8FDE
1714  8FDE
1715  8FDE              Cargamos_registros_con_explosion_Amadeus
1716  8FDE
1717  8FDE 2A 77 89     	ld hl,(Pamm_Amadeus)
1718  8FE1 CD 75 90     	call Extrae_address
1719  8FE4
1720  8FE4 5D           	ld e,l
1721  8FE5 54           	ld d,h
1722  8FE6
1723  8FE6 DD 2A 75 89  	ld ix,(p.imp.amadeus)
1724  8FEA
1725  8FEA C9           	ret
1726  8FEB
1727  8FEB              ; --------------------------------------------------------------------------------------------------------------
1728  8FEB              ;
1729  8FEB              ;	17/06/24
1730  8FEB              ;
1731  8FEB              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1732  8FEB              ;
1733  8FEB              ;	IX contiene el puntero de impresión.
1734  8FEB              ;	DE contiene (Puntero_objeto).
1735  8FEB
1736  8FEB
1737  8FEB              Cargamos_registros_con_mov_masticado_Amadeus
1738  8FEB
1739  8FEB ED 73 08 8C  	ld (Stack),sp
1740  8FEF ED 7B 77 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1741  8FF3 D1           	pop de 															; DE contiene Puntero_objeto
1742  8FF4 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1743  8FF6 DD 22 75 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1744  8FFA ED 7B 08 8C  	ld sp,(Stack)
1745  8FFE C9           	ret
1746  8FFF
1747  8FFF              ; ---------------------------------------------------------------------------------------------------------------------
1748  8FFF              ;
1749  8FFF              ;	18/6/24
1750  8FFF              ;
1751  8FFF              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1752  8FFF
1753  8FFF              Genera_datos_de_impresion_Amadeus
1754  8FFF
1755  8FFF 3A 74 89     	ld a,(Impacto_Amadeus)
1756  9002 A7           	and a
1757  9003 20 03        	jr nz,1F
1758  9005
1759  9005              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1760  9005              ; _apuntando a la correspondiente explosión.
1761  9005
1762  9005 CD EB 8F     	call Cargamos_registros_con_mov_masticado_Amadeus
1763  9008
1764  9008 DD 7D        1 ld a,ixl
1765  900A E6 1F        	and $1f
1766  900C 32 71 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1767  900F
1768  900F 2A 28 8C     	ld hl,(Scanlines_album_SP)
1769  9012 E5           	push hl
1770  9013
1771  9013 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
1772  9016 22 28 8C     	ld (Scanlines_album_SP),hl
1773  9019
1774  9019 CD C0 94     	call Genera_datos_de_impresion
1775  901C
1776  901C E1           	pop hl
1777  901D 22 28 8C     	ld (Scanlines_album_SP),hl
1778  9020
1779  9020 C9           	ret
1780  9021
1781  9021              ; ---------------------------------------------------------------------------------------------------------------------
1782  9021              ;
1783  9021              ;	13/03/24
1784  9021              ;
1785  9021              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1786  9021
1787  9021              Inicia_albumes_de_lineas
1788  9021
1789  9021 21 00 80     	ld hl,Scanlines_album
1790  9024 22 0C 8C     	ld (Album_de_pintado),hl
1791  9027 22 28 8C     	ld (Scanlines_album_SP),hl
1792  902A
1793  902A 21 1A 81     	ld hl,Scanlines_album_2
1794  902D 22 0E 8C     	ld (Album_de_borrado),hl
1795  9030
1796  9030 C9           	ret
1797  9031
1798  9031              Inicia_albumes_de_lineas_Amadeus
1799  9031
1800  9031 21 34 82     	ld hl,Amadeus_scanlines_album
1801  9034 22 10 8C     	ld (Album_de_pintado_Amadeus),hl
1802  9037 21 58 82     	ld hl,Amadeus_scanlines_album_2
1803  903A 22 12 8C     	ld (Album_de_borrado_Amadeus),hl
1804  903D
1805  903D C9           	ret
1806  903E
1807  903E              Inicia_albumes_de_disparos
1808  903E
1809  903E 21 7C 82     	ld hl,Disparos_scanlines_album
1810  9041 22 14 8C     	ld (Album_de_pintado_disparos),hl
1811  9044 21 8E 82     	ld hl,Disparos_scanlines_album_2
1812  9047 22 16 8C     	ld (Album_de_borrado_disparos),hl
1813  904A
1814  904A 21 7C 82     	ld hl,Disparos_scanlines_album
1815  904D 22 18 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1816  9050
1817  9050 C9           	ret
1818  9051
1819  9051              ; ---------------------------------------------------------------------------------------------------------------------
1820  9051              ;
1821  9051              ; 8/1/23
1822  9051              ;
1823  9051              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1824  9051              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1825  9051              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1826  9051
1827  9051              ; Destruye HL y DE !!!!!
1828  9051
1829  9051              Inicia_punteros_de_cajas
1830  9051
1831  9051 21 5E 89     	ld hl,Indice_de_cajas_de_entidades
1832  9054 CD 75 90         call Extrae_address
1833  9057 22 FB 8B         ld (Puntero_store_caja),hl
1834  905A 21 60 89     	ld hl,Indice_de_cajas_de_entidades+2
1835  905D 22 FF 8B     	ld (Indice_restore_caja),hl
1836  9060 CD 75 90     	call Extrae_address
1837  9063 22 FD 8B     	ld (Puntero_restore_caja),hl
1838  9066 C9               ret
1839  9067
1840  9067              ; *************************************************************************************************************************************************************
1841  9067              ;
1842  9067              ; 8/1/23
1843  9067              ;
1844  9067              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1845  9067
1846  9067 21 2D 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1847  906A 22 31 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1848  906D C9           	ret
1849  906E 21 1F 89     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1850  9071 22 33 8C     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1851  9074 C9           	ret
1852  9075
1853  9075              ; *************************************************************************************************************************************************************
1854  9075              ;
1855  9075              ; 20/10/22
1856  9075              ;
1857  9075              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1858  9075              ;
1859  9075              ; Destruye el puntero y DE !!!!!
1860  9075
1861  9075 5E           Extrae_address ld e,(hl)
1862  9076 23           	inc hl
1863  9077 56           	ld d,(hl)
1864  9078 2B           	dec hl
1865  9079 EB           	ex de,hl
1866  907A C9           	ret
1867  907B
1868  907B              ; *************************************************************************************************************************************************************
1869  907B              ;
1870  907B              ;	20/1/24
1871  907B              ;
1872  907B              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1873  907B              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1874  907B              ;
1875  907B              ;   Destruye HL y BC !!!!!,
1876  907B              ;
1877  907B              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1878  907B              ;					"0" ..... Izquierda.
1879  907B
1880  907B              Inicia_Puntero_objeto
1881  907B
1882  907B 3A DA 8B     	ld a,(Cuad_objeto)
1883  907E E6 01        	and 1
1884  9080 F5           	push af
1885  9081 CC 9D 90     	call z,Inicia_puntero_objeto_izq
1886  9084 F1           	pop af
1887  9085 C8           	ret z
1888  9086 CD 8A 90     	call Inicia_puntero_objeto_der
1889  9089 C9           	ret
1890  908A
1891  908A              ; Arrancamos desde la parte izquierda de la pantalla.
1892  908A              ; Iniciamos (Indice_Sprite_der).
1893  908A
1894  908A 2A D0 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1895  908D 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
1896  9090 CD 75 90     	call Extrae_address
1897  9093 22 CD 8B     	ld (Puntero_objeto),hl
1898  9096
1899  9096 2A D2 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1900  9099 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1901  909C C9           	ret
1902  909D
1903  909D              ; Arrancamos desde la parte derecha de la pantalla.
1904  909D              ; Iniciamos (Indice_Sprite_izq).
1905  909D
1906  909D 2A D2 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1907  90A0 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
1908  90A3 CD 75 90     	call Extrae_address
1909  90A6 22 CD 8B     	ld (Puntero_objeto),hl
1910  90A9
1911  90A9 2A D0 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1912  90AC 22 D4 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1913  90AF C9           	ret
1914  90B0
1915  90B0              ; **************************************************************************************************
1916  90B0              ;
1917  90B0              ;	06/07/24
1918  90B0              ;
1919  90B0              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1920  90B0
1921  90B0              Restore_entidad
1922  90B0
1923  90B0 2A FB 8B     	ld hl,(Puntero_store_caja)
1924  90B3 7E           	ld a,(hl)
1925  90B4 A7           	and a
1926  90B5 CC C3 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1927  90B8 28 F6        	jr z,Restore_entidad
1928  90BA
1929  90BA 11 BB 8B     	ld de,Bandeja_DRAW
1930  90BD 01 0C 00     	ld bc,12
1931  90C0 ED B0        	ldir
1932  90C2 C9           	ret
1933  90C3
1934  90C3              ; **************************************************************************************************
1935  90C3              ;
1936  90C3              ;	08/05/23
1937  90C3              ;
1938  90C3              ;	Incrementamos los dos punteros de entidades. (+1).
1939  90C3
1940  90C3              Incrementa_punteros_de_cajas
1941  90C3
1942  90C3 2A FD 8B     	ld hl,(Puntero_restore_caja)
1943  90C6 22 FB 8B     	ld (Puntero_store_caja),hl
1944  90C9 2A FF 8B     	ld hl,(Indice_restore_caja)
1945  90CC 23           	inc hl
1946  90CD 23           	inc hl
1947  90CE 22 FF 8B     	ld (Indice_restore_caja),hl
1948  90D1 CD 75 90         call Extrae_address
1949  90D4 22 FD 8B         ld (Puntero_restore_caja),hl
1950  90D7 C9               ret
1951  90D8
1952  90D8              ; -----------------------------------------------------------
1953  90D8
1954  90D8              ; Teclado.
1955  90D8
1956  90D8 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1957  90DA DB FE        	in a,($fe)
1958  90DC E6 01        	and $01
1959  90DE 28 02        	jr z,1f
1960  90E0 18 F6        	jr Pulsa_ENTER
1961  90E2 C9           1 ret
1962  90E3
1963  90E3              ; **************************************************************************************************
1964  90E3              ;
1965  90E3              ; Temporización.
1966  90E3
1967  90E3              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1968  90E3              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1969  90E3              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1970  90E3              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1971  90E3
1972  90E3              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1973  90E3              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1974  90E3              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1975  90E3
1976  90E3              ; A partir de $4f61 no hace falta DELAY.
1977  90E3
1978  90E3              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1979  90E3
1980  90E3              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1981  90E3              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1982  90E3              ;	LD A,B
1983  90E3              ;	AND A
1984  90E3              ;	JR NZ,wait
1985  90E3              ;	RET
1986  90E3
1987  90E3              ; ---------------------------------------------------------------------------------------------------------------
1988  90E3              ;
1989  90E3              ;	13/07/24
1990  90E3              ;
1991  90E3
1992  90E3              Inicia_Shield
1993  90E3
1994  90E3 21 4D 8C     	ld hl,Datos_Shield
1995  90E6 22 51 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1996  90E9
1997  90E9 7E           	ld a,(hl)
1998  90EA 32 54 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1999  90ED
2000  90ED 3E 01        	ld a,1
2001  90EF 32 55 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
2002  90F2
2003  90F2 C9           	ret
2004  90F3
2005  90F3              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
2006  90F3              ;
2007  90F3              ;	4/6/24
2008  90F3              ;
2009  90F3              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
2010  90F3              ;
2011  90F3              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2012  90F3              ;
2013  90F3
2014  90F3              Actualiza_pantalla
2015  90F3
2016  90F3 3E 02        	ld a,2
2017  90F5 D3 FE        	out ($fe),a
2018  90F7
2019  90F7 3A 2E 8C     	ld a,(Ctrl_3)
2020  90FA CB 57        	bit 2,a
2021  90FC 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2022  90FE
2023  90FE              Borrando_entidades
2024  90FE
2025  90FE 2A 28 8C     	ld hl,(Scanlines_album_SP)
2026  9101 CD 75 90     	call Extrae_address
2027  9104 24           	inc h
2028  9105 25           	dec h
2029  9106 28 05        	jr z,Pintando_entidades
2030  9108 CD B5 95     	call Pinta_Sprites
2031  910B 18 F1        	jr Borrando_entidades
2032  910D
2033  910D              Pintando_entidades
2034  910D
2035  910D 2A 2A 8C     	ld hl,(India_SP)
2036  9110 2C           	inc l
2037  9111 CD 75 90     	call Extrae_address
2038  9114 24           	inc h
2039  9115 25           	dec h
2040  9116 28 0E        	jr z,Ejecuta_escudo
2041  9118 1C           	inc e
2042  9119 1C           	inc e
2043  911A ED 53 2A 8C  	ld (India_SP),de
2044  911E CD 75 90     	call Extrae_address
2045  9121 CD B5 95     	call Pinta_Sprites
2046  9124 18 E7        	jr Pintando_entidades
2047  9126
2048  9126              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2049  9126
2050  9126              Ejecuta_escudo
2051  9126
2052  9126 3A 53 8C     	ld a,(Shield)
2053  9129 A7           	and a
2054  912A 20 2F        	jr nz,Aplica_Shield
2055  912C
2056  912C              Borrando_Amadeus
2057  912C
2058  912C 21 2E 8C     	ld hl,Ctrl_3
2059  912F CB 6E        	bit 5,(hl)
2060  9131 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2061  9133
2062  9133 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2063  9136 CD 75 90     	call Extrae_address
2064  9139 24           	inc h
2065  913A 25           	dec h
2066  913B 28 03        	jr z,Pintando_Amadeus
2067  913D CD B5 95     	call Pinta_Sprites
2068  9140
2069  9140              Pintando_Amadeus
2070  9140
2071  9140 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2072  9143 CD 75 90     	call Extrae_address
2073  9146 24           	inc h
2074  9147 25           	dec h
2075  9148 28 03        	jr z,1F
2076  914A CD B5 95     	call Pinta_Sprites
2077  914D
2078  914D              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2079  914D
2080  914D 21 2E 8C     1 ld hl,Ctrl_3
2081  9150 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2082  9152 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2083  9154 CB AE        	res 5,(hl)
2084  9156
2085  9156 3E 01        	ld a,1												; Borde azul.
2086  9158 D3 FE        	out ($fe),a
2087  915A
2088  915A C9           	ret
2089  915B
2090  915B              Aplica_Shield
2091  915B
2092  915B              ;	Bit 1 "1" (Shield_3) Sólo borra.
2093  915B              ;		  "0"     ""     Borra/Pinta.
2094  915B              ;	Bit 2    ""  RET.	 No borra, no pinta.
2095  915B
2096  915B 21 55 8C     	ld hl,Shield_3
2097  915E
2098  915E CB 5E        	bit 3,(hl)
2099  9160 20 DE        	jr nz,Pintando_Amadeus
2100  9162
2101  9162 CB 56        	bit 2,(hl)
2102  9164 20 E7        	jr nz,1B
2103  9166
2104  9166 CB 4E        	bit 1,(hl)
2105  9168 C4 6F 91     	call nz,Borra_Amadeus_shield
2106  916B
2107  916B 28 BF        	jr z,Borrando_Amadeus
2108  916D 18 DE        	jr 1B
2109  916F
2110  916F              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2111  916F
2112  916F              Borra_Amadeus_shield
2113  916F
2114  916F 3A 2E 8C     	ld a,(Ctrl_3)
2115  9172 CB 6F        	bit 5,a
2116  9174 28 08        	jr z,1F
2117  9176
2118  9176 2A 12 8C     	ld hl,(Album_de_borrado_Amadeus)
2119  9179 CD 75 90     	call Extrae_address
2120  917C 18 06        	jr 2F
2121  917E
2122  917E 2A 10 8C     1 ld hl,(Album_de_pintado_Amadeus)
2123  9181 CD 75 90     	call Extrae_address
2124  9184
2125  9184 CD B5 95     2 call Pinta_Sprites
2126  9187
2127  9187 AF           	xor a
2128  9188 3C           	inc a											; Asegura NZ en la salida de la rutina.
2129  9189
2130  9189 C9           	ret
2131  918A
2132  918A              Pinta_Amadeus_shield
2133  918A
2134  918A 2A 10 8C     	ld hl,(Album_de_pintado_Amadeus)
2135  918D CD 75 90     	call Extrae_address
2136  9190 CD B5 95     	call Pinta_Sprites
2137  9193
2138  9193 AF           	xor a
2139  9194 3C           	inc a											; Asegura NZ en la salida de la rutina.
2140  9195
2141  9195 C9           	ret
2142  9196
2143  9196              Borra_Pinta_Amadeus_shield
2144  9196
2145  9196 CD 6F 91     	call Borra_Amadeus_shield
2146  9199 CD 8A 91     	call Pinta_Amadeus_shield
2147  919C C9           	ret
2148  919D
2149  919D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2150  919D              ;
2151  919D              ;	19/6/24
2152  919D              ;
2153  919D
2154  919D              Teclado
2155  919D
2156  919D              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2157  919D
2158  919D 3E F7        	ld a,$f7												; "5" para disparar.
2159  919F DB FE        	in a,($fe)
2160  91A1 E6 10        	and $10
2161  91A3
2162  91A3 CC 23 A0     	call z,Genera_disparo_Amadeus
2163  91A6
2164  91A6 3E F7        	ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2165  91A8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2166  91AA E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2167  91AC CC 22 9D         call z,Amadeus_a_izquierda
2168  91AF
2169  91AF 3E F7        	ld a,$f7
2170  91B1 DB FE        	in a,($fe)
2171  91B3 E6 01        	and $01
2172  91B5 C8           	ret z
2173  91B6
2174  91B6 3E F7        	ld a,$f7
2175  91B8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2176  91BA E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2177  91BC CC 3A 9D     	call z,Amadeus_a_derecha
2178  91BF
2179  91BF C9           	ret
2180  91C0
2181  91C0              ; ------------------------------------------------------------------------------------------------------------------------
2182  91C0              ;
2183  91C0              ;	06/07/24
2184  91C0              ;
2185  91C0
2186  91C0              Genera_explosion
2187  91C0
2188  91C0 21 40 8C     	ld hl,Clock_explosion
2189  91C3 35           	dec (hl)
2190  91C4 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2191  91C6
2192  91C6              Borra_entidad_colisionada
2193  91C6
2194  91C6 CD CC 8E     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2195  91C9 CD D1 8F     	call Cargamos_registros_con_explosion
2196  91CC CD C0 94     	call Genera_datos_de_impresion
2197  91CF
2198  91CF AF           	xor a
2199  91D0 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2200  91D1
2201  91D1 C9           	ret
2202  91D2
2203  91D2              Siguiente_frame_explosion
2204  91D2
2205  91D2 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2206  91D4
2207  91D4              ; Avanza Frame de explosión.
2208  91D4
2209  91D4 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2210  91D7 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2211  91DA
2212  91DA 79           	ld a,c
2213  91DB 95           	sub l
2214  91DC 20 0B        	jr nz,1F
2215  91DE
2216  91DE              ; Fín de la entidad !!!!!!!!!!!!!
2217  91DE
2218  91DE 21 02 8C     	ld hl,Numero_parcial_de_entidades
2219  91E1 35           	dec (hl)
2220  91E2 23           	inc hl
2221  91E3 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2222  91E4
2223  91E4 CD 40 93     	call Limpiamos_bandeja_DRAW
2224  91E7 18 DD        	jr Borra_entidad_colisionada
2225  91E9
2226  91E9 23           1 inc hl
2227  91EA 23           	inc hl
2228  91EB 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2229  91EE 18 D6        	jr Borra_entidad_colisionada
2230  91F0
2231  91F0              ; ----- ----- ----- ----- -----
2232  91F0
2233  91F0              Genera_explosion_Amadeus
2234  91F0
2235  91F0 21 41 8C     	ld hl,Clock_explosion_Amadeus
2236  91F3 35           	dec (hl)
2237  91F4 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2238  91F6
2239  91F6              Borra_Amadeus_impactado
2240  91F6
2241  91F6 CD 3E 8E     	call Change_Amadeus
2242  91F9 CD DE 8F     	call Cargamos_registros_con_explosion_Amadeus
2243  91FC CD FF 8F     	call Genera_datos_de_impresion_Amadeus
2244  91FF
2245  91FF 21 2E 8C     	ld hl,Ctrl_3
2246  9202 CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2247  9204
2248  9204 AF           	xor a
2249  9205 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2250  9206
2251  9206 C9           	ret
2252  9207
2253  9207              Siguiente_frame_explosion_Amadeus
2254  9207
2255  9207 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2256  9209
2257  9209              ; Avanza Frame de explosión.
2258  9209
2259  9209 2A 77 89     	ld hl,(Pamm_Amadeus)
2260  920C 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2261  920F
2262  920F 79           	ld a,c
2263  9210 95           	sub l
2264  9211 20 0B        	jr nz,1F
2265  9213
2266  9213              ; Fín de Amadeus !!!!!!!!!!!!!
2267  9213              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2268  9213
2269  9213 AF           	xor a
2270  9214 32 74 89     	ld (Impacto_Amadeus),a
2271  9217 21 2E 8C     	ld hl,Ctrl_3
2272  921A CB F6        	set 6,(hl)
2273  921C
2274  921C 18 D8        	jr Borra_Amadeus_impactado
2275  921E
2276  921E 23           1 inc hl
2277  921F 23           	inc hl
2278  9220 22 77 89     	ld (Pamm_Amadeus),hl
2279  9223 18 D1        	jr Borra_Amadeus_impactado
2280  9225
2281  9225              ; ---------------------------------------------------------------
2282  9225
2283  9225              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 9225              ; ******************************************************************************************************************************************************************************************
   2+ 9225              ;
   3+ 9225              ;   21/04/24
   4+ 9225              ;
   5+ 9225              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 9225              ;   (XOR) bit a bit.
   7+ 9225              ;
   8+ 9225              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 9225
  10+ 9225              Derivando_RND
  11+ 9225
  12+ 9225 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9228
  14+ 9228 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 922A C5               push bc
  16+ 922B              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 922B 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 922E              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 922E
  20+ 922E A7           6 and a                                 ; Carry a "0".
  21+ 922F CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9231 30 02            jr nc,1F
  23+ 9233
  24+ 9233 CB C1            set 0,c
  25+ 9235
  26+ 9235 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 9236 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9238 5F               ld e,a
  29+ 9239
  30+ 9239 7A               ld a,d
  31+ 923A E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 923C 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 923E
  34+ 923E CB 3F            srl a
  35+ 9240
  36+ 9240 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9241
  38+ 9241 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 9242 28 04            jr z,4F
  40+ 9244
  41+ 9244 CB FF            set 7,a
  42+ 9246 18 02            jr 5F
  43+ 9248
  44+ 9248 CB BF        4 res 7,a
  45+ 924A
  46+ 924A CB 21        5 sla c
  47+ 924C 10 E0            djnz 6B
  48+ 924E
  49+ 924E 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 924F
  51+ 924F 77               ld (hl),a
  52+ 9250 23               inc hl
  53+ 9251 C1               pop bc
  54+ 9252 10 D4            djnz 3B
  55+ 9254
  56+ 9254 C9               ret
  57+ 9255
  58+ 9255
  59+ 9255
# file closed: RND_Derivando.asm
2284  9255              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 9255              ;---------------------------------------------------------------------------------------------------------------
   2+ 9255              ;
   3+ 9255              ;   8/3/24
   4+ 9255              ;
   5+ 9255              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 9255              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 9255              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 9255              ;	_ de la 1ª entidad del Nivel.
   9+ 9255              ;
  10+ 9255              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 9255
  12+ 9255              ;	MODIFICA: HL,DE y A.
  13+ 9255              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 9255
  15+ 9255              Inicializa_Nivel
  16+ 9255
  17+ 9255 2A 49 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9258 CD 75 90     	call Extrae_address
  19+ 925B 7E           	ld a,(hl)
  20+ 925C 32 01 8C     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 925F 23           	inc hl
  22+ 9260 CD 6D 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 9263 22 4B 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 9266 CD 76 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 9269
  26+ 9269 CD 87 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 926C C9           	ret
  28+ 926D
  29+ 926D              ; ----------------------
  30+ 926D
  31+ 926D 11 E0 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 9270 01 04 00     	ld bc,4
  33+ 9273 ED B0        	ldir
  34+ 9275 C9           	ret
  35+ 9276
  36+ 9276 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 9277 CD 11 94         call Calcula_salto_en_BC
  38+ 927A 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 927D A7               and a
  40+ 927E ED 4A            adc hl,bc
  41+ 9280 CD 75 90         call Extrae_address
  42+ 9283 22 EC 8B         ld (Puntero_indice_mov),hl
  43+ 9286 C9               ret
  44+ 9287
  45+ 9287 3A BB 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 928A CD 11 94     	call Calcula_salto_en_BC
  47+ 928D 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 9290 A7               and a
  49+ 9291 ED 4A            adc hl,bc
  50+ 9293 CD 75 90         call Extrae_address
  51+ 9296 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 9299 C9           	ret
  53+ 929A
  54+ 929A              ;---------------------------------------------------------------------------------------------------------------
  55+ 929A              ;
  56+ 929A              ;   5/1/24
  57+ 929A              ;
  58+ 929A              ;	Destruye A,BC,HL,DE
  59+ 929A
  60+ 929A              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 929A              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 929A
  63+ 929A              Inicia_Entidades
  64+ 929A
  65+ 929A              ; Preparamos los punteros de las cajas de entidades:
  66+ 929A
  67+ 929A CD 51 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 929D              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 929D CD 59 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92A0
  71+ 92A0 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92A3
  73+ 92A3 22 4B 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92A6
  75+ 92A6 CD BF 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92A9
  77+ 92A9 2A 4B 8C     	ld hl,(Datos_de_nivel)
  78+ 92AC
  79+ 92AC              ; En este punto:
  80+ 92AC              ;
  81+ 92AC              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92AC              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92AC
  84+ 92AC C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92AD
  86+ 92AD 7E           	ld a,(hl)
  87+ 92AE CD 2B 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92B1
  89+ 92B1 CD 23 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92B4
  91+ 92B4              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92B4
  93+ 92B4 CD E1 93     	call Busca_mov_masticados_segun_tipo
  94+ 92B7
  95+ 92B7 A7           	and a
  96+ 92B8 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92BA
  98+ 92BA              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92BA
 100+ 92BA              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92BA              ;	_ de este tipo de entidad.
 102+ 92BA
 103+ 92BA CD B9 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92BD CD C6 9E     	call Transfiere_datos_de_contadores
 105+ 92C0
 106+ 92C0 18 06        	jr 4F
 107+ 92C2
 108+ 92C2 CD 64 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92C5
 110+ 92C5              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92C5              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92C5              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92C5              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92C5              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92C5
 116+ 92C5 CD 9F 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 92C8              ;																; _ Mov_masticados ya generados.
 118+ 92C8
 119+ 92C8 CD B8 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 92CB
 121+ 92CB DD E5        	push ix
 122+ 92CD E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 92CE
 124+ 92CE D5           	push de
 125+ 92CF CD 94 94     	call Genera_coordenadas
 126+ 92D2
 127+ 92D2 ED 5B 28 8C  	ld de,(Scanlines_album_SP)
 128+ 92D6 CD CC 8E     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 92D9 D1           	pop de
 130+ 92DA
 131+ 92DA CD C0 94     	call Genera_datos_de_impresion
 132+ 92DD              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 92DD              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 92DD              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 92DD              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 92DD
 137+ 92DD CD 63 93     	call Decrementa_Contador_de_mov_masticados
 138+ 92E0
 139+ 92E0              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 92E0
 141+ 92E0 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 142+ 92E4 CD 50 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 92E7
 144+ 92E7 CD 40 93     	call Limpiamos_bandeja_DRAW
 145+ 92EA CD C3 90     	call Incrementa_punteros_de_cajas
 146+ 92ED
 147+ 92ED              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 92ED              ; _ entidad del Nivel.
 149+ 92ED
 150+ 92ED 3A 2F 8C     	ld a,(Ctrl_4)
 151+ 92F0 E6 F0        	and $f0
 152+ 92F2 32 2F 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 92F5
 154+ 92F5              ; Siguiente entidad del Nivel.
 155+ 92F5
 156+ 92F5 2A 4B 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 92F8 23           	inc hl 														; _ entidad del Nivel.
 158+ 92F9
 159+ 92F9 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 92FA
 161+ 92FA 10 A7        	djnz 2B
 162+ 92FC
 163+ 92FC C9           	ret
 164+ 92FD
 165+ 92FD              ; -------------------------------------------------------------------------------------------------------------------
 166+ 92FD              ;
 167+ 92FD              ;	27/5/24
 168+ 92FD              ;
 169+ 92FD              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 92FD              ;
 171+ 92FD
 172+ 92FD              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 92FD              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 92FD
 175+ 92FD 21 EE 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9300 CD 23 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 9303
 178+ 9303
 179+ 9303              Construye_movimientos_masticados_Amadeus
 180+ 9303
 181+ 9303 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 9306 CD AB 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9309              ;															; _ el (Contador_de_mov_masticados).
 184+ 9309 CD 7B 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 930C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 930C
 187+ 930C              ; Generamos movimientos masticados de Amadeus.
 188+ 930C
 189+ 930C 06 79        	ld b,121												; $0079, 121d.
 190+ 930E
 191+ 930E C5           1 push bc
 192+ 930F CD D8 96     	call Draw
 193+ 9312 CD 90 8F     	call Guarda_movimiento_masticado
 194+ 9315
 195+ 9315 CD 4C 9A     	call Mov_right
 196+ 9318 CD 4C 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 931B
 198+ 931B C1           	pop bc
 199+ 931C 10 F0        	djnz 1B
 200+ 931E
 201+ 931E              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 931E
 203+ 931E              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 931E              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 931E
 206+ 931E 2A C2 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9321 01 08 00     	ld bc,8
 208+ 9324 A7           	and a
 209+ 9325 ED 42        	sbc hl,bc
 210+ 9327 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 932A
 212+ 932A C9           	ret
 213+ 932B
 214+ 932B              ; ---------------------------------------------------------------------
 215+ 932B              ;
 216+ 932B              ;	10/02/24
 217+ 932B              ;
 218+ 932B              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 932B              ;
 220+ 932B              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 932B
 222+ 932B              Definicion_segun_tipo
 223+ 932B
 224+ 932B CD 11 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 932E 21 D0 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9331 CD 19 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 9334 C9           	ret
 228+ 9335
 229+ 9335              ; ---------------------------------------------------------------------
 230+ 9335              ;
 231+ 9335              ;	6/7/24
 232+ 9335
 233+ 9335
 234+ 9335              Store_Restore_cajas
 235+ 9335
 236+ 9335 ED 5B FB 8B  	ld de,(Puntero_store_caja)
 237+ 9339 CD 50 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 933C CD C3 90     	call Incrementa_punteros_de_cajas
 239+ 933F C9           	ret
 240+ 9340
 241+ 9340              ; ---------------------------------------------------------------------
 242+ 9340              ;
 243+ 9340              ;	23/6/24
 244+ 9340              ;
 245+ 9340              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9340              ;
 247+ 9340              ;	MODIFY: HL
 248+ 9340
 249+ 9340              Limpiamos_bandeja_DRAW
 250+ 9340
 251+ 9340 ED 73 08 8C  	ld (Stack),sp
 252+ 9344 31 E0 8B     	ld sp,Vel_left
 253+ 9347
 254+ 9347 AF           	xor a
 255+ 9348 67           	ld h,a
 256+ 9349 6F           	ld l,a
 257+ 934A
 258+ 934A E5           	push hl
 259+ 934B E5           	push hl
 260+ 934C E5           	push hl
 261+ 934D E5           	push hl
 262+ 934E E5           	push hl
 263+ 934F E5           	push hl
 264+ 9350 E5           	push hl
 265+ 9351 E5           	push hl
 266+ 9352 E5           	push hl
 267+ 9353 E5           	push hl
 268+ 9354 E5           	push hl
 269+ 9355 E5           	push hl
 270+ 9356 E5           	push hl
 271+ 9357 E5           	push hl
 272+ 9358 E5           	push hl
 273+ 9359 E5           	push hl
 274+ 935A E5           	push hl
 275+ 935B E5           	push hl
 276+ 935C
 277+ 935C 33           	inc sp
 278+ 935D
 279+ 935D E5           	push hl
 280+ 935E ED 7B 08 8C  	ld sp,(Stack)
 281+ 9362
 282+ 9362 C9           	ret
 283+ 9363
 284+ 9363              ; ---------------------------------------------------------------------
 285+ 9363              ;
 286+ 9363              ;	24/03/24
 287+ 9363
 288+ 9363 2A C4 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 9366 2B           	dec hl
 290+ 9367 22 C4 8B     	ld (Contador_de_mov_masticados),hl
 291+ 936A C9           	ret
 292+ 936B
 293+ 936B              ; ---------------------------------------------------------------------
 294+ 936B              ;
 295+ 936B              ;	8/5/24
 296+ 936B
 297+ 936B              Reinicia_entidad_maliciosa
 298+ 936B
 299+ 936B              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 936B
 301+ 936B CD B9 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 936E CD C6 9E     	call Transfiere_datos_de_contadores
 303+ 9371
 304+ 9371              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 9371
 306+ 9371 3A BB 8B     	ld a,(Tipo)
 307+ 9374 CD 2B 93     	call Definicion_segun_tipo
 308+ 9377
 309+ 9377 E5           	push hl
 310+ 9378 DD E1        	pop ix
 311+ 937A
 312+ 937A DD 6E 0B     	ld l,(ix+11)
 313+ 937D DD 66 0C     	ld h,(ix+12)
 314+ 9380
 315+ 9380 22 C2 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 9383
 317+ 9383 CD B8 8F     	call Cargamos_registros_con_mov_masticado
 318+ 9386
 319+ 9386              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 9386              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 9386              ; Ejemplos.
 322+ 9386
 323+ 9386              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 9386              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 9386              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 9386              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 9386              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 9386
 329+ 9386 21 BE 8B     	ld hl,Contador_de_vueltas
 330+ 9389 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 938B
 332+ 938B 7E           	ld a,(hl)
 333+ 938C CB 2F        	sra a
 334+ 938E CB 2F        	sra a
 335+ 9390
 336+ 9390 32 C6 8B     	ld (Velocidad),a
 337+ 9393
 338+ 9393 3E 40        	ld a,$40
 339+ 9395 BE           	cp (hl)
 340+ 9396 C0           	ret nz
 341+ 9397
 342+ 9397              ; Límitador.
 343+ 9397
 344+ 9397              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 9397
 346+ 9397 CB 2E        	sra (hl)
 347+ 9399 21 C6 8B     	ld hl,Velocidad
 348+ 939C CB 2E        	sra (hl)
 349+ 939E
 350+ 939E C9           	ret
 351+ 939F
 352+ 939F              ; ---------------------------------------------------------------------
 353+ 939F              ;
 354+ 939F              ;	22/01/24
 355+ 939F
 356+ 939F 21 2F 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93A2 CB 46        	bit 0,(hl)
 358+ 93A4 20 0D        	jr nz,1F
 359+ 93A6 CB 4E        	bit 1,(hl)
 360+ 93A8 20 0C        	jr nz,2F
 361+ 93AA CB 56        	bit 2,(hl)
 362+ 93AC 20 0B        	jr nz,3F
 363+ 93AE CB 5E        	bit 3,(hl)
 364+ 93B0 20 0A        	jr nz,4F
 365+ 93B2 C9           	ret
 366+ 93B3
 367+ 93B3 CB E6        1 set 4,(hl)
 368+ 93B5 C9           	ret
 369+ 93B6 CB EE        2 set 5,(hl)
 370+ 93B8 C9           	ret
 371+ 93B9 CB F6        3 set 6,(hl)
 372+ 93BB C9           	ret
 373+ 93BC CB FE        4 set 7,(hl)
 374+ 93BE C9           	ret
 375+ 93BF
 376+ 93BF              ; ---------------------------------------------------------------------
 377+ 93BF              ;
 378+ 93BF              ;	23/01/24
 379+ 93BF              ;
 380+ 93BF              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93BF              ;
 382+ 93BF              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93BF              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93BF              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93BF              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93BF
 387+ 93BF              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93BF
 389+ 93BF 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93C0 3D           	dec a
 391+ 93C1 20 06        	jr nz,1F
 392+ 93C3
 393+ 93C3              ; --- Tipo_1
 394+ 93C3
 395+ 93C3 21 2F 8C     	ld hl,Ctrl_4
 396+ 93C6 CB C6        	set 0,(hl)
 397+ 93C8 C9           	ret
 398+ 93C9
 399+ 93C9 3D           1 dec a
 400+ 93CA 20 06        	jr nz,2F
 401+ 93CC
 402+ 93CC              ; --- Tipo_2
 403+ 93CC
 404+ 93CC 21 2F 8C     	ld hl,Ctrl_4
 405+ 93CF CB CE        	set 1,(hl)
 406+ 93D1 C9           	ret
 407+ 93D2
 408+ 93D2 3D           2 dec a
 409+ 93D3 20 06        	jr nz,3F
 410+ 93D5
 411+ 93D5              ; --- Tipo_3
 412+ 93D5
 413+ 93D5 21 2F 8C     	ld hl,Ctrl_4
 414+ 93D8 CB D6        	set 2,(hl)
 415+ 93DA C9           	ret
 416+ 93DB
 417+ 93DB              ; --- Tipo_3
 418+ 93DB
 419+ 93DB 21 2F 8C     3 ld hl,Ctrl_4
 420+ 93DE CB D6        	set 2,(hl)
 421+ 93E0 C9           	ret
 422+ 93E1
 423+ 93E1              ; ---------------------------------------------------------------------
 424+ 93E1              ;
 425+ 93E1              ;	22/01/24
 426+ 93E1
 427+ 93E1 21 2F 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 93E4 CB 46        	bit 0,(hl)
 429+ 93E6 20 0E        	jr nz,1F
 430+ 93E8
 431+ 93E8 CB 4E        	bit 1,(hl)
 432+ 93EA 20 10        	jr nz,2F
 433+ 93EC
 434+ 93EC CB 56        	bit 2,(hl)
 435+ 93EE 20 12        	jr nz,3F
 436+ 93F0
 437+ 93F0 CB 5E        	bit 3,(hl)
 438+ 93F2 20 14        	jr nz,4F
 439+ 93F4 18 19        	jr 6F
 440+ 93F6
 441+ 93F6              ; Entidad_de_Tipo_1.
 442+ 93F6
 443+ 93F6 CB 66        1 bit 4,(hl)
 444+ 93F8 28 15        	jr z,6F
 445+ 93FA 18 10        	jr 5F
 446+ 93FC
 447+ 93FC              ; Entidad_de_Tipo_2.
 448+ 93FC
 449+ 93FC CB 6E        2 bit 5,(hl)
 450+ 93FE 28 0F        	jr z,6F
 451+ 9400 18 0A        	jr 5F
 452+ 9402
 453+ 9402              ; Entidad_de_Tipo_3.
 454+ 9402
 455+ 9402 CB 76        3 bit 6,(hl)
 456+ 9404 28 09        	jr z,6F
 457+ 9406 18 04        	jr 5F
 458+ 9408
 459+ 9408              ; Entidad_de_Tipo_4.
 460+ 9408
 461+ 9408 CB 7E        4 bit 7,(hl)
 462+ 940A 28 03        	jr z,6F
 463+ 940C
 464+ 940C              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 940C
 466+ 940C AF           5 xor a
 467+ 940D 3C           	inc a
 468+ 940E C9           	ret
 469+ 940F
 470+ 940F              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 940F
 472+ 940F AF           6 xor a
 473+ 9410 C9           	ret
 474+ 9411
 475+ 9411              ;	------------------------------------------------------------------------------------
 476+ 9411              ;
 477+ 9411              ;	12/01/24
 478+ 9411              ;
 479+ 9411              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9411              ;
 481+ 9411              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9411              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9411
 484+ 9411 CB 27        Calcula_salto_en_BC sla a
 485+ 9413 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 9415 4F           	ld c,a
 487+ 9416 06 00        	ld b,0
 488+ 9418 C9           	ret
 489+ 9419
 490+ 9419              ; ------------------------------------------------------------------
 491+ 9419              ;
 492+ 9419              ;	19/1/24
 493+ 9419              ;
 494+ 9419              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9419              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9419
 497+ 9419 A7           Situa_en_datos_de_definicion and a
 498+ 941A ED 4A        	adc hl,bc
 499+ 941C CD 75 90     	call Extrae_address
 500+ 941F 22 06 8C         ld (Datos_de_entidad),hl
 501+ 9422 C9           	ret
 502+ 9423
 503+ 9423              ; ------------------------------------------------------------------
 504+ 9423
 505+ 9423              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 9423              ; 	inc de
 507+ 9423              ; 	inc de
 508+ 9423              ; 	ex de,hl
 509+ 9423              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 9423              ; 	ret
 511+ 9423
 512+ 9423              ; ----------------------------------------------------------------------------------------------------------
 513+ 9423              ;
 514+ 9423              ;	24/6/24
 515+ 9423              ;
 516+ 9423              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 9423              ;	_ de entidad.
 518+ 9423              ;
 519+ 9423              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 9423              ;
 521+ 9423              ;
 522+ 9423              ;	MODIFICA: HL,DE y BC
 523+ 9423
 524+ 9423
 525+ 9423              Definicion_de_entidad_a_bandeja_DRAW
 526+ 9423
 527+ 9423 11 BB 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 9426 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 9427 12           	ld (de),a
 530+ 9428 23           	inc hl
 531+ 9429              ;
 532+ 9429 11 C9 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 942C 01 02 00     	ld bc,2
 534+ 942F ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9431              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9431 11 BE 8B     	ld de,Contador_de_vueltas
 537+ 9434 7E           	ld a,(hl)
 538+ 9435 12           	ld (de),a
 539+ 9436 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 9437
 541+ 9437 11 D0 8B     	ld de,Indice_Sprite_der
 542+ 943A 01 04 00     	ld bc,4
 543+ 943D ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 943F
 545+ 943F 11 D8 8B     	ld de,Posicion_inicio
 546+ 9442 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 9445 ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 9447
 549+ 9447 11 C2 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 944A 01 02 00     	ld bc,2
 551+ 944D ED B0        	ldir
 552+ 944F
 553+ 944F C9           	ret
 554+ 9450
 555+ 9450              ; ----------------------------------------------------------------------------------------------------------
 556+ 9450              ;
 557+ 9450              ;	1/8/24
 558+ 9450              ;
 559+ 9450
 560+ 9450              Parametros_de_bandeja_DRAW_a_caja
 561+ 9450
 562+ 9450 21 BB 8B     	ld hl,Bandeja_DRAW
 563+ 9453 01 0C 00     	ld bc,12
 564+ 9456 ED B0        	ldir
 565+ 9458 C9           	ret
 566+ 9459
 567+ 9459              ;---------------------------------------------------------------------------------------------------------------
 568+ 9459              ;
 569+ 9459              ;	5/1/24
 570+ 9459              ;
 571+ 9459              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9459              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9459              ;
 574+ 9459              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9459              ;
 576+ 9459              ;	(Numero_parcial_de_entidades)="7".
 577+ 9459              ;
 578+ 9459              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9459              ;
 580+ 9459              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9459              ;
 582+ 9459              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9459              ;	MODIFICA: A y B.
 584+ 9459              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9459
 586+ 9459              Inicializa_Numero_parcial_de_entidades
 587+ 9459
 588+ 9459              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9459
 590+ 9459 3A 01 8C     	ld a,(Numero_de_entidades)
 591+ 945C A7           	and a
 592+ 945D
 593+ 945D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 945D              ;	jr z,$
 595+ 945D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 945D
 597+ 945D 20 03        	jr nz,3F
 598+ 945F
 599+ 945F              ; ---------- ---------- ----------
 600+ 945F
 601+ 945F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 945F              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 945F
 604+ 945F CD 55 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 9462
 606+ 9462              ; ---------- ---------- ----------
 607+ 9462
 608+ 9462 3A 01 8C     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 9465 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 9467 38 08        	jr c,1F
 611+ 9469
 612+ 9469              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 9469              ; Actualizamos variables.
 614+ 9469
 615+ 9469 3E 07        	ld a,7
 616+ 946B 32 02 8C     	ld (Numero_parcial_de_entidades),a
 617+ 946E 47           	ld b,a
 618+ 946F 18 04        	jr 2F
 619+ 9471
 620+ 9471              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 9471              ; (Numero_de_entidades)="0".
 622+ 9471
 623+ 9471 32 02 8C     1 ld (Numero_parcial_de_entidades),a
 624+ 9474 47           	ld b,a
 625+ 9475 C9           2 ret
 626+ 9476
# file closed: Rutinas_de_inicio_y_niveles.asm
2285  9476              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9476              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9476              ;
   3+ 9476              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9476              ;
   5+ 9476              ; *****************************************************************************************************************************************************************************************
   6+ 9476              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9476
   8+ 9476 7C           calcula_tercio ld a,h
   9+ 9477 E6 18        	and $18
  10+ 9479 CB 2F        	sra a
  11+ 947B CB 2F        	sra a
  12+ 947D CB 2F        	sra a
  13+ 947F C9           	ret
  14+ 9480
# file closed: calcula_tercio.asm
2286  9480              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9480              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9480              ;
   3+ 9480              ;
   4+ 9480              ;	CLS.
   5+ 9480              ;
   6+ 9480              ;	Limpia la pantalla y define sus atributos.
   7+ 9480              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9480              ;
   9+ 9480              ;	COLORES: 0 ..... NEGRO
  10+ 9480              ;    		 1 ..... AZUL
  11+ 9480              ; 			 2 ..... ROJO
  12+ 9480              ;			 3 ..... MAGENTA
  13+ 9480              ; 			 4 ..... VERDE
  14+ 9480              ; 			 5 ..... CIAN
  15+ 9480              ;			 6 ..... AMARILLO
  16+ 9480              ; 			 7 ..... BLANCO
  17+ 9480              ;
  18+ 9480              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9480              ;
  20+ 9480              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9480
  22+ 9480
  23+ 9480 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9483 11 01 40     	LD DE,$4001
  25+ 9486 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9489 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 948B ED B0        	LDIR
  28+ 948D 01 FF 02     	LD BC,767
  29+ 9490 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9491 ED B0        	LDIR
  31+ 9493 C9           	ret
  32+ 9494
# file closed: Cls.asm
2287  9494              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9494              ; ------------------------------------------------------------------------
   2+ 9494              ;
   3+ 9494              ;	30/1/24
   4+ 9494              ;
   5+ 9494              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9494              ;	Fila superior "0", Columna izquierda "0".
   7+ 9494              ;
   8+ 9494              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9494              ;
  10+ 9494              ;	Modifica: A,BC y DE.
  11+ 9494
  12+ 9494 7D           Genera_coordenadas ld a,l
  13+ 9495 E6 1F        	and $1f
  14+ 9497 32 BC 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 949A
  16+ 949A 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 949B FE 40        	cp $40
  18+ 949D 38 1C        	jr c,4F
  19+ 949F
  20+ 949F CD 76 94     	call calcula_tercio
  21+ 94A2 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94A3
  23+ 94A3 1E 00        	ld e,0
  24+ 94A5 7D           	ld a,l
  25+ 94A6 E6 E0        	and $e0
  26+ 94A8 28 01        	jr z,1F
  27+ 94AA 04           	inc b
  28+ 94AB
  29+ 94AB 04           1 inc b
  30+ 94AC 05           	dec b
  31+ 94AD 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94AF              ;														; _ , salimos.
  33+ 94AF 1C           3 inc e
  34+ 94B0 D6 20        	sub 32
  35+ 94B2 20 FB        	jr nz,3B
  36+ 94B4 10 F5        	djnz 1B
  37+ 94B6
  38+ 94B6 7B           2 ld a,e
  39+ 94B7 32 BD 8B     	ld (Coordenada_y),a
  40+ 94BA C9           	ret
  41+ 94BB
  42+ 94BB AF           4 xor a
  43+ 94BC 32 BD 8B     	ld (Coordenada_y),a
  44+ 94BF C9           	ret
  45+ 94C0
# file closed: Genera_coordenadas.asm
2288  94C0              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94C0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94C0              ;
   3+ 94C0              ;	11/03/24
   4+ 94C0              ;
   5+ 94C0              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94C0              ;   DE contiene Puntero_objeto.
   7+ 94C0              ;   IX contiene el Puntero de impresión.
   8+ 94C0
   9+ 94C0              Genera_datos_de_impresion
  10+ 94C0
  11+ 94C0 ED 73 08 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94C4
  13+ 94C4 31 C2 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94C7 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 94C9
  16+ 94C9 2A 28 8C         ld hl,(Scanlines_album_SP)
  17+ 94CC
  18+ 94CC 3E 05            ld a,5
  19+ 94CE 85               add l
  20+ 94CF 6F               ld l,a
  21+ 94D0
  22+ 94D0 F9               ld sp,hl
  23+ 94D1 22 28 8C         ld (Scanlines_album_SP),hl
  24+ 94D4
  25+ 94D4 21 00 00         ld hl,0
  26+ 94D7
  27+ 94D7 DD E5            push ix
  28+ 94D9 3B               dec sp
  29+ 94DA ED 7A            adc hl,sp
  30+ 94DC D5               push de
  31+ 94DD
  32+ 94DD              ; Recuperamos SP.
  33+ 94DD
  34+ 94DD ED 7B 08 8C      ld sp,(Stack)
  35+ 94E1
  36+ 94E1 E5               push hl
  37+ 94E2 F1               pop af
  38+ 94E3 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 94E4
  40+ 94E4              ; Tenemos el encabezado listo.
  41+ 94E4              ; Preparamos registros para generar los scanlines.
  42+ 94E4
  43+ 94E4 DD E5            push ix
  44+ 94E6 E1               pop hl                                          ; 1er scanline en HL.
  45+ 94E7
  46+ 94E7 ED 5B 28 8C      ld de,(Scanlines_album_SP)
  47+ 94EB
  48+ 94EB              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 94EB              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 94EB
  51+ 94EB 7C               ld a,h
  52+ 94EC FE 50            cp $50
  53+ 94EE 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 94F0
  55+ 94F0 20 05            jr nz,2F
  56+ 94F2
  57+ 94F2 7D               ld a,l
  58+ 94F3 FE E0            cp $e0
  59+ 94F5 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 94F7
  61+ 94F7 7D           2 ld a,l
  62+ 94F8 FE C0            cp $c0
  63+ 94FA D2 8C 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 94FD
  65+ 94FD              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 94FD
  67+ 94FD CD 8A 99         call NextScan
  68+ 9500 EB               ex de,hl
  69+ 9501
  70+ 9501 73               ld (hl),e
  71+ 9502 23               inc hl
  72+ 9503 72               ld (hl),d
  73+ 9504 23               inc hl
  74+ 9505
  75+ 9505 EB               ex de,hl
  76+ 9506
  77+ 9506 CD 8A 99         call NextScan
  78+ 9509 EB               ex de,hl
  79+ 950A
  80+ 950A 73               ld (hl),e
  81+ 950B 23               inc hl
  82+ 950C 72               ld (hl),d
  83+ 950D 23               inc hl
  84+ 950E
  85+ 950E EB               ex de,hl
  86+ 950F
  87+ 950F CD 8A 99         call NextScan
  88+ 9512 EB               ex de,hl
  89+ 9513
  90+ 9513 73               ld (hl),e
  91+ 9514 23               inc hl
  92+ 9515 72               ld (hl),d
  93+ 9516 23               inc hl
  94+ 9517
  95+ 9517 EB               ex de,hl
  96+ 9518
  97+ 9518 CD 8A 99         call NextScan
  98+ 951B EB               ex de,hl
  99+ 951C
 100+ 951C 73               ld (hl),e
 101+ 951D 23               inc hl
 102+ 951E 72               ld (hl),d
 103+ 951F 23               inc hl
 104+ 9520
 105+ 9520 EB               ex de,hl
 106+ 9521
 107+ 9521 CD 8A 99         call NextScan
 108+ 9524 EB               ex de,hl
 109+ 9525
 110+ 9525 73               ld (hl),e
 111+ 9526 23               inc hl
 112+ 9527 72               ld (hl),d
 113+ 9528 23               inc hl
 114+ 9529
 115+ 9529 EB               ex de,hl
 116+ 952A
 117+ 952A CD 8A 99         call NextScan
 118+ 952D EB               ex de,hl
 119+ 952E
 120+ 952E 73               ld (hl),e
 121+ 952F 23               inc hl
 122+ 9530 72               ld (hl),d
 123+ 9531 23               inc hl
 124+ 9532
 125+ 9532 EB               ex de,hl
 126+ 9533
 127+ 9533 CD 8A 99         call NextScan
 128+ 9536 EB               ex de,hl
 129+ 9537
 130+ 9537 73               ld (hl),e
 131+ 9538 23               inc hl
 132+ 9539 72               ld (hl),d
 133+ 953A 23               inc hl
 134+ 953B
 135+ 953B EB               ex de,hl
 136+ 953C
 137+ 953C CD 8A 99         call NextScan
 138+ 953F EB               ex de,hl
 139+ 9540
 140+ 9540 73               ld (hl),e
 141+ 9541 23               inc hl
 142+ 9542 72               ld (hl),d
 143+ 9543 23               inc hl
 144+ 9544
 145+ 9544 EB               ex de,hl
 146+ 9545
 147+ 9545 CD 8A 99         call NextScan
 148+ 9548 EB               ex de,hl
 149+ 9549
 150+ 9549 73               ld (hl),e
 151+ 954A 23               inc hl
 152+ 954B 72               ld (hl),d
 153+ 954C 23               inc hl
 154+ 954D
 155+ 954D EB               ex de,hl
 156+ 954E
 157+ 954E CD 8A 99         call NextScan
 158+ 9551 EB               ex de,hl
 159+ 9552
 160+ 9552 73               ld (hl),e
 161+ 9553 23               inc hl
 162+ 9554 72               ld (hl),d
 163+ 9555 23               inc hl
 164+ 9556
 165+ 9556 EB               ex de,hl
 166+ 9557
 167+ 9557 CD 8A 99         call NextScan
 168+ 955A EB               ex de,hl
 169+ 955B
 170+ 955B 73               ld (hl),e
 171+ 955C 23               inc hl
 172+ 955D 72               ld (hl),d
 173+ 955E 23               inc hl
 174+ 955F
 175+ 955F EB               ex de,hl
 176+ 9560
 177+ 9560 CD 8A 99         call NextScan
 178+ 9563 EB               ex de,hl
 179+ 9564
 180+ 9564 73               ld (hl),e
 181+ 9565 23               inc hl
 182+ 9566 72               ld (hl),d
 183+ 9567 23               inc hl
 184+ 9568
 185+ 9568 EB               ex de,hl
 186+ 9569
 187+ 9569 CD 8A 99         call NextScan
 188+ 956C EB               ex de,hl
 189+ 956D
 190+ 956D 73               ld (hl),e
 191+ 956E 23               inc hl
 192+ 956F 72               ld (hl),d
 193+ 9570 23               inc hl
 194+ 9571
 195+ 9571 EB               ex de,hl
 196+ 9572
 197+ 9572 CD 8A 99         call NextScan
 198+ 9575 EB               ex de,hl
 199+ 9576
 200+ 9576 73               ld (hl),e
 201+ 9577 23               inc hl
 202+ 9578 72               ld (hl),d
 203+ 9579 23               inc hl
 204+ 957A
 205+ 957A EB               ex de,hl
 206+ 957B
 207+ 957B CD 8A 99         call NextScan
 208+ 957E EB               ex de,hl
 209+ 957F
 210+ 957F 73               ld (hl),e
 211+ 9580 23               inc hl
 212+ 9581 72               ld (hl),d
 213+ 9582 23               inc hl
 214+ 9583
 215+ 9583              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ 9583
 217+ 9583 22 28 8C         ld (Scanlines_album_SP),hl
 218+ 9586
 219+ 9586              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ 9586
 221+ 9586 08               ex af,af
 222+ 9587
 223+ 9587 F5               push af
 224+ 9588 E1               pop hl
 225+ 9589
 226+ 9589 36 10            ld (hl),16
 227+ 958B
 228+ 958B C9               ret
 229+ 958C
 230+ 958C              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ 958C
 232+ 958C              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ 958C
 234+ 958C 3E 57            ld a,$57
 235+ 958E 94               sub h
 236+ 958F 47               ld b,a
 237+ 9590
 238+ 9590 3E DF            ld a,$df
 239+ 9592 BD               cp l
 240+ 9593 38 04            jr c,1F
 241+ 9595
 242+ 9595 3E 08            ld a,8
 243+ 9597 80               add b
 244+ 9598 47               ld b,a
 245+ 9599
 246+ 9599              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ 9599              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ 9599
 249+ 9599 48           1 ld c,b
 250+ 959A 0C               inc c
 251+ 959B
 252+ 959B 04               inc b
 253+ 959C 05               dec b
 254+ 959D 20 02            jr nz,3F
 255+ 959F
 256+ 959F 18 0B            jr 6F
 257+ 95A1
 258+ 95A1 CD 8A 99     3 call NextScan
 259+ 95A4 EB               ex de,hl
 260+ 95A5
 261+ 95A5 73               ld (hl),e
 262+ 95A6 23               inc hl
 263+ 95A7 72               ld (hl),d
 264+ 95A8 23               inc hl
 265+ 95A9
 266+ 95A9 EB               ex de,hl
 267+ 95AA 10 F5            djnz 3B
 268+ 95AC
 269+ 95AC ED 53 28 8C  6 ld (Scanlines_album_SP),de
 270+ 95B0
 271+ 95B0 08           5 ex af,af
 272+ 95B1 F5               push af
 273+ 95B2 E1               pop hl
 274+ 95B3
 275+ 95B3 71               ld (hl),c
 276+ 95B4
 277+ 95B4 C9               ret
 278+ 95B5
# file closed: Genera_datos_de_impresion.asm
2289  95B5              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95B5              ; -----------------------------------------------------------------------------
   2+ 95B5              ;
   3+ 95B5              ;   11/03/24
   4+ 95B5              ;
   5+ 95B5
   6+ 95B5              Pinta_Sprites
   7+ 95B5
   8+ 95B5              ;    ld hl,(Scanlines_album_SP)
   9+ 95B5              ;    call Extrae_address
  10+ 95B5
  11+ 95B5              ;    inc h
  12+ 95B5              ;    dec h
  13+ 95B5              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95B5
  15+ 95B5 ED 73 08 8C      ld (Stack),sp
  16+ 95B9
  17+ 95B9 EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95BA              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95BA 2C               inc l
  20+ 95BB 2C               inc l
  21+ 95BC
  22+ 95BC 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95BD
  24+ 95BD 2C               inc l
  25+ 95BE F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 95BF
  27+ 95BF              ;   Seleccionamos rutina de impresión:
  28+ 95BF
  29+ 95BF 3E 10            ld a,16
  30+ 95C1 B8               cp b
  31+ 95C2 C2 BE 96         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 95C5
  33+ 95C5              ;   Rutinas:
  34+ 95C5
  35+ 95C5              Pinta_rapido    ;   1520 t/states.
  36+ 95C5
  37+ 95C5 E1               pop hl
  38+ 95C6
  39+ 95C6 1A               ld a,(de)
  40+ 95C7 AE               xor (hl)
  41+ 95C8 77               ld (hl),a
  42+ 95C9 2C               inc l
  43+ 95CA 1C               inc e
  44+ 95CB 1A               ld a,(de)
  45+ 95CC AE               xor (hl)
  46+ 95CD 77               ld (hl),a
  47+ 95CE 2C               inc l
  48+ 95CF 1C               inc e
  49+ 95D0 1A               ld a,(de)
  50+ 95D1 AE               xor (hl)
  51+ 95D2 77               ld (hl),a
  52+ 95D3 13               inc de
  53+ 95D4
  54+ 95D4 E1               pop hl
  55+ 95D5
  56+ 95D5 1A               ld a,(de)
  57+ 95D6 AE               xor (hl)
  58+ 95D7 77               ld (hl),a
  59+ 95D8 2C               inc l
  60+ 95D9 1C               inc e
  61+ 95DA 1A               ld a,(de)
  62+ 95DB AE               xor (hl)
  63+ 95DC 77               ld (hl),a
  64+ 95DD 2C               inc l
  65+ 95DE 1C               inc e
  66+ 95DF 1A               ld a,(de)
  67+ 95E0 AE               xor (hl)
  68+ 95E1 77               ld (hl),a
  69+ 95E2 13               inc de
  70+ 95E3
  71+ 95E3 E1               pop hl
  72+ 95E4
  73+ 95E4 1A               ld a,(de)
  74+ 95E5 AE               xor (hl)
  75+ 95E6 77               ld (hl),a
  76+ 95E7 2C               inc l
  77+ 95E8 1C               inc e
  78+ 95E9 1A               ld a,(de)
  79+ 95EA AE               xor (hl)
  80+ 95EB 77               ld (hl),a
  81+ 95EC 2C               inc l
  82+ 95ED 1C               inc e
  83+ 95EE 1A               ld a,(de)
  84+ 95EF AE               xor (hl)
  85+ 95F0 77               ld (hl),a
  86+ 95F1 13               inc de
  87+ 95F2
  88+ 95F2 E1               pop hl
  89+ 95F3
  90+ 95F3 1A               ld a,(de)
  91+ 95F4 AE               xor (hl)
  92+ 95F5 77               ld (hl),a
  93+ 95F6 2C               inc l
  94+ 95F7 1C               inc e
  95+ 95F8 1A               ld a,(de)
  96+ 95F9 AE               xor (hl)
  97+ 95FA 77               ld (hl),a
  98+ 95FB 2C               inc l
  99+ 95FC 1C               inc e
 100+ 95FD 1A               ld a,(de)
 101+ 95FE AE               xor (hl)
 102+ 95FF 77               ld (hl),a
 103+ 9600 13               inc de
 104+ 9601
 105+ 9601 E1               pop hl
 106+ 9602
 107+ 9602 1A               ld a,(de)
 108+ 9603 AE               xor (hl)
 109+ 9604 77               ld (hl),a
 110+ 9605 2C               inc l
 111+ 9606 1C               inc e
 112+ 9607 1A               ld a,(de)
 113+ 9608 AE               xor (hl)
 114+ 9609 77               ld (hl),a
 115+ 960A 2C               inc l
 116+ 960B 1C               inc e
 117+ 960C 1A               ld a,(de)
 118+ 960D AE               xor (hl)
 119+ 960E 77               ld (hl),a
 120+ 960F 13               inc de
 121+ 9610
 122+ 9610 E1               pop hl
 123+ 9611
 124+ 9611 1A               ld a,(de)
 125+ 9612 AE               xor (hl)
 126+ 9613 77               ld (hl),a
 127+ 9614 2C               inc l
 128+ 9615 1C               inc e
 129+ 9616 1A               ld a,(de)
 130+ 9617 AE               xor (hl)
 131+ 9618 77               ld (hl),a
 132+ 9619 2C               inc l
 133+ 961A 1C               inc e
 134+ 961B 1A               ld a,(de)
 135+ 961C AE               xor (hl)
 136+ 961D 77               ld (hl),a
 137+ 961E 13               inc de
 138+ 961F
 139+ 961F E1               pop hl
 140+ 9620
 141+ 9620 1A               ld a,(de)
 142+ 9621 AE               xor (hl)
 143+ 9622 77               ld (hl),a
 144+ 9623 2C               inc l
 145+ 9624 1C               inc e
 146+ 9625 1A               ld a,(de)
 147+ 9626 AE               xor (hl)
 148+ 9627 77               ld (hl),a
 149+ 9628 2C               inc l
 150+ 9629 1C               inc e
 151+ 962A 1A               ld a,(de)
 152+ 962B AE               xor (hl)
 153+ 962C 77               ld (hl),a
 154+ 962D 13               inc de
 155+ 962E
 156+ 962E E1               pop hl
 157+ 962F
 158+ 962F 1A               ld a,(de)
 159+ 9630 AE               xor (hl)
 160+ 9631 77               ld (hl),a
 161+ 9632 2C               inc l
 162+ 9633 1C               inc e
 163+ 9634 1A               ld a,(de)
 164+ 9635 AE               xor (hl)
 165+ 9636 77               ld (hl),a
 166+ 9637 2C               inc l
 167+ 9638 1C               inc e
 168+ 9639 1A               ld a,(de)
 169+ 963A AE               xor (hl)
 170+ 963B 77               ld (hl),a
 171+ 963C 13               inc de
 172+ 963D
 173+ 963D E1               pop hl
 174+ 963E
 175+ 963E 1A               ld a,(de)
 176+ 963F AE               xor (hl)
 177+ 9640 77               ld (hl),a
 178+ 9641 2C               inc l
 179+ 9642 1C               inc e
 180+ 9643 1A               ld a,(de)
 181+ 9644 AE               xor (hl)
 182+ 9645 77               ld (hl),a
 183+ 9646 2C               inc l
 184+ 9647 1C               inc e
 185+ 9648 1A               ld a,(de)
 186+ 9649 AE               xor (hl)
 187+ 964A 77               ld (hl),a
 188+ 964B 13               inc de
 189+ 964C
 190+ 964C E1               pop hl
 191+ 964D
 192+ 964D 1A               ld a,(de)
 193+ 964E AE               xor (hl)
 194+ 964F 77               ld (hl),a
 195+ 9650 2C               inc l
 196+ 9651 1C               inc e
 197+ 9652 1A               ld a,(de)
 198+ 9653 AE               xor (hl)
 199+ 9654 77               ld (hl),a
 200+ 9655 2C               inc l
 201+ 9656 1C               inc e
 202+ 9657 1A               ld a,(de)
 203+ 9658 AE               xor (hl)
 204+ 9659 77               ld (hl),a
 205+ 965A 13               inc de
 206+ 965B
 207+ 965B E1               pop hl
 208+ 965C
 209+ 965C 1A               ld a,(de)
 210+ 965D AE               xor (hl)
 211+ 965E 77               ld (hl),a
 212+ 965F 2C               inc l
 213+ 9660 1C               inc e
 214+ 9661 1A               ld a,(de)
 215+ 9662 AE               xor (hl)
 216+ 9663 77               ld (hl),a
 217+ 9664 2C               inc l
 218+ 9665 1C               inc e
 219+ 9666 1A               ld a,(de)
 220+ 9667 AE               xor (hl)
 221+ 9668 77               ld (hl),a
 222+ 9669 13               inc de
 223+ 966A
 224+ 966A E1               pop hl
 225+ 966B
 226+ 966B 1A               ld a,(de)
 227+ 966C AE               xor (hl)
 228+ 966D 77               ld (hl),a
 229+ 966E 2C               inc l
 230+ 966F 1C               inc e
 231+ 9670 1A               ld a,(de)
 232+ 9671 AE               xor (hl)
 233+ 9672 77               ld (hl),a
 234+ 9673 2C               inc l
 235+ 9674 1C               inc e
 236+ 9675 1A               ld a,(de)
 237+ 9676 AE               xor (hl)
 238+ 9677 77               ld (hl),a
 239+ 9678 13               inc de
 240+ 9679
 241+ 9679 E1               pop hl
 242+ 967A
 243+ 967A 1A               ld a,(de)
 244+ 967B AE               xor (hl)
 245+ 967C 77               ld (hl),a
 246+ 967D 2C               inc l
 247+ 967E 1C               inc e
 248+ 967F 1A               ld a,(de)
 249+ 9680 AE               xor (hl)
 250+ 9681 77               ld (hl),a
 251+ 9682 2C               inc l
 252+ 9683 1C               inc e
 253+ 9684 1A               ld a,(de)
 254+ 9685 AE               xor (hl)
 255+ 9686 77               ld (hl),a
 256+ 9687 13               inc de
 257+ 9688
 258+ 9688 E1               pop hl
 259+ 9689
 260+ 9689 1A               ld a,(de)
 261+ 968A AE               xor (hl)
 262+ 968B 77               ld (hl),a
 263+ 968C 2C               inc l
 264+ 968D 1C               inc e
 265+ 968E 1A               ld a,(de)
 266+ 968F AE               xor (hl)
 267+ 9690 77               ld (hl),a
 268+ 9691 2C               inc l
 269+ 9692 1C               inc e
 270+ 9693 1A               ld a,(de)
 271+ 9694 AE               xor (hl)
 272+ 9695 77               ld (hl),a
 273+ 9696 13               inc de
 274+ 9697
 275+ 9697 E1               pop hl
 276+ 9698
 277+ 9698 1A               ld a,(de)
 278+ 9699 AE               xor (hl)
 279+ 969A 77               ld (hl),a
 280+ 969B 2C               inc l
 281+ 969C 1C               inc e
 282+ 969D 1A               ld a,(de)
 283+ 969E AE               xor (hl)
 284+ 969F 77               ld (hl),a
 285+ 96A0 2C               inc l
 286+ 96A1 1C               inc e
 287+ 96A2 1A               ld a,(de)
 288+ 96A3 AE               xor (hl)
 289+ 96A4 77               ld (hl),a
 290+ 96A5 13               inc de
 291+ 96A6
 292+ 96A6 E1               pop hl
 293+ 96A7
 294+ 96A7 1A               ld a,(de)
 295+ 96A8 AE               xor (hl)
 296+ 96A9 77               ld (hl),a
 297+ 96AA 2C               inc l
 298+ 96AB 1C               inc e
 299+ 96AC 1A               ld a,(de)
 300+ 96AD AE               xor (hl)
 301+ 96AE 77               ld (hl),a
 302+ 96AF 2C               inc l
 303+ 96B0 1C               inc e
 304+ 96B1 1A               ld a,(de)
 305+ 96B2 AE               xor (hl)
 306+ 96B3 77               ld (hl),a
 307+ 96B4 13               inc de
 308+ 96B5
 309+ 96B5 ED 73 28 8C      ld (Scanlines_album_SP),sp
 310+ 96B9 ED 7B 08 8C      ld sp,(Stack)
 311+ 96BD C9               ret
 312+ 96BE
 313+ 96BE              Pinta_lento
 314+ 96BE
 315+ 96BE E1           1 pop hl
 316+ 96BF
 317+ 96BF 1A               ld a,(de)
 318+ 96C0 AE               xor (hl)
 319+ 96C1 77               ld (hl),a
 320+ 96C2 2C               inc l
 321+ 96C3 1C               inc e
 322+ 96C4 1A               ld a,(de)
 323+ 96C5 AE               xor (hl)
 324+ 96C6 77               ld (hl),a
 325+ 96C7 2C               inc l
 326+ 96C8 1C               inc e
 327+ 96C9 1A               ld a,(de)
 328+ 96CA AE               xor (hl)
 329+ 96CB 77               ld (hl),a
 330+ 96CC 13               inc de
 331+ 96CD
 332+ 96CD 10 EF            djnz 1B
 333+ 96CF
 334+ 96CF ED 73 28 8C      ld (Scanlines_album_SP),sp
 335+ 96D3 ED 7B 08 8C      ld sp,(Stack)
 336+ 96D7 C9               ret
# file closed: Pinta_Sprites.asm
2290  96D8              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 96D8              ; ******************************************************************************************************************************************************************************************
   2+ 96D8              ;
   3+ 96D8              ; 26/06/23
   4+ 96D8              ;
   5+ 96D8              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 96D8
   7+ 96D8              Draw
   8+ 96D8
   9+ 96D8 CD 7E 99     	call Prepara_draw
  10+ 96DB 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 96DC A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 96DD 28 05        	jr z,2F
  13+ 96DF
  14+ 96DF 3A DA 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 96E2 18 0C        	jr 1F
  16+ 96E4
  17+ 96E4 2A D8 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 96E7 22 CB 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 96EA CD 76 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 96ED              ;													; _la esquina superior izquierda de la pantalla.
  21+ 96ED
  22+ 96ED CD 1D 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 96F0
  24+ 96F0 3A C8 8B     1 ld a,(Ctrl_0)
  25+ 96F3 CB 6F        	bit 5,a
  26+ 96F5 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 96F7
  28+ 96F7 CD 0C 97     	call Comprueba_limite_horizontal
  29+ 96FA CD 9C 97     	call Comprueba_limite_vertical
  30+ 96FD
  31+ 96FD              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 96FD              ; -----------------------
  33+ 96FD              ; -----------------------
  34+ 96FD              ; -----------------------
  35+ 96FD
  36+ 96FD CD F2 98     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9700 CD 29 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9703
  39+ 9703 3A C8 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9706 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 9708 32 C8 8B     	ld (Ctrl_0),a
  42+ 970B
  43+ 970B C9           	ret
  44+ 970C
  45+ 970C              ; *******************************************************************************************************************************************************************************************
  46+ 970C              ;	21/01/23
  47+ 970C              ;
  48+ 970C              ; 	Comprueba_limite_horizontal.
  49+ 970C              ;
  50+ 970C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 970C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 970C              ;
  53+ 970C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 970C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 970C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 970C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 970C
  58+ 970C
  59+ 970C
  60+ 970C 3A C8 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 970F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9711 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9713 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9715 32 C8 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 9718 18 09            jr 6F
  66+ 971A CB 5F        1 bit 3,a
  67+ 971C 28 0A            jr z,2F
  68+ 971E E6 F7            and $f7
  69+ 9720 32 C8 8B         ld (Ctrl_0),a
  70+ 9723 CD 76 98     6 call Inicializacion
  71+ 9726 18 5B            jr 5F
  72+ 9728 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 9729
  74+ 9729              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 9729              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 9729
  77+ 9729 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 972A 2A DC 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 972D CD 76 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9730 67           	ld h,a
  81+ 9731 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9732 CD 76 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9735 67           	ld h,a
  84+ 9736 A7           	and a
  85+ 9737 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 9739 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 973A 3A DA 8B     	ld a,(Cuad_objeto)
  88+ 973D FE 02        	cp 2
  89+ 973F 38 1E        	jr c,3F
  90+ 9741 28 1C        	jr z,3F
  91+ 9743 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9744 28 23            jr z,7F
  93+ 9746 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 9748 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 974A E1           	pop hl
  96+ 974B
  97+ 974B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 974B              ; _para indicar con E="2" en caso necesario.
  99+ 974B
 100+ 974B E5               push hl
 101+ 974C C5               push bc
 102+ 974D CD 76 94     	call calcula_tercio
 103+ 9750 FE 01        	cp 1
 104+ 9752 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9754 CD 84 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9757 28 26            jr z,9F
 107+ 9759 38 24            jr c,9F
 108+ 975B 1E 00        11 ld e,0
 109+ 975D 18 22            jr 8F
 110+ 975F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9760 28 07        	jr z, 7F
 112+ 9762 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9764 1E 00         	ld e,0
 114+ 9766 E1           	pop hl
 115+ 9767 18 04        	jr 4F
 116+ 9769 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 976B 18 15            jr 10F
 118+ 976D
 119+ 976D              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 976D              ; _para indicar con E="2" en caso necesario.
 121+ 976D
 122+ 976D E5           4 push hl
 123+ 976E C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 976F CD 76 94     	call calcula_tercio
 125+ 9772 FE 01        	cp 1
 126+ 9774 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9776 CD 84 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 9779 28 04            jr z,9F
 129+ 977B 30 02            jr nc,9F
 130+ 977D 18 02        	jr 8F
 131+ 977F 1E 02        9 ld e,2
 132+ 9781 C1           8 pop bc
 133+ 9782 E1           10 pop hl
 134+ 9783 C9           5 ret
 135+ 9784
 136+ 9784              ; --------------------
 137+ 9784              ;
 138+ 9784              ; 25/08/22
 139+ 9784
 140+ 9784 CD 76 94     Comprueba_centro call calcula_tercio
 141+ 9787 67               ld h,a
 142+ 9788 08           	ex af,af
 143+ 9789 FE 02        	cp 2
 144+ 978B 38 07        	jr c,1F
 145+ 978D 28 05        	jr z,1F
 146+ 978F 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9792 18 03        	jr 2F
 148+ 9794 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 9797 08           2 ex af,af
 150+ 9798 A7               and a
 151+ 9799 ED 42            sbc hl,bc
 152+ 979B C9               ret
 153+ 979C
 154+ 979C              ; *********************************************************************************************************************************************************************************************
 155+ 979C              ;
 156+ 979C              ;   16/8/22
 157+ 979C              ;
 158+ 979C              ;	Comprueba_limite_vertical
 159+ 979C              ;
 160+ 979C              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 979C              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 979C              ;
 163+ 979C
 164+ 979C 2A CB 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 979F 7D           	ld a,l
 166+ 97A0 E6 1F        	and $1F
 167+ 97A2 57           	ld d,a
 168+ 97A3 3A DE 8B     	ld a,(Limite_vertical)
 169+ 97A6 BA           	cp d 											; Límite - Posición.
 170+ 97A7 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97A8 3A DA 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97AB CB 47        	bit 0,a
 173+ 97AD 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97AF
 175+ 97AF              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97AF
 177+ 97AF 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97B0 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97B2
 180+ 97B2              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97B2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97B2
 183+ 97B2 3A BC 8B         ld a,(Coordenada_X)
 184+ 97B5 16 0F            ld d,Centro_izquierda
 185+ 97B7 A7               and a
 186+ 97B8 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97B9 28 1E            jr z,3F
 188+ 97BB 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97BD              ;                                                    ; _salimos sin modificar nada.
 190+ 97BD 18 0E            jr 2F
 191+ 97BF 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 97C0 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 97C2
 194+ 97C2              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 97C2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 97C2
 197+ 97C2 3A BC 8B         ld a,(Coordenada_X)
 198+ 97C5 16 10            ld d,Centro_derecha
 199+ 97C7 A7               and a
 200+ 97C8 92               sub d
 201+ 97C9 28 0E            jr z,3F
 202+ 97CB 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 97CD              ;                                                    ; _salimos sin modificar nada.
 204+ 97CD CB 43        2 bit 0,e
 205+ 97CF 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 97D1 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 97D2 CD 66 98         call Modificaccionne
 208+ 97D5 C1           	pop bc
 209+ 97D6 CD 76 98         call Inicializacion
 210+ 97D9 C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 97DA
 212+ 97DA              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 97DA
 214+ 97DA C5           4 push bc
 215+ 97DB 01 CA 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 97DE 0A           	ld a,(bc)
 217+ 97DF 3D           	dec a
 218+ 97E0 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 97E1 7D           	ld a,l
 220+ 97E2 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 97E3 CB 47        	bit 0,a
 222+ 97E5 28 03        	jr z,5F
 223+ 97E7 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 97E8 18 2E        	jr 7F
 225+ 97EA
 226+ 97EA              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 97EA
 228+ 97EA 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 97EB F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 97EC 3A C8 8B     	ld a,(Ctrl_0)
 231+ 97EF CB 4F        	bit 1,a
 232+ 97F1 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 97F3 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 97F4
 235+ 97F4              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 97F4
 237+ 97F4 1C               inc e
 238+ 97F5 1D               dec e
 239+ 97F6 20 07            jr nz,12F
 240+ 97F8 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 97F9 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 97FA 22 CB 8B     	ld (Posicion_actual),hl
 243+ 97FD 18 44        13 jr 9F
 244+ 97FF CB 43        12 bit 0,e
 245+ 9801 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9803              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9803 C1           	pop bc
 248+ 9804 18 D3        	jr 3B
 249+ 9806 80           14 add b
 250+ 9807 6F               ld l,a
 251+ 9808 22 CB 8B     	ld (Posicion_actual),hl
 252+ 980B CD 66 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 980E 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9810 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9812 32 C8 8B         ld (Ctrl_0),a
 256+ 9815 F1           	pop af
 257+ 9816 18 2B        	jr 9F
 258+ 9818
 259+ 9818              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 9818
 261+ 9818 F5           7 push af
 262+ 9819 3A C8 8B     	ld a,(Ctrl_0)
 263+ 981C CB 47        	bit 0,a
 264+ 981E 20 1D        	jr nz,8F
 265+ 9820 F1           	pop af
 266+ 9821
 267+ 9821              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9821
 269+ 9821 1C           	inc e
 270+ 9822 1D               dec e
 271+ 9823 20 07            jr nz,10F
 272+ 9825 90           	sub b
 273+ 9826 6F               ld l,a
 274+ 9827 22 CB 8B     	ld (Posicion_actual),hl
 275+ 982A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 982C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 982C CB 43        10 bit 0,e
 278+ 982E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9830              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9830 C1           	pop bc
 281+ 9831 18 A6        	jr 3B
 282+ 9833 90           16 sub b
 283+ 9834 6F               ld l,a
 284+ 9835 22 CB 8B     	ld (Posicion_actual),hl
 285+ 9838 CD 66 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 983B 18 06            jr 9F
 287+ 983D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 983F 32 C8 8B         ld (Ctrl_0),a
 289+ 9842 F1           	pop af
 290+ 9843 C1           9 pop bc
 291+ 9844 1E 00        	ld e,0
 292+ 9846 CD 76 98         call Inicializacion
 293+ 9849 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 984A 08           	ex af,af
 295+ 984B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 984C 18 8B            jr 3B
 297+ 984E
 298+ 984E              ; --------------------
 299+ 984E
 300+ 984E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9850 CD 99 99     1 call PreviousScan
 302+ 9853 10 FB            djnz 1B
 303+ 9855 22 CB 8B     	ld (Posicion_actual),hl
 304+ 9858 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 9859 C9           	ret
 306+ 985A
 307+ 985A              ; --------------------
 308+ 985A
 309+ 985A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 985C CD 8A 99     1 call NextScan
 311+ 985F 10 FB            djnz 1B
 312+ 9861 22 CB 8B     	ld (Posicion_actual),hl
 313+ 9864 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9865 C9           	ret
 315+ 9866
 316+ 9866              ; --------------------
 317+ 9866              ;
 318+ 9866              ;	22/01/23
 319+ 9866              ;
 320+ 9866              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9866              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9866              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9866
 324+ 9866
 325+ 9866              Modificaccionne
 326+ 9866
 327+ 9866 3A DA 8B     	ld a,(Cuad_objeto)
 328+ 9869 FE 02        	cp 2
 329+ 986B CC 4E 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 986E DC 4E 98         call c,Modifica_Pos_actual
 331+ 9871 C8           	ret z
 332+ 9872 CD 5A 98         call Modifica_Pos_actual2
 333+ 9875 C9               ret
 334+ 9876
 335+ 9876              ; *************************************************************************************************************************************************************************************************
 336+ 9876              ;
 337+ 9876              ;	13/8/22
 338+ 9876              ;
 339+ 9876              ;	Inicializacion
 340+ 9876              ;
 341+ 9876              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9876              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9876              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9876              ;
 345+ 9876              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9876              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9876              ;	_ desaparece/aparece.
 348+ 9876
 349+ 9876              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9876              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9876              ;
 352+ 9876              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9876              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9876              ; 		   [E] ="0"
 355+ 9876
 356+ 9876              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9876
 358+ 9876 CD 76 94     Inicializacion call calcula_tercio
 359+ 9879 28 36        	jr z,primit
 360+ 987B E6 02        	and 2
 361+ 987D 20 07        	jr nz,segmit
 362+ 987F 7D           	ld a,l
 363+ 9880 FE 7F        	cp $7f
 364+ 9882 38 2D        	jr c,primit
 365+ 9884 28 2B        	jr z,primit
 366+ 9886 CD EC 98     segmit call column
 367+ 9889 38 13        	jr c,tercuad
 368+ 988B 3E 04        cuarcuad ld a,4
 369+ 988D 32 DA 8B     	ld (Cuad_objeto),a
 370+ 9890 21 20 48     	ld hl,$4820
 371+ 9893 22 DC 8B     	ld (Limite_horizontal),hl
 372+ 9896 21 DE 8B     	ld hl,Limite_vertical
 373+ 9899 36 0D        	ld (hl),$0d
 374+ 989B 08           	ex af,af
 375+ 989C 18 3C        	jr 1F
 376+ 989E              tercuad
 377+ 989E 3E 03        	ld a,3
 378+ 98A0 32 DA 8B     	ld (Cuad_objeto),a
 379+ 98A3 21 20 48     	ld hl,$4820
 380+ 98A6 22 DC 8B     	ld (Limite_horizontal),hl
 381+ 98A9 21 DE 8B     	ld hl,Limite_vertical
 382+ 98AC 36 12        	ld (hl),$12
 383+ 98AE 08           	ex af,af
 384+ 98AF 18 29        	jr 1F
 385+ 98B1 CD EC 98     primit call column
 386+ 98B4 38 13        	jr c, primcuad
 387+ 98B6              segcuad
 388+ 98B6 3E 02        	ld a,2
 389+ 98B8 32 DA 8B     	ld (Cuad_objeto),a
 390+ 98BB 21 C0 4F     	ld hl,$4fc0
 391+ 98BE 22 DC 8B     	ld (Limite_horizontal),hl
 392+ 98C1 21 DE 8B     	ld hl,Limite_vertical
 393+ 98C4 36 0D        	ld (hl),$0d
 394+ 98C6 08           	ex af,af
 395+ 98C7 18 11        	jr 1F
 396+ 98C9              primcuad
 397+ 98C9 3E 01        	ld a,1
 398+ 98CB 32 DA 8B     	ld (Cuad_objeto),a
 399+ 98CE 21 C0 4F     	ld hl,$4fc0
 400+ 98D1 22 DC 8B     	ld (Limite_horizontal),hl
 401+ 98D4 21 DE 8B     	ld hl,Limite_vertical
 402+ 98D7 36 12        	ld (hl),$12
 403+ 98D9 08           	ex af,af
 404+ 98DA
 405+ 98DA C5           1 push bc
 406+ 98DB E5           	push hl
 407+ 98DC D5           	push de
 408+ 98DD
 409+ 98DD 2A CB 8B     	ld hl,(Posicion_actual)
 410+ 98E0 CD 94 94     	call Genera_coordenadas
 411+ 98E3
 412+ 98E3 D1           	pop de
 413+ 98E4 E1           	pop hl
 414+ 98E5 C1           	pop bc
 415+ 98E6
 416+ 98E6 21 C8 8B     	ld hl,Ctrl_0
 417+ 98E9 CB EE        	set 5,(hl)
 418+ 98EB C9           	ret
 419+ 98EC
 420+ 98EC              ; ------------------------------------------------------------------------------------------------------------------
 421+ 98EC
 422+ 98EC              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 98EC              ;
 424+ 98EC              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 98EC
 426+ 98EC 7D           column ld a,l
 427+ 98ED E6 1F        	and $1f
 428+ 98EF FE 10         	cp $10
 429+ 98F1 C9            	ret
 430+ 98F2
 431+ 98F2              ; --------------------------------------------------------------------------------------------------------------------
 432+ 98F2              ;
 433+ 98F2              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 98F2              ;
 435+ 98F2              ; 14/12/22
 436+ 98F2              ;
 437+ 98F2              ;	Modifica: A y BC.
 438+ 98F2
 439+ 98F2 3A DA 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 98F5 E6 01        	and 1
 441+ 98F7 28 17        	jr z,1F
 442+ 98F9
 443+ 98F9              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 98F9
 445+ 98F9 3A BC 8B     	ld a,(Coordenada_X)
 446+ 98FC 47           	ld b,a
 447+ 98FD 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 98FE 79           	ld a,c
 449+ 98FF 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9900 38 08        	jr c,2F
 451+ 9902 47           	ld b,a
 452+ 9903 79           	ld a,c
 453+ 9904 90           	sub b
 454+ 9905 32 DB 8B     	ld (Columnas),a
 455+ 9908 18 1B        	jr 4F
 456+ 990A 79           2 ld a,c
 457+ 990B 32 DB 8B     	ld (Columnas),a
 458+ 990E 18 15        	jr 4F
 459+ 9910
 460+ 9910              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9910
 462+ 9910 3A BC 8B     1 ld a,(Coordenada_X)
 463+ 9913 81           	add c
 464+ 9914 3D           	dec a
 465+ 9915 D6 1F        	sub $1f
 466+ 9917 38 08        	jr c,3F
 467+ 9919 47           	ld b,a
 468+ 991A 79           	ld a,c
 469+ 991B 90           	sub b
 470+ 991C 32 DB 8B     	ld (Columnas),a
 471+ 991F 18 04        	jr 4F
 472+ 9921 79           3 ld a,c
 473+ 9922 32 DB 8B     	ld (Columnas),a
 474+ 9925 D9           4 exx
 475+ 9926 4F           	ld c,a
 476+ 9927 D9           	exx
 477+ 9928 C9            ret
 478+ 9929
 479+ 9929              ; --------------------------------------------------------------------------------------------------------------------
 480+ 9929              ;
 481+ 9929              ;   19/7/23
 482+ 9929              ;
 483+ 9929              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 9929              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 9929              ;
 486+ 9929              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 9929              ;			HL e IY Contienen (Puntero_objeto).
 488+ 9929              ;
 489+ 9929              ;	DESTRUYE: HL,B Y A.
 490+ 9929
 491+ 9929 3A DA 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 992C FE 02        	cp 2
 493+ 992E 38 18        	jr c,1F
 494+ 9930 28 16        	jr z,1F
 495+ 9932 E6 01        	and 1
 496+ 9934 28 0D        	jr z,3F
 497+ 9936
 498+ 9936              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9936
 500+ 9936 CD 72 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 9939
 502+ 9939 7D           9 ld a,l
 503+ 993A E6 1F        	and $1f
 504+ 993C 28 2A        	jr z,7F
 505+ 993E 2B           	dec hl
 506+ 993F 10 F8        	djnz 9B
 507+ 9941 18 25        	jr 7F
 508+ 9943
 509+ 9943              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9943
 511+ 9943 2A CB 8B     3 ld hl,(Posicion_actual)
 512+ 9946 18 20        	jr 7F
 513+ 9948
 514+ 9948 28 14        1 jr z,2F
 515+ 994A
 516+ 994A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 994A
 518+ 994A CD 72 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 994D
 520+ 994D 7D           4 ld a,l
 521+ 994E E6 1F        	and $1f
 522+ 9950 28 03        	jr z,6F
 523+ 9952 2B           	dec hl
 524+ 9953 10 F8        	djnz 4B
 525+ 9955 06 0F        6 ld b,15
 526+ 9957 CD 99 99     5 call PreviousScan
 527+ 995A 10 FB        	djnz 5B
 528+ 995C 18 0A        	jr 7F
 529+ 995E
 530+ 995E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 995E
 532+ 995E CD 72 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 9961 06 0F        	ld b,15
 534+ 9963 CD 99 99     8 call PreviousScan
 535+ 9966 10 FB        	djnz 8B
 536+ 9968
 537+ 9968 E5           7 push hl
 538+ 9969 DD E1        	pop ix
 539+ 996B
 540+ 996B 2A CD 8B     	ld hl,(Puntero_objeto)
 541+ 996E E5           	push hl
 542+ 996F FD E1        	pop iy
 543+ 9971
 544+ 9971 C9           	ret
 545+ 9972
 546+ 9972              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9972              ;
 548+ 9972              ;	2/1/23
 549+ 9972              ;
 550+ 9972              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9972              ;
 552+ 9972              ;	Tras esta rutina tenemos:
 553+ 9972              ;
 554+ 9972              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9972              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9972              ;
 557+ 9972              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9972
 559+ 9972 2A CB 8B     Operandos ld hl,(Posicion_actual)
 560+ 9975 3A DB 8B     	ld a,(Columnas)
 561+ 9978 3D           	dec a
 562+ 9979 20 01        	jr nz,1F
 563+ 997B 3C           	inc a
 564+ 997C 47           1 ld b,a
 565+ 997D C9           	ret
 566+ 997E
 567+ 997E              ; --------------------------------------------------------------------------------------------------------------------
 568+ 997E              ;
 569+ 997E              ;	Prepara_draw
 570+ 997E              ;
 571+ 997E              ;	Es una rutina de carga.
 572+ 997E              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 997E              ;
 574+ 997E              ;	FUNCIONAMIENTO:
 575+ 997E              ;
 576+ 997E              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 997E              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 997E              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 997E              ;
 580+ 997E              ;	DESTRUYE:
 581+ 997E              ;
 582+ 997E              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 997E
 584+ 997E 21 C9 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 9981 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 9982 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 9983 4E           	ld c,(hl)
 588+ 9984 2A CB 8B     	ld hl,(Posicion_actual)
 589+ 9987 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 9989 C9           	ret
 591+ 998A
 592+ 998A              ;----------------------------------------------------------------------------------------------------------------
 593+ 998A              ;
 594+ 998A              ;	5/08/22
 595+ 998A              ;
 596+ 998A              ;   NextScan.
 597+ 998A              ;
 598+ 998A              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 998A              ;
 600+ 998A              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 998A              ;
 602+ 998A              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 998A              ;
 604+ 998A              ;       DESTRUIDOS: AF y HL !!!
 605+ 998A              ;
 606+ 998A              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 998A              ;
 608+ 998A
 609+ 998A 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 998B 7C               ld a,h
 611+ 998C E6 07            and 7
 612+ 998E C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 998F
 614+ 998F 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 9990 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 9992 6F               ld l,a
 617+ 9993 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 9994
 619+ 9994 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 9995 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 9997 67               ld h,a
 622+ 9998 C9               ret
 623+ 9999
 624+ 9999              ;----------------------------------------------------------------------------------------------------------------
 625+ 9999              ;
 626+ 9999              ;	5/08/22
 627+ 9999              ;
 628+ 9999              ;   PreviousScan.
 629+ 9999              ;
 630+ 9999              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 9999              ;
 632+ 9999              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 9999              ;
 634+ 9999              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 9999              ;
 636+ 9999              ;       DESTRUIDOS: AF y HL !!!
 637+ 9999              ;
 638+ 9999              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 9999              ;
 640+ 9999
 641+ 9999 7C           PreviousScan ld a,h
 642+ 999A 25               dec h               ; Dec H.
 643+ 999B E6 07            and 7
 644+ 999D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 999E
 646+ 999E 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 999F D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99A1 6F               ld l,a
 649+ 99A2 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99A3
 651+ 99A3 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99A4 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99A6 67               ld h,a
 654+ 99A7 C9               ret
 655+ 99A8
 656+ 99A8
 657+ 99A8
 658+ 99A8
 659+ 99A8
 660+ 99A8
 661+ 99A8
 662+ 99A8
 663+ 99A8
 664+ 99A8
 665+ 99A8
 666+ 99A8
# file closed: Draw_XOR.asm
2291  99A8              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99A8
   2+ 99A8              ; ******************************************************************************************************************************************************************************************
   3+ 99A8              ;
   4+ 99A8              ;   20/05/23
   5+ 99A8              ;
   6+ 99A8              ;	Recompone_posicion_inicio
   7+ 99A8              ;
   8+ 99A8              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99A8              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99A8              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99A8              ;	_ a una u otra rutina.
  12+ 99A8
  13+ 99A8              Recompone_posicion_inicio
  14+ 99A8
  15+ 99A8 2A D8 8B     	ld hl,(Posicion_inicio)
  16+ 99AB 7D           	ld a,l
  17+ 99AC E6 1F        	and $1f
  18+ 99AE 28 16        	jr z,1F
  19+ 99B0
  20+ 99B0 FE 1F        	cp $1f
  21+ 99B2 28 0D        	jr z,3F
  22+ 99B4
  23+ 99B4 21 C7 8B     	ld hl,Ctrl_2
  24+ 99B7 CB C6        	set 0,(hl)
  25+ 99B9 2A CD 8B     	ld hl,(Puntero_objeto)
  26+ 99BC 22 F9 8B     	ld (Repone_puntero_objeto),hl
  27+ 99BF 18 08        	jr 2F
  28+ 99C1
  29+ 99C1 CD 6F 9B     3 call Mov_left
  30+ 99C4 18 03        	jr 2F
  31+ 99C6
  32+ 99C6 CD 4C 9A     1 call Mov_right
  33+ 99C9 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 99CC 22 CD 8B     	ld (Puntero_objeto),hl
  35+ 99CF C9           	ret
  36+ 99D0
  37+ 99D0              ; ******************************************************************************************************************************************************************************************
  38+ 99D0              ;
  39+ 99D0              ;   27/05/23
  40+ 99D0              ;
  41+ 99D0              ;	Mov_down
  42+ 99D0              ;
  43+ 99D0              ; 	Mueve el Sprite X px hacia abajo.
  44+ 99D0              ;
  45+ 99D0              ;
  46+ 99D0              Mov_down
  47+ 99D0
  48+ 99D0 CD 3A 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 99D3              ;																	; _ repone (Puntero_objeto).
  50+ 99D3 21 C8 8B     	ld hl,Ctrl_0
  51+ 99D6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 99D8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 99D8              ; 																	; _ en el caso de que no lo haya.
  54+ 99D8 3A E3 8B     	ld a,(Vel_down)
  55+ 99DB 47           	ld b,a
  56+ 99DC 2A CB 8B         ld hl,(Posicion_actual)
  57+ 99DF CD 76 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 99E2 E6 02        	and 2
  59+ 99E4 28 17        	jr z,1F
  60+ 99E6
  61+ 99E6              ; Nos encontramos en el último tercio de pantalla.
  62+ 99E6              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 99E6
  64+ 99E6 7C           	ld a,h
  65+ 99E7 FE 57        	cp $57
  66+ 99E9 20 12        	jr nz,1F
  67+ 99EB
  68+ 99EB 7D           	ld a,l
  69+ 99EC C6 20        	add $20
  70+ 99EE 30 0D        	jr nc,1F
  71+ 99F0
  72+ 99F0              ; ------------------------------
  73+ 99F0              ;
  74+ 99F0              ;	12/01/24
  75+ 99F0
  76+ 99F0              ;	call Reaparece_arriba
  77+ 99F0 CD FC 9C     	call Reinicio
  78+ 99F3
  79+ 99F3              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 99F3
  81+ 99F3 3A 2E 8C     	ld a,(Ctrl_3)
  82+ 99F6 CB CF        	set 1,a
  83+ 99F8 32 2E 8C     	ld (Ctrl_3),a
  84+ 99FB
  85+ 99FB 18 08        	jr 3F
  86+ 99FD              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 99FD              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 99FD              ; ------------------------------
  89+ 99FD
  90+ 99FD CD 8A 99     1 call NextScan
  91+ 9A00 22 CB 8B     	ld (Posicion_actual),hl
  92+ 9A03 10 DA            djnz 2B
  93+ 9A05 CD 94 94     3 call Genera_coordenadas
  94+ 9A08 C9           	ret
  95+ 9A09
  96+ 9A09              ; ******************************************************************************************************************************************************************************************
  97+ 9A09              ;
  98+ 9A09              ;   27/05/23
  99+ 9A09              ;
 100+ 9A09              ;	Mov_up
 101+ 9A09              ;
 102+ 9A09              ; 	Mueve el Sprite hacia arriba.
 103+ 9A09              ;
 104+ 9A09              ;
 105+ 9A09              Mov_up
 106+ 9A09
 107+ 9A09 CD 3A 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A0C              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A0C 21 C8 8B     	ld hl,Ctrl_0
 110+ 9A0F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A11              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A11              ; 																		; _ en el caso de que no lo haya.
 113+ 9A11 3A E2 8B     	ld a,(Vel_up)
 114+ 9A14 47           	ld b,a
 115+ 9A15 2A CB 8B     	ld hl,(Posicion_actual)
 116+ 9A18 CD 76 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A1B A7           	and a
 118+ 9A1C 20 10        	jr nz,1F
 119+ 9A1E
 120+ 9A1E              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A1E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A1E
 123+ 9A1E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A1F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A21 20 0B            jr nz,1F
 126+ 9A23 7D               ld a,l
 127+ 9A24 D6 20            sub $20
 128+ 9A26 30 06            jr nc,1F
 129+ 9A28 25               dec h
 130+ 9A29
 131+ 9A29              ; -----------------------------
 132+ 9A29 CD DD 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A2C              ;	call Reinicio
 134+ 9A2C              ; -----------------------------
 135+ 9A2C
 136+ 9A2C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A2E CD 99 99     1 call PreviousScan
 138+ 9A31 22 CB 8B     	ld (Posicion_actual),hl
 139+ 9A34 10 E2            djnz 3B
 140+ 9A36 CD 94 94     2 call Genera_coordenadas
 141+ 9A39 C9           	ret
 142+ 9A3A
 143+ 9A3A              ; -----------------------------
 144+ 9A3A              ;
 145+ 9A3A              ;	27/5/23
 146+ 9A3A              ;
 147+ 9A3A              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A3A              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A3A              ;
 150+ 9A3A              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A3A              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A3A              ;
 153+ 9A3A              ;	Modifica: A y (Puntero_objeto).
 154+ 9A3A
 155+ 9A3A 3A C7 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A3D CB 47        	bit 0,a
 157+ 9A3F C8           	ret z
 158+ 9A40 CB 87        	res 0,a
 159+ 9A42 32 C7 8B     	ld (Ctrl_2),a
 160+ 9A45 2A F9 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A48 22 CD 8B     	ld (Puntero_objeto),hl
 162+ 9A4B C9           	ret
 163+ 9A4C
 164+ 9A4C              ; ******************************************************************************************************************************************************************************************
 165+ 9A4C              ;
 166+ 9A4C              ;	19/10/22
 167+ 9A4C              ;
 168+ 9A4C              ;	Mov_right.
 169+ 9A4C              ;
 170+ 9A4C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A4C              ;
 172+ 9A4C
 173+ 9A4C 3A C8 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A4F CB 77        	bit 6,a
 175+ 9A51 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A53
 177+ 9A53 CD 8B 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A56 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A57
 180+ 9A57 21 C8 8B     	ld hl,Ctrl_0
 181+ 9A5A CB E6        	set 4,(hl)
 182+ 9A5C 18 52        	jr 8F
 183+ 9A5E
 184+ 9A5E 21 C8 8B     10 ld hl,Ctrl_0
 185+ 9A61 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9A63              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9A63              ; 																	; _ en el caso de que no lo haya.
 188+ 9A63 3A BC 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9A66 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9A68 20 46        	jr nz,8F
 191+ 9A6A
 192+ 9A6A 3A CF 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9A6D A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9A6E 28 40        	jr z,8F
 195+ 9A70
 196+ 9A70              ; ---------- ---------- ----------
 197+ 9A70              ;
 198+ 9A70              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9A70
 200+ 9A70 3A E1 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9A73 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9A75 28 11        	jr z,1F
 203+ 9A77 38 06        	jr c,6F
 204+ 9A79 FE 04        	cp 4
 205+ 9A7B 28 14        	jr z,7F
 206+ 9A7D 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9A7F
 208+ 9A7F              ; ---------- ---------- ----------
 209+ 9A7F              ;
 210+ 9A7F              ; Perfiles de velocidad
 211+ 9A7F              ;
 212+ 9A7F
 213+ 9A7F 3A CF 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9A82 FE FE        	cp $fe
 215+ 9A84 20 2A        	jr nz,8F
 216+ 9A86 18 10        	jr 3F
 217+ 9A88 3A CF 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9A8B FE FD        	cp $fd
 219+ 9A8D 20 21        	jr nz,8F
 220+ 9A8F 18 07        	jr 3F
 221+ 9A91 3A CF 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9A94 FE FB        	cp $fb
 223+ 9A96 20 18        	jr nz,8F
 224+ 9A98
 225+ 9A98              ; ---------- ---------- ----------
 226+ 9A98
 227+ 9A98              3
 228+ 9A98 CD CB 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9A9B              ;	call Reinicio
 230+ 9A9B
 231+ 9A9B              ; ---------- ---------- ----------
 232+ 9A9B              ;
 233+ 9A9B              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9A9B
 235+ 9A9B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9A9D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9A9E CD B7 9A     	call DESPLZ_DER
 238+ 9AA1 C1           	pop bc
 239+ 9AA2 10 F9        	djnz 5B
 240+ 9AA4 2A CB 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AA7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AA8 22 CB 8B     	ld (Posicion_actual),hl
 243+ 9AAB CD 94 94     	call Genera_coordenadas
 244+ 9AAE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AB0
 246+ 9AB0              ; ---------- ---------- ----------
 247+ 9AB0
 248+ 9AB0 2A CB 8B     8 ld hl,(Posicion_actual)
 249+ 9AB3 CD B7 9A     	call DESPLZ_DER
 250+ 9AB6 C9           2 ret
 251+ 9AB7
 252+ 9AB7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AB7              ;
 254+ 9AB7              ;	22/9/22
 255+ 9AB7              ;
 256+ 9AB7
 257+ 9AB7 CD C6 9A     DESPLZ_DER call Desplaza_derecha
 258+ 9ABA CD 12 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9ABD CD 3B 9B         call Ciclo_completo
 260+ 9AC0 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9AC3 CB FE        	set 7,(hl)
 262+ 9AC5 C9           	ret
 263+ 9AC6
 264+ 9AC6              ; ******************************************************************************************************************************************************************************************
 265+ 9AC6              ;	15/02/23
 266+ 9AC6              ;
 267+ 9AC6
 268+ 9AC6 3A E1 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9AC9 47           	ld b,a
 270+ 9ACA 2A D4 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9ACD 23           1 inc hl
 272+ 9ACE 23           	inc hl
 273+ 9ACF 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9AD1 22 D4 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9AD4 CD 75 90     	call Extrae_address
 276+ 9AD7 22 CD 8B     	ld (Puntero_objeto),hl
 277+ 9ADA
 278+ 9ADA              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9ADA
 280+ 9ADA              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9ADA              ; Cuántos movimientos hemos hecho ??
 282+ 9ADA              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9ADA
 284+ 9ADA 2A D0 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9ADD EB           	ex de,hl
 286+ 9ADE A7           	and a
 287+ 9ADF ED 52        	sbc hl,de
 288+ 9AE1 CB 3D        	srl l
 289+ 9AE3 3E 08        6 ld a,8
 290+ 9AE5 95           	sub l
 291+ 9AE6 30 1E        	jr nc,3F
 292+ 9AE8
 293+ 9AE8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9AE8              ; B="0".
 295+ 9AE8
 296+ 9AE8 04           4 inc b
 297+ 9AE9 3C           	inc a
 298+ 9AEA 20 FC        	jr nz,4B
 299+ 9AEC 78           	ld a,b
 300+ 9AED 08           	ex af,af
 301+ 9AEE 2A D0 8B     	ld hl,(Indice_Sprite_der)
 302+ 9AF1 23           5 inc hl
 303+ 9AF2 23           	inc hl
 304+ 9AF3 10 FC        	djnz 5B
 305+ 9AF5 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9AF8 CD 75 90     	call Extrae_address
 307+ 9AFB 22 CD 8B     	ld (Puntero_objeto),hl
 308+ 9AFE
 309+ 9AFE              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9AFE              ; _(Posicion_actual).
 311+ 9AFE
 312+ 9AFE 21 CB 8B     	ld hl,Posicion_actual
 313+ 9B01 34           	inc (hl)
 314+ 9B02 08               ex af,af
 315+ 9B03 6F           	ld l,a
 316+ 9B04 18 DD        	jr 6B
 317+ 9B06
 318+ 9B06              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B06
 320+ 9B06 47           3 ld b,a
 321+ 9B07 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B0A 23           2 inc hl
 323+ 9B0B 23           	inc hl
 324+ 9B0C 10 FC        	djnz 2B
 325+ 9B0E 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B11 C9           8 ret
 327+ 9B12
 328+ 9B12              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B12              ;
 330+ 9B12              ;	24/7/22
 331+ 9B12              ;
 332+ 9B12              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B12              ;
 334+ 9B12              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B12              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B12              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B12
 338+ 9B12 3A CF 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B15 A7           	and a
 340+ 9B16 20 1F        	jr nz,1F
 341+ 9B18 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B1A 32 CF 8B         ld (CTRL_DESPLZ),a
 343+ 9B1D
 344+ 9B1D 21 CA 8B     	ld hl,Columns
 345+ 9B20 34           	inc (hl)
 346+ 9B21 3A DA 8B     	ld a,(Cuad_objeto)
 347+ 9B24 E6 01        	and 1
 348+ 9B26 28 0F        	jr z,1F
 349+ 9B28 2A CB 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B2B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B2C 22 CB 8B     	ld (Posicion_actual),hl
 352+ 9B2F CD 94 94     	call Genera_coordenadas
 353+ 9B32 CD 97 9C     	call Inc_CTRL_DESPLZ
 354+ 9B35 18 03        	jr 2F
 355+ 9B37 CD 97 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B3A C9           2 ret
 357+ 9B3B
 358+ 9B3B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B3B              ;
 360+ 9B3B              ;	24/7/22
 361+ 9B3B              ;
 362+ 9B3B              ;	Ciclo_completo.
 363+ 9B3B              ;
 364+ 9B3B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B3B              ;
 366+ 9B3B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B3B              ; 	Decrementamos (Columns).
 368+ 9B3B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B3B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B3B
 371+ 9B3B
 372+ 9B3B 3A CF 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B3E FE FF        	cp $ff
 374+ 9B40 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B42 E6 F0        	and $f0
 376+ 9B44 20 28        	jr nz,3F
 377+ 9B46
 378+ 9B46              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B46
 380+ 9B46 3A CF 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B49 47           	ld b,a
 382+ 9B4A 3E F8        	ld a,$f8
 383+ 9B4C 80           	add b
 384+ 9B4D 32 CF 8B     	ld (CTRL_DESPLZ),a
 385+ 9B50 18 1C        	jr 3F
 386+ 9B52 21 CA 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B55 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B56 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B57 32 CF 8B     	ld (CTRL_DESPLZ),a
 390+ 9B5A 3A DA 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B5D E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9B5F 20 0A        	jr nz,2F
 393+ 9B61 2A CB 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9B64 23           	inc hl
 395+ 9B65 22 CB 8B     	ld (Posicion_actual),hl
 396+ 9B68 CD 94 94     	call Genera_coordenadas
 397+ 9B6B
 398+ 9B6B              ; Inicia el puntero de Sprite.
 399+ 9B6B
 400+ 9B6B CD 8A 90     2 call Inicia_puntero_objeto_der
 401+ 9B6E C9           3 ret
 402+ 9B6F
 403+ 9B6F              ; ******************************************************************************************************************************************************************************************
 404+ 9B6F              ;
 405+ 9B6F              ;	15/02/23
 406+ 9B6F              ;
 407+ 9B6F              ;	Mov_left.
 408+ 9B6F              ;
 409+ 9B6F              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9B6F              ;
 411+ 9B6F              Mov_left
 412+ 9B6F
 413+ 9B6F 21 C8 8B     	ld hl,Ctrl_0
 414+ 9B72 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9B74              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9B74              ; 																	; _ en el caso de que no lo haya.
 417+ 9B74 3A C8 8B     	ld a,(Ctrl_0)
 418+ 9B77 CB 77        	bit 6,a
 419+ 9B79 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9B7B
 421+ 9B7B CD 91 9C     	call Stop_Amadeus_left
 422+ 9B7E C8           	ret z
 423+ 9B7F 20 4A        	jr nz,8F
 424+ 9B81
 425+ 9B81 3A BC 8B     11 ld a,(Coordenada_X)
 426+ 9B84 A7           	and a
 427+ 9B85 20 44        	jr nz,8F
 428+ 9B87
 429+ 9B87 3A CF 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9B8A A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9B8B 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9B8D
 433+ 9B8D              ; ---------- ---------- ----------
 434+ 9B8D
 435+ 9B8D 3A E0 8B     	ld a,(Vel_left)
 436+ 9B90 FE 02        	cp 2
 437+ 9B92 28 0F        	jr z,1F
 438+ 9B94 38 04        	jr c,6F
 439+ 9B96 FE 04        	cp 4
 440+ 9B98 28 12        	jr z,7F
 441+ 9B9A
 442+ 9B9A              ; ---------- ---------- ----------
 443+ 9B9A
 444+ 9B9A 3A CF 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9B9D FE F8        	cp $f8
 446+ 9B9F 20 2A        	jr nz,8F
 447+ 9BA1 18 10        	jr 4F
 448+ 9BA3 3A CF 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BA6 FE F9        	cp $f9
 450+ 9BA8 20 21        	jr nz,8F
 451+ 9BAA 18 07        	jr 4F
 452+ 9BAC 3A CF 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BAF FE FB        	cp $fb
 454+ 9BB1 20 18        	jr nz,8F
 455+ 9BB3
 456+ 9BB3              ; ---------- ---------- ----------
 457+ 9BB3
 458+ 9BB3              4
 459+ 9BB3 CD B9 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BB6              ;	call Reinicio
 461+ 9BB6
 462+ 9BB6              ; ---------- ---------- ----------
 463+ 9BB6
 464+ 9BB6 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BB8 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BB9
 467+ 9BB9              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BB9              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BB9
 470+ 9BB9 CD D2 9B     	call DESPLZ_IZQ
 471+ 9BBC C1           	pop bc
 472+ 9BBD 10 F9        	djnz 5B
 473+ 9BBF 2A CB 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9BC2 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9BC3 22 CB 8B     	ld (Posicion_actual),hl
 476+ 9BC6 CD 94 94     	call Genera_coordenadas
 477+ 9BC9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9BCB
 479+ 9BCB              ; ---------- ---------- ----------
 480+ 9BCB
 481+ 9BCB              ; Movemos, no hay recolocación.
 482+ 9BCB
 483+ 9BCB 2A CB 8B     8 ld hl,(Posicion_actual)
 484+ 9BCE CD D2 9B     	call DESPLZ_IZQ
 485+ 9BD1 C9           2 ret
 486+ 9BD2
 487+ 9BD2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9BD2              ;
 489+ 9BD2              ;	22/9/22
 490+ 9BD2
 491+ 9BD2              DESPLZ_IZQ
 492+ 9BD2
 493+ 9BD2 CD E1 9B     	call Desplaza_izquierda
 494+ 9BD5 CD 2D 9C         call modifica_parametros_1er_DESPLZ
 495+ 9BD8 CD 55 9C     	call Ciclo_completo_2
 496+ 9BDB 21 C8 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9BDE CB BE        	res 7,(hl)
 498+ 9BE0 C9           	ret
 499+ 9BE1
 500+ 9BE1              Desplaza_izquierda
 501+ 9BE1
 502+ 9BE1 3A E0 8B     	ld a,(Vel_left)
 503+ 9BE4 47           	ld b,a
 504+ 9BE5 2A D6 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9BE8 23           1 inc hl
 506+ 9BE9 23           	inc hl
 507+ 9BEA 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9BEC 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9BEF CD 75 90     	call Extrae_address
 510+ 9BF2 22 CD 8B     	ld (Puntero_objeto),hl
 511+ 9BF5
 512+ 9BF5              ; Modifica (Puntero_DESPLZ_der).
 513+ 9BF5
 514+ 9BF5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9BF5              ; Cuántos movimientos hemos hecho ??
 516+ 9BF5              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9BF5
 518+ 9BF5 2A D2 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9BF8 EB           	ex de,hl
 520+ 9BF9 A7           	and a
 521+ 9BFA ED 52        	sbc hl,de
 522+ 9BFC CB 3D        	srl l
 523+ 9BFE 3E 08        6 ld a,8
 524+ 9C00 95           	sub l
 525+ 9C01 30 1E        	jr nc,3F
 526+ 9C03
 527+ 9C03              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C03              ; B="0".
 529+ 9C03
 530+ 9C03 04           4 inc b
 531+ 9C04 3C           	inc a
 532+ 9C05 20 FC        	jr nz,4B
 533+ 9C07 78           	ld a,b
 534+ 9C08 08           	ex af,af
 535+ 9C09 2A D2 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C0C 23           5 inc hl
 537+ 9C0D 23           	inc hl
 538+ 9C0E 10 FC        	djnz 5B
 539+ 9C10 22 D6 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C13 CD 75 90     	call Extrae_address
 541+ 9C16 22 CD 8B     	ld (Puntero_objeto),hl
 542+ 9C19
 543+ 9C19              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C19              ; _(Posicion_actual).
 545+ 9C19
 546+ 9C19 21 CB 8B     	ld hl,Posicion_actual
 547+ 9C1C 35           	dec (hl)
 548+ 9C1D 08           	ex af,af
 549+ 9C1E 6F           	ld l,a
 550+ 9C1F 18 DD        	jr 6B
 551+ 9C21
 552+ 9C21              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C21
 554+ 9C21 47           3 ld b,a
 555+ 9C22 2A D0 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C25 23           2 inc hl
 557+ 9C26 23           	inc hl
 558+ 9C27 10 FC        	djnz 2B
 559+ 9C29 22 D4 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C2C C9           8 ret
 561+ 9C2D
 562+ 9C2D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C2D              ;
 564+ 9C2D              ;	modifica_parametros_1er_DESPLZ
 565+ 9C2D              ;
 566+ 9C2D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C2D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C2D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C2D
 570+ 9C2D 3A CF 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C30 A7           	and a
 572+ 9C31 20 1E        	jr nz,1F
 573+ 9C33 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C34 32 CF 8B         ld (CTRL_DESPLZ),a
 575+ 9C37 21 CA 8B     	ld hl,Columns
 576+ 9C3A 34           	inc (hl)
 577+ 9C3B 3A DA 8B     	ld a,(Cuad_objeto)
 578+ 9C3E E6 01        	and 1
 579+ 9C40 20 0F        	jr nz,1F
 580+ 9C42 2A CB 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C45 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C46 22 CB 8B     	ld (Posicion_actual),hl
 583+ 9C49 CD 94 94     	call Genera_coordenadas
 584+ 9C4C CD A8 9C     	call Dec_CTRL_DESPLZ
 585+ 9C4F 18 03        	jr 2F
 586+ 9C51 CD A8 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C54 C9           2 ret
 588+ 9C55
 589+ 9C55              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C55
 591+ 9C55 3A CF 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C58 FE F7        	cp $f7
 593+ 9C5A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C5C 30 2C        	jr nc,3F
 595+ 9C5E
 596+ 9C5E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9C5E
 598+ 9C5E 06 00        	ld b,0
 599+ 9C60 04           4 inc b
 600+ 9C61 3C           	inc a
 601+ 9C62 FE F7        	cp $f7
 602+ 9C64 20 FA        	jr nz,4B
 603+ 9C66 3E FF        	ld a,$ff
 604+ 9C68 90           	sub b
 605+ 9C69 32 CF 8B     	ld (CTRL_DESPLZ),a
 606+ 9C6C 18 1C        	jr 3F
 607+ 9C6E
 608+ 9C6E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9C6E
 610+ 9C6E 21 CA 8B     1 ld hl,Columns
 611+ 9C71 35           	dec (hl)
 612+ 9C72 AF           	xor a
 613+ 9C73 32 CF 8B     	ld (CTRL_DESPLZ),a
 614+ 9C76 3A DA 8B     	ld a,(Cuad_objeto)
 615+ 9C79 E6 01        	and 1
 616+ 9C7B 28 0A        	jr z,2F
 617+ 9C7D 2A CB 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9C80 2B           	dec hl
 619+ 9C81 22 CB 8B     	ld (Posicion_actual),hl
 620+ 9C84 CD 94 94     	call Genera_coordenadas
 621+ 9C87
 622+ 9C87              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9C87
 624+ 9C87 CD 9D 90     2 call Inicia_puntero_objeto_izq
 625+ 9C8A C9           3 ret
 626+ 9C8B
 627+ 9C8B              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9C8B              ;
 629+ 9C8B              ;	19/10/22
 630+ 9C8B              ;
 631+ 9C8B              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9C8B              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9C8B
 634+ 9C8B 3A BC 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9C8E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9C90 C9           	ret
 637+ 9C91
 638+ 9C91              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9C91              ;
 640+ 9C91              ;	19/10/22
 641+ 9C91              ;
 642+ 9C91              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9C91              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9C91
 645+ 9C91 3A BC 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9C94 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9C96 C9           	ret
 648+ 9C97
 649+ 9C97              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9C97              ;
 651+ 9C97              ;	24/7/22
 652+ 9C97              ;
 653+ 9C97              ;	Inc_CTRL_DESPLZ
 654+ 9C97              ;
 655+ 9C97              ;
 656+ 9C97              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9C97
 658+ 9C97 21 CF 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9C9A 3A E1 8B     	ld a,(Vel_right)
 660+ 9C9D A7           	and a
 661+ 9C9E 28 06        	jr z,1F
 662+ 9CA0 47           	ld b,a
 663+ 9CA1 34           3 inc (hl)
 664+ 9CA2 10 FD        	djnz 3B
 665+ 9CA4 18 01        	jr 2F
 666+ 9CA6 34           1 inc (hl)
 667+ 9CA7 C9           2 ret
 668+ 9CA8
 669+ 9CA8              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CA8              ;
 671+ 9CA8              ;	5/2/23
 672+ 9CA8              ;
 673+ 9CA8              ;	Dec_CTRL_DESPLZ
 674+ 9CA8              ;
 675+ 9CA8              ;
 676+ 9CA8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CA8
 678+ 9CA8 21 CF 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CAB 3A E0 8B     	ld a,(Vel_left)
 680+ 9CAE A7           	and a
 681+ 9CAF 28 06        	jr z,1F
 682+ 9CB1 47           	ld b,a
 683+ 9CB2 35           3 dec (hl)
 684+ 9CB3 10 FD        	djnz 3B
 685+ 9CB5 18 01        	jr 2F
 686+ 9CB7 35           1 dec (hl)
 687+ 9CB8 C9           2 ret
 688+ 9CB9
 689+ 9CB9              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CB9
 691+ 9CB9 2A CB 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CBC 01 1F 00     	ld bc,31
 693+ 9CBF A7           	and a
 694+ 9CC0 ED 4A        	adc hl,bc
 695+ 9CC2 22 CB 8B     	ld (Posicion_actual),hl
 696+ 9CC5 21 C8 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9CC8 CB C6        	set 0,(hl)
 698+ 9CCA C9           	ret
 699+ 9CCB
 700+ 9CCB              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9CCB
 702+ 9CCB 2A CB 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9CCE 01 1F 00     	ld bc,31
 704+ 9CD1 A7           	and a
 705+ 9CD2 ED 42        	sbc hl,bc
 706+ 9CD4 22 CB 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9CD7 21 C8 8B     	ld hl,Ctrl_0
 708+ 9CDA CB CE        	set 1,(hl)
 709+ 9CDC C9           	ret
 710+ 9CDD
 711+ 9CDD              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9CDD
 713+ 9CDD 24           Reaparece_abajo inc h
 714+ 9CDE 01 E0 17     	ld bc,$17e0
 715+ 9CE1 A7           	and a
 716+ 9CE2 ED 4A        	adc hl,bc
 717+ 9CE4 22 CB 8B     	ld (Posicion_actual),hl
 718+ 9CE7 21 C8 8B     	ld hl,Ctrl_0
 719+ 9CEA CB D6        	set 2,(hl)
 720+ 9CEC C9           	ret
 721+ 9CED
 722+ 9CED              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9CED
 724+ 9CED 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9CF0 A7           	and a
 726+ 9CF1 ED 42        	sbc hl,bc
 727+ 9CF3 22 CB 8B     	ld (Posicion_actual),hl
 728+ 9CF6 21 C8 8B     	ld hl,Ctrl_0
 729+ 9CF9 CB DE        	set 3,(hl)
 730+ 9CFB C9           	ret
 731+ 9CFC
 732+ 9CFC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9CFC              ;
 734+ 9CFC              ;	15/07/23
 735+ 9CFC
 736+ 9CFC              Reinicio
 737+ 9CFC
 738+ 9CFC              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9CFC
 740+ 9CFC AF           	xor a
 741+ 9CFD 21 F0 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D00 CD 1E 9D     	call Limpia_contenido_hl
 743+ 9D03
 744+ 9D03 21 CB 8B     	ld hl,Posicion_actual
 745+ 9D06 CD 1E 9D     	call Limpia_contenido_hl
 746+ 9D09
 747+ 9D09 CD 76 92     	call Inicializa_Puntero_indice_mov
 748+ 9D0C CD 1D 9E     	call Inicia_Puntero_mov
 749+ 9D0F
 750+ 9D0F 21 F2 8B     	ld hl,Incrementa_puntero
 751+ 9D12 06 05        	ld b,5
 752+ 9D14 77           1 ld (hl),a
 753+ 9D15 23           	inc hl
 754+ 9D16 10 FC        	djnz 1B
 755+ 9D18
 756+ 9D18 21 C7 8B     	ld hl,Ctrl_2
 757+ 9D1B CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D1D
 759+ 9D1D C9           	ret
 760+ 9D1E
 761+ 9D1E 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D1F 23           	inc hl
 763+ 9D20 77           	ld (hl),a
 764+ 9D21 C9           	ret
 765+ 9D22
 766+ 9D22              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D22              ;
 768+ 9D22              ;	18/6/24
 769+ 9D22              ;
 770+ 9D22
 771+ 9D22              Amadeus_a_izquierda
 772+ 9D22
 773+ 9D22              ;	Actualiza contador de movimientos.
 774+ 9D22
 775+ 9D22 21 79 89     	ld hl,Comm_Amadeus
 776+ 9D25 35           	dec (hl)
 777+ 9D26 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D28
 779+ 9D28 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D2B 2B           	dec hl
 781+ 9D2C 2B           	dec hl
 782+ 9D2D 2B           	dec hl
 783+ 9D2E 2B           	dec hl
 784+ 9D2F 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D32
 786+ 9D32 21 2E 8C     	ld hl,Ctrl_3
 787+ 9D35 CB EE        	set 5,(hl)
 788+ 9D37
 789+ 9D37 C9           	ret
 790+ 9D38
 791+ 9D38 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D39 C9           	ret
 793+ 9D3A
 794+ 9D3A
 795+ 9D3A              Amadeus_a_derecha
 796+ 9D3A
 797+ 9D3A              ;	Actualiza contador de movimientos.
 798+ 9D3A
 799+ 9D3A 21 79 89     	ld hl,Comm_Amadeus
 800+ 9D3D 34           	inc (hl)
 801+ 9D3E 3E 7A        	ld a,$7a
 802+ 9D40 BE           	cp (hl)
 803+ 9D41 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D43
 805+ 9D43 2A 77 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D46 23           	inc hl
 807+ 9D47 23           	inc hl
 808+ 9D48 23           	inc hl
 809+ 9D49 23           	inc hl
 810+ 9D4A 22 77 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D4D
 812+ 9D4D 21 2E 8C     	ld hl,Ctrl_3
 813+ 9D50 CB EE        	set 5,(hl)
 814+ 9D52 C9           	ret
 815+ 9D53
 816+ 9D53 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D54 C9           	ret
# file closed: Direcciones.asm
2292  9D55              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D55              ; ----- ----- ----- ----- -----
   2+ 9D55              ;
   3+ 9D55              ;   28/12/23
   4+ 9D55
   5+ 9D55              Movimiento
   6+ 9D55
   7+ 9D55              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D55
   9+ 9D55 3A C7 8B         ld a,(Ctrl_2)
  10+ 9D58 CB 57            bit 2,a
  11+ 9D5A 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D5C
  13+ 9D5C 2A EE 8B         ld hl,(Puntero_mov)
  14+ 9D5F 7E               ld a,(hl)
  15+ 9D60
  16+ 9D60              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9D60
  18+ 9D60              Inicia_desplazamiento.
  19+ 9D60
  20+ 9D60              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9D60
  22+ 9D60 CD 53 9E         call Ajusta_velocidad_desplazamiento
  23+ 9D63
  24+ 9D63              ; Iniciamos (Repetimos_mov).
  25+ 9D63
  26+ 9D63 7E               ld a,(hl)
  27+ 9D64 E6 0F            and $0f
  28+ 9D66 32 F4 8B         ld (Repetimos_desplazamiento),a
  29+ 9D69 32 F5 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9D6C
  31+ 9D6C              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9D6C
  33+ 9D6C 23               inc hl
  34+ 9D6D 7E               ld a,(hl)
  35+ 9D6E 32 F7 8B         ld (Cola_de_desplazamiento),a
  36+ 9D71 2B               dec hl
  37+ 9D72
  38+ 9D72 21 C7 8B         ld hl,Ctrl_2
  39+ 9D75 CB D6            set 2,(hl)
  40+ 9D77
  41+ 9D77              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9D77              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9D77
  44+ 9D77              Desplazamiento_iniciado
  45+ 9D77
  46+ 9D77 CD 27 9E         call Aplica_desplazamiento
  47+ 9D7A
  48+ 9D7A              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9D7A
  50+ 9D7A 3A 2E 8C         ld a,(Ctrl_3)
  51+ 9D7D CB 4F            bit 1,a
  52+ 9D7F C0               ret nz
  53+ 9D80
  54+ 9D80 21 F4 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9D83 35               dec (hl)
  56+ 9D84 C0               ret nz
  57+ 9D85
  58+ 9D85              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9D85              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9D85              ; Analiza (Cola_de_desplazamiento).
  61+ 9D85
  62+ 9D85 3A F7 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9D88 A7               and a
  64+ 9D89 CC 7C 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9D8C 28 30            jr z,Reinicia_el_movimiento
  66+ 9D8E
  67+ 9D8E FE FF            cp $ff
  68+ 9D90 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9D92
  70+ 9D92 FE FE            cp $fe
  71+ 9D94 CC 01 9E         call z,Fijamos_bucle
  72+ 9D97 28 25            jr z,Reinicia_el_movimiento
  73+ 9D99
  74+ 9D99 FE FD            cp $fd
  75+ 9D9B 20 11            jr nz,1F
  76+ 9D9D
  77+ 9D9D              ; ---
  78+ 9D9D              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9D9D
  80+ 9D9D 3A C7 8B         ld a,(Ctrl_2)
  81+ 9DA0 CB 5F            bit 3,a
  82+ 9DA2 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DA4
  84+ 9DA4              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DA4
  86+ 9DA4 21 C7 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DA7 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DA9
  89+ 9DA9 CD 12 9E         call Inicia_Repetimos_movimiento
  90+ 9DAC 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DAE              ; ---
  92+ 9DAE
  93+ 9DAE FE 01        1 cp 1
  94+ 9DB0 CA EB 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DB3
  96+ 9DB3 3D               dec a
  97+ 9DB4 32 F7 8B         ld (Cola_de_desplazamiento),a
  98+ 9DB7
  99+ 9DB7 3A F5 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DBA 32 F4 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DBD              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DBD C9               ret
 103+ 9DBE
 104+ 9DBE              Reinicia_el_movimiento
 105+ 9DBE
 106+ 9DBE 3A C7 8B         ld a,(Ctrl_2)
 107+ 9DC1 CB 5F            bit 3,a
 108+ 9DC3 28 1B            jr z,2F
 109+ 9DC5
 110+ 9DC5              ; (Cola_de_desplazamiento)="254".
 111+ 9DC5
 112+ 9DC5 21 F6 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9DC8 35               dec (hl)
 114+ 9DC9 20 15            jr nz,2F
 115+ 9DCB
 116+ 9DCB              ; Fin de las repeticiones del último movimiento.
 117+ 9DCB
 118+ 9DCB 21 C7 8B         ld hl,Ctrl_2
 119+ 9DCE CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9DD0
 121+ 9DD0 2A EE 8B         ld hl,(Puntero_mov)
 122+ 9DD3 23               inc hl
 123+ 9DD4 23               inc hl
 124+ 9DD5 23               inc hl
 125+ 9DD6 22 EE 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9DD9              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9DD9 7E               ld a,(hl)
 128+ 9DDA 32 F7 8B         ld (Cola_de_desplazamiento),a
 129+ 9DDD
 130+ 9DDD C3 85 9D         jp Cola
 131+ 9DE0
 132+ 9DE0 CD 1D 9E     2 call Inicia_Puntero_mov
 133+ 9DE3
 134+ 9DE3 21 C7 8B         ld hl,Ctrl_2
 135+ 9DE6 CB 96            res 2,(hl)
 136+ 9DE8
 137+ 9DE8 C3 55 9D         jp Movimiento
 138+ 9DEB
 139+ 9DEB              Siguiente_desplazamiento
 140+ 9DEB
 141+ 9DEB              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9DEB              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9DEB
 144+ 9DEB 21 C7 8B         ld hl,Ctrl_2
 145+ 9DEE CB 96            res 2,(hl)
 146+ 9DF0
 147+ 9DF0 2A EE 8B         ld hl,(Puntero_mov)
 148+ 9DF3 23               inc hl
 149+ 9DF4 23               inc hl
 150+ 9DF5 22 EE 8B         ld (Puntero_mov),hl
 151+ 9DF8
 152+ 9DF8 7E               ld a,(hl)
 153+ 9DF9 A7               and a
 154+ 9DFA CC 7C 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9DFD CA BE 9D         jp z,Reinicia_el_movimiento
 156+ 9E00
 157+ 9E00 C9               ret
 158+ 9E01
 159+ 9E01              ; Subrutinas -----------------------------------------
 160+ 9E01              ; ---------- --------- --------- ---------- ----------
 161+ 9E01              ;
 162+ 9E01              ;   24/07/23
 163+ 9E01              ;
 164+ 9E01              ;   Fijamos_bucle
 165+ 9E01              ;
 166+ 9E01              ;
 167+ 9E01
 168+ 9E01              Fijamos_bucle
 169+ 9E01
 170+ 9E01 3A F2 8B         ld a,(Incrementa_puntero)
 171+ 9E04 3C               inc a
 172+ 9E05 32 F3 8B         ld (Incrementa_puntero_backup),a
 173+ 9E08
 174+ 9E08 CD 7C 9E         call Incrementa_Puntero_indice_mov
 175+ 9E0B 2A EC 8B         ld hl,(Puntero_indice_mov)
 176+ 9E0E 22 F0 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E11 C9               ret
 178+ 9E12
 179+ 9E12              ; ---------- --------- --------- ---------- ----------
 180+ 9E12              ;
 181+ 9E12              ;   07/7/23
 182+ 9E12              ;
 183+ 9E12              ;   Inicia_Repetimos_movimiento
 184+ 9E12              ;
 185+ 9E12              ;
 186+ 9E12
 187+ 9E12              Inicia_Repetimos_movimiento
 188+ 9E12
 189+ 9E12              ; Iniciamos (Repetimos_movimiento).
 190+ 9E12
 191+ 9E12 DD 2A EE 8B      ld ix,(Puntero_mov)
 192+ 9E16 DD 7E 02         ld a,(ix+2)
 193+ 9E19 32 F6 8B         ld (Repetimos_movimiento),a
 194+ 9E1C
 195+ 9E1C C9               ret
 196+ 9E1D
 197+ 9E1D              ; ---------- --------- --------- ---------- ----------
 198+ 9E1D              ;
 199+ 9E1D              ;   26/6/23
 200+ 9E1D              ;
 201+ 9E1D              ;   Inicia_Puntero_mov
 202+ 9E1D              ;
 203+ 9E1D              ;
 204+ 9E1D
 205+ 9E1D 2A EC 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E20 CD 75 90         call Extrae_address
 207+ 9E23 22 EE 8B         ld (Puntero_mov),hl
 208+ 9E26 C9               ret
 209+ 9E27
 210+ 9E27              ; ---------- --------- --------- ---------- ----------
 211+ 9E27              ;
 212+ 9E27              ;   27/06/23
 213+ 9E27              ;
 214+ 9E27              ;   Aplica_movimiento.
 215+ 9E27
 216+ 9E27              Aplica_desplazamiento
 217+ 9E27
 218+ 9E27              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E27
 220+ 9E27 2A EE 8B         ld hl, (Puntero_mov)
 221+ 9E2A
 222+ 9E2A 7E               ld a,(hl)
 223+ 9E2B E6 F0            and $f0
 224+ 9E2D C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E2E
 226+ 9E2E CB 7E            bit 7,(hl)
 227+ 9E30 28 03            jr z,1F
 228+ 9E32 CD 09 9A         call Mov_up
 229+ 9E35 2A EE 8B     1 ld hl, (Puntero_mov)
 230+ 9E38 CB 76            bit 6,(hl)
 231+ 9E3A 28 03            jr z,2F
 232+ 9E3C CD D0 99         call Mov_down
 233+ 9E3F
 234+ 9E3F              ; Se ha aplicado reinicio ???
 235+ 9E3F              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E3F
 237+ 9E3F              ;    ld a,(Ctrl_3)
 238+ 9E3F              ;    bit 1,a
 239+ 9E3F              ;    ret nz
 240+ 9E3F
 241+ 9E3F 2A EE 8B     2 ld hl, (Puntero_mov)
 242+ 9E42 CB 6E            bit 5,(hl)
 243+ 9E44 28 03            jr z,3F
 244+ 9E46 CD 6F 9B         call Mov_left
 245+ 9E49 2A EE 8B     3 ld hl, (Puntero_mov)
 246+ 9E4C CB 66            bit 4,(hl)
 247+ 9E4E C8               ret z
 248+ 9E4F CD 4C 9A         call Mov_right
 249+ 9E52 C9               ret
 250+ 9E53
 251+ 9E53              ; ---------- --------- --------- ---------- ----------
 252+ 9E53              ;
 253+ 9E53              ;   26/06/23
 254+ 9E53              ;
 255+ 9E53              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E53
 257+ 9E53              Ajusta_velocidad_desplazamiento
 258+ 9E53
 259+ 9E53              ; 1er byte de la cadena de movimiento.
 260+ 9E53              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E53
 262+ 9E53 CD 71 9E         call Extrae_nibble_alto
 263+ 9E56
 264+ 9E56 32 E2 8B         ld (Vel_up),a
 265+ 9E59 79               ld a,c
 266+ 9E5A E6 0F            and $0f
 267+ 9E5C 32 E3 8B         ld (Vel_down),a
 268+ 9E5F
 269+ 9E5F              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9E5F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9E5F
 272+ 9E5F 23               inc hl
 273+ 9E60 CD 71 9E         call Extrae_nibble_alto
 274+ 9E63
 275+ 9E63 32 E0 8B         ld (Vel_left),a
 276+ 9E66 79               ld a,c
 277+ 9E67 E6 0F            and $0f
 278+ 9E69 32 E1 8B         ld (Vel_right),a
 279+ 9E6C
 280+ 9E6C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9E6C
 282+ 9E6C 23               inc hl
 283+ 9E6D 22 EE 8B         ld (Puntero_mov),hl
 284+ 9E70 C9               ret
 285+ 9E71
 286+ 9E71 06 04        Extrae_nibble_alto ld b,4
 287+ 9E73 7E               ld a,(hl)
 288+ 9E74 4F               ld c,a
 289+ 9E75 E6 F0            and $f0
 290+ 9E77 CB 3F        1 srl a
 291+ 9E79 10 FC            djnz 1B
 292+ 9E7B C9               ret
 293+ 9E7C
 294+ 9E7C              ; ---------- --------- --------- ---------- ----------
 295+ 9E7C              ;
 296+ 9E7C              ;   5/7/23
 297+ 9E7C              ;
 298+ 9E7C              ;   Incrementa_Puntero_indice_mov
 299+ 9E7C
 300+ 9E7C              Incrementa_Puntero_indice_mov
 301+ 9E7C
 302+ 9E7C 21 F2 8B         ld hl,Incrementa_puntero
 303+ 9E7F 34               inc (hl)
 304+ 9E80
 305+ 9E80 2A EC 8B         ld hl,(Puntero_indice_mov)
 306+ 9E83 01 02 00         ld bc,2
 307+ 9E86 A7               and a
 308+ 9E87 09               add hl,bc
 309+ 9E88 22 EC 8B         ld (Puntero_indice_mov),hl
 310+ 9E8B
 311+ 9E8B 7E               ld a,(hl)
 312+ 9E8C A7               and a
 313+ 9E8D
 314+ 9E8D              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9E8D
 316+ 9E8D              ;    jr z,$
 317+ 9E8D
 318+ 9E8D              ;! Reinicia el Patrón de movimiento.
 319+ 9E8D
 320+ 9E8D CC 92 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9E90
 322+ 9E90 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9E91
 324+ 9E91 C9               ret
 325+ 9E92
 326+ 9E92              ; ---------- --------- --------- ---------- ----------
 327+ 9E92              ;
 328+ 9E92              ;   15/01/24
 329+ 9E92              ;
 330+ 9E92              ;   Inicializa_Puntero_indice_mov
 331+ 9E92
 332+ 9E92              Inicializa_Puntero_indice_mov_2
 333+ 9E92
 334+ 9E92              ; Existe etiqueta de bucle principal???
 335+ 9E92
 336+ 9E92 2A F0 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9E95 24               inc h
 338+ 9E96 25               dec h
 339+ 9E97 28 05            jr z,2F
 340+ 9E99
 341+ 9E99 22 EC 8B         ld (Puntero_indice_mov),hl
 342+ 9E9C 18 14            jr 3F
 343+ 9E9E
 344+ 9E9E              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9E9E
 346+ 9E9E 3A F2 8B     2 ld a,(Incrementa_puntero)
 347+ 9EA1 47               ld b,a
 348+ 9EA2
 349+ 9EA2 2A EC 8B         ld hl,(Puntero_indice_mov)
 350+ 9EA5 2B           1 dec hl
 351+ 9EA6 2B               dec hl
 352+ 9EA7 10 FC            djnz 1B
 353+ 9EA9 22 EC 8B         ld (Puntero_indice_mov),hl
 354+ 9EAC
 355+ 9EAC AF               xor a
 356+ 9EAD 32 F2 8B         ld (Incrementa_puntero),a
 357+ 9EB0 18 06            jr 4F
 358+ 9EB2
 359+ 9EB2 3A F3 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EB5 32 F2 8B         ld (Incrementa_puntero),a
 361+ 9EB8 C9           4 ret
 362+ 9EB9
 363+ 9EB9              ; ----------------------------------------------------------------------
 364+ 9EB9              ;
 365+ 9EB9              ;   30/01/24
 366+ 9EB9              ;
 367+ 9EB9              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EB9
 369+ 9EB9 3A BB 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EBC CD 11 94         call Calcula_salto_en_BC
 371+ 9EBF 21 E4 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9EC2 A7               and a
 373+ 9EC3 ED 4A            adc hl,bc
 374+ 9EC5 C9               ret
 375+ 9EC6
 376+ 9EC6              ; ----------------------------------------------------------------------
 377+ 9EC6              ;
 378+ 9EC6              ;   30/01/24
 379+ 9EC6              ;
 380+ 9EC6              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9EC6              ;
 382+ 9EC6              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9EC6
 384+ 9EC6 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9EC7 23               inc hl
 386+ 9EC8 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9EC9 69               ld l,c
 388+ 9ECA 60               ld h,b
 389+ 9ECB 22 C4 8B         ld (Contador_de_mov_masticados),hl
 390+ 9ECE C9               ret
 391+ 9ECF
# file closed: Movimiento.asm
2293  9ECF              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9ECF              ; --------------------------------------------------------------------------------------
   2+ 9ECF              ;
   3+ 9ECF              ;   28/08/24
   4+ 9ECF              ;
   5+ 9ECF
   6+ 9ECF              Compara_con_coordenadas_de_disparo
   7+ 9ECF
   8+ 9ECF              ;    di
   9+ 9ECF              ;    jr $
  10+ 9ECF              ;    ei
  11+ 9ECF
  12+ 9ECF 3A BD 8B         ld a,(Coordenada_y)
  13+ 9ED2 47               ld b,a
  14+ 9ED3 3A 38 8C         ld a,(Coordenadas_disparo_certero)
  15+ 9ED6
  16+ 9ED6 B8               cp b
  17+ 9ED7
  18+ 9ED7 F3               di
  19+ 9ED8 28 FE            jr z,$
  20+ 9EDA FB               ei
  21+ 9EDB
  22+ 9EDB C9               ret
  23+ 9EDC
  24+ 9EDC              ; --------------------------------------------------------------------------------------
  25+ 9EDC              ;
  26+ 9EDC              ;   26/08/24
  27+ 9EDC              ;
  28+ 9EDC
  29+ 9EDC              Limpia_album_de_borrado_disparos
  30+ 9EDC
  31+ 9EDC 21 30 8C         ld hl,Ctrl_5
  32+ 9EDF CB 46            bit 0,(hl)
  33+ 9EE1 C8               ret z
  34+ 9EE2 CB 86            res 0,(hl)
  35+ 9EE4
  36+ 9EE4 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
  37+ 9EE7 A7               and a
  38+ 9EE8 C0               ret nz
  39+ 9EE9
  40+ 9EE9              Limpiando
  41+ 9EE9
  42+ 9EE9 AF               xor a
  43+ 9EEA 2A 16 8C         ld hl,(Album_de_borrado_disparos)
  44+ 9EED 77               ld (hl),a
  45+ 9EEE 5D               ld e,l
  46+ 9EEF 54               ld d,h
  47+ 9EF0 1C               inc e                                           ; DE = HL+1
  48+ 9EF1 01 3A 00         ld bc,$003a
  49+ 9EF4 ED B0            ldir
  50+ 9EF6
  51+ 9EF6 C9               ret
  52+ 9EF7
  53+ 9EF7
  54+ 9EF7              ; --------------------------------------------------------------------------------------
  55+ 9EF7              ;
  56+ 9EF7              ;   26/08/24
  57+ 9EF7              ;
  58+ 9EF7
  59+ 9EF7              Calcula_bytes_pintado_disparos
  60+ 9EF7
  61+ 9EF7 2A 14 8C         ld hl,(Album_de_pintado_disparos)
  62+ 9EFA 45               ld b,l
  63+ 9EFB 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
  64+ 9EFE 7D               ld a,l
  65+ 9EFF
  66+ 9EFF 90               sub b
  67+ 9F00 32 1A 8C         ld (Num_de_bytes_album_de_disparos),a
  68+ 9F03
  69+ 9F03 C9               ret
  70+ 9F04
  71+ 9F04              ; --------------------------------------------------------------------------------------
  72+ 9F04              ;
  73+ 9F04              ;   23/08/24
  74+ 9F04              ;
  75+ 9F04              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
  76+ 9F04              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
  77+ 9F04              ;   _disparos que el álbum del FRAME actual).
  78+ 9F04
  79+ 9F04              Limpia_album_de_pintado_disparos
  80+ 9F04
  81+ 9F04              ;   Exclusiones.
  82+ 9F04
  83+ 9F04 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
  84+ 9F07 A7               and a
  85+ 9F08 C8               ret z
  86+ 9F09
  87+ 9F09              ; -----
  88+ 9F09
  89+ 9F09 A7               and a
  90+ 9F0A
  91+ 9F0A 3A 1A 8C         ld a,(Num_de_bytes_album_de_disparos)
  92+ 9F0D 47               ld b,a
  93+ 9F0E 3A 1B 8C         ld a,(Num_de_bytes_album_de_disparos_2)
  94+ 9F11
  95+ 9F11 90               sub b
  96+ 9F12
  97+ 9F12 C8               ret z
  98+ 9F13 D8               ret c
  99+ 9F14
 100+ 9F14 2A 18 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 101+ 9F17 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 102+ 9F18 AF               xor a                                                               ; "0".
 103+ 9F19
 104+ 9F19 77           1 ld (hl),a
 105+ 9F1A 2C               inc l
 106+ 9F1B 10 FC            djnz 1B
 107+ 9F1D
 108+ 9F1D C9               ret
 109+ 9F1E
 110+ 9F1E              ; --------------------------------------------------------------------------------------
 111+ 9F1E              ;
 112+ 9F1E              ;   27/08/24
 113+ 9F1E              ;
 114+ 9F1E
 115+ 9F1E              Mueve_Disparos
 116+ 9F1E
 117+ 9F1E              ;    Exclusiones:
 118+ 9F1E
 119+ 9F1E 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 120+ 9F21 A7               and a
 121+ 9F22 28 1A            jr z,2F                                                             ; Salimos si no hay ningún disparo generado.
 122+ 9F24
 123+ 9F24              ; .........................
 124+ 9F24
 125+ 9F24              ; Nos situamos en el (puntero_de_impresión) de la 1ª caja.
 126+ 9F24
 127+ 9F24 21 26 89         ld hl,Disparo_1A+3
 128+ 9F27
 129+ 9F27 34               inc (hl)
 130+ 9F28 35               dec (hl)
 131+ 9F29 28 06            jr z,1F
 132+ 9F2B
 133+ 9F2B              ; Esta caja contiene un disparo.
 134+ 9F2B
 135+ 9F2B CD 5A 9F         call Elimina_disparo_si_procede
 136+ 9F2E CC 67 9F         call z,Mueve_disparo_Amadeus
 137+ 9F31
 138+ 9F31 21 2B 89     1 ld hl,Disparo_2A+3
 139+ 9F34
 140+ 9F34 34               inc (hl)
 141+ 9F35 35               dec (hl)
 142+ 9F36 28 06            jr z,2F
 143+ 9F38
 144+ 9F38              ; Esta caja contiene un disparo.
 145+ 9F38
 146+ 9F38 CD 5A 9F         call Elimina_disparo_si_procede
 147+ 9F3B CC 67 9F         call z,Mueve_disparo_Amadeus
 148+ 9F3E
 149+ 9F3E              ; Disparos de entidades.
 150+ 9F3E
 151+ 9F3E 3A 1D 8C     2 ld a,(Numero_de_disparos_de_entidades)
 152+ 9F41 A7               and a
 153+ 9F42 C8               ret z
 154+ 9F43
 155+ 9F43 06 07            ld b,7                                                               ; Contador de disparos.
 156+ 9F45 21 2D 89         ld hl,Indice_de_disparos_entidades
 157+ 9F48
 158+ 9F48 CD 75 90     4 call Extrae_address
 159+ 9F4B 13               inc de
 160+ 9F4C 13               inc de
 161+ 9F4D ED 53 1F 8C      ld (Puntero_rancio_disparos_album),de
 162+ 9F51
 163+ 9F51 23               inc hl
 164+ 9F52
 165+ 9F52 34               inc (hl)                                                           ; Dispone de Puntero_objeto ???
 166+ 9F53 35               dec (hl)
 167+ 9F54 28 00            jr z,3F
 168+ 9F56
 169+ 9F56 EB           3 ex de,hl
 170+ 9F57 10 EF            djnz 4B
 171+ 9F59
 172+ 9F59 C9               ret
 173+ 9F5A
 174+ 9F5A              ; --------------------------------------------------------
 175+ 9F5A              ;
 176+ 9F5A              ;   28/8/24
 177+ 9F5A              ;
 178+ 9F5A              ;   Averigua si existe impacto en este disparo. Lo elimina si es así.
 179+ 9F5A              ;   Mueve el disparo si este no está impactado.
 180+ 9F5A
 181+ 9F5A
 182+ 9F5A              Elimina_disparo_si_procede
 183+ 9F5A
 184+ 9F5A              ;    ld a,(Impacto2)
 185+ 9F5A              ;    bit 3,a
 186+ 9F5A              ;    ret z                                       ; Salimos. No existe impacto.
 187+ 9F5A
 188+ 9F5A CD 61 9F         call  Averigua_Impacto
 189+ 9F5D C4 94 9F         call nz, Elimina_disparo                    ; HL apunta al .db (Puntero_de-impresion) del disparo.
 190+ 9F60
 191+ 9F60 C9               ret
 192+ 9F61
 193+ 9F61              ; ----------------------
 194+ 9F61              ;
 195+ 9F61              ;
 196+ 9F61
 197+ 9F61              Averigua_Impacto
 198+ 9F61
 199+ 9F61 23               inc hl
 200+ 9F62
 201+ 9F62 34               inc (hl)
 202+ 9F63 35               dec (hl)
 203+ 9F64
 204+ 9F64 2B               dec hl
 205+ 9F65 2B               dec hl
 206+ 9F66
 207+ 9F66 C9               ret
 208+ 9F67
 209+ 9F67              ; ----------------------
 210+ 9F67              ;
 211+ 9F67              ;
 212+ 9F67              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 213+ 9F67
 214+ 9F67              Mueve_disparo_Amadeus
 215+ 9F67
 216+ 9F67 CD 75 90         call Extrae_address
 217+ 9F6A
 218+ 9F6A CD 99 99         call PreviousScan
 219+ 9F6D CD 99 99         call PreviousScan
 220+ 9F70 CD 99 99         call PreviousScan
 221+ 9F73              ;    call PreviousScan
 222+ 9F73
 223+ 9F73              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 224+ 9F73
 225+ 9F73 7C               ld a,h
 226+ 9F74 D6 40            sub $40
 227+ 9F76 38 1C            jr c,Elimina_disparo
 228+ 9F78
 229+ 9F78               ; Introduce nuevo puntero_de_impresión en la caja.
 230+ 9F78
 231+ 9F78 EB               ex de,hl
 232+ 9F79
 233+ 9F79 73               ld (hl),e
 234+ 9F7A 23               inc hl
 235+ 9F7B 72               ld (hl),d
 236+ 9F7C
 237+ 9F7C              ; Hemos movido el disparo.
 238+ 9F7C              ; Cada vez que movemos un disparo debemos comprobar si existe Impacto en la nueva posición.
 239+ 9F7C
 240+ 9F7C E5               push hl
 241+ 9F7D
 242+ 9F7D 2B               dec hl
 243+ 9F7E 2B               dec hl
 244+ 9F7F 2B               dec hl
 245+ 9F80
 246+ 9F80 CD A1 A0         call Detecta_impacto_en_disparo_de_Amadeus01
 247+ 9F83
 248+ 9F83              ; El FLAG Z indica si existe (Impacto) tras el desplazamiento.
 249+ 9F83              ; (NZ) indica (Impacto).
 250+ 9F83
 251+ 9F83 E1               pop hl
 252+ 9F84 23               inc hl                                      ; .db (Impacto) del disparo
 253+ 9F85
 254+ 9F85 C8               ret z
 255+ 9F86
 256+ 9F86              ; (Impacto) a "1".
 257+ 9F86
 258+ 9F86 3E 01            ld a,1
 259+ 9F88 77               ld (hl),a
 260+ 9F89
 261+ 9F89 2B               dec hl
 262+ 9F8A 2B               dec hl
 263+ 9F8B
 264+ 9F8B CD 8A A0         call Genera_coordenadas_de_disparo_Amadeus
 265+ 9F8E
 266+ 9F8E 21 35 8C         ld hl,Impacto2                              ; Existe Impacto, lo indicamos con el FLAG correspondiente.
 267+ 9F91 CB DE            set 3,(hl)
 268+ 9F93
 269+ 9F93 C9               ret
 270+ 9F94
 271+ 9F94              ; ----------------------
 272+ 9F94              ;
 273+ 9F94              ;   23/08/24
 274+ 9F94
 275+ 9F94              Elimina_disparo
 276+ 9F94
 277+ 9F94              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 278+ 9F94              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 279+ 9F94
 280+ 9F94              ;   Disparo_1A defw 0									; Puntero objeto.
 281+ 9F94              ;   	defw 0											; Puntero de impresión.
 282+ 9F94              ;   	db 0											; Impacto.
 283+ 9F94
 284+ 9F94 2B               dec hl
 285+ 9F95 2B               dec hl
 286+ 9F96
 287+ 9F96 AF               xor a
 288+ 9F97 77               ld (hl),a
 289+ 9F98 23               inc hl
 290+ 9F99 77               ld (hl),a                                           ; Puntero_objeto borrado.
 291+ 9F9A 23               inc hl
 292+ 9F9B 77               ld (hl),a
 293+ 9F9C 23               inc hl
 294+ 9F9D 77               ld (hl),a                                           ; Puntero_de_impresion borrado.
 295+ 9F9E 23               inc hl
 296+ 9F9F 77               ld (hl),a                                           ; Impacto borrado.
 297+ 9FA0
 298+ 9FA0 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 299+ 9FA3 35               dec (hl)
 300+ 9FA4
 301+ 9FA4 3A 1E 8C         ld a,(Disparo_Amadeus)
 302+ 9FA7 F6 01            or 1
 303+ 9FA9 32 1E 8C         ld (Disparo_Amadeus),a
 304+ 9FAC
 305+ 9FAC 21 30 8C         ld hl,Ctrl_5
 306+ 9FAF CB C6            set 0,(hl)
 307+ 9FB1
 308+ 9FB1 AF               xor a
 309+ 9FB2 3C               inc a                                               ; Fuerza NZ a la salida.
 310+ 9FB3
 311+ 9FB3 C9               ret
 312+ 9FB4
 313+ 9FB4              ; --------------------------------------------------------------------------------------
 314+ 9FB4              ;
 315+ 9FB4              ;   21/8/24
 316+ 9FB4              ;
 317+ 9FB4
 318+ 9FB4              Pinta_disparos
 319+ 9FB4
 320+ 9FB4 ED 73 08 8C      ld (Stack),sp
 321+ 9FB8 06 02            ld b,2
 322+ 9FBA
 323+ 9FBA ED 7B 16 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 324+ 9FBE
 325+ 9FBE D1           2 pop de
 326+ 9FBF
 327+ 9FBF 14               inc d
 328+ 9FC0 15               dec d
 329+ 9FC1
 330+ 9FC1 28 1B            jr z,1F
 331+ 9FC3
 332+ 9FC3              Imprime_scanlines_de_disparo
 333+ 9FC3
 334+ 9FC3 E1               pop hl
 335+ 9FC4
 336+ 9FC4              ; Puntero objeto en DE.
 337+ 9FC4              ; Puntero_de_impresión en HL.
 338+ 9FC4
 339+ 9FC4              ; 1er scanline.
 340+ 9FC4
 341+ 9FC4 1A               ld a,(de)
 342+ 9FC5 AE               xor (hl)
 343+ 9FC6 77               ld (hl),a
 344+ 9FC7
 345+ 9FC7 13               inc de
 346+ 9FC8 2C               inc l
 347+ 9FC9
 348+ 9FC9 1A               ld a,(de)
 349+ 9FCA AE               xor (hl)
 350+ 9FCB 77               ld (hl),a
 351+ 9FCC
 352+ 9FCC              ; 2º scanline.
 353+ 9FCC
 354+ 9FCC E1               pop hl
 355+ 9FCD 1B               dec de
 356+ 9FCE
 357+ 9FCE 1A               ld a,(de)
 358+ 9FCF AE               xor (hl)
 359+ 9FD0 77               ld (hl),a
 360+ 9FD1
 361+ 9FD1 13               inc de
 362+ 9FD2 2C               inc l
 363+ 9FD3
 364+ 9FD3 1A               ld a,(de)
 365+ 9FD4 AE               xor (hl)
 366+ 9FD5 77               ld (hl),a
 367+ 9FD6
 368+ 9FD6              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 369+ 9FD6
 370+ 9FD6 18 E6            jr 2B
 371+ 9FD8
 372+ 9FD8 ED 7B 14 8C  3 ld sp,(Album_de_pintado_disparos)
 373+ 9FDC 18 E0            jr 2B
 374+ 9FDE
 375+ 9FDE 10 F8        1 djnz 3B
 376+ 9FE0 ED 7B 08 8C      ld sp,(Stack)
 377+ 9FE4 C9               ret
 378+ 9FE5
 379+ 9FE5              ; --------------------------------------------------------------------------------------
 380+ 9FE5              ;
 381+ 9FE5              ;   21/8/24
 382+ 9FE5              ;
 383+ 9FE5              ;   Modifica: HL y DE.
 384+ 9FE5
 385+ 9FE5
 386+ 9FE5              Genera_datos_de_impresion_disparos_Amadeus
 387+ 9FE5
 388+ 9FE5              ;   Exclusiones:
 389+ 9FE5
 390+ 9FE5 3A 1C 8C         ld a,(Numero_de_disparos_de_Amadeus)
 391+ 9FE8 A7               and a
 392+ 9FE9 C8               ret z                                                     ; Salimos si no hay ningún disparo generado.
 393+ 9FEA
 394+ 9FEA              ; -----
 395+ 9FEA
 396+ 9FEA ED 73 08 8C      ld (Stack),sp
 397+ 9FEE 31 23 89         ld sp,Disparo_1A                                          ; SP se sitúa en el .db (Puntero objeto) de la 1ª caja de disparos de Amadeus.
 398+ 9FF1
 399+ 9FF1 21 2D 89     1 ld hl,Indice_de_disparos_entidades                          ; Compararemos SP con HL para saber cual es la última caja que examinar.
 400+ 9FF4 ED 72            sbc hl,sp                                                 ; Última caja ???
 401+ 9FF6 28 26            jr z,Salida
 402+ 9FF8
 403+ 9FF8 D1               pop de                                                    ; Puntero_objeto del disparo en DE.
 404+ 9FF9
 405+ 9FF9 14               inc d
 406+ 9FFA 15               dec d
 407+ 9FFB
 408+ 9FFB 20 04            jr nz,Genera_scanlines_de_disparo_Amadeus
 409+ 9FFD
 410+ 9FFD              Siguiente_disparo_Amadeus
 411+ 9FFD
 412+ 9FFD D1               pop de
 413+ 9FFE 33               inc sp
 414+ 9FFF 18 F0            jr 1B
 415+ A001
 416+ A001              Genera_scanlines_de_disparo_Amadeus
 417+ A001
 418+ A001 E1               pop hl                                                    ; Puntero_objeto del disparo en DE.
 419+ A002              ;                                                             ; Puntero_de_impresión del disparo en HL.
 420+ A002 33               inc sp
 421+ A003 ED 73 1F 8C      ld (Puntero_rancio_disparos_album),sp                     ; Guardamos la dirección de la siguiente caja de disparos que tenemos que comprobar.
 422+ A007
 423+ A007 ED 7B 18 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 424+ A00B
 425+ A00B C1               pop bc
 426+ A00C C1               pop bc
 427+ A00D C1               pop bc
 428+ A00E
 429+ A00E ED 73 18 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ; Nuevo nivel del album de disparos.
 430+ A012
 431+ A012 E5               push hl                                                   ; Sube 2º scanline al álbum.
 432+ A013 CD 99 99         call PreviousScan
 433+ A016 E5               push hl                                                   ; Sube 1er scanline al álbum.
 434+ A017 D5               push de                                                   ; Sube Puntero_objeto del disparo al álbum.
 435+ A018
 436+ A018 ED 7B 1F 8C      ld sp,(Puntero_rancio_disparos_album)
 437+ A01C 18 D3            jr 1B
 438+ A01E
 439+ A01E
 440+ A01E              Salida
 441+ A01E
 442+ A01E ED 7B 08 8C      ld sp,(Stack)
 443+ A022 C9               ret
 444+ A023
 445+ A023              ; --------------------------------------------------------------------------------------
 446+ A023              ;
 447+ A023              ;   17/08/24
 448+ A023              ;
 449+ A023
 450+ A023              Genera_disparo_Amadeus
 451+ A023
 452+ A023              ;   Exclusiones.
 453+ A023
 454+ A023 3A 1E 8C         ld a,(Disparo_Amadeus)
 455+ A026 A7               and a
 456+ A027 C8               ret z                                                    ; Salimos si el disparo de nuestra nave no está habilitado.
 457+ A028
 458+ A028              ;! Provisionalmente sólo 1 disparo !!!!!!
 459+ A028 3D               dec a
 460+ A029 32 1E 8C         ld (Disparo_Amadeus),a
 461+ A02C
 462+ A02C              ;   Inc nº de disparos de Amadeus.
 463+ A02C
 464+ A02C 21 1C 8C         ld hl,Numero_de_disparos_de_Amadeus
 465+ A02F 34               inc (hl)
 466+ A030
 467+ A030              ; ----- ----- ----- -----
 468+ A030
 469+ A030              Define_puntero_objeto_disparo
 470+ A030
 471+ A030              ;   Inicializamos contador.
 472+ A030
 473+ A030 06 00            ld b,0
 474+ A032
 475+ A032 2A 75 89         ld hl,(p.imp.amadeus)
 476+ A035 2C               inc l
 477+ A036
 478+ A036 3E 80            ld a,$80
 479+ A038 BE               cp (hl)
 480+ A039 28 0D            jr z,1F
 481+ A03B
 482+ A03B 04               inc b
 483+ A03C
 484+ A03C 3E 60            ld a,$60
 485+ A03E BE               cp (hl)
 486+ A03F 28 07            jr z,1F
 487+ A041
 488+ A041
 489+ A041 04               inc b
 490+ A042
 491+ A042 3E 18            ld a,$18
 492+ A044 BE               cp (hl)
 493+ A045 28 01            jr z,1F
 494+ A047
 495+ A047 04               inc b
 496+ A048
 497+ A048              ;   Calcula el Puntero_de_impresión del disparo.
 498+ A048
 499+ A048              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 500+ A048
 501+ A048 CD 99 99     1 call PreviousScan
 502+ A04B
 503+ A04B 78               ld a,b
 504+ A04C CB 3F            srl a
 505+ A04E 28 03            jr z,4F
 506+ A050
 507+ A050              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 508+ A050 E5               push hl
 509+ A051 18 02            jr 5F
 510+ A053 2D           4 dec l
 511+ A054 E5               push hl
 512+ A055              ; ---
 513+ A055
 514+ A055              ;   Calcula el Puntero_objeto del disparo.
 515+ A055
 516+ A055 21 70 83     5 ld hl,Indice_disparo
 517+ A058 04               inc b
 518+ A059 05               dec b
 519+ A05A 28 04            jr z,2F
 520+ A05C
 521+ A05C              ;   Nos desplazamos por el índice de disparos.
 522+ A05C
 523+ A05C 2C           3 inc l
 524+ A05D 2C               inc l
 525+ A05E 10 FC            djnz 3B
 526+ A060
 527+ A060              ; --- Guarda el Puntero_objeto del disparo en la pila.
 528+ A060 CD 75 90     2 call Extrae_address
 529+ A063 E5               push hl
 530+ A064              ; ---
 531+ A064
 532+ A064              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 533+ A064              ; HL en el 1er .db de la caja y (Puntero_DESPLZ_DISPARO_AMADEUS) avanza una posición en el índice.
 534+ A064
 535+ A064 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 536+ A067 CD 75 90         call Extrae_address
 537+ A06A
 538+ A06A 06 02            ld b,2
 539+ A06C
 540+ A06C D1           6 pop de
 541+ A06D 73               ld (hl),e
 542+ A06E 23               inc hl
 543+ A06F 72               ld (hl),d
 544+ A070 23               inc hl
 545+ A071
 546+ A071 10 F9            djnz 6B
 547+ A073
 548+ A073              Detecta_impacto_en_disparo_de_Amadeus
 549+ A073
 550+ A073 2A 33 8C         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 551+ A076 CD 75 90         call Extrae_address
 552+ A079
 553+ A079 13               inc de
 554+ A07A 13               inc de
 555+ A07B D5               push de
 556+ A07C
 557+ A07C CD A1 A0         call Detecta_impacto_en_disparo_de_Amadeus01
 558+ A07F
 559+ A07F E1               pop hl
 560+ A080 CD 75 90         call Extrae_address
 561+ A083 2B               dec hl                                               ;  Sitúa el puntero en el .db (Impacto) de la caja del disparo.
 562+ A084
 563+ A084 C8               ret z
 564+ A085
 565+ A085 3E 01            ld a,1
 566+ A087 77               ld (hl),a
 567+ A088
 568+ A088 2B               dec hl
 569+ A089 2B               dec hl                                               ;  Sitúa en (Puntero_de_impresion) para generar coordenadas del disparo.
 570+ A08A
 571+ A08A              Genera_coordenadas_de_disparo_Amadeus
 572+ A08A
 573+ A08A              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 574+ A08A              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 575+ A08A
 576+ A08A              ;    push hl
 577+ A08A
 578+ A08A              ;   Exclusiones:
 579+ A08A
 580+ A08A
 581+ A08A
 582+ A08A
 583+ A08A CD 75 90         call Extrae_address
 584+ A08D CD 94 94         call Genera_coordenadas
 585+ A090
 586+ A090 3D               dec a
 587+ A091
 588+ A091 21 38 8C         ld hl,Coordenadas_disparo_certero
 589+ A094 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 590+ A095 23               inc hl
 591+ A096 3A BC 8B         ld a,(Coordenada_X)
 592+ A099 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 593+ A09A
 594+ A09A 21 35 8C         ld hl,Impacto2
 595+ A09D CB DE            set 3,(hl)                                          ;   Indica que un disparo de nuestra nave ha alcanzado a una entidad.
 596+ A09F
 597+ A09F AF               xor a                                               ;   Siempre "Z" cuando ejecutamos [Genera_disparo_Amadeus].
 598+ A0A0 C9               ret
 599+ A0A1
 600+ A0A1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 601+ A0A1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 602+ A0A1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 603+ A0A1
 604+ A0A1              ; ----------------------------------------------
 605+ A0A1              ;
 606+ A0A1              ;   27/08/24
 607+ A0A1              ;
 608+ A0A1              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 609+ A0A1
 610+ A0A1              ;    ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 611+ A0A1              ;    call Extrae_address
 612+ A0A1
 613+ A0A1              Detecta_impacto_en_disparo_de_Amadeus01
 614+ A0A1
 615+ A0A1              Extraccion_de_datos
 616+ A0A1
 617+ A0A1 5E               ld e,(hl)
 618+ A0A2 23               inc hl
 619+ A0A3 56               ld d,(hl)
 620+ A0A4 23               inc hl                                                 ;    Puntero_objeto del disparo en DE.
 621+ A0A5
 622+ A0A5 4E               ld c,(hl)
 623+ A0A6 23               inc hl
 624+ A0A7 46               ld b,(hl)
 625+ A0A8 23               inc hl                                                 ;    Puntero_de_impresión del disparo en BC.
 626+ A0A9
 627+ A0A9 C5               push bc
 628+ A0AA E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 629+ A0AB
 630+ A0AB              Detecta_impacto_
 631+ A0AB
 632+ A0AB 1A               ld a,(de)
 633+ A0AC A6               and (hl)
 634+ A0AD C0               ret nz
 635+ A0AE
 636+ A0AE 13               inc de
 637+ A0AF 23               inc hl
 638+ A0B0
 639+ A0B0 1A               ld a,(de)
 640+ A0B1 A6               and (hl)
 641+ A0B2 C9               ret
 642+ A0B3
 643+ A0B3              ; -------------------------------------------------------------------------------------------------------------
 644+ A0B3              ;
 645+ A0B3              ;   8/8/24
 646+ A0B3              ;
 647+ A0B3              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 648+ A0B3              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 649+ A0B3              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 650+ A0B3              ;
 651+ A0B3              ;   MODIFICA: HL,DE,BC y A.
 652+ A0B3              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 653+ A0B3              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 654+ A0B3
 655+ A0B3              Colision_Entidad_Amadeus
 656+ A0B3
 657+ A0B3              ; Posible contacto de entidad con Amadeus. ?????
 658+ A0B3
 659+ A0B3              ; Exclusiones:
 660+ A0B3
 661+ A0B3 3A 53 8C         ld a,(Shield)
 662+ A0B6 A7               and a
 663+ A0B7 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 664+ A0B8
 665+ A0B8 21 2E 8C         ld hl,Ctrl_3
 666+ A0BB CB 76            bit 6,(hl)
 667+ A0BD C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 668+ A0BE
 669+ A0BE 21 35 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 670+ A0C1 CB 56            bit 2,(hl)
 671+ A0C3 C0               ret nz
 672+ A0C4
 673+ A0C4 3A BD 8B     	ld a,(Coordenada_y)
 674+ A0C7 FE 14        	cp $14
 675+ A0C9 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 676+ A0CA
 677+ A0CA 3A 74 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 678+ A0CD A7               and a
 679+ A0CE C0               ret nz
 680+ A0CF
 681+ A0CF              Genera_coordenadas_X
 682+ A0CF
 683+ A0CF              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 684+ A0CF              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 685+ A0CF
 686+ A0CF              ;   Limpiamos almacenes.
 687+ A0CF
 688+ A0CF              ;    call Limpia_Coordenadas_X
 689+ A0CF
 690+ A0CF              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 691+ A0CF
 692+ A0CF 21 3A 8C         ld hl,Coordenadas_X_Entidad
 693+ A0D2 3A BC 8B         ld a,(Coordenada_X)
 694+ A0D5 CD F7 A0         call Guarda_coordenadas_X
 695+ A0D8
 696+ A0D8              ;   Almacenamos las coordenadas X de Amadeus.
 697+ A0D8
 698+ A0D8 3A 71 89         ld a,(CX_Amadeus)
 699+ A0DB CD F7 A0         call Guarda_coordenadas_X
 700+ A0DE CD 0B A1         call Compara_coordenadas_X
 701+ A0E1 C0               ret nz
 702+ A0E2
 703+ A0E2 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 704+ A0E4 32 BF 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 705+ A0E7
 706+ A0E7 2A FB 8B         ld hl,(Puntero_store_caja)
 707+ A0EA 2C               inc l
 708+ A0EB 2C               inc l
 709+ A0EC 2C               inc l
 710+ A0ED 2C               inc l
 711+ A0EE 22 36 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 712+ A0F1
 713+ A0F1 21 35 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 714+ A0F4 CB D6            set 2,(hl)
 715+ A0F6
 716+ A0F6 C9               ret
 717+ A0F7
 718+ A0F7               ; ----- ----- ----- ----- -----
 719+ A0F7
 720+ A0F7 77           Guarda_coordenadas_X ld (hl),a
 721+ A0F8 3C               inc a
 722+ A0F9 2C               inc l
 723+ A0FA 77               ld (hl),a
 724+ A0FB 3C               inc a
 725+ A0FC 2C               inc l
 726+ A0FD 77               ld (hl),a
 727+ A0FE 2C               inc l
 728+ A0FF C9               ret
 729+ A100
 730+ A100 AF           Limpia_Coordenadas_X xor a
 731+ A101 06 06            ld b,6
 732+ A103 21 3D 8C         ld hl,Coordenadas_X_Amadeus
 733+ A106 77           1 ld (hl),a
 734+ A107 23               inc hl
 735+ A108 10 FC            djnz 1B
 736+ A10A C9               ret
 737+ A10B
 738+ A10B              ; ----- ----- ----- ----- -----
 739+ A10B
 740+ A10B              Compara_coordenadas_X
 741+ A10B
 742+ A10B DD 21 3A 8C      ld ix,Coordenadas_X_Entidad
 743+ A10F DD 7E 00         ld a,(ix+0)
 744+ A112 CD 20 A1         call Comparando
 745+ A115 C8               ret z
 746+ A116
 747+ A116 3C               inc a
 748+ A117 CD 2F A1         call Comparando_1
 749+ A11A C8               ret z
 750+ A11B
 751+ A11B 3C               inc a
 752+ A11C CD 2F A1         call Comparando_1
 753+ A11F C9               ret
 754+ A120
 755+ A120              ; ----- ----- ----- ----- -----
 756+ A120              ;
 757+ A120              ;   4/12/23
 758+ A120              ;
 759+ A120              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 760+ A120
 761+ A120              Comparando
 762+ A120
 763+ A120 DD 2C            inc ixl
 764+ A122 DD 2C            inc ixl
 765+ A124 DD 2C            inc ixl
 766+ A126
 767+ A126 DD 46 00         ld b,(ix+0)
 768+ A129 DD 4E 01         ld c,(ix+1)
 769+ A12C DD 56 02         ld d,(ix+2)
 770+ A12F
 771+ A12F B8           Comparando_1 cp b
 772+ A130 C8               ret z
 773+ A131 B9               cp c
 774+ A132 C8               ret z
 775+ A133 BA               cp d
 776+ A134 C9               ret
 777+ A135
 778+ A135              ; -----------------------------------------------------------------------
 779+ A135              ;
 780+ A135              ;   04/7/24
 781+ A135              ;
 782+ A135
 783+ A135              Detecta_colision_nave_entidad
 784+ A135
 785+ A135              ; Exclusiones:
 786+ A135
 787+ A135              ; Salimos de la rutina si no hay advertencia de posible colisión.
 788+ A135
 789+ A135 21 35 8C     	ld hl,Impacto2
 790+ A138 CB 56        	bit 2,(hl)
 791+ A13A C8           	ret z
 792+ A13B
 793+ A13B              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 794+ A13B
 795+ A13B 2A 77 89         ld hl,(Pamm_Amadeus)
 796+ A13E CD 75 90         call Extrae_address
 797+ A141 54               ld d,h
 798+ A142 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 799+ A143
 800+ A143 2A 75 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 801+ A146 06 10            ld b,16                                        ; Contador de scanlines en B.
 802+ A148 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 803+ A14B
 804+ A14B C5           1 push bc
 805+ A14C 06 03            ld b,3
 806+ A14E E5               push hl
 807+ A14F
 808+ A14F              ; .db
 809+ A14F
 810+ A14F 1A           3 ld a,(de)
 811+ A150 A7               and a
 812+ A151 20 03            jr nz,4F
 813+ A153
 814+ A153 2C               inc l
 815+ A154 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 816+ A156
 817+ A156 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 818+ A158 28 04            jr z,2F
 819+ A15A
 820+ A15A              ; Impacto.
 821+ A15A FD 2D            dec iyl
 822+ A15C 28 22            jr z,5F
 823+ A15E
 824+ A15E 1C           2 inc e
 825+ A15F 10 EE            djnz 3B
 826+ A161
 827+ A161 E1               pop hl
 828+ A162
 829+ A162              ; Hay salto de línea en el puntero de impresión ???
 830+ A162
 831+ A162 7C               ld a,h
 832+ A163 D6 57            sub $57
 833+ A165 20 0A            jr nz,6F
 834+ A167
 835+ A167              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 836+ A167
 837+ A167 2A 75 89         ld hl,(p.imp.amadeus)
 838+ A16A 3E 20            ld a,$20
 839+ A16C A7               and a
 840+ A16D 85               add l
 841+ A16E 6F               ld l,a
 842+ A16F 18 01            jr 7F
 843+ A171
 844+ A171 24           6 inc h
 845+ A172
 846+ A172 C1           7 pop bc
 847+ A173 10 D6            djnz 1B
 848+ A175
 849+ A175              ;   Fin de la comparativa.
 850+ A175
 851+ A175              ;   NO HAY COLISIÓN !!!!!.
 852+ A175              ;
 853+ A175              ;   .db (Impacto) de Amadeus a "0".
 854+ A175              ;   RES el bit2 de (Impacto2).
 855+ A175              ;
 856+ A175              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 857+ A175              ;   Lo colocamos a "0".
 858+ A175
 859+ A175 21 35 8C         ld hl,Impacto2
 860+ A178 CB 96            res 2,(hl)
 861+ A17A 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)
 862+ A17D 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 863+ A17F C9               ret
 864+ A180
 865+ A180              ;   COLISIÓN !!!!!.
 866+ A180              ;
 867+ A180              ;   .db (Impacto) de Amadeus a "1".
 868+ A180              ;   SET el bit3 de (Impacto2).
 869+ A180              ;
 870+ A180              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 871+ A180
 872+ A180 E1           5 pop hl
 873+ A181 C1               pop bc
 874+ A182
 875+ A182 21 74 89         ld hl,Impacto_Amadeus
 876+ A185 36 01            ld (hl),1
 877+ A187 21 35 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 878+ A18A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 879+ A18C
 880+ A18C 11 C0 87         ld de,Indice_Explosion_entidades
 881+ A18F 2A 36 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 882+ A192
 883+ A192 23               inc hl
 884+ A193 23               inc hl
 885+ A194 23               inc hl
 886+ A195
 887+ A195 73               ld (hl),e
 888+ A196 23               inc hl
 889+ A197 72               ld (hl),d
 890+ A198
 891+ A198              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 892+ A198
 893+ A198 11 60 88         ld de,Indice_Explosion_Amadeus
 894+ A19B 21 77 89         ld hl,Pamm_Amadeus
 895+ A19E
 896+ A19E 73               ld (hl),e
 897+ A19F 23               inc hl
 898+ A1A0 72               ld (hl),d
 899+ A1A1
 900+ A1A1 C9               ret
 901+ A1A2
 902+ A1A2
 903+ A1A2
# file closed: Disparo.asm
2294  A1A2
2295  A1A2              	SAVESNA "Pruebas.sna", START
2296  A1A2
2297  A1A2
2298  A1A2
2299  A1A2
# file closed: Banco_de_pruebas.asm
