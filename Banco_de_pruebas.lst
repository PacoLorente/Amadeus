# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 4C 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 88 96 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 78 96 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 7E 47        Posicion_inicio defw $477e								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 02           Vel_left db 2 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 04           Vel_down db 4 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 86 96        Puntero_indice_mov defw Indice_mov_Escaloncitos_izquierda_abajo  ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad.
 167  85D7
 168  85D7              ; Gestión de ENTIDADES.
 169  85D7
 170  85D7 00 00        Puntero_store_entidades defw 0
 171  85D9 00 00        Puntero_restore_entidades defw 0
 172  85DB 00 00        Indice_restore defw 0
 173  85DD 02           Numero_de_entidades db 2								; Nº de objetos en pantalla, (contando con Amadeus).
 174  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 175  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 176  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 177  85DF              ;														; _ (Numero_de_malotes)="0".
 178  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 179  85E1              ;														; _variable para almacenar lo posición del puntero_
 180  85E1              ; 														; _de pila, SP.
 181  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 182  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 183  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 184  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 185  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 186  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 187  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 188  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 189  85E7
 190  85E7              ; Gestión de Disparos.
 191  85E7
 192  85E7 00           Numero_de_disparotes db 0
 193  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 194  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 195  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 196  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 197  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 198  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 199  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 200  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 201  85EF              ;														; _produzca colisión.
 202  85EF 00 00        Coordenadas_disparo_certero defw 0						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 203  85F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 204  85F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 205  85F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 206  85F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 207  85F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 208  85F7
 209  85F7
 210  85F7              ; Gestión de FRAMES.
 211  85F7
 212  85F7 00           Switch db 0
 213  85F8
 214  85F8              ; Variables de Raster y localización en pantalla.
 215  85F8
 216  85F8 00 FF        Temp_Raster defw $ff00
 217  85FA
 218  85FA              ; Rutina principal *************************************************************************************************************************************************************************
 219  85FA              ;
 220  85FA              ;	14/11/22
 221  85FA
 222  85FA 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 223  85FD
 224  85FD 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 225  85FF ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 226  8601 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 227  8603 F3           	DI
 228  8604
 229  8604 3E 07        	ld a,%00000111
 230  8606 CD 9C 92     	call Cls
 231  8609
 232  8609              ;	call Pinta_FILAS
 233  8609
 234  8609 CD 86 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 235  860C
 236  860C 21 DD 85     	ld hl,Numero_de_entidades
 237  860F 46           	ld b,(hl)
 238  8610 04           	inc b
 239  8611 05           	dec b
 240  8612 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
 241  8614
 242  8614              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
 243  8614              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 244  8614              ;	Pintamos el resto de entidades:
 245  8614
 246  8614 CD 6D 87     	call Inicia_punteros_de_entidades
 247  8617
 248  8617              ;	INICIA ENTIDADES!!!!!
 249  8617
 250  8617 C5           1 push bc  												; Guardo el contador de entidades.
 251  8618 CD C7 87      	call Inicia_Puntero_objeto
 252  861B CD EC 8C     	call Draw
 253  861E CD A0 7F     	call Guarda_foto_registros
 254  8621 CD 0F 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 255  8624 C1           	pop bc
 256  8625 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 257  8627
 258  8627              ; 	INICIA AMADEUS!!!!!
 259  8627
 260  8627 CD 62 88     3 call Restore_Amadeus
 261  862A CD C7 87     	call Inicia_Puntero_objeto
 262  862D CD EC 8C     	call Draw
 263  8630 CD A0 7F     	call Guarda_foto_registros
 264  8633 CD 74 88     	call Store_Amadeus
 265  8636
 266  8636              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
 267  8636
 268  8636 CD 83 87     	call Inicia_Puntero_Disparo_Entidades
 269  8639 CD 8A 87     	call Inicia_Puntero_Disparo_Amadeus
 270  863C
 271  863C              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
 272  863C
 273  863C CD 6D 87     	call Inicia_punteros_de_entidades
 274  863F CD 50 88     	call Restore_Primera_entidad
 275  8642
 276  8642 3A DD 85     	ld a,(Numero_de_entidades)
 277  8645 3C           	inc a
 278  8646 32 DE 85     	ld (Numero_de_malotes),a
 279  8649
 280  8649 FB           2 ei
 281  864A 18 FD        	jr 2B
 282  864C
 283  864C              ; -----------------------------------------------------------------------------------
 284  864C
 285  864C              Frame
 286  864C
 287  864C              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 288  864C              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 289  864C
 290  864C 3E 02            ld a,2
 291  864E D3 FE            out ($fe),a
 292  8650 CD F0 8F     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 293  8653 CD 29 90     	call Extrae_foto_disparos
 294  8656 3E 01            ld a,1
 295  8658 D3 FE            out ($fe),a
 296  865A
 297  865A              ; ----------------------------------------------------------------------
 298  865A
 299  865A              ;	Existe colisión?????
 300  865A
 301  865A CD B5 8C     	call Selector_de_impactos
 302  865D
 303  865D              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 304  865D              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 305  865D              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 306  865D
 307  865D AF           	xor a
 308  865E 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 309  8661
 310  8661 CD 6D 87     	call Inicia_punteros_de_entidades
 311  8664 CD 50 88     	call Restore_Primera_entidad
 312  8667
 313  8667 AF           	xor a
 314  8668 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 315  866B
 316  866B CD 37 8B     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 317  866E 21 00 70     	ld hl,Album_de_fotos
 318  8671 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 319  8674              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 320  8674 3A DD 85         ld a,(Numero_de_entidades)
 321  8677 47               ld b,a
 322  8678 A7           	and a
 323  8679 28 2D        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 324  867B
 325  867B              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 326  867B
 327  867B 3A D6 85     2 ld a,(Ctrl_1)
 328  867E CB 57        	bit 2,a
 329  8680 20 FE        	jr nz,$	; tengo que comparar las coordenadas de esta entidad con (Coordenadas_disparo_certero).
 330  8682
 331  8682 3A B4 85     	ld a,(Impacto)
 332  8685 A7           	and a
 333  8686 20 FE        	jr nz,$
 334  8688
 335  8688              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 336  8688
 337  8688 C5           	push bc
 338  8689 CD D8 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 339  868C
 340  868C 3A C9 85     	ld a,(Ctrl_0)
 341  868F CB 67        	bit 4,a
 342  8691 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 343  8693
 344  8693              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 345  8693              ; Las entidades sólo generan disparo cuando se mueven.
 346  8693              ; 16/02/23.
 347  8693              ; [[[
 348  8693 CD BD 88     	call Detecta_disparo_entidad
 349  8696              ; ]]]
 350  8696 CD 34 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 351  8699
 352  8699 21 C9 85     1 ld hl,Ctrl_0
 353  869C CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 354  869E AF           	xor a
 355  869F 32 CA 85     	ld (Obj_dibujado),a
 356  86A2
 357  86A2 CD 0F 88     6 call Store_Restore_entidades
 358  86A5 C1           	pop bc
 359  86A6 10 D3        	djnz 2B
 360  86A8
 361  86A8              ; Tras la gestión de las entidades, ... AMADEUS.
 362  86A8
 363  86A8 CD 62 88     4 call Restore_Amadeus
 364  86AB
 365  86AB              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 366  86AB
 367  86AB 3A B4 85     	ld a,(Impacto)
 368  86AE A7           	and a
 369  86AF 20 FE        	jr nz,$
 370  86B1
 371  86B1              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 372  86B1
 373  86B1 CD 05 87     	call Mov_Amadeus
 374  86B4
 375  86B4 3A C9 85     	ld a,(Ctrl_0)
 376  86B7 CB 67        	bit 4,a
 377  86B9 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 378  86BB
 379  86BB CD 34 87     	call Guarda_foto_entidad_a_pintar
 380  86BE
 381  86BE 21 C9 85     3 ld hl,Ctrl_0
 382  86C1 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 383  86C3 AF           	xor a
 384  86C4 32 CA 85     	ld (Obj_dibujado),a
 385  86C7
 386  86C7 CD 74 88     	call Store_Amadeus
 387  86CA
 388  86CA CD 55 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 389  86CD
 390  86CD              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 391  86CD
 392  86CD CD 91 87     	call Calcula_numero_de_malotes
 393  86D0 CD A9 87     	call Calcula_numero_de_disparotes
 394  86D3
 395  86D3 3E 04        	ld a,4
 396  86D5 D3 FE        	out ($fe),a
 397  86D7 C9           	ret
 398  86D8
 399  86D8              ; --------------------------------------------------------------------------------------------------------------
 400  86D8              ;
 401  86D8              ;	27/03/23
 402  86D8
 403  86D8              Mov_obj
 404  86D8
 405  86D8              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 406  86D8
 407  86D8 AF           	xor a
 408  86D9 32 CA 85     	ld (Obj_dibujado),a
 409  86DC CD 3E 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 410  86DF              ;														; Obj_dibujado="0".
 411  86DF              ; Movemos Entidades malignas.
 412  86DF
 413  86DF 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 414  86E2 24           	inc h                                               ; Salimos de la rutina.
 415  86E3 25           	dec h
 416  86E4 C8           	ret z
 417  86E5
 418  86E5 CD 8A 96     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 419  86E8
 420  86E8 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 421  86EB CB 67        	bit 4,a
 422  86ED C8           	ret z
 423  86EE
 424  86EE              ; Ha habido desplazamiento de la entidad maligna.
 425  86EE              ; Ha llegado a zona de AMADEUS ???
 426  86EE
 427  86EE 3A A2 85     	ld a,(Coordenada_y)
 428  86F1 FE 14        	cp $14
 429  86F3 D4 86 8A     	call nc, Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 430  86F6              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 431  86F6
 432  86F6              ; ---------
 433  86F6
 434  86F6 3E 01        1 ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 435  86F8 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 436  86FB CD 3E 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 437  86FE CD 55 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 438  8701 CD 24 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 439  8704 C9           	ret													; _de la misma.
 440  8705
 441  8705              ; --------------------------------------------------------------------------------------------------------------
 442  8705              ;
 443  8705              ;	29/1/23
 444  8705
 445  8705              Mov_Amadeus
 446  8705
 447  8705 AF           	xor a
 448  8706 32 CA 85     	ld (Obj_dibujado),a
 449  8709 CD 3E 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 450  870C              ;														; Obj_dibujado="0".
 451  870C              ; Movemos Amadeus.
 452  870C
 453  870C CD 9A 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 454  870F 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 455  8712 CB 67        	bit 4,a
 456  8714 C8           	ret z
 457  8715
 458  8715              ; ---------
 459  8715
 460  8715 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 461  8717 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 462  871A CD 3E 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 463  871D CD 55 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 464  8720 CD 24 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 465  8723 C9           	ret													; _de la nave.
 466  8724
 467  8724              ; --------------------------------------------------------------------------------------------------------------
 468  8724              ;
 469  8724              ;	31/01/23
 470  8724              ;
 471  8724              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 472  8724
 473  8724              Guarda_foto_entidad_a_borrar
 474  8724
 475  8724 CD C6 8F     	call Prepara_draw
 476  8727 CD 00 8F     	call calcula_CColumnass
 477  872A CD 37 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 478  872D CD 8C 8F     	call Define_rutina_de_impresion
 479  8730 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 480  8733 C9           	ret
 481  8734
 482  8734              ; --------------------------------------------------------------------------------------------------------------
 483  8734              ;
 484  8734              ;	31/01/23
 485  8734              ;
 486  8734              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 487  8734              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 488  8734
 489  8734              Guarda_foto_entidad_a_pintar
 490  8734
 491  8734 CD 61 87     	call Repone_pintar
 492  8737 CD EC 8C     	call Draw
 493  873A CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 494  873D C9           	ret
 495  873E
 496  873E              ; --------------------------------------------------------------------------------------------------------------
 497  873E              ;
 498  873E              ;
 499  873E
 500  873E 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 501  8741 3A CA 85     	ld a,(Obj_dibujado)
 502  8744 A7           	and a
 503  8745 28 05        	jr z,1F
 504  8747 11 BF 85     	ld de,Variables_de_pintado
 505  874A 18 03        	jr 2F
 506  874C 11 B5 85     1 ld de,Variables_de_borrado
 507  874F 01 08 00     2 ld bc,8
 508  8752 ED B0        	ldir
 509  8754 C9           	ret
 510  8755
 511  8755              ; --------------------------------------------------------------------------------------------------------------
 512  8755
 513  8755 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 514  8758 11 9B 85     	ld de,Filas
 515  875B 01 08 00     	ld bc,8
 516  875E ED B0        	ldir
 517  8760 C9           	ret
 518  8761
 519  8761 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 520  8764 11 9B 85     	ld de,Filas
 521  8767 01 08 00     	ld bc,8
 522  876A ED B0        	ldir
 523  876C C9           	ret
 524  876D
 525  876D              ; *************************************************************************************************************************************************************
 526  876D              ;
 527  876D              ; 8/1/23
 528  876D              ;
 529  876D              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 530  876D              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 531  876D              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 532  876D
 533  876D              ; Destruye HL y DE !!!!!
 534  876D
 535  876D              Inicia_punteros_de_entidades
 536  876D
 537  876D 21 68 84     	ld hl,Indice_de_entidades
 538  8770 CD C1 87         call Extrae_address
 539  8773 22 D7 85         ld (Puntero_store_entidades),hl
 540  8776 21 6A 84     	ld hl,Indice_de_entidades+2
 541  8779 22 DB 85     	ld (Indice_restore),hl
 542  877C CD C1 87     	call Extrae_address
 543  877F 22 D9 85     	ld (Puntero_restore_entidades),hl
 544  8782 C9               ret
 545  8783
 546  8783              ; *************************************************************************************************************************************************************
 547  8783              ;
 548  8783              ; 8/1/23
 549  8783              ;
 550  8783              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 551  8783
 552  8783 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 553  8786 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 554  8789 C9           	ret
 555  878A 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 556  878D 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 557  8790 C9           	ret
 558  8791
 559  8791              ; -------------------------------------------------------------------------------------------------------------
 560  8791              ;
 561  8791              ; 28/2/23
 562  8791              ;
 563  8791
 564  8791              Calcula_numero_de_malotes
 565  8791
 566  8791 21 00 70     	ld hl,Album_de_fotos
 567  8794 EB           	ex de,hl
 568  8795 2A E3 85     	ld hl,(Stack_snapshot)
 569  8798
 570  8798 06 00        	ld b,0
 571  879A 7D           	ld a,l
 572  879B 93           	sub e
 573  879C 28 07        	jr z,1F
 574  879E
 575  879E              ; Nº de malotes no es "0".
 576  879E
 577  879E D6 06        2 sub 6
 578  87A0 04           	inc b
 579  87A1 A7           	and a
 580  87A2 20 FA        	jr nz,2B
 581  87A4 78           	ld a,b
 582  87A5
 583  87A5 32 DE 85     1 ld (Numero_de_malotes),a
 584  87A8 C9           	ret
 585  87A9
 586  87A9              ; -------------------------------------------------------------------------------------------------------------
 587  87A9              ;
 588  87A9              ; 28/2/23
 589  87A9              ;
 590  87A9
 591  87A9              Calcula_numero_de_disparotes
 592  87A9
 593  87A9 21 60 70     	ld hl,Album_de_fotos_disparos
 594  87AC EB           	ex de,hl
 595  87AD 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 596  87B0
 597  87B0 06 00        	ld b,0
 598  87B2 7D           	ld a,l
 599  87B3 93           	sub e
 600  87B4 28 07        	jr z,1F
 601  87B6
 602  87B6              ; Nº de malotes no es "0".
 603  87B6
 604  87B6 D6 06        2 sub 6
 605  87B8 04           	inc b
 606  87B9 A7           	and a
 607  87BA 20 FA        	jr nz,2B
 608  87BC 78           	ld a,b
 609  87BD
 610  87BD 32 E7 85     1 ld (Numero_de_disparotes),a
 611  87C0 C9           	ret
 612  87C1              ; *************************************************************************************************************************************************************
 613  87C1              ;
 614  87C1              ; 20/10/22
 615  87C1              ;
 616  87C1              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 617  87C1              ;
 618  87C1              ; Destruye el puntero y DE !!!!!
 619  87C1
 620  87C1 5E           Extrae_address ld e,(hl)
 621  87C2 23           	inc hl
 622  87C3 56           	ld d,(hl)
 623  87C4 2B           	dec hl
 624  87C5 EB           	ex de,hl
 625  87C6 C9           	ret
 626  87C7
 627  87C7              ; *************************************************************************************************************************************************************
 628  87C7              ;
 629  87C7              ;	7/2/23
 630  87C7              ;
 631  87C7              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 632  87C7              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 633  87C7              ;
 634  87C7              ;   Destruye HL y BC !!!!!,
 635  87C7              ;
 636  87C7              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 637  87C7              ;					"0" ..... Izquierda.
 638  87C7
 639  87C7              Inicia_Puntero_objeto
 640  87C7
 641  87C7 3A AF 85     	ld a,(Cuad_objeto)
 642  87CA E6 01        	and 1
 643  87CC F5           	push af
 644  87CD CC EB 87     	call z,Inicia_puntero_objeto_izq
 645  87D0 F1           	pop af
 646  87D1 28 2B        	jr z,1F
 647  87D3 CD D8 87     	call Inicia_puntero_objeto_der
 648  87D6 18 26        	jr 1F
 649  87D8
 650  87D8              ; Arrancamos desde la parte izquierda de la pantalla.
 651  87D8              ; Iniciamos (Indice_Sprite_der).
 652  87D8
 653  87D8 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 654  87DB 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 655  87DE CD C1 87     	call Extrae_address
 656  87E1 22 9F 85     	ld (Puntero_objeto),hl
 657  87E4
 658  87E4 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 659  87E7              ;	call Extrae_address
 660  87E7 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 661  87EA C9           	ret
 662  87EB
 663  87EB              ; Arrancamos desde la parte derecha de la pantalla.
 664  87EB              ; Iniciamos (Indice_Sprite_izq).
 665  87EB
 666  87EB 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 667  87EE 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 668  87F1 CD C1 87     	call Extrae_address
 669  87F4 22 9F 85     	ld (Puntero_objeto),hl
 670  87F7
 671  87F7 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 672  87FA              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
 673  87FA 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 674  87FD C9           	ret
 675  87FE
 676  87FE              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 677  87FE
 678  87FE 21 38 83     1 ld hl,Amadeus
 679  8801 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 680  8805 B7 ED 42     	sub hl,bc
 681  8808 C0           	ret nz
 682  8809 21 C9 85     	ld hl,Ctrl_0
 683  880C CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 684  880E C9           	ret 												; _de nuestra nave en los extremos.
 685  880F
 686  880F              ; *************************************************************************************************************************************************************
 687  880F              ;
 688  880F              ;	8/1/23
 689  880F              ;
 690  880F              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 691  880F              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 692  880F
 693  880F              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 694  880F              ;	_de la 2ª y 3ª entidad respectivamente.
 695  880F
 696  880F              Store_Restore_entidades
 697  880F
 698  880F E5           	push hl
 699  8810 D5           	push de
 700  8811 C5            	push bc
 701  8812
 702  8812              ;	STORE !!!!!
 703  8812              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 704  8812
 705  8812 21 9B 85     	ld hl,Filas
 706  8815 ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 707  8819 01 3B 00     	ld bc,59
 708  881C ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 709  881E
 710  881E              ; 	Entidad_sospechosa. 20/4/23
 711  881E
 712  881E 3A B4 85     	ld a,(Impacto)
 713  8821 A7           	and a
 714  8822 28 0C        	jr z,1F
 715  8824
 716  8824 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 717  8827 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 718  882A A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 719  882B ED 4A        	adc hl,bc 											; _ "0" más adelante.
 720  882D 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 721  8830
 722  8830              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 723  8830
 724  8830 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 725  8833 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 726  8836 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 727  8839 01 3B 00     	ld bc,59
 728  883C ED B0        	ldir
 729  883E
 730  883E              ;	Incrementa RESTORE !!!!!
 731  883E
 732  883E 2A DB 85         ld hl,(Indice_restore)
 733  8841 23           	inc hl
 734  8842 23           	inc hl
 735  8843 22 DB 85     	ld (Indice_restore),hl
 736  8846 CD C1 87         call Extrae_address
 737  8849 22 D9 85         ld (Puntero_restore_entidades),hl
 738  884C C1           	pop bc
 739  884D D1           	pop de
 740  884E E1           	pop hl
 741  884F C9           	ret
 742  8850
 743  8850              ; **************************************************************************************************
 744  8850              ;
 745  8850              ;	29/10/22
 746  8850              ;
 747  8850              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 748  8850
 749  8850 E5           Restore_Primera_entidad push hl
 750  8851 D5           	push de
 751  8852 C5            	push bc
 752  8853 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 753  8856 11 9B 85     	ld de,Filas
 754  8859 01 3B 00     	ld bc,59
 755  885C ED B0        	ldir
 756  885E C1           	pop bc
 757  885F D1           	pop de
 758  8860 E1           	pop hl
 759  8861 C9           	ret
 760  8862
 761  8862              ; **************************************************************************************************
 762  8862              ;
 763  8862              ;	25/01/23
 764  8862              ;
 765  8862              ;	Restore_Amadeus
 766  8862              ;
 767  8862              ;	Cargamos en DRAW los parámetros de Amadeus.
 768  8862              ;
 769  8862
 770  8862 E5           Restore_Amadeus	push hl
 771  8863 D5           	push de
 772  8864 C5            	push bc
 773  8865 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 774  8868 11 9B 85     	ld de,Filas
 775  886B 01 3B 00     	ld bc,59
 776  886E ED B0        	ldir
 777  8870 C1           	pop bc
 778  8871 D1           	pop de
 779  8872 E1           	pop hl
 780  8873 C9           	ret
 781  8874
 782  8874              ; *************************************************************************************************************************************************************
 783  8874              ;
 784  8874              ;	29/01/23
 785  8874              ;
 786  8874              ;	Store_Amadeus
 787  8874              ;
 788  8874              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 789  8874              ;
 790  8874
 791  8874 E5           Store_Amadeus push hl
 792  8875 D5           	push de
 793  8876 C5            	push bc
 794  8877 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 795  887A 11 74 84     	ld de,Amadeus_db
 796  887D 01 3B 00     	ld bc,59
 797  8880 ED B0        	ldir
 798  8882 C1           	pop bc
 799  8883 D1           	pop de
 800  8884 E1           	pop hl
 801  8885 C9           	ret
 802  8886
 803  8886              ; **************************************************************************************************
 804  8886
 805  8886              ; Teclado.
 806  8886
 807  8886 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 808  8888 DB FE        	in a,($fe)
 809  888A E6 01        	and $01
 810  888C 28 02        	jr z,1f
 811  888E 18 F6        	jr Pulsa_ENTER
 812  8890 C9           1 ret
 813  8891
 814  8891              ; **************************************************************************************************
 815  8891              ;
 816  8891              ; Temporización.
 817  8891
 818  8891              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 819  8891              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 820  8891              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 821  8891              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 822  8891
 823  8891              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 824  8891              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 825  8891              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 826  8891
 827  8891              ; A partir de $4f61 no hace falta DELAY.
 828  8891
 829  8891              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 830  8891
 831  8891 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 832  8894 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 833  8895 78           	LD A,B
 834  8896 A7           	AND A
 835  8897 20 FB        	JR NZ,wait
 836  8899 C9           	RET
 837  889A
 838  889A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 839  889A              ;
 840  889A              ;	5/3/23
 841  889A              ;
 842  889A              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 843  889A
 844  889A              Movimiento_Amadeus
 845  889A
 846  889A              ; Disparo.
 847  889A
 848  889A 3E F7        	ld a,$f7												; "5" para disparar.
 849  889C DB FE        	in a,($fe)
 850  889E E6 10        	and $10
 851  88A0 CC FA 88     	call z,Genera_disparo
 852  88A3
 853  88A3 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 854  88A5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 855  88A7 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 856  88A9 CC 2A 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 857  88AC 3E F7        	ld a,$f7
 858  88AE DB FE        	in a,($fe)
 859  88B0 E6 01        	and $01
 860  88B2 C8           	ret z
 861  88B3
 862  88B3 3E F7        	ld a,$f7
 863  88B5 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 864  88B7 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 865  88B9 CC 0C 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 866  88BC C9           	ret
 867  88BD
 868  88BD              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 869  88BD              ;
 870  88BD              ;	Rutina provisional para que los malotes cagen balas.
 871  88BD
 872  88BD 3E 7F        Detecta_disparo_entidad ld a,$7f
 873  88BF DB FE        	in a,($fe)
 874  88C1 E6 01        	and 1
 875  88C3 C0           	ret nz
 876  88C4 CD FA 88     	call Genera_disparo
 877  88C7 C9           	ret
 878  88C8
 879  88C8              ; Pinta indicadores de FILAS. ------------------------------------------------------
 880  88C8
 881  88C8 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 882  88CB
 883  88CB              ; ----------
 884  88CB 06 20        	ld b,32
 885  88CD E5           2 push hl
 886  88CE C5           	push bc
 887  88CF              ; ----------
 888  88CF
 889  88CF 06 BF        	ld b,$bf
 890  88D1 36 80        1 ld (hl),%10000000
 891  88D3 CD D2 8F     	call NextScan
 892  88D6 10 F9        	djnz 1B
 893  88D8
 894  88D8              ; ----------
 895  88D8 C1           	pop bc
 896  88D9 E1           	pop hl
 897  88DA 2C           	inc l
 898  88DB 10 F0        	djnz 2B
 899  88DD              ; ----------
 900  88DD
 901  88DD 06 03        	ld b,3
 902  88DF 21 00 47         ld hl,$4700
 903  88E2 CD E8 88     3 call Bucle_1
 904  88E5 10 FB            djnz 3B
 905  88E7 C9               ret
 906  88E8
 907  88E8 C5           Bucle_1 push bc
 908  88E9 E5                   push hl
 909  88EA D1                   pop de
 910  88EB 13                   inc de
 911  88EC 01 FF 00             ld bc,255
 912  88EF 36 FF                ld (hl),255
 913  88F1 ED B0                ldir
 914  88F3 23                   inc hl
 915  88F4 3E 07                ld a,7
 916  88F6 84                   add a,h
 917  88F7 67                   ld h,a
 918  88F8 C1                   pop bc
 919  88F9 C9                   ret
 920  88FA
 921  88FA              ; ---------------------------------------------------------------
 922  88FA
 923  88FA              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 88FA              ; ******************************************************************************************************************************************************************************************
   2+ 88FA              ;
   3+ 88FA              ;   17/04/23
   4+ 88FA              ;
   5+ 88FA              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 88FA              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 88FA              ;
   8+ 88FA              ;
   9+ 88FA              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 88FA              ;
  11+ 88FA              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 88FA              ;               _ hacen las entidades hacia abajo.
  13+ 88FA              ;
  14+ 88FA              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 88FA              ;
  16+ 88FA              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 88FA              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 88FA              ;
  19+ 88FA              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 88FA              ;           _ la bala.
  21+ 88FA              ;
  22+ 88FA              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 88FA              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 88FA              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 88FA              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 88FA              ;           _ en el momento de generarse la bala)).
  27+ 88FA
  28+ 88FA              Genera_disparo
  29+ 88FA
  30+ 88FA              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 88FA              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 88FA              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 88FA              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 88FA              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 88FA              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 88FA              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 88FA
  38+ 88FA              ; Exclusiones:
  39+ 88FA
  40+ 88FA 3A D2 85         ld a,(Columnas)
  41+ 88FD 47               ld b,a
  42+ 88FE 3A 9C 85         ld a,(Columns)
  43+ 8901 B8               cp b
  44+ 8902 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8903
  46+ 8903              ; ----- ----- -----
  47+ 8903
  48+ 8903 3A C9 85         ld a,(Ctrl_0)
  49+ 8906 CB 77            bit 6,a
  50+ 8908 20 08            jr nz,16F
  51+ 890A
  52+ 890A 3A A2 85         ld a,(Coordenada_y)
  53+ 890D FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 890F D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8910 18 11            jr 14F
  56+ 8912
  57+ 8912              ; ----- ----- -----
  58+ 8912
  59+ 8912              ; Habilita el segundo disparo si el primero ha superado la línea $4860
  60+ 8912
  61+ 8912 21 F2 83     16 ld hl,ON_Disparo_2A
  62+ 8915 CD C1 87         call Extrae_address
  63+ 8918 24               inc h
  64+ 8919 25               dec h
  65+ 891A 28 07            jr z,14F                            ; No hay almacenado ningún disparo de Amadeus. Seguimos con la rutina.
  66+ 891C
  67+ 891C 11 20 48         ld de,$4820                         ; Si el 1er disparo no ha llegado a este scanline de pantalla,_
  68+ 891F A7               and a                               ; _ salimos de la rutina, (no se autorizará un 2º disparo de Amadeus).
  69+ 8920 ED 52            sbc hl,de
  70+ 8922 D0               ret nc
  71+ 8923
  72+ 8923              ; ----- ----- -----
  73+ 8923
  74+ 8923 21 00 80     14 ld hl,Indice_disparo
  75+ 8926 3A A3 85         ld a,(CTRL_DESPLZ)
  76+ 8929 4F               ld c,a
  77+ 892A 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  78+ 892C              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  79+ 892C              ;                                            ""        ""       "f9", B="1"
  80+ 892C              ;                                            ""        ""       "fb", B="2"
  81+ 892C              ;                                            ""        ""       "fb", B="3"
  82+ 892C A7               and a
  83+ 892D 28 10            jr z,1F
  84+ 892F E6 01            and 1
  85+ 8931 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  86+ 8932
  87+ 8932 79               ld a,c
  88+ 8933 16 F9            ld d,$f9
  89+ 8935 23           2 inc hl
  90+ 8936 23               inc hl
  91+ 8937 04               inc b
  92+ 8938 BA               cp d
  93+ 8939 28 04            jr z,1F
  94+ 893B 14               inc d
  95+ 893C 14               inc d
  96+ 893D 18 F6            jr 2B
  97+ 893F
  98+ 893F CD C1 87     1 call Extrae_address
  99+ 8942 E5               push hl
 100+ 8943 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 101+ 8945 DD 21 65 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 102+ 8949
 103+ 8949              ;	Se cumplen las condiciones necesarias para generar un disparo.
 104+ 8949              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 105+ 8949
 106+ 8949 3A AF 85     	ld a,(Cuad_objeto)
 107+ 894C FE 02            cp 2
 108+ 894E 38 66            jr c,3F
 109+ 8950 28 64            jr z,3F
 110+ 8952
 111+ 8952              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 112+ 8952
 113+ 8952 E6 01            and 1
 114+ 8954 28 30            jr z,4F
 115+ 8956
 116+ 8956              ; 	Estamos en el 3er cuadrante de pantalla.
 117+ 8956              ; 	3er CUAD. ----- ----- ----- ----- -----
 118+ 8956              ;
 119+ 8956              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 120+ 8956              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 121+ 8956              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 122+ 8956
 123+ 8956 2A 9D 85     	ld hl,(Posicion_actual)
 124+ 8959
 125+ 8959              ;   Amadeus o entidad ???.
 126+ 8959
 127+ 8959 3A C9 85         ld a,(Ctrl_0)
 128+ 895C CB 77            bit 6,a
 129+ 895E 28 0A            jr z,8F
 130+ 8960
 131+ 8960              ; 	Dispara Amadeus.
 132+ 8960
 133+ 8960 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 134+ 8962 CD E1 8F         call PreviousScan
 135+ 8965 CD E1 8F         call PreviousScan
 136+ 8968
 137+ 8968              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 138+ 8968              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 139+ 8968              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 140+ 8968              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 141+ 8968
 142+ 8968 18 11            jr 10F
 143+ 896A
 144+ 896A              ; 	Dispara Entidad.
 145+ 896A
 146+ 896A 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 147+ 896D              ;                                                   ; Impacto B="$80", no hay impacto.
 148+ 896D
 149+ 896D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 150+ 896D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 151+ 896D
 152+ 896D C5               push bc
 153+ 896E 06 10            ld b,16
 154+ 8970 CD D2 8F     9 call NextScan
 155+ 8973 10 FB            djnz 9B
 156+ 8975 C1               pop bc
 157+ 8976 CD E0 89         call Ajusta_disparo_parte_izquierda
 158+ 8979 18 06            jr 17F
 159+ 897B
 160+ 897B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 161+ 897B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 162+ 897B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 163+ 897B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 164+ 897B
 165+ 897B CD E0 89     10 call Ajusta_disparo_parte_izquierda
 166+ 897E CD 55 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 167+ 8981              ;                                                      ; _al generar el disparo.
 168+ 8981
 169+ 8981              ; 	LLegados a este punto tendremos:
 170+ 8981              ;
 171+ 8981              ;       Puntero_objeto_disparo en IY.
 172+ 8981              ;       Rutinas_de_impresion en IX.
 173+ 8981              ;       Puntero_de_impresion en HL.
 174+ 8981              ;       Impacto/Dirección en BC.
 175+ 8981
 176+ 8981 CD E8 89     17 call Almacena_disparo
 177+ 8984 18 52            jr 6F                                             ; RET.
 178+ 8986
 179+ 8986              ; 	Estamos en el 4º cuadrante de pantalla.
 180+ 8986              ; 	4º CUAD. ----- ----- ----- ----- -----
 181+ 8986              ;
 182+ 8986              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 183+ 8986              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 184+ 8986              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 185+ 8986
 186+ 8986 2A 9D 85     4 ld hl,(Posicion_actual)
 187+ 8989
 188+ 8989              ;   Amadeus o entidad ???.
 189+ 8989
 190+ 8989 3A C9 85         ld a,(Ctrl_0)
 191+ 898C CB 77            bit 6,a
 192+ 898E 28 0A            jr z,11F
 193+ 8990
 194+ 8990              ; 	Dispara Amadeus.
 195+ 8990
 196+ 8990 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 197+ 8992 CD E1 8F         call PreviousScan
 198+ 8995 CD E1 8F         call PreviousScan
 199+ 8998
 200+ 8998              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 201+ 8998              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 202+ 8998              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 203+ 8998              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 204+ 8998
 205+ 8998 18 11            jr 13F
 206+ 899A
 207+ 899A              ; 	Dispara Entidad.
 208+ 899A
 209+ 899A 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 210+ 899D              ;                                                     ; Impacto B="$80", no hay impacto.
 211+ 899D
 212+ 899D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 213+ 899D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 214+ 899D
 215+ 899D C5               push bc
 216+ 899E 06 10            ld b,16
 217+ 89A0 CD D2 8F     12 call NextScan
 218+ 89A3 10 FB            djnz 12B
 219+ 89A5 C1               pop bc
 220+ 89A6
 221+ 89A6 CD D9 89         call Ajusta_disparo_parte_derecha
 222+ 89A9 18 06            jr 18F
 223+ 89AB
 224+ 89AB              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 225+ 89AB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 226+ 89AB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 227+ 89AB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 228+ 89AB
 229+ 89AB CD D9 89     13 call Ajusta_disparo_parte_derecha
 230+ 89AE CD 55 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 231+ 89B1              ;                                                       ; _al generar el disparo.
 232+ 89B1
 233+ 89B1              ; LLegados a este punto tendremos:
 234+ 89B1              ;
 235+ 89B1              ;       Puntero_objeto_disparo en IY.
 236+ 89B1              ;       Rutinas_de_impresion en IX.
 237+ 89B1              ;       Puntero_de_impresion en HL.
 238+ 89B1              ;       Impacto/Dirección en BC.
 239+ 89B1
 240+ 89B1 CD E8 89     18 call Almacena_disparo
 241+ 89B4 18 22            jr 6F                                               ; RET.
 242+ 89B6
 243+ 89B6              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 244+ 89B6
 245+ 89B6 28 11        3 jr z,5F
 246+ 89B8
 247+ 89B8              ; 	1er CUAD. ----- ----- ----- ----- -----
 248+ 89B8              ;
 249+ 89B8              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 250+ 89B8              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 251+ 89B8              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 252+ 89B8              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 253+ 89B8
 254+ 89B8              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 255+ 89B8              ;	   ""        ""       "f9", B="1"
 256+ 89B8              ;	   ""        ""       "fb", B="2"
 257+ 89B8              ; 	   ""        ""       "fb", B="3"
 258+ 89B8
 259+ 89B8 2A 9D 85     	ld hl,(Posicion_actual)
 260+ 89BB CD D2 8F     	call NextScan
 261+ 89BE
 262+ 89BE              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 263+ 89BE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 264+ 89BE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 265+ 89BE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 266+ 89BE
 267+ 89BE CD E0 89         call Ajusta_disparo_parte_izquierda
 268+ 89C1
 269+ 89C1              ; 	No se produce impacto. B="$80"
 270+ 89C1              ; 	Dirección del proyectil hacia abajo. C="$80"
 271+ 89C1
 272+ 89C1 01 80 80         ld bc,$8080
 273+ 89C4
 274+ 89C4              ; 	LLegados a este punto tendremos:
 275+ 89C4              ;
 276+ 89C4              ;       Puntero_objeto_disparo en IY.
 277+ 89C4              ;       Rutinas_de_impresion en IX.
 278+ 89C4              ;       Puntero_de_impresion en HL.
 279+ 89C4              ;       Impacto/Dirección en BC.
 280+ 89C4
 281+ 89C4 CD E8 89         call Almacena_disparo
 282+ 89C7 18 0F            jr 6F                                           ; RET.
 283+ 89C9
 284+ 89C9              ; 	Estamos en el 2º cuadrante de pantalla.
 285+ 89C9              ; 	2º CUAD. ----- ----- ----- ----- -----
 286+ 89C9              ;
 287+ 89C9              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 288+ 89C9              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 289+ 89C9              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 290+ 89C9              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 291+ 89C9
 292+ 89C9 2A 9D 85     5 ld hl,(Posicion_actual)
 293+ 89CC CD D2 8F     	call NextScan
 294+ 89CF
 295+ 89CF              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 296+ 89CF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 297+ 89CF              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 298+ 89CF              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 299+ 89CF
 300+ 89CF CD D9 89         call Ajusta_disparo_parte_derecha
 301+ 89D2
 302+ 89D2              ; 	No se produce impacto. B="$80"
 303+ 89D2              ; 	Dirección del proyectil hacia abajo. C="80"
 304+ 89D2
 305+ 89D2 01 80 80     15 ld bc,$8080
 306+ 89D5
 307+ 89D5              ; 	LLegados a este punto tendremos:
 308+ 89D5              ;
 309+ 89D5              ;       Puntero_objeto_disparo en IY.
 310+ 89D5              ;       Rutinas_de_impresion en IX.
 311+ 89D5              ;       Puntero_de_impresion en HL.
 312+ 89D5              ;       Impacto/Dirección en BC.
 313+ 89D5
 314+ 89D5 CD E8 89         call Almacena_disparo
 315+ 89D8
 316+ 89D8 C9           6 ret
 317+ 89D9
 318+ 89D9              ; ----------------------------------------------------------------
 319+ 89D9              ;
 320+ 89D9              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 321+ 89D9              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 322+ 89D9              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 323+ 89D9
 324+ 89D9 78           Ajusta_disparo_parte_derecha ld a,b
 325+ 89DA FE 02            cp 2
 326+ 89DC 38 01            jr c,1F
 327+ 89DE 23               inc hl
 328+ 89DF C9           1 ret
 329+ 89E0
 330+ 89E0 78           Ajusta_disparo_parte_izquierda ld a,b
 331+ 89E1 FE 01        	cp 1
 332+ 89E3 20 01        	jr nz,1F
 333+ 89E5 2B           	dec hl
 334+ 89E6 2B           1 dec hl
 335+ 89E7 C9               ret
 336+ 89E8
 337+ 89E8              ; ----------------------------------------------------------------
 338+ 89E8              ;
 339+ 89E8              ;   25/02/23
 340+ 89E8              ;
 341+ 89E8              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 342+ 89E8              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 343+ 89E8              ;
 344+ 89E8              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 345+ 89E8              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 346+ 89E8
 347+ 89E8              Almacena_disparo
 348+ 89E8
 349+ 89E8 E5               push hl  										; HL contiene el puntero de impresión.
 350+ 89E9 F1               pop af
 351+ 89EA 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 352+ 89EB
 353+ 89EB 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 354+ 89EC E6 01            and 1
 355+ 89EE 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 356+ 89F0              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 357+ 89F0              ; 	Dispara AMADEUS.
 358+ 89F0
 359+ 89F0              ;	Comprobamos que a Amadeus aún le quedan disparos.
 360+ 89F0              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 361+ 89F0              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 362+ 89F0              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 363+ 89F0
 364+ 89F0 C5               push bc
 365+ 89F1 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 366+ 89F4 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 367+ 89F7 A7               and a
 368+ 89F8 ED 42            sbc hl,bc
 369+ 89FA CC 8A 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 370+ 89FD C1               pop bc
 371+ 89FE 28 54            jr z,4F
 372+ 8A00
 373+ 8A00 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 374+ 8A03 23               inc hl
 375+ 8A04 23               inc hl
 376+ 8A05 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 377+ 8A08              ;                                                   ; _ Disparo_(+1).
 378+ 8A08 18 18            jr 2F
 379+ 8A0A
 380+ 8A0A              ; Dispara una entidad.
 381+ 8A0A
 382+ 8A0A C5           1 push bc
 383+ 8A0B 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 384+ 8A0E 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 385+ 8A11 A7               and a
 386+ 8A12 ED 42            sbc hl,bc
 387+ 8A14 CC 83 87         call z,Inicia_Puntero_Disparo_Entidades
 388+ 8A17 C1               pop bc
 389+ 8A18 28 3A            jr z,4F
 390+ 8A1A
 391+ 8A1A 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 392+ 8A1D 23               inc hl
 393+ 8A1E 23               inc hl
 394+ 8A1F 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 395+ 8A22              ;                                                   ; _ Disparo_(+1).
 396+ 8A22 CD C1 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 397+ 8A25              ;                                                   ; _ los 8 bytes que definen el disparo:
 398+ 8A25              ;
 399+ 8A25              ;                                                     Puntero_objeto_disparo en IY.
 400+ 8A25              ;                                                     Rutinas_de_impresion en IX.
 401+ 8A25              ;                                                     Puntero_de_impresion en HL.
 402+ 8A25              ;                                                     Impacto/Dirección en BC.
 403+ 8A25
 404+ 8A25 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 405+ 8A26 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 406+ 8A27 23               inc hl                                          ; _ al siguiente.
 407+ 8A28 A7               and a
 408+ 8A29 20 C0            jr nz,3B
 409+ 8A2B
 410+ 8A2B 08               ex af,af
 411+ 8A2C ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 412+ 8A30 F9               ld sp,hl
 413+ 8A31
 414+ 8A31 DD E5            push ix                                         ; Rutina de impresión.
 415+ 8A33 F5               push af                                         ; Puntero de impresión.
 416+ 8A34 FD E5            push iy                                         ; Puntero objeto.
 417+ 8A36 C5               push bc                                         ; Control.
 418+ 8A37
 419+ 8A37 ED 7B DF 85      ld sp,(Stack)
 420+ 8A3B
 421+ 8A3B              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 422+ 8A3B
 423+ 8A3B 21 D6 85     	ld hl,Ctrl_1
 424+ 8A3E CB C6        	set 0,(hl)
 425+ 8A40
 426+ 8A40 DD E5        	push ix
 427+ 8A42 E1               pop hl
 428+ 8A43 F5               push af
 429+ 8A44 DD E1            pop ix
 430+ 8A46
 431+ 8A46 CD A0 7F     	call Guarda_foto_registros
 432+ 8A49
 433+ 8A49 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 434+ 8A4C CB 86        	res 0,(hl)
 435+ 8A4E
 436+ 8A4E              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 437+ 8A4E              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 438+ 8A4E
 439+ 8A4E CD 8A 87         call Inicia_Puntero_Disparo_Amadeus
 440+ 8A51 CD 83 87         call Inicia_Puntero_Disparo_Entidades
 441+ 8A54
 442+ 8A54 C9           4 ret
 443+ 8A55
 444+ 8A55              ; ----------------------------------------------------------------
 445+ 8A55              ;
 446+ 8A55              ;   4/3/23
 447+ 8A55              ;
 448+ 8A55              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 449+ 8A55              ;   _ al generarse el disparo.
 450+ 8A55              ;
 451+ 8A55              ;       "$80" ..... No se produce colisión.
 452+ 8A55              ;       "$81" ..... Se produce colisión.
 453+ 8A55
 454+ 8A55              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 455+ 8A55              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 456+ 8A55
 457+ 8A55
 458+ 8A55 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 459+ 8A57 E5               push hl                                        ; Puntero de impresión.
 460+ 8A58 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 461+ 8A5A CD 76 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 462+ 8A5D
 463+ 8A5D 7B               ld a,e
 464+ 8A5E E6 01            and 1
 465+ 8A60 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 466+ 8A62
 467+ 8A62 E1               pop hl
 468+ 8A63 E5               push hl
 469+ 8A64 CD D2 8F         call NextScan
 470+ 8A67
 471+ 8A67 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 472+ 8A68 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 473+ 8A6A 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 474+ 8A6C              ;                                                  ; _ 2º scanline si esto es así.
 475+ 8A6C 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 476+ 8A6E CD 76 8A         call Bucle_2
 477+ 8A71
 478+ 8A71 43           2 ld b,e
 479+ 8A72 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 480+ 8A73 FD E1            pop iy
 481+ 8A75 C9               ret
 482+ 8A76
 483+ 8A76               ; ---------- ----------
 484+ 8A76
 485+ 8A76 06 02        Bucle_2 ld b,2
 486+ 8A78 FD 7E 00     2 ld a,(iy)
 487+ 8A7B A6               and (hl)
 488+ 8A7C 28 02            jr z,1F
 489+ 8A7E 1E 81            ld e,$81
 490+ 8A80 23           1 inc hl
 491+ 8A81 FD 23            inc iy
 492+ 8A83 10 F3            djnz 2B
 493+ 8A85 C9               ret
 494+ 8A86
 495+ 8A86              ; -------------------------------------------------------------------------------------------------------------
 496+ 8A86              ;
 497+ 8A86              ;   11/04/23
 498+ 8A86              ;
 499+ 8A86              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 500+ 8A86              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 501+ 8A86              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 502+ 8A86              ;
 503+ 8A86              ;   MODIFICA: HL,DE,BC,A y AF´.
 504+ 8A86
 505+ 8A86              Compara_coordenadas_X
 506+ 8A86
 507+ 8A86              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 508+ 8A86              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 509+ 8A86
 510+ 8A86              ; Preparamos registros:
 511+ 8A86
 512+ 8A86 21 A1 85         ld hl,Filas+6
 513+ 8A89 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 514+ 8A8A 23               inc hl
 515+ 8A8B 23               inc hl
 516+ 8A8C 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 517+ 8A8D 43               ld b,e
 518+ 8A8E 21 AF 85         ld hl,Filas+20
 519+ 8A91 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 520+ 8A92 21 F4 85         ld hl,Coordenadas_X_Entidad
 521+ 8A95 CD A2 8C         call Guarda_coordenadas_X
 522+ 8A98
 523+ 8A98              ; Preparamos registros:
 524+ 8A98
 525+ 8A98 21 7A 84         ld hl,Amadeus_db+6
 526+ 8A9B 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 527+ 8A9C 23               inc hl
 528+ 8A9D 23               inc hl
 529+ 8A9E 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 530+ 8A9F 7B               ld a,e
 531+ 8AA0 08               ex af,af'
 532+ 8AA1 21 88 84         ld hl,Amadeus_db+20
 533+ 8AA4 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 534+ 8AA5 21 F1 85         ld hl,Coordenadas_X_Amadeus
 535+ 8AA8 CD A2 8C         call Guarda_coordenadas_X
 536+ 8AAB
 537+ 8AAB              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 538+ 8AAB              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 539+ 8AAB
 540+ 8AAB 04               inc b
 541+ 8AAC 05               dec b
 542+ 8AAD 28 04            jr z,1F
 543+ 8AAF 06 03            ld b,3
 544+ 8AB1 18 02            jr 2F
 545+ 8AB3 06 02        1 ld b,2
 546+ 8AB5 08           2 ex af,af'
 547+ 8AB6 3C               inc a
 548+ 8AB7 3D               dec a
 549+ 8AB8 28 04            jr z,5F
 550+ 8ABA 0E 03            ld c,3
 551+ 8ABC 18 02            jr 6F
 552+ 8ABE 0E 02        5 ld c,2
 553+ 8AC0 79           6 ld a,c
 554+ 8AC1 08               ex af,af'
 555+ 8AC2 11 F4 85         ld de,Coordenadas_X_Entidad
 556+ 8AC5 1A           4 ld a,(de)
 557+ 8AC6 21 F1 85         ld hl,Coordenadas_X_Amadeus
 558+ 8AC9 BE           3 cp (hl)
 559+ 8ACA 28 0E            jr z,7F
 560+ 8ACC 23               inc hl
 561+ 8ACD 0D               dec c
 562+ 8ACE 20 F9            jr nz,3B
 563+ 8AD0 13               inc de
 564+ 8AD1 08               ex af,af'
 565+ 8AD2 4F               ld c,a
 566+ 8AD3 08               ex af,af'
 567+ 8AD4 10 EF            djnz 4B
 568+ 8AD6
 569+ 8AD6              ; Limpiamos los almacenes de coordenadas y salimos.
 570+ 8AD6
 571+ 8AD6 CD E1 8C     8 call Limpia_Coordenadas_X
 572+ 8AD9 C9               ret
 573+ 8ADA
 574+ 8ADA 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 575+ 8ADC 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 576+ 8ADF 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 577+ 8AE2 CB D6            set 2,(hl)
 578+ 8AE4 18 F0            jr 8B
 579+ 8AE6
 580+ 8AE6              ; -----------------------------------------------------------------------
 581+ 8AE6              ;
 582+ 8AE6              ;   17/04/23
 583+ 8AE6              ;
 584+ 8AE6
 585+ 8AE6              Detecta_colision_nave_entidad
 586+ 8AE6
 587+ 8AE6              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 588+ 8AE6
 589+ 8AE6 2A 9D 85         ld hl,(Posicion_actual)
 590+ 8AE9 CD 37 8F         call Calcula_puntero_de_impresion
 591+ 8AEC
 592+ 8AEC              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 593+ 8AEC              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 594+ 8AEC
 595+ 8AEC DD E5            push ix
 596+ 8AEE E1               pop hl
 597+ 8AEF E5               push hl
 598+ 8AF0
 599+ 8AF0              ; ----- ----- -----
 600+ 8AF0 1E 00            ld e,0                                         ; Indica impacto.
 601+ 8AF2 06 0A            ld b,10
 602+ 8AF4 CD 24 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 603+ 8AF7 7B               ld a,e
 604+ 8AF8 FE 05            cp 5
 605+ 8AFA 38 0E            jr c,3F
 606+ 8AFC
 607+ 8AFC              ; LLegados a este punto:
 608+ 8AFC              ;
 609+ 8AFC              ;   HAY COLISIÓN !!!!!.
 610+ 8AFC              ;
 611+ 8AFC              ;   .db (Impacto) de Amadeus a "1".
 612+ 8AFC              ;   SET el bit3 de (Impacto2).
 613+ 8AFC              ;
 614+ 8AFC              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 615+ 8AFC
 616+ 8AFC 21 8D 84         ld hl,Amadeus_db+25
 617+ 8AFF 36 01            ld (hl),1
 618+ 8B01 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 619+ 8B04 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 620+ 8B06 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 621+ 8B08 18 18            jr 1F
 622+ 8B0A
 623+ 8B0A              ; -----
 624+ 8B0A
 625+ 8B0A E1           3 pop hl
 626+ 8B0B CD D2 8F         call NextScan
 627+ 8B0E E5               push hl
 628+ 8B0F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 629+ 8B10 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 630+ 8B12 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 631+ 8B14 30 0C            jr nc,1F
 632+ 8B16              ;                                                  ; _ 2º scanline si esto es así.
 633+ 8B16 10 DC            djnz 2B
 634+ 8B18
 635+ 8B18              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 636+ 8B18
 637+ 8B18              ; LLegados a este punto:
 638+ 8B18              ;
 639+ 8B18              ;   NO HAY COLISIÓN !!!!!.
 640+ 8B18              ;
 641+ 8B18              ;   .db (Impacto) de Amadeus a "0".
 642+ 8B18              ;   RES el bit2 de (Impacto2).
 643+ 8B18              ;
 644+ 8B18              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 645+ 8B18              ;   Lo colocamos a "0".
 646+ 8B18
 647+ 8B18 21 EC 85         ld hl,Impacto2
 648+ 8B1B CB 96            res 2,(hl)
 649+ 8B1D 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 650+ 8B20 36 00            ld (hl),0
 651+ 8B22
 652+ 8B22 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 653+ 8B23 C9               ret
 654+ 8B24
 655+ 8B24               ; ---------- ----------
 656+ 8B24
 657+ 8B24 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 658+ 8B25 3A 9C 85         ld a,(Columns)
 659+ 8B28 47               ld b,a
 660+ 8B29 FD 7E 00     2 ld a,(iy)
 661+ 8B2C BE               cp (hl)
 662+ 8B2D 28 01            jr z,1F
 663+ 8B2F
 664+ 8B2F 1C               inc e
 665+ 8B30
 666+ 8B30 23           1 inc hl
 667+ 8B31 FD 23            inc iy
 668+ 8B33 10 F4            djnz 2B
 669+ 8B35 C1               pop bc
 670+ 8B36 C9               ret
 671+ 8B37
 672+ 8B37              ; -------------------------------------------------------------------------------------------------------------
 673+ 8B37              ;
 674+ 8B37              ;   13/03/23
 675+ 8B37              ;
 676+ 8B37              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 677+ 8B37              ;
 678+ 8B37              ;   DESTRUYE: HL,BC,DE y A.
 679+ 8B37
 680+ 8B37 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 681+ 8B3A 7E               ld a,(hl)
 682+ 8B3B A7               and a
 683+ 8B3C C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 684+ 8B3D
 685+ 8B3D 44               ld b,h
 686+ 8B3E 4D               ld c,l
 687+ 8B3F 2A E5 85         ld hl,(Stack_snapshot_disparos)
 688+ 8B42 E5               push hl
 689+ 8B43 A7               and a
 690+ 8B44 ED 42            sbc hl,bc
 691+ 8B46 E5               push hl
 692+ 8B47 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 693+ 8B48
 694+ 8B48 E1               pop hl
 695+ 8B49 54               ld d,h
 696+ 8B4A 5D               ld e,l
 697+ 8B4B 1B               dec de
 698+ 8B4C ED B8            lddr                                                ; Limpiamos.
 699+ 8B4E
 700+ 8B4E 21 60 70         ld hl,Album_de_fotos_disparos
 701+ 8B51 22 E5 85         ld (Stack_snapshot_disparos),hl
 702+ 8B54
 703+ 8B54 C9               ret
 704+ 8B55
 705+ 8B55              ; -------------------------------------------------------------------------------------------------------------
 706+ 8B55              ;
 707+ 8B55              ;   28/03/23
 708+ 8B55              ;
 709+ 8B55
 710+ 8B55 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 711+ 8B58 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 712+ 8B5B
 713+ 8B5B CD C1 87     2 call Extrae_address
 714+ 8B5E 7E               ld a,(hl)
 715+ 8B5F A7               and a
 716+ 8B60 28 2F            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 717+ 8B62
 718+ 8B62              ; ----- ----- ----- ----- ----- -----
 719+ 8B62
 720+ 8B62 C5               push bc
 721+ 8B63 CD 1D 8C         call foto_disparo_a_borrar
 722+ 8B66
 723+ 8B66              ; Existe colisión con este disparo???
 724+ 8B66
 725+ 8B66 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 726+ 8B67 7E               ld a,(hl)
 727+ 8B68 2B               dec hl
 728+ 8B69 E6 01            and 1
 729+ 8B6B 28 1B            jr z,9F
 730+ 8B6D
 731+ 8B6D              ;   En este punto:
 732+ 8B6D              ;
 733+ 8B6D              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 734+ 8B6D              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 735+ 8B6D              ;   _con la entidad).
 736+ 8B6D              ;
 737+ 8B6D              ;   Disparo_2A defw 0                                ; Control.
 738+ 8B6D              ;    defw 0                                          ; Puntero objeto.
 739+ 8B6D              ;    defw 0                                          ; Puntero de impresión.
 740+ 8B6D              ;    defw 0                                          ; Rutina de impresión.
 741+ 8B6D
 742+ 8B6D E5               push hl
 743+ 8B6E
 744+ 8B6E 06 04            ld b,4
 745+ 8B70 23           19 inc hl
 746+ 8B71 10 FD            djnz 19B
 747+ 8B73
 748+ 8B73 CD C1 87         call Extrae_address
 749+ 8B76 CD E9 95         call Genera_coordenadas_disparo
 750+ 8B79
 751+ 8B79              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 752+ 8B79
 753+ 8B79 EB               ex de,hl
 754+ 8B7A 22 EF 85         ld (Coordenadas_disparo_certero),hl
 755+ 8B7D
 756+ 8B7D
 757+ 8B7D              ; Elimino el disparo de la base de datos.
 758+ 8B7D
 759+ 8B7D E1               pop hl
 760+ 8B7E CD 97 8C         call Elimina_disparo_de_base_de_datos
 761+ 8B81 21 EC 85         ld hl,Impacto2
 762+ 8B84 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 763+ 8B86
 764+ 8B86 18 06            jr 11F
 765+ 8B88
 766+ 8B88 CD 46 8C     9 call Mueve_disparo
 767+ 8B8B CD 1D 8C         call foto_disparo_a_borrar
 768+ 8B8E
 769+ 8B8E C1           11 pop bc
 770+ 8B8F 18 04            jr 7F
 771+ 8B91
 772+ 8B91              ; ----- ----- ----- ----- ----- -----
 773+ 8B91
 774+ 8B91 ED 42        1 sbc hl,bc
 775+ 8B93 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 776+ 8B95
 777+ 8B95 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 778+ 8B98 23               inc hl
 779+ 8B99 23               inc hl
 780+ 8B9A 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 781+ 8B9D 18 BC            jr 2B
 782+ 8B9F
 783+ 8B9F CD 8A 87     3 call Inicia_Puntero_Disparo_Amadeus
 784+ 8BA2 01 66 84         ld bc,Disparo_11
 785+ 8BA5 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 786+ 8BA8
 787+ 8BA8 CD C1 87     5 call Extrae_address
 788+ 8BAB 7E               ld a,(hl)
 789+ 8BAC A7               and a
 790+ 8BAD 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 791+ 8BAF
 792+ 8BAF              ; ----- ----- ----- ----- ----- -----
 793+ 8BAF
 794+ 8BAF C5               push bc
 795+ 8BB0 CD 1D 8C         call foto_disparo_a_borrar
 796+ 8BB3
 797+ 8BB3              ; Existe colisión con este disparo???
 798+ 8BB3
 799+ 8BB3 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 800+ 8BB4 7E               ld a,(hl)
 801+ 8BB5 2B               dec hl
 802+ 8BB6 E6 01            and 1
 803+ 8BB8 28 48            jr z,10F
 804+ 8BBA
 805+ 8BBA              ; La colisión se produce con Amadeus???
 806+ 8BBA              ; Amadeus siempre tiene (Coordenada_y)="$16".
 807+ 8BBA
 808+ 8BBA E5               push hl
 809+ 8BBB
 810+ 8BBB 06 04            ld b,4
 811+ 8BBD 23           16 inc hl
 812+ 8BBE 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 813+ 8BC0 CD C1 87         call Extrae_address
 814+ 8BC3 CD E9 95         call Genera_coordenadas_disparo
 815+ 8BC6
 816+ 8BC6 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 817+ 8BC7 FE 16            cp $16
 818+ 8BC9 38 22            jr c,15F
 819+ 8BCB
 820+ 8BCB              ; (Colisiones en filas 16 y 17).
 821+ 8BCB
 822+ 8BCB D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 823+ 8BCC
 824+ 8BCC              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 825+ 8BCC
 826+ 8BCC 21 7A 84         ld hl,Amadeus_db+6
 827+ 8BCF 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 828+ 8BD0 23               inc hl
 829+ 8BD1 23               inc hl
 830+ 8BD2 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 831+ 8BD3 21 88 84         ld hl,Amadeus_db+20
 832+ 8BD6 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 833+ 8BD7 21 F1 85         ld hl,Coordenadas_X_Amadeus
 834+ 8BDA CD A2 8C         call Guarda_coordenadas_X
 835+ 8BDD
 836+ 8BDD D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 837+ 8BDE
 838+ 8BDE              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 839+ 8BDE
 840+ 8BDE 06 03            ld b,3
 841+ 8BE0 21 F1 85         ld hl,Coordenadas_X_Amadeus
 842+ 8BE3 7E           18 ld a,(hl)
 843+ 8BE4 BA               cp d
 844+ 8BE5 20 03            jr nz,17F
 845+ 8BE7
 846+ 8BE7              ; Colisión Amadeus !!!!!!!!!!
 847+ 8BE7
 848+ 8BE7 E1               pop hl
 849+ 8BE8 18 09            jr 14F
 850+ 8BEA
 851+ 8BEA 23           17 inc hl
 852+ 8BEB 10 F6            djnz 18B
 853+ 8BED
 854+ 8BED              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 855+ 8BED              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 856+ 8BED
 857+ 8BED E1           15 pop hl
 858+ 8BEE 23               inc hl
 859+ 8BEF 35               dec (hl)
 860+ 8BF0 2B               dec hl
 861+ 8BF1 18 0F            jr 10F
 862+ 8BF3
 863+ 8BF3              ; -----------------------debug
 864+ 8BF3
 865+ 8BF3              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 866+ 8BF3              ; _ almacén de coordenadas_X de Amadeus.
 867+ 8BF3
 868+ 8BF3 E5           14 push hl
 869+ 8BF4 CD 97 8C         call Elimina_disparo_de_base_de_datos
 870+ 8BF7 21 EC 85         ld hl,Impacto2
 871+ 8BFA CB CE            set 1,(hl)
 872+ 8BFC CD E1 8C         call Limpia_Coordenadas_X
 873+ 8BFF
 874+ 8BFF E1               pop hl
 875+ 8C00 18 06            jr 12F
 876+ 8C02
 877+ 8C02 CD 46 8C     10 call Mueve_disparo
 878+ 8C05 CD 1D 8C         call foto_disparo_a_borrar
 879+ 8C08 C1           12 pop bc
 880+ 8C09
 881+ 8C09 18 04            jr 8F
 882+ 8C0B
 883+ 8C0B              ; ----- ----- ----- ----- ----- -----
 884+ 8C0B
 885+ 8C0B ED 42        4 sbc hl,bc
 886+ 8C0D 28 0A            jr z,6F
 887+ 8C0F
 888+ 8C0F 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 889+ 8C12 23               inc hl
 890+ 8C13 23               inc hl
 891+ 8C14 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 892+ 8C17 18 8F            jr 5B
 893+ 8C19
 894+ 8C19 CD 83 87     6 call Inicia_Puntero_Disparo_Entidades
 895+ 8C1C C9               ret
 896+ 8C1D
 897+ 8C1D              ; ------------------------------------------------------------------
 898+ 8C1D
 899+ 8C1D              foto_disparo_a_borrar
 900+ 8C1D
 901+ 8C1D 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 902+ 8C1E A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 903+ 8C1F C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 904+ 8C20
 905+ 8C20 E5               push hl
 906+ 8C21 23               inc hl
 907+ 8C22 23               inc hl
 908+ 8C23 ED 73 DF 85      ld (Stack),sp
 909+ 8C27 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 910+ 8C28 FD E1            pop iy
 911+ 8C2A DD E1            pop ix
 912+ 8C2C E1               pop hl
 913+ 8C2D ED 7B DF 85      ld sp,(Stack)
 914+ 8C31 3A D6 85         ld a,(Ctrl_1)
 915+ 8C34 CB C7            set 0,a
 916+ 8C36 32 D6 85         ld (Ctrl_1),a
 917+ 8C39 CD A0 7F         call Guarda_foto_registros
 918+ 8C3C 3A D6 85         ld a,(Ctrl_1)
 919+ 8C3F CB 87            res 0,a
 920+ 8C41 32 D6 85         ld (Ctrl_1),a
 921+ 8C44 E1               pop hl
 922+ 8C45 C9               ret
 923+ 8C46
 924+ 8C46 E5           Mueve_disparo push hl
 925+ 8C47 7E               ld a,(hl)
 926+ 8C48 06 04            ld b,4
 927+ 8C4A 23           1 inc hl
 928+ 8C4B 10 FD            djnz 1B
 929+ 8C4D
 930+ 8C4D              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 931+ 8C4D
 932+ 8C4D CD C1 87         call Extrae_address
 933+ 8C50
 934+ 8C50 E6 01            and 1
 935+ 8C52 28 2A            jr z,2F
 936+ 8C54
 937+ 8C54              ; Disparo hacia arriba, (Amadeus).
 938+ 8C54
 939+ 8C54              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 940+ 8C54              ; _ de la dificultad.
 941+ 8C54
 942+ 8C54 CD E1 8F         call PreviousScan
 943+ 8C57 CD E1 8F         call PreviousScan
 944+ 8C5A CD E1 8F         call PreviousScan
 945+ 8C5D
 946+ 8C5D              ; Detecta si el disparo de Amadeus sale de pantalla:
 947+ 8C5D
 948+ 8C5D 7C               ld a,h
 949+ 8C5E FE 40            cp $40
 950+ 8C60 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 951+ 8C62
 952+ 8C62              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 953+ 8C62
 954+ 8C62 EB               ex de,hl
 955+ 8C63 06 04            ld b,4
 956+ 8C65 2B           6 dec hl
 957+ 8C66 10 FD            djnz 6B
 958+ 8C68
 959+ 8C68 CD 97 8C         call Elimina_disparo_de_base_de_datos
 960+ 8C6B
 961+ 8C6B 18 0C            jr 4F
 962+ 8C6D
 963+ 8C6D              ; Se ha desplazado la bala, compruebo colisión.
 964+ 8C6D
 965+ 8C6D D5           3 push de
 966+ 8C6E C5               push bc
 967+ 8C6F CD 55 8A         call Comprueba_Colision
 968+ 8C72 78               ld a,b
 969+ 8C73 C1               pop bc
 970+ 8C74 D1               pop de
 971+ 8C75
 972+ 8C75 EB               ex de,hl
 973+ 8C76
 974+ 8C76 73               ld (hl),e
 975+ 8C77 23               inc hl
 976+ 8C78 72               ld (hl),d
 977+ 8C79
 978+ 8C79 E1           4 pop hl
 979+ 8C7A 23               inc hl
 980+ 8C7B 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 981+ 8C7C 2B               dec hl
 982+ 8C7D C9               ret
 983+ 8C7E
 984+ 8C7E              ; Disparo hacia abajo, (Entidad).
 985+ 8C7E
 986+ 8C7E              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 987+ 8C7E              ; _ de la dificultad.
 988+ 8C7E
 989+ 8C7E CD D2 8F     2 call NextScan
 990+ 8C81 CD D2 8F         call NextScan
 991+ 8C84 CD D2 8F         call NextScan
 992+ 8C87
 993+ 8C87              ; Detecta si el disparo de la entidad sale de la pantalla.
 994+ 8C87
 995+ 8C87 7C               ld a,h
 996+ 8C88 FE 58            cp $58
 997+ 8C8A 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 998+ 8C8C
 999+ 8C8C EB               ex de,hl
1000+ 8C8D 06 04            ld b,4
1001+ 8C8F 2B           5 dec hl
1002+ 8C90 10 FD            djnz 5B
1003+ 8C92
1004+ 8C92 CD 97 8C         call Elimina_disparo_de_base_de_datos
1005+ 8C95
1006+ 8C95 18 E2            jr 4B
1007+ 8C97
1008+ 8C97              ; HL apunta al primer byte de la base de datos del disparo.
1009+ 8C97
1010+ 8C97 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1011+ 8C9A AF               xor a
1012+ 8C9B 77               ld (hl),a
1013+ 8C9C 54               ld d,h
1014+ 8C9D 5D               ld e,l
1015+ 8C9E 13               inc de
1016+ 8C9F ED B0            ldir
1017+ 8CA1 C9               ret
1018+ 8CA2
1019+ 8CA2              ; -----------------------------------------------------------------
1020+ 8CA2              ;
1021+ 8CA2              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1022+ 8CA2              ;
1023+ 8CA2              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1024+ 8CA2              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1025+ 8CA2              ;
1026+ 8CA2              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1027+ 8CA2              ;
1028+ 8CA2              ;   INPUTS:
1029+ 8CA2              ;
1030+ 8CA2              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1031+ 8CA2              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1032+ 8CA2              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1033+ 8CA2
1034+ 8CA2              ;   MODIFICA: A, HL, DE y C
1035+ 8CA2
1036+ 8CA2 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1037+ 8CA3 79               ld a,c
1038+ 8CA4 E6 01            and 1
1039+ 8CA6 20 03            jr nz,1F
1040+ 8CA8 14               inc d
1041+ 8CA9 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1042+ 8CAB
1043+ 8CAB              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1044+ 8CAB              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1045+ 8CAB
1046+ 8CAB 15           1 dec d
1047+ 8CAC 23           2 inc hl
1048+ 8CAD 72               ld (hl),d
1049+ 8CAE
1050+ 8CAE 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1051+ 8CAF A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1052+ 8CB0 C8               ret z
1053+ 8CB1
1054+ 8CB1 AF               xor a
1055+ 8CB2 5F               ld e,a
1056+ 8CB3 18 ED            jr Guarda_coordenadas_X
1057+ 8CB5
1058+ 8CB5              ; -----------------------------------------------------------------
1059+ 8CB5              ;
1060+ 8CB5              ;   12/04/23
1061+ 8CB5              ;
1062+ 8CB5
1063+ 8CB5 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1064+ 8CB8 A7               and a
1065+ 8CB9 C8               ret z
1066+ 8CBA
1067+ 8CBA FE 04            cp 4
1068+ 8CBC 20 09            jr nz,1F
1069+ 8CBE
1070+ 8CBE
1071+ 8CBE              ; La colisión se produce por contacto entre Amadeus y una entidad.
1072+ 8CBE
1073+ 8CBE CD E6 8A         call Detecta_colision_nave_entidad
1074+ 8CC1
1075+ 8CC1 21 EC 85         ld hl,Impacto2
1076+ 8CC4 CB 5E            bit 3,(hl)
1077+ 8CC6 C0               ret nz                                               ; Existe colisión, RET.
1078+ 8CC7
1079+ 8CC7              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1080+ 8CC7              ; Primero analizamos si algún disparo impacta en Amadeus.
1081+ 8CC7
1082+ 8CC7 21 EC 85     1 ld hl,Impacto2
1083+ 8CCA CB 4E            bit 1,(hl)
1084+ 8CCC 28 07            jr z,2F
1085+ 8CCE
1086+ 8CCE 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1087+ 8CD1 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1088+ 8CD3 18 0B            jr 3F
1089+ 8CD5
1090+ 8CD5 21 EC 85     2 ld hl,Impacto2
1091+ 8CD8 CB 46            bit 0,(hl)
1092+ 8CDA C8               ret z
1093+ 8CDB
1094+ 8CDB              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1095+ 8CDB
1096+ 8CDB 21 D6 85         ld hl,Ctrl_1
1097+ 8CDE CB D6            set 2,(hl)
1098+ 8CE0
1099+ 8CE0 C9           3 ret
1100+ 8CE1
1101+ 8CE1              ; -----------------------------------------------------------------
1102+ 8CE1              ;
1103+ 8CE1              ;   16/04/23
1104+ 8CE1              ;
1105+ 8CE1
1106+ 8CE1 AF           Limpia_Coordenadas_X xor a
1107+ 8CE2 06 06            ld b,6
1108+ 8CE4 21 F1 85         ld hl,Coordenadas_X_Amadeus
1109+ 8CE7 77           1 ld (hl),a
1110+ 8CE8 23               inc hl
1111+ 8CE9 10 FC            djnz 1B
1112+ 8CEB C9               ret
# file closed: Disparo.asm
 924  8CEC              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8CEC              ; ******************************************************************************************************************************************************************************************
   2+ 8CEC              ;
   3+ 8CEC              ; 01/23
   4+ 8CEC              ;
   5+ 8CEC              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8CEC
   7+ 8CEC CD C6 8F     Draw call Prepara_draw
   8+ 8CEF 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8CF0 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8CF1 28 05        	jr z,2F
  11+ 8CF3
  12+ 8CF3 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8CF6 18 0C        	jr 1F
  14+ 8CF8 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8CFB 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8CFE CD 8D 8E     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8D01              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8D01 CD 0C 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8D04 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8D07 CB 6F        	bit 5,a
  21+ 8D09 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8D0B
  23+ 8D0B CD 23 8D     	call Comprueba_limite_horizontal
  24+ 8D0E CD B3 8D     	call Comprueba_limite_vertical
  25+ 8D11
  26+ 8D11              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8D11
  28+ 8D11 CD 00 8F     3 call calcula_CColumnass
  29+ 8D14 CD 37 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8D17 CD 8C 8F     	call Define_rutina_de_impresion
  31+ 8D1A
  32+ 8D1A 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8D1D CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8D1F 32 C9 85     	ld (Ctrl_0),a
  35+ 8D22
  36+ 8D22 C9           	ret
  37+ 8D23
  38+ 8D23              ; *******************************************************************************************************************************************************************************************
  39+ 8D23              ;	21/01/23
  40+ 8D23              ;
  41+ 8D23              ; 	Comprueba_limite_horizontal.
  42+ 8D23              ;
  43+ 8D23              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8D23              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8D23              ;
  46+ 8D23              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8D23              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8D23              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8D23              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8D23
  51+ 8D23
  52+ 8D23
  53+ 8D23 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8D26 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8D28 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8D2A E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8D2C 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8D2F 18 09            jr 6F
  59+ 8D31 CB 5F        1 bit 3,a
  60+ 8D33 28 0A            jr z,2F
  61+ 8D35 E6 F7            and $f7
  62+ 8D37 32 C9 85         ld (Ctrl_0),a
  63+ 8D3A CD 8D 8E     6 call Inicializacion
  64+ 8D3D 18 5B            jr 5F
  65+ 8D3F E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8D40
  67+ 8D40              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8D40              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8D40
  70+ 8D40 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8D41 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8D44 CD 92 92     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8D47 67           	ld h,a
  74+ 8D48 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8D49 CD 92 92     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8D4C 67           	ld h,a
  77+ 8D4D A7           	and a
  78+ 8D4E ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8D50 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8D51 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8D54 FE 02        	cp 2
  82+ 8D56 38 1E        	jr c,3F
  83+ 8D58 28 1C        	jr z,3F
  84+ 8D5A 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8D5B 28 23            jr z,7F
  86+ 8D5D 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8D5F 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8D61 E1           	pop hl
  89+ 8D62
  90+ 8D62              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8D62              ; _para indicar con E="2" en caso necesario.
  92+ 8D62
  93+ 8D62 E5               push hl
  94+ 8D63 C5               push bc
  95+ 8D64 CD 92 92     	call calcula_tercio
  96+ 8D67 FE 01        	cp 1
  97+ 8D69 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8D6B CD 9B 8D         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8D6E 28 26            jr z,9F
 100+ 8D70 38 24            jr c,9F
 101+ 8D72 1E 00        11 ld e,0
 102+ 8D74 18 22            jr 8F
 103+ 8D76 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8D77 28 07        	jr z, 7F
 105+ 8D79 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8D7B 1E 00         	ld e,0
 107+ 8D7D E1           	pop hl
 108+ 8D7E 18 04        	jr 4F
 109+ 8D80 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8D82 18 15            jr 10F
 111+ 8D84
 112+ 8D84              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8D84              ; _para indicar con E="2" en caso necesario.
 114+ 8D84
 115+ 8D84 E5           4 push hl
 116+ 8D85 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8D86 CD 92 92     	call calcula_tercio
 118+ 8D89 FE 01        	cp 1
 119+ 8D8B 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8D8D CD 9B 8D         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8D90 28 04            jr z,9F
 122+ 8D92 30 02            jr nc,9F
 123+ 8D94 18 02        	jr 8F
 124+ 8D96 1E 02        9 ld e,2
 125+ 8D98 C1           8 pop bc
 126+ 8D99 E1           10 pop hl
 127+ 8D9A C9           5 ret
 128+ 8D9B
 129+ 8D9B              ; --------------------
 130+ 8D9B              ;
 131+ 8D9B              ; 25/08/22
 132+ 8D9B
 133+ 8D9B CD 92 92     Comprueba_centro call calcula_tercio
 134+ 8D9E 67               ld h,a
 135+ 8D9F 08           	ex af,af
 136+ 8DA0 FE 02        	cp 2
 137+ 8DA2 38 07        	jr c,1F
 138+ 8DA4 28 05        	jr z,1F
 139+ 8DA6 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8DA9 18 03        	jr 2F
 141+ 8DAB 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8DAE 08           2 ex af,af
 143+ 8DAF A7               and a
 144+ 8DB0 ED 42            sbc hl,bc
 145+ 8DB2 C9               ret
 146+ 8DB3
 147+ 8DB3              ; *********************************************************************************************************************************************************************************************
 148+ 8DB3              ;
 149+ 8DB3              ;   16/8/22
 150+ 8DB3              ;
 151+ 8DB3              ;	Comprueba_limite_vertical
 152+ 8DB3              ;
 153+ 8DB3              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8DB3              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8DB3              ;
 156+ 8DB3
 157+ 8DB3 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8DB6 7D           	ld a,l
 159+ 8DB7 E6 1F        	and $1F
 160+ 8DB9 57           	ld d,a
 161+ 8DBA 3A D5 85     	ld a,(Limite_vertical)
 162+ 8DBD BA           	cp d 											; Límite - Posición.
 163+ 8DBE 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8DBF 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8DC2 CB 47        	bit 0,a
 166+ 8DC4 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8DC6
 168+ 8DC6              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8DC6
 170+ 8DC6 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8DC7 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8DC9
 173+ 8DC9              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8DC9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8DC9
 176+ 8DC9 3A A1 85         ld a,(Coordenada_X)
 177+ 8DCC 16 0F            ld d,Centro_izquierda
 178+ 8DCE A7               and a
 179+ 8DCF 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8DD0 28 1E            jr z,3F
 181+ 8DD2 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8DD4              ;                                                    ; _salimos sin modificar nada.
 183+ 8DD4 18 0E            jr 2F
 184+ 8DD6 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8DD7 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8DD9
 187+ 8DD9              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8DD9              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8DD9
 190+ 8DD9 3A A1 85         ld a,(Coordenada_X)
 191+ 8DDC 16 10            ld d,Centro_derecha
 192+ 8DDE A7               and a
 193+ 8DDF 92               sub d
 194+ 8DE0 28 0E            jr z,3F
 195+ 8DE2 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8DE4              ;                                                    ; _salimos sin modificar nada.
 197+ 8DE4 CB 43        2 bit 0,e
 198+ 8DE6 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8DE8 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8DE9 CD 7D 8E         call Modificaccionne
 201+ 8DEC C1           	pop bc
 202+ 8DED CD 8D 8E         call Inicializacion
 203+ 8DF0 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8DF1
 205+ 8DF1              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8DF1
 207+ 8DF1 C5           4 push bc
 208+ 8DF2 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8DF5 0A           	ld a,(bc)
 210+ 8DF6 3D           	dec a
 211+ 8DF7 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8DF8 7D           	ld a,l
 213+ 8DF9 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8DFA CB 47        	bit 0,a
 215+ 8DFC 28 03        	jr z,5F
 216+ 8DFE 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8DFF 18 2E        	jr 7F
 218+ 8E01
 219+ 8E01              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8E01
 221+ 8E01 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8E02 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8E03 3A C9 85     	ld a,(Ctrl_0)
 224+ 8E06 CB 4F        	bit 1,a
 225+ 8E08 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8E0A F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8E0B
 228+ 8E0B              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8E0B
 230+ 8E0B 1C               inc e
 231+ 8E0C 1D               dec e
 232+ 8E0D 20 07            jr nz,12F
 233+ 8E0F 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8E10 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8E11 22 9D 85     	ld (Posicion_actual),hl
 236+ 8E14 18 44        13 jr 9F
 237+ 8E16 CB 43        12 bit 0,e
 238+ 8E18 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8E1A              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8E1A C1           	pop bc
 241+ 8E1B 18 D3        	jr 3B
 242+ 8E1D 80           14 add b
 243+ 8E1E 6F               ld l,a
 244+ 8E1F 22 9D 85     	ld (Posicion_actual),hl
 245+ 8E22 CD 7D 8E         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8E25 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8E27 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8E29 32 C9 85         ld (Ctrl_0),a
 249+ 8E2C F1           	pop af
 250+ 8E2D 18 2B        	jr 9F
 251+ 8E2F
 252+ 8E2F              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8E2F
 254+ 8E2F F5           7 push af
 255+ 8E30 3A C9 85     	ld a,(Ctrl_0)
 256+ 8E33 CB 47        	bit 0,a
 257+ 8E35 20 1D        	jr nz,8F
 258+ 8E37 F1           	pop af
 259+ 8E38
 260+ 8E38              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8E38
 262+ 8E38 1C           	inc e
 263+ 8E39 1D               dec e
 264+ 8E3A 20 07            jr nz,10F
 265+ 8E3C 90           	sub b
 266+ 8E3D 6F               ld l,a
 267+ 8E3E 22 9D 85     	ld (Posicion_actual),hl
 268+ 8E41 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8E43              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8E43 CB 43        10 bit 0,e
 271+ 8E45 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8E47              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8E47 C1           	pop bc
 274+ 8E48 18 A6        	jr 3B
 275+ 8E4A 90           16 sub b
 276+ 8E4B 6F               ld l,a
 277+ 8E4C 22 9D 85     	ld (Posicion_actual),hl
 278+ 8E4F CD 7D 8E         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8E52 18 06            jr 9F
 280+ 8E54 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8E56 32 C9 85         ld (Ctrl_0),a
 282+ 8E59 F1           	pop af
 283+ 8E5A C1           9 pop bc
 284+ 8E5B 1E 00        	ld e,0
 285+ 8E5D CD 8D 8E         call Inicializacion
 286+ 8E60 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8E61 08           	ex af,af
 288+ 8E62 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8E63 18 8B            jr 3B
 290+ 8E65
 291+ 8E65              ; --------------------
 292+ 8E65
 293+ 8E65 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8E67 CD E1 8F     1 call PreviousScan
 295+ 8E6A 10 FB            djnz 1B
 296+ 8E6C 22 9D 85     	ld (Posicion_actual),hl
 297+ 8E6F AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8E70 C9           	ret
 299+ 8E71
 300+ 8E71              ; --------------------
 301+ 8E71
 302+ 8E71 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8E73 CD D2 8F     1 call NextScan
 304+ 8E76 10 FB            djnz 1B
 305+ 8E78 22 9D 85     	ld (Posicion_actual),hl
 306+ 8E7B AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8E7C C9           	ret
 308+ 8E7D
 309+ 8E7D              ; --------------------
 310+ 8E7D              ;
 311+ 8E7D              ;	22/01/23
 312+ 8E7D              ;
 313+ 8E7D              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8E7D              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8E7D              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8E7D
 317+ 8E7D
 318+ 8E7D              Modificaccionne
 319+ 8E7D
 320+ 8E7D 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8E80 FE 02        	cp 2
 322+ 8E82 CC 65 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8E85 DC 65 8E         call c,Modifica_Pos_actual
 324+ 8E88 C8           	ret z
 325+ 8E89 CD 71 8E         call Modifica_Pos_actual2
 326+ 8E8C C9               ret
 327+ 8E8D
 328+ 8E8D              ; *************************************************************************************************************************************************************************************************
 329+ 8E8D              ;
 330+ 8E8D              ;	13/8/22
 331+ 8E8D              ;
 332+ 8E8D              ;	Inicializacion
 333+ 8E8D              ;
 334+ 8E8D              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8E8D              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8E8D              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8E8D              ;
 338+ 8E8D              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8E8D              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8E8D              ;	_ desaparece/aparece.
 341+ 8E8D
 342+ 8E8D              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8E8D              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8E8D              ;
 345+ 8E8D              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8E8D              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8E8D              ; 		   [E] ="0"
 348+ 8E8D
 349+ 8E8D              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8E8D
 351+ 8E8D CD 92 92     Inicializacion call calcula_tercio
 352+ 8E90 28 36        	jr z,primit
 353+ 8E92 E6 02        	and 2
 354+ 8E94 20 07        	jr nz,segmit
 355+ 8E96 7D           	ld a,l
 356+ 8E97 FE 7F        	cp $7f
 357+ 8E99 38 2D        	jr c,primit
 358+ 8E9B 28 2B        	jr z,primit
 359+ 8E9D CD FA 8E     segmit call column
 360+ 8EA0 38 13        	jr c,tercuad
 361+ 8EA2 3E 04        cuarcuad ld a,4
 362+ 8EA4 32 AF 85     	ld (Cuad_objeto),a
 363+ 8EA7 21 20 48     	ld hl,$4820
 364+ 8EAA 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8EAD 21 D5 85     	ld hl,Limite_vertical
 366+ 8EB0 36 0D        	ld (hl),$0d
 367+ 8EB2 08           	ex af,af
 368+ 8EB3 18 3C        	jr 1F
 369+ 8EB5              tercuad
 370+ 8EB5 3E 03        	ld a,3
 371+ 8EB7 32 AF 85     	ld (Cuad_objeto),a
 372+ 8EBA 21 20 48     	ld hl,$4820
 373+ 8EBD 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8EC0 21 D5 85     	ld hl,Limite_vertical
 375+ 8EC3 36 12        	ld (hl),$12
 376+ 8EC5 08           	ex af,af
 377+ 8EC6 18 29        	jr 1F
 378+ 8EC8 CD FA 8E     primit call column
 379+ 8ECB 38 13        	jr c, primcuad
 380+ 8ECD              segcuad
 381+ 8ECD 3E 02        	ld a,2
 382+ 8ECF 32 AF 85     	ld (Cuad_objeto),a
 383+ 8ED2 21 C0 4F     	ld hl,$4fc0
 384+ 8ED5 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8ED8 21 D5 85     	ld hl,Limite_vertical
 386+ 8EDB 36 0D        	ld (hl),$0d
 387+ 8EDD 08           	ex af,af
 388+ 8EDE 18 11        	jr 1F
 389+ 8EE0              primcuad
 390+ 8EE0 3E 01        	ld a,1
 391+ 8EE2 32 AF 85     	ld (Cuad_objeto),a
 392+ 8EE5 21 C0 4F     	ld hl,$4fc0
 393+ 8EE8 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8EEB 21 D5 85     	ld hl,Limite_vertical
 395+ 8EEE 36 12        	ld (hl),$12
 396+ 8EF0 08           	ex af,af
 397+ 8EF1 CD BE 95     1 call Genera_coordenadas
 398+ 8EF4 21 C9 85     	ld hl,Ctrl_0
 399+ 8EF7 CB EE        	set 5,(hl)
 400+ 8EF9 C9           	ret
 401+ 8EFA
 402+ 8EFA              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8EFA
 404+ 8EFA              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8EFA              ;
 406+ 8EFA              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8EFA
 408+ 8EFA 7D           column ld a,l
 409+ 8EFB E6 1F        	and $1f
 410+ 8EFD FE 10         	cp $10
 411+ 8EFF C9            	ret
 412+ 8F00
 413+ 8F00              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8F00              ;
 415+ 8F00              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8F00              ;
 417+ 8F00              ; 14/12/22
 418+ 8F00              ;
 419+ 8F00              ;	Modifica: A y BC.
 420+ 8F00
 421+ 8F00 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8F03 E6 01        	and 1
 423+ 8F05 28 17        	jr z,1F
 424+ 8F07
 425+ 8F07              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8F07
 427+ 8F07 3A A1 85     	ld a,(Coordenada_X)
 428+ 8F0A 47           	ld b,a
 429+ 8F0B 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8F0C 79           	ld a,c
 431+ 8F0D 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8F0E 38 08        	jr c,2F
 433+ 8F10 47           	ld b,a
 434+ 8F11 79           	ld a,c
 435+ 8F12 90           	sub b
 436+ 8F13 32 D2 85     	ld (Columnas),a
 437+ 8F16 18 1B        	jr 4F
 438+ 8F18 79           2 ld a,c
 439+ 8F19 32 D2 85     	ld (Columnas),a
 440+ 8F1C 18 15        	jr 4F
 441+ 8F1E
 442+ 8F1E              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8F1E
 444+ 8F1E 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8F21 81           	add c
 446+ 8F22 3D           	dec a
 447+ 8F23 D6 1F        	sub $1f
 448+ 8F25 38 08        	jr c,3F
 449+ 8F27 47           	ld b,a
 450+ 8F28 79           	ld a,c
 451+ 8F29 90           	sub b
 452+ 8F2A 32 D2 85     	ld (Columnas),a
 453+ 8F2D 18 04        	jr 4F
 454+ 8F2F 79           3 ld a,c
 455+ 8F30 32 D2 85     	ld (Columnas),a
 456+ 8F33 D9           4 exx
 457+ 8F34 4F           	ld c,a
 458+ 8F35 D9           	exx
 459+ 8F36 C9            ret
 460+ 8F37
 461+ 8F37              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8F37              ;
 463+ 8F37              ; 7/1/23
 464+ 8F37              ;
 465+ 8F37              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8F37              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8F37              ;
 468+ 8F37              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8F37              ;	DESTRUYE: HL,B Y A.
 470+ 8F37
 471+ 8F37 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8F3A FE 02        	cp 2
 473+ 8F3C 38 18        	jr c,1F
 474+ 8F3E 28 16        	jr z,1F
 475+ 8F40 E6 01        	and 1
 476+ 8F42 28 0D        	jr z,3F
 477+ 8F44
 478+ 8F44              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8F44
 480+ 8F44 CD 80 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8F47
 482+ 8F47 7D           9 ld a,l
 483+ 8F48 E6 1F        	and $1f
 484+ 8F4A 28 2A        	jr z,7F
 485+ 8F4C 2B           	dec hl
 486+ 8F4D 10 F8        	djnz 9B
 487+ 8F4F 18 25        	jr 7F
 488+ 8F51
 489+ 8F51              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8F51
 491+ 8F51 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8F54 18 20        	jr 7F
 493+ 8F56
 494+ 8F56 28 14        1 jr z,2F
 495+ 8F58
 496+ 8F58              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8F58
 498+ 8F58 CD 80 8F     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8F5B 7D           4 ld a,l
 500+ 8F5C E6 1F        	and $1f
 501+ 8F5E 28 03        	jr z,6F
 502+ 8F60 2B           	dec hl
 503+ 8F61 10 F8        	djnz 4B
 504+ 8F63 06 0F        6 ld b,15
 505+ 8F65 CD E1 8F     5 call PreviousScan
 506+ 8F68 10 FB        	djnz 5B
 507+ 8F6A 18 0A        	jr 7F
 508+ 8F6C
 509+ 8F6C              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8F6C
 511+ 8F6C CD 80 8F     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8F6F 06 0F        	ld b,15
 513+ 8F71 CD E1 8F     8 call PreviousScan
 514+ 8F74 10 FB        	djnz 8B
 515+ 8F76
 516+ 8F76 E5           7 push hl
 517+ 8F77 DD E1        	pop ix
 518+ 8F79
 519+ 8F79 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 8F7C E5           	push hl
 521+ 8F7D FD E1        	pop iy
 522+ 8F7F
 523+ 8F7F C9           	ret
 524+ 8F80
 525+ 8F80              ; --------------------------------------------------------------------------------------------------------------------
 526+ 8F80              ;
 527+ 8F80              ;	2/1/23
 528+ 8F80              ;
 529+ 8F80              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 8F80              ;
 531+ 8F80              ;	Tras esta rutina tenemos:
 532+ 8F80              ;
 533+ 8F80              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 8F80              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 8F80              ;
 536+ 8F80              ;	DESTRUYE!!!!! HL,B y A.
 537+ 8F80
 538+ 8F80 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 8F83 3A D2 85     	ld a,(Columnas)
 540+ 8F86 3D           	dec a
 541+ 8F87 20 01        	jr nz,1F
 542+ 8F89 3C           	inc a
 543+ 8F8A 47           1 ld b,a
 544+ 8F8B C9           	ret
 545+ 8F8C
 546+ 8F8C              ; --------------------------------------------------------------------------------------------------------------------
 547+ 8F8C              ;
 548+ 8F8C              ;	3/1/23
 549+ 8F8C              ;
 550+ 8F8C              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 8F8C              ;
 552+ 8F8C              ;	Destruye: A,B,HL y DE.
 553+ 8F8C
 554+ 8F8C              Define_rutina_de_impresion
 555+ 8F8C
 556+ 8F8C 3A 9C 85     	ld a,(Columns)
 557+ 8F8F 47           	ld b,a
 558+ 8F90 3A D2 85     	ld a,(Columnas)
 559+ 8F93 B8           	cp b
 560+ 8F94 20 0D        	jr nz,2f
 561+ 8F96
 562+ 8F96              ;	La entidad se imprime entera.
 563+ 8F96
 564+ 8F96 21 62 90     	ld hl, Indice_entidades_completas
 565+ 8F99 E6 01        	and 1
 566+ 8F9B 28 02        	jr z,1F
 567+ 8F9D
 568+ 8F9D 23           	inc hl
 569+ 8F9E 23           	inc hl
 570+ 8F9F
 571+ 8F9F CD C1 87     1 call Extrae_address
 572+ 8FA2 C9           	ret		;	ret
 573+ 8FA3
 574+ 8FA3              ;	La entidad no se imprime entera en pantalla.
 575+ 8FA3
 576+ 8FA3 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 8FA6 E6 01        	and 1
 578+ 8FA8 28 17        	jr z,3F
 579+ 8FAA
 580+ 8FAA              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 8FAA
 582+ 8FAA 21 66 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 8FAD 3A 9C 85     4 ld a,(Columns)
 584+ 8FB0 E6 01        	and 1
 585+ 8FB2 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 8FB4
 587+ 8FB4 23           	inc hl
 588+ 8FB5 23           	inc hl
 589+ 8FB6
 590+ 8FB6 3A D2 85     	ld a,(Columnas)
 591+ 8FB9 E6 01        	and 1
 592+ 8FBB 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 8FBD
 594+ 8FBD 23           	inc hl
 595+ 8FBE 23           	inc hl
 596+ 8FBF
 597+ 8FBF 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 8FC1
 599+ 8FC1 21 6C 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 8FC4 18 E7        	jr 4B
 601+ 8FC6
 602+ 8FC6              ; --------------------------------------------------------------------------------------------------------------------
 603+ 8FC6              ;
 604+ 8FC6              ;	Prepara_draw
 605+ 8FC6              ;
 606+ 8FC6              ;	Es una rutina de carga.
 607+ 8FC6              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 8FC6              ;
 609+ 8FC6              ;	FUNCIONAMIENTO:
 610+ 8FC6              ;
 611+ 8FC6              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 8FC6              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 8FC6              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 8FC6              ;
 615+ 8FC6              ;	DESTRUYE:
 616+ 8FC6              ;
 617+ 8FC6              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 8FC6
 619+ 8FC6 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 8FC9 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 8FCA 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 8FCB 4E           	ld c,(hl)
 623+ 8FCC 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 8FCF 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 8FD1 C9           	ret
 626+ 8FD2
 627+ 8FD2              ;----------------------------------------------------------------------------------------------------------------
 628+ 8FD2              ;
 629+ 8FD2              ;	5/08/22
 630+ 8FD2              ;
 631+ 8FD2              ;   NextScan.
 632+ 8FD2              ;
 633+ 8FD2              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 8FD2              ;
 635+ 8FD2              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 8FD2              ;
 637+ 8FD2              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 8FD2              ;
 639+ 8FD2              ;       DESTRUIDOS: AF y HL !!!
 640+ 8FD2              ;
 641+ 8FD2              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 8FD2              ;
 643+ 8FD2
 644+ 8FD2 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 8FD3 7C               ld a,h
 646+ 8FD4 E6 07            and 7
 647+ 8FD6 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 8FD7
 649+ 8FD7 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 8FD8 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 8FDA 6F               ld l,a
 652+ 8FDB D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 8FDC
 654+ 8FDC 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 8FDD D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 8FDF 67               ld h,a
 657+ 8FE0 C9               ret
 658+ 8FE1
 659+ 8FE1              ;----------------------------------------------------------------------------------------------------------------
 660+ 8FE1              ;
 661+ 8FE1              ;	5/08/22
 662+ 8FE1              ;
 663+ 8FE1              ;   PreviousScan.
 664+ 8FE1              ;
 665+ 8FE1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 8FE1              ;
 667+ 8FE1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 8FE1              ;
 669+ 8FE1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 8FE1              ;
 671+ 8FE1              ;       DESTRUIDOS: AF y HL !!!
 672+ 8FE1              ;
 673+ 8FE1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 8FE1              ;
 675+ 8FE1
 676+ 8FE1 7C           PreviousScan ld a,h
 677+ 8FE2 25               dec h               ; Dec H.
 678+ 8FE3 E6 07            and 7
 679+ 8FE5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 8FE6
 681+ 8FE6 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 8FE7 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 8FE9 6F               ld l,a
 684+ 8FEA D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 8FEB
 686+ 8FEB 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 8FEC C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 8FEE 67               ld h,a
 689+ 8FEF C9               ret
 690+ 8FF0
 691+ 8FF0              ; -----------------------------------------------------------------------------------
 692+ 8FF0              ;
 693+ 8FF0              ;	28/2/23
 694+ 8FF0              ;
 695+ 8FF0              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 8FF0              ;	Extrae fotos de Album_de_fotos.
 697+ 8FF0
 698+ 8FF0 3A DE 85     Extrae_foto_entidades ld a,(Numero_de_malotes)
 699+ 8FF3 A7           	and a
 700+ 8FF4 C8           	ret z
 701+ 8FF5 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 702+ 8FF9 31 00 70     	ld sp,Album_de_fotos
 703+ 8FFC
 704+ 8FFC FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 705+ 8FFE E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 706+ 8FFF D1           	pop de																	; Dirección de la rutina de impresión en DE.
 707+ 9000
 708+ 9000 ED 73 E1 85  	ld (Stack_2),sp
 709+ 9004 ED 7B DF 85  	ld sp,(Stack)
 710+ 9008
 711+ 9008              ; Fabrica la llamada a la correspondiente rutina de impresión.
 712+ 9008
 713+ 9008 3E CD        	ld a,$cd
 714+ 900A 32 12 90     	ld (Imprime),a
 715+ 900D EB           	ex de,hl
 716+ 900E 22 13 90     	ld (Imprime+1),hl
 717+ 9011 EB           	ex de,hl
 718+ 9012
 719+ 9012              ; Ejecuta la llamada:	CALL $xx,xx
 720+ 9012
 721+ 9012 00 00 00     Imprime db 0,0,0
 722+ 9015
 723+ 9015 3A DE 85     	ld a,(Numero_de_malotes)
 724+ 9018 3D           	dec a
 725+ 9019 28 09        	jr z,1F
 726+ 901B 32 DE 85      	ld (Numero_de_malotes),a
 727+ 901E
 728+ 901E ED 7B E1 85   	ld sp,(Stack_2)
 729+ 9022 18 D8        	jr 2B
 730+ 9024
 731+ 9024 AF           1 xor a
 732+ 9025 32 E1 85     	ld (Stack_2),a
 733+ 9028 C9           	ret
 734+ 9029
 735+ 9029              ; -----------------------------------------------------------------------------------
 736+ 9029              ;
 737+ 9029              ;	28/2/23
 738+ 9029              ;
 739+ 9029              ;	Pinta los disparos generados.
 740+ 9029
 741+ 9029              Extrae_foto_disparos
 742+ 9029
 743+ 9029 3A E7 85     	ld a,(Numero_de_disparotes)
 744+ 902C A7           	and a
 745+ 902D C8           	ret z
 746+ 902E ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9032 31 60 70     	ld sp,Album_de_fotos_disparos
 748+ 9035
 749+ 9035 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9037 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9038 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9039
 753+ 9039 ED 73 E1 85  	ld (Stack_2),sp
 754+ 903D ED 7B DF 85  	ld sp,(Stack)
 755+ 9041
 756+ 9041              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9041
 758+ 9041 3E CD        	ld a,$cd
 759+ 9043 32 4B 90     	ld (Imprime2),a
 760+ 9046 EB           	ex de,hl
 761+ 9047 22 4C 90     	ld (Imprime2+1),hl
 762+ 904A EB           	ex de,hl
 763+ 904B
 764+ 904B              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 904B
 766+ 904B 00 00 00     Imprime2 db 0,0,0
 767+ 904E
 768+ 904E 3A E7 85     	ld a,(Numero_de_disparotes)
 769+ 9051 3D           	dec a
 770+ 9052 28 09        	jr z,1F
 771+ 9054 32 E7 85      	ld (Numero_de_disparotes),a
 772+ 9057
 773+ 9057 ED 7B E1 85  	ld sp,(Stack_2)
 774+ 905B 18 D8        	jr 2B
 775+ 905D
 776+ 905D AF           1 xor a
 777+ 905E 32 E1 85     	ld (Stack_2),a
 778+ 9061 C9           	ret
 779+ 9062
# file closed: Draw_XOR.asm
 925  9062              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9062              ;   índices de Rutinas de impresión.
   2+ 9062
   3+ 9062 72 90        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9064 9F 90            defw Pinta_Amadeus_3x2
   5+ 9066
   6+ 9066 F5 90        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9068 95 91            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 906A 49 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 906C
  10+ 906C 1F 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 906E 23 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9070 D7 91            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9072
  14+ 9072
  15+ 9072              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9072              ;
  17+ 9072              ;   12/12/22
  18+ 9072              ;
  19+ 9072              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9072              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9072              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9072              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9072              ;
  24+ 9072              ;   Modifica: DE y HL.
  25+ 9072
  26+ 9072 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9076 FD F9        	ld sp,iy
  28+ 9078 06 10            ld b,16
  29+ 907A D1           1 pop de
  30+ 907B 7B               ld a,e
  31+ 907C AE               xor (hl)
  32+ 907D 77           	ld (hl),a
  33+ 907E 23           	inc hl
  34+ 907F 7A               ld a,d
  35+ 9080 AE               xor (hl)
  36+ 9081 77           	ld (hl),a
  37+ 9082 2B           	dec hl
  38+ 9083 24           	inc h
  39+ 9084 7C               ld a,h
  40+ 9085 E6 07            and 7
  41+ 9087 20 0A            jr nz,2F
  42+ 9089 7D               ld a,l
  43+ 908A C6 20            add a,$20
  44+ 908C 6F               ld l,a
  45+ 908D 38 04            jr c,2F
  46+ 908F 7C               ld a,h
  47+ 9090 D6 08            sub 8
  48+ 9092 67               ld h,a
  49+ 9093 7C           2 ld a,h
  50+ 9094 FE 58            cp $58
  51+ 9096 28 02            jr z,3F
  52+ 9098 10 E0            djnz 1B
  53+ 909A ED 7B DF 85  3 ld sp,(Stack)
  54+ 909E C9           	ret
  55+ 909F
  56+ 909F ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 90A3 FD F9        	ld sp,iy
  58+ 90A5 06 08            ld b,8
  59+ 90A7 D1           1 pop de
  60+ 90A8 7B               ld a,e
  61+ 90A9 AE               xor (hl)
  62+ 90AA 77           	ld (hl),a
  63+ 90AB 23           	inc hl
  64+ 90AC 7A               ld a,d
  65+ 90AD AE               xor (hl)
  66+ 90AE 77           	ld (hl),a
  67+ 90AF 23           	inc hl
  68+ 90B0 D1           	pop de
  69+ 90B1 7B               ld a,e
  70+ 90B2 AE               xor (hl)
  71+ 90B3 77           	ld (hl),a
  72+ 90B4 2B           	dec hl
  73+ 90B5 2B           	dec hl
  74+ 90B6 24           	inc h
  75+ 90B7 7C               ld a,h
  76+ 90B8 E6 07            and 7
  77+ 90BA 20 0A            jr nz,2F
  78+ 90BC 7D               ld a,l
  79+ 90BD C6 20            add a,$20
  80+ 90BF 6F               ld l,a
  81+ 90C0 38 04            jr c,2F
  82+ 90C2 7C               ld a,h
  83+ 90C3 D6 08            sub 8
  84+ 90C5 67               ld h,a
  85+ 90C6 7C           2 ld a,h
  86+ 90C7 FE 58            cp $58
  87+ 90C9 28 25            jr z,4F
  88+ 90CB 7A               ld a,d
  89+ 90CC AE               xor (hl)
  90+ 90CD 77               ld (hl),a
  91+ 90CE D1           	pop de
  92+ 90CF 23           	inc hl
  93+ 90D0 7B               ld a,e
  94+ 90D1 AE               xor (hl)
  95+ 90D2 77           	ld (hl),a
  96+ 90D3 23           	inc hl
  97+ 90D4 7A               ld a,d
  98+ 90D5 AE               xor (hl)
  99+ 90D6 77           	ld (hl),a
 100+ 90D7 2B           	dec hl
 101+ 90D8 2B           	dec hl
 102+ 90D9 24           	inc h
 103+ 90DA 7C               ld a,h
 104+ 90DB E6 07            and 7
 105+ 90DD 20 0A            jr nz,3F
 106+ 90DF 7D               ld a,l
 107+ 90E0 C6 20            add a,$20
 108+ 90E2 6F               ld l,a
 109+ 90E3 38 04            jr c,3F
 110+ 90E5 7C               ld a,h
 111+ 90E6 D6 08            sub 8
 112+ 90E8 67               ld h,a
 113+ 90E9 7C           3 ld a,h
 114+ 90EA FE 58            cp $58
 115+ 90EC 28 02            jr z,4F
 116+ 90EE 10 B7            djnz 1B
 117+ 90F0 ED 7B DF 85  4 ld sp,(Stack)
 118+ 90F4 C9           	ret
 119+ 90F5
 120+ 90F5              ; ---------------------------------------------------
 121+ 90F5
 122+ 90F5 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 90F9 FD F9        	ld sp,iy
 124+ 90FB
 125+ 90FB              ; >>>
 126+ 90FB
 127+ 90FB 06 10            ld b,16
 128+ 90FD D1           1 pop de
 129+ 90FE 7A           	ld a,d
 130+ 90FF AE           	xor (hl)
 131+ 9100 77           	ld (hl),a
 132+ 9101 24           	inc h
 133+ 9102 7C               ld a,h
 134+ 9103 E6 07            and 7
 135+ 9105 20 0C            jr nz,2F
 136+ 9107 7D               ld a,l
 137+ 9108 C6 20            add a,$20
 138+ 910A 6F               ld l,a
 139+ 910B 38 06            jr c,2F
 140+ 910D 7C               ld a,h
 141+ 910E D6 08            sub 8
 142+ 9110 67               ld h,a
 143+ 9111 18 00            jr 2F
 144+ 9113 7C           2 ld a,h
 145+ 9114 FE 58            cp $58
 146+ 9116 28 02            jr z,3F
 147+ 9118 10 E3            djnz 1B
 148+ 911A ED 7B DF 85  3 ld sp,(Stack)
 149+ 911E C9           	ret
 150+ 911F
 151+ 911F ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9123 FD F9        	ld sp,iy
 153+ 9125
 154+ 9125              ; >>>
 155+ 9125
 156+ 9125 06 10            ld b,16
 157+ 9127 D1           1 pop de
 158+ 9128 7B           	ld a,e
 159+ 9129 AE           	xor (hl)
 160+ 912A 77           	ld (hl),a
 161+ 912B 24           	inc h
 162+ 912C 7C               ld a,h
 163+ 912D E6 07            and 7
 164+ 912F 20 0C            jr nz,2F
 165+ 9131 7D               ld a,l
 166+ 9132 C6 20            add a,$20
 167+ 9134 6F               ld l,a
 168+ 9135 38 06            jr c,2F
 169+ 9137 7C               ld a,h
 170+ 9138 D6 08            sub 8
 171+ 913A 67               ld h,a
 172+ 913B 18 00            jr 2F
 173+ 913D 7C           2 ld a,h
 174+ 913E FE 58            cp $58
 175+ 9140 28 02            jr z,3F
 176+ 9142 10 E3            djnz 1B
 177+ 9144 ED 7B DF 85  3 ld sp,(Stack)
 178+ 9148 C9           	ret
 179+ 9149
 180+ 9149              ; ---------------------------------------------------
 181+ 9149
 182+ 9149 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 914D FD F9        	ld sp,iy
 184+ 914F 06 08            ld b,8
 185+ 9151 D1           1 pop de
 186+ 9152 7A           	ld a,d
 187+ 9153 AE           	xor (hl)
 188+ 9154 77           	ld (hl),a
 189+ 9155 23           	inc hl
 190+ 9156 D1           	pop de
 191+ 9157 7B           	ld a,e
 192+ 9158 AE           	xor (hl)
 193+ 9159 77           	ld (hl),a
 194+ 915A 2B           	dec hl
 195+ 915B 24            	inc h
 196+ 915C 7C               ld a,h
 197+ 915D E6 07            and 7
 198+ 915F 20 0A            jr nz,2F
 199+ 9161 7D               ld a,l
 200+ 9162 C6 20            add a,$20
 201+ 9164 6F               ld l,a
 202+ 9165 38 04            jr c,2F
 203+ 9167 7C               ld a,h
 204+ 9168 D6 08            sub 8
 205+ 916A 67               ld h,a
 206+ 916B 7C           2 ld a,h
 207+ 916C FE 58            cp $58
 208+ 916E 28 20            jr z,4F
 209+ 9170 D1               pop de
 210+ 9171 7B           	ld a,e
 211+ 9172 AE           	xor (hl)
 212+ 9173 77           	ld (hl),a
 213+ 9174 23           	inc hl
 214+ 9175 7A           	ld a,d
 215+ 9176 AE           	xor (hl)
 216+ 9177 77           	ld (hl),a
 217+ 9178 2B           	dec hl
 218+ 9179 24           	inc h
 219+ 917A 7C               ld a,h
 220+ 917B E6 07            and 7
 221+ 917D 20 0A            jr nz,3F
 222+ 917F 7D               ld a,l
 223+ 9180 C6 20            add a,$20
 224+ 9182 6F               ld l,a
 225+ 9183 38 04            jr c,3F
 226+ 9185 7C               ld a,h
 227+ 9186 D6 08            sub 8
 228+ 9188 67               ld h,a
 229+ 9189 7C           3 ld a,h
 230+ 918A FE 58            cp $58
 231+ 918C 28 02            jr z,4F
 232+ 918E 10 C1            djnz 1B
 233+ 9190 ED 7B DF 85  4 ld sp,(Stack)
 234+ 9194 C9           	ret
 235+ 9195
 236+ 9195 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9199 FD F9        	ld sp,iy
 238+ 919B 06 08            ld b,8
 239+ 919D D1           1 pop de
 240+ 919E D1           	pop de
 241+ 919F 7B           	ld a,e
 242+ 91A0 AE           	xor (hl)
 243+ 91A1 77           	ld (hl),a
 244+ 91A2 24            	inc h
 245+ 91A3 7C               ld a,h
 246+ 91A4 E6 07            and 7
 247+ 91A6 20 0A            jr nz,2F
 248+ 91A8 7D               ld a,l
 249+ 91A9 C6 20            add a,$20
 250+ 91AB 6F               ld l,a
 251+ 91AC 38 04            jr c,2F
 252+ 91AE 7C               ld a,h
 253+ 91AF D6 08            sub 8
 254+ 91B1 67               ld h,a
 255+ 91B2 7C           2 ld a,h
 256+ 91B3 FE 58            cp $58
 257+ 91B5 28 1B            jr z,4F
 258+ 91B7 D1               pop de
 259+ 91B8 7A           	ld a,d
 260+ 91B9 AE           	xor (hl)
 261+ 91BA 77           	ld (hl),a
 262+ 91BB 24           	inc h
 263+ 91BC 7C               ld a,h
 264+ 91BD E6 07            and 7
 265+ 91BF 20 0A            jr nz,3F
 266+ 91C1 7D               ld a,l
 267+ 91C2 C6 20            add a,$20
 268+ 91C4 6F               ld l,a
 269+ 91C5 38 04            jr c,3F
 270+ 91C7 7C               ld a,h
 271+ 91C8 D6 08            sub 8
 272+ 91CA 67               ld h,a
 273+ 91CB 7C           3 ld a,h
 274+ 91CC FE 58            cp $58
 275+ 91CE 28 02            jr z,4F
 276+ 91D0 10 CB            djnz 1B
 277+ 91D2 ED 7B DF 85  4 ld sp,(Stack)
 278+ 91D6 C9           	ret
 279+ 91D7
 280+ 91D7 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 91DB FD F9        	ld sp,iy
 282+ 91DD 06 08            ld b,8
 283+ 91DF D1           1 pop de
 284+ 91E0 7B           	ld a,e
 285+ 91E1 AE           	xor (hl)
 286+ 91E2 77           	ld (hl),a
 287+ 91E3 23           	inc hl
 288+ 91E4 7A           	ld a,d
 289+ 91E5 AE           	xor (hl)
 290+ 91E6 77           	ld (hl),a
 291+ 91E7 2B           	dec hl
 292+ 91E8 24             	inc h
 293+ 91E9 7C               ld a,h
 294+ 91EA E6 07            and 7
 295+ 91EC 20 0A            jr nz,2F
 296+ 91EE 7D               ld a,l
 297+ 91EF C6 20            add a,$20
 298+ 91F1 6F               ld l,a
 299+ 91F2 38 04            jr c,2F
 300+ 91F4 7C               ld a,h
 301+ 91F5 D6 08            sub 8
 302+ 91F7 67               ld h,a
 303+ 91F8 7C           2 ld a,h
 304+ 91F9 FE 58            cp $58
 305+ 91FB 28 21            jr z,4F
 306+ 91FD D1               pop de
 307+ 91FE 7A           	ld a,d
 308+ 91FF AE           	xor (hl)
 309+ 9200 77           	ld (hl),a
 310+ 9201 23           	inc hl
 311+ 9202 D1               pop de
 312+ 9203 7B           	ld a,e
 313+ 9204 AE           	xor (hl)
 314+ 9205 77           	ld (hl),a
 315+ 9206 2B           	dec hl
 316+ 9207 24           	inc h
 317+ 9208 7C               ld a,h
 318+ 9209 E6 07            and 7
 319+ 920B 20 0A            jr nz,3F
 320+ 920D 7D               ld a,l
 321+ 920E C6 20            add a,$20
 322+ 9210 6F               ld l,a
 323+ 9211 38 04            jr c,3F
 324+ 9213 7C               ld a,h
 325+ 9214 D6 08            sub 8
 326+ 9216 67               ld h,a
 327+ 9217 7C           3 ld a,h
 328+ 9218 FE 58            cp $58
 329+ 921A 28 02            jr z,4F
 330+ 921C 10 C1            djnz 1B
 331+ 921E ED 7B DF 85  4 ld sp,(Stack)
 332+ 9222 C9           	ret
 333+ 9223
 334+ 9223 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9227 FD F9        	ld sp,iy
 336+ 9229 06 08            ld b,8
 337+ 922B D1           1 pop de
 338+ 922C 7B           	ld a,e
 339+ 922D AE           	xor (hl)
 340+ 922E 77           	ld (hl),a
 341+ 922F 24            	inc h
 342+ 9230 7C               ld a,h
 343+ 9231 E6 07            and 7
 344+ 9233 20 0A            jr nz,2F
 345+ 9235 7D               ld a,l
 346+ 9236 C6 20            add a,$20
 347+ 9238 6F               ld l,a
 348+ 9239 38 04            jr c,2F
 349+ 923B 7C               ld a,h
 350+ 923C D6 08            sub 8
 351+ 923E 67               ld h,a
 352+ 923F 7C           2 ld a,h
 353+ 9240 FE 58            cp $58
 354+ 9242 28 1C            jr z,4F
 355+ 9244 D1               pop de
 356+ 9245 7A           	ld a,d
 357+ 9246 AE           	xor (hl)
 358+ 9247 77           	ld (hl),a
 359+ 9248 24           	inc h
 360+ 9249 7C               ld a,h
 361+ 924A E6 07            and 7
 362+ 924C 20 0A            jr nz,3F
 363+ 924E 7D               ld a,l
 364+ 924F C6 20            add a,$20
 365+ 9251 6F               ld l,a
 366+ 9252 38 04            jr c,3F
 367+ 9254 7C               ld a,h
 368+ 9255 D6 08            sub 8
 369+ 9257 67               ld h,a
 370+ 9258 7C           3 ld a,h
 371+ 9259 FE 58            cp $58
 372+ 925B 28 03            jr z,4F
 373+ 925D D1               pop de
 374+ 925E 10 CB            djnz 1B
 375+ 9260 ED 7B DF 85  4 ld sp,(Stack)
 376+ 9264 C9           	ret
 377+ 9265
 378+ 9265              ; ---------------------------------------------------
 379+ 9265              ;
 380+ 9265              ;   27/02/23
 381+ 9265              ;
 382+ 9265              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9265              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9265              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9265
 386+ 9265 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 9269 FD F9            ld sp,iy
 388+ 926B 06 02            ld b,2
 389+ 926D D1           1 pop de
 390+ 926E 7B               ld a,e
 391+ 926F AE               xor (hl)
 392+ 9270 77               ld (hl),a
 393+ 9271 23               inc hl
 394+ 9272 7A               ld a,d
 395+ 9273 AE               xor (hl)
 396+ 9274 77               ld (hl),a
 397+ 9275 2B               dec hl
 398+ 9276
 399+ 9276 24               inc h
 400+ 9277 7C               ld a,h
 401+ 9278 E6 07            and 7
 402+ 927A 20 0A            jr nz,2F
 403+ 927C 7D               ld a,l
 404+ 927D C6 20            add a,$20
 405+ 927F 6F               ld l,a
 406+ 9280 38 04            jr c,2F
 407+ 9282 7C               ld a,h
 408+ 9283 D6 08            sub 8
 409+ 9285 67               ld h,a
 410+ 9286 7C           2 ld a,h
 411+ 9287 FE 58            cp $58
 412+ 9289 28 02            jr z,3F
 413+ 928B
 414+ 928B 10 E0            djnz 1B
 415+ 928D ED 7B DF 85  3 ld sp,(Stack)
 416+ 9291 C9               ret
 417+ 9292
# file closed: Rutinas_de_impresion_sprites.asm
 926  9292              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9292              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9292              ;
   3+ 9292              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9292              ;
   5+ 9292              ; *****************************************************************************************************************************************************************************************
   6+ 9292              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9292
   8+ 9292 7C           calcula_tercio ld a,h
   9+ 9293 E6 18        	and $18
  10+ 9295 CB 2F        	sra a
  11+ 9297 CB 2F        	sra a
  12+ 9299 CB 2F        	sra a
  13+ 929B C9           	ret
  14+ 929C
# file closed: calcula_tercio.asm
 927  929C              	include "Cls.asm"
# file opened: Cls.asm
   1+ 929C              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 929C              ;
   3+ 929C              ;
   4+ 929C              ;	CLS.
   5+ 929C              ;
   6+ 929C              ;	Limpia la pantalla y define sus atributos.
   7+ 929C              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 929C              ;
   9+ 929C              ;	COLORES: 0 ..... NEGRO
  10+ 929C              ;    		 1 ..... AZUL
  11+ 929C              ; 			 2 ..... ROJO
  12+ 929C              ;			 3 ..... MAGENTA
  13+ 929C              ; 			 4 ..... VERDE
  14+ 929C              ; 			 5 ..... CIAN
  15+ 929C              ;			 6 ..... AMARILLO
  16+ 929C              ; 			 7 ..... BLANCO
  17+ 929C              ;
  18+ 929C              ;	INPUT: A contiene los atributos de pantalla.
  19+ 929C              ;
  20+ 929C              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 929C
  22+ 929C
  23+ 929C 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 929F 11 01 40     	LD DE,$4001
  25+ 92A2 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 92A5 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 92A7 ED B0        	LDIR
  28+ 92A9 01 FF 02     	LD BC,767
  29+ 92AC 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 92AD ED B0        	LDIR
  31+ 92AF C9           	ret
  32+ 92B0
# file closed: Cls.asm
 928  92B0              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 92B0              ; ******************************************************************************************************************************************************************************************
   2+ 92B0              ;
   3+ 92B0              ;   22/01/23
   4+ 92B0              ;
   5+ 92B0              ;	Mov_down
   6+ 92B0              ;
   7+ 92B0              ; 	Mueve el Sprite X px hacia abajo.
   8+ 92B0              ;
   9+ 92B0              ;
  10+ 92B0 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 92B3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 92B5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 92B5              ; 																	; _ en el caso de que no lo haya.
  14+ 92B5 3A B3 85     	ld a,(Vel_down)
  15+ 92B8 47           	ld b,a
  16+ 92B9 2A 9D 85         ld hl,(Posicion_actual)
  17+ 92BC CD 92 92     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 92BF E6 02        	and 2
  19+ 92C1 28 0F        	jr z,1F
  20+ 92C3
  21+ 92C3              ; Nos encontramos en el último tercio de pantalla.
  22+ 92C3              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 92C3
  24+ 92C3 7C           	ld a,h
  25+ 92C4 FE 57        	cp $57
  26+ 92C6 20 0A        	jr nz,1F
  27+ 92C8 7D           	ld a,l
  28+ 92C9 C6 20        	add $20
  29+ 92CB 30 05        	jr nc,1F
  30+ 92CD
  31+ 92CD              ; ------------------------------
  32+ 92CD CD A8 95     	call Reaparece_arriba
  33+ 92D0              ;	call Reinicio
  34+ 92D0              ; ------------------------------
  35+ 92D0
  36+ 92D0 18 08        	jr 3F
  37+ 92D2 CD D2 8F     1 call NextScan
  38+ 92D5 22 9D 85     	ld (Posicion_actual),hl
  39+ 92D8 10 E2            djnz 2B
  40+ 92DA CD BE 95     3 call Genera_coordenadas
  41+ 92DD C9           	ret
  42+ 92DE
  43+ 92DE              ; ******************************************************************************************************************************************************************************************
  44+ 92DE              ;
  45+ 92DE              ;   22/01/23
  46+ 92DE              ;
  47+ 92DE              ;	Mov_up
  48+ 92DE              ;
  49+ 92DE              ; 	Mueve el Sprite hacia arriba.
  50+ 92DE              ;
  51+ 92DE              ;
  52+ 92DE 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 92E1 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 92E3              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 92E3              ; 																		; _ en el caso de que no lo haya.
  56+ 92E3 3A B2 85     	ld a,(Vel_up)
  57+ 92E6 47           	ld b,a
  58+ 92E7 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 92EA CD 92 92     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 92ED A7           	and a
  61+ 92EE 20 10        	jr nz,1F
  62+ 92F0
  63+ 92F0              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 92F0              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 92F0
  66+ 92F0 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 92F1 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 92F3 20 0B            jr nz,1F
  69+ 92F5 7D               ld a,l
  70+ 92F6 D6 20            sub $20
  71+ 92F8 30 06            jr nc,1F
  72+ 92FA 25               dec h
  73+ 92FB
  74+ 92FB              ; -----------------------------
  75+ 92FB CD 98 95         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 92FE              ;	call Reinicio
  77+ 92FE              ; -----------------------------
  78+ 92FE
  79+ 92FE 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 9300 CD E1 8F     1 call PreviousScan
  81+ 9303 22 9D 85     	ld (Posicion_actual),hl
  82+ 9306 10 E2            djnz 3B
  83+ 9308 CD BE 95     2 call Genera_coordenadas
  84+ 930B C9           	ret
  85+ 930C
  86+ 930C              ; ******************************************************************************************************************************************************************************************
  87+ 930C              ;
  88+ 930C              ;	19/10/22
  89+ 930C              ;
  90+ 930C              ;	Mov_right.
  91+ 930C              ;
  92+ 930C              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 930C              ;
  94+ 930C
  95+ 930C 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 930F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9311              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9311              ; 																	; _ en el caso de que no lo haya.
  99+ 9311 3A C9 85     	ld a,(Ctrl_0)
 100+ 9314 CB 77        	bit 6,a
 101+ 9316 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9318
 103+ 9318 CD 46 95     	call Stop_Amadeus_right
 104+ 931B C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 931C 18 4D        	jr 8F
 106+ 931E
 107+ 931E 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 9321 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 9323 20 46        	jr nz,8F
 110+ 9325
 111+ 9325 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 9328 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9329 28 40        	jr z,8F
 114+ 932B
 115+ 932B              ; ---------- ---------- ----------
 116+ 932B              ;
 117+ 932B              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 932B
 119+ 932B 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 932E FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 9330 28 11        	jr z,1F
 122+ 9332 38 06        	jr c,6F
 123+ 9334 FE 04        	cp 4
 124+ 9336 28 14        	jr z,7F
 125+ 9338 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 933A
 127+ 933A              ; ---------- ---------- ----------
 128+ 933A              ;
 129+ 933A              ; Perfiles de velocidad
 130+ 933A              ;
 131+ 933A
 132+ 933A 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 933D FE FE        	cp $fe
 134+ 933F 20 2A        	jr nz,8F
 135+ 9341 18 10        	jr 3F
 136+ 9343 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 9346 FE FD        	cp $fd
 138+ 9348 20 21        	jr nz,8F
 139+ 934A 18 07        	jr 3F
 140+ 934C 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 934F FE FB        	cp $fb
 142+ 9351 20 18        	jr nz,8F
 143+ 9353
 144+ 9353              ; ---------- ---------- ----------
 145+ 9353
 146+ 9353              3
 147+ 9353 CD 86 95     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 9356              ;	call Reinicio
 149+ 9356
 150+ 9356              ; ---------- ---------- ----------
 151+ 9356              ;
 152+ 9356              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 9356
 154+ 9356 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 9358 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 9359 CD 72 93     	call DESPLZ_DER
 157+ 935C C1           	pop bc
 158+ 935D 10 F9        	djnz 5B
 159+ 935F 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 9362 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 9363 22 9D 85     	ld (Posicion_actual),hl
 162+ 9366 CD BE 95     	call Genera_coordenadas
 163+ 9369 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 936B
 165+ 936B              ; ---------- ---------- ----------
 166+ 936B
 167+ 936B 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 936E CD 72 93     	call DESPLZ_DER
 169+ 9371 C9           2 ret
 170+ 9372
 171+ 9372              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9372              ;
 173+ 9372              ;	22/9/22
 174+ 9372              ;
 175+ 9372
 176+ 9372 CD 81 93     DESPLZ_DER call Desplaza_derecha
 177+ 9375 CD CD 93         call modifica_parametros_1er_DESPLZ_2
 178+ 9378 CD F6 93         call Ciclo_completo
 179+ 937B 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 937E CB FE        	set 7,(hl)
 181+ 9380 C9           	ret
 182+ 9381
 183+ 9381              ; ******************************************************************************************************************************************************************************************
 184+ 9381              ;	15/02/23
 185+ 9381              ;
 186+ 9381
 187+ 9381 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9384 47           	ld b,a
 189+ 9385 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9388 23           1 inc hl
 191+ 9389 23           	inc hl
 192+ 938A 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 938C 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 938F CD C1 87     	call Extrae_address
 195+ 9392 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9395
 197+ 9395              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9395
 199+ 9395              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9395              ; Cuántos movimientos hemos hecho ??
 201+ 9395              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9395
 203+ 9395 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 9398 EB           	ex de,hl
 205+ 9399 A7           	and a
 206+ 939A ED 52        	sbc hl,de
 207+ 939C CB 3D        	srl l
 208+ 939E 3E 08        6 ld a,8
 209+ 93A0 95           	sub l
 210+ 93A1 30 1E        	jr nc,3F
 211+ 93A3
 212+ 93A3              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 93A3              ; B="0".
 214+ 93A3
 215+ 93A3 04           4 inc b
 216+ 93A4 3C           	inc a
 217+ 93A5 20 FC        	jr nz,4B
 218+ 93A7 78           	ld a,b
 219+ 93A8 08           	ex af,af
 220+ 93A9 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 93AC 23           5 inc hl
 222+ 93AD 23           	inc hl
 223+ 93AE 10 FC        	djnz 5B
 224+ 93B0 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 93B3 CD C1 87     	call Extrae_address
 226+ 93B6 22 9F 85     	ld (Puntero_objeto),hl
 227+ 93B9
 228+ 93B9              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 93B9              ; _(Posicion_actual).
 230+ 93B9
 231+ 93B9 21 9D 85     	ld hl,Posicion_actual
 232+ 93BC 34           	inc (hl)
 233+ 93BD 08               ex af,af
 234+ 93BE 6F           	ld l,a
 235+ 93BF 18 DD        	jr 6B
 236+ 93C1
 237+ 93C1              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 93C1
 239+ 93C1 47           3 ld b,a
 240+ 93C2 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 93C5 23           2 inc hl
 242+ 93C6 23           	inc hl
 243+ 93C7 10 FC        	djnz 2B
 244+ 93C9 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 93CC C9           8 ret
 246+ 93CD
 247+ 93CD              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 93CD              ;
 249+ 93CD              ;	24/7/22
 250+ 93CD              ;
 251+ 93CD              ;	modifica_parametros_1er_DESPLZ_2
 252+ 93CD              ;
 253+ 93CD              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 93CD              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 93CD              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 93CD
 257+ 93CD 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 93D0 A7           	and a
 259+ 93D1 20 1F        	jr nz,1F
 260+ 93D3 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 93D5 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 93D8
 263+ 93D8 21 9C 85     	ld hl,Columns
 264+ 93DB 34           	inc (hl)
 265+ 93DC 3A AF 85     	ld a,(Cuad_objeto)
 266+ 93DF E6 01        	and 1
 267+ 93E1 28 0F        	jr z,1F
 268+ 93E3 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 93E6 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 93E7 22 9D 85     	ld (Posicion_actual),hl
 271+ 93EA CD BE 95     	call Genera_coordenadas
 272+ 93ED CD 52 95     	call Inc_CTRL_DESPLZ
 273+ 93F0 18 03        	jr 2F
 274+ 93F2 CD 52 95     1 call Inc_CTRL_DESPLZ
 275+ 93F5 C9           2 ret
 276+ 93F6
 277+ 93F6              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 93F6              ;
 279+ 93F6              ;	24/7/22
 280+ 93F6              ;
 281+ 93F6              ;	Ciclo_completo.
 282+ 93F6              ;
 283+ 93F6              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 93F6              ;
 285+ 93F6              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 93F6              ; 	Decrementamos (Columns).
 287+ 93F6              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 93F6              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 93F6
 290+ 93F6
 291+ 93F6 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 93F9 FE FF        	cp $ff
 293+ 93FB 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 93FD E6 F0        	and $f0
 295+ 93FF 20 28        	jr nz,3F
 296+ 9401
 297+ 9401              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 9401
 299+ 9401 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 9404 47           	ld b,a
 301+ 9405 3E F8        	ld a,$f8
 302+ 9407 80           	add b
 303+ 9408 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 940B 18 1C        	jr 3F
 305+ 940D 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 9410 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 9411 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 9412 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 9415 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9418 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 941A 20 0A        	jr nz,2F
 312+ 941C 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 941F 23           	inc hl
 314+ 9420 22 9D 85     	ld (Posicion_actual),hl
 315+ 9423 CD BE 95     	call Genera_coordenadas
 316+ 9426
 317+ 9426              ; Inicia el puntero de Sprite.
 318+ 9426
 319+ 9426 CD D8 87     2 call Inicia_puntero_objeto_der
 320+ 9429 C9           3 ret
 321+ 942A
 322+ 942A              ; ******************************************************************************************************************************************************************************************
 323+ 942A              ;
 324+ 942A              ;	15/02/23
 325+ 942A              ;
 326+ 942A              ;	Mov_left.
 327+ 942A              ;
 328+ 942A              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 942A              ;
 330+ 942A              Mov_left
 331+ 942A
 332+ 942A 21 C9 85     	ld hl,Ctrl_0
 333+ 942D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 942F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 942F              ; 																	; _ en el caso de que no lo haya.
 336+ 942F 3A C9 85     	ld a,(Ctrl_0)
 337+ 9432 CB 77        	bit 6,a
 338+ 9434 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 9436
 340+ 9436 CD 4C 95     	call Stop_Amadeus_left
 341+ 9439 C8           	ret z
 342+ 943A 20 4A        	jr nz,8F
 343+ 943C
 344+ 943C 3A A1 85     11 ld a,(Coordenada_X)
 345+ 943F A7           	and a
 346+ 9440 20 44        	jr nz,8F
 347+ 9442
 348+ 9442 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 9445 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 9446 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 9448
 352+ 9448              ; ---------- ---------- ----------
 353+ 9448
 354+ 9448 3A B0 85     	ld a,(Vel_left)
 355+ 944B FE 02        	cp 2
 356+ 944D 28 0F        	jr z,1F
 357+ 944F 38 04        	jr c,6F
 358+ 9451 FE 04        	cp 4
 359+ 9453 28 12        	jr z,7F
 360+ 9455
 361+ 9455              ; ---------- ---------- ----------
 362+ 9455
 363+ 9455 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 9458 FE F8        	cp $f8
 365+ 945A 20 2A        	jr nz,8F
 366+ 945C 18 10        	jr 4F
 367+ 945E 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 9461 FE F9        	cp $f9
 369+ 9463 20 21        	jr nz,8F
 370+ 9465 18 07        	jr 4F
 371+ 9467 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 946A FE FB        	cp $fb
 373+ 946C 20 18        	jr nz,8F
 374+ 946E
 375+ 946E              ; ---------- ---------- ----------
 376+ 946E
 377+ 946E              4
 378+ 946E CD 74 95     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 9471              ;	call Reinicio
 380+ 9471
 381+ 9471              ; ---------- ---------- ----------
 382+ 9471
 383+ 9471 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9473 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9474
 386+ 9474              ;	ld hl,(Indice_Sprite_izq)
 387+ 9474              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9474
 389+ 9474 CD 8D 94     	call DESPLZ_IZQ
 390+ 9477 C1           	pop bc
 391+ 9478 10 F9        	djnz 5B
 392+ 947A 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 947D 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 947E 22 9D 85     	ld (Posicion_actual),hl
 395+ 9481 CD BE 95     	call Genera_coordenadas
 396+ 9484 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9486
 398+ 9486              ; ---------- ---------- ----------
 399+ 9486
 400+ 9486              ; Movemos, no hay recolocación.
 401+ 9486
 402+ 9486 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 9489 CD 8D 94     	call DESPLZ_IZQ
 404+ 948C C9           2 ret
 405+ 948D
 406+ 948D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 948D              ;
 408+ 948D              ;	22/9/22
 409+ 948D
 410+ 948D              DESPLZ_IZQ
 411+ 948D
 412+ 948D CD 9C 94     	call Desplaza_izquierda
 413+ 9490 CD E8 94         call modifica_parametros_1er_DESPLZ
 414+ 9493 CD 10 95     	call Ciclo_completo_2
 415+ 9496 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9499 CB BE        	res 7,(hl)
 417+ 949B C9           	ret
 418+ 949C
 419+ 949C              Desplaza_izquierda
 420+ 949C
 421+ 949C 3A B0 85     	ld a,(Vel_left)
 422+ 949F 47           	ld b,a
 423+ 94A0 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 94A3 23           1 inc hl
 425+ 94A4 23           	inc hl
 426+ 94A5 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 94A7 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 94AA CD C1 87     	call Extrae_address
 429+ 94AD 22 9F 85     	ld (Puntero_objeto),hl
 430+ 94B0
 431+ 94B0              ; Modifica (Puntero_DESPLZ_der).
 432+ 94B0
 433+ 94B0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 94B0              ; Cuántos movimientos hemos hecho ??
 435+ 94B0              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 94B0
 437+ 94B0 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 94B3 EB           	ex de,hl
 439+ 94B4 A7           	and a
 440+ 94B5 ED 52        	sbc hl,de
 441+ 94B7 CB 3D        	srl l
 442+ 94B9 3E 08        6 ld a,8
 443+ 94BB 95           	sub l
 444+ 94BC 30 1E        	jr nc,3F
 445+ 94BE
 446+ 94BE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 94BE              ; B="0".
 448+ 94BE
 449+ 94BE 04           4 inc b
 450+ 94BF 3C           	inc a
 451+ 94C0 20 FC        	jr nz,4B
 452+ 94C2 78           	ld a,b
 453+ 94C3 08           	ex af,af
 454+ 94C4 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 94C7 23           5 inc hl
 456+ 94C8 23           	inc hl
 457+ 94C9 10 FC        	djnz 5B
 458+ 94CB 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 94CE CD C1 87     	call Extrae_address
 460+ 94D1 22 9F 85     	ld (Puntero_objeto),hl
 461+ 94D4
 462+ 94D4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 94D4              ; _(Posicion_actual).
 464+ 94D4
 465+ 94D4 21 9D 85     	ld hl,Posicion_actual
 466+ 94D7 35           	dec (hl)
 467+ 94D8 08           	ex af,af
 468+ 94D9 6F           	ld l,a
 469+ 94DA 18 DD        	jr 6B
 470+ 94DC
 471+ 94DC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 94DC
 473+ 94DC 47           3 ld b,a
 474+ 94DD 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 94E0 23           2 inc hl
 476+ 94E1 23           	inc hl
 477+ 94E2 10 FC        	djnz 2B
 478+ 94E4 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 94E7 C9           8 ret
 480+ 94E8
 481+ 94E8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 94E8              ;
 483+ 94E8              ;	modifica_parametros_1er_DESPLZ
 484+ 94E8              ;
 485+ 94E8              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 94E8              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 94E8              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 94E8
 489+ 94E8 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 94EB A7           	and a
 491+ 94EC 20 1E        	jr nz,1F
 492+ 94EE 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 94EF 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 94F2 21 9C 85     	ld hl,Columns
 495+ 94F5 34           	inc (hl)
 496+ 94F6 3A AF 85     	ld a,(Cuad_objeto)
 497+ 94F9 E6 01        	and 1
 498+ 94FB 20 0F        	jr nz,1F
 499+ 94FD 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 9500 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 9501 22 9D 85     	ld (Posicion_actual),hl
 502+ 9504 CD BE 95     	call Genera_coordenadas
 503+ 9507 CD 63 95     	call Dec_CTRL_DESPLZ
 504+ 950A 18 03        	jr 2F
 505+ 950C CD 63 95     1 call Dec_CTRL_DESPLZ
 506+ 950F C9           2 ret
 507+ 9510
 508+ 9510              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 9510
 510+ 9510 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 9513 FE F7        	cp $f7
 512+ 9515 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9517 30 2C        	jr nc,3F
 514+ 9519
 515+ 9519              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9519
 517+ 9519 06 00        	ld b,0
 518+ 951B 04           4 inc b
 519+ 951C 3C           	inc a
 520+ 951D FE F7        	cp $f7
 521+ 951F 20 FA        	jr nz,4B
 522+ 9521 3E FF        	ld a,$ff
 523+ 9523 90           	sub b
 524+ 9524 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 9527 18 1C        	jr 3F
 526+ 9529
 527+ 9529              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9529
 529+ 9529 21 9C 85     1 ld hl,Columns
 530+ 952C 35           	dec (hl)
 531+ 952D AF           	xor a
 532+ 952E 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 9531 3A AF 85     	ld a,(Cuad_objeto)
 534+ 9534 E6 01        	and 1
 535+ 9536 28 0A        	jr z,2F
 536+ 9538 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 953B 2B           	dec hl
 538+ 953C 22 9D 85     	ld (Posicion_actual),hl
 539+ 953F CD BE 95     	call Genera_coordenadas
 540+ 9542
 541+ 9542              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 9542
 543+ 9542 CD EB 87     2 call Inicia_puntero_objeto_izq
 544+ 9545 C9           3 ret
 545+ 9546
 546+ 9546              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 9546              ;
 548+ 9546              ;	19/10/22
 549+ 9546              ;
 550+ 9546              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 9546              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 9546
 553+ 9546 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 9549 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 954B C9           	ret
 556+ 954C
 557+ 954C              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 954C              ;
 559+ 954C              ;	19/10/22
 560+ 954C              ;
 561+ 954C              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 954C              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 954C
 564+ 954C 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 954F FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 9551 C9           	ret
 567+ 9552
 568+ 9552              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 9552              ;
 570+ 9552              ;	24/7/22
 571+ 9552              ;
 572+ 9552              ;	Inc_CTRL_DESPLZ
 573+ 9552              ;
 574+ 9552              ;
 575+ 9552              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 9552
 577+ 9552 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 9555 3A B1 85     	ld a,(Vel_right)
 579+ 9558 A7           	and a
 580+ 9559 28 06        	jr z,1F
 581+ 955B 47           	ld b,a
 582+ 955C 34           3 inc (hl)
 583+ 955D 10 FD        	djnz 3B
 584+ 955F 18 01        	jr 2F
 585+ 9561 34           1 inc (hl)
 586+ 9562 C9           2 ret
 587+ 9563
 588+ 9563              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 9563              ;
 590+ 9563              ;	5/2/23
 591+ 9563              ;
 592+ 9563              ;	Dec_CTRL_DESPLZ
 593+ 9563              ;
 594+ 9563              ;
 595+ 9563              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 9563
 597+ 9563 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9566 3A B0 85     	ld a,(Vel_left)
 599+ 9569 A7           	and a
 600+ 956A 28 06        	jr z,1F
 601+ 956C 47           	ld b,a
 602+ 956D 35           3 dec (hl)
 603+ 956E 10 FD        	djnz 3B
 604+ 9570 18 01        	jr 2F
 605+ 9572 35           1 dec (hl)
 606+ 9573 C9           2 ret
 607+ 9574
 608+ 9574              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9574
 610+ 9574 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9577 01 1F 00     	ld bc,31
 612+ 957A A7           	and a
 613+ 957B ED 4A        	adc hl,bc
 614+ 957D 22 9D 85     	ld (Posicion_actual),hl
 615+ 9580 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9583 CB C6        	set 0,(hl)
 617+ 9585 C9           	ret
 618+ 9586
 619+ 9586              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9586
 621+ 9586 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9589 01 1F 00     	ld bc,31
 623+ 958C A7           	and a
 624+ 958D ED 42        	sbc hl,bc
 625+ 958F 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9592 21 C9 85     	ld hl,Ctrl_0
 627+ 9595 CB CE        	set 1,(hl)
 628+ 9597 C9           	ret
 629+ 9598
 630+ 9598              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9598
 632+ 9598 24           Reaparece_abajo inc h
 633+ 9599 01 E0 17     	ld bc,$17e0
 634+ 959C A7           	and a
 635+ 959D ED 4A        	adc hl,bc
 636+ 959F 22 9D 85     	ld (Posicion_actual),hl
 637+ 95A2 21 C9 85     	ld hl,Ctrl_0
 638+ 95A5 CB D6        	set 2,(hl)
 639+ 95A7 C9           	ret
 640+ 95A8
 641+ 95A8              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 95A8
 643+ 95A8 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 95AB A7           	and a
 645+ 95AC ED 42        	sbc hl,bc
 646+ 95AE 22 9D 85     	ld (Posicion_actual),hl
 647+ 95B1 21 C9 85     	ld hl,Ctrl_0
 648+ 95B4 CB DE        	set 3,(hl)
 649+ 95B6 C9           	ret
 650+ 95B7
 651+ 95B7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 95B7
 653+ 95B7 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 95BA 22 9D 85     	ld (Posicion_actual),hl
 655+ 95BD C9           	ret
# file closed: Direcciones.asm
 929  95BE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 95BE              ; ------------------------------------------------------------------------
   2+ 95BE              ;
   3+ 95BE              ;	02/04/23
   4+ 95BE              ;
   5+ 95BE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 95BE              ;	Fila superior "0", Columna izquierda "0".
   7+ 95BE              ;
   8+ 95BE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 95BE              ;
  10+ 95BE              ;	Modifica: A,BC y DE.
  11+ 95BE
  12+ 95BE C5           Genera_coordenadas push bc
  13+ 95BF E5           	push hl
  14+ 95C0 D5           	push de
  15+ 95C1
  16+ 95C1 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 95C4
  18+ 95C4 7D           	ld a,l
  19+ 95C5 E6 1F        	and $1f
  20+ 95C7 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 95CA
  22+ 95CA CD 92 92     	call calcula_tercio
  23+ 95CD 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 95CE
  25+ 95CE 1E 00        	ld e,0
  26+ 95D0 7D           	ld a,l
  27+ 95D1 E6 E0        	and $e0
  28+ 95D3 28 01        	jr z,1F
  29+ 95D5 04           	inc b
  30+ 95D6
  31+ 95D6 04           1 inc b
  32+ 95D7 05           	dec b
  33+ 95D8 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 95DA              ;														; _ , salimos.
  35+ 95DA 1C           3 inc e
  36+ 95DB D6 20        	sub 32
  37+ 95DD 20 FB        	jr nz,3B
  38+ 95DF 10 F5        	djnz 1B
  39+ 95E1
  40+ 95E1 7B           2 ld a,e
  41+ 95E2 32 A2 85     	ld (Coordenada_y),a
  42+ 95E5
  43+ 95E5 D1           	pop de
  44+ 95E6 E1           	pop hl
  45+ 95E7 C1           	pop bc
  46+ 95E8
  47+ 95E8 C9           	ret
  48+ 95E9
  49+ 95E9              ; ------------------------------------------------------------------------
  50+ 95E9              ;	28/03/23
  51+ 95E9              ;
  52+ 95E9              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 95E9              ;	Fila superior "0", Columna izquierda "0".
  54+ 95E9              ;
  55+ 95E9              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 95E9              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 95E9              ;
  58+ 95E9              ;		DE="$120d"
  59+ 95E9              ;
  60+ 95E9              ;		D, (Coordenada_X), Columnas, $12
  61+ 95E9              ;		E, (Coordenada_y), Filas, $0d
  62+ 95E9              ;
  63+ 95E9              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 95E9
  65+ 95E9              ;	Modifica: A,BC y DE.
  66+ 95E9
  67+ 95E9
  68+ 95E9              Genera_coordenadas_disparo
  69+ 95E9
  70+ 95E9              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 95E9
  72+ 95E9 7D           	ld a,l
  73+ 95EA E6 1F        	and $1f
  74+ 95EC 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 95ED CD 92 92     	call calcula_tercio
  76+ 95F0 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 95F1 1E 00        	ld e,0
  78+ 95F3 7D           	ld a,l
  79+ 95F4 E6 E0        	and $e0
  80+ 95F6 28 01        	jr z,1F
  81+ 95F8 04           	inc b
  82+ 95F9 1C           1 inc e
  83+ 95FA D6 20        	sub 32
  84+ 95FC 20 FB        	jr nz,1B
  85+ 95FE 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9600 C9           	ret
  87+ 9601
# file closed: Genera_coordenadas.asm
 930  9601              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9601
   2+ 9601
   3+ 9601              ;   11/8/22
   4+ 9601              ;
   5+ 9601              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9601              ;
   7+ 9601              ;   Mov_obj.asm
   8+ 9601              ;
   9+ 9601              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 9601              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 9601              ;
  12+ 9601              ;   Codificación:
  13+ 9601              ;
  14+ 9601              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 9601
  16+ 9601              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 9601
  18+ 9601 02 40 00     Arriba db 2,%01000000,0
  19+ 9604 02 80 00     Abajo db 2,%10000000,0
  20+ 9607 02 20 00     Derecha db 2,%00100000,0
  21+ 960A 02 10 00     Izquierda db 2,%00010000,0
  22+ 960D 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 9611 60 42 60 40
  22+ 9615 63
  23+ 9616 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 961A 22 A3 80 A0
  24+ 961E 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 9622 84 A0 83 A0
  25+ 9626 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 962A 80 A3 22 A0
  26+ 962E 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 9632 40 60 42 60
  27+ 9636 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 963A
  29+ 963A 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 963E 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 9642 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9646 84 00
  32+ 9648 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 964C 84 00
  33+ 964E 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 9652 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9656 1F 1F 1F 1F
  35+ 965A 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 965E 1F 1F 1F 1F
  35+ 9662 1F
  36+ 9663 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9667 2F 2F 2F 2F
  36+ 966B 2F 2F
  37+ 966D 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 9671 2F 2F 00
  38+ 9674
  39+ 9674              ; ----- ----- ----- ----- -----
  40+ 9674
  41+ 9674 52 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9676 4E 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9678 0A 96        Indice_mov_Izquierda defw Izquierda
  44+ 967A 07 96        Indice_mov_Derecha defw Derecha
  45+ 967C 04 96        Indice_mov_Abajo defw Abajo
  46+ 967E 01 96        Indice_mov_Arriba defw Arriba
  47+ 9680 3E 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9682 42 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9684 3A 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9686 48 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9688 0D 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 968A              ; ----- ----- ----- ----- -----
  53+ 968A
  54+ 968A 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 968D A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 968E 28 02            jr z,1F
  57+ 9690 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9692 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9695 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9697 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 969A              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 969A 2A CD 85         ld hl,(Puntero_mov)
  63+ 969D 7E               ld a,(hl)
  64+ 969E 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 96A1 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 96A2 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 96A5
  68+ 96A5 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 96A8 A7               and a
  70+ 96A9 20 0C            jr nz,12F
  71+ 96AB 2A CD 85         ld hl,(Puntero_mov)
  72+ 96AE 7E               ld a,(hl)
  73+ 96AF A7               and a
  74+ 96B0 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 96B2 E6 0F            and $0f
  76+ 96B4 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 96B7              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 96B7 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 96BA CB 7E            bit 7,(hl)
  80+ 96BC 28 03            jr z,2F
  81+ 96BE CD B0 92         call Mov_down
  82+ 96C1 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 96C4 CB 76            bit 6,(hl)
  84+ 96C6 28 03            jr z,3F
  85+ 96C8 CD DE 92         call Mov_up
  86+ 96CB 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 96CE CB 6E            bit 5,(hl)
  88+ 96D0 28 03            jr z,4F
  89+ 96D2 CD 0C 93         call Mov_right
  90+ 96D5 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 96D8 CB 66            bit 4,(hl)
  92+ 96DA 28 03            jr z,5F
  93+ 96DC CD 2A 94         call Mov_left
  94+ 96DF
  95+ 96DF              ; ---------- --------- --------- ---------- ----------
  96+ 96DF
  97+ 96DF 3A D1 85     5 ld a,(Repetimos_db)
  98+ 96E2 A7               and a
  99+ 96E3 28 07            jr z,6F
 100+ 96E5 3D               dec a
 101+ 96E6 32 D1 85         ld (Repetimos_db),a
 102+ 96E9 28 01            jr z,6f
 103+ 96EB C9           11 ret
 104+ 96EC 21 CF 85     6 ld hl,Contador_db_mov
 105+ 96EF 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 96F0 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 96F3 23               inc hl
 108+ 96F4 22 CD 85         ld (Puntero_mov),hl
 109+ 96F7 18 F2            jr 11B
 110+ 96F9 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 96FC 3A D0 85         ld a,(Incrementa_puntero)
 112+ 96FF 47               ld b,a
 113+ 9700 23           8 inc hl
 114+ 9701 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9703 5E               ld e,(hl)
 116+ 9704 23               inc hl
 117+ 9705 56               ld d,(hl)
 118+ 9706 EB               ex de,hl
 119+ 9707 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 970A 18 DF            jr 11B
 121+ 970C
 122+ 970C              ; ---------- --------- --------- ---------- ----------
 123+ 970C              ;
 124+ 970C              ;   11/8/22
 125+ 970C              ;
 126+ 970C              ;   Prepara_Puntero_mov
 127+ 970C
 128+ 970C E5           Prepara_Puntero_mov push hl
 129+ 970D D5               push de
 130+ 970E 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 9711 5E               ld e,(hl)
 132+ 9712 23               inc hl
 133+ 9713 56               ld d,(hl)
 134+ 9714 EB               ex de,hl
 135+ 9715 22 CD 85         ld (Puntero_mov),hl
 136+ 9718 D1               pop de
 137+ 9719 E1               pop hl
 138+ 971A C9               ret
 139+ 971B
 140+ 971B              ; ---------- --------- --------- ---------- ----------
 141+ 971B              ;
 142+ 971B              ;   11/8/22
 143+ 971B              ;
 144+ 971B              ;   Reinicia_el_movimiento
 145+ 971B
 146+ 971B CD 0C 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 971E AF               xor a
 148+ 971F 32 CF 85         ld (Contador_db_mov),a
 149+ 9722 32 D0 85         ld (Incrementa_puntero),a
 150+ 9725 C3 8A 96         jp Movimiento
 151+ 9728 C9               ret
 152+ 9729              ; ---------- --------- --------- ---------- ----------
 153+ 9729
 154+ 9729
 155+ 9729
 156+ 9729
 157+ 9729
 158+ 9729
 159+ 9729
 160+ 9729
 161+ 9729
 162+ 9729
 163+ 9729
 164+ 9729
 165+ 9729
 166+ 9729
 167+ 9729
 168+ 9729
 169+ 9729
 170+ 9729
# file closed: Patrones_de_mov.asm
 931  9729              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9729              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9729              ;
   3+ 9729              ;	3/1/23
   4+ 9729              ;
   5+ 9729              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9729
   7+ 9729              ;	ADC HL,SP	LD (addr),SP
   8+ 9729              ;	ADD HL,SP	LD SP,(addr)
   9+ 9729              ;	ADD IX,SP	LD SP,nn
  10+ 9729              ; 	ADD IY,SP	LD SP,HL
  11+ 9729              ;				LD SP,IX
  12+ 9729              ;	DEC SP		LD SP,IY
  13+ 9729
  14+ 9729              ;	EX (SP),HL
  15+ 9729              ;	EX (SP),IX
  16+ 9729              ;	EX (SP),IY
  17+ 9729
  18+ 9729              ;	INC SP
  19+ 9729
  20+ 9729
  21+ 9729                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0 ED 73 DF 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
  31+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  32+ 7FA7
  33+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  34+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  35+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  36+ 7FAC
  37+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  38+ 7FAF CB 47            bit 0,a
  39+ 7FB1 28 05            jr z,2F
  40+ 7FB3
  41+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  42+ 7FB6
  43+ 7FB6 18 03            jr 4F
  44+ 7FB8
  45+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  46+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  47+ 7FBD
  48+ 7FBD D1           1 pop de
  49+ 7FBE 73               ld (hl),e
  50+ 7FBF 23               inc hl
  51+ 7FC0 72               ld (hl),d
  52+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  53+ 7FC2 10 F9            djnz 1B
  54+ 7FC4
  55+ 7FC4 A7               and a
  56+ 7FC5 28 05            jr z,5F
  57+ 7FC7
  58+ 7FC7 22 E5 85         ld (Stack_snapshot_disparos),hl
  59+ 7FCA 18 03            jr 6F
  60+ 7FCC
  61+ 7FCC 22 E3 85     5 ld (Stack_snapshot),hl
  62+ 7FCF ED 7B DF 85  6 ld sp,(Stack)
  63+ 7FD3
  64+ 7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  65+ 7FD4
  66+ 7FD4
# file closed: Guarda_foto_registros.asm
 932  7FD4
 933  7FD4              	SAVESNA "Pruebas.sna", START
 934  7FD4
 935  7FD4
 936  7FD4
# file closed: Banco_de_pruebas.asm
