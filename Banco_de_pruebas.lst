# file opened: Banco_de_Pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 DC 87  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD 6D 8C     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD 7D 8C     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 E6 87     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B DC 87  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC 72 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 C4 85        	defw Caja_2
 110+ 8574 D0 85        	defw Caja_3
 111+ 8576 DC 85        	defw Caja_4
 112+ 8578 E8 85        	defw Caja_5
 113+ 857A F4 85        	defw Caja_6
 114+ 857C 00 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8              ;
 152+ 85B8              ;	22/01/24
 153+ 85B8              ;
 154+ 85B8              ; 	Cada caja tiene 12 bytes !!!
 155+ 85B8
 156+ 85B8 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 157+ 85BA 00           	db %00000000										; (Attr).
 158+ 85BB              ;	db 0												; (Cuad_objeto).
 159+ 85BB 00           	db 0												; (Impacto).
 160+ 85BC 00 00        	defw 0												; (Puntero_de_impresion).
 161+ 85BE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 162+ 85C0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 163+ 85C2 00           	db 0												; (Ctrl_0).
 164+ 85C3 00           	db 0												; (Ctrl_2).
 165+ 85C4
 166+ 85C4              ; ---------- ---------- ---------- ---------- ----------
 167+ 85C4
 168+ 85C4 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 169+ 85C6 00           	db %00000000										; (Attr).
 170+ 85C7              ;	db 0												; (Cuad_objeto).
 171+ 85C7 00           	db 0												; (Impacto).
 172+ 85C8 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 85CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 85CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 85CE 00           	db 0												; (Ctrl_0).
 176+ 85CF 00           	db 0												; (Ctrl_2).
 177+ 85D0
 178+ 85D0              ; ---------- ---------- ---------- ---------- ----------
 179+ 85D0
 180+ 85D0 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 181+ 85D2 00           	db %00000000										; (Attr).
 182+ 85D3              ;	db 0												; (Cuad_objeto).
 183+ 85D3 00           	db 0												; (Impacto).
 184+ 85D4 00 00        	defw 0												; (Puntero_de_impresion).
 185+ 85D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 186+ 85D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 187+ 85DA 00           	db 0												; (Ctrl_0).
 188+ 85DB 00           	db 0												; (Ctrl_2).
 189+ 85DC
 190+ 85DC              ; ---------- ---------- ---------- ---------- ----------
 191+ 85DC
 192+ 85DC 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 193+ 85DE 00           	db %00000000										; (Attr).
 194+ 85DF              ;	db 0												; (Cuad_objeto).
 195+ 85DF 00           	db 0												; (Impacto).
 196+ 85E0 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 85E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 85E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 85E6 00           	db 0												; (Ctrl_0).
 200+ 85E7 00           	db 0												; (Ctrl_2).
 201+ 85E8
 202+ 85E8              ; ---------- ---------- ---------- ---------- ----------
 203+ 85E8
 204+ 85E8 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 205+ 85EA 00           	db %00000000										; (Attr).
 206+ 85EB              ;	db 0												; (Cuad_objeto).
 207+ 85EB 00           	db 0												; (Impacto).
 208+ 85EC 00 00        	defw 0												; (Puntero_de_impresion).
 209+ 85EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 210+ 85F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 211+ 85F2 00           	db 0												; (Ctrl_0).
 212+ 85F3 00           	db 0												; (Ctrl_2).
 213+ 85F4
 214+ 85F4              ; ---------- ---------- ---------- ---------- ----------
 215+ 85F4
 216+ 85F4 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 217+ 85F6 00           	db %00000000										; (Attr).
 218+ 85F7              ;	db 0												; (Cuad_objeto).
 219+ 85F7 00           	db 0												; (Impacto).
 220+ 85F8 00 00        	defw 0												; (Puntero_de_impresion).
 221+ 85FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 222+ 85FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 223+ 85FE 00           	db 0												; (Ctrl_0).
 224+ 85FF 00           	db 0												; (Ctrl_2).
 225+ 8600
 226+ 8600              ; ---------- ---------- ---------- ---------- ----------
 227+ 8600
 228+ 8600 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 229+ 8602 00           	db %00000000										; (Attr).
 230+ 8603              ;	db 0												; (Cuad_objeto).
 231+ 8603 00           	db 0												; (Impacto).
 232+ 8604 00 00        	defw 0												; (Puntero_de_impresion).
 233+ 8606 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 234+ 8608 00 00        	defw 0 												; (Contador_de_mov_masticados).
 235+ 860A 00           	db 0												; (Ctrl_0).
 236+ 860B 00           	db 0												; (Ctrl_2).
 237+ 860C
 238+ 860C              ; -------------------------------------------------------------------------------------
 239+ 860C              ;
 240+ 860C              ;	11/1/24
 241+ 860C              ;
 242+ 860C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 243+ 860C              ;
 244+ 860C              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 245+ 860C              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 246+ 860C              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 247+ 860C              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 248+ 860C
 249+ 860C              Indice_de_definiciones_de_entidades
 250+ 860C
 251+ 860C 10 86        	defw Entidad_1
 252+ 860E 1D 86        	defw Entidad_2
 253+ 8610
 254+ 8610              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 255+ 8610
 256+ 8610              ;	BADSAT, (Satélite malvado).
 257+ 8610
 258+ 8610 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 259+ 8613 04           	db %00000100										; (Attr).
 260+ 8614 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 261+ 8616 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 262+ 8618 03 40        	defw $4003                                      	; (Posicion_inicio).
 263+ 861A 01           	db 1												; (Cuad_objeto).
 264+ 861B 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 265+ 861D
 266+ 861D 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 267+ 8620 02           	db %00000010										; (Attr).
 268+ 8621 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 269+ 8623 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 270+ 8625 40 50        	defw $5040                                      	; (Posicion_inicio).
 271+ 8627 01           	db 1												; (Cuad_objeto).
 272+ 8628 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 273+ 862A
# file closed: Cajas_y_disparos.asm
 105  862A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 862A              ; 19/1/24
   2+ 862A
   3+ 862A              Indice_de_niveles
   4+ 862A
   5+ 862A 32 86        	defw Nivel_1
   6+ 862C 3A 86        	defw Nivel_2
   7+ 862E
   8+ 862E              ;	...
   9+ 862E              ;	...
  10+ 862E              ;	+ Niveles ...
  11+ 862E
  12+ 862E 00 00        	defw 0
  13+ 8630 00 00        	defw 0
  14+ 8632
  15+ 8632 03           Nivel_1 db 3									; Nº de entidades.
  16+ 8633 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8637 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 863A
  19+ 863A 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 863B 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 863F 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8643 01 02
  22+ 8645 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8649 01 02
  23+ 864B
  24+ 864B              ;---------------------------------------------------------------------------------------------------------------
  25+ 864B              ;
  26+ 864B              ;   19/1/24
  27+ 864B              ;
  28+ 864B              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 864B              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 864B              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 864B              ;	_ de la 1ª entidad del Nivel.
  32+ 864B              ;
  33+ 864B              ;	MODIFICA: HL,DE y A.
  34+ 864B              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 864B
  36+ 864B              Inicializa_Nivel
  37+ 864B
  38+ 864B 2A 05 88     	ld hl,(Puntero_indice_NIVELES)
  39+ 864E CD 50 8B     	call Extrae_address
  40+ 8651 7E           	ld a,(hl)
  41+ 8652 32 D0 87     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 8655 23           	inc hl
  43+ 8656 CD 60 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 8659 22 07 88     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 865C CD 69 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 865F C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 8660
  48+ 8660              ; ----------------------
  49+ 8660
  50+ 8660 11 AF 87     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 8663 01 04 00     	ld bc,4
  52+ 8666 ED B0        	ldir
  53+ 8668 C9           	ret
  54+ 8669
  55+ 8669 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 866A CD EB 86         call Calcula_salto_en_BC
  57+ 866D 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 8670 A7               and a
  59+ 8671 ED 4A            adc hl,bc
  60+ 8673 CD 50 8B         call Extrae_address
  61+ 8676 22 BB 87         ld (Puntero_indice_mov),hl
  62+ 8679 C9               ret
  63+ 867A
  64+ 867A              ;---------------------------------------------------------------------------------------------------------------
  65+ 867A              ;
  66+ 867A              ;   5/1/24
  67+ 867A              ;
  68+ 867A              ;	Destruye A,BC,HL,DE
  69+ 867A
  70+ 867A              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 867A              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 867A
  73+ 867A              Prepara_cajas_de_entidades
  74+ 867A
  75+ 867A              ; Preparamos los punteros de las cajas de entidades:
  76+ 867A
  77+ 867A CD B8 8A     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 867D              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 867D CD 68 87     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 8680
  81+ 8680 2A 07 88     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 8683
  83+ 8683              Tipo_de_entidad
  84+ 8683
  85+ 8683 7E           	ld a,(hl)
  86+ 8684 3D           	dec a
  87+ 8685 20 FE        	jr nz,$														; STOP si no es una entidad de tipo 1.
  88+ 8687
  89+ 8687 21 E7 87     	ld hl,Ctrl_4
  90+ 868A CB C6        	set 0,(hl)													; FLAG que indica que se trata de una entidad de (Tipo) 1.
  91+ 868C
  92+ 868C              ;	La 1ª entidad del Nivel es una Entidad de tipo 1.
  93+ 868C              ;	Vamos a cargar la definición de una entidad de tipo 1 en DRAW para poder generar todos sus movimientos masticados.
  94+ 868C
  95+ 868C 2A 07 88     2 ld hl,(Datos_de_nivel)
  96+ 868F
  97+ 868F              ; En este punto:
  98+ 868F              ;
  99+ 868F              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
 100+ 868F              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
 101+ 868F
 102+ 868F C5           1 push bc 														; Guardo el nº de cajas a rellenar.
 103+ 8690
 104+ 8690 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 105+ 8691 CD EB 86     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 106+ 8694
 107+ 8694 21 0C 86     	ld hl,Indice_de_definiciones_de_entidades
 108+ 8697 CD F3 86     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 109+ 869A              ;
 110+ 869A              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 111+ 869A
 112+ 869A 18 FE        	jr $ ;!!!!!!!!!!!!
 113+ 869C
 114+ 869C CD FD 86     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 115+ 869F CD 08 8A     	call Construye_movimientos_masticados_entidad
 116+ 86A2
 117+ 86A2              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 118+ 86A2              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 119+ 86A2              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 120+ 86A2              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 121+ 86A2              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 122+ 86A2
 123+ 86A2 CD CB 86     	call Activa_FLAG_mov_masticados_completos
 124+ 86A5
 125+ 86A5
 126+ 86A5 CD 5D 8A     	call Cargamos_registros_con_mov_masticado
 127+ 86A8 CD 16 71     	call Guarda_foto_registros
 128+ 86AB F3           	di
 129+ 86AC
 130+ 86AC              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 131+ 86AC
 132+ 86AC              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 133+ 86AC              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 134+ 86AC
 135+ 86AC              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 86AC
 137+ 86AC CD C3 86     	call Decrementa_Contador_de_mov_masticados
 138+ 86AF
 139+ 86AF              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 86AF
 141+ 86AF 2A A2 87     	ld hl,(Puntero_de_impresion)
 142+ 86B2 CD 1F 9B     	call Genera_coordenadas
 143+ 86B5
 144+ 86B5 CD 30 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 145+ 86B8 CD 9E 8B     	call Incrementa_punteros_de_cajas							; Nos situamos en la siguiente caja de entidades.
 146+ 86BB
 147+ 86BB 2A 07 88     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 148+ 86BE 23           	inc hl 														; _ entidad del Nivel.
 149+ 86BF
 150+ 86BF C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 151+ 86C0 10 C1        	djnz Tipo_de_entidad
 152+ 86C2
 153+ 86C2 C9           	ret
 154+ 86C3              ; ---------------------------------------------------------------------
 155+ 86C3              ;
 156+ 86C3              ;	22/01/24
 157+ 86C3
 158+ 86C3 2A A6 87     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 159+ 86C6 2B           	dec hl
 160+ 86C7 22 A6 87     	ld (Contador_de_mov_masticados),hl
 161+ 86CA C9           	ret
 162+ 86CB
 163+ 86CB              ; ---------------------------------------------------------------------
 164+ 86CB              ;
 165+ 86CB              ;	22/01/24
 166+ 86CB
 167+ 86CB 21 E7 87     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 168+ 86CE CB 46        	bit 0,(hl)
 169+ 86D0 20 0D        	jr nz,1F
 170+ 86D2 CB 4E        	bit 1,(hl)
 171+ 86D4 20 0C        	jr nz,2F
 172+ 86D6 CB 56        	bit 2,(hl)
 173+ 86D8 20 0B        	jr nz,3F
 174+ 86DA CB 5E        	bit 3,(hl)
 175+ 86DC 20 0A        	jr nz,4F
 176+ 86DE C9           	ret
 177+ 86DF
 178+ 86DF CB E6        1 set 4,(hl)
 179+ 86E1 C9           	ret
 180+ 86E2 CB EE        2 set 5,(hl)
 181+ 86E4 C9           	ret
 182+ 86E5 CB F6        3 set 6,(hl)
 183+ 86E7 C9           	ret
 184+ 86E8 CB FE        4 set 7,(hl)
 185+ 86EA C9           	ret
 186+ 86EB
 187+ 86EB              ;	------------------------------------------------------------------------------------
 188+ 86EB              ;
 189+ 86EB              ;	12/01/24
 190+ 86EB              ;
 191+ 86EB              ;	INPUTS:	A contiene el (Tipo) de entidad.
 192+ 86EB              ;
 193+ 86EB              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 194+ 86EB              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 195+ 86EB
 196+ 86EB CB 27        Calcula_salto_en_BC sla a
 197+ 86ED D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 198+ 86EF 4F           	ld c,a
 199+ 86F0 06 00        	ld b,0
 200+ 86F2 C9           	ret
 201+ 86F3
 202+ 86F3              ; ------------------------------------------------------------------
 203+ 86F3              ;
 204+ 86F3              ;	19/1/24
 205+ 86F3              ;
 206+ 86F3              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 207+ 86F3              ;	Actualiza (Datos_de_entidad) con esa dirección.
 208+ 86F3
 209+ 86F3 A7           Situa_en_datos_de_definicion and a
 210+ 86F4 ED 4A        	adc hl,bc
 211+ 86F6 CD 50 8B     	call Extrae_address
 212+ 86F9 22 D6 87         ld (Datos_de_entidad),hl
 213+ 86FC C9           	ret
 214+ 86FD
 215+ 86FD              ; ------------------------------------------------------------------
 216+ 86FD
 217+ 86FD              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 218+ 86FD              ; 	inc de
 219+ 86FD              ; 	inc de
 220+ 86FD              ; 	ex de,hl
 221+ 86FD              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 222+ 86FD              ; 	ret
 223+ 86FD
 224+ 86FD              ; ----------------------------------------------------------------------------------------------------------
 225+ 86FD              ;
 226+ 86FD              ;	19/1/24
 227+ 86FD              ;
 228+ 86FD              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 229+ 86FD              ;	_ de entidad.
 230+ 86FD              ;
 231+ 86FD              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 232+ 86FD              ;			DE apunta al 1er .db de la bandeja DRAW, (Tipo).
 233+ 86FD              ;
 234+ 86FD              ;	MODIFICA: HL,DE y BC
 235+ 86FD
 236+ 86FD
 237+ 86FD              Definicion_de_entidad_a_bandeja_DRAW
 238+ 86FD
 239+ 86FD 11 85 87     	ld de,Variables_DRAW	 					; DE apunta al 1er .db de las variables DRAW
 240+ 8700
 241+ 8700 01 03 00     	ld bc,3
 242+ 8703 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 243+ 8705              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 244+ 8705 01 07 00     	ld bc,7
 245+ 8708 CD 5E 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 246+ 870B
 247+ 870B 01 05 00     	ld bc,5
 248+ 870E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 249+ 8710              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 250+ 8710 01 04 00     	ld bc,4
 251+ 8713 CD 5E 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 252+ 8716
 253+ 8716 01 03 00     	ld bc,3
 254+ 8719 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 255+ 871B              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 256+ 871B
 257+ 871B 01 09 00     	ld bc,9
 258+ 871E CD 5E 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 259+ 8721
 260+ 8721 01 02 00     	ld bc,2
 261+ 8724 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 262+ 8726
 263+ 8726 01 08 00     	ld bc,8
 264+ 8729 CD 5E 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 265+ 872C
 266+ 872C 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 267+ 872E 12           	ld (de),a 									; Vuelco (Frames_explosion).
 268+ 872F
 269+ 872F C9           	ret
 270+ 8730
 271+ 8730              ; ----------------------------------------------------------------------------------------------------------
 272+ 8730              ;
 273+ 8730              ;	22/01/24
 274+ 8730              ;
 275+ 8730              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 276+ 8730              ;
 277+ 8730              ;	Las cajas contienen entidades iniciadas:
 278+ 8730              ;
 279+ 8730              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 280+ 8730              ;
 281+ 8730              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 282+ 8730              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 283+ 8730              ;
 284+ 8730              ;	MODIFICA: HL,DE y BC
 285+ 8730
 286+ 8730 21 8C 87     Parametros_de_bandeja_DRAW_a_caja ld hl,Variables_DRAW+7	; HL situado en (Coordenada_X) de la bandeja DRAW.
 287+ 8733 ED 5B CA 87  	ld de,(Puntero_store_caja) 								; DE situado en el 1er .db de la correspondiente caja de entidades.
 288+ 8737 01 02 00     	ld bc,2
 289+ 873A ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 290+ 873C              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 291+ 873C 23           	inc hl
 292+ 873D 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 293+ 873E 12           	ld (de),a
 294+ 873F 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 295+ 8740
 296+ 8740 01 0C 00     	ld bc,12
 297+ 8743 CD 64 87     	call Situa_HL
 298+ 8746 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 299+ 8747 12           	ld (de),a
 300+ 8748 13           	inc de 													; (Impacto), volcado a la caja.
 301+ 8749              ;															; DE situado ahora en (Puntero_de_impresion).
 302+ 8749 01 07 00     	ld bc,7
 303+ 874C CD 64 87     	call Situa_HL
 304+ 874F 01 07 00     	ld bc,7
 305+ 8752 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 306+ 8754              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 307+ 8754              ;															; HL apunta ahora a (Columnas).
 308+ 8754 01 04 00     	ld bc,4
 309+ 8757 CD 64 87     	call Situa_HL
 310+ 875A 7E           	ld a,(hl)
 311+ 875B 12           	ld (de),a 												; Volcamos (Ctrl_2).
 312+ 875C 13           	inc de
 313+ 875D
 314+ 875D C9           	ret
 315+ 875E
 316+ 875E              ; -------------------------------------------------------------
 317+ 875E
 318+ 875E EB           Situa_DE ex de,hl
 319+ 875F A7           	and a
 320+ 8760 ED 4A        	adc hl,bc
 321+ 8762 EB           	ex de,hl
 322+ 8763 C9           	ret
 323+ 8764
 324+ 8764 A7           Situa_HL and a
 325+ 8765 ED 4A        	adc hl,bc
 326+ 8767 C9           	ret
 327+ 8768
 328+ 8768              ;---------------------------------------------------------------------------------------------------------------
 329+ 8768              ;
 330+ 8768              ;	5/1/24
 331+ 8768              ;
 332+ 8768              ;	INICIALIZA (Numero_parcial_de_entidades).
 333+ 8768              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 334+ 8768              ;
 335+ 8768              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 336+ 8768              ;
 337+ 8768              ;	(Numero_parcial_de_entidades)="7".
 338+ 8768              ;
 339+ 8768              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 340+ 8768              ;
 341+ 8768              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 342+ 8768              ;
 343+ 8768              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 344+ 8768              ;	MODIFICA: A y B.
 345+ 8768              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 346+ 8768
 347+ 8768              Inicializa_Numero_parcial_de_entidades
 348+ 8768
 349+ 8768              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 350+ 8768
 351+ 8768 3A D0 87     	ld a,(Numero_de_entidades)
 352+ 876B A7           	and a
 353+ 876C
 354+ 876C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 355+ 876C              ;	jr z,$
 356+ 876C              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 357+ 876C
 358+ 876C 20 03        	jr nz,3F
 359+ 876E
 360+ 876E              ; ---------- ---------- ----------
 361+ 876E
 362+ 876E              ;! RESET para pruebas. Omitir esta línea en modo normal.
 363+ 876E              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 364+ 876E
 365+ 876E CD 4B 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 366+ 8771
 367+ 8771              ; ---------- ---------- ----------
 368+ 8771
 369+ 8771 3A D0 87     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 370+ 8774 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 371+ 8776 38 08        	jr c,1F
 372+ 8778
 373+ 8778              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 374+ 8778              ; Actualizamos variables.
 375+ 8778
 376+ 8778 3E 07        	ld a,7
 377+ 877A 32 D1 87     	ld (Numero_parcial_de_entidades),a
 378+ 877D 47           	ld b,a
 379+ 877E 18 04        	jr 2F
 380+ 8780
 381+ 8780              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 382+ 8780              ; (Numero_de_entidades)="0".
 383+ 8780
 384+ 8780 32 D1 87     1 ld (Numero_parcial_de_entidades),a
 385+ 8783 47           	ld b,a
 386+ 8784 C9           2 ret
# file closed: Niveles.asm
 106  8785
 107  8785              ; ******************************************************************************************************************************************************************************************
 108  8785              ; Constantes.
 109  8785              ; ******************************************************************************************************************************************************************************************
 110  8785              ;
 111  8785              ; 25/12/23
 112  8785
 113  8785              ;
 114  8785              ; Constantes.
 115  8785              ;
 116  8785
 117  8785              Sprite_vacio equ $f000
 118  8785              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  8785              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  8785              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  8785              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  8785
 123  8785              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  8785              ;														;
 125  8785              Almacen_de_movimientos_masticados_Amadeus equ $e700
 126  8785
 127  8785              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  8785              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  8785              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  8785              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  8785              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  8785
 133  8785              ;														; 55 Bytes.
 134  8785              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  8785              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  8785
 137  8785              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  8785
 139  8785              ; ******************************************************************************************************************************************************************************************
 140  8785              ; Variables.
 141  8785              ; ******************************************************************************************************************************************************************************************
 142  8785              ;
 143  8785              ; 18/01/24
 144  8785              ;
 145  8785              ; Variables de DRAW. (Motor principal).	42 Bytes.
 146  8785              ;
 147  8785
 148  8785              Variables_DRAW ; -----------------------------------------------------------------------------------------------
 149  8785
 150  8785 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 151  8786              ;															- Patrón de movimiento.
 152  8786              ;															- Aspecto
 153  8786 00           Filas db 0												; Filas. [DRAW]
 154  8787 00           Columns db 0  											; Nº de columnas. [DRAW]
 155  8788 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 156  878A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 157  878C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  878D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  878E
 160  878E              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 161  878E
 162  878E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 163  878F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 164  878F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 165  878F 00           Attr db 0												; Atributos de la entidad:
 166  8790
 167  8790              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 168  8790              ;
 169  8790              ;	COLORES: 0 ..... NEGRO
 170  8790              ;    		 1 ..... AZUL
 171  8790              ; 			 2 ..... ROJO
 172  8790              ;			 3 ..... MAGENTA
 173  8790              ; 			 4 ..... VERDE
 174  8790              ; 			 5 ..... CIAN
 175  8790              ;			 6 ..... AMARILLO
 176  8790              ; 			 7 ..... BLANCO
 177  8790
 178  8790 00 00        Indice_Sprite_der defw 0
 179  8792 00 00        Indice_Sprite_izq defw 0
 180  8794 00 00        Puntero_DESPLZ_der defw 0
 181  8796 00 00        Puntero_DESPLZ_izq defw 0
 182  8798
 183  8798 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 184  879A 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 185  879B
 186  879B              ; Variables de objeto. (Características).
 187  879B
 188  879B 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 189  879C              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 190  879C              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 191  879C 00 00 00...  Variables_de_borrado ds 6
 192  87A2
 193  87A2 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 194  87A4              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 195  87A4
 196  87A4 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 197  87A6
 198  87A6              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 199  87A6              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 200  87A6
 201  87A6 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 202  87A8              ;														; _palabras que componen el "movimiento_masticado".
 203  87A8
 204  87A8              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 205  87A8
 206  87A8 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 207  87A9              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 208  87A9              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 209  87A9              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 210  87A9              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 211  87A9              ;
 212  87A9              ; 														DESCRIPCIÖN:
 213  87A9              ;
 214  87A9              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 215  87A9              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 216  87A9              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 217  87A9              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 218  87A9              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 219  87A9              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 220  87A9              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 221  87A9              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 222  87A9              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 223  87A9              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 224  87A9              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 225  87A9              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 226  87A9              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 227  87A9              ;
 228  87A9              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 229  87A9              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 230  87A9              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 231  87A9
 232  87A9              ; Variables de funcionamiento. [DRAW].
 233  87A9
 234  87A9 00           Columnas db 0
 235  87AA 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 236  87AC              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 237  87AC 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  87AD
 239  87AD              ; variables de control general.
 240  87AD
 241  87AD 00           Ctrl_2 db 0
 242  87AE              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 243  87AE              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 244  87AE              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 245  87AE              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 246  87AE              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 247  87AE              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 248  87AE              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 249  87AE              ;
 250  87AE              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 251  87AE              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 252  87AE              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 253  87AE              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 254  87AE              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 255  87AE              ;														BIT 4, ???
 256  87AE              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 257  87AE
 258  87AE 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 259  87AF
 260  87AF              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 261  87AF
 262  87AF              ;					         		---------;      ;---------
 263  87AF
 264  87AF              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 265  87AF
 266  87AF              Perfiles_de_velocidad
 267  87AF
 268  87AF 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 269  87B0 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 270  87B1 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 271  87B2 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 272  87B3
 273  87B3              ; Contadores de 16 bits.
 274  87B3
 275  87B3 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 276  87B5 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 277  87B7 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 278  87B9 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 279  87BB
 280  87BB              ; Movimiento. ------------------------------------------------------------------------------------------------------
 281  87BB
 282  87BB 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 283  87BD 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 284  87BF 00 00        Puntero_indice_mov_bucle defw 0							;
 285  87C1              ;
 286  87C1              ;
 287  87C1 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 288  87C2              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 289  87C2              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 290  87C2 00           Incrementa_puntero_backup db 0
 291  87C3 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 292  87C4              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 293  87C4 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 294  87C5 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 295  87C6 00           Cola_de_desplazamiento db 0								; Este byte indica:
 296  87C7              ;
 297  87C7              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 298  87C7              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 299  87C7              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 300  87C7              ;
 301  87C7              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 302  87C7              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 303  87C7              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 304  87C7              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 305  87C7              ;
 306  87C7              ;														;	"$ff" ..... Bucle infinito de repetición.
 307  87C7              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 308  87C7              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 309  87C7              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 310  87C7
 311  87C7 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 312  87C8
 313  87C8              ;														DESCRIPCIÓN:
 314  87C8              ;
 315  87C8              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 316  87C8              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 317  87C8              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 318  87C8              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 319  87C8              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 320  87C8              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 321  87C8
 322  87C8              ;														BIT 3, Recarga de nueva oleada.
 323  87C8              ;														BIT 4, Recarga de nueva oleada.
 324  87C8              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 325  87C8              ;														BIT 6, **** Frame completo.
 326  87C8              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 327  87C8
 328  87C8 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 329  87CA              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 330  87CA              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 331  87CA              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 332  87CA
 333  87CA              ; Gestión de ENTIDADES y CAJAS.
 334  87CA
 335  87CA 00 00        Puntero_store_caja defw 0
 336  87CC 00 00        Puntero_restore_caja defw 0
 337  87CE 00 00        Indice_restore_caja defw 0
 338  87D0 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 339  87D1 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 340  87D2 00           Entidades_en_curso db 0									; ..... ..... .....
 341  87D3 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 342  87D4              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 343  87D4              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 344  87D4              ;														; _ (Numero_de_malotes)="0".
 345  87D4 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 346  87D6 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 347  87D8              ;														; _ puntero (Indice_entidades).
 348  87D8
 349  87D8              ;---------------------------------------------------------------------------------------------------------------
 350  87D8              ;
 351  87D8              ;	11/01/24
 352  87D8              ;
 353  87D8              ;	Álbumes.
 354  87D8
 355  87D8 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 356  87DA              ;														; _variable para almacenar lo posición del puntero_
 357  87DA              ; 														; _de pila, SP.
 358  87DA 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 359  87DC              ;														; La utiliza la rutina [Extrae_foto_registros].
 360  87DC 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 361  87DE 00 70        Stack_snapshot defw Album_de_fotos
 362  87E0 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 363  87E2
 364  87E2              ;End_Snapshot defw Album_de_fotos
 365  87E2              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 366  87E2 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 367  87E4              ;														; _el snapshot de los registros del siguiente disparo.
 368  87E4              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 369  87E4 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 370  87E6
 371  87E6 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 372  87E7              ;
 373  87E7              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 374  87E7              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 375  87E7              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 376  87E7
 377  87E7 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad.
 378  87E8              ;
 379  87E8              ;															BIT 0, "1" Indica que el almacén de movimientos de la Entidad_1 está completo.
 380  87E8
 381  87E8              ; Gestión de Disparos.
 382  87E8
 383  87E8 00           Numero_de_disparotes db 0
 384  87E9 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 385  87EB 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 386  87ED 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 387  87EE              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 388  87EE              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 389  87EE 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 390  87F0              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 391  87F0              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 392  87F0              ;														; _produzca colisión.
 393  87F0 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 394  87F2              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 395  87F2 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 396  87F5              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 397  87F5 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 398  87F8              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 399  87F8 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 400  87F9
 401  87F9              ;---------------------------------------------------------------------------------------------------------------
 402  87F9
 403  87F9              ; Relojes y temporizaciones.
 404  87F9
 405  87F9 00           Contador_de_frames db 0
 406  87FA 00           Contador_de_frames_2 db 0
 407  87FB
 408  87FB 04           Clock_explosion db 4
 409  87FC 14           Clock_Entidades_en_curso db 20
 410  87FD 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 411  87FE              ;														; Repite la oleada de entidades.
 412  87FE 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 413  87FF 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 414  8800 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 415  8801
 416  8801 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 417  8802 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 418  8803 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 419  8804
 420  8804              ;---------------------------------------------------------------------------------------------------------------
 421  8804
 422  8804              ; Gestión de NIVELES.
 423  8804
 424  8804 00           Nivel db 0												; Nivel actual del juego.
 425  8805 00 00        Puntero_indice_NIVELES defw 0
 426  8807 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 427  8809              ; 														; _ que definen el NIVEL.
 428  8809              ; Y todo comienza aquí .....
 429  8809              ;
 430  8809              ; 	INICIO  *************************************************************************************************************************************************************************
 431  8809              ;
 432  8809              ;	5/1/24
 433  8809
 434  8809              START
 435  8809
 436  8809 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 437  880C 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 438  880E ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 439  8810 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 440  8812 F3           	DI
 441  8813
 442  8813 3E 07        	ld a,%00000111
 443  8815 CD 91 97     	call Cls
 444  8818 CD DC 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 445  881B
 446  881B              ; INICIALIZACIÓN.
 447  881B
 448  881B              ;	Inicializa 1er Nivel.
 449  881B
 450  881B 21 2A 86     	ld hl,Indice_de_niveles
 451  881E 22 05 88     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 452  8821 CD 4B 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 453  8824              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 454  8824              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 455  8824              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 456  8824
 457  8824 CD 7A 86     4 call Prepara_cajas_de_entidades
 458  8827
 459  8827              ;	call Inicia_punteros_de_cajas 						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 460  8827              ;														 ; Situa (Puntero_restore-caja) en el 1er .db de la 2ª caja del índice de entidades.
 461  8827 CD 8C 8B     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 462  882A
 463  882A 21 D1 87     	ld hl,Numero_parcial_de_entidades
 464  882D 46           	ld b,(hl)
 465  882E              ;	inc b
 466  882E              ;	dec b
 467  882E              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 468  882E
 469  882E              ;	INICIA ENTIDADES !!!!!
 470  882E
 471  882E              ;1 push bc  												; Guardo el contador de entidades.
 472  882E              ;	call Inicia_entidad
 473  882E
 474  882E              ;	pop bc
 475  882E              ;	djnz 1B  											; Decremento el contador de entidades.
 476  882E
 477  882E              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 478  882E              ; (Esto se dá cuando se inicia una nueva oleada).
 479  882E
 480  882E              ;	ld a,(Ctrl_1)
 481  882E              ;	bit 3,a
 482  882E              ;	jr nz,5F											; Loop
 483  882E
 484  882E              ; 	INICIA AMADEUS !!!!!
 485  882E
 486  882E              ;3 call Restore_Amadeus
 487  882E              ;	call Inicia_Puntero_objeto
 488  882E              ;	call Draw
 489  882E
 490  882E              ;	call Guarda_movimiento_masticado	;! Provisional
 491  882E
 492  882E              ;	call Guarda_foto_registros
 493  882E              ;	call Guarda_datos_de_borrado_Amadeus
 494  882E
 495  882E              ;	ld de,Amadeus_db
 496  882E              ;	call Store_Amadeus
 497  882E
 498  882E              ; 	INICIA DISPAROS !!!!!
 499  882E
 500  882E              ;	call Inicia_Puntero_Disparo_Entidades
 501  882E              ;	call Inicia_Puntero_Disparo_Amadeus
 502  882E
 503  882E              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 504  882E
 505  882E              5
 506  882E              ;	call Inicia_punteros_de_cajas
 507  882E CD 8C 8B     	call Restore_entidad
 508  8831
 509  8831 3A C7 87     	ld a,(Ctrl_1)
 510  8834 CB 5F        	bit 3,a
 511  8836 28 07        	jr z,6F
 512  8838
 513  8838              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 514  8838
 515  8838 21 C7 87     	ld hl,Ctrl_1
 516  883B CB 9E        	res 3,(hl)
 517  883D 18 07        	jr Main
 518  883F
 519  883F              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 520  883F
 521  883F 21 E6 87     6 ld hl,Ctrl_3
 522  8842 CB C6        	set 0,(hl)											; Frame completo.
 523  8844 FB           	ei
 524  8845 76           	halt
 525  8846
 526  8846              ; ------------------------------------
 527  8846
 528  8846              Main
 529  8846              ;
 530  8846              ;	11/12/23
 531  8846
 532  8846              ; Aparece nueva entidad ???
 533  8846
 534  8846              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 535  8846              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 536  8846              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 537  8846              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 538  8846              ;														; _un 2º bloque.
 539  8846
 540  8846 3E 01        	ld a,1
 541  8848 D3 FE        	out ($fe),a
 542  884A
 543  884A 3A FC 87     	ld a,(Clock_Entidades_en_curso)
 544  884D 47           	ld b,a
 545  884E 3A F9 87     	ld a,(Contador_de_frames)
 546  8851 B8           	cp b
 547  8852 20 18        	jr nz,13F
 548  8854
 549  8854              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 550  8854              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 551  8854
 552  8854 3A D1 87     21 ld a,(Numero_parcial_de_entidades)
 553  8857 47           	ld b,a
 554  8858 3A D2 87     	ld a,(Entidades_en_curso)
 555  885B B8           	cp b
 556  885C 28 0E        	jr z,13F
 557  885E 30 0C        	jr nc,13F
 558  8860
 559  8860 3C           	inc a
 560  8861 32 D2 87     	ld (Entidades_en_curso),a
 561  8864
 562  8864              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 563  8864
 564  8864 3A FC 87     	ld a,(Clock_Entidades_en_curso)
 565  8867              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 566  8867              ;! _ IMPREDECIBLE !!!!
 567  8867 C6 64        	add 100
 568  8869 32 FC 87     	ld (Clock_Entidades_en_curso),a
 569  886C
 570  886C              ; -------------------------------------------------------------------------------------------------------------
 571  886C
 572  886C              ; Habilita disparos.
 573  886C
 574  886C 21 FE 87     13 ld hl,Disparo_Amadeus
 575  886F 11 00 88     	ld de,CLOCK_repone_disparo_Amadeus
 576  8872 CD 63 9B     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 577  8875
 578  8875 21 01 88     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 579  8878 11 03 88     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 580  887B CD 63 9B     	call Habilita_disparos
 581  887E
 582  887E              ; COLISIONES.
 583  887E
 584  887E CD 7B 90     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 585  8881
 586  8881              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 587  8881              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 588  8881              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 589  8881
 590  8881 AF           	xor a
 591  8882 32 ED 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 592  8885
 593  8885 CD B8 8A     	call Inicia_punteros_de_cajas
 594  8888 CD 8C 8B     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 595  888B              ; 														; _ en DRAW.
 596  888B 3A 86 87     	ld a,(Filas)
 597  888E A7           	and a
 598  888F 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 599  8891 CD 9E 8B     	call Incrementa_punteros_de_cajas
 600  8894 18 F2        	jr 12B
 601  8896
 602  8896              ; ---------------------------------------------------------------------------------------
 603  8896
 604  8896 3A D1 87     10 ld a,(Numero_parcial_de_entidades)
 605  8899 47               ld b,a
 606  889A A7           	and a
 607  889B 20 14        	jr nz,11F
 608  889D
 609  889D 21 C7 87     	ld hl,Ctrl_1
 610  88A0 CB 66        	bit 4,(hl)
 611  88A2 C2 4A 89     	jp nz,16F
 612  88A5
 613  88A5              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 614  88A5
 615  88A5 21 C7 87     	ld hl,Ctrl_1
 616  88A8 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 617  88AA
 618  88AA 3A F9 87     	ld a,(Contador_de_frames)
 619  88AD 3C           	inc a
 620  88AE 32 FD 87     	ld (Activa_recarga_cajas),a
 621  88B1
 622  88B1              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 623  88B1
 624  88B1 3A D2 87     11 ld a,(Entidades_en_curso)
 625  88B4 A7           	and a
 626  88B5 CA 4A 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 627  88B8 47           	ld b,a												; No hay entidades que gestionar.
 628  88B9
 629  88B9              ; ( Código que ejecutamos con cada entidad: ).
 630  88B9
 631  88B9              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 632  88B9
 633  88B9 C5           15 push bc 												; Nº de entidades en curso.
 634  88BA
 635  88BA              ; Existe "Entidad_guía" ???.
 636  88BA              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 637  88BA
 638  88BA 3A E6 87     	ld a,(Ctrl_3)
 639  88BD CB 4F        	bit 1,a
 640  88BF 20 11        	jr nz,22F
 641  88C1
 642  88C1              ; Almacén de "Movimientos_masticados" lleno ???
 643  88C1              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 644  88C1              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 645  88C1
 646  88C1 3A E6 87     	ld a,(Ctrl_3)
 647  88C4 CB 5F        	bit 3,a
 648  88C6 20 0A        	jr nz,22F
 649  88C8
 650  88C8              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 651  88C8
 652  88C8 21 AD 87     	ld hl,Ctrl_2
 653  88CB CB EE        	set 5,(hl)
 654  88CD 21 E6 87     	ld hl,Ctrl_3
 655  88D0 CB CE        	set 1,(hl)
 656  88D2
 657  88D2              ; Impacto ???
 658  88D2
 659  88D2 3A 9B 87     22 ld a,(Impacto)
 660  88D5 A7           	and a
 661  88D6 28 31        	jr z,8F
 662  88D8
 663  88D8              ; Hay Impacto en esta entidad.
 664  88D8
 665  88D8 21 FB 87     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 666  88DB 35           	dec (hl)
 667  88DC C2 3D 89     	jp nz,17F
 668  88DF
 669  88DF              ;! Velocidad de la animación de la explosión.
 670  88DF
 671  88DF 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 672  88E1              ;														; _,(velocidad de la explosión).
 673  88E1              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 674  88E1
 675  88E1 CD 50 8C     	call Repone_datos_de_borrado
 676  88E4 CD F6 8A     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 677  88E7
 678  88E7              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 679  88E7
 680  88E7 3A AD 87     	ld a,(Ctrl_2)
 681  88EA CB 4F        	bit 1,a
 682  88EC 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 683  88EE
 684  88EE              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 685  88EE
 686  88EE 3A 8E 87     	ld a,(CTRL_DESPLZ)
 687  88F1 A7           	and a
 688  88F2 20 08        	jr nz,18F
 689  88F4
 690  88F4 21 84 84     	ld hl,Indice_Explosion_2x2-2
 691  88F7 22 94 87     	ld (Puntero_DESPLZ_der),hl
 692  88FA 18 06        	jr 19F
 693  88FC
 694  88FC 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 695  88FF 22 94 87     	ld (Puntero_DESPLZ_der),hl
 696  8902
 697  8902 21 AD 87     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 698  8905 CB CE        	set 1,(hl)
 699  8907 18 22        	jr 7F
 700  8909
 701  8909              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 702  8909              ; _con las coordenadas de la entidad almacenada en DRAW.
 703  8909
 704  8909 3A C7 87     8 ld a,(Ctrl_1)
 705  890C CB 57        	bit 2,a
 706  890E 28 1B        	jr z,7F
 707  8910
 708  8910 2A F0 87     	ld hl,(Coordenadas_disparo_certero)
 709  8913 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 710  8914              ;														; E contiene la coordenada_X del disparo.
 711  8914 2A 8C 87     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 712  8917              ;														; H FILA, (Coordenada_y de la entidad).
 713  8917 A7           	and a
 714  8918 ED 52        	sbc hl,de
 715  891A
 716  891A CD 94 90     	call Determina_resultado_comparativa
 717  891D
 718  891D 78           	ld a,b
 719  891E A7           	and a
 720  891F 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 721  8921
 722  8921              ; ----- ----- -----
 723  8921
 724  8921 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 725  8923 32 9B 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 726  8926
 727  8926 21 C7 87     	ld hl,Ctrl_1
 728  8929 CB 96        	res 2,(hl)
 729  892B
 730  892B CD 9B 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 731  892E
 732  892E 3A A8 87     	ld a,(Ctrl_0)
 733  8931 CB 67        	bit 4,a
 734  8933 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 735  8935
 736  8935              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 737  8935              ; [[[
 738  8935              ;	call Detecta_disparo_entidad
 739  8935              ; ]]]
 740  8935
 741  8935 CD 73 8A     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 742  8938
 743  8938 21 A8 87     	ld hl,Ctrl_0
 744  893B CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 745  893D
 746  893D CD 8B 8B     17 call Store_Restore_cajas
 747  8940
 748  8940 C1           	pop bc
 749  8941
 750  8941 05           	dec b
 751  8942 C2 B9 88     	jp nz,15B
 752  8945
 753  8945              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 754  8945              ; Hemos gestionado todas las unidades.
 755  8945              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 756  8945
 757  8945 21 C7 87     	ld hl,Ctrl_1
 758  8948 CB 96        	res 2,(hl)
 759  894A
 760  894A 21 E6 87     16 ld hl,Ctrl_3
 761  894D CB C6        	set 0,(hl)											; Frame completo.
 762  894F
 763  894F AF           	xor a
 764  8950 D3 FE        	out ($fe),a
 765  8952
 766  8952 FB           	ei
 767  8953 76           	halt
 768  8954
 769  8954              ; ----------------------------------------
 770  8954
 771  8954 3A C7 87     	ld a,(Ctrl_1) 										; Existe Loop?
 772  8957 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 773  8959 CA 46 88     	jp z,Main
 774  895C
 775  895C              ; RECARGA DE NUEVA OLEADA.
 776  895C
 777  895C 3A F9 87     	ld a,(Contador_de_frames)
 778  895F 47           	ld b,a
 779  8960 3A FD 87     	ld a,(Activa_recarga_cajas)
 780  8963 B8           	cp b
 781  8964 28 08        	jr z,20F
 782  8966
 783  8966 21 C7 87     	ld hl,Ctrl_1
 784  8969 CB E6        	set 4,(hl)
 785  896B C3 46 88     	jp Main
 786  896E
 787  896E 21 C7 87     20 ld hl,Ctrl_1
 788  8971 CB A6        	res 4,(hl)
 789  8973
 790  8973 3A F9 87     	ld a,(Contador_de_frames)
 791  8976
 792  8976              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 793  8976              ;! _ IMPREDECIBLE !!!!
 794  8976
 795  8976 C6 0A        	add 10
 796  8978 32 FC 87     	ld (Clock_Entidades_en_curso),a
 797  897B
 798  897B C3 24 88     	jp 4B
 799  897E
 800  897E C9           	ret
 801  897F
 802  897F              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 803  897F              ;
 804  897F              ;	16/11/23
 805  897F
 806  897F              Gestiona_Amadeus
 807  897F
 808  897F              ;! Activa/desactiva impacto con Amadeus.
 809  897F
 810  897F              ;	ld a,(Impacto)
 811  897F              ;	and a
 812  897F              ;	jr nz,2F
 813  897F
 814  897F CD F8 89     	call Mov_Amadeus
 815  8982
 816  8982 3A A8 87     2 ld a,(Ctrl_0)
 817  8985 CB 67        	bit 4,a
 818  8987 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 819  8989
 820  8989 CD 73 8A     	call Guarda_foto_entidad_a_pintar
 821  898C CD 30 8C     	call Guarda_datos_de_borrado_Amadeus
 822  898F
 823  898F 21 A8 87     1 ld hl,Ctrl_0
 824  8992 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 825  8994
 826  8994 CD 1F 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 827  8997
 828  8997              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 829  8997
 830  8997 CD 38 8B     	call Calcula_numero_de_disparotes
 831  899A
 832  899A C9           	ret
 833  899B
 834  899B              ; --------------------------------------------------------------------------------------------------------------
 835  899B              ;
 836  899B              ;	15/12/23
 837  899B
 838  899B              Mov_obj
 839  899B
 840  899B 3A AD 87     	ld a,(Ctrl_2)
 841  899E CB 4F        	bit 1,a
 842  89A0 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 843  89A2
 844  89A2              ; Explosión:
 845  89A2
 846  89A2 3A AE 87     	ld a,(Frames_explosion)
 847  89A5 A7           	and a
 848  89A6 20 1D        	jr nz,4F
 849  89A8
 850  89A8              ;!  Una alimaña menos!!!!!!!!!1
 851  89A8
 852  89A8              ; Se trataba de una Entidad_guía ???
 853  89A8
 854  89A8 3A AD 87     	ld a,(Ctrl_2)
 855  89AB CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 856  89AD 28 05        	jr z,5F
 857  89AF
 858  89AF 21 E6 87     	ld hl,Ctrl_3
 859  89B2 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 860  89B4
 861  89B4              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 862  89B4              ;!! _generado puede ser distinto, (aletoriedad).
 863  89B4
 864  89B4 CD CE 8B     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 865  89B7 21 D1 87     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 866  89BA 35           	dec (hl)
 867  89BB 21 D2 87     	ld hl,Entidades_en_curso
 868  89BE 35           	dec (hl)
 869  89BF 21 D0 87     	ld hl,Numero_de_entidades
 870  89C2 35           	dec (hl)
 871  89C3 18 32        	jr 3F
 872  89C5
 873  89C5              ; -----
 874  89C5
 875  89C5              ;	`Movemos´ la explosión.
 876  89C5
 877  89C5 2A 94 87     4 ld hl,(Puntero_DESPLZ_der)
 878  89C8 23           	inc hl
 879  89C9 23           	inc hl
 880  89CA 22 94 87     	ld (Puntero_DESPLZ_der),hl
 881  89CD CD 50 8B     	call Extrae_address
 882  89D0 22 8A 87     	ld (Puntero_objeto),hl
 883  89D3
 884  89D3 21 AE 87     	ld hl,Frames_explosion
 885  89D6 35           	dec (hl)
 886  89D7
 887  89D7 21 A8 87     	ld hl,Ctrl_0
 888  89DA CB E6        	set 4,(hl)
 889  89DC
 890  89DC 18 19        	jr 3F
 891  89DE
 892  89DE              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 893  89DE
 894  89DE AF           2 xor a
 895  89DF 32 A8 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 896  89E2
 897  89E2              ; Movemos Entidades malignas.
 898  89E2              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 899  89E2
 900  89E2              ;	ld a,(Ctrl_2)
 901  89E2              ;	bit 5,a
 902  89E2              ;	jr nz,8F
 903  89E2
 904  89E2              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 905  89E2              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 906  89E2              ;	jr 7F
 907  89E2
 908  89E2              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 909  89E2
 910  89E2              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 911  89E2              ;	bit 4,a
 912  89E2              ;	ret z
 913  89E2
 914  89E2              ; Ha habido desplazamiento de la entidad maligna.
 915  89E2              ; Ha llegado a zona de AMADEUS ???
 916  89E2
 917  89E2 3A 8D 87     7 ld a,(Coordenada_y)
 918  89E5 FE 14        	cp $14
 919  89E7 38 08        	jr c,1F
 920  89E9
 921  89E9              ; ---------
 922  89E9
 923  89E9              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 924  89E9              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 925  89E9
 926  89E9 F3           	di
 927  89EA CD 44 8E     	call Genera_coordenadas_X
 928  89ED CD 80 8E     	call Compara_coordenadas_X
 929  89F0 FB           	ei
 930  89F1
 931  89F1              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 932  89F1
 933  89F1              ; ---------
 934  89F1
 935  89F1              1
 936  89F1
 937  89F1              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 938  89F1 CD 50 8C     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 939  89F4 CD F6 8A     	call Limpia_Variables_de_borrado
 940  89F7
 941  89F7 C9           3 ret
 942  89F8
 943  89F8              ; --------------------------------------------------------------------------------------------------------------
 944  89F8              ;
 945  89F8              ;	29/1/23
 946  89F8
 947  89F8              Mov_Amadeus
 948  89F8
 949  89F8              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 950  89F8
 951  89F8 CD 49 98     	call Mov_right
 952  89FB
 953  89FB 3A A8 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 954  89FE CB 67        	bit 4,a
 955  8A00 C8           	ret z
 956  8A01
 957  8A01              ; ---------
 958  8A01
 959  8A01              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 960  8A01 CD 40 8C     	call Repone_datos_de_borrado_Amadeus
 961  8A04 CD F6 8A     	call Limpia_Variables_de_borrado
 962  8A07
 963  8A07 C9           	ret
 964  8A08
 965  8A08              ; -----------------------------------------------------------------------------------
 966  8A08              ;
 967  8A08              ;	20/01/24
 968  8A08              ;
 969  8A08              ;
 970  8A08
 971  8A08              Construye_movimientos_masticados_entidad
 972  8A08
 973  8A08 2A A4 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 974  8A0B E5           	push hl
 975  8A0C
 976  8A0C CD 50 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 977  8A0F              ;															; _ el (Contador_de_mov_masticados).
 978  8A0F CD 56 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 979  8A12              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 980  8A12 CD A5 97     	call Recompone_posicion_inicio
 981  8A15
 982  8A15 CD 7B 91     1 call Draw
 983  8A18 CD 34 8A     	call Guarda_movimiento_masticado
 984  8A1B CD 0E 9D     	call Movimiento
 985  8A1E
 986  8A1E 3A E6 87     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 987  8A21 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
 988  8A23 28 F0        	jr z,1B
 989  8A25
 990  8A25              ;	Hemos completado el almacén de movimientos masticados de la entidad.
 991  8A25              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
 992  8A25
 993  8A25 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
 994  8A26 22 A4 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
 995  8A29
 996  8A29
 997  8A29              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
 998  8A29
 999  8A29 CD 7F 9E     	call Vuelca_en_Contador_general_de_mov_masticados
1000  8A2C
1001  8A2C              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1002  8A2C              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1003  8A2C
1004  8A2C ED 4B A6 87  	ld bc,(Contador_de_mov_masticados)
1005  8A30 71           	ld (hl),c
1006  8A31 23           	inc hl
1007  8A32 70           	ld (hl),b
1008  8A33
1009  8A33 C9           	ret
1010  8A34
1011  8A34              ; -----------------------------------------------------------------------------------
1012  8A34              ;
1013  8A34              ;	28/12/23
1014  8A34              ;
1015  8A34              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1016  8A34              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1017  8A34
1018  8A34              Guarda_movimiento_masticado
1019  8A34
1020  8A34 ED 73 D8 87  	ld (Stack),sp
1021  8A38 ED 7B A4 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1022  8A3C
1023  8A3C E5           	push hl
1024  8A3D DD E5            push ix
1025  8A3F FD E5            push iy
1026  8A41
1027  8A41 ED 7B D8 87      ld sp,(Stack)
1028  8A45
1029  8A45              ;    push hl
1030  8A45
1031  8A45 2A A6 87        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1032  8A48 23           	inc hl
1033  8A49 22 A6 87     	ld (Contador_de_mov_masticados),hl
1034  8A4C
1035  8A4C              ;	pop hl
1036  8A4C
1037  8A4C CD 50 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1038  8A4F              ;															; _ el (Contador_de_mov_masticados).
1039  8A4F C9               ret
1040  8A50
1041  8A50              ; --------------------------------------------------------------------------------------------------------------
1042  8A50              ;
1043  8A50              ;	12/1/24
1044  8A50              ;
1045  8A50              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1046  8A50
1047  8A50              Actualiza_Puntero_de_almacen_de_mov_masticados
1048  8A50
1049  8A50              ;	push hl
1050  8A50              ;	push bc
1051  8A50
1052  8A50 2A A4 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1053  8A53 01 06 00     	ld bc,6
1054  8A56 A7           	and a
1055  8A57 ED 4A        	adc hl,bc
1056  8A59 22 A4 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
1057  8A5C
1058  8A5C              ;	pop bc
1059  8A5C              ;	pop hl
1060  8A5C
1061  8A5C C9           	ret
1062  8A5D
1063  8A5D              ; --------------------------------------------------------------------------------------------------------------
1064  8A5D              ;
1065  8A5D              ;	15/01/24
1066  8A5D              ;
1067  8A5D              ;	Cargamos los registros_
1068  8A5D              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1069  8A5D              ;
1070  8A5D              ;	HL contiene la dirección de la rutina de impresión.
1071  8A5D              ;	IX contiene el puntero de impresión.
1072  8A5D              ;	IY contiene (Puntero_objeto).
1073  8A5D
1074  8A5D
1075  8A5D ED 73 D8 87  Cargamos_registros_con_mov_masticado ld (Stack),sp
1076  8A61 ED 7B A4 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1077  8A65
1078  8A65 FD E1        	pop iy
1079  8A67 DD E1        	pop ix
1080  8A69 E1           	pop hl
1081  8A6A
1082  8A6A ED 73 A4 87  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1083  8A6E
1084  8A6E ED 7B D8 87  	ld sp,(Stack)
1085  8A72
1086  8A72 C9           	ret
1087  8A73
1088  8A73              ; --------------------------------------------------------------------------------------------------------------
1089  8A73              ;
1090  8A73              ;	28/12/23
1091  8A73              ;
1092  8A73              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1093  8A73              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1094  8A73
1095  8A73              Guarda_foto_entidad_a_pintar
1096  8A73
1097  8A73 3A A8 87     	ld a,(Ctrl_0)
1098  8A76 CB 77        	bit 6,a
1099  8A78 28 0E        	jr z,5F
1100  8A7A
1101  8A7A              ;	Guarda la foto de Amadeus.
1102  8A7A
1103  8A7A CD 7B 91     	call Draw
1104  8A7D
1105  8A7D CD 34 8A     	call Guarda_movimiento_masticado	;! Provisional
1106  8A80
1107  8A80 CD 16 71     	call Guarda_foto_registros
1108  8A83
1109  8A83 F3           	di
1110  8A84 18 FE        	jr $
1111  8A86 FB           	ei
1112  8A87
1113  8A87 C9           	ret
1114  8A88
1115  8A88              ; ENTIDADES!
1116  8A88              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1117  8A88
1118  8A88 3A E6 87     5 ld a,(Ctrl_3)
1119  8A8B CB 5F        	bit 3,a
1120  8A8D 28 01        	jr z,1F
1121  8A8F
1122  8A8F              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1123  8A8F
1124  8A8F              4
1125  8A8F              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1126  8A8F C9           	ret
1127  8A90
1128  8A90              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1129  8A90
1130  8A90 3A E6 87     1 ld a,(Ctrl_3)
1131  8A93 CB 57        	bit 2,a
1132  8A95 20 10        	jr nz,6F
1133  8A97
1134  8A97              ; Entidad guía o fantasma ???
1135  8A97
1136  8A97 3A AD 87     	ld a,(Ctrl_2)
1137  8A9A CB 6F        	bit 5,a
1138  8A9C 20 10        	jr nz,3F
1139  8A9E
1140  8A9E              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1141  8A9E
1142  8A9E 18 EF        	jr 4B
1143  8AA0
1144  8AA0              ; ENTIDAD_GUÍA:
1145  8AA0              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1146  8AA0              ; _guardando "movimientos_masticados".
1147  8AA0
1148  8AA0 3A E6 87     2 ld a,(Ctrl_3)
1149  8AA3 CB 57        	bit 2,a
1150  8AA5 28 07        	jr z,3F
1151  8AA7
1152  8AA7              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1153  8AA7              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1154  8AA7
1155  8AA7 CB 97        6 res 2,a
1156  8AA9 CB DF        	set 3,a
1157  8AAB 32 E6 87     	ld (Ctrl_3),a
1158  8AAE
1159  8AAE
1160  8AAE              ;	Esto sólo lo ejecuta una entidad guía.
1161  8AAE
1162  8AAE CD 7B 91     3 	call Draw
1163  8AB1 CD 34 8A     	call Guarda_movimiento_masticado
1164  8AB4 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1165  8AB7
1166  8AB7              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1167  8AB7              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1168  8AB7
1169  8AB7              ;	call Convierte_guia_en_fantasma
1170  8AB7 C9           	ret
1171  8AB8
1172  8AB8              ; --------------------------------------------------------------------------------------------------------------
1173  8AB8              ;
1174  8AB8              ;	19/9/23
1175  8AB8
1176  8AB8              ;Prepara_var_pintado
1177  8AB8
1178  8AB8              ;	ld hl,Filas
1179  8AB8              ;	ld de,Variables_de_pintado
1180  8AB8              ;	ld bc,8
1181  8AB8              ;	ldir
1182  8AB8              ;	ret
1183  8AB8
1184  8AB8              ; --------------------------------------------------------------------------------------------------------------
1185  8AB8
1186  8AB8              ;Repone_pintar
1187  8AB8
1188  8AB8              ;	ld hl,Variables_de_pintado
1189  8AB8              ;	ld de,Filas
1190  8AB8              ;	ld bc,8
1191  8AB8              ;	ldir
1192  8AB8              ;	ret
1193  8AB8
1194  8AB8              ; *************************************************************************************************************************************************************
1195  8AB8              ;
1196  8AB8              ; 8/1/23
1197  8AB8              ;
1198  8AB8              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1199  8AB8              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1200  8AB8              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1201  8AB8
1202  8AB8              ; Destruye HL y DE !!!!!
1203  8AB8
1204  8AB8              Inicia_punteros_de_cajas
1205  8AB8
1206  8AB8 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1207  8ABB CD 50 8B         call Extrae_address
1208  8ABE 22 CA 87         ld (Puntero_store_caja),hl
1209  8AC1 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1210  8AC4 22 CE 87     	ld (Indice_restore_caja),hl
1211  8AC7 CD 50 8B     	call Extrae_address
1212  8ACA 22 CC 87     	ld (Puntero_restore_caja),hl
1213  8ACD C9               ret
1214  8ACE
1215  8ACE              ; *************************************************************************************************************************************************************
1216  8ACE              ;
1217  8ACE              ; 8/1/23
1218  8ACE              ;
1219  8ACE              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1220  8ACE
1221  8ACE 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1222  8AD1 22 E9 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1223  8AD4 C9           	ret
1224  8AD5 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1225  8AD8 22 EB 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1226  8ADB C9           	ret
1227  8ADC
1228  8ADC              ; -------------------------------------------------------------------------------------------------------------
1229  8ADC              ;
1230  8ADC              ; 21/9/23
1231  8ADC              ;
1232  8ADC
1233  8ADC              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1234  8ADC
1235  8ADC              Limpia_album_Amadeus
1236  8ADC
1237  8ADC 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1238  8ADF 7E           	ld a,(hl)
1239  8AE0 A7           	and a
1240  8AE1 C8           	ret z
1241  8AE2
1242  8AE2 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1243  8AE5 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1244  8AE8 01 0B 00     	ld bc,11
1245  8AEB AF           	xor a
1246  8AEC 77           	ld (hl),a
1247  8AED ED B0        	ldir
1248  8AEF
1249  8AEF 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1250  8AF2 22 E4 87     	ld (End_Snapshot_Amadeus),hl
1251  8AF5
1252  8AF5 C9           	ret
1253  8AF6
1254  8AF6 21 9C 87     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1255  8AF9 11 9D 87     	ld de,Variables_de_borrado+1
1256  8AFC 01 05 00     	ld bc,5
1257  8AFF AF           	xor a
1258  8B00 77           	ld (hl),a
1259  8B01 ED B0        	ldir
1260  8B03 C9           	ret
1261  8B04
1262  8B04              ; -------------------------------------------------------------------------------------------------------------
1263  8B04              ;
1264  8B04              ; 8/9/23
1265  8B04              ;
1266  8B04
1267  8B04              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1268  8B04              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1269  8B04
1270  8B04              Calcula_numero_de_malotes
1271  8B04
1272  8B04 21 00 70     	ld hl,Album_de_fotos
1273  8B07 EB           	ex de,hl
1274  8B08 2A DE 87     	ld hl,(Stack_snapshot)
1275  8B0B
1276  8B0B 06 00        	ld b,0
1277  8B0D 7D           	ld a,l
1278  8B0E 93           	sub e
1279  8B0F 28 07        	jr z,1F
1280  8B11
1281  8B11              ; Nº de malotes no es "0".
1282  8B11
1283  8B11 D6 06        2 sub 6
1284  8B13 04           	inc b
1285  8B14 A7           	and a
1286  8B15 20 FA        	jr nz,2B
1287  8B17 78           	ld a,b
1288  8B18
1289  8B18 32 D3 87     1 ld (Numero_de_malotes),a
1290  8B1B C9           	ret
1291  8B1C
1292  8B1C              ; -------------------------------------------------------------------------------------------------------------
1293  8B1C              ;
1294  8B1C              ; 8/9/23
1295  8B1C              ;
1296  8B1C
1297  8B1C              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1298  8B1C              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1299  8B1C
1300  8B1C              Calcula_malotes_Amadeus
1301  8B1C
1302  8B1C 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1303  8B1F EB           	ex de,hl
1304  8B20 2A E4 87     	ld hl,(End_Snapshot_Amadeus)
1305  8B23
1306  8B23 7C           	ld a,h
1307  8B24 A7           	and a
1308  8B25 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1309  8B27
1310  8B27 06 00        	ld b,0
1311  8B29 7D           	ld a,l
1312  8B2A 93           	sub e
1313  8B2B 28 07        	jr z,1F
1314  8B2D
1315  8B2D              ; Nº de malotes no es "0".
1316  8B2D
1317  8B2D D6 06        2 sub 6
1318  8B2F 04           	inc b
1319  8B30 A7           	and a
1320  8B31 20 FA        	jr nz,2B
1321  8B33 78           	ld a,b
1322  8B34
1323  8B34 32 D3 87     1 ld (Numero_de_malotes),a
1324  8B37 C9           	ret
1325  8B38
1326  8B38              ; -------------------------------------------------------------------------------------------------------------
1327  8B38              ;
1328  8B38              ; 28/2/23
1329  8B38              ;
1330  8B38
1331  8B38              Calcula_numero_de_disparotes
1332  8B38
1333  8B38 21 56 70     	ld hl,Album_de_fotos_disparos
1334  8B3B EB           	ex de,hl
1335  8B3C 2A E2 87     	ld hl,(End_Snapshot_disparos)
1336  8B3F
1337  8B3F 06 00        	ld b,0
1338  8B41 7D           	ld a,l
1339  8B42 93           	sub e
1340  8B43 28 07        	jr z,1F
1341  8B45
1342  8B45              ; Nº de malotes no es "0".
1343  8B45
1344  8B45 D6 06        2 sub 6
1345  8B47 04           	inc b
1346  8B48 A7           	and a
1347  8B49 20 FA        	jr nz,2B
1348  8B4B 78           	ld a,b
1349  8B4C
1350  8B4C 32 E8 87     1 ld (Numero_de_disparotes),a
1351  8B4F C9           	ret
1352  8B50
1353  8B50              ; *************************************************************************************************************************************************************
1354  8B50              ;
1355  8B50              ; 20/10/22
1356  8B50              ;
1357  8B50              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1358  8B50              ;
1359  8B50              ; Destruye el puntero y DE !!!!!
1360  8B50
1361  8B50 5E           Extrae_address ld e,(hl)
1362  8B51 23           	inc hl
1363  8B52 56           	ld d,(hl)
1364  8B53 2B           	dec hl
1365  8B54 EB           	ex de,hl
1366  8B55 C9           	ret
1367  8B56
1368  8B56              ; *************************************************************************************************************************************************************
1369  8B56              ;
1370  8B56              ;	20/1/24
1371  8B56              ;
1372  8B56              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1373  8B56              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1374  8B56              ;
1375  8B56              ;   Destruye HL y BC !!!!!,
1376  8B56              ;
1377  8B56              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1378  8B56              ;					"0" ..... Izquierda.
1379  8B56
1380  8B56              Inicia_Puntero_objeto
1381  8B56
1382  8B56 3A 9A 87     	ld a,(Cuad_objeto)
1383  8B59 E6 01        	and 1
1384  8B5B F5           	push af
1385  8B5C CC 78 8B     	call z,Inicia_puntero_objeto_izq
1386  8B5F F1           	pop af
1387  8B60 C8           	ret z
1388  8B61 CD 65 8B     	call Inicia_puntero_objeto_der
1389  8B64 C9           	ret
1390  8B65
1391  8B65              ; Arrancamos desde la parte izquierda de la pantalla.
1392  8B65              ; Iniciamos (Indice_Sprite_der).
1393  8B65
1394  8B65 2A 90 87     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1395  8B68 22 94 87     	ld (Puntero_DESPLZ_der),hl
1396  8B6B CD 50 8B     	call Extrae_address
1397  8B6E 22 8A 87     	ld (Puntero_objeto),hl
1398  8B71
1399  8B71 2A 92 87     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1400  8B74 22 96 87     	ld (Puntero_DESPLZ_izq),hl
1401  8B77 C9           	ret
1402  8B78
1403  8B78              ; Arrancamos desde la parte derecha de la pantalla.
1404  8B78              ; Iniciamos (Indice_Sprite_izq).
1405  8B78
1406  8B78 2A 92 87     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1407  8B7B 22 96 87     	ld (Puntero_DESPLZ_izq),hl
1408  8B7E CD 50 8B     	call Extrae_address
1409  8B81 22 8A 87     	ld (Puntero_objeto),hl
1410  8B84
1411  8B84 2A 90 87     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1412  8B87 22 94 87     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1413  8B8A C9           	ret
1414  8B8B
1415  8B8B              ; *************************************************************************************************************************************************************
1416  8B8B              ;
1417  8B8B              ;	21/12/23
1418  8B8B              ;
1419  8B8B              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1420  8B8B              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1421  8B8B
1422  8B8B              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1423  8B8B              ;	_de la 2ª y 3ª entidad respectivamente.
1424  8B8B
1425  8B8B              Store_Restore_cajas
1426  8B8B
1427  8B8B              ; 	Entidad_sospechosa. 20/4/23
1428  8B8B
1429  8B8B              ;	ld a,(Impacto)
1430  8B8B              ;	and a
1431  8B8B              ;	jr z,1F
1432  8B8B
1433  8B8B              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1434  8B8B              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1435  8B8B              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1436  8B8B              ;	adc hl,bc 											; _ "0" más adelante.
1437  8B8B              ;	ld (Entidad_sospechosa_de_colision),hl
1438  8B8B
1439  8B8B              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1440  8B8B
1441  8B8B              ;	jr $
1442  8B8B
1443  8B8B
1444  8B8B              ;1 ld hl,(Puntero_restore_caja)
1445  8B8B              ;	ld a,(hl)
1446  8B8B              ;	and a
1447  8B8B              ;	push af
1448  8B8B              ;	jr z,2F
1449  8B8B
1450  8B8B              ;	di
1451  8B8B              ;	jr $
1452  8B8B              ;	ei
1453  8B8B
1454  8B8B              ;	di
1455  8B8B              ;	ld de,Variables_DRAW
1456  8B8B              ;	ld bc,42
1457  8B8B              ;	ldir
1458  8B8B              ;	ei
1459  8B8B
1460  8B8B              ;2 call Incrementa_punteros_de_cajas
1461  8B8B
1462  8B8B
1463  8B8B C9           	ret
1464  8B8C
1465  8B8C              ; **************************************************************************************************
1466  8B8C              ;
1467  8B8C              ;	21/12/23
1468  8B8C              ;
1469  8B8C              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1470  8B8C
1471  8B8C E5           Restore_entidad push hl
1472  8B8D D5           	push de
1473  8B8E C5            	push bc
1474  8B8F
1475  8B8F 2A CA 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1476  8B92 11 85 87     	ld de,Variables_DRAW
1477  8B95 01 2A 00     	ld bc,42
1478  8B98 ED B0        	ldir
1479  8B9A
1480  8B9A C1           	pop bc
1481  8B9B D1           	pop de
1482  8B9C E1           	pop hl
1483  8B9D C9           	ret
1484  8B9E
1485  8B9E              ; **************************************************************************************************
1486  8B9E              ;
1487  8B9E              ;	08/05/23
1488  8B9E              ;
1489  8B9E              ;	Incrementamos los dos punteros de entidades. (+1).
1490  8B9E
1491  8B9E              Incrementa_punteros_de_cajas
1492  8B9E
1493  8B9E 2A CC 87     	ld hl,(Puntero_restore_caja)
1494  8BA1 22 CA 87     	ld (Puntero_store_caja),hl
1495  8BA4 2A CE 87     	ld hl,(Indice_restore_caja)
1496  8BA7 23           	inc hl
1497  8BA8 23           	inc hl
1498  8BA9 22 CE 87     	ld (Indice_restore_caja),hl
1499  8BAC CD 50 8B         call Extrae_address
1500  8BAF 22 CC 87         ld (Puntero_restore_caja),hl
1501  8BB2 C9               ret
1502  8BB3
1503  8BB3              ; **************************************************************************************************
1504  8BB3              ;
1505  8BB3              ;	21/12/23
1506  8BB3              ;
1507  8BB3              ;	Restore_Amadeus
1508  8BB3              ;
1509  8BB3              ;	Cargamos en DRAW los parámetros de Amadeus.
1510  8BB3              ;
1511  8BB3
1512  8BB3 E5           Restore_Amadeus	push hl
1513  8BB4 D5           	push de
1514  8BB5 C5            	push bc
1515  8BB6 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1516  8BB9 11 85 87     	ld de,Variables_DRAW
1517  8BBC 01 2A 00     	ld bc,42
1518  8BBF ED B0        	ldir
1519  8BC1 C1           	pop bc
1520  8BC2 D1           	pop de
1521  8BC3 E1           	pop hl
1522  8BC4 C9           	ret
1523  8BC5
1524  8BC5              ; *************************************************************************************************************************************************************
1525  8BC5              ;
1526  8BC5              ;	21/12/23
1527  8BC5              ;
1528  8BC5              ;	Store_Amadeus
1529  8BC5              ;
1530  8BC5              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1531  8BC5              ;
1532  8BC5              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1533  8BC5              ;
1534  8BC5              ;	DESTRUYE: HL y BC y DE.
1535  8BC5
1536  8BC5 21 85 87     Store_Amadeus ld hl,Variables_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1537  8BC8 01 2A 00     	ld bc,42
1538  8BCB ED B0        	ldir
1539  8BCD C9           	ret
1540  8BCE
1541  8BCE              ; -----------------------------------------------------------
1542  8BCE              ;
1543  8BCE              ;	21/12/23
1544  8BCE              ;
1545  8BCE              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1546  8BCE              ;
1547  8BCE              ;	Destruye: HL,BC,DE,A
1548  8BCE
1549  8BCE 21 85 87     Borra_datos_entidad ld hl,Variables_DRAW
1550  8BD1 01 29 00     	ld bc,41
1551  8BD4 AF           	xor a
1552  8BD5 77           	ld (hl),a
1553  8BD6 11 86 87     	ld de,Variables_DRAW+1
1554  8BD9 ED B0        	ldir
1555  8BDB C9           	ret
1556  8BDC
1557  8BDC              ; -----------------------------------------------------------
1558  8BDC
1559  8BDC              ; Teclado.
1560  8BDC
1561  8BDC 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1562  8BDE DB FE        	in a,($fe)
1563  8BE0 E6 01        	and $01
1564  8BE2 28 02        	jr z,1f
1565  8BE4 18 F6        	jr Pulsa_ENTER
1566  8BE6 C9           1 ret
1567  8BE7
1568  8BE7              ; **************************************************************************************************
1569  8BE7              ;
1570  8BE7              ; Temporización.
1571  8BE7
1572  8BE7              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1573  8BE7              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1574  8BE7              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1575  8BE7              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1576  8BE7
1577  8BE7              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1578  8BE7              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1579  8BE7              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1580  8BE7
1581  8BE7              ; A partir de $4f61 no hace falta DELAY.
1582  8BE7
1583  8BE7              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1584  8BE7
1585  8BE7 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1586  8BEA 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1587  8BEB 78           	LD A,B
1588  8BEC A7           	AND A
1589  8BED 20 FB        	JR NZ,wait
1590  8BEF C9           	RET
1591  8BF0
1592  8BF0              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1593  8BF0              ;
1594  8BF0              ;	5/3/23
1595  8BF0              ;
1596  8BF0              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1597  8BF0
1598  8BF0              Movimiento_Amadeus
1599  8BF0
1600  8BF0              ; Disparo.
1601  8BF0
1602  8BF0 3A FE 87     	ld a,(Disparo_Amadeus)
1603  8BF3 A7           	and a
1604  8BF4 20 02        	jr nz,1F
1605  8BF6 18 15        	jr 2F
1606  8BF8
1607  8BF8 3E F7        1 ld a,$f7													; "5" para disparar.
1608  8BFA DB FE        	in a,($fe)
1609  8BFC E6 10        	and $10
1610  8BFE
1611  8BFE F5           	push af
1612  8BFF CC A7 8C     	call z,Genera_disparo
1613  8C02 F1           	pop af
1614  8C03 20 08        	jr nz,2F
1615  8C05
1616  8C05 3A FE 87     	ld a,(Disparo_Amadeus)
1617  8C08 EE 01        	xor 1
1618  8C0A 32 FE 87     	ld (Disparo_Amadeus),a
1619  8C0D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1620  8C0F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1621  8C11 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1622  8C13 CC 6C 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1623  8C16
1624  8C16 3E F7        	ld a,$f7
1625  8C18 DB FE        	in a,($fe)
1626  8C1A E6 01        	and $01
1627  8C1C C8           	ret z
1628  8C1D
1629  8C1D 3E F7        	ld a,$f7
1630  8C1F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1631  8C21 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1632  8C23 CC 49 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1633  8C26 C9           	ret
1634  8C27
1635  8C27              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1636  8C27              ;
1637  8C27              ;	Rutina provisional para que los malotes cagen balas.
1638  8C27
1639  8C27              Detecta_disparo_entidad
1640  8C27
1641  8C27 3A 01 88     	ld a,(Disparo_entidad)
1642  8C2A A7           	and a
1643  8C2B C8           	ret z
1644  8C2C
1645  8C2C              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1646  8C2C
1647  8C2C              ;	ld a,$7f				; Detecta SPACE.
1648  8C2C              ;	in a,($fe)
1649  8C2C              ;	and 1
1650  8C2C              ;	ret nz
1651  8C2C
1652  8C2C CD A7 8C     	call Genera_disparo
1653  8C2F C9           	ret
1654  8C30
1655  8C30              ; ----------------------------------------------------------------------
1656  8C30              ;
1657  8C30              ;	8/9/23
1658  8C30
1659  8C30 2A E4 87     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1660  8C33 2B            	dec hl
1661  8C34 7E           	ld a,(hl)
1662  8C35 A7           	and a
1663  8C36 C8           	ret z										; Salimos si es álbum está vacío.
1664  8C37
1665  8C37 11 A1 87     	ld de,Variables_de_borrado+5
1666  8C3A 01 06 00     	ld bc,6
1667  8C3D ED B8        	lddr
1668  8C3F C9           	ret
1669  8C40
1670  8C40              ; ----------------------------------------------------------------------
1671  8C40              ;
1672  8C40              ;	9/9/23
1673  8C40
1674  8C40              Repone_datos_de_borrado_Amadeus
1675  8C40
1676  8C40 21 9C 87     	ld hl,Variables_de_borrado
1677  8C43 11 AC 70     	ld de,Album_de_fotos_Amadeus
1678  8C46 01 06 00     	ld bc,6
1679  8C49 ED B0        	ldir
1680  8C4B
1681  8C4B EB           	ex de,hl
1682  8C4C 22 E4 87     	ld (End_Snapshot_Amadeus),hl
1683  8C4F
1684  8C4F C9           	ret
1685  8C50
1686  8C50              ; ----------------------------------------------------------------------
1687  8C50              ;
1688  8C50              ;	27/10/23
1689  8C50              ;
1690  8C50
1691  8C50              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1692  8C50              ;	_ Album_de_fotos correspondiente.
1693  8C50
1694  8C50              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1695  8C50              ;	_ durante el proceso de escritura.
1696  8C50
1697  8C50              Repone_datos_de_borrado
1698  8C50
1699  8C50 F3           	di
1700  8C51 ED 5B DE 87  	ld de,(Stack_snapshot)
1701  8C55 21 9C 87     	ld hl,Variables_de_borrado
1702  8C58 01 06 00     	ld bc,6
1703  8C5B ED B0        	ldir
1704  8C5D FB           	ei
1705  8C5E
1706  8C5E EB           	ex de,hl
1707  8C5F 22 DE 87     	ld (Stack_snapshot),hl
1708  8C62
1709  8C62 C9           	ret
1710  8C63
1711  8C63              ; --------------------------------------------------------------------------------------
1712  8C63
1713  8C63              Pinta_Amadeus
1714  8C63
1715  8C63 CD 1C 8B        	call Calcula_malotes_Amadeus
1716  8C66 CD 14 95     	call Extrae_foto_Amadeus
1717  8C69 CD DC 8A     	call Limpia_album_Amadeus
1718  8C6C
1719  8C6C C9           	ret
1720  8C6D
1721  8C6D              Pinta_entidades
1722  8C6D
1723  8C6D              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1724  8C6D
1725  8C6D 3A E6 87     	ld a,(Ctrl_3)
1726  8C70 CB 47        	bit 0,a
1727  8C72 C8           	ret z
1728  8C73
1729  8C73 CD 04 8B     	call Calcula_numero_de_malotes
1730  8C76 CD 92 94     	call Extrae_foto_entidades
1731  8C79 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1732  8C7C
1733  8C7C C9           	ret
1734  8C7D
1735  8C7D              ; -----------------------------------------------------------------------------------
1736  8C7D              ;
1737  8C7D              ;	10/12/23
1738  8C7D              ;
1739  8C7D              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1740  8C7D
1741  8C7D              Actualiza_relojes
1742  8C7D
1743  8C7D 3A E6 87     	ld a,(Ctrl_3)
1744  8C80 CB 47        	bit 0,a
1745  8C82 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1746  8C83
1747  8C83 21 F9 87     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1748  8C86 34           	inc (hl)
1749  8C87
1750  8C87 34           	inc (hl)
1751  8C88 35           	dec (hl)
1752  8C89 C0           	ret nz
1753  8C8A
1754  8C8A 21 FA 87     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1755  8C8D 34           	inc (hl)
1756  8C8E C9           	ret
1757  8C8F
1758  8C8F              ; ---------------------------------------------------------------
1759  8C8F              ;
1760  8C8F              ;	21/12/23
1761  8C8F
1762  8C8F              Guarda_parametros_DRAW
1763  8C8F
1764  8C8F 21 85 87     	ld hl,Variables_DRAW
1765  8C92 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1766  8C95 01 2A 00     	ld bc,42
1767  8C98 ED B0        	ldir
1768  8C9A C9           	ret
1769  8C9B
1770  8C9B              Recupera_parametros_DRAW
1771  8C9B
1772  8C9B 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1773  8C9E 11 85 87     	ld de,Variables_DRAW
1774  8CA1 01 2A 00     	ld bc,42
1775  8CA4 ED B0        	ldir
1776  8CA6 C9           	ret
1777  8CA7
1778  8CA7              ; ---------------------------------------------------------------
1779  8CA7
1780  8CA7              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8CA7              ; ******************************************************************************************************************************************************************************************
   2+ 8CA7              ;
   3+ 8CA7              ;   21/07/23
   4+ 8CA7              ;
   5+ 8CA7              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8CA7              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8CA7              ;
   8+ 8CA7              ;
   9+ 8CA7              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8CA7              ;
  11+ 8CA7              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8CA7              ;               _ hacen las entidades hacia abajo.
  13+ 8CA7              ;
  14+ 8CA7              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8CA7              ;
  16+ 8CA7              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8CA7              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8CA7              ;
  19+ 8CA7              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8CA7              ;           _ la bala.
  21+ 8CA7              ;
  22+ 8CA7              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8CA7              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8CA7              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8CA7              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8CA7              ;           _ en el momento de generarse la bala)).
  27+ 8CA7
  28+ 8CA7              Genera_disparo
  29+ 8CA7
  30+ 8CA7              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8CA7              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8CA7              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8CA7              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8CA7              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8CA7              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8CA7              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8CA7
  38+ 8CA7              ; Exclusiones:
  39+ 8CA7
  40+ 8CA7 3A B2 87         ld a,(Vel_down)
  41+ 8CAA 47               ld b,a
  42+ 8CAB 3A F8 87         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8CAE B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8CAF D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8CB0 3A A9 87         ld a,(Columnas)
  46+ 8CB3 47               ld b,a
  47+ 8CB4 3A 87 87         ld a,(Columns)
  48+ 8CB7 B8               cp b
  49+ 8CB8 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8CB9
  51+ 8CB9              ; ----- ----- -----
  52+ 8CB9
  53+ 8CB9 3A A8 87         ld a,(Ctrl_0)
  54+ 8CBC CB 77            bit 6,a
  55+ 8CBE 20 06            jr nz,14F
  56+ 8CC0
  57+ 8CC0 3A 8D 87         ld a,(Coordenada_y)
  58+ 8CC3 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8CC5 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8CC6
  61+ 8CC6 21 00 80     14 ld hl,Indice_disparo
  62+ 8CC9 3A 8E 87         ld a,(CTRL_DESPLZ)
  63+ 8CCC 4F               ld c,a
  64+ 8CCD 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8CCF              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8CCF              ;                                            ""        ""       "f9", B="1"
  67+ 8CCF              ;                                            ""        ""       "fb", B="2"
  68+ 8CCF              ;                                            ""        ""       "fb", B="3"
  69+ 8CCF A7               and a
  70+ 8CD0 28 10            jr z,1F
  71+ 8CD2 E6 01            and 1
  72+ 8CD4 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8CD5
  74+ 8CD5 79               ld a,c
  75+ 8CD6 16 F9            ld d,$f9
  76+ 8CD8 23           2 inc hl
  77+ 8CD9 23               inc hl
  78+ 8CDA 04               inc b
  79+ 8CDB BA               cp d
  80+ 8CDC 28 04            jr z,1F
  81+ 8CDE 14               inc d
  82+ 8CDF 14               inc d
  83+ 8CE0 18 F6            jr 2B
  84+ 8CE2
  85+ 8CE2 CD 50 8B     1 call Extrae_address
  86+ 8CE5 E5               push hl
  87+ 8CE6 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8CE8 DD 21 5A 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8CEC
  90+ 8CEC              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8CEC              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8CEC
  93+ 8CEC 3A A8 87         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8CEF CB 77            bit 6,a
  95+ 8CF1 20 04            jr nz,19F
  96+ 8CF3
  97+ 8CF3 AF               xor a
  98+ 8CF4 32 01 88         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8CF7
 100+ 8CF7 3A 9A 87     19 ld a,(Cuad_objeto)
 101+ 8CFA FE 02            cp 2
 102+ 8CFC 38 66            jr c,3F
 103+ 8CFE 28 64            jr z,3F
 104+ 8D00
 105+ 8D00              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D00
 107+ 8D00 E6 01            and 1
 108+ 8D02 28 30            jr z,4F
 109+ 8D04
 110+ 8D04              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D04              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D04              ;
 113+ 8D04              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D04              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D04              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D04
 117+ 8D04 2A 88 87     	ld hl,(Posicion_actual)
 118+ 8D07
 119+ 8D07              ;   Amadeus o entidad ???.
 120+ 8D07
 121+ 8D07 3A A8 87         ld a,(Ctrl_0)
 122+ 8D0A CB 77            bit 6,a
 123+ 8D0C 28 0A            jr z,8F
 124+ 8D0E
 125+ 8D0E              ; 	Dispara Amadeus.
 126+ 8D0E
 127+ 8D0E 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8D10 CD 83 94         call PreviousScan
 129+ 8D13 CD 83 94         call PreviousScan
 130+ 8D16
 131+ 8D16              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8D16              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8D16              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8D16              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8D16
 136+ 8D16 18 11            jr 10F
 137+ 8D18
 138+ 8D18              ; 	Dispara Entidad.
 139+ 8D18
 140+ 8D18 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8D1B              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8D1B
 143+ 8D1B              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8D1B              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8D1B
 146+ 8D1B C5               push bc
 147+ 8D1C 06 10            ld b,16
 148+ 8D1E CD 74 94     9 call NextScan
 149+ 8D21 10 FB            djnz 9B
 150+ 8D23 C1               pop bc
 151+ 8D24 CD 8E 8D         call Ajusta_disparo_parte_izquierda
 152+ 8D27 18 06            jr 17F
 153+ 8D29
 154+ 8D29              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8D29              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8D29              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8D29              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8D29
 159+ 8D29 CD 8E 8D     10 call Ajusta_disparo_parte_izquierda
 160+ 8D2C CD 03 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8D2F              ;                                                      ; _al generar el disparo.
 162+ 8D2F
 163+ 8D2F              ; 	LLegados a este punto tendremos:
 164+ 8D2F              ;
 165+ 8D2F              ;       Puntero_objeto_disparo en IY.
 166+ 8D2F              ;       Rutinas_de_impresion en IX.
 167+ 8D2F              ;       Puntero_de_impresion en HL.
 168+ 8D2F              ;       Impacto/Dirección en BC.
 169+ 8D2F
 170+ 8D2F CD 96 8D     17 call Almacena_disparo
 171+ 8D32 18 52            jr 6F                                             ; RET.
 172+ 8D34
 173+ 8D34              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8D34              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8D34              ;
 176+ 8D34              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8D34              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8D34              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8D34
 180+ 8D34 2A 88 87     4 ld hl,(Posicion_actual)
 181+ 8D37
 182+ 8D37              ;   Amadeus o entidad ???.
 183+ 8D37
 184+ 8D37 3A A8 87         ld a,(Ctrl_0)
 185+ 8D3A CB 77            bit 6,a
 186+ 8D3C 28 0A            jr z,11F
 187+ 8D3E
 188+ 8D3E              ; 	Dispara Amadeus.
 189+ 8D3E
 190+ 8D3E 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8D40 CD 83 94         call PreviousScan
 192+ 8D43 CD 83 94         call PreviousScan
 193+ 8D46
 194+ 8D46              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8D46              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8D46              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8D46              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8D46
 199+ 8D46 18 11            jr 13F
 200+ 8D48
 201+ 8D48              ; 	Dispara Entidad.
 202+ 8D48
 203+ 8D48 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8D4B              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8D4B
 206+ 8D4B              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8D4B              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8D4B
 209+ 8D4B C5               push bc
 210+ 8D4C 06 10            ld b,16
 211+ 8D4E CD 74 94     12 call NextScan
 212+ 8D51 10 FB            djnz 12B
 213+ 8D53 C1               pop bc
 214+ 8D54
 215+ 8D54 CD 87 8D         call Ajusta_disparo_parte_derecha
 216+ 8D57 18 06            jr 18F
 217+ 8D59
 218+ 8D59              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8D59              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8D59              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8D59              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8D59
 223+ 8D59 CD 87 8D     13 call Ajusta_disparo_parte_derecha
 224+ 8D5C CD 03 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8D5F              ;                                                       ; _al generar el disparo.
 226+ 8D5F
 227+ 8D5F              ; LLegados a este punto tendremos:
 228+ 8D5F              ;
 229+ 8D5F              ;       Puntero_objeto_disparo en IY.
 230+ 8D5F              ;       Rutinas_de_impresion en IX.
 231+ 8D5F              ;       Puntero_de_impresion en HL.
 232+ 8D5F              ;       Impacto/Dirección en BC.
 233+ 8D5F
 234+ 8D5F CD 96 8D     18 call Almacena_disparo
 235+ 8D62 18 22            jr 6F                                               ; RET.
 236+ 8D64
 237+ 8D64              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8D64
 239+ 8D64 28 11        3 jr z,5F
 240+ 8D66
 241+ 8D66              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8D66              ;
 243+ 8D66              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8D66              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8D66              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8D66              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8D66
 248+ 8D66              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8D66              ;	   ""        ""       "f9", B="1"
 250+ 8D66              ;	   ""        ""       "fb", B="2"
 251+ 8D66              ; 	   ""        ""       "fb", B="3"
 252+ 8D66
 253+ 8D66 2A 88 87     	ld hl,(Posicion_actual)
 254+ 8D69 CD 74 94     	call NextScan
 255+ 8D6C
 256+ 8D6C              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8D6C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8D6C              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8D6C              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8D6C
 261+ 8D6C CD 8E 8D         call Ajusta_disparo_parte_izquierda
 262+ 8D6F
 263+ 8D6F              ; 	No se produce impacto. B="$80"
 264+ 8D6F              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8D6F
 266+ 8D6F 01 80 80         ld bc,$8080
 267+ 8D72
 268+ 8D72              ; 	LLegados a este punto tendremos:
 269+ 8D72              ;
 270+ 8D72              ;       Puntero_objeto_disparo en IY.
 271+ 8D72              ;       Rutinas_de_impresion en IX.
 272+ 8D72              ;       Puntero_de_impresion en HL.
 273+ 8D72              ;       Impacto/Dirección en BC.
 274+ 8D72
 275+ 8D72 CD 96 8D         call Almacena_disparo
 276+ 8D75 18 0F            jr 6F                                           ; RET.
 277+ 8D77
 278+ 8D77              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8D77              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8D77              ;
 281+ 8D77              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8D77              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8D77              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8D77              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8D77
 286+ 8D77 2A 88 87     5 ld hl,(Posicion_actual)
 287+ 8D7A CD 74 94     	call NextScan
 288+ 8D7D
 289+ 8D7D              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8D7D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8D7D              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8D7D              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8D7D
 294+ 8D7D CD 87 8D         call Ajusta_disparo_parte_derecha
 295+ 8D80
 296+ 8D80              ; 	No se produce impacto. B="$80"
 297+ 8D80              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8D80
 299+ 8D80 01 80 80     15 ld bc,$8080
 300+ 8D83
 301+ 8D83              ; 	LLegados a este punto tendremos:
 302+ 8D83              ;
 303+ 8D83              ;       Puntero_objeto_disparo en IY.
 304+ 8D83              ;       Rutinas_de_impresion en IX.
 305+ 8D83              ;       Puntero_de_impresion en HL.
 306+ 8D83              ;       Impacto/Dirección en BC.
 307+ 8D83
 308+ 8D83 CD 96 8D         call Almacena_disparo
 309+ 8D86
 310+ 8D86 C9           6 ret
 311+ 8D87
 312+ 8D87              ; ----------------------------------------------------------------
 313+ 8D87              ;
 314+ 8D87              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8D87              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8D87              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8D87
 318+ 8D87 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8D88 FE 02            cp 2
 320+ 8D8A 38 01            jr c,1F
 321+ 8D8C 23               inc hl
 322+ 8D8D C9           1 ret
 323+ 8D8E
 324+ 8D8E 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8D8F FE 01        	cp 1
 326+ 8D91 20 01        	jr nz,1F
 327+ 8D93 2B           	dec hl
 328+ 8D94 2B           1 dec hl
 329+ 8D95 C9               ret
 330+ 8D96
 331+ 8D96              ; ----------------------------------------------------------------
 332+ 8D96              ;
 333+ 8D96              ;   25/02/23
 334+ 8D96              ;
 335+ 8D96              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8D96              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8D96              ;
 338+ 8D96              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8D96              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8D96
 341+ 8D96              Almacena_disparo
 342+ 8D96
 343+ 8D96 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8D97 F1               pop af
 345+ 8D98 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8D99
 347+ 8D99 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8D9A E6 01            and 1
 349+ 8D9C 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8D9E              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8D9E              ; 	Dispara AMADEUS.
 352+ 8D9E
 353+ 8D9E              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8D9E              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8D9E              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8D9E              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8D9E
 358+ 8D9E C5               push bc
 359+ 8D9F 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8DA2 2A EB 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8DA5 A7               and a
 362+ 8DA6 ED 42            sbc hl,bc
 363+ 8DA8 CC D5 8A         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8DAB C1               pop bc
 365+ 8DAC 28 54            jr z,4F
 366+ 8DAE
 367+ 8DAE 2A EB 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8DB1 23               inc hl
 369+ 8DB2 23               inc hl
 370+ 8DB3 22 EB 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8DB6              ;                                                   ; _ Disparo_(+1).
 372+ 8DB6 18 18            jr 2F
 373+ 8DB8
 374+ 8DB8              ; Dispara una entidad.
 375+ 8DB8
 376+ 8DB8 C5           1 push bc
 377+ 8DB9 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8DBC 2A E9 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8DBF A7               and a
 380+ 8DC0 ED 42            sbc hl,bc
 381+ 8DC2 CC CE 8A         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8DC5 C1               pop bc
 383+ 8DC6 28 3A            jr z,4F
 384+ 8DC8
 385+ 8DC8 2A E9 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8DCB 23               inc hl
 387+ 8DCC 23               inc hl
 388+ 8DCD 22 E9 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8DD0              ;                                                   ; _ Disparo_(+1).
 390+ 8DD0 CD 50 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8DD3              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8DD3              ;
 393+ 8DD3              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8DD3              ;                                                     Rutinas_de_impresion en IX.
 395+ 8DD3              ;                                                     Puntero_de_impresion en HL.
 396+ 8DD3              ;                                                     Impacto/Dirección en BC.
 397+ 8DD3
 398+ 8DD3 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8DD4 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8DD5 23               inc hl                                          ; _ al siguiente.
 401+ 8DD6 A7               and a
 402+ 8DD7 20 C0            jr nz,3B
 403+ 8DD9
 404+ 8DD9 08               ex af,af
 405+ 8DDA ED 73 D8 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8DDE F9               ld sp,hl
 407+ 8DDF
 408+ 8DDF DD E5            push ix                                         ; Rutina de impresión.
 409+ 8DE1 F5               push af                                         ; Puntero de impresión.
 410+ 8DE2 FD E5            push iy                                         ; Puntero objeto.
 411+ 8DE4 C5               push bc                                         ; Control.
 412+ 8DE5
 413+ 8DE5 ED 7B D8 87      ld sp,(Stack)
 414+ 8DE9
 415+ 8DE9              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8DE9
 417+ 8DE9 21 C7 87     	ld hl,Ctrl_1
 418+ 8DEC CB C6        	set 0,(hl)
 419+ 8DEE
 420+ 8DEE DD E5        	push ix
 421+ 8DF0 E1               pop hl
 422+ 8DF1 F5               push af
 423+ 8DF2 DD E1            pop ix
 424+ 8DF4
 425+ 8DF4 CD 16 71     	call Guarda_foto_registros
 426+ 8DF7
 427+ 8DF7 21 C7 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8DFA CB 86        	res 0,(hl)
 429+ 8DFC
 430+ 8DFC              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8DFC              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8DFC
 433+ 8DFC CD D5 8A         call Inicia_Puntero_Disparo_Amadeus
 434+ 8DFF CD CE 8A         call Inicia_Puntero_Disparo_Entidades
 435+ 8E02
 436+ 8E02 C9           4 ret
 437+ 8E03
 438+ 8E03              ; ----------------------------------------------------------------
 439+ 8E03              ;
 440+ 8E03              ;   4/3/23
 441+ 8E03              ;
 442+ 8E03              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E03              ;   _ al generarse el disparo.
 444+ 8E03              ;
 445+ 8E03              ;       "$80" ..... No se produce colisión.
 446+ 8E03              ;       "$81" ..... Se produce colisión.
 447+ 8E03              ;
 448+ 8E03              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E03              ;         _ que forman el disparo.
 450+ 8E03
 451+ 8E03
 452+ 8E03              Comprueba_Colision
 453+ 8E03
 454+ 8E03              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E03
 456+ 8E03 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E05 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E06
 459+ 8E06 CD 3C 8E         call Modifica_H_Velocidad_disparo
 460+ 8E09
 461+ 8E09 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E0A FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E0C 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E0E
 465+ 8E0E 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8E10 CD 2C 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8E13
 468+ 8E13 7B               ld a,e
 469+ 8E14 E6 01            and 1
 470+ 8E16 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8E18              ;                                                  ; _ para activar IMPACTO.
 472+ 8E18 E1               pop hl
 473+ 8E19 E5               push hl
 474+ 8E1A CD 74 94         call NextScan
 475+ 8E1D
 476+ 8E1D 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8E1E FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8E20 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8E22              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8E22 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8E24 CD 2C 8E         call Bucle_2
 482+ 8E27
 483+ 8E27 43           1 ld b,e
 484+ 8E28 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8E29 FD E1            pop iy
 486+ 8E2B C9               ret
 487+ 8E2C
 488+ 8E2C              ; ---------- ----------
 489+ 8E2C
 490+ 8E2C 06 02        Bucle_2 ld b,2
 491+ 8E2E FD 7E 00     2 ld a,(iy)
 492+ 8E31 A6               and (hl)
 493+ 8E32 28 02            jr z,1F
 494+ 8E34 1E 81            ld e,$81
 495+ 8E36 23           1 inc hl
 496+ 8E37 FD 23            inc iy
 497+ 8E39 10 F3            djnz 2B
 498+ 8E3B C9               ret
 499+ 8E3C
 500+ 8E3C              ; ---------- ----------
 501+ 8E3C              ;
 502+ 8E3C              ;   21/7/23
 503+ 8E3C
 504+ 8E3C              Modifica_H_Velocidad_disparo
 505+ 8E3C
 506+ 8E3C 3A F8 87         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8E3F FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8E41 D0               ret nc                                         ; _ incrementamos H.
 509+ 8E42 24               inc h
 510+ 8E43
 511+ 8E43 C9               ret
 512+ 8E44
 513+ 8E44              ; -------------------------------------------------------------------------------------------------------------
 514+ 8E44              ;
 515+ 8E44              ;   04/12/23
 516+ 8E44              ;
 517+ 8E44              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8E44              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8E44              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8E44              ;
 521+ 8E44              ;   MODIFICA: HL,DE,B y A.
 522+ 8E44
 523+ 8E44              Genera_coordenadas_X
 524+ 8E44
 525+ 8E44              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8E44              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8E44
 528+ 8E44              ;   Limpiamos almacenes.
 529+ 8E44
 530+ 8E44 CD 75 8E         call Limpia_Coordenadas_X
 531+ 8E47
 532+ 8E47              ;   Almacenamos coordenadas X.
 533+ 8E47
 534+ 8E47              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8E47
 536+ 8E47 2A A2 87         ld hl,(Puntero_de_impresion)
 537+ 8E4A 11 F5 87         ld de,Coordenadas_X_Entidad
 538+ 8E4D 06 02            ld b,2
 539+ 8E4F
 540+ 8E4F 3A 8E 87         ld a,(CTRL_DESPLZ)
 541+ 8E52 A7               and a
 542+ 8E53 28 01            jr z,1F
 543+ 8E55 04               inc b
 544+ 8E56
 545+ 8E56 CD 6C 8E     1 call Guarda_coordenadas_X
 546+ 8E59
 547+ 8E59              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8E59
 549+ 8E59 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8E5C 11 F2 87         ld de,Coordenadas_X_Amadeus
 551+ 8E5F 06 02            ld b,2
 552+ 8E61
 553+ 8E61 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8E64 A7               and a
 555+ 8E65 28 01            jr z,2F
 556+ 8E67 04               inc b
 557+ 8E68
 558+ 8E68 CD 6C 8E     2 call Guarda_coordenadas_X
 559+ 8E6B
 560+ 8E6B              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8E6B
 562+ 8E6B C9               ret
 563+ 8E6C
 564+ 8E6C              ; ----- ----- ----- ----- -----
 565+ 8E6C
 566+ 8E6C 7D           Guarda_coordenadas_X  ld a,l
 567+ 8E6D E6 1F            and $1f
 568+ 8E6F 12           1 ld (de),a
 569+ 8E70 3C               inc a
 570+ 8E71 13               inc de
 571+ 8E72 10 FB            djnz 1B
 572+ 8E74 C9               ret
 573+ 8E75
 574+ 8E75 AF           Limpia_Coordenadas_X xor a
 575+ 8E76 06 06            ld b,6
 576+ 8E78 21 F2 87         ld hl,Coordenadas_X_Amadeus
 577+ 8E7B 77           1 ld (hl),a
 578+ 8E7C 23               inc hl
 579+ 8E7D 10 FC            djnz 1B
 580+ 8E7F C9               ret
 581+ 8E80
 582+ 8E80              ; ----- ----- ----- ----- -----
 583+ 8E80
 584+ 8E80              Compara_coordenadas_X
 585+ 8E80
 586+ 8E80 06 03            ld b,3
 587+ 8E82 11 F7 87         ld de,Coordenadas_X_Entidad+2
 588+ 8E85
 589+ 8E85 1A               ld a,(de)
 590+ 8E86 A7               and a
 591+ 8E87 20 01            jr nz,2F
 592+ 8E89 05               dec b
 593+ 8E8A
 594+ 8E8A 1B           2 dec de
 595+ 8E8B 1B               dec de
 596+ 8E8C 21 F2 87         ld hl,Coordenadas_X_Amadeus
 597+ 8E8F
 598+ 8E8F D5           1 push de
 599+ 8E90 E5               push hl
 600+ 8E91 C5               push bc
 601+ 8E92
 602+ 8E92 CD 9C 8E         call Comparando
 603+ 8E95
 604+ 8E95 C1               pop bc
 605+ 8E96 E1               pop hl
 606+ 8E97 D1               pop de
 607+ 8E98
 608+ 8E98 13               inc de
 609+ 8E99 10 F4            djnz 1B
 610+ 8E9B
 611+ 8E9B C9               ret
 612+ 8E9C
 613+ 8E9C              ; ----- ----- ----- ----- -----
 614+ 8E9C              ;
 615+ 8E9C              ;   4/12/23
 616+ 8E9C              ;
 617+ 8E9C              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8E9C
 619+ 8E9C 06 03        Comparando ld b,3
 620+ 8E9E 1A               ld a,(de)
 621+ 8E9F 4E           2 ld c,(hl)
 622+ 8EA0 B9               cp c
 623+ 8EA1 28 04            jr z,1F
 624+ 8EA3 23               inc hl
 625+ 8EA4 10 F9            djnz 2B
 626+ 8EA6 C9               ret
 627+ 8EA7
 628+ 8EA7 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8EA9 32 9B 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8EAC 21 ED 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8EAF CB D6            set 2,(hl)
 632+ 8EB1 C9               ret
 633+ 8EB2
 634+ 8EB2              ; -----------------------------------------------------------------------
 635+ 8EB2              ;
 636+ 8EB2              ;   7/12/23
 637+ 8EB2              ;
 638+ 8EB2
 639+ 8EB2              Detecta_colision_nave_entidad
 640+ 8EB2
 641+ 8EB2              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8EB2
 643+ 8EB2 FD 2A 8A 87      ld iy,(Puntero_objeto)
 644+ 8EB6 2A A2 87         ld hl,(Puntero_de_impresion)
 645+ 8EB9
 646+ 8EB9 E5               push hl
 647+ 8EBA
 648+ 8EBA              ; ----- ----- -----
 649+ 8EBA 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8EBC 06 0A            ld b,10
 651+ 8EBE CD EE 8E     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8EC1 7B               ld a,e
 653+ 8EC2 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8EC4 38 0E            jr c,3F
 655+ 8EC6
 656+ 8EC6              ; LLegados a este punto:
 657+ 8EC6              ;
 658+ 8EC6              ;   HAY COLISIÓN !!!!!.
 659+ 8EC6              ;
 660+ 8EC6              ;   .db (Impacto) de Amadeus a "1".
 661+ 8EC6              ;   SET el bit3 de (Impacto2).
 662+ 8EC6              ;
 663+ 8EC6              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8EC6
 665+ 8EC6 21 9B 87         ld hl,Impacto
 666+ 8EC9 36 01            ld (hl),1
 667+ 8ECB 21 ED 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8ECE CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8ED0 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8ED2
 671+ 8ED2 18 18            jr 1F
 672+ 8ED4
 673+ 8ED4              ; -----
 674+ 8ED4
 675+ 8ED4 E1           3 pop hl
 676+ 8ED5 CD 74 94         call NextScan
 677+ 8ED8 E5               push hl
 678+ 8ED9 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8EDA FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8EDC 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8EDE 30 0C            jr nc,1F
 682+ 8EE0              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8EE0 10 DC            djnz 2B
 684+ 8EE2
 685+ 8EE2              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8EE2
 687+ 8EE2              ; LLegados a este punto:
 688+ 8EE2              ;
 689+ 8EE2              ;   NO HAY COLISIÓN !!!!!.
 690+ 8EE2              ;
 691+ 8EE2              ;   .db (Impacto) de Amadeus a "0".
 692+ 8EE2              ;   RES el bit2 de (Impacto2).
 693+ 8EE2              ;
 694+ 8EE2              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8EE2              ;   Lo colocamos a "0".
 696+ 8EE2
 697+ 8EE2 21 ED 87         ld hl,Impacto2
 698+ 8EE5 CB 96            res 2,(hl)
 699+ 8EE7 2A EE 87         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8EEA 36 00            ld (hl),0
 701+ 8EEC
 702+ 8EEC E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8EED C9               ret
 704+ 8EEE
 705+ 8EEE               ; ---------- ----------
 706+ 8EEE
 707+ 8EEE C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8EEF 3A 87 87         ld a,(Columns)
 709+ 8EF2 47               ld b,a
 710+ 8EF3 FD 7E 00     2 ld a,(iy)
 711+ 8EF6 BE               cp (hl)
 712+ 8EF7 28 01            jr z,1F
 713+ 8EF9
 714+ 8EF9 1C               inc e
 715+ 8EFA
 716+ 8EFA 23           1 inc hl
 717+ 8EFB FD 23            inc iy
 718+ 8EFD 10 F4            djnz 2B
 719+ 8EFF C1               pop bc
 720+ 8F00 C9               ret
 721+ 8F01
 722+ 8F01              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F01              ;
 724+ 8F01              ;   13/03/23
 725+ 8F01              ;
 726+ 8F01              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F01              ;
 728+ 8F01              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F01
 730+ 8F01 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F04 7E               ld a,(hl)
 732+ 8F05 A7               and a
 733+ 8F06 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F07
 735+ 8F07 44               ld b,h
 736+ 8F08 4D               ld c,l
 737+ 8F09 2A E0 87         ld hl,(Stack_snapshot_disparos)
 738+ 8F0C E5               push hl
 739+ 8F0D A7               and a
 740+ 8F0E ED 42            sbc hl,bc
 741+ 8F10 E5               push hl
 742+ 8F11 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8F12
 744+ 8F12 E1               pop hl
 745+ 8F13 54               ld d,h
 746+ 8F14 5D               ld e,l
 747+ 8F15 1B               dec de
 748+ 8F16 ED B8            lddr                                                ; Limpiamos.
 749+ 8F18
 750+ 8F18 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8F1B 22 E0 87         ld (Stack_snapshot_disparos),hl
 752+ 8F1E
 753+ 8F1E C9               ret
 754+ 8F1F
 755+ 8F1F              ; -------------------------------------------------------------------------------------------------------------
 756+ 8F1F              ;
 757+ 8F1F              ;   18/07/23
 758+ 8F1F              ;
 759+ 8F1F
 760+ 8F1F              Motor_de_disparos
 761+ 8F1F
 762+ 8F1F              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8F1F
 764+ 8F1F 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8F22 2A EB 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8F25
 767+ 8F25 CD 50 8B     2 call Extrae_address
 768+ 8F28 7E               ld a,(hl)
 769+ 8F29 A7               and a
 770+ 8F2A 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8F2C
 772+ 8F2C              ; ----- ----- ----- ----- ----- -----
 773+ 8F2C
 774+ 8F2C C5               push bc
 775+ 8F2D CD F1 8F         call foto_disparo_a_borrar
 776+ 8F30
 777+ 8F30              ; Existe colisión con este disparo???
 778+ 8F30
 779+ 8F30 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8F31 7E               ld a,(hl)
 781+ 8F32 2B               dec hl
 782+ 8F33 E6 01            and 1
 783+ 8F35 28 1D            jr z,9F
 784+ 8F37
 785+ 8F37              ;   En este punto:
 786+ 8F37              ;
 787+ 8F37              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8F37              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8F37              ;   _con la entidad).
 790+ 8F37              ;
 791+ 8F37              ;   Disparo_2A defw 0                                ; Control.
 792+ 8F37              ;    defw 0                                          ; Puntero objeto.
 793+ 8F37              ;    defw 0                                          ; Puntero de impresión.
 794+ 8F37              ;    defw 0                                          ; Rutina de impresión.
 795+ 8F37
 796+ 8F37 E5               push hl
 797+ 8F38
 798+ 8F38 06 04            ld b,4
 799+ 8F3A 23           19 inc hl
 800+ 8F3B 10 FD            djnz 19B
 801+ 8F3D
 802+ 8F3D CD 50 8B         call Extrae_address
 803+ 8F40 CD 4B 9B         call Genera_coordenadas_disparo
 804+ 8F43
 805+ 8F43              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8F43
 807+ 8F43 21 F0 87         ld hl,Coordenadas_disparo_certero
 808+ 8F46 72               ld (hl),d
 809+ 8F47 23               inc hl
 810+ 8F48 73               ld (hl),e
 811+ 8F49
 812+ 8F49              ; Elimino el disparo de la base de datos.
 813+ 8F49
 814+ 8F49 E1               pop hl
 815+ 8F4A CD 70 90         call Elimina_disparo_de_base_de_datos
 816+ 8F4D 21 ED 87         ld hl,Impacto2
 817+ 8F50 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8F52
 819+ 8F52 18 06            jr 11F
 820+ 8F54
 821+ 8F54 CD 1A 90     9 call Mueve_disparo
 822+ 8F57 CD F1 8F         call foto_disparo_a_borrar
 823+ 8F5A
 824+ 8F5A C1           11 pop bc
 825+ 8F5B 18 04            jr 7F
 826+ 8F5D
 827+ 8F5D              ; ----- ----- ----- ----- ----- -----
 828+ 8F5D
 829+ 8F5D ED 42        1 sbc hl,bc
 830+ 8F5F 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8F61
 832+ 8F61 2A EB 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8F64 23               inc hl
 834+ 8F65 23               inc hl
 835+ 8F66 22 EB 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8F69 18 BA            jr 2B
 837+ 8F6B
 838+ 8F6B CD D5 8A     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8F6E              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8F6E
 841+ 8F6E              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8F6E
 843+ 8F6E 01 6E 85         ld bc,Disparo_11
 844+ 8F71 2A E9 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8F74
 846+ 8F74 CD 50 8B     5 call Extrae_address
 847+ 8F77 7E               ld a,(hl)
 848+ 8F78 A7               and a
 849+ 8F79 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8F7B
 851+ 8F7B              ; ----- ----- ----- ----- ----- -----
 852+ 8F7B
 853+ 8F7B C5               push bc
 854+ 8F7C CD F1 8F         call foto_disparo_a_borrar
 855+ 8F7F
 856+ 8F7F              ; Existe colisión con este disparo???
 857+ 8F7F
 858+ 8F7F 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8F80 7E               ld a,(hl)
 860+ 8F81 2B               dec hl
 861+ 8F82 E6 01            and 1
 862+ 8F84 28 4D            jr z,10F
 863+ 8F86
 864+ 8F86              ;! La colisión se produce con Amadeus???
 865+ 8F86              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8F86
 867+ 8F86 E5               push hl
 868+ 8F87
 869+ 8F87 06 04            ld b,4
 870+ 8F89 23           16 inc hl
 871+ 8F8A 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8F8C
 873+ 8F8C CD 50 8B         call Extrae_address
 874+ 8F8F CD 4B 9B         call Genera_coordenadas_disparo
 875+ 8F92
 876+ 8F92 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 8F93 FE 16            cp $16
 878+ 8F95 38 2A            jr c,15F
 879+ 8F97
 880+ 8F97
 881+ 8F97              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 8F97
 883+ 8F97 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 8F98
 885+ 8F98              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 8F98
 887+ 8F98 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 8F9B
 889+ 8F9B              ; Coordenada X de Amadeus en D.
 890+ 8F9B
 891+ 8F9B 7D               ld a,l
 892+ 8F9C E6 1F            and $1F
 893+ 8F9E 57               ld d,a
 894+ 8F9F
 895+ 8F9F 21 8A 85         ld hl,Amadeus_db+8
 896+ 8FA2 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 8FA3
 898+ 8FA3 21 F2 87         ld hl,Coordenadas_X_Amadeus
 899+ 8FA6 CD 6C 8E         call Guarda_coordenadas_X
 900+ 8FA9
 901+ 8FA9 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 8FAA
 903+ 8FAA              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 8FAA
 905+ 8FAA 06 02            ld b,2
 906+ 8FAC C5           20 push bc
 907+ 8FAD
 908+ 8FAD 06 03            ld b,3
 909+ 8FAF 21 F2 87         ld hl,Coordenadas_X_Amadeus
 910+ 8FB2 7E           18 ld a,(hl)
 911+ 8FB3 BA               cp d
 912+ 8FB4 20 04            jr nz,17F
 913+ 8FB6
 914+ 8FB6              ;! Colisión Amadeus !!!!!!!!!!
 915+ 8FB6
 916+ 8FB6 C1               pop bc
 917+ 8FB7 E1               pop hl
 918+ 8FB8 18 0D            jr 14F
 919+ 8FBA
 920+ 8FBA 23           17 inc hl
 921+ 8FBB 10 F5            djnz 18B
 922+ 8FBD
 923+ 8FBD 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 8FBE
 925+ 8FBE C1               pop bc
 926+ 8FBF 10 EB            djnz 20B
 927+ 8FC1
 928+ 8FC1
 929+ 8FC1              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 8FC1              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 8FC1
 932+ 8FC1 E1           15 pop hl
 933+ 8FC2 23               inc hl
 934+ 8FC3 35               dec (hl)
 935+ 8FC4 2B               dec hl
 936+ 8FC5 18 0C            jr 10F
 937+ 8FC7
 938+ 8FC7              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 8FC7              ; _ almacén de coordenadas_X de Amadeus.
 940+ 8FC7
 941+ 8FC7 E5           14 push hl
 942+ 8FC8 CD 70 90         call Elimina_disparo_de_base_de_datos
 943+ 8FCB 21 ED 87         ld hl,Impacto2
 944+ 8FCE CB CE            set 1,(hl)
 945+ 8FD0 E1               pop hl
 946+ 8FD1 18 06            jr 12F
 947+ 8FD3
 948+ 8FD3              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 8FD3
 950+ 8FD3 CD 1A 90     10 call Mueve_disparo
 951+ 8FD6 CD F1 8F         call foto_disparo_a_borrar
 952+ 8FD9 C1           12 pop bc
 953+ 8FDA
 954+ 8FDA 18 04            jr 8F
 955+ 8FDC
 956+ 8FDC              ; ----- ----- ----- ----- ----- -----
 957+ 8FDC
 958+ 8FDC ED 42        4 sbc hl,bc
 959+ 8FDE 28 0A            jr z,6F
 960+ 8FE0
 961+ 8FE0 2A E9 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 8FE3 23               inc hl
 963+ 8FE4 23               inc hl
 964+ 8FE5 22 E9 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 8FE8 18 8A            jr 5B
 966+ 8FEA
 967+ 8FEA CD CE 8A     6 call Inicia_Puntero_Disparo_Entidades
 968+ 8FED CD 75 8E         call Limpia_Coordenadas_X
 969+ 8FF0 C9               ret
 970+ 8FF1
 971+ 8FF1              ; ------------------------------------------------------------------
 972+ 8FF1
 973+ 8FF1              foto_disparo_a_borrar
 974+ 8FF1
 975+ 8FF1 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 8FF2 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 8FF3 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 8FF4
 979+ 8FF4 E5               push hl
 980+ 8FF5 23               inc hl
 981+ 8FF6 23               inc hl
 982+ 8FF7 ED 73 D8 87      ld (Stack),sp
 983+ 8FFB F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 8FFC FD E1            pop iy
 985+ 8FFE DD E1            pop ix
 986+ 9000 E1               pop hl
 987+ 9001 ED 7B D8 87      ld sp,(Stack)
 988+ 9005 3A C7 87         ld a,(Ctrl_1)
 989+ 9008 CB C7            set 0,a
 990+ 900A 32 C7 87         ld (Ctrl_1),a
 991+ 900D CD 16 71         call Guarda_foto_registros
 992+ 9010 3A C7 87         ld a,(Ctrl_1)
 993+ 9013 CB 87            res 0,a
 994+ 9015 32 C7 87         ld (Ctrl_1),a
 995+ 9018 E1               pop hl
 996+ 9019 C9               ret
 997+ 901A
 998+ 901A              ;---------------------------------------------------
 999+ 901A              ;
1000+ 901A              ;   18/07/23
1001+ 901A              ;
1002+ 901A
1003+ 901A              Mueve_disparo
1004+ 901A
1005+ 901A              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 901A              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 901A              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 901A
1009+ 901A E5               push hl
1010+ 901B
1011+ 901B 7E               ld a,(hl)
1012+ 901C
1013+ 901C 06 04            ld b,4
1014+ 901E 23           1 inc hl
1015+ 901F 10 FD            djnz 1B
1016+ 9021
1017+ 9021              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9021
1019+ 9021 CD 50 8B         call Extrae_address
1020+ 9024
1021+ 9024 E6 01            and 1
1022+ 9026 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9028
1024+ 9028              ; Disparo hacia arriba, (Amadeus).
1025+ 9028
1026+ 9028              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9028              ; _ de la dificultad.
1028+ 9028
1029+ 9028 CD 83 94         call PreviousScan
1030+ 902B CD 83 94         call PreviousScan
1031+ 902E CD 83 94         call PreviousScan
1032+ 9031 CD 83 94         call PreviousScan
1033+ 9034
1034+ 9034              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9034
1036+ 9034 7C               ld a,h
1037+ 9035 FE 40            cp $40
1038+ 9037 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9039
1040+ 9039              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9039
1042+ 9039 EB               ex de,hl
1043+ 903A 06 04            ld b,4
1044+ 903C 2B           6 dec hl
1045+ 903D 10 FD            djnz 6B
1046+ 903F
1047+ 903F CD 70 90         call Elimina_disparo_de_base_de_datos
1048+ 9042 E1               pop hl
1049+ 9043 18 10            jr 7F
1050+ 9045
1051+ 9045              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9045              ; HL contiene el puntero de impresión del disparo.
1053+ 9045              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9045
1055+ 9045 D5           3 push de
1056+ 9046 C5               push bc
1057+ 9047
1058+ 9047 CD 03 8E         call Comprueba_Colision
1059+ 904A
1060+ 904A              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 904A
1062+ 904A 78               ld a,b
1063+ 904B
1064+ 904B C1               pop bc
1065+ 904C D1               pop de
1066+ 904D
1067+ 904D EB               ex de,hl
1068+ 904E
1069+ 904E 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 904F 23               inc hl                                      ; _ movimiento.
1071+ 9050 72               ld (hl),d
1072+ 9051
1073+ 9051 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9052
1075+ 9052 23               inc hl                                      ; _ en curso.
1076+ 9053 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9054 2B               dec hl
1078+ 9055
1079+ 9055 C9           7 ret
1080+ 9056
1081+ 9056              ; Disparo hacia abajo, (Entidad).
1082+ 9056
1083+ 9056 3A F8 87     2 ld a,(Velocidad_disparo_entidades)
1084+ 9059 47               ld b,a
1085+ 905A
1086+ 905A CD 74 94     4 call NextScan
1087+ 905D 10 FB            djnz 4B
1088+ 905F
1089+ 905F              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 905F
1091+ 905F 7C               ld a,h
1092+ 9060 FE 58            cp $58
1093+ 9062 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9064
1095+ 9064 EB               ex de,hl
1096+ 9065 06 04            ld b,4
1097+ 9067 2B           5 dec hl
1098+ 9068 10 FD            djnz 5B
1099+ 906A
1100+ 906A CD 70 90         call Elimina_disparo_de_base_de_datos
1101+ 906D E1               pop hl
1102+ 906E 18 E5            jr 7B
1103+ 9070
1104+ 9070              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9070
1106+ 9070 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9073 AF               xor a
1108+ 9074 77               ld (hl),a
1109+ 9075 54               ld d,h
1110+ 9076 5D               ld e,l
1111+ 9077 13               inc de
1112+ 9078 ED B0            ldir
1113+ 907A C9               ret
1114+ 907B
1115+ 907B              ; -----------------------------------------------------------------
1116+ 907B              ;
1117+ 907B              ;   7/12/23
1118+ 907B              ;
1119+ 907B
1120+ 907B 3A ED 87     Selector_de_impactos ld a,(Impacto2)
1121+ 907E A7               and a
1122+ 907F C8               ret z
1123+ 9080
1124+ 9080              ; Analizamos si hay impacto por disparos.
1125+ 9080
1126+ 9080              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9080
1128+ 9080 CB 4F            bit 1,a
1129+ 9082 28 07            jr z,1F
1130+ 9084
1131+ 9084 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9087 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9089 18 08            jr 2F
1134+ 908B
1135+ 908B CB 47        1 bit 0,a
1136+ 908D C8               ret z
1137+ 908E
1138+ 908E              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 908E
1140+ 908E 21 C7 87         ld hl,Ctrl_1
1141+ 9091 CB D6            set 2,(hl)
1142+ 9093
1143+ 9093 C9           2 ret
1144+ 9094
1145+ 9094              ; -----------------------------------------------------------------
1146+ 9094              ;
1147+ 9094              ;   25/04/23
1148+ 9094              ;
1149+ 9094
1150+ 9094              Determina_resultado_comparativa
1151+ 9094
1152+ 9094              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9094              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9094              ;
1155+ 9094              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9094              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9094              ;
1158+ 9094              ;   SBC HL,DE
1159+ 9094
1160+ 9094              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9094              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9094
1163+ 9094              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9094              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9094
1166+ 9094
1167+ 9094 3A 9A 87         ld a,(Cuad_objeto)
1168+ 9097 FE 02            cp 2
1169+ 9099 28 26            jr z,2F
1170+ 909B 38 24            jr c,2F
1171+ 909D
1172+ 909D              ; Cuadrantes 3º y 4º
1173+ 909D
1174+ 909D E6 01            and 1
1175+ 909F 28 10            jr z,4F
1176+ 90A1
1177+ 90A1              ; Cuadrante 3º
1178+ 90A1
1179+ 90A1 7C               ld a,h
1180+ 90A2 06 00            ld b,0
1181+ 90A4
1182+ 90A4 CD 2F 91         call Compara_cositas_H3
1183+ 90A7
1184+ 90A7 04               inc b
1185+ 90A8 05               dec b
1186+ 90A9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 90AA
1188+ 90AA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 90AB 06 00            ld b,0
1190+ 90AD
1191+ 90AD CD 41 91         call Compara_cositas_L3
1192+ 90B0 C9               ret
1193+ 90B1
1194+ 90B1              ; Cuadrante 4º
1195+ 90B1
1196+ 90B1 7C           4 ld a,h
1197+ 90B2 06 00            ld b,0
1198+ 90B4
1199+ 90B4 CD 53 91         call Compara_cositas_H4
1200+ 90B7
1201+ 90B7 04               inc b
1202+ 90B8 05               dec b
1203+ 90B9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 90BA
1205+ 90BA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 90BB 06 00            ld b,0
1207+ 90BD
1208+ 90BD CD 69 91         call Compara_cositas_L4
1209+ 90C0 C9               ret
1210+ 90C1
1211+ 90C1              ; Cuadrantes 1º y 2º.
1212+ 90C1
1213+ 90C1 28 10        2 jr z,3F
1214+ 90C3
1215+ 90C3              ; 1er Cuadrante
1216+ 90C3
1217+ 90C3 7C               ld a,h
1218+ 90C4 06 00            ld b,0
1219+ 90C6
1220+ 90C6 CD 07 91         call Compara_cositas_H1
1221+ 90C9
1222+ 90C9 04               inc b
1223+ 90CA 05               dec b
1224+ 90CB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 90CC
1226+ 90CC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 90CD 06 00            ld b,0
1228+ 90CF
1229+ 90CF CD 1D 91         call Compara_cositas_L1
1230+ 90D2 C9               ret
1231+ 90D3
1232+ 90D3
1233+ 90D3              ; 2º Cuadrante
1234+ 90D3
1235+ 90D3 7C           3 ld a,h
1236+ 90D4 06 00            ld b,0
1237+ 90D6
1238+ 90D6 CD E3 90         call Compara_cositas_H2
1239+ 90D9
1240+ 90D9 04               inc b
1241+ 90DA 05               dec b
1242+ 90DB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 90DC
1244+ 90DC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 90DD 06 00            ld b,0
1246+ 90DF
1247+ 90DF CD F5 90         call Compara_cositas_L2
1248+ 90E2 C9               ret
1249+ 90E3
1250+ 90E3 A7           Compara_cositas_H2 and a
1251+ 90E4 28 0D            jr z,1F
1252+ 90E6              ;    cp $fd
1253+ 90E6              ;    jr z,1F
1254+ 90E6              ;    cp $fe
1255+ 90E6              ;    jr z,1F
1256+ 90E6 FE FF            cp $ff
1257+ 90E8 28 09            jr z,1F
1258+ 90EA FE 01            cp $01
1259+ 90EC 28 05            jr z,1F
1260+ 90EE FE 02            cp $02
1261+ 90F0 28 01            jr z,1F
1262+ 90F2 C0               ret nz
1263+ 90F3 04           1 inc b
1264+ 90F4 C9               ret
1265+ 90F5
1266+ 90F5 A7           Compara_cositas_L2 and a
1267+ 90F6 28 0D            jr z,1F
1268+ 90F8              ;    cp $fd
1269+ 90F8              ;    jr z,1F
1270+ 90F8 FE FE            cp $fe
1271+ 90FA 28 09            jr z,1F
1272+ 90FC FE FF            cp $ff
1273+ 90FE 28 05            jr z,1F
1274+ 9100 FE 01            cp $01
1275+ 9102 28 01            jr z,1F
1276+ 9104              ;    cp $02
1277+ 9104              ;    jr z,1F
1278+ 9104 C0               ret nz
1279+ 9105 04           1 inc b
1280+ 9106 C9               ret
1281+ 9107
1282+ 9107 A7           Compara_cositas_H1 and a
1283+ 9108 28 11            jr z,1F
1284+ 910A              ;    cp $fd
1285+ 910A              ;    jr z,1F
1286+ 910A              ;    cp $fe
1287+ 910A              ;    jr z,1F
1288+ 910A FE FF            cp $ff
1289+ 910C 28 0D            jr z,1F
1290+ 910E FE 01            cp $01
1291+ 9110 28 09            jr z,1F
1292+ 9112 FE 02            cp $02
1293+ 9114 28 05            jr z,1F
1294+ 9116 FE 03            cp $03
1295+ 9118 28 01            jr z,1F
1296+ 911A C0               ret nz
1297+ 911B 04           1 inc b
1298+ 911C C9               ret
1299+ 911D
1300+ 911D A7           Compara_cositas_L1 and a
1301+ 911E 28 0D            jr z,1F
1302+ 9120              ;    cp $fd
1303+ 9120              ;    jr z,1F
1304+ 9120              ;    cp $fe
1305+ 9120              ;    jr z,1F
1306+ 9120              ;    cp $ff
1307+ 9120              ;    jr z,1F
1308+ 9120 FE 01            cp $01
1309+ 9122 28 09            jr z,1F
1310+ 9124 FE 02            cp $02
1311+ 9126 28 05            jr z,1F
1312+ 9128 FE 03            cp $03
1313+ 912A 28 01            jr z,1F
1314+ 912C C0               ret nz
1315+ 912D 04           1 inc b
1316+ 912E C9               ret
1317+ 912F
1318+ 912F A7           Compara_cositas_H3 and a
1319+ 9130 28 0D            jr z,1F
1320+ 9132              ;    cp $fd
1321+ 9132              ;    jr z,1F
1322+ 9132 FE FE            cp $fe
1323+ 9134 28 09            jr z,1F
1324+ 9136 FE FF            cp $ff
1325+ 9138 28 05            jr z,1F
1326+ 913A FE 01            cp $01
1327+ 913C 28 01            jr z,1F
1328+ 913E              ;    cp $02
1329+ 913E              ;    jr z,1F
1330+ 913E              ;    cp $03
1331+ 913E              ;    jr z,1F
1332+ 913E C0               ret nz
1333+ 913F 04           1 inc b
1334+ 9140 C9               ret
1335+ 9141
1336+ 9141 A7           Compara_cositas_L3 and a
1337+ 9142 28 0D            jr z,1F
1338+ 9144              ;    cp $fd
1339+ 9144              ;    jr z,1F
1340+ 9144              ;    cp $fe
1341+ 9144              ;    jr z,1F
1342+ 9144              ;    cp $ff
1343+ 9144              ;    jr z,1F
1344+ 9144 FE 01            cp $01
1345+ 9146 28 09            jr z,1F
1346+ 9148 FE 02            cp $02
1347+ 914A 28 05            jr z,1F
1348+ 914C FE 03            cp $03
1349+ 914E 28 01            jr z,1F
1350+ 9150 C0               ret nz
1351+ 9151 04           1 inc b
1352+ 9152 C9               ret
1353+ 9153
1354+ 9153 A7           Compara_cositas_H4 and a
1355+ 9154 28 11            jr z,1F
1356+ 9156 FE FD            cp $fd
1357+ 9158 28 0D            jr z,1F
1358+ 915A FE FE            cp $fe
1359+ 915C 28 09            jr z,1F
1360+ 915E FE FF            cp $ff
1361+ 9160 28 05            jr z,1F
1362+ 9162 FE 01            cp $01
1363+ 9164 28 01            jr z,1F
1364+ 9166              ;    cp $02
1365+ 9166              ;    jr z,1F
1366+ 9166              ;    cp $03
1367+ 9166              ;    jr z,1F
1368+ 9166 C0               ret nz
1369+ 9167 04           1 inc b
1370+ 9168 C9               ret
1371+ 9169
1372+ 9169 A7           Compara_cositas_L4 and a
1373+ 916A 28 0D            jr z,1F
1374+ 916C              ;    cp $fd
1375+ 916C              ;    jr z,1F
1376+ 916C FE FE            cp $fe
1377+ 916E 28 09            jr z,1F
1378+ 9170 FE FF            cp $ff
1379+ 9172 28 05            jr z,1F
1380+ 9174 FE 01            cp $01
1381+ 9176 28 01            jr z,1F
1382+ 9178              ;    cp $02
1383+ 9178              ;    jr z,1F
1384+ 9178              ;    cp $03
1385+ 9178              ;    jr z,1F
1386+ 9178 C0               ret nz
1387+ 9179 04           1 inc b
1388+ 917A C9               ret
# file closed: Disparo.asm
1781  917B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 917B              ; ******************************************************************************************************************************************************************************************
   2+ 917B              ;
   3+ 917B              ; 26/06/23
   4+ 917B              ;
   5+ 917B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 917B
   7+ 917B              Draw
   8+ 917B
   9+ 917B CD 68 94     	call Prepara_draw
  10+ 917E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 917F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9180 28 05        	jr z,2F
  13+ 9182
  14+ 9182 3A 9A 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9185 18 0C        	jr 1F
  16+ 9187
  17+ 9187 2A 98 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 918A 22 88 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 918D CD 1C 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9190              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9190
  22+ 9190 CD DC 9D     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9193
  24+ 9193 3A A8 87     1 ld a,(Ctrl_0)
  25+ 9196 CB 6F        	bit 5,a
  26+ 9198 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 919A
  28+ 919A CD B2 91     	call Comprueba_limite_horizontal
  29+ 919D CD 42 92     	call Comprueba_limite_vertical
  30+ 91A0
  31+ 91A0              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 91A0              ; -----------------------
  33+ 91A0              ; -----------------------
  34+ 91A0              ; -----------------------
  35+ 91A0
  36+ 91A0 CD 98 93     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 91A3 CD CF 93     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 91A6 CD 2E 94     	call Define_rutina_de_impresion
  39+ 91A9
  40+ 91A9 3A A8 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 91AC CB AF        	res 5,a											; _a ser de utilidad.
  42+ 91AE 32 A8 87     	ld (Ctrl_0),a
  43+ 91B1
  44+ 91B1 C9           	ret
  45+ 91B2
  46+ 91B2              ; *******************************************************************************************************************************************************************************************
  47+ 91B2              ;	21/01/23
  48+ 91B2              ;
  49+ 91B2              ; 	Comprueba_limite_horizontal.
  50+ 91B2              ;
  51+ 91B2              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 91B2              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 91B2              ;
  54+ 91B2              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 91B2              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 91B2              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 91B2              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 91B2
  59+ 91B2
  60+ 91B2
  61+ 91B2 3A A8 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 91B5 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 91B7 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 91B9 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 91BB 32 A8 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 91BE 18 09            jr 6F
  67+ 91C0 CB 5F        1 bit 3,a
  68+ 91C2 28 0A            jr z,2F
  69+ 91C4 E6 F7            and $f7
  70+ 91C6 32 A8 87         ld (Ctrl_0),a
  71+ 91C9 CD 1C 93     6 call Inicializacion
  72+ 91CC 18 5B            jr 5F
  73+ 91CE E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 91CF
  75+ 91CF              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 91CF              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 91CF
  78+ 91CF EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 91D0 2A AA 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 91D3 CD 87 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 91D6 67           	ld h,a
  82+ 91D7 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 91D8 CD 87 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 91DB 67           	ld h,a
  85+ 91DC A7           	and a
  86+ 91DD ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 91DF 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 91E0 3A 9A 87     	ld a,(Cuad_objeto)
  89+ 91E3 FE 02        	cp 2
  90+ 91E5 38 1E        	jr c,3F
  91+ 91E7 28 1C        	jr z,3F
  92+ 91E9 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 91EA 28 23            jr z,7F
  94+ 91EC 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 91EE 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 91F0 E1           	pop hl
  97+ 91F1
  98+ 91F1              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 91F1              ; _para indicar con E="2" en caso necesario.
 100+ 91F1
 101+ 91F1 E5               push hl
 102+ 91F2 C5               push bc
 103+ 91F3 CD 87 97     	call calcula_tercio
 104+ 91F6 FE 01        	cp 1
 105+ 91F8 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 91FA CD 2A 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 91FD 28 26            jr z,9F
 108+ 91FF 38 24            jr c,9F
 109+ 9201 1E 00        11 ld e,0
 110+ 9203 18 22            jr 8F
 111+ 9205 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9206 28 07        	jr z, 7F
 113+ 9208 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 920A 1E 00         	ld e,0
 115+ 920C E1           	pop hl
 116+ 920D 18 04        	jr 4F
 117+ 920F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9211 18 15            jr 10F
 119+ 9213
 120+ 9213              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 9213              ; _para indicar con E="2" en caso necesario.
 122+ 9213
 123+ 9213 E5           4 push hl
 124+ 9214 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9215 CD 87 97     	call calcula_tercio
 126+ 9218 FE 01        	cp 1
 127+ 921A 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 921C CD 2A 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 921F 28 04            jr z,9F
 130+ 9221 30 02            jr nc,9F
 131+ 9223 18 02        	jr 8F
 132+ 9225 1E 02        9 ld e,2
 133+ 9227 C1           8 pop bc
 134+ 9228 E1           10 pop hl
 135+ 9229 C9           5 ret
 136+ 922A
 137+ 922A              ; --------------------
 138+ 922A              ;
 139+ 922A              ; 25/08/22
 140+ 922A
 141+ 922A CD 87 97     Comprueba_centro call calcula_tercio
 142+ 922D 67               ld h,a
 143+ 922E 08           	ex af,af
 144+ 922F FE 02        	cp 2
 145+ 9231 38 07        	jr c,1F
 146+ 9233 28 05        	jr z,1F
 147+ 9235 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9238 18 03        	jr 2F
 149+ 923A 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 923D 08           2 ex af,af
 151+ 923E A7               and a
 152+ 923F ED 42            sbc hl,bc
 153+ 9241 C9               ret
 154+ 9242
 155+ 9242              ; *********************************************************************************************************************************************************************************************
 156+ 9242              ;
 157+ 9242              ;   16/8/22
 158+ 9242              ;
 159+ 9242              ;	Comprueba_limite_vertical
 160+ 9242              ;
 161+ 9242              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 9242              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 9242              ;
 164+ 9242
 165+ 9242 2A 88 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 9245 7D           	ld a,l
 167+ 9246 E6 1F        	and $1F
 168+ 9248 57           	ld d,a
 169+ 9249 3A AC 87     	ld a,(Limite_vertical)
 170+ 924C BA           	cp d 											; Límite - Posición.
 171+ 924D 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 924E 3A 9A 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 9251 CB 47        	bit 0,a
 174+ 9253 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 9255
 176+ 9255              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 9255
 178+ 9255 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 9256 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9258
 181+ 9258              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9258              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9258
 184+ 9258 3A 8C 87         ld a,(Coordenada_X)
 185+ 925B 16 0F            ld d,Centro_izquierda
 186+ 925D A7               and a
 187+ 925E 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 925F 28 1E            jr z,3F
 189+ 9261 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 9263              ;                                                    ; _salimos sin modificar nada.
 191+ 9263 18 0E            jr 2F
 192+ 9265 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 9266 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 9268
 195+ 9268              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 9268              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 9268
 198+ 9268 3A 8C 87         ld a,(Coordenada_X)
 199+ 926B 16 10            ld d,Centro_derecha
 200+ 926D A7               and a
 201+ 926E 92               sub d
 202+ 926F 28 0E            jr z,3F
 203+ 9271 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 9273              ;                                                    ; _salimos sin modificar nada.
 205+ 9273 CB 43        2 bit 0,e
 206+ 9275 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 9277 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 9278 CD 0C 93         call Modificaccionne
 209+ 927B C1           	pop bc
 210+ 927C CD 1C 93         call Inicializacion
 211+ 927F C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 9280
 213+ 9280              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 9280
 215+ 9280 C5           4 push bc
 216+ 9281 01 87 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 9284 0A           	ld a,(bc)
 218+ 9285 3D           	dec a
 219+ 9286 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 9287 7D           	ld a,l
 221+ 9288 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9289 CB 47        	bit 0,a
 223+ 928B 28 03        	jr z,5F
 224+ 928D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 928E 18 2E        	jr 7F
 226+ 9290
 227+ 9290              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9290
 229+ 9290 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 9291 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 9292 3A A8 87     	ld a,(Ctrl_0)
 232+ 9295 CB 4F        	bit 1,a
 233+ 9297 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9299 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 929A
 236+ 929A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 929A
 238+ 929A 1C               inc e
 239+ 929B 1D               dec e
 240+ 929C 20 07            jr nz,12F
 241+ 929E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 929F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 92A0 22 88 87     	ld (Posicion_actual),hl
 244+ 92A3 18 44        13 jr 9F
 245+ 92A5 CB 43        12 bit 0,e
 246+ 92A7 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 92A9              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 92A9 C1           	pop bc
 249+ 92AA 18 D3        	jr 3B
 250+ 92AC 80           14 add b
 251+ 92AD 6F               ld l,a
 252+ 92AE 22 88 87     	ld (Posicion_actual),hl
 253+ 92B1 CD 0C 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 92B4 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 92B6 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 92B8 32 A8 87         ld (Ctrl_0),a
 257+ 92BB F1           	pop af
 258+ 92BC 18 2B        	jr 9F
 259+ 92BE
 260+ 92BE              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 92BE
 262+ 92BE F5           7 push af
 263+ 92BF 3A A8 87     	ld a,(Ctrl_0)
 264+ 92C2 CB 47        	bit 0,a
 265+ 92C4 20 1D        	jr nz,8F
 266+ 92C6 F1           	pop af
 267+ 92C7
 268+ 92C7              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 92C7
 270+ 92C7 1C           	inc e
 271+ 92C8 1D               dec e
 272+ 92C9 20 07            jr nz,10F
 273+ 92CB 90           	sub b
 274+ 92CC 6F               ld l,a
 275+ 92CD 22 88 87     	ld (Posicion_actual),hl
 276+ 92D0 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 92D2              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 92D2 CB 43        10 bit 0,e
 279+ 92D4 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 92D6              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 92D6 C1           	pop bc
 282+ 92D7 18 A6        	jr 3B
 283+ 92D9 90           16 sub b
 284+ 92DA 6F               ld l,a
 285+ 92DB 22 88 87     	ld (Posicion_actual),hl
 286+ 92DE CD 0C 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 92E1 18 06            jr 9F
 288+ 92E3 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 92E5 32 A8 87         ld (Ctrl_0),a
 290+ 92E8 F1           	pop af
 291+ 92E9 C1           9 pop bc
 292+ 92EA 1E 00        	ld e,0
 293+ 92EC CD 1C 93         call Inicializacion
 294+ 92EF F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 92F0 08           	ex af,af
 296+ 92F1 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 92F2 18 8B            jr 3B
 298+ 92F4
 299+ 92F4              ; --------------------
 300+ 92F4
 301+ 92F4 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 92F6 CD 83 94     1 call PreviousScan
 303+ 92F9 10 FB            djnz 1B
 304+ 92FB 22 88 87     	ld (Posicion_actual),hl
 305+ 92FE AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 92FF C9           	ret
 307+ 9300
 308+ 9300              ; --------------------
 309+ 9300
 310+ 9300 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9302 CD 74 94     1 call NextScan
 312+ 9305 10 FB            djnz 1B
 313+ 9307 22 88 87     	ld (Posicion_actual),hl
 314+ 930A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 930B C9           	ret
 316+ 930C
 317+ 930C              ; --------------------
 318+ 930C              ;
 319+ 930C              ;	22/01/23
 320+ 930C              ;
 321+ 930C              ;	E="1". Hemos cambiado de cuadrante.
 322+ 930C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 930C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 930C
 325+ 930C
 326+ 930C              Modificaccionne
 327+ 930C
 328+ 930C 3A 9A 87     	ld a,(Cuad_objeto)
 329+ 930F FE 02        	cp 2
 330+ 9311 CC F4 92         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9314 DC F4 92         call c,Modifica_Pos_actual
 332+ 9317 C8           	ret z
 333+ 9318 CD 00 93         call Modifica_Pos_actual2
 334+ 931B C9               ret
 335+ 931C
 336+ 931C              ; *************************************************************************************************************************************************************************************************
 337+ 931C              ;
 338+ 931C              ;	13/8/22
 339+ 931C              ;
 340+ 931C              ;	Inicializacion
 341+ 931C              ;
 342+ 931C              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 931C              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 931C              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 931C              ;
 346+ 931C              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 931C              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 931C              ;	_ desaparece/aparece.
 349+ 931C
 350+ 931C              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 931C              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 931C              ;
 353+ 931C              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 931C              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 931C              ; 		   [E] ="0"
 356+ 931C
 357+ 931C              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 931C
 359+ 931C CD 87 97     Inicializacion call calcula_tercio
 360+ 931F 28 36        	jr z,primit
 361+ 9321 E6 02        	and 2
 362+ 9323 20 07        	jr nz,segmit
 363+ 9325 7D           	ld a,l
 364+ 9326 FE 7F        	cp $7f
 365+ 9328 38 2D        	jr c,primit
 366+ 932A 28 2B        	jr z,primit
 367+ 932C CD 92 93     segmit call column
 368+ 932F 38 13        	jr c,tercuad
 369+ 9331 3E 04        cuarcuad ld a,4
 370+ 9333 32 9A 87     	ld (Cuad_objeto),a
 371+ 9336 21 20 48     	ld hl,$4820
 372+ 9339 22 AA 87     	ld (Limite_horizontal),hl
 373+ 933C 21 AC 87     	ld hl,Limite_vertical
 374+ 933F 36 0D        	ld (hl),$0d
 375+ 9341 08           	ex af,af
 376+ 9342 18 3C        	jr 1F
 377+ 9344              tercuad
 378+ 9344 3E 03        	ld a,3
 379+ 9346 32 9A 87     	ld (Cuad_objeto),a
 380+ 9349 21 20 48     	ld hl,$4820
 381+ 934C 22 AA 87     	ld (Limite_horizontal),hl
 382+ 934F 21 AC 87     	ld hl,Limite_vertical
 383+ 9352 36 12        	ld (hl),$12
 384+ 9354 08           	ex af,af
 385+ 9355 18 29        	jr 1F
 386+ 9357 CD 92 93     primit call column
 387+ 935A 38 13        	jr c, primcuad
 388+ 935C              segcuad
 389+ 935C 3E 02        	ld a,2
 390+ 935E 32 9A 87     	ld (Cuad_objeto),a
 391+ 9361 21 C0 4F     	ld hl,$4fc0
 392+ 9364 22 AA 87     	ld (Limite_horizontal),hl
 393+ 9367 21 AC 87     	ld hl,Limite_vertical
 394+ 936A 36 0D        	ld (hl),$0d
 395+ 936C 08           	ex af,af
 396+ 936D 18 11        	jr 1F
 397+ 936F              primcuad
 398+ 936F 3E 01        	ld a,1
 399+ 9371 32 9A 87     	ld (Cuad_objeto),a
 400+ 9374 21 C0 4F     	ld hl,$4fc0
 401+ 9377 22 AA 87     	ld (Limite_horizontal),hl
 402+ 937A 21 AC 87     	ld hl,Limite_vertical
 403+ 937D 36 12        	ld (hl),$12
 404+ 937F 08           	ex af,af
 405+ 9380
 406+ 9380 C5           1 push bc
 407+ 9381 E5           	push hl
 408+ 9382 D5           	push de
 409+ 9383
 410+ 9383 2A 88 87     	ld hl,(Posicion_actual)
 411+ 9386 CD 1F 9B     	call Genera_coordenadas
 412+ 9389
 413+ 9389 D1           	pop de
 414+ 938A E1           	pop hl
 415+ 938B C1           	pop bc
 416+ 938C
 417+ 938C 21 A8 87     	ld hl,Ctrl_0
 418+ 938F CB EE        	set 5,(hl)
 419+ 9391 C9           	ret
 420+ 9392
 421+ 9392              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9392
 423+ 9392              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9392              ;
 425+ 9392              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9392
 427+ 9392 7D           column ld a,l
 428+ 9393 E6 1F        	and $1f
 429+ 9395 FE 10         	cp $10
 430+ 9397 C9            	ret
 431+ 9398
 432+ 9398              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9398              ;
 434+ 9398              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9398              ;
 436+ 9398              ; 14/12/22
 437+ 9398              ;
 438+ 9398              ;	Modifica: A y BC.
 439+ 9398
 440+ 9398 3A 9A 87     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 939B E6 01        	and 1
 442+ 939D 28 17        	jr z,1F
 443+ 939F
 444+ 939F              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 939F
 446+ 939F 3A 8C 87     	ld a,(Coordenada_X)
 447+ 93A2 47           	ld b,a
 448+ 93A3 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 93A4 79           	ld a,c
 450+ 93A5 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 93A6 38 08        	jr c,2F
 452+ 93A8 47           	ld b,a
 453+ 93A9 79           	ld a,c
 454+ 93AA 90           	sub b
 455+ 93AB 32 A9 87     	ld (Columnas),a
 456+ 93AE 18 1B        	jr 4F
 457+ 93B0 79           2 ld a,c
 458+ 93B1 32 A9 87     	ld (Columnas),a
 459+ 93B4 18 15        	jr 4F
 460+ 93B6
 461+ 93B6              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 93B6
 463+ 93B6 3A 8C 87     1 ld a,(Coordenada_X)
 464+ 93B9 81           	add c
 465+ 93BA 3D           	dec a
 466+ 93BB D6 1F        	sub $1f
 467+ 93BD 38 08        	jr c,3F
 468+ 93BF 47           	ld b,a
 469+ 93C0 79           	ld a,c
 470+ 93C1 90           	sub b
 471+ 93C2 32 A9 87     	ld (Columnas),a
 472+ 93C5 18 04        	jr 4F
 473+ 93C7 79           3 ld a,c
 474+ 93C8 32 A9 87     	ld (Columnas),a
 475+ 93CB D9           4 exx
 476+ 93CC 4F           	ld c,a
 477+ 93CD D9           	exx
 478+ 93CE C9            ret
 479+ 93CF
 480+ 93CF              ; --------------------------------------------------------------------------------------------------------------------
 481+ 93CF              ;
 482+ 93CF              ;   19/7/23
 483+ 93CF              ;
 484+ 93CF              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 93CF              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 93CF              ;
 487+ 93CF              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 93CF              ;			HL e IY Contienen (Puntero_objeto).
 489+ 93CF              ;
 490+ 93CF              ;	DESTRUYE: HL,B Y A.
 491+ 93CF
 492+ 93CF 3A 9A 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 93D2 FE 02        	cp 2
 494+ 93D4 38 18        	jr c,1F
 495+ 93D6 28 16        	jr z,1F
 496+ 93D8 E6 01        	and 1
 497+ 93DA 28 0D        	jr z,3F
 498+ 93DC
 499+ 93DC              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 93DC
 501+ 93DC CD 22 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 93DF
 503+ 93DF 7D           9 ld a,l
 504+ 93E0 E6 1F        	and $1f
 505+ 93E2 28 2A        	jr z,7F
 506+ 93E4 2B           	dec hl
 507+ 93E5 10 F8        	djnz 9B
 508+ 93E7 18 25        	jr 7F
 509+ 93E9
 510+ 93E9              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 93E9
 512+ 93E9 2A 88 87     3 ld hl,(Posicion_actual)
 513+ 93EC 18 20        	jr 7F
 514+ 93EE
 515+ 93EE 28 14        1 jr z,2F
 516+ 93F0
 517+ 93F0              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 93F0
 519+ 93F0 CD 22 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 93F3
 521+ 93F3 7D           4 ld a,l
 522+ 93F4 E6 1F        	and $1f
 523+ 93F6 28 03        	jr z,6F
 524+ 93F8 2B           	dec hl
 525+ 93F9 10 F8        	djnz 4B
 526+ 93FB 06 0F        6 ld b,15
 527+ 93FD CD 83 94     5 call PreviousScan
 528+ 9400 10 FB        	djnz 5B
 529+ 9402 18 0A        	jr 7F
 530+ 9404
 531+ 9404              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9404
 533+ 9404 CD 22 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9407 06 0F        	ld b,15
 535+ 9409 CD 83 94     8 call PreviousScan
 536+ 940C 10 FB        	djnz 8B
 537+ 940E
 538+ 940E E5           7 push hl
 539+ 940F DD E1        	pop ix
 540+ 9411
 541+ 9411 2A 8A 87     	ld hl,(Puntero_objeto)
 542+ 9414 E5           	push hl
 543+ 9415 FD E1        	pop iy
 544+ 9417
 545+ 9417              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9417
 547+ 9417 3A A8 87     	ld a,(Ctrl_0)
 548+ 941A CB 77        	bit 6,a
 549+ 941C C8           	ret z
 550+ 941D
 551+ 941D              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 941D              ; _ entidad / Amadeus´.
 553+ 941D
 554+ 941D DD 22 9F 85  	ld (p.imp.amadeus),ix
 555+ 9421
 556+ 9421 C9           	ret
 557+ 9422
 558+ 9422              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9422              ;
 560+ 9422              ;	2/1/23
 561+ 9422              ;
 562+ 9422              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9422              ;
 564+ 9422              ;	Tras esta rutina tenemos:
 565+ 9422              ;
 566+ 9422              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9422              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9422              ;
 569+ 9422              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9422
 571+ 9422 2A 88 87     Operandos ld hl,(Posicion_actual)
 572+ 9425 3A A9 87     	ld a,(Columnas)
 573+ 9428 3D           	dec a
 574+ 9429 20 01        	jr nz,1F
 575+ 942B 3C           	inc a
 576+ 942C 47           1 ld b,a
 577+ 942D C9           	ret
 578+ 942E
 579+ 942E              ; --------------------------------------------------------------------------------------------------------------------
 580+ 942E              ;
 581+ 942E              ;	3/1/23
 582+ 942E              ;
 583+ 942E              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 942E              ;
 585+ 942E              ;	Destruye: A,B,HL y DE.
 586+ 942E
 587+ 942E              Define_rutina_de_impresion
 588+ 942E
 589+ 942E 3A 87 87     	ld a,(Columns)
 590+ 9431 47           	ld b,a
 591+ 9432 3A A9 87     	ld a,(Columnas)
 592+ 9435 B8           	cp b
 593+ 9436 20 0D        	jr nz,2f
 594+ 9438
 595+ 9438              ;	La entidad se imprime entera.
 596+ 9438
 597+ 9438 21 57 95     	ld hl, Indice_entidades_completas
 598+ 943B E6 01        	and 1
 599+ 943D 28 02        	jr z,1F
 600+ 943F
 601+ 943F 23           	inc hl
 602+ 9440 23           	inc hl
 603+ 9441
 604+ 9441 CD 50 8B     1 call Extrae_address
 605+ 9444 C9           	ret		;	ret
 606+ 9445
 607+ 9445              ;	La entidad no se imprime entera en pantalla.
 608+ 9445
 609+ 9445 3A 9A 87     2 ld a,(Cuad_objeto)
 610+ 9448 E6 01        	and 1
 611+ 944A 28 17        	jr z,3F
 612+ 944C
 613+ 944C              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 944C
 615+ 944C 21 5B 95     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 944F 3A 87 87     4 ld a,(Columns)
 617+ 9452 E6 01        	and 1
 618+ 9454 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 9456
 620+ 9456 23           	inc hl
 621+ 9457 23           	inc hl
 622+ 9458
 623+ 9458 3A A9 87     	ld a,(Columnas)
 624+ 945B E6 01        	and 1
 625+ 945D 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 945F
 627+ 945F 23           	inc hl
 628+ 9460 23           	inc hl
 629+ 9461
 630+ 9461 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 9463
 632+ 9463 21 61 95     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 9466 18 E7        	jr 4B
 634+ 9468
 635+ 9468              ; --------------------------------------------------------------------------------------------------------------------
 636+ 9468              ;
 637+ 9468              ;	Prepara_draw
 638+ 9468              ;
 639+ 9468              ;	Es una rutina de carga.
 640+ 9468              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 9468              ;
 642+ 9468              ;	FUNCIONAMIENTO:
 643+ 9468              ;
 644+ 9468              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 9468              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 9468              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 9468              ;
 648+ 9468              ;	DESTRUYE:
 649+ 9468              ;
 650+ 9468              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 9468
 652+ 9468 21 86 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 946B 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 946C 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 946D 4E           	ld c,(hl)
 656+ 946E 2A 88 87     	ld hl,(Posicion_actual)
 657+ 9471 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 9473 C9           	ret
 659+ 9474
 660+ 9474              ;----------------------------------------------------------------------------------------------------------------
 661+ 9474              ;
 662+ 9474              ;	5/08/22
 663+ 9474              ;
 664+ 9474              ;   NextScan.
 665+ 9474              ;
 666+ 9474              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 9474              ;
 668+ 9474              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 9474              ;
 670+ 9474              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9474              ;
 672+ 9474              ;       DESTRUIDOS: AF y HL !!!
 673+ 9474              ;
 674+ 9474              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9474              ;
 676+ 9474
 677+ 9474 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 9475 7C               ld a,h
 679+ 9476 E6 07            and 7
 680+ 9478 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9479
 682+ 9479 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 947A C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 947C 6F               ld l,a
 685+ 947D D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 947E
 687+ 947E 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 947F D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 9481 67               ld h,a
 690+ 9482 C9               ret
 691+ 9483
 692+ 9483              ;----------------------------------------------------------------------------------------------------------------
 693+ 9483              ;
 694+ 9483              ;	5/08/22
 695+ 9483              ;
 696+ 9483              ;   PreviousScan.
 697+ 9483              ;
 698+ 9483              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 9483              ;
 700+ 9483              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 9483              ;
 702+ 9483              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 9483              ;
 704+ 9483              ;       DESTRUIDOS: AF y HL !!!
 705+ 9483              ;
 706+ 9483              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 9483              ;
 708+ 9483
 709+ 9483 7C           PreviousScan ld a,h
 710+ 9484 25               dec h               ; Dec H.
 711+ 9485 E6 07            and 7
 712+ 9487 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9488
 714+ 9488 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9489 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 948B 6F               ld l,a
 717+ 948C D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 948D
 719+ 948D 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 948E C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9490 67               ld h,a
 722+ 9491 C9               ret
 723+ 9492
 724+ 9492              ; -----------------------------------------------------------------------------------
 725+ 9492              ;
 726+ 9492              ;	31/7/23
 727+ 9492              ;
 728+ 9492              ;	Rutina principal de pintado de entidades.
 729+ 9492              ;	Extrae la foto del frame, (entidades).
 730+ 9492
 731+ 9492              Extrae_foto_entidades
 732+ 9492
 733+ 9492 21 01 70     	ld hl,Album_de_fotos+1
 734+ 9495 7E           	ld a,(hl)
 735+ 9496 A7           	and a
 736+ 9497 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9498
 738+ 9498              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9498
 740+ 9498 3A D3 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 949B A7           	and a
 742+ 949C C8           	ret z
 743+ 949D
 744+ 949D              ; -----------------------------------
 745+ 949D
 746+ 949D ED 73 D8 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 94A1 31 00 70     	ld sp,Album_de_fotos
 748+ 94A4
 749+ 94A4 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 94A6 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 94A7 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 94A8
 753+ 94A8 ED 73 DA 87  	ld (Stack_2),sp
 754+ 94AC ED 7B D8 87  	ld sp,(Stack)
 755+ 94B0
 756+ 94B0              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 94B0
 758+ 94B0 3E CD        	ld a,$cd
 759+ 94B2 32 BA 94     	ld (Imprime),a
 760+ 94B5 EB           	ex de,hl
 761+ 94B6 22 BB 94     	ld (Imprime+1),hl
 762+ 94B9 EB           	ex de,hl
 763+ 94BA
 764+ 94BA              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 94BA
 766+ 94BA 00 00 00     Imprime db 0,0,0
 767+ 94BD
 768+ 94BD ED 73 D8 87  	ld (Stack),sp
 769+ 94C1
 770+ 94C1 3A D3 87     	ld a,(Numero_de_malotes)
 771+ 94C4 3D           	dec a
 772+ 94C5 28 09        	jr z,1F
 773+ 94C7 32 D3 87      	ld (Numero_de_malotes),a
 774+ 94CA
 775+ 94CA ED 7B DA 87  	ld sp,(Stack_2)
 776+ 94CE 18 D4        	jr 2B
 777+ 94D0
 778+ 94D0 AF           1 xor a
 779+ 94D1 32 DA 87     	ld (Stack_2),a
 780+ 94D4
 781+ 94D4 C9           	ret
 782+ 94D5
 783+ 94D5              ; -----------------------------------------------------------------------------------
 784+ 94D5              ;
 785+ 94D5              ;	28/2/23
 786+ 94D5              ;
 787+ 94D5              ;	Pinta los disparos generados.
 788+ 94D5
 789+ 94D5              Extrae_foto_disparos
 790+ 94D5
 791+ 94D5 21 57 70     	ld hl,Album_de_fotos_disparos+1
 792+ 94D8 7E               ld a,(hl)
 793+ 94D9 A7               and a
 794+ 94DA C8               ret z
 795+ 94DB
 796+ 94DB 3A E8 87     	ld a,(Numero_de_disparotes)
 797+ 94DE A7           	and a
 798+ 94DF C8           	ret z
 799+ 94E0 ED 73 D8 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 94E4 31 56 70     	ld sp,Album_de_fotos_disparos
 801+ 94E7
 802+ 94E7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 94E9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 94EA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 94EB
 806+ 94EB ED 73 DA 87  	ld (Stack_2),sp
 807+ 94EF ED 7B D8 87  	ld sp,(Stack)
 808+ 94F3
 809+ 94F3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 94F3
 811+ 94F3 3E CD        	ld a,$cd
 812+ 94F5 32 FD 94     	ld (Imprime2),a
 813+ 94F8 EB           	ex de,hl
 814+ 94F9 22 FE 94     	ld (Imprime2+1),hl
 815+ 94FC EB           	ex de,hl
 816+ 94FD
 817+ 94FD              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 94FD
 819+ 94FD 00 00 00     Imprime2 db 0,0,0
 820+ 9500
 821+ 9500 3A E8 87     	ld a,(Numero_de_disparotes)
 822+ 9503 3D           	dec a
 823+ 9504 28 09        	jr z,1F
 824+ 9506 32 E8 87      	ld (Numero_de_disparotes),a
 825+ 9509
 826+ 9509 ED 7B DA 87  	ld sp,(Stack_2)
 827+ 950D 18 D8        	jr 2B
 828+ 950F
 829+ 950F AF           1 xor a
 830+ 9510 32 DA 87     	ld (Stack_2),a
 831+ 9513 C9           	ret
 832+ 9514
 833+ 9514              ; -----------------------------------------------------------------------------------
 834+ 9514              ;
 835+ 9514              ;	4/9/23
 836+ 9514              ;
 837+ 9514              ;	Rutina principal de pintado de Amadeus.
 838+ 9514              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 9514
 840+ 9514 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9517 7E           	ld a,(hl)
 842+ 9518 A7           	and a
 843+ 9519 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 951A
 845+ 951A 3A D3 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 951D A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 951E C8           	ret z
 848+ 951F
 849+ 951F              ; -----------------------------------
 850+ 951F
 851+ 951F ED 73 D8 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 9523 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 853+ 9526
 854+ 9526 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9528 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9529 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 952A
 858+ 952A ED 73 DA 87  	ld (Stack_2),sp
 859+ 952E ED 7B D8 87  	ld sp,(Stack)
 860+ 9532
 861+ 9532              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9532
 863+ 9532 3E CD        	ld a,$cd
 864+ 9534 32 3C 95     	ld (Imprime_Amadeus),a
 865+ 9537 EB           	ex de,hl
 866+ 9538 22 3D 95     	ld (Imprime_Amadeus+1),hl
 867+ 953B EB           	ex de,hl
 868+ 953C
 869+ 953C              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 953C
 871+ 953C 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 953F
 873+ 953F ED 73 D8 87  	ld (Stack),sp
 874+ 9543
 875+ 9543 3A D3 87     	ld a,(Numero_de_malotes)
 876+ 9546 3D           	dec a
 877+ 9547 28 09        	jr z,1F
 878+ 9549 32 D3 87      	ld (Numero_de_malotes),a
 879+ 954C
 880+ 954C ED 7B DA 87  	ld sp,(Stack_2)
 881+ 9550 18 D4        	jr 2B
 882+ 9552
 883+ 9552 AF           1 xor a
 884+ 9553 32 DA 87     	ld (Stack_2),a
 885+ 9556
 886+ 9556 C9           	ret
# file closed: Draw_XOR.asm
1782  9557              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9557              ;   índices de Rutinas de impresión.
   2+ 9557
   3+ 9557 67 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9559 94 95            defw Pinta_Amadeus_3x2
   5+ 955B
   6+ 955B EA 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 955D 8A 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 955F 3E 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9561
  10+ 9561 14 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9563 18 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9565 CC 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9567
  14+ 9567
  15+ 9567              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9567              ;
  17+ 9567              ;   12/12/22
  18+ 9567              ;
  19+ 9567              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9567              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9567              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9567              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9567              ;
  24+ 9567              ;   Modifica: DE y HL.
  25+ 9567
  26+ 9567 ED 73 D8 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 956B FD F9        	ld sp,iy
  28+ 956D 06 10            ld b,16
  29+ 956F D1           1 pop de
  30+ 9570 7B               ld a,e
  31+ 9571 AE               xor (hl)
  32+ 9572 77           	ld (hl),a
  33+ 9573 23           	inc hl
  34+ 9574 7A               ld a,d
  35+ 9575 AE               xor (hl)
  36+ 9576 77           	ld (hl),a
  37+ 9577 2B           	dec hl
  38+ 9578 24           	inc h
  39+ 9579 7C               ld a,h
  40+ 957A E6 07            and 7
  41+ 957C 20 0A            jr nz,2F
  42+ 957E 7D               ld a,l
  43+ 957F C6 20            add a,$20
  44+ 9581 6F               ld l,a
  45+ 9582 38 04            jr c,2F
  46+ 9584 7C               ld a,h
  47+ 9585 D6 08            sub 8
  48+ 9587 67               ld h,a
  49+ 9588 7C           2 ld a,h
  50+ 9589 FE 58            cp $58
  51+ 958B 28 02            jr z,3F
  52+ 958D 10 E0            djnz 1B
  53+ 958F ED 7B D8 87  3 ld sp,(Stack)
  54+ 9593 C9           	ret
  55+ 9594
  56+ 9594 ED 73 D8 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9598 FD F9        	ld sp,iy
  58+ 959A 06 08            ld b,8
  59+ 959C D1           1 pop de
  60+ 959D 7B               ld a,e
  61+ 959E AE               xor (hl)
  62+ 959F 77           	ld (hl),a
  63+ 95A0 23           	inc hl
  64+ 95A1 7A               ld a,d
  65+ 95A2 AE               xor (hl)
  66+ 95A3 77           	ld (hl),a
  67+ 95A4 23           	inc hl
  68+ 95A5 D1           	pop de
  69+ 95A6 7B               ld a,e
  70+ 95A7 AE               xor (hl)
  71+ 95A8 77           	ld (hl),a
  72+ 95A9 2B           	dec hl
  73+ 95AA 2B           	dec hl
  74+ 95AB 24           	inc h
  75+ 95AC 7C               ld a,h
  76+ 95AD E6 07            and 7
  77+ 95AF 20 0A            jr nz,2F
  78+ 95B1 7D               ld a,l
  79+ 95B2 C6 20            add a,$20
  80+ 95B4 6F               ld l,a
  81+ 95B5 38 04            jr c,2F
  82+ 95B7 7C               ld a,h
  83+ 95B8 D6 08            sub 8
  84+ 95BA 67               ld h,a
  85+ 95BB 7C           2 ld a,h
  86+ 95BC FE 58            cp $58
  87+ 95BE 28 25            jr z,4F
  88+ 95C0 7A               ld a,d
  89+ 95C1 AE               xor (hl)
  90+ 95C2 77               ld (hl),a
  91+ 95C3 D1           	pop de
  92+ 95C4 23           	inc hl
  93+ 95C5 7B               ld a,e
  94+ 95C6 AE               xor (hl)
  95+ 95C7 77           	ld (hl),a
  96+ 95C8 23           	inc hl
  97+ 95C9 7A               ld a,d
  98+ 95CA AE               xor (hl)
  99+ 95CB 77           	ld (hl),a
 100+ 95CC 2B           	dec hl
 101+ 95CD 2B           	dec hl
 102+ 95CE 24           	inc h
 103+ 95CF 7C               ld a,h
 104+ 95D0 E6 07            and 7
 105+ 95D2 20 0A            jr nz,3F
 106+ 95D4 7D               ld a,l
 107+ 95D5 C6 20            add a,$20
 108+ 95D7 6F               ld l,a
 109+ 95D8 38 04            jr c,3F
 110+ 95DA 7C               ld a,h
 111+ 95DB D6 08            sub 8
 112+ 95DD 67               ld h,a
 113+ 95DE 7C           3 ld a,h
 114+ 95DF FE 58            cp $58
 115+ 95E1 28 02            jr z,4F
 116+ 95E3 10 B7            djnz 1B
 117+ 95E5 ED 7B D8 87  4 ld sp,(Stack)
 118+ 95E9 C9           	ret
 119+ 95EA
 120+ 95EA              ; ---------------------------------------------------
 121+ 95EA
 122+ 95EA ED 73 D8 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 95EE FD F9        	ld sp,iy
 124+ 95F0
 125+ 95F0              ; >>>
 126+ 95F0
 127+ 95F0 06 10            ld b,16
 128+ 95F2 D1           1 pop de
 129+ 95F3 7A           	ld a,d
 130+ 95F4 AE           	xor (hl)
 131+ 95F5 77           	ld (hl),a
 132+ 95F6 24           	inc h
 133+ 95F7 7C               ld a,h
 134+ 95F8 E6 07            and 7
 135+ 95FA 20 0C            jr nz,2F
 136+ 95FC 7D               ld a,l
 137+ 95FD C6 20            add a,$20
 138+ 95FF 6F               ld l,a
 139+ 9600 38 06            jr c,2F
 140+ 9602 7C               ld a,h
 141+ 9603 D6 08            sub 8
 142+ 9605 67               ld h,a
 143+ 9606 18 00            jr 2F
 144+ 9608 7C           2 ld a,h
 145+ 9609 FE 58            cp $58
 146+ 960B 28 02            jr z,3F
 147+ 960D 10 E3            djnz 1B
 148+ 960F ED 7B D8 87  3 ld sp,(Stack)
 149+ 9613 C9           	ret
 150+ 9614
 151+ 9614 ED 73 D8 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9618 FD F9        	ld sp,iy
 153+ 961A
 154+ 961A              ; >>>
 155+ 961A
 156+ 961A 06 10            ld b,16
 157+ 961C D1           1 pop de
 158+ 961D 7B           	ld a,e
 159+ 961E AE           	xor (hl)
 160+ 961F 77           	ld (hl),a
 161+ 9620 24           	inc h
 162+ 9621 7C               ld a,h
 163+ 9622 E6 07            and 7
 164+ 9624 20 0C            jr nz,2F
 165+ 9626 7D               ld a,l
 166+ 9627 C6 20            add a,$20
 167+ 9629 6F               ld l,a
 168+ 962A 38 06            jr c,2F
 169+ 962C 7C               ld a,h
 170+ 962D D6 08            sub 8
 171+ 962F 67               ld h,a
 172+ 9630 18 00            jr 2F
 173+ 9632 7C           2 ld a,h
 174+ 9633 FE 58            cp $58
 175+ 9635 28 02            jr z,3F
 176+ 9637 10 E3            djnz 1B
 177+ 9639 ED 7B D8 87  3 ld sp,(Stack)
 178+ 963D C9           	ret
 179+ 963E
 180+ 963E              ; ---------------------------------------------------
 181+ 963E
 182+ 963E ED 73 D8 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9642 FD F9        	ld sp,iy
 184+ 9644 06 08            ld b,8
 185+ 9646 D1           1 pop de
 186+ 9647 7A           	ld a,d
 187+ 9648 AE           	xor (hl)
 188+ 9649 77           	ld (hl),a
 189+ 964A 23           	inc hl
 190+ 964B D1           	pop de
 191+ 964C 7B           	ld a,e
 192+ 964D AE           	xor (hl)
 193+ 964E 77           	ld (hl),a
 194+ 964F 2B           	dec hl
 195+ 9650 24            	inc h
 196+ 9651 7C               ld a,h
 197+ 9652 E6 07            and 7
 198+ 9654 20 0A            jr nz,2F
 199+ 9656 7D               ld a,l
 200+ 9657 C6 20            add a,$20
 201+ 9659 6F               ld l,a
 202+ 965A 38 04            jr c,2F
 203+ 965C 7C               ld a,h
 204+ 965D D6 08            sub 8
 205+ 965F 67               ld h,a
 206+ 9660 7C           2 ld a,h
 207+ 9661 FE 58            cp $58
 208+ 9663 28 20            jr z,4F
 209+ 9665 D1               pop de
 210+ 9666 7B           	ld a,e
 211+ 9667 AE           	xor (hl)
 212+ 9668 77           	ld (hl),a
 213+ 9669 23           	inc hl
 214+ 966A 7A           	ld a,d
 215+ 966B AE           	xor (hl)
 216+ 966C 77           	ld (hl),a
 217+ 966D 2B           	dec hl
 218+ 966E 24           	inc h
 219+ 966F 7C               ld a,h
 220+ 9670 E6 07            and 7
 221+ 9672 20 0A            jr nz,3F
 222+ 9674 7D               ld a,l
 223+ 9675 C6 20            add a,$20
 224+ 9677 6F               ld l,a
 225+ 9678 38 04            jr c,3F
 226+ 967A 7C               ld a,h
 227+ 967B D6 08            sub 8
 228+ 967D 67               ld h,a
 229+ 967E 7C           3 ld a,h
 230+ 967F FE 58            cp $58
 231+ 9681 28 02            jr z,4F
 232+ 9683 10 C1            djnz 1B
 233+ 9685 ED 7B D8 87  4 ld sp,(Stack)
 234+ 9689 C9           	ret
 235+ 968A
 236+ 968A ED 73 D8 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 968E FD F9        	ld sp,iy
 238+ 9690 06 08            ld b,8
 239+ 9692 D1           1 pop de
 240+ 9693 D1           	pop de
 241+ 9694 7B           	ld a,e
 242+ 9695 AE           	xor (hl)
 243+ 9696 77           	ld (hl),a
 244+ 9697 24            	inc h
 245+ 9698 7C               ld a,h
 246+ 9699 E6 07            and 7
 247+ 969B 20 0A            jr nz,2F
 248+ 969D 7D               ld a,l
 249+ 969E C6 20            add a,$20
 250+ 96A0 6F               ld l,a
 251+ 96A1 38 04            jr c,2F
 252+ 96A3 7C               ld a,h
 253+ 96A4 D6 08            sub 8
 254+ 96A6 67               ld h,a
 255+ 96A7 7C           2 ld a,h
 256+ 96A8 FE 58            cp $58
 257+ 96AA 28 1B            jr z,4F
 258+ 96AC D1               pop de
 259+ 96AD 7A           	ld a,d
 260+ 96AE AE           	xor (hl)
 261+ 96AF 77           	ld (hl),a
 262+ 96B0 24           	inc h
 263+ 96B1 7C               ld a,h
 264+ 96B2 E6 07            and 7
 265+ 96B4 20 0A            jr nz,3F
 266+ 96B6 7D               ld a,l
 267+ 96B7 C6 20            add a,$20
 268+ 96B9 6F               ld l,a
 269+ 96BA 38 04            jr c,3F
 270+ 96BC 7C               ld a,h
 271+ 96BD D6 08            sub 8
 272+ 96BF 67               ld h,a
 273+ 96C0 7C           3 ld a,h
 274+ 96C1 FE 58            cp $58
 275+ 96C3 28 02            jr z,4F
 276+ 96C5 10 CB            djnz 1B
 277+ 96C7 ED 7B D8 87  4 ld sp,(Stack)
 278+ 96CB C9           	ret
 279+ 96CC
 280+ 96CC ED 73 D8 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 96D0 FD F9        	ld sp,iy
 282+ 96D2 06 08            ld b,8
 283+ 96D4 D1           1 pop de
 284+ 96D5 7B           	ld a,e
 285+ 96D6 AE           	xor (hl)
 286+ 96D7 77           	ld (hl),a
 287+ 96D8 23           	inc hl
 288+ 96D9 7A           	ld a,d
 289+ 96DA AE           	xor (hl)
 290+ 96DB 77           	ld (hl),a
 291+ 96DC 2B           	dec hl
 292+ 96DD 24             	inc h
 293+ 96DE 7C               ld a,h
 294+ 96DF E6 07            and 7
 295+ 96E1 20 0A            jr nz,2F
 296+ 96E3 7D               ld a,l
 297+ 96E4 C6 20            add a,$20
 298+ 96E6 6F               ld l,a
 299+ 96E7 38 04            jr c,2F
 300+ 96E9 7C               ld a,h
 301+ 96EA D6 08            sub 8
 302+ 96EC 67               ld h,a
 303+ 96ED 7C           2 ld a,h
 304+ 96EE FE 58            cp $58
 305+ 96F0 28 21            jr z,4F
 306+ 96F2 D1               pop de
 307+ 96F3 7A           	ld a,d
 308+ 96F4 AE           	xor (hl)
 309+ 96F5 77           	ld (hl),a
 310+ 96F6 23           	inc hl
 311+ 96F7 D1               pop de
 312+ 96F8 7B           	ld a,e
 313+ 96F9 AE           	xor (hl)
 314+ 96FA 77           	ld (hl),a
 315+ 96FB 2B           	dec hl
 316+ 96FC 24           	inc h
 317+ 96FD 7C               ld a,h
 318+ 96FE E6 07            and 7
 319+ 9700 20 0A            jr nz,3F
 320+ 9702 7D               ld a,l
 321+ 9703 C6 20            add a,$20
 322+ 9705 6F               ld l,a
 323+ 9706 38 04            jr c,3F
 324+ 9708 7C               ld a,h
 325+ 9709 D6 08            sub 8
 326+ 970B 67               ld h,a
 327+ 970C 7C           3 ld a,h
 328+ 970D FE 58            cp $58
 329+ 970F 28 02            jr z,4F
 330+ 9711 10 C1            djnz 1B
 331+ 9713 ED 7B D8 87  4 ld sp,(Stack)
 332+ 9717 C9           	ret
 333+ 9718
 334+ 9718 ED 73 D8 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 971C FD F9        	ld sp,iy
 336+ 971E 06 08            ld b,8
 337+ 9720 D1           1 pop de
 338+ 9721 7B           	ld a,e
 339+ 9722 AE           	xor (hl)
 340+ 9723 77           	ld (hl),a
 341+ 9724 24            	inc h
 342+ 9725 7C               ld a,h
 343+ 9726 E6 07            and 7
 344+ 9728 20 0A            jr nz,2F
 345+ 972A 7D               ld a,l
 346+ 972B C6 20            add a,$20
 347+ 972D 6F               ld l,a
 348+ 972E 38 04            jr c,2F
 349+ 9730 7C               ld a,h
 350+ 9731 D6 08            sub 8
 351+ 9733 67               ld h,a
 352+ 9734 7C           2 ld a,h
 353+ 9735 FE 58            cp $58
 354+ 9737 28 1C            jr z,4F
 355+ 9739 D1               pop de
 356+ 973A 7A           	ld a,d
 357+ 973B AE           	xor (hl)
 358+ 973C 77           	ld (hl),a
 359+ 973D 24           	inc h
 360+ 973E 7C               ld a,h
 361+ 973F E6 07            and 7
 362+ 9741 20 0A            jr nz,3F
 363+ 9743 7D               ld a,l
 364+ 9744 C6 20            add a,$20
 365+ 9746 6F               ld l,a
 366+ 9747 38 04            jr c,3F
 367+ 9749 7C               ld a,h
 368+ 974A D6 08            sub 8
 369+ 974C 67               ld h,a
 370+ 974D 7C           3 ld a,h
 371+ 974E FE 58            cp $58
 372+ 9750 28 03            jr z,4F
 373+ 9752 D1               pop de
 374+ 9753 10 CB            djnz 1B
 375+ 9755 ED 7B D8 87  4 ld sp,(Stack)
 376+ 9759 C9           	ret
 377+ 975A
 378+ 975A              ; ---------------------------------------------------
 379+ 975A              ;
 380+ 975A              ;   27/02/23
 381+ 975A              ;
 382+ 975A              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 975A              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 975A              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 975A
 386+ 975A ED 73 D8 87  Pinta_Disparo ld (Stack),sp
 387+ 975E FD F9            ld sp,iy
 388+ 9760 06 03            ld b,3
 389+ 9762 D1           1 pop de
 390+ 9763 7B               ld a,e
 391+ 9764 AE               xor (hl)
 392+ 9765 77               ld (hl),a
 393+ 9766 23               inc hl
 394+ 9767 7A               ld a,d
 395+ 9768 AE               xor (hl)
 396+ 9769 77               ld (hl),a
 397+ 976A 2B               dec hl
 398+ 976B
 399+ 976B 24               inc h
 400+ 976C 7C               ld a,h
 401+ 976D E6 07            and 7
 402+ 976F 20 0A            jr nz,2F
 403+ 9771 7D               ld a,l
 404+ 9772 C6 20            add a,$20
 405+ 9774 6F               ld l,a
 406+ 9775 38 04            jr c,2F
 407+ 9777 7C               ld a,h
 408+ 9778 D6 08            sub 8
 409+ 977A 67               ld h,a
 410+ 977B 7C           2 ld a,h
 411+ 977C FE 58            cp $58
 412+ 977E 28 02            jr z,3F
 413+ 9780
 414+ 9780 10 E0            djnz 1B
 415+ 9782 ED 7B D8 87  3 ld sp,(Stack)
 416+ 9786 C9               ret
 417+ 9787
# file closed: Rutinas_de_impresion_sprites.asm
1783  9787              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9787              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9787              ;
   3+ 9787              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9787              ;
   5+ 9787              ; *****************************************************************************************************************************************************************************************
   6+ 9787              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9787
   8+ 9787 7C           calcula_tercio ld a,h
   9+ 9788 E6 18        	and $18
  10+ 978A CB 2F        	sra a
  11+ 978C CB 2F        	sra a
  12+ 978E CB 2F        	sra a
  13+ 9790 C9           	ret
  14+ 9791
# file closed: calcula_tercio.asm
1784  9791              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9791              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9791              ;
   3+ 9791              ;
   4+ 9791              ;	CLS.
   5+ 9791              ;
   6+ 9791              ;	Limpia la pantalla y define sus atributos.
   7+ 9791              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9791              ;
   9+ 9791              ;	COLORES: 0 ..... NEGRO
  10+ 9791              ;    		 1 ..... AZUL
  11+ 9791              ; 			 2 ..... ROJO
  12+ 9791              ;			 3 ..... MAGENTA
  13+ 9791              ; 			 4 ..... VERDE
  14+ 9791              ; 			 5 ..... CIAN
  15+ 9791              ;			 6 ..... AMARILLO
  16+ 9791              ; 			 7 ..... BLANCO
  17+ 9791              ;
  18+ 9791              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9791              ;
  20+ 9791              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9791
  22+ 9791
  23+ 9791 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9794 11 01 40     	LD DE,$4001
  25+ 9797 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 979A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 979C ED B0        	LDIR
  28+ 979E 01 FF 02     	LD BC,767
  29+ 97A1 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 97A2 ED B0        	LDIR
  31+ 97A4 C9           	ret
  32+ 97A5
# file closed: Cls.asm
1785  97A5              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 97A5
   2+ 97A5              ; ******************************************************************************************************************************************************************************************
   3+ 97A5              ;
   4+ 97A5              ;   20/05/23
   5+ 97A5              ;
   6+ 97A5              ;	Recompone_posicion_inicio
   7+ 97A5              ;
   8+ 97A5              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 97A5              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 97A5              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 97A5              ;	_ a una u otra rutina.
  12+ 97A5
  13+ 97A5              Recompone_posicion_inicio
  14+ 97A5
  15+ 97A5 2A 98 87     	ld hl,(Posicion_inicio)
  16+ 97A8 7D           	ld a,l
  17+ 97A9 E6 1F        	and $1f
  18+ 97AB 28 16        	jr z,1F
  19+ 97AD
  20+ 97AD FE 1F        	cp $1f
  21+ 97AF 28 0D        	jr z,3F
  22+ 97B1
  23+ 97B1 21 AD 87     	ld hl,Ctrl_2
  24+ 97B4 CB C6        	set 0,(hl)
  25+ 97B6 2A 8A 87     	ld hl,(Puntero_objeto)
  26+ 97B9 22 C8 87     	ld (Repone_puntero_objeto),hl
  27+ 97BC 18 08        	jr 2F
  28+ 97BE
  29+ 97BE CD 6C 99     3 call Mov_left
  30+ 97C1 18 03        	jr 2F
  31+ 97C3
  32+ 97C3 CD 49 98     1 call Mov_right
  33+ 97C6 21 00 F0     2 ld hl,Sprite_vacio
  34+ 97C9 22 8A 87     	ld (Puntero_objeto),hl
  35+ 97CC C9           	ret
  36+ 97CD
  37+ 97CD              ; ******************************************************************************************************************************************************************************************
  38+ 97CD              ;
  39+ 97CD              ;   27/05/23
  40+ 97CD              ;
  41+ 97CD              ;	Mov_down
  42+ 97CD              ;
  43+ 97CD              ; 	Mueve el Sprite X px hacia abajo.
  44+ 97CD              ;
  45+ 97CD              ;
  46+ 97CD              Mov_down
  47+ 97CD
  48+ 97CD CD 37 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 97D0              ;																	; _ repone (Puntero_objeto).
  50+ 97D0 21 A8 87     	ld hl,Ctrl_0
  51+ 97D3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 97D5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 97D5              ; 																	; _ en el caso de que no lo haya.
  54+ 97D5 3A B2 87     	ld a,(Vel_down)
  55+ 97D8 47           	ld b,a
  56+ 97D9 2A 88 87         ld hl,(Posicion_actual)
  57+ 97DC CD 87 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 97DF E6 02        	and 2
  59+ 97E1 28 17        	jr z,1F
  60+ 97E3
  61+ 97E3              ; Nos encontramos en el último tercio de pantalla.
  62+ 97E3              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 97E3
  64+ 97E3 7C           	ld a,h
  65+ 97E4 FE 57        	cp $57
  66+ 97E6 20 12        	jr nz,1F
  67+ 97E8
  68+ 97E8 7D           	ld a,l
  69+ 97E9 C6 20        	add $20
  70+ 97EB 30 0D        	jr nc,1F
  71+ 97ED
  72+ 97ED              ; ------------------------------
  73+ 97ED              ;
  74+ 97ED              ;	12/01/24
  75+ 97ED
  76+ 97ED              ;	call Reaparece_arriba
  77+ 97ED CD F9 9A     	call Reinicio
  78+ 97F0
  79+ 97F0              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 97F0
  81+ 97F0 3A E6 87     	ld a,(Ctrl_3)
  82+ 97F3 CB CF        	set 1,a
  83+ 97F5 32 E6 87     	ld (Ctrl_3),a
  84+ 97F8
  85+ 97F8 18 08        	jr 3F
  86+ 97FA              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 97FA              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 97FA              ; ------------------------------
  89+ 97FA
  90+ 97FA CD 74 94     1 call NextScan
  91+ 97FD 22 88 87     	ld (Posicion_actual),hl
  92+ 9800 10 DA            djnz 2B
  93+ 9802 CD 1F 9B     3 call Genera_coordenadas
  94+ 9805 C9           	ret
  95+ 9806
  96+ 9806              ; ******************************************************************************************************************************************************************************************
  97+ 9806              ;
  98+ 9806              ;   27/05/23
  99+ 9806              ;
 100+ 9806              ;	Mov_up
 101+ 9806              ;
 102+ 9806              ; 	Mueve el Sprite hacia arriba.
 103+ 9806              ;
 104+ 9806              ;
 105+ 9806              Mov_up
 106+ 9806
 107+ 9806 CD 37 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9809              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9809 21 A8 87     	ld hl,Ctrl_0
 110+ 980C CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 980E              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 980E              ; 																		; _ en el caso de que no lo haya.
 113+ 980E 3A B1 87     	ld a,(Vel_up)
 114+ 9811 47           	ld b,a
 115+ 9812 2A 88 87     	ld hl,(Posicion_actual)
 116+ 9815 CD 87 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9818 A7           	and a
 118+ 9819 20 10        	jr nz,1F
 119+ 981B
 120+ 981B              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 981B              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 981B
 123+ 981B 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 981C FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 981E 20 0B            jr nz,1F
 126+ 9820 7D               ld a,l
 127+ 9821 D6 20            sub $20
 128+ 9823 30 06            jr nc,1F
 129+ 9825 25               dec h
 130+ 9826
 131+ 9826              ; -----------------------------
 132+ 9826 CD DA 9A         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9829              ;	call Reinicio
 134+ 9829              ; -----------------------------
 135+ 9829
 136+ 9829 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 982B CD 83 94     1 call PreviousScan
 138+ 982E 22 88 87     	ld (Posicion_actual),hl
 139+ 9831 10 E2            djnz 3B
 140+ 9833 CD 1F 9B     2 call Genera_coordenadas
 141+ 9836 C9           	ret
 142+ 9837
 143+ 9837              ; -----------------------------
 144+ 9837              ;
 145+ 9837              ;	27/5/23
 146+ 9837              ;
 147+ 9837              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9837              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9837              ;
 150+ 9837              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9837              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9837              ;
 153+ 9837              ;	Modifica: A y (Puntero_objeto).
 154+ 9837
 155+ 9837 3A AD 87     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 983A CB 47        	bit 0,a
 157+ 983C C8           	ret z
 158+ 983D CB 87        	res 0,a
 159+ 983F 32 AD 87     	ld (Ctrl_2),a
 160+ 9842 2A C8 87     	ld hl,(Repone_puntero_objeto)
 161+ 9845 22 8A 87     	ld (Puntero_objeto),hl
 162+ 9848 C9           	ret
 163+ 9849
 164+ 9849              ; ******************************************************************************************************************************************************************************************
 165+ 9849              ;
 166+ 9849              ;	19/10/22
 167+ 9849              ;
 168+ 9849              ;	Mov_right.
 169+ 9849              ;
 170+ 9849              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9849              ;
 172+ 9849
 173+ 9849 3A A8 87     Mov_right ld a,(Ctrl_0)
 174+ 984C CB 77        	bit 6,a
 175+ 984E 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9850
 177+ 9850 CD 88 9A     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9853 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9854
 180+ 9854 21 A8 87     	ld hl,Ctrl_0
 181+ 9857 CB E6        	set 4,(hl)
 182+ 9859 18 52        	jr 8F
 183+ 985B
 184+ 985B 21 A8 87     10 ld hl,Ctrl_0
 185+ 985E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9860              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9860              ; 																	; _ en el caso de que no lo haya.
 188+ 9860 3A 8C 87     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9863 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9865 20 46        	jr nz,8F
 191+ 9867
 192+ 9867 3A 8E 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 986A A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 986B 28 40        	jr z,8F
 195+ 986D
 196+ 986D              ; ---------- ---------- ----------
 197+ 986D              ;
 198+ 986D              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 986D
 200+ 986D 3A B0 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9870 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9872 28 11        	jr z,1F
 203+ 9874 38 06        	jr c,6F
 204+ 9876 FE 04        	cp 4
 205+ 9878 28 14        	jr z,7F
 206+ 987A 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 987C
 208+ 987C              ; ---------- ---------- ----------
 209+ 987C              ;
 210+ 987C              ; Perfiles de velocidad
 211+ 987C              ;
 212+ 987C
 213+ 987C 3A 8E 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 987F FE FE        	cp $fe
 215+ 9881 20 2A        	jr nz,8F
 216+ 9883 18 10        	jr 3F
 217+ 9885 3A 8E 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9888 FE FD        	cp $fd
 219+ 988A 20 21        	jr nz,8F
 220+ 988C 18 07        	jr 3F
 221+ 988E 3A 8E 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9891 FE FB        	cp $fb
 223+ 9893 20 18        	jr nz,8F
 224+ 9895
 225+ 9895              ; ---------- ---------- ----------
 226+ 9895
 227+ 9895              3
 228+ 9895 CD C8 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9898              ;	call Reinicio
 230+ 9898
 231+ 9898              ; ---------- ---------- ----------
 232+ 9898              ;
 233+ 9898              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9898
 235+ 9898 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 989A C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 989B CD B4 98     	call DESPLZ_DER
 238+ 989E C1           	pop bc
 239+ 989F 10 F9        	djnz 5B
 240+ 98A1 2A 88 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 98A4 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 98A5 22 88 87     	ld (Posicion_actual),hl
 243+ 98A8 CD 1F 9B     	call Genera_coordenadas
 244+ 98AB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 98AD
 246+ 98AD              ; ---------- ---------- ----------
 247+ 98AD
 248+ 98AD 2A 88 87     8 ld hl,(Posicion_actual)
 249+ 98B0 CD B4 98     	call DESPLZ_DER
 250+ 98B3 C9           2 ret
 251+ 98B4
 252+ 98B4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 98B4              ;
 254+ 98B4              ;	22/9/22
 255+ 98B4              ;
 256+ 98B4
 257+ 98B4 CD C3 98     DESPLZ_DER call Desplaza_derecha
 258+ 98B7 CD 0F 99         call modifica_parametros_1er_DESPLZ_2
 259+ 98BA CD 38 99         call Ciclo_completo
 260+ 98BD 21 A8 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 98C0 CB FE        	set 7,(hl)
 262+ 98C2 C9           	ret
 263+ 98C3
 264+ 98C3              ; ******************************************************************************************************************************************************************************************
 265+ 98C3              ;	15/02/23
 266+ 98C3              ;
 267+ 98C3
 268+ 98C3 3A B0 87     Desplaza_derecha ld a,(Vel_right)
 269+ 98C6 47           	ld b,a
 270+ 98C7 2A 94 87     	ld hl,(Puntero_DESPLZ_der)
 271+ 98CA 23           1 inc hl
 272+ 98CB 23           	inc hl
 273+ 98CC 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 98CE 22 94 87     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 98D1 CD 50 8B     	call Extrae_address
 276+ 98D4 22 8A 87     	ld (Puntero_objeto),hl
 277+ 98D7
 278+ 98D7              ; Modifica (Puntero_DESPLZ_izq).
 279+ 98D7
 280+ 98D7              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 98D7              ; Cuántos movimientos hemos hecho ??
 282+ 98D7              ; DE contiene (Puntero_DESPLZ_der).
 283+ 98D7
 284+ 98D7 2A 90 87     7 ld hl,(Indice_Sprite_der)
 285+ 98DA EB           	ex de,hl
 286+ 98DB A7           	and a
 287+ 98DC ED 52        	sbc hl,de
 288+ 98DE CB 3D        	srl l
 289+ 98E0 3E 08        6 ld a,8
 290+ 98E2 95           	sub l
 291+ 98E3 30 1E        	jr nc,3F
 292+ 98E5
 293+ 98E5              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 98E5              ; B="0".
 295+ 98E5
 296+ 98E5 04           4 inc b
 297+ 98E6 3C           	inc a
 298+ 98E7 20 FC        	jr nz,4B
 299+ 98E9 78           	ld a,b
 300+ 98EA 08           	ex af,af
 301+ 98EB 2A 90 87     	ld hl,(Indice_Sprite_der)
 302+ 98EE 23           5 inc hl
 303+ 98EF 23           	inc hl
 304+ 98F0 10 FC        	djnz 5B
 305+ 98F2 22 94 87     	ld (Puntero_DESPLZ_der),hl
 306+ 98F5 CD 50 8B     	call Extrae_address
 307+ 98F8 22 8A 87     	ld (Puntero_objeto),hl
 308+ 98FB
 309+ 98FB              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 98FB              ; _(Posicion_actual).
 311+ 98FB
 312+ 98FB 21 88 87     	ld hl,Posicion_actual
 313+ 98FE 34           	inc (hl)
 314+ 98FF 08               ex af,af
 315+ 9900 6F           	ld l,a
 316+ 9901 18 DD        	jr 6B
 317+ 9903
 318+ 9903              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9903
 320+ 9903 47           3 ld b,a
 321+ 9904 2A 92 87     	ld hl,(Indice_Sprite_izq)
 322+ 9907 23           2 inc hl
 323+ 9908 23           	inc hl
 324+ 9909 10 FC        	djnz 2B
 325+ 990B 22 96 87     	ld (Puntero_DESPLZ_izq),hl
 326+ 990E C9           8 ret
 327+ 990F
 328+ 990F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 990F              ;
 330+ 990F              ;	24/7/22
 331+ 990F              ;
 332+ 990F              ;	modifica_parametros_1er_DESPLZ_2
 333+ 990F              ;
 334+ 990F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 990F              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 990F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 990F
 338+ 990F 3A 8E 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9912 A7           	and a
 340+ 9913 20 1F        	jr nz,1F
 341+ 9915 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9917 32 8E 87         ld (CTRL_DESPLZ),a
 343+ 991A
 344+ 991A 21 87 87     	ld hl,Columns
 345+ 991D 34           	inc (hl)
 346+ 991E 3A 9A 87     	ld a,(Cuad_objeto)
 347+ 9921 E6 01        	and 1
 348+ 9923 28 0F        	jr z,1F
 349+ 9925 2A 88 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9928 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9929 22 88 87     	ld (Posicion_actual),hl
 352+ 992C CD 1F 9B     	call Genera_coordenadas
 353+ 992F CD 94 9A     	call Inc_CTRL_DESPLZ
 354+ 9932 18 03        	jr 2F
 355+ 9934 CD 94 9A     1 call Inc_CTRL_DESPLZ
 356+ 9937 C9           2 ret
 357+ 9938
 358+ 9938              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9938              ;
 360+ 9938              ;	24/7/22
 361+ 9938              ;
 362+ 9938              ;	Ciclo_completo.
 363+ 9938              ;
 364+ 9938              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9938              ;
 366+ 9938              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9938              ; 	Decrementamos (Columns).
 368+ 9938              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9938              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9938
 371+ 9938
 372+ 9938 3A 8E 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 993B FE FF        	cp $ff
 374+ 993D 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 993F E6 F0        	and $f0
 376+ 9941 20 28        	jr nz,3F
 377+ 9943
 378+ 9943              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9943
 380+ 9943 3A 8E 87     	ld a,(CTRL_DESPLZ)
 381+ 9946 47           	ld b,a
 382+ 9947 3E F8        	ld a,$f8
 383+ 9949 80           	add b
 384+ 994A 32 8E 87     	ld (CTRL_DESPLZ),a
 385+ 994D 18 1C        	jr 3F
 386+ 994F 21 87 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9952 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9953 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9954 32 8E 87     	ld (CTRL_DESPLZ),a
 390+ 9957 3A 9A 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 995A E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 995C 20 0A        	jr nz,2F
 393+ 995E 2A 88 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9961 23           	inc hl
 395+ 9962 22 88 87     	ld (Posicion_actual),hl
 396+ 9965 CD 1F 9B     	call Genera_coordenadas
 397+ 9968
 398+ 9968              ; Inicia el puntero de Sprite.
 399+ 9968
 400+ 9968 CD 65 8B     2 call Inicia_puntero_objeto_der
 401+ 996B C9           3 ret
 402+ 996C
 403+ 996C              ; ******************************************************************************************************************************************************************************************
 404+ 996C              ;
 405+ 996C              ;	15/02/23
 406+ 996C              ;
 407+ 996C              ;	Mov_left.
 408+ 996C              ;
 409+ 996C              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 996C              ;
 411+ 996C              Mov_left
 412+ 996C
 413+ 996C 21 A8 87     	ld hl,Ctrl_0
 414+ 996F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9971              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9971              ; 																	; _ en el caso de que no lo haya.
 417+ 9971 3A A8 87     	ld a,(Ctrl_0)
 418+ 9974 CB 77        	bit 6,a
 419+ 9976 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9978
 421+ 9978 CD 8E 9A     	call Stop_Amadeus_left
 422+ 997B C8           	ret z
 423+ 997C 20 4A        	jr nz,8F
 424+ 997E
 425+ 997E 3A 8C 87     11 ld a,(Coordenada_X)
 426+ 9981 A7           	and a
 427+ 9982 20 44        	jr nz,8F
 428+ 9984
 429+ 9984 3A 8E 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9987 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9988 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 998A
 433+ 998A              ; ---------- ---------- ----------
 434+ 998A
 435+ 998A 3A AF 87     	ld a,(Vel_left)
 436+ 998D FE 02        	cp 2
 437+ 998F 28 0F        	jr z,1F
 438+ 9991 38 04        	jr c,6F
 439+ 9993 FE 04        	cp 4
 440+ 9995 28 12        	jr z,7F
 441+ 9997
 442+ 9997              ; ---------- ---------- ----------
 443+ 9997
 444+ 9997 3A 8E 87     6 ld a,(CTRL_DESPLZ)
 445+ 999A FE F8        	cp $f8
 446+ 999C 20 2A        	jr nz,8F
 447+ 999E 18 10        	jr 4F
 448+ 99A0 3A 8E 87     1 ld a,(CTRL_DESPLZ)
 449+ 99A3 FE F9        	cp $f9
 450+ 99A5 20 21        	jr nz,8F
 451+ 99A7 18 07        	jr 4F
 452+ 99A9 3A 8E 87     7 ld a,(CTRL_DESPLZ)
 453+ 99AC FE FB        	cp $fb
 454+ 99AE 20 18        	jr nz,8F
 455+ 99B0
 456+ 99B0              ; ---------- ---------- ----------
 457+ 99B0
 458+ 99B0              4
 459+ 99B0 CD B6 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 99B3              ;	call Reinicio
 461+ 99B3
 462+ 99B3              ; ---------- ---------- ----------
 463+ 99B3
 464+ 99B3 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 99B5 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 99B6
 467+ 99B6              ;	ld hl,(Indice_Sprite_izq)
 468+ 99B6              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 99B6
 470+ 99B6 CD CF 99     	call DESPLZ_IZQ
 471+ 99B9 C1           	pop bc
 472+ 99BA 10 F9        	djnz 5B
 473+ 99BC 2A 88 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 99BF 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 99C0 22 88 87     	ld (Posicion_actual),hl
 476+ 99C3 CD 1F 9B     	call Genera_coordenadas
 477+ 99C6 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 99C8
 479+ 99C8              ; ---------- ---------- ----------
 480+ 99C8
 481+ 99C8              ; Movemos, no hay recolocación.
 482+ 99C8
 483+ 99C8 2A 88 87     8 ld hl,(Posicion_actual)
 484+ 99CB CD CF 99     	call DESPLZ_IZQ
 485+ 99CE C9           2 ret
 486+ 99CF
 487+ 99CF              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 99CF              ;
 489+ 99CF              ;	22/9/22
 490+ 99CF
 491+ 99CF              DESPLZ_IZQ
 492+ 99CF
 493+ 99CF CD DE 99     	call Desplaza_izquierda
 494+ 99D2 CD 2A 9A         call modifica_parametros_1er_DESPLZ
 495+ 99D5 CD 52 9A     	call Ciclo_completo_2
 496+ 99D8 21 A8 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 99DB CB BE        	res 7,(hl)
 498+ 99DD C9           	ret
 499+ 99DE
 500+ 99DE              Desplaza_izquierda
 501+ 99DE
 502+ 99DE 3A AF 87     	ld a,(Vel_left)
 503+ 99E1 47           	ld b,a
 504+ 99E2 2A 96 87     	ld hl,(Puntero_DESPLZ_izq)
 505+ 99E5 23           1 inc hl
 506+ 99E6 23           	inc hl
 507+ 99E7 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 99E9 22 96 87     	ld (Puntero_DESPLZ_izq),hl
 509+ 99EC CD 50 8B     	call Extrae_address
 510+ 99EF 22 8A 87     	ld (Puntero_objeto),hl
 511+ 99F2
 512+ 99F2              ; Modifica (Puntero_DESPLZ_der).
 513+ 99F2
 514+ 99F2              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 99F2              ; Cuántos movimientos hemos hecho ??
 516+ 99F2              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 99F2
 518+ 99F2 2A 92 87     7 ld hl,(Indice_Sprite_izq)
 519+ 99F5 EB           	ex de,hl
 520+ 99F6 A7           	and a
 521+ 99F7 ED 52        	sbc hl,de
 522+ 99F9 CB 3D        	srl l
 523+ 99FB 3E 08        6 ld a,8
 524+ 99FD 95           	sub l
 525+ 99FE 30 1E        	jr nc,3F
 526+ 9A00
 527+ 9A00              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9A00              ; B="0".
 529+ 9A00
 530+ 9A00 04           4 inc b
 531+ 9A01 3C           	inc a
 532+ 9A02 20 FC        	jr nz,4B
 533+ 9A04 78           	ld a,b
 534+ 9A05 08           	ex af,af
 535+ 9A06 2A 92 87     	ld hl,(Indice_Sprite_izq)
 536+ 9A09 23           5 inc hl
 537+ 9A0A 23           	inc hl
 538+ 9A0B 10 FC        	djnz 5B
 539+ 9A0D 22 96 87     	ld (Puntero_DESPLZ_izq),hl
 540+ 9A10 CD 50 8B     	call Extrae_address
 541+ 9A13 22 8A 87     	ld (Puntero_objeto),hl
 542+ 9A16
 543+ 9A16              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9A16              ; _(Posicion_actual).
 545+ 9A16
 546+ 9A16 21 88 87     	ld hl,Posicion_actual
 547+ 9A19 35           	dec (hl)
 548+ 9A1A 08           	ex af,af
 549+ 9A1B 6F           	ld l,a
 550+ 9A1C 18 DD        	jr 6B
 551+ 9A1E
 552+ 9A1E              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9A1E
 554+ 9A1E 47           3 ld b,a
 555+ 9A1F 2A 90 87     	ld hl,(Indice_Sprite_der)
 556+ 9A22 23           2 inc hl
 557+ 9A23 23           	inc hl
 558+ 9A24 10 FC        	djnz 2B
 559+ 9A26 22 94 87     	ld (Puntero_DESPLZ_der),hl
 560+ 9A29 C9           8 ret
 561+ 9A2A
 562+ 9A2A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9A2A              ;
 564+ 9A2A              ;	modifica_parametros_1er_DESPLZ
 565+ 9A2A              ;
 566+ 9A2A              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9A2A              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9A2A              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9A2A
 570+ 9A2A 3A 8E 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9A2D A7           	and a
 572+ 9A2E 20 1E        	jr nz,1F
 573+ 9A30 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9A31 32 8E 87         ld (CTRL_DESPLZ),a
 575+ 9A34 21 87 87     	ld hl,Columns
 576+ 9A37 34           	inc (hl)
 577+ 9A38 3A 9A 87     	ld a,(Cuad_objeto)
 578+ 9A3B E6 01        	and 1
 579+ 9A3D 20 0F        	jr nz,1F
 580+ 9A3F 2A 88 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9A42 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9A43 22 88 87     	ld (Posicion_actual),hl
 583+ 9A46 CD 1F 9B     	call Genera_coordenadas
 584+ 9A49 CD A5 9A     	call Dec_CTRL_DESPLZ
 585+ 9A4C 18 03        	jr 2F
 586+ 9A4E CD A5 9A     1 call Dec_CTRL_DESPLZ
 587+ 9A51 C9           2 ret
 588+ 9A52
 589+ 9A52              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9A52
 591+ 9A52 3A 8E 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9A55 FE F7        	cp $f7
 593+ 9A57 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9A59 30 2C        	jr nc,3F
 595+ 9A5B
 596+ 9A5B              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9A5B
 598+ 9A5B 06 00        	ld b,0
 599+ 9A5D 04           4 inc b
 600+ 9A5E 3C           	inc a
 601+ 9A5F FE F7        	cp $f7
 602+ 9A61 20 FA        	jr nz,4B
 603+ 9A63 3E FF        	ld a,$ff
 604+ 9A65 90           	sub b
 605+ 9A66 32 8E 87     	ld (CTRL_DESPLZ),a
 606+ 9A69 18 1C        	jr 3F
 607+ 9A6B
 608+ 9A6B              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9A6B
 610+ 9A6B 21 87 87     1 ld hl,Columns
 611+ 9A6E 35           	dec (hl)
 612+ 9A6F AF           	xor a
 613+ 9A70 32 8E 87     	ld (CTRL_DESPLZ),a
 614+ 9A73 3A 9A 87     	ld a,(Cuad_objeto)
 615+ 9A76 E6 01        	and 1
 616+ 9A78 28 0A        	jr z,2F
 617+ 9A7A 2A 88 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9A7D 2B           	dec hl
 619+ 9A7E 22 88 87     	ld (Posicion_actual),hl
 620+ 9A81 CD 1F 9B     	call Genera_coordenadas
 621+ 9A84
 622+ 9A84              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9A84
 624+ 9A84 CD 78 8B     2 call Inicia_puntero_objeto_izq
 625+ 9A87 C9           3 ret
 626+ 9A88
 627+ 9A88              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9A88              ;
 629+ 9A88              ;	19/10/22
 630+ 9A88              ;
 631+ 9A88              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9A88              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9A88
 634+ 9A88 3A 8C 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9A8B FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9A8D C9           	ret
 637+ 9A8E
 638+ 9A8E              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9A8E              ;
 640+ 9A8E              ;	19/10/22
 641+ 9A8E              ;
 642+ 9A8E              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9A8E              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9A8E
 645+ 9A8E 3A 8C 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9A91 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9A93 C9           	ret
 648+ 9A94
 649+ 9A94              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9A94              ;
 651+ 9A94              ;	24/7/22
 652+ 9A94              ;
 653+ 9A94              ;	Inc_CTRL_DESPLZ
 654+ 9A94              ;
 655+ 9A94              ;
 656+ 9A94              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9A94
 658+ 9A94 21 8E 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9A97 3A B0 87     	ld a,(Vel_right)
 660+ 9A9A A7           	and a
 661+ 9A9B 28 06        	jr z,1F
 662+ 9A9D 47           	ld b,a
 663+ 9A9E 34           3 inc (hl)
 664+ 9A9F 10 FD        	djnz 3B
 665+ 9AA1 18 01        	jr 2F
 666+ 9AA3 34           1 inc (hl)
 667+ 9AA4 C9           2 ret
 668+ 9AA5
 669+ 9AA5              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9AA5              ;
 671+ 9AA5              ;	5/2/23
 672+ 9AA5              ;
 673+ 9AA5              ;	Dec_CTRL_DESPLZ
 674+ 9AA5              ;
 675+ 9AA5              ;
 676+ 9AA5              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9AA5
 678+ 9AA5 21 8E 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9AA8 3A AF 87     	ld a,(Vel_left)
 680+ 9AAB A7           	and a
 681+ 9AAC 28 06        	jr z,1F
 682+ 9AAE 47           	ld b,a
 683+ 9AAF 35           3 dec (hl)
 684+ 9AB0 10 FD        	djnz 3B
 685+ 9AB2 18 01        	jr 2F
 686+ 9AB4 35           1 dec (hl)
 687+ 9AB5 C9           2 ret
 688+ 9AB6
 689+ 9AB6              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9AB6
 691+ 9AB6 2A 88 87     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9AB9 01 1F 00     	ld bc,31
 693+ 9ABC A7           	and a
 694+ 9ABD ED 4A        	adc hl,bc
 695+ 9ABF 22 88 87     	ld (Posicion_actual),hl
 696+ 9AC2 21 A8 87     	ld hl,Ctrl_0														; $xxx1
 697+ 9AC5 CB C6        	set 0,(hl)
 698+ 9AC7 C9           	ret
 699+ 9AC8
 700+ 9AC8              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9AC8
 702+ 9AC8 2A 88 87     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9ACB 01 1F 00     	ld bc,31
 704+ 9ACE A7           	and a
 705+ 9ACF ED 42        	sbc hl,bc
 706+ 9AD1 22 88 87     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9AD4 21 A8 87     	ld hl,Ctrl_0
 708+ 9AD7 CB CE        	set 1,(hl)
 709+ 9AD9 C9           	ret
 710+ 9ADA
 711+ 9ADA              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9ADA
 713+ 9ADA 24           Reaparece_abajo inc h
 714+ 9ADB 01 E0 17     	ld bc,$17e0
 715+ 9ADE A7           	and a
 716+ 9ADF ED 4A        	adc hl,bc
 717+ 9AE1 22 88 87     	ld (Posicion_actual),hl
 718+ 9AE4 21 A8 87     	ld hl,Ctrl_0
 719+ 9AE7 CB D6        	set 2,(hl)
 720+ 9AE9 C9           	ret
 721+ 9AEA
 722+ 9AEA              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9AEA
 724+ 9AEA 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9AED A7           	and a
 726+ 9AEE ED 42        	sbc hl,bc
 727+ 9AF0 22 88 87     	ld (Posicion_actual),hl
 728+ 9AF3 21 A8 87     	ld hl,Ctrl_0
 729+ 9AF6 CB DE        	set 3,(hl)
 730+ 9AF8 C9           	ret
 731+ 9AF9
 732+ 9AF9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9AF9              ;
 734+ 9AF9              ;	15/07/23
 735+ 9AF9
 736+ 9AF9              Reinicio
 737+ 9AF9
 738+ 9AF9              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9AF9
 740+ 9AF9 AF           	xor a
 741+ 9AFA 21 BF 87     	ld hl,Puntero_indice_mov_bucle
 742+ 9AFD CD 1B 9B     	call Limpia_contenido_hl
 743+ 9B00
 744+ 9B00 21 88 87     	ld hl,Posicion_actual
 745+ 9B03 CD 1B 9B     	call Limpia_contenido_hl
 746+ 9B06
 747+ 9B06 CD 69 86     	call Inicializa_Puntero_indice_mov
 748+ 9B09 CD DC 9D     	call Inicia_Puntero_mov
 749+ 9B0C
 750+ 9B0C 21 C1 87     	ld hl,Incrementa_puntero
 751+ 9B0F 06 05        	ld b,5
 752+ 9B11 77           1 ld (hl),a
 753+ 9B12 23           	inc hl
 754+ 9B13 10 FC        	djnz 1B
 755+ 9B15
 756+ 9B15 21 AD 87     	ld hl,Ctrl_2
 757+ 9B18 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9B1A
 759+ 9B1A C9           	ret
 760+ 9B1B
 761+ 9B1B 77           Limpia_contenido_hl	ld (hl),a
 762+ 9B1C 23           	inc hl
 763+ 9B1D 77           	ld (hl),a
 764+ 9B1E C9           	ret
 765+ 9B1F
 766+ 9B1F
# file closed: Direcciones.asm
1786  9B1F              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B1F              ; ------------------------------------------------------------------------
   2+ 9B1F              ;
   3+ 9B1F              ;	22/1/24
   4+ 9B1F              ;
   5+ 9B1F              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B1F              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B1F              ;
   8+ 9B1F              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B1F              ;
  10+ 9B1F              ;	Modifica: A,BC y DE.
  11+ 9B1F
  12+ 9B1F 7D           Genera_coordenadas ld a,l
  13+ 9B20 E6 1F        	and $1f
  14+ 9B22 32 8C 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9B25
  16+ 9B25 3E 39        	ld a,$39											; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9B27 BC           	cp h
  18+ 9B28 20 05        	jr nz,4F
  19+ 9B2A
  20+ 9B2A AF           	xor a
  21+ 9B2B 32 8D 87     	ld (Coordenada_y),a
  22+ 9B2E C9           	ret
  23+ 9B2F
  24+ 9B2F CD 87 97     4 call calcula_tercio
  25+ 9B32 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  26+ 9B33
  27+ 9B33 1E 00        	ld e,0
  28+ 9B35 7D           	ld a,l
  29+ 9B36 E6 E0        	and $e0
  30+ 9B38 28 01        	jr z,1F
  31+ 9B3A 04           	inc b
  32+ 9B3B
  33+ 9B3B 04           1 inc b
  34+ 9B3C 05           	dec b
  35+ 9B3D 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  36+ 9B3F              ;														; _ , salimos.
  37+ 9B3F 1C           3 inc e
  38+ 9B40 D6 20        	sub 32
  39+ 9B42 20 FB        	jr nz,3B
  40+ 9B44 10 F5        	djnz 1B
  41+ 9B46
  42+ 9B46 7B           2 ld a,e
  43+ 9B47 32 8D 87     	ld (Coordenada_y),a
  44+ 9B4A
  45+ 9B4A C9           	ret
  46+ 9B4B
  47+ 9B4B              ; ------------------------------------------------------------------------
  48+ 9B4B              ;	28/05/23
  49+ 9B4B              ;
  50+ 9B4B              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  51+ 9B4B              ;	Fila superior "0", Columna izquierda "0".
  52+ 9B4B              ;
  53+ 9B4B              ;	Input: HL contendrá la posición del proyectil en pantalla.
  54+ 9B4B              ;	Output: DE contendrá las coordenadas del disparo:
  55+ 9B4B              ;
  56+ 9B4B              ;		DE="$120d"
  57+ 9B4B              ;
  58+ 9B4B              ;		D, (Coordenada_X), Columnas, $12
  59+ 9B4B              ;		E, (Coordenada_y), Filas, $0d
  60+ 9B4B              ;
  61+ 9B4B              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  62+ 9B4B
  63+ 9B4B              ;	Modifica: A,BC y DE.
  64+ 9B4B
  65+ 9B4B
  66+ 9B4B              Genera_coordenadas_disparo
  67+ 9B4B
  68+ 9B4B              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  69+ 9B4B
  70+ 9B4B 7D           	ld a,l
  71+ 9B4C E6 1F        	and $1f
  72+ 9B4E 57           	ld d,a 												; Columnas en D. Coordenada_X.
  73+ 9B4F CD 87 97     	call calcula_tercio
  74+ 9B52 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  75+ 9B53 1E 00        	ld e,0
  76+ 9B55 7D           	ld a,l
  77+ 9B56 E6 E0        	and $e0
  78+ 9B58 28 01        	jr z,1F
  79+ 9B5A 04           	inc b
  80+ 9B5B 1C           1 inc e
  81+ 9B5C D6 20        	sub 32
  82+ 9B5E 20 FB        	jr nz,1B
  83+ 9B60 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  84+ 9B62 C9           	ret
  85+ 9B63
# file closed: Genera_coordenadas.asm
1787  9B63              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9B63              ; Relojes y temporizaciones.
   2+ 9B63
   3+ 9B63              ; ------------------------------------------------------
   4+ 9B63              ;
   5+ 9B63              ;	16/7/23
   6+ 9B63              ;
   7+ 9B63              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9B63              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9B63              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9B63              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9B63              ;
  12+ 9B63              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9B63              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9B63
  15+ 9B63              ; Disparo_entidad db 1
  16+ 9B63              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9B63              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9B63
  19+ 9B63              Habilita_disparos
  20+ 9B63
  21+ 9B63 7E           	ld a,(hl)
  22+ 9B64 A7           	and a
  23+ 9B65 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9B66
  25+ 9B66 EB           	ex de,hl
  26+ 9B67
  27+ 9B67 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9B68 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9B69
  30+ 9B69              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9B69
  32+ 9B69 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9B6A 7E           	ld a,(hl)
  34+ 9B6B 23           	inc hl
  35+ 9B6C 77           	ld (hl),a
  36+ 9B6D
  37+ 9B6D EB           	ex de,hl						; Habilitamos disparo.
  38+ 9B6E 3E 01        	ld a,1
  39+ 9B70 77           	ld (hl),a
  40+ 9B71 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1788  9B72              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9B72
   2+ 9B72
   3+ 9B72              ;   07/07/23
   4+ 9B72              ;
   5+ 9B72              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9B72              ;
   7+ 9B72              ;   Codificación:
   8+ 9B72              ;
   9+ 9B72              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9B72              ;
  11+ 9B72              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9B72              ;
  13+ 9B72              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9B72              ;
  15+ 9B72              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9B72              ;
  17+ 9B72              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9B72              ;                               ..... %01000010 Vel_up 4
  19+ 9B72              ;                                               Vel_down 2
  20+ 9B72              ;                               ..... $42
  21+ 9B72              ;
  22+ 9B72              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9B72              ;
  24+ 9B72              ;                               ..... %01000010 Vel_left 4
  25+ 9B72              ;                                               Vel_right 2
  26+ 9B72              ;                               ..... $42
  27+ 9B72              ;
  28+ 9B72              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9B72              ;
  30+ 9B72              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9B72              ;
  32+ 9B72              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9B72              ;
  34+ 9B72              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9B72              ;                                     $53
  36+ 9B72              ;
  37+ 9B72              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9B72              ;
  39+ 9B72              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9B72              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9B72              ;
  42+ 9B72              ;                       Arriba ..... $81
  43+ 9B72              ;                       Arriba - izquierda ..... $a1
  44+ 9B72              ;                       Arriba - derecha ..... $91
  45+ 9B72              ;
  46+ 9B72              ;                       Abajo ..... $41
  47+ 9B72              ;                       Abajo - izquierda ..... $61
  48+ 9B72              ;                       Abajo - derecha ..... $51
  49+ 9B72              ;
  50+ 9B72              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9B72              ;
  52+ 9B72              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9B72              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9B72              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9B72              ;
  56+ 9B72              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9B72              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9B72              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9B72              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9B72              ;
  61+ 9B72              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9B72              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9B72              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9B72              ;
  65+ 9B72              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9B72              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9B72              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9B72              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9B72
  70+ 9B72              ; ----- ----- ----- ----- -----
  71+ 9B72
  72+ 9B72 9E 9B        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9B74 A6 9B            defw F_1
  74+ 9B76 B0 9B            defw F_2
  75+ 9B78 BA 9B            defw Codo_abajo_derecha
  76+ 9B7A EE 9B            defw Derecha_y_subiendo
  77+ 9B7C F8 9B            defw Derecha_y_subiendo_1
  78+ 9B7E 02 9C            defw F_3
  79+ 9B80 0C 9C            defw F_4
  80+ 9B82 16 9C            defw Derecha_y_bajando
  81+ 9B84 20 9C            defw Derecha_y_bajando_1
  82+ 9B86 2A 9C            defw Derecha_y_bajando_2
  83+ 9B88 34 9C            defw Codo_derecha_abajo
  84+ 9B8A 64 9C            defw Codo_abajo_izq.
  85+ 9B8C 98 9C            defw Izquierda_y_subiendo
  86+ 9B8E A2 9C            defw Izquierda_y_subiendo_1
  87+ 9B90 AC 9C            defw F_5
  88+ 9B92 B6 9C            defw F_6
  89+ 9B94 C0 9C            defw Izquierda_y_bajando
  90+ 9B96 CA 9C            defw Izquierda_y_bajando_1
  91+ 9B98 D4 9C            defw Izquierda_y_bajando_2
  92+ 9B9A DE 9C            defw Codo_izquierda_abajo
  93+ 9B9C 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9B9E
  95+ 9B9E 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9BA2 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9BA6
  98+ 9BA6 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9BAA 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9BAE 08 00
 100+ 9BB0 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9BB4 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9BB8 0F FE
 102+ 9BBA
 103+ 9BBA 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9BBE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9BC2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9BC6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9BCA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9BCE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9BD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9BD6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9BDA 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9BDE 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9BE2 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9BE6 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9BEA 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9BEE
 117+ 9BEE 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9BF2 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9BF6 06 00
 119+ 9BF8
 120+ 9BF8 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9BFC 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9C00 02 00
 122+ 9C02
 123+ 9C02 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9C06 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9C0A 04 00
 125+ 9C0C 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9C10 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9C14 08 00
 127+ 9C16
 128+ 9C16 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9C1A 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9C1E 02 00
 130+ 9C20
 131+ 9C20 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9C24 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9C28 06 00
 133+ 9C2A
 134+ 9C2A 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9C2E 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9C32 06 00
 136+ 9C34
 137+ 9C34              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9C34
 139+ 9C34 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9C38 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9C3C 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9C40 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9C44 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9C48 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9C4C 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9C50 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9C54 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9C58 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9C5C 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9C60 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9C64
 152+ 9C64 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9C68 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9C6C 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9C70 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9C74 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9C78 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9C7C 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9C80 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9C84 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9C88 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9C8C 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9C90 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9C94 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9C98
 166+ 9C98 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9C9C 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9CA0 06 00
 168+ 9CA2
 169+ 9CA2 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9CA6 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9CAA 02 00
 171+ 9CAC
 172+ 9CAC 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9CB0 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9CB4 04 00
 174+ 9CB6 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9CBA 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9CBE 08 00
 176+ 9CC0
 177+ 9CC0 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9CC4 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9CC8 02 00
 179+ 9CCA
 180+ 9CCA 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9CCE 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9CD2 06 00
 182+ 9CD4
 183+ 9CD4 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9CD8 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9CDC 06 00
 185+ 9CDE
 186+ 9CDE 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9CE2 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9CE6 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9CEA 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9CEE 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9CF2 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9CF6 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9CFA 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9CFE 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9D02 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9D06 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9D0A 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9D0E
 199+ 9D0E              ; ----- ----- ----- ----- -----
 200+ 9D0E              ;
 201+ 9D0E              ;   28/12/23
 202+ 9D0E
 203+ 9D0E              Movimiento
 204+ 9D0E
 205+ 9D0E              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9D0E
 207+ 9D0E 3A AD 87         ld a,(Ctrl_2)
 208+ 9D11 CB 57            bit 2,a
 209+ 9D13 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9D15
 211+ 9D15 2A BD 87         ld hl,(Puntero_mov)
 212+ 9D18 7E               ld a,(hl)
 213+ 9D19
 214+ 9D19              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9D19
 216+ 9D19              Inicia_desplazamiento.
 217+ 9D19
 218+ 9D19              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9D19
 220+ 9D19 CD 19 9E         call Ajusta_velocidad_desplazamiento
 221+ 9D1C
 222+ 9D1C              ; Iniciamos (Repetimos_mov).
 223+ 9D1C
 224+ 9D1C 7E               ld a,(hl)
 225+ 9D1D E6 0F            and $0f
 226+ 9D1F 32 C3 87         ld (Repetimos_desplazamiento),a
 227+ 9D22 32 C4 87         ld (Repetimos_desplazamiento_backup),a
 228+ 9D25
 229+ 9D25              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9D25
 231+ 9D25 23               inc hl
 232+ 9D26 7E               ld a,(hl)
 233+ 9D27 32 C6 87         ld (Cola_de_desplazamiento),a
 234+ 9D2A 2B               dec hl
 235+ 9D2B
 236+ 9D2B 21 AD 87         ld hl,Ctrl_2
 237+ 9D2E CB D6            set 2,(hl)
 238+ 9D30
 239+ 9D30              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9D30              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9D30
 242+ 9D30              Desplazamiento_iniciado
 243+ 9D30
 244+ 9D30 CD E7 9D         call Aplica_desplazamiento
 245+ 9D33
 246+ 9D33              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9D33
 248+ 9D33 3A E6 87         ld a,(Ctrl_3)
 249+ 9D36 CB 57            bit 2,a
 250+ 9D38 C0               ret nz
 251+ 9D39
 252+ 9D39 3A AD 87         ld a,(Ctrl_2)
 253+ 9D3C CB 67            bit 4,a
 254+ 9D3E C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9D3F
 256+ 9D3F 21 C3 87     3 ld hl,Repetimos_desplazamiento
 257+ 9D42 35               dec (hl)
 258+ 9D43 C0               ret nz
 259+ 9D44
 260+ 9D44              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9D44              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9D44              ; Analiza (Cola_de_desplazamiento).
 263+ 9D44
 264+ 9D44 3A C6 87     Cola ld a,(Cola_de_desplazamiento)
 265+ 9D47 A7               and a
 266+ 9D48 CC 42 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9D4B 28 30            jr z,Reinicia_el_movimiento
 268+ 9D4D
 269+ 9D4D FE FF            cp $ff
 270+ 9D4F 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9D51
 272+ 9D51 FE FE            cp $fe
 273+ 9D53 CC C0 9D         call z,Fijamos_bucle
 274+ 9D56 28 25            jr z,Reinicia_el_movimiento
 275+ 9D58
 276+ 9D58 FE FD            cp $fd
 277+ 9D5A 20 11            jr nz,1F
 278+ 9D5C
 279+ 9D5C              ; ---
 280+ 9D5C              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9D5C
 282+ 9D5C 3A AD 87         ld a,(Ctrl_2)
 283+ 9D5F CB 5F            bit 3,a
 284+ 9D61 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9D63
 286+ 9D63              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9D63
 288+ 9D63 21 AD 87         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9D66 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9D68
 291+ 9D68 CD D1 9D         call Inicia_Repetimos_movimiento
 292+ 9D6B 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9D6D              ; ---
 294+ 9D6D
 295+ 9D6D FE 01        1 cp 1
 296+ 9D6F CA AA 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9D72
 298+ 9D72 3D               dec a
 299+ 9D73 32 C6 87         ld (Cola_de_desplazamiento),a
 300+ 9D76
 301+ 9D76 3A C4 87         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9D79 32 C3 87         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9D7C              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9D7C C9               ret
 305+ 9D7D
 306+ 9D7D              Reinicia_el_movimiento
 307+ 9D7D
 308+ 9D7D 3A AD 87         ld a,(Ctrl_2)
 309+ 9D80 CB 5F            bit 3,a
 310+ 9D82 28 1B            jr z,2F
 311+ 9D84
 312+ 9D84              ; (Cola_de_desplazamiento)="254".
 313+ 9D84
 314+ 9D84 21 C5 87         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9D87 35               dec (hl)
 316+ 9D88 20 15            jr nz,2F
 317+ 9D8A
 318+ 9D8A              ; Fin de las repeticiones del último movimiento.
 319+ 9D8A
 320+ 9D8A 21 AD 87         ld hl,Ctrl_2
 321+ 9D8D CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9D8F
 323+ 9D8F 2A BD 87         ld hl,(Puntero_mov)
 324+ 9D92 23               inc hl
 325+ 9D93 23               inc hl
 326+ 9D94 23               inc hl
 327+ 9D95 22 BD 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9D98              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9D98 7E               ld a,(hl)
 330+ 9D99 32 C6 87         ld (Cola_de_desplazamiento),a
 331+ 9D9C
 332+ 9D9C C3 44 9D         jp Cola
 333+ 9D9F
 334+ 9D9F CD DC 9D     2 call Inicia_Puntero_mov
 335+ 9DA2
 336+ 9DA2 21 AD 87         ld hl,Ctrl_2
 337+ 9DA5 CB 96            res 2,(hl)
 338+ 9DA7
 339+ 9DA7 C3 0E 9D         jp Movimiento
 340+ 9DAA
 341+ 9DAA              Siguiente_desplazamiento
 342+ 9DAA
 343+ 9DAA              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9DAA              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9DAA
 346+ 9DAA 21 AD 87         ld hl,Ctrl_2
 347+ 9DAD CB 96            res 2,(hl)
 348+ 9DAF
 349+ 9DAF 2A BD 87         ld hl,(Puntero_mov)
 350+ 9DB2 23               inc hl
 351+ 9DB3 23               inc hl
 352+ 9DB4 22 BD 87         ld (Puntero_mov),hl
 353+ 9DB7
 354+ 9DB7 7E               ld a,(hl)
 355+ 9DB8 A7               and a
 356+ 9DB9 CC 42 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9DBC CA 7D 9D         jp z,Reinicia_el_movimiento
 358+ 9DBF
 359+ 9DBF C9               ret
 360+ 9DC0
 361+ 9DC0              ; Subrutinas -----------------------------------------
 362+ 9DC0              ; ---------- --------- --------- ---------- ----------
 363+ 9DC0              ;
 364+ 9DC0              ;   24/07/23
 365+ 9DC0              ;
 366+ 9DC0              ;   Fijamos_bucle
 367+ 9DC0              ;
 368+ 9DC0              ;
 369+ 9DC0
 370+ 9DC0              Fijamos_bucle
 371+ 9DC0
 372+ 9DC0 3A C1 87         ld a,(Incrementa_puntero)
 373+ 9DC3 3C               inc a
 374+ 9DC4 32 C2 87         ld (Incrementa_puntero_backup),a
 375+ 9DC7
 376+ 9DC7 CD 42 9E         call Incrementa_Puntero_indice_mov
 377+ 9DCA 2A BB 87         ld hl,(Puntero_indice_mov)
 378+ 9DCD 22 BF 87         ld (Puntero_indice_mov_bucle),hl
 379+ 9DD0 C9               ret
 380+ 9DD1
 381+ 9DD1              ; ---------- --------- --------- ---------- ----------
 382+ 9DD1              ;
 383+ 9DD1              ;   07/7/23
 384+ 9DD1              ;
 385+ 9DD1              ;   Inicia_Repetimos_movimiento
 386+ 9DD1              ;
 387+ 9DD1              ;
 388+ 9DD1
 389+ 9DD1              Inicia_Repetimos_movimiento
 390+ 9DD1
 391+ 9DD1              ; Iniciamos (Repetimos_movimiento).
 392+ 9DD1
 393+ 9DD1 DD 2A BD 87      ld ix,(Puntero_mov)
 394+ 9DD5 DD 7E 02         ld a,(ix+2)
 395+ 9DD8 32 C5 87         ld (Repetimos_movimiento),a
 396+ 9DDB
 397+ 9DDB C9               ret
 398+ 9DDC
 399+ 9DDC              ; ---------- --------- --------- ---------- ----------
 400+ 9DDC              ;
 401+ 9DDC              ;   26/6/23
 402+ 9DDC              ;
 403+ 9DDC              ;   Inicia_Puntero_mov
 404+ 9DDC              ;
 405+ 9DDC              ;
 406+ 9DDC
 407+ 9DDC 2A BB 87     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9DDF 5E               ld e,(hl)
 409+ 9DE0 23               inc hl
 410+ 9DE1 56               ld d,(hl)
 411+ 9DE2 EB               ex de,hl
 412+ 9DE3 22 BD 87         ld (Puntero_mov),hl
 413+ 9DE6 C9               ret
 414+ 9DE7
 415+ 9DE7              ; ---------- --------- --------- ---------- ----------
 416+ 9DE7              ;
 417+ 9DE7              ;   27/06/23
 418+ 9DE7              ;
 419+ 9DE7              ;   Aplica_movimiento.
 420+ 9DE7
 421+ 9DE7              Aplica_desplazamiento
 422+ 9DE7
 423+ 9DE7              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9DE7
 425+ 9DE7 2A BD 87         ld hl, (Puntero_mov)
 426+ 9DEA
 427+ 9DEA 7E               ld a,(hl)
 428+ 9DEB E6 F0            and $f0
 429+ 9DED C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9DEE
 431+ 9DEE CB 7E            bit 7,(hl)
 432+ 9DF0 28 03            jr z,1F
 433+ 9DF2 CD 06 98         call Mov_up
 434+ 9DF5 2A BD 87     1 ld hl, (Puntero_mov)
 435+ 9DF8 CB 76            bit 6,(hl)
 436+ 9DFA 28 09            jr z,2F
 437+ 9DFC CD CD 97         call Mov_down
 438+ 9DFF
 439+ 9DFF              ; Se ha aplicado reinicio ???
 440+ 9DFF              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9DFF
 442+ 9DFF 3A E6 87         ld a,(Ctrl_3)
 443+ 9E02 CB 57            bit 2,a
 444+ 9E04 C0               ret nz
 445+ 9E05
 446+ 9E05 2A BD 87     2 ld hl, (Puntero_mov)
 447+ 9E08 CB 6E            bit 5,(hl)
 448+ 9E0A 28 03            jr z,3F
 449+ 9E0C CD 6C 99         call Mov_left
 450+ 9E0F 2A BD 87     3 ld hl, (Puntero_mov)
 451+ 9E12 CB 66            bit 4,(hl)
 452+ 9E14 C8               ret z
 453+ 9E15 CD 49 98         call Mov_right
 454+ 9E18 C9               ret
 455+ 9E19
 456+ 9E19              ; ---------- --------- --------- ---------- ----------
 457+ 9E19              ;
 458+ 9E19              ;   26/06/23
 459+ 9E19              ;
 460+ 9E19              ;   Ajusta_velocidad_desplazamiento.
 461+ 9E19
 462+ 9E19              Ajusta_velocidad_desplazamiento
 463+ 9E19
 464+ 9E19              ; 1er byte de la cadena de movimiento.
 465+ 9E19              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9E19
 467+ 9E19 CD 37 9E         call Extrae_nibble_alto
 468+ 9E1C
 469+ 9E1C 32 B1 87         ld (Vel_up),a
 470+ 9E1F 79               ld a,c
 471+ 9E20 E6 0F            and $0f
 472+ 9E22 32 B2 87         ld (Vel_down),a
 473+ 9E25
 474+ 9E25              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9E25              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9E25
 477+ 9E25 23               inc hl
 478+ 9E26 CD 37 9E         call Extrae_nibble_alto
 479+ 9E29
 480+ 9E29 32 AF 87         ld (Vel_left),a
 481+ 9E2C 79               ld a,c
 482+ 9E2D E6 0F            and $0f
 483+ 9E2F 32 B0 87         ld (Vel_right),a
 484+ 9E32
 485+ 9E32              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9E32
 487+ 9E32 23               inc hl
 488+ 9E33 22 BD 87         ld (Puntero_mov),hl
 489+ 9E36 C9               ret
 490+ 9E37
 491+ 9E37 06 04        Extrae_nibble_alto ld b,4
 492+ 9E39 7E               ld a,(hl)
 493+ 9E3A 4F               ld c,a
 494+ 9E3B E6 F0            and $f0
 495+ 9E3D CB 3F        1 srl a
 496+ 9E3F 10 FC            djnz 1B
 497+ 9E41 C9               ret
 498+ 9E42
 499+ 9E42              ; ---------- --------- --------- ---------- ----------
 500+ 9E42              ;
 501+ 9E42              ;   5/7/23
 502+ 9E42              ;
 503+ 9E42              ;   Incrementa_Puntero_indice_mov
 504+ 9E42
 505+ 9E42              Incrementa_Puntero_indice_mov
 506+ 9E42
 507+ 9E42 21 C1 87         ld hl,Incrementa_puntero
 508+ 9E45 34               inc (hl)
 509+ 9E46
 510+ 9E46 2A BB 87         ld hl,(Puntero_indice_mov)
 511+ 9E49 01 02 00         ld bc,2
 512+ 9E4C A7               and a
 513+ 9E4D 09               add hl,bc
 514+ 9E4E 22 BB 87         ld (Puntero_indice_mov),hl
 515+ 9E51
 516+ 9E51 7E               ld a,(hl)
 517+ 9E52 A7               and a
 518+ 9E53
 519+ 9E53              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9E53
 521+ 9E53              ;    jr z,$
 522+ 9E53
 523+ 9E53              ;! Reinicia el Patrón de movimiento.
 524+ 9E53
 525+ 9E53 CC 58 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9E56
 527+ 9E56 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9E57
 529+ 9E57 C9               ret
 530+ 9E58
 531+ 9E58              ; ---------- --------- --------- ---------- ----------
 532+ 9E58              ;
 533+ 9E58              ;   15/01/24
 534+ 9E58              ;
 535+ 9E58              ;   Inicializa_Puntero_indice_mov
 536+ 9E58
 537+ 9E58              Inicializa_Puntero_indice_mov_2
 538+ 9E58
 539+ 9E58              ; Existe etiqueta de bucle principal???
 540+ 9E58
 541+ 9E58 2A BF 87         ld hl,(Puntero_indice_mov_bucle)
 542+ 9E5B 24               inc h
 543+ 9E5C 25               dec h
 544+ 9E5D 28 05            jr z,2F
 545+ 9E5F
 546+ 9E5F 22 BB 87         ld (Puntero_indice_mov),hl
 547+ 9E62 18 14            jr 3F
 548+ 9E64
 549+ 9E64              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9E64
 551+ 9E64 3A C1 87     2 ld a,(Incrementa_puntero)
 552+ 9E67 47               ld b,a
 553+ 9E68
 554+ 9E68 2A BB 87         ld hl,(Puntero_indice_mov)
 555+ 9E6B 2B           1 dec hl
 556+ 9E6C 2B               dec hl
 557+ 9E6D 10 FC            djnz 1B
 558+ 9E6F 22 BB 87         ld (Puntero_indice_mov),hl
 559+ 9E72
 560+ 9E72 AF               xor a
 561+ 9E73 32 C1 87         ld (Incrementa_puntero),a
 562+ 9E76 18 06            jr 4F
 563+ 9E78
 564+ 9E78 3A C2 87     3 ld a,(Incrementa_puntero_backup)
 565+ 9E7B 32 C1 87         ld (Incrementa_puntero),a
 566+ 9E7E C9           4 ret
 567+ 9E7F
 568+ 9E7F 3A 85 87     Vuelca_en_Contador_general_de_mov_masticados ld a,(Tipo)
 569+ 9E82 CD EB 86         call Calcula_salto_en_BC
 570+ 9E85 21 B3 87         ld hl,Contador_general_de_mov_masticados_Entidad_1
 571+ 9E88 A7               and a
 572+ 9E89 ED 4A            adc hl,bc
 573+ 9E8B C9               ret
 574+ 9E8C
 575+ 9E8C
# file closed: Patrones_de_mov.asm
1789  9E8C              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9E8C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9E8C              ;
   3+ 9E8C              ;	12/12/23
   4+ 9E8C              ;
   5+ 9E8C              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9E8C
   7+ 9E8C              ;	ADC HL,SP	LD (addr),SP
   8+ 9E8C              ;	ADD HL,SP	LD SP,(addr)
   9+ 9E8C              ;	ADD IX,SP	LD SP,nn
  10+ 9E8C              ; 	ADD IY,SP	LD SP,HL
  11+ 9E8C              ;				LD SP,IX
  12+ 9E8C              ;	DEC SP		LD SP,IY
  13+ 9E8C
  14+ 9E8C              ;	EX (SP),HL
  15+ 9E8C              ;	EX (SP),IX
  16+ 9E8C              ;	EX (SP),IY
  17+ 9E8C
  18+ 9E8C              ;	INC SP
  19+ 9E8C
  20+ 9E8C                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 D8 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 A2 87         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 A4 87         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A C7 87         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A E0 87         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A A8 87     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A E4 87         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A DE 87     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A C7 87         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 E0 87         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A A8 87     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 E4 87         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B D8 87      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 DE 87     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B D8 87  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A DE 87         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 DE 87         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1790  718B
1791  718B              	SAVESNA "Pruebas.sna", START
1792  718B
1793  718B
1794  718B
1795  718B
# file closed: Banco_de_Pruebas.asm
