# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 83 88  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD E9 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD F9 8C     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 8D 88     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B 83 88  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 105  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC EE 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 CA 85        	defw Caja_2
 110+ 8574 DC 85        	defw Caja_3
 111+ 8576 EE 85        	defw Caja_4
 112+ 8578 00 86        	defw Caja_5
 113+ 857A 12 86        	defw Caja_6
 114+ 857C 24 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8              ;
 152+ 85B8              ;	22/01/24
 153+ 85B8              ;
 154+ 85B8              ; 	Cada caja tiene 18 bytes !!!
 155+ 85B8
 156+ 85B8 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 157+ 85BA 00           	db %00000000										; (Attr).
 158+ 85BB              ;	db 0												; (Cuad_objeto).
 159+ 85BB 00           	db 0												; (Impacto).
 160+ 85BC 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 85C2 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 85C4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 85C6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 85C8 00           	db 0												; (Ctrl_0).
 165+ 85C9 00           	db 0												; (Ctrl_2).
 166+ 85CA
 167+ 85CA              ; ---------- ---------- ---------- ---------- ----------
 168+ 85CA
 169+ 85CA 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 170+ 85CC 00           	db %00000000										; (Attr).
 171+ 85CD              ;	db 0												; (Cuad_objeto).
 172+ 85CD 00           	db 0												; (Impacto).
 173+ 85CE 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 85D4 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 85D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 85D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 85DA 00           	db 0												; (Ctrl_0).
 178+ 85DB 00           	db 0												; (Ctrl_2).
 179+ 85DC
 180+ 85DC              ; ---------- ---------- ---------- ---------- ----------
 181+ 85DC
 182+ 85DC 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 183+ 85DE 00           	db %00000000										; (Attr).
 184+ 85DF              ;	db 0												; (Cuad_objeto).
 185+ 85DF 00           	db 0												; (Impacto).
 186+ 85E0 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 85E6 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 85E8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 85EA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 85EC 00           	db 0												; (Ctrl_0).
 191+ 85ED 00           	db 0												; (Ctrl_2).
 192+ 85EE
 193+ 85EE              ; ---------- ---------- ---------- ---------- ----------
 194+ 85EE
 195+ 85EE 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 196+ 85F0 00           	db %00000000										; (Attr).
 197+ 85F1              ;	db 0												; (Cuad_objeto).
 198+ 85F1 00           	db 0												; (Impacto).
 199+ 85F2 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 85F8 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 85FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 85FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 85FE 00           	db 0												; (Ctrl_0).
 204+ 85FF 00           	db 0												; (Ctrl_2).
 205+ 8600
 206+ 8600              ; ---------- ---------- ---------- ---------- ----------
 207+ 8600
 208+ 8600 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 209+ 8602 00           	db %00000000										; (Attr).
 210+ 8603              ;	db 0												; (Cuad_objeto).
 211+ 8603 00           	db 0												; (Impacto).
 212+ 8604 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 860A 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 860C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 860E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8610 00           	db 0												; (Ctrl_0).
 217+ 8611 00           	db 0												; (Ctrl_2).
 218+ 8612
 219+ 8612              ; ---------- ---------- ---------- ---------- ----------
 220+ 8612
 221+ 8612 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 222+ 8614 00           	db %00000000										; (Attr).
 223+ 8615              ;	db 0												; (Cuad_objeto).
 224+ 8615 00           	db 0												; (Impacto).
 225+ 8616 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 861C 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 861E 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8620 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8622 00           	db 0												; (Ctrl_0).
 230+ 8623 00           	db 0												; (Ctrl_2).
 231+ 8624
 232+ 8624              ; ---------- ---------- ---------- ---------- ----------
 233+ 8624
 234+ 8624 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 235+ 8626 00           	db %00000000										; (Attr).
 236+ 8627              ;	db 0												; (Cuad_objeto).
 237+ 8627 00           	db 0												; (Impacto).
 238+ 8628 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 862E 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8630 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 8632 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 8634 00           	db 0												; (Ctrl_0).
 243+ 8635 00           	db 0												; (Ctrl_2).
 244+ 8636
 245+ 8636              ; -------------------------------------------------------------------------------------
 246+ 8636              ;
 247+ 8636              ;	11/1/24
 248+ 8636              ;
 249+ 8636              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 8636              ;
 251+ 8636              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 8636              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 8636              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 8636              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 8636
 256+ 8636              Indice_de_definiciones_de_entidades
 257+ 8636
 258+ 8636 3A 86        	defw Entidad_1
 259+ 8638 47 86        	defw Entidad_2
 260+ 863A
 261+ 863A              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 863A
 263+ 863A              ;	BADSAT, (Satélite malvado).
 264+ 863A
 265+ 863A 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 863D 04           	db %00000100										; (Attr).
 267+ 863E A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8640 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 8642 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 8644 01           	db 1												; (Cuad_objeto).
 271+ 8645 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 8647
 273+ 8647 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 864A 02           	db %00000010										; (Attr).
 275+ 864B A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 864D 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 864F 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8651 01           	db 1												; (Cuad_objeto).
 279+ 8652 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 8654
# file closed: Cajas_y_disparos.asm
 106  8654              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8654              ; 19/1/24
   2+ 8654
   3+ 8654              Indice_de_niveles
   4+ 8654
   5+ 8654 5C 86        	defw Nivel_1
   6+ 8656 64 86        	defw Nivel_2
   7+ 8658
   8+ 8658              ;	...
   9+ 8658              ;	...
  10+ 8658              ;	+ Niveles ...
  11+ 8658
  12+ 8658 00 00        	defw 0
  13+ 865A 00 00        	defw 0
  14+ 865C
  15+ 865C 03           Nivel_1 db 3									; Nº de entidades.
  16+ 865D 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8661 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8664
  19+ 8664 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8665 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8669 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 866D 01 02
  22+ 866F 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8673 01 02
  23+ 8675
  24+ 8675              ;---------------------------------------------------------------------------------------------------------------
  25+ 8675              ;
  26+ 8675              ;   19/1/24
  27+ 8675              ;
  28+ 8675              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 8675              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 8675              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 8675              ;	_ de la 1ª entidad del Nivel.
  32+ 8675              ;
  33+ 8675              ;	MODIFICA: HL,DE y A.
  34+ 8675              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 8675
  36+ 8675              Inicializa_Nivel
  37+ 8675
  38+ 8675 2A AC 88     	ld hl,(Puntero_indice_NIVELES)
  39+ 8678 CD B2 8B     	call Extrae_address
  40+ 867B 7E           	ld a,(hl)
  41+ 867C 32 77 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 867F 23           	inc hl
  43+ 8680 CD 8A 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 8683 22 AE 88     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 8686 CD 93 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 8689 C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 868A
  48+ 868A              ; ----------------------
  49+ 868A
  50+ 868A 11 56 88     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 868D 01 04 00     	ld bc,4
  52+ 8690 ED B0        	ldir
  53+ 8692 C9           	ret
  54+ 8693
  55+ 8693 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 8694 CD 92 87         call Calcula_salto_en_BC
  57+ 8697 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 869A A7               and a
  59+ 869B ED 4A            adc hl,bc
  60+ 869D CD B2 8B         call Extrae_address
  61+ 86A0 22 62 88         ld (Puntero_indice_mov),hl
  62+ 86A3 C9               ret
  63+ 86A4
  64+ 86A4              ;---------------------------------------------------------------------------------------------------------------
  65+ 86A4              ;
  66+ 86A4              ;   5/1/24
  67+ 86A4              ;
  68+ 86A4              ;	Destruye A,BC,HL,DE
  69+ 86A4
  70+ 86A4              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 86A4              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 86A4
  73+ 86A4              Inicia_Entidades
  74+ 86A4
  75+ 86A4              ; Preparamos los punteros de las cajas de entidades:
  76+ 86A4
  77+ 86A4 CD 1A 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  78+ 86A7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  79+ 86A7 CD 0F 88     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  80+ 86AA
  81+ 86AA 2A AE 88     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  82+ 86AD
  83+ 86AD 22 AE 88     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  84+ 86B0
  85+ 86B0 CD 40 87     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  86+ 86B3
  87+ 86B3 2A AE 88     	ld hl,(Datos_de_nivel)
  88+ 86B6
  89+ 86B6              ; En este punto:
  90+ 86B6              ;
  91+ 86B6              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  92+ 86B6              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  93+ 86B6
  94+ 86B6 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  95+ 86B7
  96+ 86B7 7E           	ld a,(hl)													; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  97+ 86B8 CD 92 87     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
  98+ 86BB
  99+ 86BB 21 36 86     	ld hl,Indice_de_definiciones_de_entidades
 100+ 86BE CD 9A 87     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 101+ 86C1
 102+ 86C1 CD A4 87     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
 103+ 86C4
 104+ 86C4              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
 105+ 86C4
 106+ 86C4 CD 62 87     	call Busca_mov_masticados_segun_tipo
 107+ 86C7
 108+ 86C7 A7           	and a
 109+ 86C8 28 10        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
 110+ 86CA
 111+ 86CA              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
 112+ 86CA
 113+ 86CA              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 114+ 86CA              ;	_ de este tipo de entidad.
 115+ 86CA
 116+ 86CA CD FB 9E     	call Situa_en_Contador_general_de_mov_masticados
 117+ 86CD
 118+ 86CD              	; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
 119+ 86CD
 120+ 86CD              	; HL apunta al bye bajo del (Contador_general_de_mov_masticados) de esta entidad.
 121+ 86CD
 122+ 86CD              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
 123+ 86CD
 124+ 86CD CD FB 9E     	call Situa_en_Contador_general_de_mov_masticados
 125+ 86D0
 126+ 86D0              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
 127+ 86D0              ; Cargamos (Contador_de_mov_masticados) con el (Contador_general_de_mov_masticados) de este (Tipo) de entidad.
 128+ 86D0
 129+ 86D0 4E           	ld c,(hl)
 130+ 86D1 23           	inc hl
 131+ 86D2 46           	ld b,(hl) 													; BC contiene los mov_masticados totales de esta entidad.
 132+ 86D3
 133+ 86D3 69           	ld l,c
 134+ 86D4 60           	ld h,b
 135+ 86D5
 136+ 86D5 22 4D 88     	ld (Contador_de_mov_masticados),hl
 137+ 86D8
 138+ 86D8 18 06        	jr 4F
 139+ 86DA
 140+ 86DA
 141+ 86DA CD 74 8A     3 call Construye_movimientos_masticados_entidad
 142+ 86DD
 143+ 86DD              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 144+ 86DD              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 145+ 86DD              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 146+ 86DD              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 147+ 86DD              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 148+ 86DD
 149+ 86DD CD 20 87     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 150+ 86E0              ;																; _ Mov_masticados ya generados.
 151+ 86E0 CD 02 87     4 call Guarda_foto_de_mov_masticado
 152+ 86E3
 153+ 86E3              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 154+ 86E3
 155+ 86E3 2A 49 88     	ld hl,(Puntero_de_impresion)
 156+ 86E6 CD 9B 9B     	call Genera_coordenadas
 157+ 86E9
 158+ 86E9 CD D7 87     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 159+ 86EC
 160+ 86EC CD 0D 87     	call Limpiamos_bandeja_DRAW
 161+ 86EF
 162+ 86EF              ; xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
 163+ 86EF
 164+ 86EF CD 1A 8C     	call Incrementa_punteros_de_cajas							; Nos situamos en la siguiente caja de entidades.
 165+ 86F2
 166+ 86F2              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 167+ 86F2              ; _ entidad del Nivel.
 168+ 86F2
 169+ 86F2 3A 8E 88     	ld a,(Ctrl_4)
 170+ 86F5 E6 F0        	and $f0
 171+ 86F7 32 8E 88     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 172+ 86FA
 173+ 86FA              ; Siguiente entidad del Nivel.
 174+ 86FA
 175+ 86FA 2A AE 88     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 176+ 86FD 23           	inc hl 														; _ entidad del Nivel.
 177+ 86FE
 178+ 86FE C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 179+ 86FF 10 AC        	djnz 2B
 180+ 8701
 181+ 8701 C9           	ret
 182+ 8702
 183+ 8702              ; ---------------------------------------------------------------------
 184+ 8702              ;
 185+ 8702              ;	29/01/24
 186+ 8702
 187+ 8702 CD C9 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 188+ 8705 CD 16 71     	call Guarda_foto_registros
 189+ 8708 F3           	di
 190+ 8709              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 191+ 8709              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 192+ 8709              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 193+ 8709              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 194+ 8709
 195+ 8709 CD 18 87     	call Decrementa_Contador_de_mov_masticados
 196+ 870C C9           	ret
 197+ 870D
 198+ 870D              ; ---------------------------------------------------------------------
 199+ 870D              ;
 200+ 870D              ;	25/01/24
 201+ 870D
 202+ 870D 21 2C 88     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 203+ 8710 06 2A        	ld b,42
 204+ 8712 AF           	xor a
 205+ 8713
 206+ 8713 77           1 ld (hl),a
 207+ 8714 23           	inc hl
 208+ 8715 10 FC        	djnz 1B
 209+ 8717
 210+ 8717 C9           	ret
 211+ 8718
 212+ 8718              ; ---------------------------------------------------------------------
 213+ 8718              ;
 214+ 8718              ;	22/01/24
 215+ 8718
 216+ 8718 2A 4D 88     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 217+ 871B 2B           	dec hl
 218+ 871C 22 4D 88     	ld (Contador_de_mov_masticados),hl
 219+ 871F C9           	ret
 220+ 8720
 221+ 8720              ; ---------------------------------------------------------------------
 222+ 8720              ;
 223+ 8720              ;	22/01/24
 224+ 8720
 225+ 8720 21 8E 88     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 226+ 8723 CB 46        	bit 0,(hl)
 227+ 8725 20 0D        	jr nz,1F
 228+ 8727 CB 4E        	bit 1,(hl)
 229+ 8729 20 0C        	jr nz,2F
 230+ 872B CB 56        	bit 2,(hl)
 231+ 872D 20 0B        	jr nz,3F
 232+ 872F CB 5E        	bit 3,(hl)
 233+ 8731 20 0A        	jr nz,4F
 234+ 8733 C9           	ret
 235+ 8734
 236+ 8734 CB E6        1 set 4,(hl)
 237+ 8736 C9           	ret
 238+ 8737 CB EE        2 set 5,(hl)
 239+ 8739 C9           	ret
 240+ 873A CB F6        3 set 6,(hl)
 241+ 873C C9           	ret
 242+ 873D CB FE        4 set 7,(hl)
 243+ 873F C9           	ret
 244+ 8740
 245+ 8740              ; ---------------------------------------------------------------------
 246+ 8740              ;
 247+ 8740              ;	23/01/24
 248+ 8740              ;
 249+ 8740              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 250+ 8740              ;
 251+ 8740              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 252+ 8740              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 253+ 8740              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 254+ 8740              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 255+ 8740
 256+ 8740              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 257+ 8740
 258+ 8740 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 259+ 8741 3D           	dec a
 260+ 8742 20 06        	jr nz,1F
 261+ 8744
 262+ 8744              ; --- Tipo_1
 263+ 8744
 264+ 8744 21 8E 88     	ld hl,Ctrl_4
 265+ 8747 CB C6        	set 0,(hl)
 266+ 8749 C9           	ret
 267+ 874A
 268+ 874A 3D           1 dec a
 269+ 874B 20 06        	jr nz,2F
 270+ 874D
 271+ 874D              ; --- Tipo_2
 272+ 874D
 273+ 874D 21 8E 88     	ld hl,Ctrl_4
 274+ 8750 CB CE        	set 1,(hl)
 275+ 8752 C9           	ret
 276+ 8753
 277+ 8753 3D           2 dec a
 278+ 8754 20 06        	jr nz,3F
 279+ 8756
 280+ 8756              ; --- Tipo_3
 281+ 8756
 282+ 8756 21 8E 88     	ld hl,Ctrl_4
 283+ 8759 CB D6        	set 2,(hl)
 284+ 875B C9           	ret
 285+ 875C
 286+ 875C              ; --- Tipo_3
 287+ 875C
 288+ 875C 21 8E 88     3 ld hl,Ctrl_4
 289+ 875F CB D6        	set 2,(hl)
 290+ 8761 C9           	ret
 291+ 8762
 292+ 8762              ; ---------------------------------------------------------------------
 293+ 8762              ;
 294+ 8762              ;	22/01/24
 295+ 8762
 296+ 8762 21 8E 88     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 297+ 8765 CB 46        	bit 0,(hl)
 298+ 8767 20 0E        	jr nz,1F
 299+ 8769
 300+ 8769 CB 4E        	bit 1,(hl)
 301+ 876B 20 10        	jr nz,2F
 302+ 876D
 303+ 876D CB 56        	bit 2,(hl)
 304+ 876F 20 12        	jr nz,3F
 305+ 8771
 306+ 8771 CB 5E        	bit 3,(hl)
 307+ 8773 20 14        	jr nz,4F
 308+ 8775 18 19        	jr 6F
 309+ 8777
 310+ 8777              ; Entidad_de_Tipo_1.
 311+ 8777
 312+ 8777 CB 66        1 bit 4,(hl)
 313+ 8779 28 15        	jr z,6F
 314+ 877B 18 10        	jr 5F
 315+ 877D
 316+ 877D              ; Entidad_de_Tipo_2.
 317+ 877D
 318+ 877D CB 6E        2 bit 5,(hl)
 319+ 877F 28 0F        	jr z,6F
 320+ 8781 18 0A        	jr 5F
 321+ 8783
 322+ 8783              ; Entidad_de_Tipo_3.
 323+ 8783
 324+ 8783 CB 76        3 bit 6,(hl)
 325+ 8785 28 09        	jr z,6F
 326+ 8787 18 04        	jr 5F
 327+ 8789
 328+ 8789              ; Entidad_de_Tipo_4.
 329+ 8789
 330+ 8789 CB 7E        4 bit 7,(hl)
 331+ 878B 28 03        	jr z,6F
 332+ 878D
 333+ 878D              ; Esta entidad TIENE MOV_MASTICADOS.
 334+ 878D
 335+ 878D AF           5 xor a
 336+ 878E 3C           	inc a
 337+ 878F C9           	ret
 338+ 8790
 339+ 8790              ; Esta entidad NO TIENE MOV_MASTICADOS.
 340+ 8790
 341+ 8790 AF           6 xor a
 342+ 8791 C9           	ret
 343+ 8792
 344+ 8792              ;	------------------------------------------------------------------------------------
 345+ 8792              ;
 346+ 8792              ;	12/01/24
 347+ 8792              ;
 348+ 8792              ;	INPUTS:	A contiene el (Tipo) de entidad.
 349+ 8792              ;
 350+ 8792              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 351+ 8792              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 352+ 8792
 353+ 8792 CB 27        Calcula_salto_en_BC sla a
 354+ 8794 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 355+ 8796 4F           	ld c,a
 356+ 8797 06 00        	ld b,0
 357+ 8799 C9           	ret
 358+ 879A
 359+ 879A              ; ------------------------------------------------------------------
 360+ 879A              ;
 361+ 879A              ;	19/1/24
 362+ 879A              ;
 363+ 879A              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 364+ 879A              ;	Actualiza (Datos_de_entidad) con esa dirección.
 365+ 879A
 366+ 879A A7           Situa_en_datos_de_definicion and a
 367+ 879B ED 4A        	adc hl,bc
 368+ 879D CD B2 8B     	call Extrae_address
 369+ 87A0 22 7D 88         ld (Datos_de_entidad),hl
 370+ 87A3 C9           	ret
 371+ 87A4
 372+ 87A4              ; ------------------------------------------------------------------
 373+ 87A4
 374+ 87A4              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 375+ 87A4              ; 	inc de
 376+ 87A4              ; 	inc de
 377+ 87A4              ; 	ex de,hl
 378+ 87A4              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 379+ 87A4              ; 	ret
 380+ 87A4
 381+ 87A4              ; ----------------------------------------------------------------------------------------------------------
 382+ 87A4              ;
 383+ 87A4              ;	19/1/24
 384+ 87A4              ;
 385+ 87A4              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 386+ 87A4              ;	_ de entidad.
 387+ 87A4              ;
 388+ 87A4              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 389+ 87A4              ;			DE apunta al 1er .db de la bandeja DRAW, (Tipo).
 390+ 87A4              ;
 391+ 87A4              ;	MODIFICA: HL,DE y BC
 392+ 87A4
 393+ 87A4
 394+ 87A4              Definicion_de_entidad_a_bandeja_DRAW
 395+ 87A4
 396+ 87A4 11 2C 88     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW
 397+ 87A7
 398+ 87A7 01 03 00     	ld bc,3
 399+ 87AA ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 400+ 87AC              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 401+ 87AC 01 07 00     	ld bc,7
 402+ 87AF CD 05 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 403+ 87B2
 404+ 87B2 01 05 00     	ld bc,5
 405+ 87B5 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 406+ 87B7              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 407+ 87B7 01 04 00     	ld bc,4
 408+ 87BA CD 05 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 409+ 87BD
 410+ 87BD 01 03 00     	ld bc,3
 411+ 87C0 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 412+ 87C2              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 413+ 87C2
 414+ 87C2 01 09 00     	ld bc,9
 415+ 87C5 CD 05 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 416+ 87C8
 417+ 87C8 01 02 00     	ld bc,2
 418+ 87CB ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 419+ 87CD
 420+ 87CD 01 08 00     	ld bc,8
 421+ 87D0 CD 05 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 422+ 87D3
 423+ 87D3 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 424+ 87D5 12           	ld (de),a 									; Vuelco (Frames_explosion).
 425+ 87D6
 426+ 87D6 C9           	ret
 427+ 87D7
 428+ 87D7              ; ----------------------------------------------------------------------------------------------------------
 429+ 87D7              ;
 430+ 87D7              ;	22/01/24
 431+ 87D7              ;
 432+ 87D7              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 433+ 87D7              ;
 434+ 87D7              ;	Las cajas contienen entidades iniciadas:
 435+ 87D7              ;
 436+ 87D7              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 437+ 87D7              ;
 438+ 87D7              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 439+ 87D7              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 440+ 87D7              ;
 441+ 87D7              ;	MODIFICA: HL,DE y BC
 442+ 87D7
 443+ 87D7 21 33 88     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW+7		; HL situado en (Coordenada_X) de la bandeja DRAW.
 444+ 87DA ED 5B 71 88  	ld de,(Puntero_store_caja) 								; DE situado en el 1er .db de la correspondiente caja de entidades.
 445+ 87DE 01 02 00     	ld bc,2
 446+ 87E1 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 447+ 87E3              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 448+ 87E3 23           	inc hl
 449+ 87E4 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 450+ 87E5 12           	ld (de),a
 451+ 87E6 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 452+ 87E7
 453+ 87E7 01 0C 00     	ld bc,12
 454+ 87EA CD 0B 88     	call Situa_HL
 455+ 87ED 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 456+ 87EE 12           	ld (de),a
 457+ 87EF 13           	inc de 													; (Impacto), volcado a la caja.
 458+ 87F0              ;															; DE situado ahora en (Variables_de_borrado).
 459+ 87F0 23           	inc hl
 460+ 87F1 01 06 00     	ld bc,6
 461+ 87F4 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 462+ 87F6              ; 															; DE situado ahora en (Puntero_de_impresión).
 463+ 87F6 01 07 00     	ld bc,7
 464+ 87F9 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 465+ 87FB              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 466+ 87FB              ;															; HL apunta ahora a (Columnas).
 467+ 87FB 01 04 00     	ld bc,4
 468+ 87FE CD 0B 88     	call Situa_HL
 469+ 8801 7E           	ld a,(hl)
 470+ 8802 12           	ld (de),a 												; Volcamos (Ctrl_2).
 471+ 8803 13           	inc de
 472+ 8804
 473+ 8804 C9           	ret
 474+ 8805
 475+ 8805              ; -------------------------------------------------------------
 476+ 8805
 477+ 8805 EB           Situa_DE ex de,hl
 478+ 8806 A7           	and a
 479+ 8807 ED 4A        	adc hl,bc
 480+ 8809 EB           	ex de,hl
 481+ 880A C9           	ret
 482+ 880B
 483+ 880B A7           Situa_HL and a
 484+ 880C ED 4A        	adc hl,bc
 485+ 880E C9           	ret
 486+ 880F
 487+ 880F              ;---------------------------------------------------------------------------------------------------------------
 488+ 880F              ;
 489+ 880F              ;	5/1/24
 490+ 880F              ;
 491+ 880F              ;	INICIALIZA (Numero_parcial_de_entidades).
 492+ 880F              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 493+ 880F              ;
 494+ 880F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 495+ 880F              ;
 496+ 880F              ;	(Numero_parcial_de_entidades)="7".
 497+ 880F              ;
 498+ 880F              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 499+ 880F              ;
 500+ 880F              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 501+ 880F              ;
 502+ 880F              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 503+ 880F              ;	MODIFICA: A y B.
 504+ 880F              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 505+ 880F
 506+ 880F              Inicializa_Numero_parcial_de_entidades
 507+ 880F
 508+ 880F              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 509+ 880F
 510+ 880F 3A 77 88     	ld a,(Numero_de_entidades)
 511+ 8812 A7           	and a
 512+ 8813
 513+ 8813              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 514+ 8813              ;	jr z,$
 515+ 8813              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 516+ 8813
 517+ 8813 20 03        	jr nz,3F
 518+ 8815
 519+ 8815              ; ---------- ---------- ----------
 520+ 8815
 521+ 8815              ;! RESET para pruebas. Omitir esta línea en modo normal.
 522+ 8815              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 523+ 8815
 524+ 8815 CD 75 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 525+ 8818
 526+ 8818              ; ---------- ---------- ----------
 527+ 8818
 528+ 8818 3A 77 88     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 529+ 881B FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 530+ 881D 38 08        	jr c,1F
 531+ 881F
 532+ 881F              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 533+ 881F              ; Actualizamos variables.
 534+ 881F
 535+ 881F 3E 07        	ld a,7
 536+ 8821 32 78 88     	ld (Numero_parcial_de_entidades),a
 537+ 8824 47           	ld b,a
 538+ 8825 18 04        	jr 2F
 539+ 8827
 540+ 8827              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 541+ 8827              ; (Numero_de_entidades)="0".
 542+ 8827
 543+ 8827 32 78 88     1 ld (Numero_parcial_de_entidades),a
 544+ 882A 47           	ld b,a
 545+ 882B C9           2 ret
# file closed: Niveles.asm
 107  882C
 108  882C              ; ******************************************************************************************************************************************************************************************
 109  882C              ; Constantes.
 110  882C              ; ******************************************************************************************************************************************************************************************
 111  882C              ;
 112  882C              ; 25/12/23
 113  882C
 114  882C              ;
 115  882C              ; Constantes.
 116  882C              ;
 117  882C
 118  882C              Sprite_vacio equ $eae0
 119  882C              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 120  882C              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 121  882C              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 122  882C              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 123  882C
 124  882C              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 125  882C              ;														;
 126  882C              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  882C
 128  882C              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  882C              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  882C              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  882C              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  882C              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  882C
 134  882C              ;														; 55 Bytes.
 135  882C              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 136  882C              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 137  882C
 138  882C              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  882C
 140  882C              ; ******************************************************************************************************************************************************************************************
 141  882C              ; Variables.
 142  882C              ; ******************************************************************************************************************************************************************************************
 143  882C              ;
 144  882C              ; 18/01/24
 145  882C              ;
 146  882C              ; Variables de DRAW. (Motor principal).	42 Bytes.
 147  882C              ;
 148  882C
 149  882C              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 150  882C
 151  882C 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  882D              ;															- Patrón de movimiento.
 153  882D              ;															- Aspecto
 154  882D 00           Filas db 0												; Filas. [DRAW]
 155  882E 00           Columns db 0  											; Nº de columnas. [DRAW]
 156  882F 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8831 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8833 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8834 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8835
 161  8835              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8835
 163  8835 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  8836              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  8836              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  8836 00           Attr db 0												; Atributos de la entidad:
 167  8837
 168  8837              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  8837              ;
 170  8837              ;	COLORES: 0 ..... NEGRO
 171  8837              ;    		 1 ..... AZUL
 172  8837              ; 			 2 ..... ROJO
 173  8837              ;			 3 ..... MAGENTA
 174  8837              ; 			 4 ..... VERDE
 175  8837              ; 			 5 ..... CIAN
 176  8837              ;			 6 ..... AMARILLO
 177  8837              ; 			 7 ..... BLANCO
 178  8837
 179  8837 00 00        Indice_Sprite_der defw 0
 180  8839 00 00        Indice_Sprite_izq defw 0
 181  883B 00 00        Puntero_DESPLZ_der defw 0
 182  883D 00 00        Puntero_DESPLZ_izq defw 0
 183  883F
 184  883F 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8841 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8842
 187  8842              ; Variables de objeto. (Características).
 188  8842
 189  8842 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  8843              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  8843              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  8843 00 00 00...  Variables_de_borrado ds 6
 193  8849
 194  8849 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 195  884B              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 196  884B
 197  884B 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 198  884D
 199  884D              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 200  884D              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 201  884D
 202  884D 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 203  884F              ;														; _palabras que componen el "movimiento_masticado".
 204  884F
 205  884F              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 206  884F
 207  884F 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 208  8850              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 209  8850              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 210  8850              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 211  8850              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 212  8850              ;
 213  8850              ; 														DESCRIPCIÖN:
 214  8850              ;
 215  8850              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 216  8850              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 217  8850              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 218  8850              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 219  8850              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 220  8850              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 221  8850              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 222  8850              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 223  8850              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 224  8850              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 225  8850              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 226  8850              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 227  8850              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 228  8850              ;
 229  8850              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 230  8850              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 231  8850              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 232  8850
 233  8850              ; Variables de funcionamiento. [DRAW].
 234  8850
 235  8850 00           Columnas db 0
 236  8851 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 237  8853              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  8853 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8854
 240  8854              ; variables de control general.
 241  8854
 242  8854 00           Ctrl_2 db 0
 243  8855              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 244  8855              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 245  8855              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 246  8855              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 247  8855              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 248  8855              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 249  8855              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 250  8855              ;
 251  8855              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 252  8855              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 253  8855              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 254  8855              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 255  8855              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 256  8855              ;														BIT 4, ???
 257  8855              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 258  8855
 259  8855 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 260  8856
 261  8856              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 262  8856
 263  8856              ;					         		---------;      ;---------
 264  8856
 265  8856              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 266  8856
 267  8856              Perfiles_de_velocidad
 268  8856
 269  8856 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 270  8857 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 271  8858 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 272  8859 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 273  885A
 274  885A              ; Contadores de 16 bits.
 275  885A
 276  885A 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 277  885C 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 278  885E 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 279  8860 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 280  8862
 281  8862              ; Movimiento. ------------------------------------------------------------------------------------------------------
 282  8862
 283  8862 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 284  8864 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 285  8866 00 00        Puntero_indice_mov_bucle defw 0							;
 286  8868              ;
 287  8868              ;
 288  8868 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 289  8869              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 290  8869              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 291  8869 00           Incrementa_puntero_backup db 0
 292  886A 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 293  886B              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 294  886B 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 295  886C 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 296  886D 00           Cola_de_desplazamiento db 0								; Este byte indica:
 297  886E              ;
 298  886E              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 299  886E              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 300  886E              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 301  886E              ;
 302  886E              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 303  886E              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 304  886E              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 305  886E              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 306  886E              ;
 307  886E              ;														;	"$ff" ..... Bucle infinito de repetición.
 308  886E              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 309  886E              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 310  886E              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 311  886E
 312  886E 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 313  886F
 314  886F              ;														DESCRIPCIÓN:
 315  886F              ;
 316  886F              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 317  886F              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 318  886F              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 319  886F              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 320  886F              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 321  886F              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 322  886F
 323  886F              ;														BIT 3, Recarga de nueva oleada.
 324  886F              ;														BIT 4, Recarga de nueva oleada.
 325  886F              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 326  886F              ;														BIT 6, **** Frame completo.
 327  886F              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 328  886F
 329  886F 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 330  8871              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 331  8871              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 332  8871              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 333  8871
 334  8871              ; Gestión de ENTIDADES y CAJAS.
 335  8871
 336  8871 00 00        Puntero_store_caja defw 0
 337  8873 00 00        Puntero_restore_caja defw 0
 338  8875 00 00        Indice_restore_caja defw 0
 339  8877 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 340  8878 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 341  8879 00           Entidades_en_curso db 0									; ..... ..... .....
 342  887A 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 343  887B              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 344  887B              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 345  887B              ;														; _ (Numero_de_malotes)="0".
 346  887B 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 347  887D 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 348  887F              ;														; _ puntero (Indice_entidades).
 349  887F
 350  887F              ;---------------------------------------------------------------------------------------------------------------
 351  887F              ;
 352  887F              ;	11/01/24
 353  887F              ;
 354  887F              ;	Álbumes.
 355  887F
 356  887F 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 357  8881              ;														; _variable para almacenar lo posición del puntero_
 358  8881              ; 														; _de pila, SP.
 359  8881 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 360  8883              ;														; La utiliza la rutina [Extrae_foto_registros].
 361  8883 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 362  8885 00 70        Stack_snapshot defw Album_de_fotos
 363  8887 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 364  8889
 365  8889              ;End_Snapshot defw Album_de_fotos
 366  8889              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 367  8889 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 368  888B              ;														; _el snapshot de los registros del siguiente disparo.
 369  888B              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 370  888B AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 371  888D
 372  888D 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 373  888E              ;
 374  888E              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 375  888E              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 376  888E              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 377  888E
 378  888E 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 379  888F              ;
 380  888F              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 381  888F              ;
 382  888F              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383  888F              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384  888F              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385  888F              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386  888F              ;
 387  888F              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 388  888F              ;															_ masticados ya generados.
 389  888F              ;
 390  888F              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 391  888F              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 392  888F              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 393  888F              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 394  888F
 395  888F
 396  888F              ; Gestión de Disparos.
 397  888F
 398  888F 00           Numero_de_disparotes db 0
 399  8890 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 400  8892 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 401  8894 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 402  8895              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 403  8895              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 404  8895 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 405  8897              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 406  8897              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 407  8897              ;														; _produzca colisión.
 408  8897 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 409  8899              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 410  8899 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 411  889C              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 412  889C 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 413  889F              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 414  889F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 415  88A0
 416  88A0              ;---------------------------------------------------------------------------------------------------------------
 417  88A0
 418  88A0              ; Relojes y temporizaciones.
 419  88A0
 420  88A0 00           Contador_de_frames db 0
 421  88A1 00           Contador_de_frames_2 db 0
 422  88A2
 423  88A2 04           Clock_explosion db 4
 424  88A3 14           Clock_Entidades_en_curso db 20
 425  88A4 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 426  88A5              ;														; Repite la oleada de entidades.
 427  88A5 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 428  88A6 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 429  88A7 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 430  88A8
 431  88A8 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 432  88A9 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 433  88AA 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 434  88AB
 435  88AB              ;---------------------------------------------------------------------------------------------------------------
 436  88AB
 437  88AB              ; Gestión de NIVELES.
 438  88AB
 439  88AB 00           Nivel db 0												; Nivel actual del juego.
 440  88AC 00 00        Puntero_indice_NIVELES defw 0
 441  88AE 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 442  88B0              ; 														; _ que definen el NIVEL.
 443  88B0              ; Y todo comienza aquí .....
 444  88B0              ;
 445  88B0              ; 	INICIO  *************************************************************************************************************************************************************************
 446  88B0              ;
 447  88B0              ;	5/1/24
 448  88B0
 449  88B0              START
 450  88B0
 451  88B0 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 452  88B3 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 453  88B5 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 454  88B7 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 455  88B9 F3           	DI
 456  88BA
 457  88BA 3E 07        	ld a,%00000111
 458  88BC CD 0D 98     	call Cls
 459  88BF CD 58 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 460  88C2
 461  88C2              ; INICIALIZACIÓN.
 462  88C2
 463  88C2              ;	Inicializa 1er Nivel.
 464  88C2
 465  88C2 21 54 86     	ld hl,Indice_de_niveles
 466  88C5 22 AC 88     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 467  88C8 CD 75 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 468  88CB              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 469  88CB              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 470  88CB              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 471  88CB
 472  88CB              ;	Provisional, (para desarrollo).
 473  88CB
 474  88CB              	;-
 475  88CB              ;	ld hl,Numero_parcial_de_entidades
 476  88CB              ;	ld b,(hl)
 477  88CB              ;	inc b
 478  88CB              ;	dec b
 479  88CB              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 480  88CB
 481  88CB CD A4 86     4 call Inicia_Entidades
 482  88CE
 483  88CE CD 1A 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 484  88D1              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 485  88D1 CD EE 8B     	call Restore_entidad								 ; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 486  88D4
 487  88D4              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 488  88D4              ; (Esto se dá cuando se inicia una nueva oleada).
 489  88D4
 490  88D4              ;	ld a,(Ctrl_1)
 491  88D4              ;	bit 3,a
 492  88D4              ;	jr nz,5F											; Loop
 493  88D4
 494  88D4              ; 	INICIA AMADEUS !!!!!
 495  88D4
 496  88D4              ;3 call Restore_Amadeus
 497  88D4              ;	call Inicia_Puntero_objeto
 498  88D4              ;	call Draw
 499  88D4
 500  88D4              ;	call Guarda_movimiento_masticado	;! Provisional
 501  88D4
 502  88D4              ;	call Guarda_foto_registros
 503  88D4              ;	call Guarda_datos_de_borrado_Amadeus
 504  88D4
 505  88D4              ;	ld de,Amadeus_db
 506  88D4              ;	call Store_Amadeus
 507  88D4
 508  88D4              ; 	INICIA DISPAROS !!!!!
 509  88D4
 510  88D4              ;	call Inicia_Puntero_Disparo_Entidades
 511  88D4              ;	call Inicia_Puntero_Disparo_Amadeus
 512  88D4
 513  88D4              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 514  88D4
 515  88D4              ;5 call Inicia_punteros_de_cajas
 516  88D4              ;	call Restore_entidad
 517  88D4
 518  88D4 3A 6E 88     	ld a,(Ctrl_1)
 519  88D7 CB 5F        	bit 3,a
 520  88D9 28 07        	jr z,6F
 521  88DB
 522  88DB              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 523  88DB
 524  88DB 21 6E 88     	ld hl,Ctrl_1
 525  88DE CB 9E        	res 3,(hl)
 526  88E0 18 07        	jr Main
 527  88E2
 528  88E2              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 529  88E2
 530  88E2 21 8D 88     6 ld hl,Ctrl_3
 531  88E5 CB C6        	set 0,(hl)											; Frame completo.
 532  88E7 FB           	ei
 533  88E8 76           	halt
 534  88E9
 535  88E9              ; ------------------------------------
 536  88E9
 537  88E9              Main
 538  88E9              ;
 539  88E9              ;	11/12/23
 540  88E9
 541  88E9              ; Aparece nueva entidad ???
 542  88E9
 543  88E9              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 544  88E9              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 545  88E9              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 546  88E9              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 547  88E9              ;														; _un 2º bloque.
 548  88E9
 549  88E9              ;	ld a,1
 550  88E9              ;	out ($fe),a
 551  88E9
 552  88E9 3A A3 88     	ld a,(Clock_Entidades_en_curso)
 553  88EC 47           	ld b,a
 554  88ED 3A A0 88     	ld a,(Contador_de_frames)
 555  88F0 B8           	cp b
 556  88F1 20 18        	jr nz,13F
 557  88F3
 558  88F3              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 559  88F3              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 560  88F3
 561  88F3 3A 78 88     21 ld a,(Numero_parcial_de_entidades)
 562  88F6 47           	ld b,a
 563  88F7 3A 79 88     	ld a,(Entidades_en_curso)
 564  88FA B8           	cp b
 565  88FB 28 0E        	jr z,13F
 566  88FD 30 0C        	jr nc,13F
 567  88FF
 568  88FF 3C           	inc a
 569  8900 32 79 88     	ld (Entidades_en_curso),a
 570  8903
 571  8903              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 572  8903
 573  8903 3A A3 88     	ld a,(Clock_Entidades_en_curso)
 574  8906              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 575  8906              ;! _ IMPREDECIBLE !!!!
 576  8906 C6 64        	add 100
 577  8908 32 A3 88     	ld (Clock_Entidades_en_curso),a
 578  890B
 579  890B              ; -------------------------------------------------------------------------------------------------------------
 580  890B
 581  890B              ; Habilita disparos.
 582  890B
 583  890B              13
 584  890B
 585  890B              ;	ld hl,Disparo_Amadeus
 586  890B              ;	ld de,CLOCK_repone_disparo_Amadeus
 587  890B              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 588  890B
 589  890B              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 590  890B              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 591  890B              ;	call Habilita_disparos
 592  890B
 593  890B              ; COLISIONES.
 594  890B
 595  890B              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 596  890B
 597  890B              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 598  890B              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 599  890B              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 600  890B
 601  890B              ;	xor a
 602  890B              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 603  890B
 604  890B              ;	call Inicia_punteros_de_cajas
 605  890B              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 606  890B              ; 														; _ en DRAW.
 607  890B
 608  890B              ;	ld a,(Filas)
 609  890B              ;	and a
 610  890B              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 611  890B              ;	call Incrementa_punteros_de_cajas
 612  890B              ;	jr 12B
 613  890B
 614  890B              ; ---------------------------------------------------------------------------------------
 615  890B
 616  890B 3A 78 88     10 ld a,(Numero_parcial_de_entidades)
 617  890E 47               ld b,a
 618  890F A7           	and a
 619  8910 20 14        	jr nz,11F
 620  8912
 621  8912 21 6E 88     	ld hl,Ctrl_1
 622  8915 CB 66        	bit 4,(hl)
 623  8917 C2 B6 89     	jp nz,16F
 624  891A
 625  891A              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 626  891A
 627  891A 21 6E 88     	ld hl,Ctrl_1
 628  891D CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 629  891F
 630  891F 3A A0 88     	ld a,(Contador_de_frames)
 631  8922 3C           	inc a
 632  8923 32 A4 88     	ld (Activa_recarga_cajas),a
 633  8926
 634  8926              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 635  8926
 636  8926 3A 79 88     11 ld a,(Entidades_en_curso)
 637  8929 A7           	and a
 638  892A CA B6 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 639  892D 47           	ld b,a												; No hay entidades que gestionar.
 640  892E
 641  892E              ; ( Código que ejecutamos con cada entidad: ).
 642  892E
 643  892E              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 644  892E
 645  892E C5           15 push bc 												; Nº de entidades en curso.
 646  892F
 647  892F              ; Existe "Entidad_guía" ???.
 648  892F              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 649  892F
 650  892F 3A 8D 88     	ld a,(Ctrl_3)
 651  8932 CB 4F        	bit 1,a
 652  8934 20 11        	jr nz,22F
 653  8936
 654  8936              ; Almacén de "Movimientos_masticados" lleno ???
 655  8936              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 656  8936              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 657  8936
 658  8936 3A 8D 88     	ld a,(Ctrl_3)
 659  8939 CB 5F        	bit 3,a
 660  893B 20 0A        	jr nz,22F
 661  893D
 662  893D              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 663  893D
 664  893D 21 54 88     	ld hl,Ctrl_2
 665  8940 CB EE        	set 5,(hl)
 666  8942 21 8D 88     	ld hl,Ctrl_3
 667  8945 CB CE        	set 1,(hl)
 668  8947
 669  8947              ; Impacto ???
 670  8947
 671  8947 3A 42 88     22 ld a,(Impacto)
 672  894A A7           	and a
 673  894B 28 31        	jr z,8F
 674  894D
 675  894D              ; Hay Impacto en esta entidad.
 676  894D
 677  894D 21 A2 88     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 678  8950 35           	dec (hl)
 679  8951 C2 A9 89     	jp nz,17F
 680  8954
 681  8954              ;! Velocidad de la animación de la explosión.
 682  8954
 683  8954 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 684  8956              ;														; _,(velocidad de la explosión).
 685  8956              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 686  8956
 687  8956 CD CC 8C     	call Repone_datos_de_borrado
 688  8959 CD 58 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 689  895C
 690  895C              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 691  895C
 692  895C 3A 54 88     	ld a,(Ctrl_2)
 693  895F CB 4F        	bit 1,a
 694  8961 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 695  8963
 696  8963              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 697  8963
 698  8963 3A 35 88     	ld a,(CTRL_DESPLZ)
 699  8966 A7           	and a
 700  8967 20 08        	jr nz,18F
 701  8969
 702  8969 21 84 84     	ld hl,Indice_Explosion_2x2-2
 703  896C 22 3B 88     	ld (Puntero_DESPLZ_der),hl
 704  896F 18 06        	jr 19F
 705  8971
 706  8971 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 707  8974 22 3B 88     	ld (Puntero_DESPLZ_der),hl
 708  8977
 709  8977 21 54 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 710  897A CB CE        	set 1,(hl)
 711  897C 18 22        	jr 7F
 712  897E
 713  897E              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 714  897E              ; _con las coordenadas de la entidad almacenada en DRAW.
 715  897E
 716  897E 3A 6E 88     8 ld a,(Ctrl_1)
 717  8981 CB 57        	bit 2,a
 718  8983 28 1B        	jr z,7F
 719  8985
 720  8985 2A 97 88     	ld hl,(Coordenadas_disparo_certero)
 721  8988 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 722  8989              ;														; E contiene la coordenada_X del disparo.
 723  8989 2A 33 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 724  898C              ;														; H FILA, (Coordenada_y de la entidad).
 725  898C A7           	and a
 726  898D ED 52        	sbc hl,de
 727  898F
 728  898F CD 10 91     	call Determina_resultado_comparativa
 729  8992
 730  8992 78           	ld a,b
 731  8993 A7           	and a
 732  8994 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 733  8996
 734  8996              ; ----- ----- -----
 735  8996
 736  8996 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 737  8998 32 42 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 738  899B
 739  899B 21 6E 88     	ld hl,Ctrl_1
 740  899E CB 96        	res 2,(hl)
 741  89A0
 742  89A0 CD 07 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 743  89A3
 744  89A3              ;	ld a,(Ctrl_0)
 745  89A3              ;	bit 4,a
 746  89A3              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 747  89A3
 748  89A3              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 749  89A3              ; [[[
 750  89A3              ;	call Detecta_disparo_entidad
 751  89A3              ; ]]]
 752  89A3
 753  89A3 CD 02 87     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 754  89A6
 755  89A6              ;	ld hl,Ctrl_0
 756  89A6              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 757  89A6
 758  89A6 F3           	di
 759  89A7 18 FE        	jr $
 760  89A9
 761  89A9 CD ED 8B     17 call Store_Restore_cajas
 762  89AC
 763  89AC C1           	pop bc
 764  89AD
 765  89AD 05           	dec b
 766  89AE C2 2E 89     	jp nz,15B
 767  89B1
 768  89B1              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 769  89B1              ; Hemos gestionado todas las unidades.
 770  89B1              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 771  89B1
 772  89B1 21 6E 88     	ld hl,Ctrl_1
 773  89B4 CB 96        	res 2,(hl)
 774  89B6
 775  89B6 21 8D 88     16 ld hl,Ctrl_3
 776  89B9 CB C6        	set 0,(hl)											; Frame completo.
 777  89BB
 778  89BB AF           	xor a
 779  89BC D3 FE        	out ($fe),a
 780  89BE
 781  89BE FB           	ei
 782  89BF 76           	halt
 783  89C0
 784  89C0              ; ----------------------------------------
 785  89C0
 786  89C0 3A 6E 88     	ld a,(Ctrl_1) 										; Existe Loop?
 787  89C3 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 788  89C5 CA E9 88     	jp z,Main
 789  89C8
 790  89C8              ; RECARGA DE NUEVA OLEADA.
 791  89C8
 792  89C8 3A A0 88     	ld a,(Contador_de_frames)
 793  89CB 47           	ld b,a
 794  89CC 3A A4 88     	ld a,(Activa_recarga_cajas)
 795  89CF B8           	cp b
 796  89D0 28 08        	jr z,20F
 797  89D2
 798  89D2 21 6E 88     	ld hl,Ctrl_1
 799  89D5 CB E6        	set 4,(hl)
 800  89D7 C3 E9 88     	jp Main
 801  89DA
 802  89DA 21 6E 88     20 ld hl,Ctrl_1
 803  89DD CB A6        	res 4,(hl)
 804  89DF
 805  89DF 3A A0 88     	ld a,(Contador_de_frames)
 806  89E2
 807  89E2              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 808  89E2              ;! _ IMPREDECIBLE !!!!
 809  89E2
 810  89E2 C6 0A        	add 10
 811  89E4 32 A3 88     	ld (Clock_Entidades_en_curso),a
 812  89E7
 813  89E7 C3 CB 88     	jp 4B
 814  89EA
 815  89EA C9           	ret
 816  89EB
 817  89EB              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 818  89EB              ;
 819  89EB              ;	16/11/23
 820  89EB
 821  89EB              Gestiona_Amadeus
 822  89EB
 823  89EB              ;! Activa/desactiva impacto con Amadeus.
 824  89EB
 825  89EB              ;	ld a,(Impacto)
 826  89EB              ;	and a
 827  89EB              ;	jr nz,2F
 828  89EB
 829  89EB CD 64 8A     	call Mov_Amadeus
 830  89EE
 831  89EE 3A 4F 88     2 ld a,(Ctrl_0)
 832  89F1 CB 67        	bit 4,a
 833  89F3 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 834  89F5
 835  89F5 CD DF 8A     	call Guarda_foto_entidad_a_pintar
 836  89F8 CD AC 8C     	call Guarda_datos_de_borrado_Amadeus
 837  89FB
 838  89FB 21 4F 88     1 ld hl,Ctrl_0
 839  89FE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 840  8A00
 841  8A00 CD 9B 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 842  8A03
 843  8A03              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 844  8A03
 845  8A03 CD 9A 8B     	call Calcula_numero_de_disparotes
 846  8A06
 847  8A06 C9           	ret
 848  8A07
 849  8A07              ; --------------------------------------------------------------------------------------------------------------
 850  8A07              ;
 851  8A07              ;	15/12/23
 852  8A07
 853  8A07              Mov_obj
 854  8A07
 855  8A07 3A 54 88     	ld a,(Ctrl_2)
 856  8A0A CB 4F        	bit 1,a
 857  8A0C 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 858  8A0E
 859  8A0E              ; Explosión:
 860  8A0E
 861  8A0E 3A 55 88     	ld a,(Frames_explosion)
 862  8A11 A7           	and a
 863  8A12 20 1D        	jr nz,4F
 864  8A14
 865  8A14              ;!  Una alimaña menos!!!!!!!!!1
 866  8A14
 867  8A14              ; Se trataba de una Entidad_guía ???
 868  8A14
 869  8A14 3A 54 88     	ld a,(Ctrl_2)
 870  8A17 CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 871  8A19 28 05        	jr z,5F
 872  8A1B
 873  8A1B 21 8D 88     	ld hl,Ctrl_3
 874  8A1E CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 875  8A20
 876  8A20              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 877  8A20              ;!! _generado puede ser distinto, (aletoriedad).
 878  8A20
 879  8A20 CD 4A 8C     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 880  8A23 21 78 88     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 881  8A26 35           	dec (hl)
 882  8A27 21 79 88     	ld hl,Entidades_en_curso
 883  8A2A 35           	dec (hl)
 884  8A2B 21 77 88     	ld hl,Numero_de_entidades
 885  8A2E 35           	dec (hl)
 886  8A2F 18 32        	jr 3F
 887  8A31
 888  8A31              ; -----
 889  8A31
 890  8A31              ;	`Movemos´ la explosión.
 891  8A31
 892  8A31 2A 3B 88     4 ld hl,(Puntero_DESPLZ_der)
 893  8A34 23           	inc hl
 894  8A35 23           	inc hl
 895  8A36 22 3B 88     	ld (Puntero_DESPLZ_der),hl
 896  8A39 CD B2 8B     	call Extrae_address
 897  8A3C 22 31 88     	ld (Puntero_objeto),hl
 898  8A3F
 899  8A3F 21 55 88     	ld hl,Frames_explosion
 900  8A42 35           	dec (hl)
 901  8A43
 902  8A43 21 4F 88     	ld hl,Ctrl_0
 903  8A46 CB E6        	set 4,(hl)
 904  8A48
 905  8A48 18 19        	jr 3F
 906  8A4A
 907  8A4A              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 908  8A4A
 909  8A4A AF           2 xor a
 910  8A4B 32 4F 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 911  8A4E
 912  8A4E              ; Movemos Entidades malignas.
 913  8A4E              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 914  8A4E
 915  8A4E              ;	ld a,(Ctrl_2)
 916  8A4E              ;	bit 5,a
 917  8A4E              ;	jr nz,8F
 918  8A4E
 919  8A4E              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 920  8A4E              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 921  8A4E              ;	jr 7F
 922  8A4E
 923  8A4E              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 924  8A4E
 925  8A4E              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 926  8A4E              ;	bit 4,a
 927  8A4E              ;	ret z
 928  8A4E
 929  8A4E              ; Ha habido desplazamiento de la entidad maligna.
 930  8A4E              ; Ha llegado a zona de AMADEUS ???
 931  8A4E
 932  8A4E 3A 34 88     7 ld a,(Coordenada_y)
 933  8A51 FE 14        	cp $14
 934  8A53 38 08        	jr c,1F
 935  8A55
 936  8A55              ; ---------
 937  8A55
 938  8A55              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 939  8A55              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 940  8A55
 941  8A55 F3           	di
 942  8A56 CD C0 8E     	call Genera_coordenadas_X
 943  8A59 CD FC 8E     	call Compara_coordenadas_X
 944  8A5C FB           	ei
 945  8A5D
 946  8A5D              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 947  8A5D
 948  8A5D              ; ---------
 949  8A5D
 950  8A5D              1
 951  8A5D              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 952  8A5D CD CC 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 953  8A60 CD 58 8B     	call Limpia_Variables_de_borrado
 954  8A63
 955  8A63 C9           3 ret
 956  8A64
 957  8A64              ; --------------------------------------------------------------------------------------------------------------
 958  8A64              ;
 959  8A64              ;	29/1/23
 960  8A64
 961  8A64              Mov_Amadeus
 962  8A64
 963  8A64              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 964  8A64
 965  8A64 CD C5 98     	call Mov_right
 966  8A67
 967  8A67 3A 4F 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 968  8A6A CB 67        	bit 4,a
 969  8A6C C8           	ret z
 970  8A6D
 971  8A6D              ; ---------
 972  8A6D
 973  8A6D              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 974  8A6D CD BC 8C     	call Repone_datos_de_borrado_Amadeus
 975  8A70 CD 58 8B     	call Limpia_Variables_de_borrado
 976  8A73
 977  8A73 C9           	ret
 978  8A74
 979  8A74              ; -----------------------------------------------------------------------------------
 980  8A74              ;
 981  8A74              ;	20/01/24
 982  8A74              ;
 983  8A74              ;
 984  8A74
 985  8A74              Construye_movimientos_masticados_entidad
 986  8A74
 987  8A74 2A 4B 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 988  8A77 E5           	push hl
 989  8A78
 990  8A78 CD BC 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 991  8A7B              ;															; _ el (Contador_de_mov_masticados).
 992  8A7B CD B8 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 993  8A7E              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 994  8A7E CD 21 98     	call Recompone_posicion_inicio
 995  8A81
 996  8A81 CD F7 91     1 call Draw
 997  8A84 CD A0 8A     	call Guarda_movimiento_masticado
 998  8A87 CD 8A 9D     	call Movimiento
 999  8A8A
1000  8A8A 3A 8D 88     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1001  8A8D CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1002  8A8F 28 F0        	jr z,1B
1003  8A91
1004  8A91              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1005  8A91              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1006  8A91
1007  8A91 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1008  8A92 22 4B 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1009  8A95
1010  8A95
1011  8A95              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1012  8A95
1013  8A95 CD FB 9E     	call Situa_en_Contador_general_de_mov_masticados
1014  8A98
1015  8A98              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1016  8A98              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1017  8A98
1018  8A98 ED 4B 4D 88  	ld bc,(Contador_de_mov_masticados)
1019  8A9C 71           	ld (hl),c
1020  8A9D 23           	inc hl
1021  8A9E 70           	ld (hl),b
1022  8A9F
1023  8A9F C9           	ret
1024  8AA0
1025  8AA0              ; -----------------------------------------------------------------------------------
1026  8AA0              ;
1027  8AA0              ;	28/12/23
1028  8AA0              ;
1029  8AA0              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1030  8AA0              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1031  8AA0
1032  8AA0              Guarda_movimiento_masticado
1033  8AA0
1034  8AA0 ED 73 7F 88  	ld (Stack),sp
1035  8AA4 ED 7B 4B 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1036  8AA8
1037  8AA8 E5           	push hl
1038  8AA9 DD E5            push ix
1039  8AAB FD E5            push iy
1040  8AAD
1041  8AAD ED 7B 7F 88      ld sp,(Stack)
1042  8AB1
1043  8AB1              ;    push hl
1044  8AB1
1045  8AB1 2A 4D 88        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1046  8AB4 23           	inc hl
1047  8AB5 22 4D 88     	ld (Contador_de_mov_masticados),hl
1048  8AB8
1049  8AB8              ;	pop hl
1050  8AB8
1051  8AB8 CD BC 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1052  8ABB              ;															; _ el (Contador_de_mov_masticados).
1053  8ABB C9               ret
1054  8ABC
1055  8ABC              ; --------------------------------------------------------------------------------------------------------------
1056  8ABC              ;
1057  8ABC              ;	12/1/24
1058  8ABC              ;
1059  8ABC              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1060  8ABC
1061  8ABC              Actualiza_Puntero_de_almacen_de_mov_masticados
1062  8ABC
1063  8ABC              ;	push hl
1064  8ABC              ;	push bc
1065  8ABC
1066  8ABC 2A 4B 88     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1067  8ABF 01 06 00     	ld bc,6
1068  8AC2 A7           	and a
1069  8AC3 ED 4A        	adc hl,bc
1070  8AC5 22 4B 88     	ld (Puntero_de_almacen_de_mov_masticados),hl
1071  8AC8
1072  8AC8              ;	pop bc
1073  8AC8              ;	pop hl
1074  8AC8
1075  8AC8 C9           	ret
1076  8AC9
1077  8AC9              ; --------------------------------------------------------------------------------------------------------------
1078  8AC9              ;
1079  8AC9              ;	15/01/24
1080  8AC9              ;
1081  8AC9              ;	Cargamos los registros_
1082  8AC9              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1083  8AC9              ;
1084  8AC9              ;	HL contiene la dirección de la rutina de impresión.
1085  8AC9              ;	IX contiene el puntero de impresión.
1086  8AC9              ;	IY contiene (Puntero_objeto).
1087  8AC9
1088  8AC9
1089  8AC9 ED 73 7F 88  Cargamos_registros_con_mov_masticado ld (Stack),sp
1090  8ACD ED 7B 4B 88  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1091  8AD1
1092  8AD1 FD E1        	pop iy
1093  8AD3 DD E1        	pop ix
1094  8AD5 E1           	pop hl
1095  8AD6
1096  8AD6 ED 73 4B 88  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1097  8ADA
1098  8ADA ED 7B 7F 88  	ld sp,(Stack)
1099  8ADE
1100  8ADE C9           	ret
1101  8ADF
1102  8ADF              ; --------------------------------------------------------------------------------------------------------------
1103  8ADF              ;
1104  8ADF              ;	28/12/23
1105  8ADF              ;
1106  8ADF              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1107  8ADF              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1108  8ADF
1109  8ADF              Guarda_foto_entidad_a_pintar
1110  8ADF
1111  8ADF 3A 4F 88     	ld a,(Ctrl_0)
1112  8AE2 CB 77        	bit 6,a
1113  8AE4 28 04        	jr z,5F
1114  8AE6
1115  8AE6              ;	Guarda la foto de Amadeus.
1116  8AE6
1117  8AE6              ;	call Draw
1118  8AE6              ;	call Guarda_movimiento_masticado	;! Provisional
1119  8AE6 CD 16 71     	call Guarda_foto_registros
1120  8AE9 C9           	ret
1121  8AEA
1122  8AEA              ; ENTIDADES!
1123  8AEA              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1124  8AEA
1125  8AEA 3A 8D 88     5 ld a,(Ctrl_3)
1126  8AED CB 5F        	bit 3,a
1127  8AEF 28 01        	jr z,1F
1128  8AF1
1129  8AF1              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1130  8AF1
1131  8AF1              4
1132  8AF1              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1133  8AF1 C9           	ret
1134  8AF2
1135  8AF2              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1136  8AF2
1137  8AF2 3A 8D 88     1 ld a,(Ctrl_3)
1138  8AF5 CB 57        	bit 2,a
1139  8AF7 20 10        	jr nz,6F
1140  8AF9
1141  8AF9              ; Entidad guía o fantasma ???
1142  8AF9
1143  8AF9 3A 54 88     	ld a,(Ctrl_2)
1144  8AFC CB 6F        	bit 5,a
1145  8AFE 20 10        	jr nz,3F
1146  8B00
1147  8B00              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1148  8B00
1149  8B00 18 EF        	jr 4B
1150  8B02
1151  8B02              ; ENTIDAD_GUÍA:
1152  8B02              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1153  8B02              ; _guardando "movimientos_masticados".
1154  8B02
1155  8B02 3A 8D 88     2 ld a,(Ctrl_3)
1156  8B05 CB 57        	bit 2,a
1157  8B07 28 07        	jr z,3F
1158  8B09
1159  8B09              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1160  8B09              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1161  8B09
1162  8B09 CB 97        6 res 2,a
1163  8B0B CB DF        	set 3,a
1164  8B0D 32 8D 88     	ld (Ctrl_3),a
1165  8B10
1166  8B10
1167  8B10              ;	Esto sólo lo ejecuta una entidad guía.
1168  8B10
1169  8B10 CD F7 91     3 	call Draw
1170  8B13 CD A0 8A     	call Guarda_movimiento_masticado
1171  8B16 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1172  8B19
1173  8B19              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1174  8B19              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1175  8B19
1176  8B19              ;	call Convierte_guia_en_fantasma
1177  8B19 C9           	ret
1178  8B1A
1179  8B1A              ; --------------------------------------------------------------------------------------------------------------
1180  8B1A              ;
1181  8B1A              ;	19/9/23
1182  8B1A
1183  8B1A              ;Prepara_var_pintado
1184  8B1A
1185  8B1A              ;	ld hl,Filas
1186  8B1A              ;	ld de,Variables_de_pintado
1187  8B1A              ;	ld bc,8
1188  8B1A              ;	ldir
1189  8B1A              ;	ret
1190  8B1A
1191  8B1A              ; --------------------------------------------------------------------------------------------------------------
1192  8B1A
1193  8B1A              ;Repone_pintar
1194  8B1A
1195  8B1A              ;	ld hl,Variables_de_pintado
1196  8B1A              ;	ld de,Filas
1197  8B1A              ;	ld bc,8
1198  8B1A              ;	ldir
1199  8B1A              ;	ret
1200  8B1A
1201  8B1A              ; *************************************************************************************************************************************************************
1202  8B1A              ;
1203  8B1A              ; 8/1/23
1204  8B1A              ;
1205  8B1A              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1206  8B1A              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1207  8B1A              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1208  8B1A
1209  8B1A              ; Destruye HL y DE !!!!!
1210  8B1A
1211  8B1A              Inicia_punteros_de_cajas
1212  8B1A
1213  8B1A 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1214  8B1D CD B2 8B         call Extrae_address
1215  8B20 22 71 88         ld (Puntero_store_caja),hl
1216  8B23 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1217  8B26 22 75 88     	ld (Indice_restore_caja),hl
1218  8B29 CD B2 8B     	call Extrae_address
1219  8B2C 22 73 88     	ld (Puntero_restore_caja),hl
1220  8B2F C9               ret
1221  8B30
1222  8B30              ; *************************************************************************************************************************************************************
1223  8B30              ;
1224  8B30              ; 8/1/23
1225  8B30              ;
1226  8B30              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1227  8B30
1228  8B30 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1229  8B33 22 90 88     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1230  8B36 C9           	ret
1231  8B37 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1232  8B3A 22 92 88     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1233  8B3D C9           	ret
1234  8B3E
1235  8B3E              ; -------------------------------------------------------------------------------------------------------------
1236  8B3E              ;
1237  8B3E              ; 21/9/23
1238  8B3E              ;
1239  8B3E
1240  8B3E              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1241  8B3E
1242  8B3E              Limpia_album_Amadeus
1243  8B3E
1244  8B3E 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1245  8B41 7E           	ld a,(hl)
1246  8B42 A7           	and a
1247  8B43 C8           	ret z
1248  8B44
1249  8B44 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1250  8B47 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1251  8B4A 01 0B 00     	ld bc,11
1252  8B4D AF           	xor a
1253  8B4E 77           	ld (hl),a
1254  8B4F ED B0        	ldir
1255  8B51
1256  8B51 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1257  8B54 22 8B 88     	ld (End_Snapshot_Amadeus),hl
1258  8B57
1259  8B57 C9           	ret
1260  8B58
1261  8B58 21 43 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1262  8B5B 11 44 88     	ld de,Variables_de_borrado+1
1263  8B5E 01 05 00     	ld bc,5
1264  8B61 AF           	xor a
1265  8B62 77           	ld (hl),a
1266  8B63 ED B0        	ldir
1267  8B65 C9           	ret
1268  8B66
1269  8B66              ; -------------------------------------------------------------------------------------------------------------
1270  8B66              ;
1271  8B66              ; 8/9/23
1272  8B66              ;
1273  8B66
1274  8B66              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1275  8B66              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1276  8B66
1277  8B66              Calcula_numero_de_malotes
1278  8B66
1279  8B66 21 00 70     	ld hl,Album_de_fotos
1280  8B69 EB           	ex de,hl
1281  8B6A 2A 85 88     	ld hl,(Stack_snapshot)
1282  8B6D
1283  8B6D 06 00        	ld b,0
1284  8B6F 7D           	ld a,l
1285  8B70 93           	sub e
1286  8B71 28 07        	jr z,1F
1287  8B73
1288  8B73              ; Nº de malotes no es "0".
1289  8B73
1290  8B73 D6 06        2 sub 6
1291  8B75 04           	inc b
1292  8B76 A7           	and a
1293  8B77 20 FA        	jr nz,2B
1294  8B79 78           	ld a,b
1295  8B7A
1296  8B7A 32 7A 88     1 ld (Numero_de_malotes),a
1297  8B7D C9           	ret
1298  8B7E
1299  8B7E              ; -------------------------------------------------------------------------------------------------------------
1300  8B7E              ;
1301  8B7E              ; 8/9/23
1302  8B7E              ;
1303  8B7E
1304  8B7E              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1305  8B7E              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1306  8B7E
1307  8B7E              Calcula_malotes_Amadeus
1308  8B7E
1309  8B7E 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1310  8B81 EB           	ex de,hl
1311  8B82 2A 8B 88     	ld hl,(End_Snapshot_Amadeus)
1312  8B85
1313  8B85 7C           	ld a,h
1314  8B86 A7           	and a
1315  8B87 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1316  8B89
1317  8B89 06 00        	ld b,0
1318  8B8B 7D           	ld a,l
1319  8B8C 93           	sub e
1320  8B8D 28 07        	jr z,1F
1321  8B8F
1322  8B8F              ; Nº de malotes no es "0".
1323  8B8F
1324  8B8F D6 06        2 sub 6
1325  8B91 04           	inc b
1326  8B92 A7           	and a
1327  8B93 20 FA        	jr nz,2B
1328  8B95 78           	ld a,b
1329  8B96
1330  8B96 32 7A 88     1 ld (Numero_de_malotes),a
1331  8B99 C9           	ret
1332  8B9A
1333  8B9A              ; -------------------------------------------------------------------------------------------------------------
1334  8B9A              ;
1335  8B9A              ; 28/2/23
1336  8B9A              ;
1337  8B9A
1338  8B9A              Calcula_numero_de_disparotes
1339  8B9A
1340  8B9A 21 56 70     	ld hl,Album_de_fotos_disparos
1341  8B9D EB           	ex de,hl
1342  8B9E 2A 89 88     	ld hl,(End_Snapshot_disparos)
1343  8BA1
1344  8BA1 06 00        	ld b,0
1345  8BA3 7D           	ld a,l
1346  8BA4 93           	sub e
1347  8BA5 28 07        	jr z,1F
1348  8BA7
1349  8BA7              ; Nº de malotes no es "0".
1350  8BA7
1351  8BA7 D6 06        2 sub 6
1352  8BA9 04           	inc b
1353  8BAA A7           	and a
1354  8BAB 20 FA        	jr nz,2B
1355  8BAD 78           	ld a,b
1356  8BAE
1357  8BAE 32 8F 88     1 ld (Numero_de_disparotes),a
1358  8BB1 C9           	ret
1359  8BB2
1360  8BB2              ; *************************************************************************************************************************************************************
1361  8BB2              ;
1362  8BB2              ; 20/10/22
1363  8BB2              ;
1364  8BB2              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1365  8BB2              ;
1366  8BB2              ; Destruye el puntero y DE !!!!!
1367  8BB2
1368  8BB2 5E           Extrae_address ld e,(hl)
1369  8BB3 23           	inc hl
1370  8BB4 56           	ld d,(hl)
1371  8BB5 2B           	dec hl
1372  8BB6 EB           	ex de,hl
1373  8BB7 C9           	ret
1374  8BB8
1375  8BB8              ; *************************************************************************************************************************************************************
1376  8BB8              ;
1377  8BB8              ;	20/1/24
1378  8BB8              ;
1379  8BB8              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1380  8BB8              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1381  8BB8              ;
1382  8BB8              ;   Destruye HL y BC !!!!!,
1383  8BB8              ;
1384  8BB8              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1385  8BB8              ;					"0" ..... Izquierda.
1386  8BB8
1387  8BB8              Inicia_Puntero_objeto
1388  8BB8
1389  8BB8 3A 41 88     	ld a,(Cuad_objeto)
1390  8BBB E6 01        	and 1
1391  8BBD F5           	push af
1392  8BBE CC DA 8B     	call z,Inicia_puntero_objeto_izq
1393  8BC1 F1           	pop af
1394  8BC2 C8           	ret z
1395  8BC3 CD C7 8B     	call Inicia_puntero_objeto_der
1396  8BC6 C9           	ret
1397  8BC7
1398  8BC7              ; Arrancamos desde la parte izquierda de la pantalla.
1399  8BC7              ; Iniciamos (Indice_Sprite_der).
1400  8BC7
1401  8BC7 2A 37 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1402  8BCA 22 3B 88     	ld (Puntero_DESPLZ_der),hl
1403  8BCD CD B2 8B     	call Extrae_address
1404  8BD0 22 31 88     	ld (Puntero_objeto),hl
1405  8BD3
1406  8BD3 2A 39 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1407  8BD6 22 3D 88     	ld (Puntero_DESPLZ_izq),hl
1408  8BD9 C9           	ret
1409  8BDA
1410  8BDA              ; Arrancamos desde la parte derecha de la pantalla.
1411  8BDA              ; Iniciamos (Indice_Sprite_izq).
1412  8BDA
1413  8BDA 2A 39 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1414  8BDD 22 3D 88     	ld (Puntero_DESPLZ_izq),hl
1415  8BE0 CD B2 8B     	call Extrae_address
1416  8BE3 22 31 88     	ld (Puntero_objeto),hl
1417  8BE6
1418  8BE6 2A 37 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1419  8BE9 22 3B 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1420  8BEC C9           	ret
1421  8BED
1422  8BED              ; *************************************************************************************************************************************************************
1423  8BED              ;
1424  8BED              ;	21/12/23
1425  8BED              ;
1426  8BED              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1427  8BED              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1428  8BED
1429  8BED              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1430  8BED              ;	_de la 2ª y 3ª entidad respectivamente.
1431  8BED
1432  8BED              Store_Restore_cajas
1433  8BED
1434  8BED              ; 	Entidad_sospechosa. 20/4/23
1435  8BED
1436  8BED              ;	ld a,(Impacto)
1437  8BED              ;	and a
1438  8BED              ;	jr z,1F
1439  8BED
1440  8BED              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1441  8BED              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1442  8BED              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1443  8BED              ;	adc hl,bc 											; _ "0" más adelante.
1444  8BED              ;	ld (Entidad_sospechosa_de_colision),hl
1445  8BED
1446  8BED              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1447  8BED
1448  8BED              ;	jr $
1449  8BED
1450  8BED
1451  8BED              ;1 ld hl,(Puntero_restore_caja)
1452  8BED              ;	ld a,(hl)
1453  8BED              ;	and a
1454  8BED              ;	push af
1455  8BED              ;	jr z,2F
1456  8BED
1457  8BED              ;	di
1458  8BED              ;	jr $
1459  8BED              ;	ei
1460  8BED
1461  8BED              ;	di
1462  8BED              ;	ld de,Bandeja_DRAW
1463  8BED              ;	ld bc,42
1464  8BED              ;	ldir
1465  8BED              ;	ei
1466  8BED
1467  8BED              ;2 call Incrementa_punteros_de_cajas
1468  8BED
1469  8BED
1470  8BED C9           	ret
1471  8BEE
1472  8BEE              ; **************************************************************************************************
1473  8BEE              ;
1474  8BEE              ;	26/01/24
1475  8BEE              ;
1476  8BEE              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1477  8BEE
1478  8BEE              Restore_entidad
1479  8BEE
1480  8BEE
1481  8BEE 2A 71 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1482  8BF1 11 33 88     	ld de,Bandeja_DRAW+7							; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1483  8BF4 01 02 00     	ld bc,2
1484  8BF7 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1485  8BF9
1486  8BF9 13           	inc de
1487  8BFA 7E           	ld a,(hl)
1488  8BFB 12           	ld (de),a 										; Transferimos (Attr).
1489  8BFC 23           	inc hl
1490  8BFD
1491  8BFD 01 0C 00     	ld bc,12
1492  8C00 CD 05 88     	call Situa_DE
1493  8C03
1494  8C03 7E           	ld a,(hl)
1495  8C04 12           	ld (de),a 										; Transferimos (Impacto).
1496  8C05 23           	inc hl
1497  8C06
1498  8C06 13           	inc de
1499  8C07
1500  8C07 01 06 00     	ld bc,6
1501  8C0A ED B0        	ldir
1502  8C0C
1503  8C0C 01 07 00     	ld bc,7
1504  8C0F ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1505  8C11              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1506  8C11
1507  8C11 01 04 00     	ld bc,4
1508  8C14 CD 05 88     	call Situa_DE
1509  8C17
1510  8C17 7E           	ld a,(hl)
1511  8C18 12           	ld (de),a 										; Transferimos (Ctrl_2).
1512  8C19
1513  8C19 C9           	ret
1514  8C1A
1515  8C1A              ; **************************************************************************************************
1516  8C1A              ;
1517  8C1A              ;	08/05/23
1518  8C1A              ;
1519  8C1A              ;	Incrementamos los dos punteros de entidades. (+1).
1520  8C1A
1521  8C1A              Incrementa_punteros_de_cajas
1522  8C1A
1523  8C1A 2A 73 88     	ld hl,(Puntero_restore_caja)
1524  8C1D 22 71 88     	ld (Puntero_store_caja),hl
1525  8C20 2A 75 88     	ld hl,(Indice_restore_caja)
1526  8C23 23           	inc hl
1527  8C24 23           	inc hl
1528  8C25 22 75 88     	ld (Indice_restore_caja),hl
1529  8C28 CD B2 8B         call Extrae_address
1530  8C2B 22 73 88         ld (Puntero_restore_caja),hl
1531  8C2E C9               ret
1532  8C2F
1533  8C2F              ; **************************************************************************************************
1534  8C2F              ;
1535  8C2F              ;	21/12/23
1536  8C2F              ;
1537  8C2F              ;	Restore_Amadeus
1538  8C2F              ;
1539  8C2F              ;	Cargamos en DRAW los parámetros de Amadeus.
1540  8C2F              ;
1541  8C2F
1542  8C2F E5           Restore_Amadeus	push hl
1543  8C30 D5           	push de
1544  8C31 C5            	push bc
1545  8C32 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1546  8C35 11 2C 88     	ld de,Bandeja_DRAW
1547  8C38 01 2A 00     	ld bc,42
1548  8C3B ED B0        	ldir
1549  8C3D C1           	pop bc
1550  8C3E D1           	pop de
1551  8C3F E1           	pop hl
1552  8C40 C9           	ret
1553  8C41
1554  8C41              ; *************************************************************************************************************************************************************
1555  8C41              ;
1556  8C41              ;	21/12/23
1557  8C41              ;
1558  8C41              ;	Store_Amadeus
1559  8C41              ;
1560  8C41              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1561  8C41              ;
1562  8C41              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1563  8C41              ;
1564  8C41              ;	DESTRUYE: HL y BC y DE.
1565  8C41
1566  8C41 21 2C 88     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1567  8C44 01 2A 00     	ld bc,42
1568  8C47 ED B0        	ldir
1569  8C49 C9           	ret
1570  8C4A
1571  8C4A              ; -----------------------------------------------------------
1572  8C4A              ;
1573  8C4A              ;	21/12/23
1574  8C4A              ;
1575  8C4A              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1576  8C4A              ;
1577  8C4A              ;	Destruye: HL,BC,DE,A
1578  8C4A
1579  8C4A 21 2C 88     Borra_datos_entidad ld hl,Bandeja_DRAW
1580  8C4D 01 29 00     	ld bc,41
1581  8C50 AF           	xor a
1582  8C51 77           	ld (hl),a
1583  8C52 11 2D 88     	ld de,Bandeja_DRAW+1
1584  8C55 ED B0        	ldir
1585  8C57 C9           	ret
1586  8C58
1587  8C58              ; -----------------------------------------------------------
1588  8C58
1589  8C58              ; Teclado.
1590  8C58
1591  8C58 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1592  8C5A DB FE        	in a,($fe)
1593  8C5C E6 01        	and $01
1594  8C5E 28 02        	jr z,1f
1595  8C60 18 F6        	jr Pulsa_ENTER
1596  8C62 C9           1 ret
1597  8C63
1598  8C63              ; **************************************************************************************************
1599  8C63              ;
1600  8C63              ; Temporización.
1601  8C63
1602  8C63              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1603  8C63              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1604  8C63              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1605  8C63              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1606  8C63
1607  8C63              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1608  8C63              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1609  8C63              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1610  8C63
1611  8C63              ; A partir de $4f61 no hace falta DELAY.
1612  8C63
1613  8C63              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1614  8C63
1615  8C63 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1616  8C66 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1617  8C67 78           	LD A,B
1618  8C68 A7           	AND A
1619  8C69 20 FB        	JR NZ,wait
1620  8C6B C9           	RET
1621  8C6C
1622  8C6C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1623  8C6C              ;
1624  8C6C              ;	5/3/23
1625  8C6C              ;
1626  8C6C              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1627  8C6C
1628  8C6C              Movimiento_Amadeus
1629  8C6C
1630  8C6C              ; Disparo.
1631  8C6C
1632  8C6C 3A A5 88     	ld a,(Disparo_Amadeus)
1633  8C6F A7           	and a
1634  8C70 20 02        	jr nz,1F
1635  8C72 18 15        	jr 2F
1636  8C74
1637  8C74 3E F7        1 ld a,$f7													; "5" para disparar.
1638  8C76 DB FE        	in a,($fe)
1639  8C78 E6 10        	and $10
1640  8C7A
1641  8C7A F5           	push af
1642  8C7B CC 23 8D     	call z,Genera_disparo
1643  8C7E F1           	pop af
1644  8C7F 20 08        	jr nz,2F
1645  8C81
1646  8C81 3A A5 88     	ld a,(Disparo_Amadeus)
1647  8C84 EE 01        	xor 1
1648  8C86 32 A5 88     	ld (Disparo_Amadeus),a
1649  8C89 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1650  8C8B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1651  8C8D E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1652  8C8F CC E8 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1653  8C92
1654  8C92 3E F7        	ld a,$f7
1655  8C94 DB FE        	in a,($fe)
1656  8C96 E6 01        	and $01
1657  8C98 C8           	ret z
1658  8C99
1659  8C99 3E F7        	ld a,$f7
1660  8C9B DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1661  8C9D E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1662  8C9F CC C5 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1663  8CA2 C9           	ret
1664  8CA3
1665  8CA3              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1666  8CA3              ;
1667  8CA3              ;	Rutina provisional para que los malotes cagen balas.
1668  8CA3
1669  8CA3              Detecta_disparo_entidad
1670  8CA3
1671  8CA3 3A A8 88     	ld a,(Disparo_entidad)
1672  8CA6 A7           	and a
1673  8CA7 C8           	ret z
1674  8CA8
1675  8CA8              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1676  8CA8
1677  8CA8              ;	ld a,$7f				; Detecta SPACE.
1678  8CA8              ;	in a,($fe)
1679  8CA8              ;	and 1
1680  8CA8              ;	ret nz
1681  8CA8
1682  8CA8 CD 23 8D     	call Genera_disparo
1683  8CAB C9           	ret
1684  8CAC
1685  8CAC              ; ----------------------------------------------------------------------
1686  8CAC              ;
1687  8CAC              ;	8/9/23
1688  8CAC
1689  8CAC 2A 8B 88     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1690  8CAF 2B            	dec hl
1691  8CB0 7E           	ld a,(hl)
1692  8CB1 A7           	and a
1693  8CB2 C8           	ret z										; Salimos si es álbum está vacío.
1694  8CB3
1695  8CB3 11 48 88     	ld de,Variables_de_borrado+5
1696  8CB6 01 06 00     	ld bc,6
1697  8CB9 ED B8        	lddr
1698  8CBB C9           	ret
1699  8CBC
1700  8CBC              ; ----------------------------------------------------------------------
1701  8CBC              ;
1702  8CBC              ;	9/9/23
1703  8CBC
1704  8CBC              Repone_datos_de_borrado_Amadeus
1705  8CBC
1706  8CBC 21 43 88     	ld hl,Variables_de_borrado
1707  8CBF 11 AC 70     	ld de,Album_de_fotos_Amadeus
1708  8CC2 01 06 00     	ld bc,6
1709  8CC5 ED B0        	ldir
1710  8CC7
1711  8CC7 EB           	ex de,hl
1712  8CC8 22 8B 88     	ld (End_Snapshot_Amadeus),hl
1713  8CCB
1714  8CCB C9           	ret
1715  8CCC
1716  8CCC              ; ----------------------------------------------------------------------
1717  8CCC              ;
1718  8CCC              ;	27/10/23
1719  8CCC              ;
1720  8CCC
1721  8CCC              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1722  8CCC              ;	_ Album_de_fotos correspondiente.
1723  8CCC
1724  8CCC              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1725  8CCC              ;	_ durante el proceso de escritura.
1726  8CCC
1727  8CCC              Repone_datos_de_borrado
1728  8CCC
1729  8CCC F3           	di
1730  8CCD ED 5B 85 88  	ld de,(Stack_snapshot)
1731  8CD1 21 43 88     	ld hl,Variables_de_borrado
1732  8CD4 01 06 00     	ld bc,6
1733  8CD7 ED B0        	ldir
1734  8CD9 FB           	ei
1735  8CDA
1736  8CDA EB           	ex de,hl
1737  8CDB 22 85 88     	ld (Stack_snapshot),hl
1738  8CDE
1739  8CDE C9           	ret
1740  8CDF
1741  8CDF              ; --------------------------------------------------------------------------------------
1742  8CDF
1743  8CDF              Pinta_Amadeus
1744  8CDF
1745  8CDF CD 7E 8B        	call Calcula_malotes_Amadeus
1746  8CE2 CD 90 95     	call Extrae_foto_Amadeus
1747  8CE5 CD 3E 8B     	call Limpia_album_Amadeus
1748  8CE8
1749  8CE8 C9           	ret
1750  8CE9
1751  8CE9              Pinta_entidades
1752  8CE9
1753  8CE9              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1754  8CE9
1755  8CE9 3A 8D 88     	ld a,(Ctrl_3)
1756  8CEC CB 47        	bit 0,a
1757  8CEE C8           	ret z
1758  8CEF
1759  8CEF CD 66 8B     	call Calcula_numero_de_malotes
1760  8CF2 CD 0E 95     	call Extrae_foto_entidades
1761  8CF5 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1762  8CF8
1763  8CF8 C9           	ret
1764  8CF9
1765  8CF9              ; -----------------------------------------------------------------------------------
1766  8CF9              ;
1767  8CF9              ;	10/12/23
1768  8CF9              ;
1769  8CF9              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1770  8CF9
1771  8CF9              Actualiza_relojes
1772  8CF9
1773  8CF9 3A 8D 88     	ld a,(Ctrl_3)
1774  8CFC CB 47        	bit 0,a
1775  8CFE C8           	ret z 						;	Salimos si no hemos pintado unidades.
1776  8CFF
1777  8CFF 21 A0 88     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1778  8D02 34           	inc (hl)
1779  8D03
1780  8D03 34           	inc (hl)
1781  8D04 35           	dec (hl)
1782  8D05 C0           	ret nz
1783  8D06
1784  8D06 21 A1 88     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1785  8D09 34           	inc (hl)
1786  8D0A C9           	ret
1787  8D0B
1788  8D0B              ; ---------------------------------------------------------------
1789  8D0B              ;
1790  8D0B              ;	21/12/23
1791  8D0B
1792  8D0B              Guarda_parametros_DRAW
1793  8D0B
1794  8D0B 21 2C 88     	ld hl,Bandeja_DRAW
1795  8D0E 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1796  8D11 01 2A 00     	ld bc,42
1797  8D14 ED B0        	ldir
1798  8D16 C9           	ret
1799  8D17
1800  8D17              Recupera_parametros_DRAW
1801  8D17
1802  8D17 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1803  8D1A 11 2C 88     	ld de,Bandeja_DRAW
1804  8D1D 01 2A 00     	ld bc,42
1805  8D20 ED B0        	ldir
1806  8D22 C9           	ret
1807  8D23
1808  8D23              ; ---------------------------------------------------------------
1809  8D23
1810  8D23              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8D23              ; ******************************************************************************************************************************************************************************************
   2+ 8D23              ;
   3+ 8D23              ;   21/07/23
   4+ 8D23              ;
   5+ 8D23              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8D23              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8D23              ;
   8+ 8D23              ;
   9+ 8D23              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8D23              ;
  11+ 8D23              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8D23              ;               _ hacen las entidades hacia abajo.
  13+ 8D23              ;
  14+ 8D23              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8D23              ;
  16+ 8D23              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8D23              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8D23              ;
  19+ 8D23              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8D23              ;           _ la bala.
  21+ 8D23              ;
  22+ 8D23              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8D23              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8D23              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8D23              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8D23              ;           _ en el momento de generarse la bala)).
  27+ 8D23
  28+ 8D23              Genera_disparo
  29+ 8D23
  30+ 8D23              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8D23              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8D23              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8D23              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8D23              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8D23              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8D23              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8D23
  38+ 8D23              ; Exclusiones:
  39+ 8D23
  40+ 8D23 3A 59 88         ld a,(Vel_down)
  41+ 8D26 47               ld b,a
  42+ 8D27 3A 9F 88         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8D2A B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8D2B D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8D2C 3A 50 88         ld a,(Columnas)
  46+ 8D2F 47               ld b,a
  47+ 8D30 3A 2E 88         ld a,(Columns)
  48+ 8D33 B8               cp b
  49+ 8D34 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8D35
  51+ 8D35              ; ----- ----- -----
  52+ 8D35
  53+ 8D35 3A 4F 88         ld a,(Ctrl_0)
  54+ 8D38 CB 77            bit 6,a
  55+ 8D3A 20 06            jr nz,14F
  56+ 8D3C
  57+ 8D3C 3A 34 88         ld a,(Coordenada_y)
  58+ 8D3F FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8D41 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8D42
  61+ 8D42 21 00 80     14 ld hl,Indice_disparo
  62+ 8D45 3A 35 88         ld a,(CTRL_DESPLZ)
  63+ 8D48 4F               ld c,a
  64+ 8D49 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8D4B              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8D4B              ;                                            ""        ""       "f9", B="1"
  67+ 8D4B              ;                                            ""        ""       "fb", B="2"
  68+ 8D4B              ;                                            ""        ""       "fb", B="3"
  69+ 8D4B A7               and a
  70+ 8D4C 28 10            jr z,1F
  71+ 8D4E E6 01            and 1
  72+ 8D50 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8D51
  74+ 8D51 79               ld a,c
  75+ 8D52 16 F9            ld d,$f9
  76+ 8D54 23           2 inc hl
  77+ 8D55 23               inc hl
  78+ 8D56 04               inc b
  79+ 8D57 BA               cp d
  80+ 8D58 28 04            jr z,1F
  81+ 8D5A 14               inc d
  82+ 8D5B 14               inc d
  83+ 8D5C 18 F6            jr 2B
  84+ 8D5E
  85+ 8D5E CD B2 8B     1 call Extrae_address
  86+ 8D61 E5               push hl
  87+ 8D62 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8D64 DD 21 D6 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8D68
  90+ 8D68              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8D68              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8D68
  93+ 8D68 3A 4F 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8D6B CB 77            bit 6,a
  95+ 8D6D 20 04            jr nz,19F
  96+ 8D6F
  97+ 8D6F AF               xor a
  98+ 8D70 32 A8 88         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8D73
 100+ 8D73 3A 41 88     19 ld a,(Cuad_objeto)
 101+ 8D76 FE 02            cp 2
 102+ 8D78 38 66            jr c,3F
 103+ 8D7A 28 64            jr z,3F
 104+ 8D7C
 105+ 8D7C              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8D7C
 107+ 8D7C E6 01            and 1
 108+ 8D7E 28 30            jr z,4F
 109+ 8D80
 110+ 8D80              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8D80              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8D80              ;
 113+ 8D80              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8D80              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8D80              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8D80
 117+ 8D80 2A 2F 88     	ld hl,(Posicion_actual)
 118+ 8D83
 119+ 8D83              ;   Amadeus o entidad ???.
 120+ 8D83
 121+ 8D83 3A 4F 88         ld a,(Ctrl_0)
 122+ 8D86 CB 77            bit 6,a
 123+ 8D88 28 0A            jr z,8F
 124+ 8D8A
 125+ 8D8A              ; 	Dispara Amadeus.
 126+ 8D8A
 127+ 8D8A 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8D8C CD FF 94         call PreviousScan
 129+ 8D8F CD FF 94         call PreviousScan
 130+ 8D92
 131+ 8D92              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8D92              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8D92              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8D92              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8D92
 136+ 8D92 18 11            jr 10F
 137+ 8D94
 138+ 8D94              ; 	Dispara Entidad.
 139+ 8D94
 140+ 8D94 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8D97              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8D97
 143+ 8D97              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8D97              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8D97
 146+ 8D97 C5               push bc
 147+ 8D98 06 10            ld b,16
 148+ 8D9A CD F0 94     9 call NextScan
 149+ 8D9D 10 FB            djnz 9B
 150+ 8D9F C1               pop bc
 151+ 8DA0 CD 0A 8E         call Ajusta_disparo_parte_izquierda
 152+ 8DA3 18 06            jr 17F
 153+ 8DA5
 154+ 8DA5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8DA5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8DA5              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8DA5              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8DA5
 159+ 8DA5 CD 0A 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8DA8 CD 7F 8E         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8DAB              ;                                                      ; _al generar el disparo.
 162+ 8DAB
 163+ 8DAB              ; 	LLegados a este punto tendremos:
 164+ 8DAB              ;
 165+ 8DAB              ;       Puntero_objeto_disparo en IY.
 166+ 8DAB              ;       Rutinas_de_impresion en IX.
 167+ 8DAB              ;       Puntero_de_impresion en HL.
 168+ 8DAB              ;       Impacto/Dirección en BC.
 169+ 8DAB
 170+ 8DAB CD 12 8E     17 call Almacena_disparo
 171+ 8DAE 18 52            jr 6F                                             ; RET.
 172+ 8DB0
 173+ 8DB0              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8DB0              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8DB0              ;
 176+ 8DB0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8DB0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8DB0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8DB0
 180+ 8DB0 2A 2F 88     4 ld hl,(Posicion_actual)
 181+ 8DB3
 182+ 8DB3              ;   Amadeus o entidad ???.
 183+ 8DB3
 184+ 8DB3 3A 4F 88         ld a,(Ctrl_0)
 185+ 8DB6 CB 77            bit 6,a
 186+ 8DB8 28 0A            jr z,11F
 187+ 8DBA
 188+ 8DBA              ; 	Dispara Amadeus.
 189+ 8DBA
 190+ 8DBA 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8DBC CD FF 94         call PreviousScan
 192+ 8DBF CD FF 94         call PreviousScan
 193+ 8DC2
 194+ 8DC2              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8DC2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8DC2              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8DC2              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8DC2
 199+ 8DC2 18 11            jr 13F
 200+ 8DC4
 201+ 8DC4              ; 	Dispara Entidad.
 202+ 8DC4
 203+ 8DC4 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8DC7              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8DC7
 206+ 8DC7              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8DC7              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8DC7
 209+ 8DC7 C5               push bc
 210+ 8DC8 06 10            ld b,16
 211+ 8DCA CD F0 94     12 call NextScan
 212+ 8DCD 10 FB            djnz 12B
 213+ 8DCF C1               pop bc
 214+ 8DD0
 215+ 8DD0 CD 03 8E         call Ajusta_disparo_parte_derecha
 216+ 8DD3 18 06            jr 18F
 217+ 8DD5
 218+ 8DD5              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8DD5              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8DD5              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8DD5              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8DD5
 223+ 8DD5 CD 03 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8DD8 CD 7F 8E         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8DDB              ;                                                       ; _al generar el disparo.
 226+ 8DDB
 227+ 8DDB              ; LLegados a este punto tendremos:
 228+ 8DDB              ;
 229+ 8DDB              ;       Puntero_objeto_disparo en IY.
 230+ 8DDB              ;       Rutinas_de_impresion en IX.
 231+ 8DDB              ;       Puntero_de_impresion en HL.
 232+ 8DDB              ;       Impacto/Dirección en BC.
 233+ 8DDB
 234+ 8DDB CD 12 8E     18 call Almacena_disparo
 235+ 8DDE 18 22            jr 6F                                               ; RET.
 236+ 8DE0
 237+ 8DE0              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8DE0
 239+ 8DE0 28 11        3 jr z,5F
 240+ 8DE2
 241+ 8DE2              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8DE2              ;
 243+ 8DE2              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8DE2              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8DE2              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8DE2              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8DE2
 248+ 8DE2              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8DE2              ;	   ""        ""       "f9", B="1"
 250+ 8DE2              ;	   ""        ""       "fb", B="2"
 251+ 8DE2              ; 	   ""        ""       "fb", B="3"
 252+ 8DE2
 253+ 8DE2 2A 2F 88     	ld hl,(Posicion_actual)
 254+ 8DE5 CD F0 94     	call NextScan
 255+ 8DE8
 256+ 8DE8              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8DE8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8DE8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8DE8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8DE8
 261+ 8DE8 CD 0A 8E         call Ajusta_disparo_parte_izquierda
 262+ 8DEB
 263+ 8DEB              ; 	No se produce impacto. B="$80"
 264+ 8DEB              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8DEB
 266+ 8DEB 01 80 80         ld bc,$8080
 267+ 8DEE
 268+ 8DEE              ; 	LLegados a este punto tendremos:
 269+ 8DEE              ;
 270+ 8DEE              ;       Puntero_objeto_disparo en IY.
 271+ 8DEE              ;       Rutinas_de_impresion en IX.
 272+ 8DEE              ;       Puntero_de_impresion en HL.
 273+ 8DEE              ;       Impacto/Dirección en BC.
 274+ 8DEE
 275+ 8DEE CD 12 8E         call Almacena_disparo
 276+ 8DF1 18 0F            jr 6F                                           ; RET.
 277+ 8DF3
 278+ 8DF3              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8DF3              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8DF3              ;
 281+ 8DF3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8DF3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8DF3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8DF3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8DF3
 286+ 8DF3 2A 2F 88     5 ld hl,(Posicion_actual)
 287+ 8DF6 CD F0 94     	call NextScan
 288+ 8DF9
 289+ 8DF9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8DF9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8DF9              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8DF9              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8DF9
 294+ 8DF9 CD 03 8E         call Ajusta_disparo_parte_derecha
 295+ 8DFC
 296+ 8DFC              ; 	No se produce impacto. B="$80"
 297+ 8DFC              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8DFC
 299+ 8DFC 01 80 80     15 ld bc,$8080
 300+ 8DFF
 301+ 8DFF              ; 	LLegados a este punto tendremos:
 302+ 8DFF              ;
 303+ 8DFF              ;       Puntero_objeto_disparo en IY.
 304+ 8DFF              ;       Rutinas_de_impresion en IX.
 305+ 8DFF              ;       Puntero_de_impresion en HL.
 306+ 8DFF              ;       Impacto/Dirección en BC.
 307+ 8DFF
 308+ 8DFF CD 12 8E         call Almacena_disparo
 309+ 8E02
 310+ 8E02 C9           6 ret
 311+ 8E03
 312+ 8E03              ; ----------------------------------------------------------------
 313+ 8E03              ;
 314+ 8E03              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E03              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E03              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E03
 318+ 8E03 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E04 FE 02            cp 2
 320+ 8E06 38 01            jr c,1F
 321+ 8E08 23               inc hl
 322+ 8E09 C9           1 ret
 323+ 8E0A
 324+ 8E0A 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8E0B FE 01        	cp 1
 326+ 8E0D 20 01        	jr nz,1F
 327+ 8E0F 2B           	dec hl
 328+ 8E10 2B           1 dec hl
 329+ 8E11 C9               ret
 330+ 8E12
 331+ 8E12              ; ----------------------------------------------------------------
 332+ 8E12              ;
 333+ 8E12              ;   25/02/23
 334+ 8E12              ;
 335+ 8E12              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8E12              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8E12              ;
 338+ 8E12              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8E12              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8E12
 341+ 8E12              Almacena_disparo
 342+ 8E12
 343+ 8E12 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8E13 F1               pop af
 345+ 8E14 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8E15
 347+ 8E15 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8E16 E6 01            and 1
 349+ 8E18 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8E1A              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8E1A              ; 	Dispara AMADEUS.
 352+ 8E1A
 353+ 8E1A              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8E1A              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8E1A              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8E1A              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8E1A
 358+ 8E1A C5               push bc
 359+ 8E1B 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8E1E 2A 92 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8E21 A7               and a
 362+ 8E22 ED 42            sbc hl,bc
 363+ 8E24 CC 37 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8E27 C1               pop bc
 365+ 8E28 28 54            jr z,4F
 366+ 8E2A
 367+ 8E2A 2A 92 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8E2D 23               inc hl
 369+ 8E2E 23               inc hl
 370+ 8E2F 22 92 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8E32              ;                                                   ; _ Disparo_(+1).
 372+ 8E32 18 18            jr 2F
 373+ 8E34
 374+ 8E34              ; Dispara una entidad.
 375+ 8E34
 376+ 8E34 C5           1 push bc
 377+ 8E35 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8E38 2A 90 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8E3B A7               and a
 380+ 8E3C ED 42            sbc hl,bc
 381+ 8E3E CC 30 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8E41 C1               pop bc
 383+ 8E42 28 3A            jr z,4F
 384+ 8E44
 385+ 8E44 2A 90 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8E47 23               inc hl
 387+ 8E48 23               inc hl
 388+ 8E49 22 90 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8E4C              ;                                                   ; _ Disparo_(+1).
 390+ 8E4C CD B2 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8E4F              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8E4F              ;
 393+ 8E4F              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8E4F              ;                                                     Rutinas_de_impresion en IX.
 395+ 8E4F              ;                                                     Puntero_de_impresion en HL.
 396+ 8E4F              ;                                                     Impacto/Dirección en BC.
 397+ 8E4F
 398+ 8E4F 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8E50 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8E51 23               inc hl                                          ; _ al siguiente.
 401+ 8E52 A7               and a
 402+ 8E53 20 C0            jr nz,3B
 403+ 8E55
 404+ 8E55 08               ex af,af
 405+ 8E56 ED 73 7F 88      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8E5A F9               ld sp,hl
 407+ 8E5B
 408+ 8E5B DD E5            push ix                                         ; Rutina de impresión.
 409+ 8E5D F5               push af                                         ; Puntero de impresión.
 410+ 8E5E FD E5            push iy                                         ; Puntero objeto.
 411+ 8E60 C5               push bc                                         ; Control.
 412+ 8E61
 413+ 8E61 ED 7B 7F 88      ld sp,(Stack)
 414+ 8E65
 415+ 8E65              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8E65
 417+ 8E65 21 6E 88     	ld hl,Ctrl_1
 418+ 8E68 CB C6        	set 0,(hl)
 419+ 8E6A
 420+ 8E6A DD E5        	push ix
 421+ 8E6C E1               pop hl
 422+ 8E6D F5               push af
 423+ 8E6E DD E1            pop ix
 424+ 8E70
 425+ 8E70 CD 16 71     	call Guarda_foto_registros
 426+ 8E73
 427+ 8E73 21 6E 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8E76 CB 86        	res 0,(hl)
 429+ 8E78
 430+ 8E78              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8E78              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8E78
 433+ 8E78 CD 37 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8E7B CD 30 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8E7E
 436+ 8E7E C9           4 ret
 437+ 8E7F
 438+ 8E7F              ; ----------------------------------------------------------------
 439+ 8E7F              ;
 440+ 8E7F              ;   4/3/23
 441+ 8E7F              ;
 442+ 8E7F              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8E7F              ;   _ al generarse el disparo.
 444+ 8E7F              ;
 445+ 8E7F              ;       "$80" ..... No se produce colisión.
 446+ 8E7F              ;       "$81" ..... Se produce colisión.
 447+ 8E7F              ;
 448+ 8E7F              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8E7F              ;         _ que forman el disparo.
 450+ 8E7F
 451+ 8E7F
 452+ 8E7F              Comprueba_Colision
 453+ 8E7F
 454+ 8E7F              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8E7F
 456+ 8E7F FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8E81 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8E82
 459+ 8E82 CD B8 8E         call Modifica_H_Velocidad_disparo
 460+ 8E85
 461+ 8E85 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8E86 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8E88 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8E8A
 465+ 8E8A 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8E8C CD A8 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8E8F
 468+ 8E8F 7B               ld a,e
 469+ 8E90 E6 01            and 1
 470+ 8E92 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8E94              ;                                                  ; _ para activar IMPACTO.
 472+ 8E94 E1               pop hl
 473+ 8E95 E5               push hl
 474+ 8E96 CD F0 94         call NextScan
 475+ 8E99
 476+ 8E99 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8E9A FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8E9C 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8E9E              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8E9E 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8EA0 CD A8 8E         call Bucle_2
 482+ 8EA3
 483+ 8EA3 43           1 ld b,e
 484+ 8EA4 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8EA5 FD E1            pop iy
 486+ 8EA7 C9               ret
 487+ 8EA8
 488+ 8EA8              ; ---------- ----------
 489+ 8EA8
 490+ 8EA8 06 02        Bucle_2 ld b,2
 491+ 8EAA FD 7E 00     2 ld a,(iy)
 492+ 8EAD A6               and (hl)
 493+ 8EAE 28 02            jr z,1F
 494+ 8EB0 1E 81            ld e,$81
 495+ 8EB2 23           1 inc hl
 496+ 8EB3 FD 23            inc iy
 497+ 8EB5 10 F3            djnz 2B
 498+ 8EB7 C9               ret
 499+ 8EB8
 500+ 8EB8              ; ---------- ----------
 501+ 8EB8              ;
 502+ 8EB8              ;   21/7/23
 503+ 8EB8
 504+ 8EB8              Modifica_H_Velocidad_disparo
 505+ 8EB8
 506+ 8EB8 3A 9F 88         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8EBB FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8EBD D0               ret nc                                         ; _ incrementamos H.
 509+ 8EBE 24               inc h
 510+ 8EBF
 511+ 8EBF C9               ret
 512+ 8EC0
 513+ 8EC0              ; -------------------------------------------------------------------------------------------------------------
 514+ 8EC0              ;
 515+ 8EC0              ;   04/12/23
 516+ 8EC0              ;
 517+ 8EC0              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8EC0              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8EC0              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8EC0              ;
 521+ 8EC0              ;   MODIFICA: HL,DE,B y A.
 522+ 8EC0
 523+ 8EC0              Genera_coordenadas_X
 524+ 8EC0
 525+ 8EC0              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8EC0              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8EC0
 528+ 8EC0              ;   Limpiamos almacenes.
 529+ 8EC0
 530+ 8EC0 CD F1 8E         call Limpia_Coordenadas_X
 531+ 8EC3
 532+ 8EC3              ;   Almacenamos coordenadas X.
 533+ 8EC3
 534+ 8EC3              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8EC3
 536+ 8EC3 2A 49 88         ld hl,(Puntero_de_impresion)
 537+ 8EC6 11 9C 88         ld de,Coordenadas_X_Entidad
 538+ 8EC9 06 02            ld b,2
 539+ 8ECB
 540+ 8ECB 3A 35 88         ld a,(CTRL_DESPLZ)
 541+ 8ECE A7               and a
 542+ 8ECF 28 01            jr z,1F
 543+ 8ED1 04               inc b
 544+ 8ED2
 545+ 8ED2 CD E8 8E     1 call Guarda_coordenadas_X
 546+ 8ED5
 547+ 8ED5              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8ED5
 549+ 8ED5 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8ED8 11 99 88         ld de,Coordenadas_X_Amadeus
 551+ 8EDB 06 02            ld b,2
 552+ 8EDD
 553+ 8EDD 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8EE0 A7               and a
 555+ 8EE1 28 01            jr z,2F
 556+ 8EE3 04               inc b
 557+ 8EE4
 558+ 8EE4 CD E8 8E     2 call Guarda_coordenadas_X
 559+ 8EE7
 560+ 8EE7              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8EE7
 562+ 8EE7 C9               ret
 563+ 8EE8
 564+ 8EE8              ; ----- ----- ----- ----- -----
 565+ 8EE8
 566+ 8EE8 7D           Guarda_coordenadas_X  ld a,l
 567+ 8EE9 E6 1F            and $1f
 568+ 8EEB 12           1 ld (de),a
 569+ 8EEC 3C               inc a
 570+ 8EED 13               inc de
 571+ 8EEE 10 FB            djnz 1B
 572+ 8EF0 C9               ret
 573+ 8EF1
 574+ 8EF1 AF           Limpia_Coordenadas_X xor a
 575+ 8EF2 06 06            ld b,6
 576+ 8EF4 21 99 88         ld hl,Coordenadas_X_Amadeus
 577+ 8EF7 77           1 ld (hl),a
 578+ 8EF8 23               inc hl
 579+ 8EF9 10 FC            djnz 1B
 580+ 8EFB C9               ret
 581+ 8EFC
 582+ 8EFC              ; ----- ----- ----- ----- -----
 583+ 8EFC
 584+ 8EFC              Compara_coordenadas_X
 585+ 8EFC
 586+ 8EFC 06 03            ld b,3
 587+ 8EFE 11 9E 88         ld de,Coordenadas_X_Entidad+2
 588+ 8F01
 589+ 8F01 1A               ld a,(de)
 590+ 8F02 A7               and a
 591+ 8F03 20 01            jr nz,2F
 592+ 8F05 05               dec b
 593+ 8F06
 594+ 8F06 1B           2 dec de
 595+ 8F07 1B               dec de
 596+ 8F08 21 99 88         ld hl,Coordenadas_X_Amadeus
 597+ 8F0B
 598+ 8F0B D5           1 push de
 599+ 8F0C E5               push hl
 600+ 8F0D C5               push bc
 601+ 8F0E
 602+ 8F0E CD 18 8F         call Comparando
 603+ 8F11
 604+ 8F11 C1               pop bc
 605+ 8F12 E1               pop hl
 606+ 8F13 D1               pop de
 607+ 8F14
 608+ 8F14 13               inc de
 609+ 8F15 10 F4            djnz 1B
 610+ 8F17
 611+ 8F17 C9               ret
 612+ 8F18
 613+ 8F18              ; ----- ----- ----- ----- -----
 614+ 8F18              ;
 615+ 8F18              ;   4/12/23
 616+ 8F18              ;
 617+ 8F18              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8F18
 619+ 8F18 06 03        Comparando ld b,3
 620+ 8F1A 1A               ld a,(de)
 621+ 8F1B 4E           2 ld c,(hl)
 622+ 8F1C B9               cp c
 623+ 8F1D 28 04            jr z,1F
 624+ 8F1F 23               inc hl
 625+ 8F20 10 F9            djnz 2B
 626+ 8F22 C9               ret
 627+ 8F23
 628+ 8F23 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8F25 32 42 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8F28 21 94 88         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8F2B CB D6            set 2,(hl)
 632+ 8F2D C9               ret
 633+ 8F2E
 634+ 8F2E              ; -----------------------------------------------------------------------
 635+ 8F2E              ;
 636+ 8F2E              ;   7/12/23
 637+ 8F2E              ;
 638+ 8F2E
 639+ 8F2E              Detecta_colision_nave_entidad
 640+ 8F2E
 641+ 8F2E              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8F2E
 643+ 8F2E FD 2A 31 88      ld iy,(Puntero_objeto)
 644+ 8F32 2A 49 88         ld hl,(Puntero_de_impresion)
 645+ 8F35
 646+ 8F35 E5               push hl
 647+ 8F36
 648+ 8F36              ; ----- ----- -----
 649+ 8F36 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8F38 06 0A            ld b,10
 651+ 8F3A CD 6A 8F     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8F3D 7B               ld a,e
 653+ 8F3E FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8F40 38 0E            jr c,3F
 655+ 8F42
 656+ 8F42              ; LLegados a este punto:
 657+ 8F42              ;
 658+ 8F42              ;   HAY COLISIÓN !!!!!.
 659+ 8F42              ;
 660+ 8F42              ;   .db (Impacto) de Amadeus a "1".
 661+ 8F42              ;   SET el bit3 de (Impacto2).
 662+ 8F42              ;
 663+ 8F42              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8F42
 665+ 8F42 21 42 88         ld hl,Impacto
 666+ 8F45 36 01            ld (hl),1
 667+ 8F47 21 94 88         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8F4A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8F4C CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8F4E
 671+ 8F4E 18 18            jr 1F
 672+ 8F50
 673+ 8F50              ; -----
 674+ 8F50
 675+ 8F50 E1           3 pop hl
 676+ 8F51 CD F0 94         call NextScan
 677+ 8F54 E5               push hl
 678+ 8F55 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8F56 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8F58 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8F5A 30 0C            jr nc,1F
 682+ 8F5C              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8F5C 10 DC            djnz 2B
 684+ 8F5E
 685+ 8F5E              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8F5E
 687+ 8F5E              ; LLegados a este punto:
 688+ 8F5E              ;
 689+ 8F5E              ;   NO HAY COLISIÓN !!!!!.
 690+ 8F5E              ;
 691+ 8F5E              ;   .db (Impacto) de Amadeus a "0".
 692+ 8F5E              ;   RES el bit2 de (Impacto2).
 693+ 8F5E              ;
 694+ 8F5E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8F5E              ;   Lo colocamos a "0".
 696+ 8F5E
 697+ 8F5E 21 94 88         ld hl,Impacto2
 698+ 8F61 CB 96            res 2,(hl)
 699+ 8F63 2A 95 88         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8F66 36 00            ld (hl),0
 701+ 8F68
 702+ 8F68 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8F69 C9               ret
 704+ 8F6A
 705+ 8F6A               ; ---------- ----------
 706+ 8F6A
 707+ 8F6A C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8F6B 3A 2E 88         ld a,(Columns)
 709+ 8F6E 47               ld b,a
 710+ 8F6F FD 7E 00     2 ld a,(iy)
 711+ 8F72 BE               cp (hl)
 712+ 8F73 28 01            jr z,1F
 713+ 8F75
 714+ 8F75 1C               inc e
 715+ 8F76
 716+ 8F76 23           1 inc hl
 717+ 8F77 FD 23            inc iy
 718+ 8F79 10 F4            djnz 2B
 719+ 8F7B C1               pop bc
 720+ 8F7C C9               ret
 721+ 8F7D
 722+ 8F7D              ; -------------------------------------------------------------------------------------------------------------
 723+ 8F7D              ;
 724+ 8F7D              ;   13/03/23
 725+ 8F7D              ;
 726+ 8F7D              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8F7D              ;
 728+ 8F7D              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8F7D
 730+ 8F7D 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8F80 7E               ld a,(hl)
 732+ 8F81 A7               and a
 733+ 8F82 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8F83
 735+ 8F83 44               ld b,h
 736+ 8F84 4D               ld c,l
 737+ 8F85 2A 87 88         ld hl,(Stack_snapshot_disparos)
 738+ 8F88 E5               push hl
 739+ 8F89 A7               and a
 740+ 8F8A ED 42            sbc hl,bc
 741+ 8F8C E5               push hl
 742+ 8F8D C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8F8E
 744+ 8F8E E1               pop hl
 745+ 8F8F 54               ld d,h
 746+ 8F90 5D               ld e,l
 747+ 8F91 1B               dec de
 748+ 8F92 ED B8            lddr                                                ; Limpiamos.
 749+ 8F94
 750+ 8F94 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8F97 22 87 88         ld (Stack_snapshot_disparos),hl
 752+ 8F9A
 753+ 8F9A C9               ret
 754+ 8F9B
 755+ 8F9B              ; -------------------------------------------------------------------------------------------------------------
 756+ 8F9B              ;
 757+ 8F9B              ;   18/07/23
 758+ 8F9B              ;
 759+ 8F9B
 760+ 8F9B              Motor_de_disparos
 761+ 8F9B
 762+ 8F9B              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8F9B
 764+ 8F9B 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8F9E 2A 92 88         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8FA1
 767+ 8FA1 CD B2 8B     2 call Extrae_address
 768+ 8FA4 7E               ld a,(hl)
 769+ 8FA5 A7               and a
 770+ 8FA6 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8FA8
 772+ 8FA8              ; ----- ----- ----- ----- ----- -----
 773+ 8FA8
 774+ 8FA8 C5               push bc
 775+ 8FA9 CD 6D 90         call foto_disparo_a_borrar
 776+ 8FAC
 777+ 8FAC              ; Existe colisión con este disparo???
 778+ 8FAC
 779+ 8FAC 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8FAD 7E               ld a,(hl)
 781+ 8FAE 2B               dec hl
 782+ 8FAF E6 01            and 1
 783+ 8FB1 28 1D            jr z,9F
 784+ 8FB3
 785+ 8FB3              ;   En este punto:
 786+ 8FB3              ;
 787+ 8FB3              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8FB3              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8FB3              ;   _con la entidad).
 790+ 8FB3              ;
 791+ 8FB3              ;   Disparo_2A defw 0                                ; Control.
 792+ 8FB3              ;    defw 0                                          ; Puntero objeto.
 793+ 8FB3              ;    defw 0                                          ; Puntero de impresión.
 794+ 8FB3              ;    defw 0                                          ; Rutina de impresión.
 795+ 8FB3
 796+ 8FB3 E5               push hl
 797+ 8FB4
 798+ 8FB4 06 04            ld b,4
 799+ 8FB6 23           19 inc hl
 800+ 8FB7 10 FD            djnz 19B
 801+ 8FB9
 802+ 8FB9 CD B2 8B         call Extrae_address
 803+ 8FBC CD C7 9B         call Genera_coordenadas_disparo
 804+ 8FBF
 805+ 8FBF              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8FBF
 807+ 8FBF 21 97 88         ld hl,Coordenadas_disparo_certero
 808+ 8FC2 72               ld (hl),d
 809+ 8FC3 23               inc hl
 810+ 8FC4 73               ld (hl),e
 811+ 8FC5
 812+ 8FC5              ; Elimino el disparo de la base de datos.
 813+ 8FC5
 814+ 8FC5 E1               pop hl
 815+ 8FC6 CD EC 90         call Elimina_disparo_de_base_de_datos
 816+ 8FC9 21 94 88         ld hl,Impacto2
 817+ 8FCC CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8FCE
 819+ 8FCE 18 06            jr 11F
 820+ 8FD0
 821+ 8FD0 CD 96 90     9 call Mueve_disparo
 822+ 8FD3 CD 6D 90         call foto_disparo_a_borrar
 823+ 8FD6
 824+ 8FD6 C1           11 pop bc
 825+ 8FD7 18 04            jr 7F
 826+ 8FD9
 827+ 8FD9              ; ----- ----- ----- ----- ----- -----
 828+ 8FD9
 829+ 8FD9 ED 42        1 sbc hl,bc
 830+ 8FDB 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8FDD
 832+ 8FDD 2A 92 88     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8FE0 23               inc hl
 834+ 8FE1 23               inc hl
 835+ 8FE2 22 92 88         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8FE5 18 BA            jr 2B
 837+ 8FE7
 838+ 8FE7 CD 37 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8FEA              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8FEA
 841+ 8FEA              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8FEA
 843+ 8FEA 01 6E 85         ld bc,Disparo_11
 844+ 8FED 2A 90 88         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8FF0
 846+ 8FF0 CD B2 8B     5 call Extrae_address
 847+ 8FF3 7E               ld a,(hl)
 848+ 8FF4 A7               and a
 849+ 8FF5 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8FF7
 851+ 8FF7              ; ----- ----- ----- ----- ----- -----
 852+ 8FF7
 853+ 8FF7 C5               push bc
 854+ 8FF8 CD 6D 90         call foto_disparo_a_borrar
 855+ 8FFB
 856+ 8FFB              ; Existe colisión con este disparo???
 857+ 8FFB
 858+ 8FFB 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8FFC 7E               ld a,(hl)
 860+ 8FFD 2B               dec hl
 861+ 8FFE E6 01            and 1
 862+ 9000 28 4D            jr z,10F
 863+ 9002
 864+ 9002              ;! La colisión se produce con Amadeus???
 865+ 9002              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9002
 867+ 9002 E5               push hl
 868+ 9003
 869+ 9003 06 04            ld b,4
 870+ 9005 23           16 inc hl
 871+ 9006 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9008
 873+ 9008 CD B2 8B         call Extrae_address
 874+ 900B CD C7 9B         call Genera_coordenadas_disparo
 875+ 900E
 876+ 900E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 900F FE 16            cp $16
 878+ 9011 38 2A            jr c,15F
 879+ 9013
 880+ 9013
 881+ 9013              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9013
 883+ 9013 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9014
 885+ 9014              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9014
 887+ 9014 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 9017
 889+ 9017              ; Coordenada X de Amadeus en D.
 890+ 9017
 891+ 9017 7D               ld a,l
 892+ 9018 E6 1F            and $1F
 893+ 901A 57               ld d,a
 894+ 901B
 895+ 901B 21 8A 85         ld hl,Amadeus_db+8
 896+ 901E 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 901F
 898+ 901F 21 99 88         ld hl,Coordenadas_X_Amadeus
 899+ 9022 CD E8 8E         call Guarda_coordenadas_X
 900+ 9025
 901+ 9025 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9026
 903+ 9026              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9026
 905+ 9026 06 02            ld b,2
 906+ 9028 C5           20 push bc
 907+ 9029
 908+ 9029 06 03            ld b,3
 909+ 902B 21 99 88         ld hl,Coordenadas_X_Amadeus
 910+ 902E 7E           18 ld a,(hl)
 911+ 902F BA               cp d
 912+ 9030 20 04            jr nz,17F
 913+ 9032
 914+ 9032              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9032
 916+ 9032 C1               pop bc
 917+ 9033 E1               pop hl
 918+ 9034 18 0D            jr 14F
 919+ 9036
 920+ 9036 23           17 inc hl
 921+ 9037 10 F5            djnz 18B
 922+ 9039
 923+ 9039 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 903A
 925+ 903A C1               pop bc
 926+ 903B 10 EB            djnz 20B
 927+ 903D
 928+ 903D
 929+ 903D              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 903D              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 903D
 932+ 903D E1           15 pop hl
 933+ 903E 23               inc hl
 934+ 903F 35               dec (hl)
 935+ 9040 2B               dec hl
 936+ 9041 18 0C            jr 10F
 937+ 9043
 938+ 9043              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9043              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9043
 941+ 9043 E5           14 push hl
 942+ 9044 CD EC 90         call Elimina_disparo_de_base_de_datos
 943+ 9047 21 94 88         ld hl,Impacto2
 944+ 904A CB CE            set 1,(hl)
 945+ 904C E1               pop hl
 946+ 904D 18 06            jr 12F
 947+ 904F
 948+ 904F              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 904F
 950+ 904F CD 96 90     10 call Mueve_disparo
 951+ 9052 CD 6D 90         call foto_disparo_a_borrar
 952+ 9055 C1           12 pop bc
 953+ 9056
 954+ 9056 18 04            jr 8F
 955+ 9058
 956+ 9058              ; ----- ----- ----- ----- ----- -----
 957+ 9058
 958+ 9058 ED 42        4 sbc hl,bc
 959+ 905A 28 0A            jr z,6F
 960+ 905C
 961+ 905C 2A 90 88     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 905F 23               inc hl
 963+ 9060 23               inc hl
 964+ 9061 22 90 88         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9064 18 8A            jr 5B
 966+ 9066
 967+ 9066 CD 30 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9069 CD F1 8E         call Limpia_Coordenadas_X
 969+ 906C C9               ret
 970+ 906D
 971+ 906D              ; ------------------------------------------------------------------
 972+ 906D
 973+ 906D              foto_disparo_a_borrar
 974+ 906D
 975+ 906D 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 906E A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 906F C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9070
 979+ 9070 E5               push hl
 980+ 9071 23               inc hl
 981+ 9072 23               inc hl
 982+ 9073 ED 73 7F 88      ld (Stack),sp
 983+ 9077 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9078 FD E1            pop iy
 985+ 907A DD E1            pop ix
 986+ 907C E1               pop hl
 987+ 907D ED 7B 7F 88      ld sp,(Stack)
 988+ 9081 3A 6E 88         ld a,(Ctrl_1)
 989+ 9084 CB C7            set 0,a
 990+ 9086 32 6E 88         ld (Ctrl_1),a
 991+ 9089 CD 16 71         call Guarda_foto_registros
 992+ 908C 3A 6E 88         ld a,(Ctrl_1)
 993+ 908F CB 87            res 0,a
 994+ 9091 32 6E 88         ld (Ctrl_1),a
 995+ 9094 E1               pop hl
 996+ 9095 C9               ret
 997+ 9096
 998+ 9096              ;---------------------------------------------------
 999+ 9096              ;
1000+ 9096              ;   18/07/23
1001+ 9096              ;
1002+ 9096
1003+ 9096              Mueve_disparo
1004+ 9096
1005+ 9096              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9096              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9096              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9096
1009+ 9096 E5               push hl
1010+ 9097
1011+ 9097 7E               ld a,(hl)
1012+ 9098
1013+ 9098 06 04            ld b,4
1014+ 909A 23           1 inc hl
1015+ 909B 10 FD            djnz 1B
1016+ 909D
1017+ 909D              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 909D
1019+ 909D CD B2 8B         call Extrae_address
1020+ 90A0
1021+ 90A0 E6 01            and 1
1022+ 90A2 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 90A4
1024+ 90A4              ; Disparo hacia arriba, (Amadeus).
1025+ 90A4
1026+ 90A4              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 90A4              ; _ de la dificultad.
1028+ 90A4
1029+ 90A4 CD FF 94         call PreviousScan
1030+ 90A7 CD FF 94         call PreviousScan
1031+ 90AA CD FF 94         call PreviousScan
1032+ 90AD CD FF 94         call PreviousScan
1033+ 90B0
1034+ 90B0              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 90B0
1036+ 90B0 7C               ld a,h
1037+ 90B1 FE 40            cp $40
1038+ 90B3 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 90B5
1040+ 90B5              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 90B5
1042+ 90B5 EB               ex de,hl
1043+ 90B6 06 04            ld b,4
1044+ 90B8 2B           6 dec hl
1045+ 90B9 10 FD            djnz 6B
1046+ 90BB
1047+ 90BB CD EC 90         call Elimina_disparo_de_base_de_datos
1048+ 90BE E1               pop hl
1049+ 90BF 18 10            jr 7F
1050+ 90C1
1051+ 90C1              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 90C1              ; HL contiene el puntero de impresión del disparo.
1053+ 90C1              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 90C1
1055+ 90C1 D5           3 push de
1056+ 90C2 C5               push bc
1057+ 90C3
1058+ 90C3 CD 7F 8E         call Comprueba_Colision
1059+ 90C6
1060+ 90C6              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 90C6
1062+ 90C6 78               ld a,b
1063+ 90C7
1064+ 90C7 C1               pop bc
1065+ 90C8 D1               pop de
1066+ 90C9
1067+ 90C9 EB               ex de,hl
1068+ 90CA
1069+ 90CA 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 90CB 23               inc hl                                      ; _ movimiento.
1071+ 90CC 72               ld (hl),d
1072+ 90CD
1073+ 90CD E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 90CE
1075+ 90CE 23               inc hl                                      ; _ en curso.
1076+ 90CF 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 90D0 2B               dec hl
1078+ 90D1
1079+ 90D1 C9           7 ret
1080+ 90D2
1081+ 90D2              ; Disparo hacia abajo, (Entidad).
1082+ 90D2
1083+ 90D2 3A 9F 88     2 ld a,(Velocidad_disparo_entidades)
1084+ 90D5 47               ld b,a
1085+ 90D6
1086+ 90D6 CD F0 94     4 call NextScan
1087+ 90D9 10 FB            djnz 4B
1088+ 90DB
1089+ 90DB              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 90DB
1091+ 90DB 7C               ld a,h
1092+ 90DC FE 58            cp $58
1093+ 90DE 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 90E0
1095+ 90E0 EB               ex de,hl
1096+ 90E1 06 04            ld b,4
1097+ 90E3 2B           5 dec hl
1098+ 90E4 10 FD            djnz 5B
1099+ 90E6
1100+ 90E6 CD EC 90         call Elimina_disparo_de_base_de_datos
1101+ 90E9 E1               pop hl
1102+ 90EA 18 E5            jr 7B
1103+ 90EC
1104+ 90EC              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 90EC
1106+ 90EC 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 90EF AF               xor a
1108+ 90F0 77               ld (hl),a
1109+ 90F1 54               ld d,h
1110+ 90F2 5D               ld e,l
1111+ 90F3 13               inc de
1112+ 90F4 ED B0            ldir
1113+ 90F6 C9               ret
1114+ 90F7
1115+ 90F7              ; -----------------------------------------------------------------
1116+ 90F7              ;
1117+ 90F7              ;   7/12/23
1118+ 90F7              ;
1119+ 90F7
1120+ 90F7 3A 94 88     Selector_de_impactos ld a,(Impacto2)
1121+ 90FA A7               and a
1122+ 90FB C8               ret z
1123+ 90FC
1124+ 90FC              ; Analizamos si hay impacto por disparos.
1125+ 90FC
1126+ 90FC              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 90FC
1128+ 90FC CB 4F            bit 1,a
1129+ 90FE 28 07            jr z,1F
1130+ 9100
1131+ 9100 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9103 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9105 18 08            jr 2F
1134+ 9107
1135+ 9107 CB 47        1 bit 0,a
1136+ 9109 C8               ret z
1137+ 910A
1138+ 910A              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 910A
1140+ 910A 21 6E 88         ld hl,Ctrl_1
1141+ 910D CB D6            set 2,(hl)
1142+ 910F
1143+ 910F C9           2 ret
1144+ 9110
1145+ 9110              ; -----------------------------------------------------------------
1146+ 9110              ;
1147+ 9110              ;   25/04/23
1148+ 9110              ;
1149+ 9110
1150+ 9110              Determina_resultado_comparativa
1151+ 9110
1152+ 9110              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9110              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9110              ;
1155+ 9110              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9110              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9110              ;
1158+ 9110              ;   SBC HL,DE
1159+ 9110
1160+ 9110              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9110              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9110
1163+ 9110              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9110              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9110
1166+ 9110
1167+ 9110 3A 41 88         ld a,(Cuad_objeto)
1168+ 9113 FE 02            cp 2
1169+ 9115 28 26            jr z,2F
1170+ 9117 38 24            jr c,2F
1171+ 9119
1172+ 9119              ; Cuadrantes 3º y 4º
1173+ 9119
1174+ 9119 E6 01            and 1
1175+ 911B 28 10            jr z,4F
1176+ 911D
1177+ 911D              ; Cuadrante 3º
1178+ 911D
1179+ 911D 7C               ld a,h
1180+ 911E 06 00            ld b,0
1181+ 9120
1182+ 9120 CD AB 91         call Compara_cositas_H3
1183+ 9123
1184+ 9123 04               inc b
1185+ 9124 05               dec b
1186+ 9125 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9126
1188+ 9126 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9127 06 00            ld b,0
1190+ 9129
1191+ 9129 CD BD 91         call Compara_cositas_L3
1192+ 912C C9               ret
1193+ 912D
1194+ 912D              ; Cuadrante 4º
1195+ 912D
1196+ 912D 7C           4 ld a,h
1197+ 912E 06 00            ld b,0
1198+ 9130
1199+ 9130 CD CF 91         call Compara_cositas_H4
1200+ 9133
1201+ 9133 04               inc b
1202+ 9134 05               dec b
1203+ 9135 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9136
1205+ 9136 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9137 06 00            ld b,0
1207+ 9139
1208+ 9139 CD E5 91         call Compara_cositas_L4
1209+ 913C C9               ret
1210+ 913D
1211+ 913D              ; Cuadrantes 1º y 2º.
1212+ 913D
1213+ 913D 28 10        2 jr z,3F
1214+ 913F
1215+ 913F              ; 1er Cuadrante
1216+ 913F
1217+ 913F 7C               ld a,h
1218+ 9140 06 00            ld b,0
1219+ 9142
1220+ 9142 CD 83 91         call Compara_cositas_H1
1221+ 9145
1222+ 9145 04               inc b
1223+ 9146 05               dec b
1224+ 9147 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9148
1226+ 9148 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9149 06 00            ld b,0
1228+ 914B
1229+ 914B CD 99 91         call Compara_cositas_L1
1230+ 914E C9               ret
1231+ 914F
1232+ 914F
1233+ 914F              ; 2º Cuadrante
1234+ 914F
1235+ 914F 7C           3 ld a,h
1236+ 9150 06 00            ld b,0
1237+ 9152
1238+ 9152 CD 5F 91         call Compara_cositas_H2
1239+ 9155
1240+ 9155 04               inc b
1241+ 9156 05               dec b
1242+ 9157 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9158
1244+ 9158 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9159 06 00            ld b,0
1246+ 915B
1247+ 915B CD 71 91         call Compara_cositas_L2
1248+ 915E C9               ret
1249+ 915F
1250+ 915F A7           Compara_cositas_H2 and a
1251+ 9160 28 0D            jr z,1F
1252+ 9162              ;    cp $fd
1253+ 9162              ;    jr z,1F
1254+ 9162              ;    cp $fe
1255+ 9162              ;    jr z,1F
1256+ 9162 FE FF            cp $ff
1257+ 9164 28 09            jr z,1F
1258+ 9166 FE 01            cp $01
1259+ 9168 28 05            jr z,1F
1260+ 916A FE 02            cp $02
1261+ 916C 28 01            jr z,1F
1262+ 916E C0               ret nz
1263+ 916F 04           1 inc b
1264+ 9170 C9               ret
1265+ 9171
1266+ 9171 A7           Compara_cositas_L2 and a
1267+ 9172 28 0D            jr z,1F
1268+ 9174              ;    cp $fd
1269+ 9174              ;    jr z,1F
1270+ 9174 FE FE            cp $fe
1271+ 9176 28 09            jr z,1F
1272+ 9178 FE FF            cp $ff
1273+ 917A 28 05            jr z,1F
1274+ 917C FE 01            cp $01
1275+ 917E 28 01            jr z,1F
1276+ 9180              ;    cp $02
1277+ 9180              ;    jr z,1F
1278+ 9180 C0               ret nz
1279+ 9181 04           1 inc b
1280+ 9182 C9               ret
1281+ 9183
1282+ 9183 A7           Compara_cositas_H1 and a
1283+ 9184 28 11            jr z,1F
1284+ 9186              ;    cp $fd
1285+ 9186              ;    jr z,1F
1286+ 9186              ;    cp $fe
1287+ 9186              ;    jr z,1F
1288+ 9186 FE FF            cp $ff
1289+ 9188 28 0D            jr z,1F
1290+ 918A FE 01            cp $01
1291+ 918C 28 09            jr z,1F
1292+ 918E FE 02            cp $02
1293+ 9190 28 05            jr z,1F
1294+ 9192 FE 03            cp $03
1295+ 9194 28 01            jr z,1F
1296+ 9196 C0               ret nz
1297+ 9197 04           1 inc b
1298+ 9198 C9               ret
1299+ 9199
1300+ 9199 A7           Compara_cositas_L1 and a
1301+ 919A 28 0D            jr z,1F
1302+ 919C              ;    cp $fd
1303+ 919C              ;    jr z,1F
1304+ 919C              ;    cp $fe
1305+ 919C              ;    jr z,1F
1306+ 919C              ;    cp $ff
1307+ 919C              ;    jr z,1F
1308+ 919C FE 01            cp $01
1309+ 919E 28 09            jr z,1F
1310+ 91A0 FE 02            cp $02
1311+ 91A2 28 05            jr z,1F
1312+ 91A4 FE 03            cp $03
1313+ 91A6 28 01            jr z,1F
1314+ 91A8 C0               ret nz
1315+ 91A9 04           1 inc b
1316+ 91AA C9               ret
1317+ 91AB
1318+ 91AB A7           Compara_cositas_H3 and a
1319+ 91AC 28 0D            jr z,1F
1320+ 91AE              ;    cp $fd
1321+ 91AE              ;    jr z,1F
1322+ 91AE FE FE            cp $fe
1323+ 91B0 28 09            jr z,1F
1324+ 91B2 FE FF            cp $ff
1325+ 91B4 28 05            jr z,1F
1326+ 91B6 FE 01            cp $01
1327+ 91B8 28 01            jr z,1F
1328+ 91BA              ;    cp $02
1329+ 91BA              ;    jr z,1F
1330+ 91BA              ;    cp $03
1331+ 91BA              ;    jr z,1F
1332+ 91BA C0               ret nz
1333+ 91BB 04           1 inc b
1334+ 91BC C9               ret
1335+ 91BD
1336+ 91BD A7           Compara_cositas_L3 and a
1337+ 91BE 28 0D            jr z,1F
1338+ 91C0              ;    cp $fd
1339+ 91C0              ;    jr z,1F
1340+ 91C0              ;    cp $fe
1341+ 91C0              ;    jr z,1F
1342+ 91C0              ;    cp $ff
1343+ 91C0              ;    jr z,1F
1344+ 91C0 FE 01            cp $01
1345+ 91C2 28 09            jr z,1F
1346+ 91C4 FE 02            cp $02
1347+ 91C6 28 05            jr z,1F
1348+ 91C8 FE 03            cp $03
1349+ 91CA 28 01            jr z,1F
1350+ 91CC C0               ret nz
1351+ 91CD 04           1 inc b
1352+ 91CE C9               ret
1353+ 91CF
1354+ 91CF A7           Compara_cositas_H4 and a
1355+ 91D0 28 11            jr z,1F
1356+ 91D2 FE FD            cp $fd
1357+ 91D4 28 0D            jr z,1F
1358+ 91D6 FE FE            cp $fe
1359+ 91D8 28 09            jr z,1F
1360+ 91DA FE FF            cp $ff
1361+ 91DC 28 05            jr z,1F
1362+ 91DE FE 01            cp $01
1363+ 91E0 28 01            jr z,1F
1364+ 91E2              ;    cp $02
1365+ 91E2              ;    jr z,1F
1366+ 91E2              ;    cp $03
1367+ 91E2              ;    jr z,1F
1368+ 91E2 C0               ret nz
1369+ 91E3 04           1 inc b
1370+ 91E4 C9               ret
1371+ 91E5
1372+ 91E5 A7           Compara_cositas_L4 and a
1373+ 91E6 28 0D            jr z,1F
1374+ 91E8              ;    cp $fd
1375+ 91E8              ;    jr z,1F
1376+ 91E8 FE FE            cp $fe
1377+ 91EA 28 09            jr z,1F
1378+ 91EC FE FF            cp $ff
1379+ 91EE 28 05            jr z,1F
1380+ 91F0 FE 01            cp $01
1381+ 91F2 28 01            jr z,1F
1382+ 91F4              ;    cp $02
1383+ 91F4              ;    jr z,1F
1384+ 91F4              ;    cp $03
1385+ 91F4              ;    jr z,1F
1386+ 91F4 C0               ret nz
1387+ 91F5 04           1 inc b
1388+ 91F6 C9               ret
# file closed: Disparo.asm
1811  91F7              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 91F7              ; ******************************************************************************************************************************************************************************************
   2+ 91F7              ;
   3+ 91F7              ; 26/06/23
   4+ 91F7              ;
   5+ 91F7              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 91F7
   7+ 91F7              Draw
   8+ 91F7
   9+ 91F7 CD E4 94     	call Prepara_draw
  10+ 91FA 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 91FB A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 91FC 28 05        	jr z,2F
  13+ 91FE
  14+ 91FE 3A 41 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9201 18 0C        	jr 1F
  16+ 9203
  17+ 9203 2A 3F 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9206 22 2F 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9209 CD 98 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 920C              ;													; _la esquina superior izquierda de la pantalla.
  21+ 920C
  22+ 920C CD 58 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 920F
  24+ 920F 3A 4F 88     1 ld a,(Ctrl_0)
  25+ 9212 CB 6F        	bit 5,a
  26+ 9214 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9216
  28+ 9216 CD 2E 92     	call Comprueba_limite_horizontal
  29+ 9219 CD BE 92     	call Comprueba_limite_vertical
  30+ 921C
  31+ 921C              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 921C              ; -----------------------
  33+ 921C              ; -----------------------
  34+ 921C              ; -----------------------
  35+ 921C
  36+ 921C CD 14 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 921F CD 4B 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9222 CD AA 94     	call Define_rutina_de_impresion
  39+ 9225
  40+ 9225 3A 4F 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 9228 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 922A 32 4F 88     	ld (Ctrl_0),a
  43+ 922D
  44+ 922D C9           	ret
  45+ 922E
  46+ 922E              ; *******************************************************************************************************************************************************************************************
  47+ 922E              ;	21/01/23
  48+ 922E              ;
  49+ 922E              ; 	Comprueba_limite_horizontal.
  50+ 922E              ;
  51+ 922E              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 922E              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 922E              ;
  54+ 922E              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 922E              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 922E              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 922E              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 922E
  59+ 922E
  60+ 922E
  61+ 922E 3A 4F 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 9231 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 9233 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 9235 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 9237 32 4F 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 923A 18 09            jr 6F
  67+ 923C CB 5F        1 bit 3,a
  68+ 923E 28 0A            jr z,2F
  69+ 9240 E6 F7            and $f7
  70+ 9242 32 4F 88         ld (Ctrl_0),a
  71+ 9245 CD 98 93     6 call Inicializacion
  72+ 9248 18 5B            jr 5F
  73+ 924A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 924B
  75+ 924B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 924B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 924B
  78+ 924B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 924C 2A 51 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 924F CD 03 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 9252 67           	ld h,a
  82+ 9253 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 9254 CD 03 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9257 67           	ld h,a
  85+ 9258 A7           	and a
  86+ 9259 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 925B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 925C 3A 41 88     	ld a,(Cuad_objeto)
  89+ 925F FE 02        	cp 2
  90+ 9261 38 1E        	jr c,3F
  91+ 9263 28 1C        	jr z,3F
  92+ 9265 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9266 28 23            jr z,7F
  94+ 9268 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 926A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 926C E1           	pop hl
  97+ 926D
  98+ 926D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 926D              ; _para indicar con E="2" en caso necesario.
 100+ 926D
 101+ 926D E5               push hl
 102+ 926E C5               push bc
 103+ 926F CD 03 98     	call calcula_tercio
 104+ 9272 FE 01        	cp 1
 105+ 9274 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9276 CD A6 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9279 28 26            jr z,9F
 108+ 927B 38 24            jr c,9F
 109+ 927D 1E 00        11 ld e,0
 110+ 927F 18 22            jr 8F
 111+ 9281 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 9282 28 07        	jr z, 7F
 113+ 9284 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9286 1E 00         	ld e,0
 115+ 9288 E1           	pop hl
 116+ 9289 18 04        	jr 4F
 117+ 928B 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 928D 18 15            jr 10F
 119+ 928F
 120+ 928F              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 928F              ; _para indicar con E="2" en caso necesario.
 122+ 928F
 123+ 928F E5           4 push hl
 124+ 9290 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 9291 CD 03 98     	call calcula_tercio
 126+ 9294 FE 01        	cp 1
 127+ 9296 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9298 CD A6 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 929B 28 04            jr z,9F
 130+ 929D 30 02            jr nc,9F
 131+ 929F 18 02        	jr 8F
 132+ 92A1 1E 02        9 ld e,2
 133+ 92A3 C1           8 pop bc
 134+ 92A4 E1           10 pop hl
 135+ 92A5 C9           5 ret
 136+ 92A6
 137+ 92A6              ; --------------------
 138+ 92A6              ;
 139+ 92A6              ; 25/08/22
 140+ 92A6
 141+ 92A6 CD 03 98     Comprueba_centro call calcula_tercio
 142+ 92A9 67               ld h,a
 143+ 92AA 08           	ex af,af
 144+ 92AB FE 02        	cp 2
 145+ 92AD 38 07        	jr c,1F
 146+ 92AF 28 05        	jr z,1F
 147+ 92B1 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 92B4 18 03        	jr 2F
 149+ 92B6 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 92B9 08           2 ex af,af
 151+ 92BA A7               and a
 152+ 92BB ED 42            sbc hl,bc
 153+ 92BD C9               ret
 154+ 92BE
 155+ 92BE              ; *********************************************************************************************************************************************************************************************
 156+ 92BE              ;
 157+ 92BE              ;   16/8/22
 158+ 92BE              ;
 159+ 92BE              ;	Comprueba_limite_vertical
 160+ 92BE              ;
 161+ 92BE              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 92BE              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 92BE              ;
 164+ 92BE
 165+ 92BE 2A 2F 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 92C1 7D           	ld a,l
 167+ 92C2 E6 1F        	and $1F
 168+ 92C4 57           	ld d,a
 169+ 92C5 3A 53 88     	ld a,(Limite_vertical)
 170+ 92C8 BA           	cp d 											; Límite - Posición.
 171+ 92C9 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 92CA 3A 41 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 92CD CB 47        	bit 0,a
 174+ 92CF 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 92D1
 176+ 92D1              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 92D1
 178+ 92D1 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 92D2 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 92D4
 181+ 92D4              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 92D4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 92D4
 184+ 92D4 3A 33 88         ld a,(Coordenada_X)
 185+ 92D7 16 0F            ld d,Centro_izquierda
 186+ 92D9 A7               and a
 187+ 92DA 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 92DB 28 1E            jr z,3F
 189+ 92DD 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 92DF              ;                                                    ; _salimos sin modificar nada.
 191+ 92DF 18 0E            jr 2F
 192+ 92E1 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 92E2 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 92E4
 195+ 92E4              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 92E4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 92E4
 198+ 92E4 3A 33 88         ld a,(Coordenada_X)
 199+ 92E7 16 10            ld d,Centro_derecha
 200+ 92E9 A7               and a
 201+ 92EA 92               sub d
 202+ 92EB 28 0E            jr z,3F
 203+ 92ED 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 92EF              ;                                                    ; _salimos sin modificar nada.
 205+ 92EF CB 43        2 bit 0,e
 206+ 92F1 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 92F3 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 92F4 CD 88 93         call Modificaccionne
 209+ 92F7 C1           	pop bc
 210+ 92F8 CD 98 93         call Inicializacion
 211+ 92FB C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 92FC
 213+ 92FC              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 92FC
 215+ 92FC C5           4 push bc
 216+ 92FD 01 2E 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 9300 0A           	ld a,(bc)
 218+ 9301 3D           	dec a
 219+ 9302 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 9303 7D           	ld a,l
 221+ 9304 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9305 CB 47        	bit 0,a
 223+ 9307 28 03        	jr z,5F
 224+ 9309 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 930A 18 2E        	jr 7F
 226+ 930C
 227+ 930C              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 930C
 229+ 930C 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 930D F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 930E 3A 4F 88     	ld a,(Ctrl_0)
 232+ 9311 CB 4F        	bit 1,a
 233+ 9313 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9315 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9316
 236+ 9316              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9316
 238+ 9316 1C               inc e
 239+ 9317 1D               dec e
 240+ 9318 20 07            jr nz,12F
 241+ 931A 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 931B 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 931C 22 2F 88     	ld (Posicion_actual),hl
 244+ 931F 18 44        13 jr 9F
 245+ 9321 CB 43        12 bit 0,e
 246+ 9323 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9325              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9325 C1           	pop bc
 249+ 9326 18 D3        	jr 3B
 250+ 9328 80           14 add b
 251+ 9329 6F               ld l,a
 252+ 932A 22 2F 88     	ld (Posicion_actual),hl
 253+ 932D CD 88 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9330 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9332 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9334 32 4F 88         ld (Ctrl_0),a
 257+ 9337 F1           	pop af
 258+ 9338 18 2B        	jr 9F
 259+ 933A
 260+ 933A              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 933A
 262+ 933A F5           7 push af
 263+ 933B 3A 4F 88     	ld a,(Ctrl_0)
 264+ 933E CB 47        	bit 0,a
 265+ 9340 20 1D        	jr nz,8F
 266+ 9342 F1           	pop af
 267+ 9343
 268+ 9343              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9343
 270+ 9343 1C           	inc e
 271+ 9344 1D               dec e
 272+ 9345 20 07            jr nz,10F
 273+ 9347 90           	sub b
 274+ 9348 6F               ld l,a
 275+ 9349 22 2F 88     	ld (Posicion_actual),hl
 276+ 934C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 934E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 934E CB 43        10 bit 0,e
 279+ 9350 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9352              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9352 C1           	pop bc
 282+ 9353 18 A6        	jr 3B
 283+ 9355 90           16 sub b
 284+ 9356 6F               ld l,a
 285+ 9357 22 2F 88     	ld (Posicion_actual),hl
 286+ 935A CD 88 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 935D 18 06            jr 9F
 288+ 935F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9361 32 4F 88         ld (Ctrl_0),a
 290+ 9364 F1           	pop af
 291+ 9365 C1           9 pop bc
 292+ 9366 1E 00        	ld e,0
 293+ 9368 CD 98 93         call Inicializacion
 294+ 936B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 936C 08           	ex af,af
 296+ 936D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 936E 18 8B            jr 3B
 298+ 9370
 299+ 9370              ; --------------------
 300+ 9370
 301+ 9370 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9372 CD FF 94     1 call PreviousScan
 303+ 9375 10 FB            djnz 1B
 304+ 9377 22 2F 88     	ld (Posicion_actual),hl
 305+ 937A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 937B C9           	ret
 307+ 937C
 308+ 937C              ; --------------------
 309+ 937C
 310+ 937C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 937E CD F0 94     1 call NextScan
 312+ 9381 10 FB            djnz 1B
 313+ 9383 22 2F 88     	ld (Posicion_actual),hl
 314+ 9386 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9387 C9           	ret
 316+ 9388
 317+ 9388              ; --------------------
 318+ 9388              ;
 319+ 9388              ;	22/01/23
 320+ 9388              ;
 321+ 9388              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9388              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9388              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9388
 325+ 9388
 326+ 9388              Modificaccionne
 327+ 9388
 328+ 9388 3A 41 88     	ld a,(Cuad_objeto)
 329+ 938B FE 02        	cp 2
 330+ 938D CC 70 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 9390 DC 70 93         call c,Modifica_Pos_actual
 332+ 9393 C8           	ret z
 333+ 9394 CD 7C 93         call Modifica_Pos_actual2
 334+ 9397 C9               ret
 335+ 9398
 336+ 9398              ; *************************************************************************************************************************************************************************************************
 337+ 9398              ;
 338+ 9398              ;	13/8/22
 339+ 9398              ;
 340+ 9398              ;	Inicializacion
 341+ 9398              ;
 342+ 9398              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9398              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9398              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9398              ;
 346+ 9398              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9398              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9398              ;	_ desaparece/aparece.
 349+ 9398
 350+ 9398              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9398              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9398              ;
 353+ 9398              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9398              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9398              ; 		   [E] ="0"
 356+ 9398
 357+ 9398              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9398
 359+ 9398 CD 03 98     Inicializacion call calcula_tercio
 360+ 939B 28 36        	jr z,primit
 361+ 939D E6 02        	and 2
 362+ 939F 20 07        	jr nz,segmit
 363+ 93A1 7D           	ld a,l
 364+ 93A2 FE 7F        	cp $7f
 365+ 93A4 38 2D        	jr c,primit
 366+ 93A6 28 2B        	jr z,primit
 367+ 93A8 CD 0E 94     segmit call column
 368+ 93AB 38 13        	jr c,tercuad
 369+ 93AD 3E 04        cuarcuad ld a,4
 370+ 93AF 32 41 88     	ld (Cuad_objeto),a
 371+ 93B2 21 20 48     	ld hl,$4820
 372+ 93B5 22 51 88     	ld (Limite_horizontal),hl
 373+ 93B8 21 53 88     	ld hl,Limite_vertical
 374+ 93BB 36 0D        	ld (hl),$0d
 375+ 93BD 08           	ex af,af
 376+ 93BE 18 3C        	jr 1F
 377+ 93C0              tercuad
 378+ 93C0 3E 03        	ld a,3
 379+ 93C2 32 41 88     	ld (Cuad_objeto),a
 380+ 93C5 21 20 48     	ld hl,$4820
 381+ 93C8 22 51 88     	ld (Limite_horizontal),hl
 382+ 93CB 21 53 88     	ld hl,Limite_vertical
 383+ 93CE 36 12        	ld (hl),$12
 384+ 93D0 08           	ex af,af
 385+ 93D1 18 29        	jr 1F
 386+ 93D3 CD 0E 94     primit call column
 387+ 93D6 38 13        	jr c, primcuad
 388+ 93D8              segcuad
 389+ 93D8 3E 02        	ld a,2
 390+ 93DA 32 41 88     	ld (Cuad_objeto),a
 391+ 93DD 21 C0 4F     	ld hl,$4fc0
 392+ 93E0 22 51 88     	ld (Limite_horizontal),hl
 393+ 93E3 21 53 88     	ld hl,Limite_vertical
 394+ 93E6 36 0D        	ld (hl),$0d
 395+ 93E8 08           	ex af,af
 396+ 93E9 18 11        	jr 1F
 397+ 93EB              primcuad
 398+ 93EB 3E 01        	ld a,1
 399+ 93ED 32 41 88     	ld (Cuad_objeto),a
 400+ 93F0 21 C0 4F     	ld hl,$4fc0
 401+ 93F3 22 51 88     	ld (Limite_horizontal),hl
 402+ 93F6 21 53 88     	ld hl,Limite_vertical
 403+ 93F9 36 12        	ld (hl),$12
 404+ 93FB 08           	ex af,af
 405+ 93FC
 406+ 93FC C5           1 push bc
 407+ 93FD E5           	push hl
 408+ 93FE D5           	push de
 409+ 93FF
 410+ 93FF 2A 2F 88     	ld hl,(Posicion_actual)
 411+ 9402 CD 9B 9B     	call Genera_coordenadas
 412+ 9405
 413+ 9405 D1           	pop de
 414+ 9406 E1           	pop hl
 415+ 9407 C1           	pop bc
 416+ 9408
 417+ 9408 21 4F 88     	ld hl,Ctrl_0
 418+ 940B CB EE        	set 5,(hl)
 419+ 940D C9           	ret
 420+ 940E
 421+ 940E              ; ------------------------------------------------------------------------------------------------------------------
 422+ 940E
 423+ 940E              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 940E              ;
 425+ 940E              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 940E
 427+ 940E 7D           column ld a,l
 428+ 940F E6 1F        	and $1f
 429+ 9411 FE 10         	cp $10
 430+ 9413 C9            	ret
 431+ 9414
 432+ 9414              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9414              ;
 434+ 9414              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9414              ;
 436+ 9414              ; 14/12/22
 437+ 9414              ;
 438+ 9414              ;	Modifica: A y BC.
 439+ 9414
 440+ 9414 3A 41 88     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9417 E6 01        	and 1
 442+ 9419 28 17        	jr z,1F
 443+ 941B
 444+ 941B              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 941B
 446+ 941B 3A 33 88     	ld a,(Coordenada_X)
 447+ 941E 47           	ld b,a
 448+ 941F 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9420 79           	ld a,c
 450+ 9421 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9422 38 08        	jr c,2F
 452+ 9424 47           	ld b,a
 453+ 9425 79           	ld a,c
 454+ 9426 90           	sub b
 455+ 9427 32 50 88     	ld (Columnas),a
 456+ 942A 18 1B        	jr 4F
 457+ 942C 79           2 ld a,c
 458+ 942D 32 50 88     	ld (Columnas),a
 459+ 9430 18 15        	jr 4F
 460+ 9432
 461+ 9432              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9432
 463+ 9432 3A 33 88     1 ld a,(Coordenada_X)
 464+ 9435 81           	add c
 465+ 9436 3D           	dec a
 466+ 9437 D6 1F        	sub $1f
 467+ 9439 38 08        	jr c,3F
 468+ 943B 47           	ld b,a
 469+ 943C 79           	ld a,c
 470+ 943D 90           	sub b
 471+ 943E 32 50 88     	ld (Columnas),a
 472+ 9441 18 04        	jr 4F
 473+ 9443 79           3 ld a,c
 474+ 9444 32 50 88     	ld (Columnas),a
 475+ 9447 D9           4 exx
 476+ 9448 4F           	ld c,a
 477+ 9449 D9           	exx
 478+ 944A C9            ret
 479+ 944B
 480+ 944B              ; --------------------------------------------------------------------------------------------------------------------
 481+ 944B              ;
 482+ 944B              ;   19/7/23
 483+ 944B              ;
 484+ 944B              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 944B              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 944B              ;
 487+ 944B              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 944B              ;			HL e IY Contienen (Puntero_objeto).
 489+ 944B              ;
 490+ 944B              ;	DESTRUYE: HL,B Y A.
 491+ 944B
 492+ 944B 3A 41 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 944E FE 02        	cp 2
 494+ 9450 38 18        	jr c,1F
 495+ 9452 28 16        	jr z,1F
 496+ 9454 E6 01        	and 1
 497+ 9456 28 0D        	jr z,3F
 498+ 9458
 499+ 9458              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9458
 501+ 9458 CD 9E 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 945B
 503+ 945B 7D           9 ld a,l
 504+ 945C E6 1F        	and $1f
 505+ 945E 28 2A        	jr z,7F
 506+ 9460 2B           	dec hl
 507+ 9461 10 F8        	djnz 9B
 508+ 9463 18 25        	jr 7F
 509+ 9465
 510+ 9465              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9465
 512+ 9465 2A 2F 88     3 ld hl,(Posicion_actual)
 513+ 9468 18 20        	jr 7F
 514+ 946A
 515+ 946A 28 14        1 jr z,2F
 516+ 946C
 517+ 946C              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 946C
 519+ 946C CD 9E 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 946F
 521+ 946F 7D           4 ld a,l
 522+ 9470 E6 1F        	and $1f
 523+ 9472 28 03        	jr z,6F
 524+ 9474 2B           	dec hl
 525+ 9475 10 F8        	djnz 4B
 526+ 9477 06 0F        6 ld b,15
 527+ 9479 CD FF 94     5 call PreviousScan
 528+ 947C 10 FB        	djnz 5B
 529+ 947E 18 0A        	jr 7F
 530+ 9480
 531+ 9480              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9480
 533+ 9480 CD 9E 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9483 06 0F        	ld b,15
 535+ 9485 CD FF 94     8 call PreviousScan
 536+ 9488 10 FB        	djnz 8B
 537+ 948A
 538+ 948A E5           7 push hl
 539+ 948B DD E1        	pop ix
 540+ 948D
 541+ 948D 2A 31 88     	ld hl,(Puntero_objeto)
 542+ 9490 E5           	push hl
 543+ 9491 FD E1        	pop iy
 544+ 9493
 545+ 9493              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9493
 547+ 9493 3A 4F 88     	ld a,(Ctrl_0)
 548+ 9496 CB 77        	bit 6,a
 549+ 9498 C8           	ret z
 550+ 9499
 551+ 9499              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9499              ; _ entidad / Amadeus´.
 553+ 9499
 554+ 9499 DD 22 9F 85  	ld (p.imp.amadeus),ix
 555+ 949D
 556+ 949D C9           	ret
 557+ 949E
 558+ 949E              ; --------------------------------------------------------------------------------------------------------------------
 559+ 949E              ;
 560+ 949E              ;	2/1/23
 561+ 949E              ;
 562+ 949E              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 949E              ;
 564+ 949E              ;	Tras esta rutina tenemos:
 565+ 949E              ;
 566+ 949E              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 949E              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 949E              ;
 569+ 949E              ;	DESTRUYE!!!!! HL,B y A.
 570+ 949E
 571+ 949E 2A 2F 88     Operandos ld hl,(Posicion_actual)
 572+ 94A1 3A 50 88     	ld a,(Columnas)
 573+ 94A4 3D           	dec a
 574+ 94A5 20 01        	jr nz,1F
 575+ 94A7 3C           	inc a
 576+ 94A8 47           1 ld b,a
 577+ 94A9 C9           	ret
 578+ 94AA
 579+ 94AA              ; --------------------------------------------------------------------------------------------------------------------
 580+ 94AA              ;
 581+ 94AA              ;	3/1/23
 582+ 94AA              ;
 583+ 94AA              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 94AA              ;
 585+ 94AA              ;	Destruye: A,B,HL y DE.
 586+ 94AA
 587+ 94AA              Define_rutina_de_impresion
 588+ 94AA
 589+ 94AA 3A 2E 88     	ld a,(Columns)
 590+ 94AD 47           	ld b,a
 591+ 94AE 3A 50 88     	ld a,(Columnas)
 592+ 94B1 B8           	cp b
 593+ 94B2 20 0D        	jr nz,2f
 594+ 94B4
 595+ 94B4              ;	La entidad se imprime entera.
 596+ 94B4
 597+ 94B4 21 D3 95     	ld hl, Indice_entidades_completas
 598+ 94B7 E6 01        	and 1
 599+ 94B9 28 02        	jr z,1F
 600+ 94BB
 601+ 94BB 23           	inc hl
 602+ 94BC 23           	inc hl
 603+ 94BD
 604+ 94BD CD B2 8B     1 call Extrae_address
 605+ 94C0 C9           	ret		;	ret
 606+ 94C1
 607+ 94C1              ;	La entidad no se imprime entera en pantalla.
 608+ 94C1
 609+ 94C1 3A 41 88     2 ld a,(Cuad_objeto)
 610+ 94C4 E6 01        	and 1
 611+ 94C6 28 17        	jr z,3F
 612+ 94C8
 613+ 94C8              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 94C8
 615+ 94C8 21 D7 95     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 94CB 3A 2E 88     4 ld a,(Columns)
 617+ 94CE E6 01        	and 1
 618+ 94D0 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 94D2
 620+ 94D2 23           	inc hl
 621+ 94D3 23           	inc hl
 622+ 94D4
 623+ 94D4 3A 50 88     	ld a,(Columnas)
 624+ 94D7 E6 01        	and 1
 625+ 94D9 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 94DB
 627+ 94DB 23           	inc hl
 628+ 94DC 23           	inc hl
 629+ 94DD
 630+ 94DD 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 94DF
 632+ 94DF 21 DD 95     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 94E2 18 E7        	jr 4B
 634+ 94E4
 635+ 94E4              ; --------------------------------------------------------------------------------------------------------------------
 636+ 94E4              ;
 637+ 94E4              ;	Prepara_draw
 638+ 94E4              ;
 639+ 94E4              ;	Es una rutina de carga.
 640+ 94E4              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 94E4              ;
 642+ 94E4              ;	FUNCIONAMIENTO:
 643+ 94E4              ;
 644+ 94E4              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 94E4              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 94E4              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 94E4              ;
 648+ 94E4              ;	DESTRUYE:
 649+ 94E4              ;
 650+ 94E4              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 94E4
 652+ 94E4 21 2D 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 94E7 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 94E8 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 94E9 4E           	ld c,(hl)
 656+ 94EA 2A 2F 88     	ld hl,(Posicion_actual)
 657+ 94ED 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 94EF C9           	ret
 659+ 94F0
 660+ 94F0              ;----------------------------------------------------------------------------------------------------------------
 661+ 94F0              ;
 662+ 94F0              ;	5/08/22
 663+ 94F0              ;
 664+ 94F0              ;   NextScan.
 665+ 94F0              ;
 666+ 94F0              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 94F0              ;
 668+ 94F0              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 94F0              ;
 670+ 94F0              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 94F0              ;
 672+ 94F0              ;       DESTRUIDOS: AF y HL !!!
 673+ 94F0              ;
 674+ 94F0              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 94F0              ;
 676+ 94F0
 677+ 94F0 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 94F1 7C               ld a,h
 679+ 94F2 E6 07            and 7
 680+ 94F4 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 94F5
 682+ 94F5 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 94F6 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 94F8 6F               ld l,a
 685+ 94F9 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 94FA
 687+ 94FA 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 94FB D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 94FD 67               ld h,a
 690+ 94FE C9               ret
 691+ 94FF
 692+ 94FF              ;----------------------------------------------------------------------------------------------------------------
 693+ 94FF              ;
 694+ 94FF              ;	5/08/22
 695+ 94FF              ;
 696+ 94FF              ;   PreviousScan.
 697+ 94FF              ;
 698+ 94FF              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 94FF              ;
 700+ 94FF              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 94FF              ;
 702+ 94FF              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 94FF              ;
 704+ 94FF              ;       DESTRUIDOS: AF y HL !!!
 705+ 94FF              ;
 706+ 94FF              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 94FF              ;
 708+ 94FF
 709+ 94FF 7C           PreviousScan ld a,h
 710+ 9500 25               dec h               ; Dec H.
 711+ 9501 E6 07            and 7
 712+ 9503 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9504
 714+ 9504 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9505 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9507 6F               ld l,a
 717+ 9508 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9509
 719+ 9509 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 950A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 950C 67               ld h,a
 722+ 950D C9               ret
 723+ 950E
 724+ 950E              ; -----------------------------------------------------------------------------------
 725+ 950E              ;
 726+ 950E              ;	31/7/23
 727+ 950E              ;
 728+ 950E              ;	Rutina principal de pintado de entidades.
 729+ 950E              ;	Extrae la foto del frame, (entidades).
 730+ 950E
 731+ 950E              Extrae_foto_entidades
 732+ 950E
 733+ 950E 21 01 70     	ld hl,Album_de_fotos+1
 734+ 9511 7E           	ld a,(hl)
 735+ 9512 A7           	and a
 736+ 9513 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9514
 738+ 9514              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9514
 740+ 9514 3A 7A 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9517 A7           	and a
 742+ 9518 C8           	ret z
 743+ 9519
 744+ 9519              ; -----------------------------------
 745+ 9519
 746+ 9519 ED 73 7F 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 951D 31 00 70     	ld sp,Album_de_fotos
 748+ 9520
 749+ 9520 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9522 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9523 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9524
 753+ 9524 ED 73 81 88  	ld (Stack_2),sp
 754+ 9528 ED 7B 7F 88  	ld sp,(Stack)
 755+ 952C
 756+ 952C              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 952C
 758+ 952C 3E CD        	ld a,$cd
 759+ 952E 32 36 95     	ld (Imprime),a
 760+ 9531 EB           	ex de,hl
 761+ 9532 22 37 95     	ld (Imprime+1),hl
 762+ 9535 EB           	ex de,hl
 763+ 9536
 764+ 9536              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9536
 766+ 9536 00 00 00     Imprime db 0,0,0
 767+ 9539
 768+ 9539 ED 73 7F 88  	ld (Stack),sp
 769+ 953D
 770+ 953D 3A 7A 88     	ld a,(Numero_de_malotes)
 771+ 9540 3D           	dec a
 772+ 9541 28 09        	jr z,1F
 773+ 9543 32 7A 88      	ld (Numero_de_malotes),a
 774+ 9546
 775+ 9546 ED 7B 81 88  	ld sp,(Stack_2)
 776+ 954A 18 D4        	jr 2B
 777+ 954C
 778+ 954C AF           1 xor a
 779+ 954D 32 81 88     	ld (Stack_2),a
 780+ 9550
 781+ 9550 C9           	ret
 782+ 9551
 783+ 9551              ; -----------------------------------------------------------------------------------
 784+ 9551              ;
 785+ 9551              ;	28/2/23
 786+ 9551              ;
 787+ 9551              ;	Pinta los disparos generados.
 788+ 9551
 789+ 9551              Extrae_foto_disparos
 790+ 9551
 791+ 9551 21 57 70     	ld hl,Album_de_fotos_disparos+1
 792+ 9554 7E               ld a,(hl)
 793+ 9555 A7               and a
 794+ 9556 C8               ret z
 795+ 9557
 796+ 9557 3A 8F 88     	ld a,(Numero_de_disparotes)
 797+ 955A A7           	and a
 798+ 955B C8           	ret z
 799+ 955C ED 73 7F 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9560 31 56 70     	ld sp,Album_de_fotos_disparos
 801+ 9563
 802+ 9563 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9565 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9566 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9567
 806+ 9567 ED 73 81 88  	ld (Stack_2),sp
 807+ 956B ED 7B 7F 88  	ld sp,(Stack)
 808+ 956F
 809+ 956F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 956F
 811+ 956F 3E CD        	ld a,$cd
 812+ 9571 32 79 95     	ld (Imprime2),a
 813+ 9574 EB           	ex de,hl
 814+ 9575 22 7A 95     	ld (Imprime2+1),hl
 815+ 9578 EB           	ex de,hl
 816+ 9579
 817+ 9579              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9579
 819+ 9579 00 00 00     Imprime2 db 0,0,0
 820+ 957C
 821+ 957C 3A 8F 88     	ld a,(Numero_de_disparotes)
 822+ 957F 3D           	dec a
 823+ 9580 28 09        	jr z,1F
 824+ 9582 32 8F 88      	ld (Numero_de_disparotes),a
 825+ 9585
 826+ 9585 ED 7B 81 88  	ld sp,(Stack_2)
 827+ 9589 18 D8        	jr 2B
 828+ 958B
 829+ 958B AF           1 xor a
 830+ 958C 32 81 88     	ld (Stack_2),a
 831+ 958F C9           	ret
 832+ 9590
 833+ 9590              ; -----------------------------------------------------------------------------------
 834+ 9590              ;
 835+ 9590              ;	4/9/23
 836+ 9590              ;
 837+ 9590              ;	Rutina principal de pintado de Amadeus.
 838+ 9590              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 9590
 840+ 9590 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9593 7E           	ld a,(hl)
 842+ 9594 A7           	and a
 843+ 9595 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9596
 845+ 9596 3A 7A 88     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9599 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 959A C8           	ret z
 848+ 959B
 849+ 959B              ; -----------------------------------
 850+ 959B
 851+ 959B ED 73 7F 88  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 959F 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 853+ 95A2
 854+ 95A2 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 95A4 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 95A5 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 95A6
 858+ 95A6 ED 73 81 88  	ld (Stack_2),sp
 859+ 95AA ED 7B 7F 88  	ld sp,(Stack)
 860+ 95AE
 861+ 95AE              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 95AE
 863+ 95AE 3E CD        	ld a,$cd
 864+ 95B0 32 B8 95     	ld (Imprime_Amadeus),a
 865+ 95B3 EB           	ex de,hl
 866+ 95B4 22 B9 95     	ld (Imprime_Amadeus+1),hl
 867+ 95B7 EB           	ex de,hl
 868+ 95B8
 869+ 95B8              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 95B8
 871+ 95B8 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 95BB
 873+ 95BB ED 73 7F 88  	ld (Stack),sp
 874+ 95BF
 875+ 95BF 3A 7A 88     	ld a,(Numero_de_malotes)
 876+ 95C2 3D           	dec a
 877+ 95C3 28 09        	jr z,1F
 878+ 95C5 32 7A 88      	ld (Numero_de_malotes),a
 879+ 95C8
 880+ 95C8 ED 7B 81 88  	ld sp,(Stack_2)
 881+ 95CC 18 D4        	jr 2B
 882+ 95CE
 883+ 95CE AF           1 xor a
 884+ 95CF 32 81 88     	ld (Stack_2),a
 885+ 95D2
 886+ 95D2 C9           	ret
# file closed: Draw_XOR.asm
1812  95D3              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 95D3              ;   índices de Rutinas de impresión.
   2+ 95D3
   3+ 95D3 E3 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 95D5 10 96            defw Pinta_Amadeus_3x2
   5+ 95D7
   6+ 95D7 66 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 95D9 06 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 95DB BA 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 95DD
  10+ 95DD 90 96        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 95DF 94 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 95E1 48 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 95E3
  14+ 95E3
  15+ 95E3              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 95E3              ;
  17+ 95E3              ;   12/12/22
  18+ 95E3              ;
  19+ 95E3              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 95E3              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 95E3              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 95E3              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 95E3              ;
  24+ 95E3              ;   Modifica: DE y HL.
  25+ 95E3
  26+ 95E3 ED 73 7F 88  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 95E7 FD F9        	ld sp,iy
  28+ 95E9 06 10            ld b,16
  29+ 95EB D1           1 pop de
  30+ 95EC 7B               ld a,e
  31+ 95ED AE               xor (hl)
  32+ 95EE 77           	ld (hl),a
  33+ 95EF 23           	inc hl
  34+ 95F0 7A               ld a,d
  35+ 95F1 AE               xor (hl)
  36+ 95F2 77           	ld (hl),a
  37+ 95F3 2B           	dec hl
  38+ 95F4 24           	inc h
  39+ 95F5 7C               ld a,h
  40+ 95F6 E6 07            and 7
  41+ 95F8 20 0A            jr nz,2F
  42+ 95FA 7D               ld a,l
  43+ 95FB C6 20            add a,$20
  44+ 95FD 6F               ld l,a
  45+ 95FE 38 04            jr c,2F
  46+ 9600 7C               ld a,h
  47+ 9601 D6 08            sub 8
  48+ 9603 67               ld h,a
  49+ 9604 7C           2 ld a,h
  50+ 9605 FE 58            cp $58
  51+ 9607 28 02            jr z,3F
  52+ 9609 10 E0            djnz 1B
  53+ 960B ED 7B 7F 88  3 ld sp,(Stack)
  54+ 960F C9           	ret
  55+ 9610
  56+ 9610 ED 73 7F 88  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9614 FD F9        	ld sp,iy
  58+ 9616 06 08            ld b,8
  59+ 9618 D1           1 pop de
  60+ 9619 7B               ld a,e
  61+ 961A AE               xor (hl)
  62+ 961B 77           	ld (hl),a
  63+ 961C 23           	inc hl
  64+ 961D 7A               ld a,d
  65+ 961E AE               xor (hl)
  66+ 961F 77           	ld (hl),a
  67+ 9620 23           	inc hl
  68+ 9621 D1           	pop de
  69+ 9622 7B               ld a,e
  70+ 9623 AE               xor (hl)
  71+ 9624 77           	ld (hl),a
  72+ 9625 2B           	dec hl
  73+ 9626 2B           	dec hl
  74+ 9627 24           	inc h
  75+ 9628 7C               ld a,h
  76+ 9629 E6 07            and 7
  77+ 962B 20 0A            jr nz,2F
  78+ 962D 7D               ld a,l
  79+ 962E C6 20            add a,$20
  80+ 9630 6F               ld l,a
  81+ 9631 38 04            jr c,2F
  82+ 9633 7C               ld a,h
  83+ 9634 D6 08            sub 8
  84+ 9636 67               ld h,a
  85+ 9637 7C           2 ld a,h
  86+ 9638 FE 58            cp $58
  87+ 963A 28 25            jr z,4F
  88+ 963C 7A               ld a,d
  89+ 963D AE               xor (hl)
  90+ 963E 77               ld (hl),a
  91+ 963F D1           	pop de
  92+ 9640 23           	inc hl
  93+ 9641 7B               ld a,e
  94+ 9642 AE               xor (hl)
  95+ 9643 77           	ld (hl),a
  96+ 9644 23           	inc hl
  97+ 9645 7A               ld a,d
  98+ 9646 AE               xor (hl)
  99+ 9647 77           	ld (hl),a
 100+ 9648 2B           	dec hl
 101+ 9649 2B           	dec hl
 102+ 964A 24           	inc h
 103+ 964B 7C               ld a,h
 104+ 964C E6 07            and 7
 105+ 964E 20 0A            jr nz,3F
 106+ 9650 7D               ld a,l
 107+ 9651 C6 20            add a,$20
 108+ 9653 6F               ld l,a
 109+ 9654 38 04            jr c,3F
 110+ 9656 7C               ld a,h
 111+ 9657 D6 08            sub 8
 112+ 9659 67               ld h,a
 113+ 965A 7C           3 ld a,h
 114+ 965B FE 58            cp $58
 115+ 965D 28 02            jr z,4F
 116+ 965F 10 B7            djnz 1B
 117+ 9661 ED 7B 7F 88  4 ld sp,(Stack)
 118+ 9665 C9           	ret
 119+ 9666
 120+ 9666              ; ---------------------------------------------------
 121+ 9666
 122+ 9666 ED 73 7F 88  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 966A FD F9        	ld sp,iy
 124+ 966C
 125+ 966C              ; >>>
 126+ 966C
 127+ 966C 06 10            ld b,16
 128+ 966E D1           1 pop de
 129+ 966F 7A           	ld a,d
 130+ 9670 AE           	xor (hl)
 131+ 9671 77           	ld (hl),a
 132+ 9672 24           	inc h
 133+ 9673 7C               ld a,h
 134+ 9674 E6 07            and 7
 135+ 9676 20 0C            jr nz,2F
 136+ 9678 7D               ld a,l
 137+ 9679 C6 20            add a,$20
 138+ 967B 6F               ld l,a
 139+ 967C 38 06            jr c,2F
 140+ 967E 7C               ld a,h
 141+ 967F D6 08            sub 8
 142+ 9681 67               ld h,a
 143+ 9682 18 00            jr 2F
 144+ 9684 7C           2 ld a,h
 145+ 9685 FE 58            cp $58
 146+ 9687 28 02            jr z,3F
 147+ 9689 10 E3            djnz 1B
 148+ 968B ED 7B 7F 88  3 ld sp,(Stack)
 149+ 968F C9           	ret
 150+ 9690
 151+ 9690 ED 73 7F 88  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9694 FD F9        	ld sp,iy
 153+ 9696
 154+ 9696              ; >>>
 155+ 9696
 156+ 9696 06 10            ld b,16
 157+ 9698 D1           1 pop de
 158+ 9699 7B           	ld a,e
 159+ 969A AE           	xor (hl)
 160+ 969B 77           	ld (hl),a
 161+ 969C 24           	inc h
 162+ 969D 7C               ld a,h
 163+ 969E E6 07            and 7
 164+ 96A0 20 0C            jr nz,2F
 165+ 96A2 7D               ld a,l
 166+ 96A3 C6 20            add a,$20
 167+ 96A5 6F               ld l,a
 168+ 96A6 38 06            jr c,2F
 169+ 96A8 7C               ld a,h
 170+ 96A9 D6 08            sub 8
 171+ 96AB 67               ld h,a
 172+ 96AC 18 00            jr 2F
 173+ 96AE 7C           2 ld a,h
 174+ 96AF FE 58            cp $58
 175+ 96B1 28 02            jr z,3F
 176+ 96B3 10 E3            djnz 1B
 177+ 96B5 ED 7B 7F 88  3 ld sp,(Stack)
 178+ 96B9 C9           	ret
 179+ 96BA
 180+ 96BA              ; ---------------------------------------------------
 181+ 96BA
 182+ 96BA ED 73 7F 88  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 96BE FD F9        	ld sp,iy
 184+ 96C0 06 08            ld b,8
 185+ 96C2 D1           1 pop de
 186+ 96C3 7A           	ld a,d
 187+ 96C4 AE           	xor (hl)
 188+ 96C5 77           	ld (hl),a
 189+ 96C6 23           	inc hl
 190+ 96C7 D1           	pop de
 191+ 96C8 7B           	ld a,e
 192+ 96C9 AE           	xor (hl)
 193+ 96CA 77           	ld (hl),a
 194+ 96CB 2B           	dec hl
 195+ 96CC 24            	inc h
 196+ 96CD 7C               ld a,h
 197+ 96CE E6 07            and 7
 198+ 96D0 20 0A            jr nz,2F
 199+ 96D2 7D               ld a,l
 200+ 96D3 C6 20            add a,$20
 201+ 96D5 6F               ld l,a
 202+ 96D6 38 04            jr c,2F
 203+ 96D8 7C               ld a,h
 204+ 96D9 D6 08            sub 8
 205+ 96DB 67               ld h,a
 206+ 96DC 7C           2 ld a,h
 207+ 96DD FE 58            cp $58
 208+ 96DF 28 20            jr z,4F
 209+ 96E1 D1               pop de
 210+ 96E2 7B           	ld a,e
 211+ 96E3 AE           	xor (hl)
 212+ 96E4 77           	ld (hl),a
 213+ 96E5 23           	inc hl
 214+ 96E6 7A           	ld a,d
 215+ 96E7 AE           	xor (hl)
 216+ 96E8 77           	ld (hl),a
 217+ 96E9 2B           	dec hl
 218+ 96EA 24           	inc h
 219+ 96EB 7C               ld a,h
 220+ 96EC E6 07            and 7
 221+ 96EE 20 0A            jr nz,3F
 222+ 96F0 7D               ld a,l
 223+ 96F1 C6 20            add a,$20
 224+ 96F3 6F               ld l,a
 225+ 96F4 38 04            jr c,3F
 226+ 96F6 7C               ld a,h
 227+ 96F7 D6 08            sub 8
 228+ 96F9 67               ld h,a
 229+ 96FA 7C           3 ld a,h
 230+ 96FB FE 58            cp $58
 231+ 96FD 28 02            jr z,4F
 232+ 96FF 10 C1            djnz 1B
 233+ 9701 ED 7B 7F 88  4 ld sp,(Stack)
 234+ 9705 C9           	ret
 235+ 9706
 236+ 9706 ED 73 7F 88  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 970A FD F9        	ld sp,iy
 238+ 970C 06 08            ld b,8
 239+ 970E D1           1 pop de
 240+ 970F D1           	pop de
 241+ 9710 7B           	ld a,e
 242+ 9711 AE           	xor (hl)
 243+ 9712 77           	ld (hl),a
 244+ 9713 24            	inc h
 245+ 9714 7C               ld a,h
 246+ 9715 E6 07            and 7
 247+ 9717 20 0A            jr nz,2F
 248+ 9719 7D               ld a,l
 249+ 971A C6 20            add a,$20
 250+ 971C 6F               ld l,a
 251+ 971D 38 04            jr c,2F
 252+ 971F 7C               ld a,h
 253+ 9720 D6 08            sub 8
 254+ 9722 67               ld h,a
 255+ 9723 7C           2 ld a,h
 256+ 9724 FE 58            cp $58
 257+ 9726 28 1B            jr z,4F
 258+ 9728 D1               pop de
 259+ 9729 7A           	ld a,d
 260+ 972A AE           	xor (hl)
 261+ 972B 77           	ld (hl),a
 262+ 972C 24           	inc h
 263+ 972D 7C               ld a,h
 264+ 972E E6 07            and 7
 265+ 9730 20 0A            jr nz,3F
 266+ 9732 7D               ld a,l
 267+ 9733 C6 20            add a,$20
 268+ 9735 6F               ld l,a
 269+ 9736 38 04            jr c,3F
 270+ 9738 7C               ld a,h
 271+ 9739 D6 08            sub 8
 272+ 973B 67               ld h,a
 273+ 973C 7C           3 ld a,h
 274+ 973D FE 58            cp $58
 275+ 973F 28 02            jr z,4F
 276+ 9741 10 CB            djnz 1B
 277+ 9743 ED 7B 7F 88  4 ld sp,(Stack)
 278+ 9747 C9           	ret
 279+ 9748
 280+ 9748 ED 73 7F 88  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 974C FD F9        	ld sp,iy
 282+ 974E 06 08            ld b,8
 283+ 9750 D1           1 pop de
 284+ 9751 7B           	ld a,e
 285+ 9752 AE           	xor (hl)
 286+ 9753 77           	ld (hl),a
 287+ 9754 23           	inc hl
 288+ 9755 7A           	ld a,d
 289+ 9756 AE           	xor (hl)
 290+ 9757 77           	ld (hl),a
 291+ 9758 2B           	dec hl
 292+ 9759 24             	inc h
 293+ 975A 7C               ld a,h
 294+ 975B E6 07            and 7
 295+ 975D 20 0A            jr nz,2F
 296+ 975F 7D               ld a,l
 297+ 9760 C6 20            add a,$20
 298+ 9762 6F               ld l,a
 299+ 9763 38 04            jr c,2F
 300+ 9765 7C               ld a,h
 301+ 9766 D6 08            sub 8
 302+ 9768 67               ld h,a
 303+ 9769 7C           2 ld a,h
 304+ 976A FE 58            cp $58
 305+ 976C 28 21            jr z,4F
 306+ 976E D1               pop de
 307+ 976F 7A           	ld a,d
 308+ 9770 AE           	xor (hl)
 309+ 9771 77           	ld (hl),a
 310+ 9772 23           	inc hl
 311+ 9773 D1               pop de
 312+ 9774 7B           	ld a,e
 313+ 9775 AE           	xor (hl)
 314+ 9776 77           	ld (hl),a
 315+ 9777 2B           	dec hl
 316+ 9778 24           	inc h
 317+ 9779 7C               ld a,h
 318+ 977A E6 07            and 7
 319+ 977C 20 0A            jr nz,3F
 320+ 977E 7D               ld a,l
 321+ 977F C6 20            add a,$20
 322+ 9781 6F               ld l,a
 323+ 9782 38 04            jr c,3F
 324+ 9784 7C               ld a,h
 325+ 9785 D6 08            sub 8
 326+ 9787 67               ld h,a
 327+ 9788 7C           3 ld a,h
 328+ 9789 FE 58            cp $58
 329+ 978B 28 02            jr z,4F
 330+ 978D 10 C1            djnz 1B
 331+ 978F ED 7B 7F 88  4 ld sp,(Stack)
 332+ 9793 C9           	ret
 333+ 9794
 334+ 9794 ED 73 7F 88  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9798 FD F9        	ld sp,iy
 336+ 979A 06 08            ld b,8
 337+ 979C D1           1 pop de
 338+ 979D 7B           	ld a,e
 339+ 979E AE           	xor (hl)
 340+ 979F 77           	ld (hl),a
 341+ 97A0 24            	inc h
 342+ 97A1 7C               ld a,h
 343+ 97A2 E6 07            and 7
 344+ 97A4 20 0A            jr nz,2F
 345+ 97A6 7D               ld a,l
 346+ 97A7 C6 20            add a,$20
 347+ 97A9 6F               ld l,a
 348+ 97AA 38 04            jr c,2F
 349+ 97AC 7C               ld a,h
 350+ 97AD D6 08            sub 8
 351+ 97AF 67               ld h,a
 352+ 97B0 7C           2 ld a,h
 353+ 97B1 FE 58            cp $58
 354+ 97B3 28 1C            jr z,4F
 355+ 97B5 D1               pop de
 356+ 97B6 7A           	ld a,d
 357+ 97B7 AE           	xor (hl)
 358+ 97B8 77           	ld (hl),a
 359+ 97B9 24           	inc h
 360+ 97BA 7C               ld a,h
 361+ 97BB E6 07            and 7
 362+ 97BD 20 0A            jr nz,3F
 363+ 97BF 7D               ld a,l
 364+ 97C0 C6 20            add a,$20
 365+ 97C2 6F               ld l,a
 366+ 97C3 38 04            jr c,3F
 367+ 97C5 7C               ld a,h
 368+ 97C6 D6 08            sub 8
 369+ 97C8 67               ld h,a
 370+ 97C9 7C           3 ld a,h
 371+ 97CA FE 58            cp $58
 372+ 97CC 28 03            jr z,4F
 373+ 97CE D1               pop de
 374+ 97CF 10 CB            djnz 1B
 375+ 97D1 ED 7B 7F 88  4 ld sp,(Stack)
 376+ 97D5 C9           	ret
 377+ 97D6
 378+ 97D6              ; ---------------------------------------------------
 379+ 97D6              ;
 380+ 97D6              ;   27/02/23
 381+ 97D6              ;
 382+ 97D6              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 97D6              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 97D6              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 97D6
 386+ 97D6 ED 73 7F 88  Pinta_Disparo ld (Stack),sp
 387+ 97DA FD F9            ld sp,iy
 388+ 97DC 06 03            ld b,3
 389+ 97DE D1           1 pop de
 390+ 97DF 7B               ld a,e
 391+ 97E0 AE               xor (hl)
 392+ 97E1 77               ld (hl),a
 393+ 97E2 23               inc hl
 394+ 97E3 7A               ld a,d
 395+ 97E4 AE               xor (hl)
 396+ 97E5 77               ld (hl),a
 397+ 97E6 2B               dec hl
 398+ 97E7
 399+ 97E7 24               inc h
 400+ 97E8 7C               ld a,h
 401+ 97E9 E6 07            and 7
 402+ 97EB 20 0A            jr nz,2F
 403+ 97ED 7D               ld a,l
 404+ 97EE C6 20            add a,$20
 405+ 97F0 6F               ld l,a
 406+ 97F1 38 04            jr c,2F
 407+ 97F3 7C               ld a,h
 408+ 97F4 D6 08            sub 8
 409+ 97F6 67               ld h,a
 410+ 97F7 7C           2 ld a,h
 411+ 97F8 FE 58            cp $58
 412+ 97FA 28 02            jr z,3F
 413+ 97FC
 414+ 97FC 10 E0            djnz 1B
 415+ 97FE ED 7B 7F 88  3 ld sp,(Stack)
 416+ 9802 C9               ret
 417+ 9803
# file closed: Rutinas_de_impresion_sprites.asm
1813  9803              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9803              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9803              ;
   3+ 9803              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9803              ;
   5+ 9803              ; *****************************************************************************************************************************************************************************************
   6+ 9803              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9803
   8+ 9803 7C           calcula_tercio ld a,h
   9+ 9804 E6 18        	and $18
  10+ 9806 CB 2F        	sra a
  11+ 9808 CB 2F        	sra a
  12+ 980A CB 2F        	sra a
  13+ 980C C9           	ret
  14+ 980D
# file closed: calcula_tercio.asm
1814  980D              	include "Cls.asm"
# file opened: Cls.asm
   1+ 980D              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 980D              ;
   3+ 980D              ;
   4+ 980D              ;	CLS.
   5+ 980D              ;
   6+ 980D              ;	Limpia la pantalla y define sus atributos.
   7+ 980D              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 980D              ;
   9+ 980D              ;	COLORES: 0 ..... NEGRO
  10+ 980D              ;    		 1 ..... AZUL
  11+ 980D              ; 			 2 ..... ROJO
  12+ 980D              ;			 3 ..... MAGENTA
  13+ 980D              ; 			 4 ..... VERDE
  14+ 980D              ; 			 5 ..... CIAN
  15+ 980D              ;			 6 ..... AMARILLO
  16+ 980D              ; 			 7 ..... BLANCO
  17+ 980D              ;
  18+ 980D              ;	INPUT: A contiene los atributos de pantalla.
  19+ 980D              ;
  20+ 980D              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 980D
  22+ 980D
  23+ 980D 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9810 11 01 40     	LD DE,$4001
  25+ 9813 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9816 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9818 ED B0        	LDIR
  28+ 981A 01 FF 02     	LD BC,767
  29+ 981D 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 981E ED B0        	LDIR
  31+ 9820 C9           	ret
  32+ 9821
# file closed: Cls.asm
1815  9821              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9821
   2+ 9821              ; ******************************************************************************************************************************************************************************************
   3+ 9821              ;
   4+ 9821              ;   20/05/23
   5+ 9821              ;
   6+ 9821              ;	Recompone_posicion_inicio
   7+ 9821              ;
   8+ 9821              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9821              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9821              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9821              ;	_ a una u otra rutina.
  12+ 9821
  13+ 9821              Recompone_posicion_inicio
  14+ 9821
  15+ 9821 2A 3F 88     	ld hl,(Posicion_inicio)
  16+ 9824 7D           	ld a,l
  17+ 9825 E6 1F        	and $1f
  18+ 9827 28 16        	jr z,1F
  19+ 9829
  20+ 9829 FE 1F        	cp $1f
  21+ 982B 28 0D        	jr z,3F
  22+ 982D
  23+ 982D 21 54 88     	ld hl,Ctrl_2
  24+ 9830 CB C6        	set 0,(hl)
  25+ 9832 2A 31 88     	ld hl,(Puntero_objeto)
  26+ 9835 22 6F 88     	ld (Repone_puntero_objeto),hl
  27+ 9838 18 08        	jr 2F
  28+ 983A
  29+ 983A CD E8 99     3 call Mov_left
  30+ 983D 18 03        	jr 2F
  31+ 983F
  32+ 983F CD C5 98     1 call Mov_right
  33+ 9842 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9845 22 31 88     	ld (Puntero_objeto),hl
  35+ 9848 C9           	ret
  36+ 9849
  37+ 9849              ; ******************************************************************************************************************************************************************************************
  38+ 9849              ;
  39+ 9849              ;   27/05/23
  40+ 9849              ;
  41+ 9849              ;	Mov_down
  42+ 9849              ;
  43+ 9849              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9849              ;
  45+ 9849              ;
  46+ 9849              Mov_down
  47+ 9849
  48+ 9849 CD B3 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 984C              ;																	; _ repone (Puntero_objeto).
  50+ 984C 21 4F 88     	ld hl,Ctrl_0
  51+ 984F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9851              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9851              ; 																	; _ en el caso de que no lo haya.
  54+ 9851 3A 59 88     	ld a,(Vel_down)
  55+ 9854 47           	ld b,a
  56+ 9855 2A 2F 88         ld hl,(Posicion_actual)
  57+ 9858 CD 03 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 985B E6 02        	and 2
  59+ 985D 28 17        	jr z,1F
  60+ 985F
  61+ 985F              ; Nos encontramos en el último tercio de pantalla.
  62+ 985F              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 985F
  64+ 985F 7C           	ld a,h
  65+ 9860 FE 57        	cp $57
  66+ 9862 20 12        	jr nz,1F
  67+ 9864
  68+ 9864 7D           	ld a,l
  69+ 9865 C6 20        	add $20
  70+ 9867 30 0D        	jr nc,1F
  71+ 9869
  72+ 9869              ; ------------------------------
  73+ 9869              ;
  74+ 9869              ;	12/01/24
  75+ 9869
  76+ 9869              ;	call Reaparece_arriba
  77+ 9869 CD 75 9B     	call Reinicio
  78+ 986C
  79+ 986C              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 986C
  81+ 986C 3A 8D 88     	ld a,(Ctrl_3)
  82+ 986F CB CF        	set 1,a
  83+ 9871 32 8D 88     	ld (Ctrl_3),a
  84+ 9874
  85+ 9874 18 08        	jr 3F
  86+ 9876              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9876              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9876              ; ------------------------------
  89+ 9876
  90+ 9876 CD F0 94     1 call NextScan
  91+ 9879 22 2F 88     	ld (Posicion_actual),hl
  92+ 987C 10 DA            djnz 2B
  93+ 987E CD 9B 9B     3 call Genera_coordenadas
  94+ 9881 C9           	ret
  95+ 9882
  96+ 9882              ; ******************************************************************************************************************************************************************************************
  97+ 9882              ;
  98+ 9882              ;   27/05/23
  99+ 9882              ;
 100+ 9882              ;	Mov_up
 101+ 9882              ;
 102+ 9882              ; 	Mueve el Sprite hacia arriba.
 103+ 9882              ;
 104+ 9882              ;
 105+ 9882              Mov_up
 106+ 9882
 107+ 9882 CD B3 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9885              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9885 21 4F 88     	ld hl,Ctrl_0
 110+ 9888 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 988A              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 988A              ; 																		; _ en el caso de que no lo haya.
 113+ 988A 3A 58 88     	ld a,(Vel_up)
 114+ 988D 47           	ld b,a
 115+ 988E 2A 2F 88     	ld hl,(Posicion_actual)
 116+ 9891 CD 03 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9894 A7           	and a
 118+ 9895 20 10        	jr nz,1F
 119+ 9897
 120+ 9897              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9897              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9897
 123+ 9897 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9898 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 989A 20 0B            jr nz,1F
 126+ 989C 7D               ld a,l
 127+ 989D D6 20            sub $20
 128+ 989F 30 06            jr nc,1F
 129+ 98A1 25               dec h
 130+ 98A2
 131+ 98A2              ; -----------------------------
 132+ 98A2 CD 56 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 98A5              ;	call Reinicio
 134+ 98A5              ; -----------------------------
 135+ 98A5
 136+ 98A5 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 98A7 CD FF 94     1 call PreviousScan
 138+ 98AA 22 2F 88     	ld (Posicion_actual),hl
 139+ 98AD 10 E2            djnz 3B
 140+ 98AF CD 9B 9B     2 call Genera_coordenadas
 141+ 98B2 C9           	ret
 142+ 98B3
 143+ 98B3              ; -----------------------------
 144+ 98B3              ;
 145+ 98B3              ;	27/5/23
 146+ 98B3              ;
 147+ 98B3              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 98B3              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 98B3              ;
 150+ 98B3              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 98B3              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 98B3              ;
 153+ 98B3              ;	Modifica: A y (Puntero_objeto).
 154+ 98B3
 155+ 98B3 3A 54 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 98B6 CB 47        	bit 0,a
 157+ 98B8 C8           	ret z
 158+ 98B9 CB 87        	res 0,a
 159+ 98BB 32 54 88     	ld (Ctrl_2),a
 160+ 98BE 2A 6F 88     	ld hl,(Repone_puntero_objeto)
 161+ 98C1 22 31 88     	ld (Puntero_objeto),hl
 162+ 98C4 C9           	ret
 163+ 98C5
 164+ 98C5              ; ******************************************************************************************************************************************************************************************
 165+ 98C5              ;
 166+ 98C5              ;	19/10/22
 167+ 98C5              ;
 168+ 98C5              ;	Mov_right.
 169+ 98C5              ;
 170+ 98C5              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 98C5              ;
 172+ 98C5
 173+ 98C5 3A 4F 88     Mov_right ld a,(Ctrl_0)
 174+ 98C8 CB 77        	bit 6,a
 175+ 98CA 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 98CC
 177+ 98CC CD 04 9B     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 98CF C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 98D0
 180+ 98D0 21 4F 88     	ld hl,Ctrl_0
 181+ 98D3 CB E6        	set 4,(hl)
 182+ 98D5 18 52        	jr 8F
 183+ 98D7
 184+ 98D7 21 4F 88     10 ld hl,Ctrl_0
 185+ 98DA CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 98DC              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 98DC              ; 																	; _ en el caso de que no lo haya.
 188+ 98DC 3A 33 88     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 98DF FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 98E1 20 46        	jr nz,8F
 191+ 98E3
 192+ 98E3 3A 35 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 98E6 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 98E7 28 40        	jr z,8F
 195+ 98E9
 196+ 98E9              ; ---------- ---------- ----------
 197+ 98E9              ;
 198+ 98E9              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 98E9
 200+ 98E9 3A 57 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 98EC FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 98EE 28 11        	jr z,1F
 203+ 98F0 38 06        	jr c,6F
 204+ 98F2 FE 04        	cp 4
 205+ 98F4 28 14        	jr z,7F
 206+ 98F6 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 98F8
 208+ 98F8              ; ---------- ---------- ----------
 209+ 98F8              ;
 210+ 98F8              ; Perfiles de velocidad
 211+ 98F8              ;
 212+ 98F8
 213+ 98F8 3A 35 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 98FB FE FE        	cp $fe
 215+ 98FD 20 2A        	jr nz,8F
 216+ 98FF 18 10        	jr 3F
 217+ 9901 3A 35 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9904 FE FD        	cp $fd
 219+ 9906 20 21        	jr nz,8F
 220+ 9908 18 07        	jr 3F
 221+ 990A 3A 35 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 990D FE FB        	cp $fb
 223+ 990F 20 18        	jr nz,8F
 224+ 9911
 225+ 9911              ; ---------- ---------- ----------
 226+ 9911
 227+ 9911              3
 228+ 9911 CD 44 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9914              ;	call Reinicio
 230+ 9914
 231+ 9914              ; ---------- ---------- ----------
 232+ 9914              ;
 233+ 9914              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9914
 235+ 9914 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9916 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9917 CD 30 99     	call DESPLZ_DER
 238+ 991A C1           	pop bc
 239+ 991B 10 F9        	djnz 5B
 240+ 991D 2A 2F 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9920 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9921 22 2F 88     	ld (Posicion_actual),hl
 243+ 9924 CD 9B 9B     	call Genera_coordenadas
 244+ 9927 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9929
 246+ 9929              ; ---------- ---------- ----------
 247+ 9929
 248+ 9929 2A 2F 88     8 ld hl,(Posicion_actual)
 249+ 992C CD 30 99     	call DESPLZ_DER
 250+ 992F C9           2 ret
 251+ 9930
 252+ 9930              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9930              ;
 254+ 9930              ;	22/9/22
 255+ 9930              ;
 256+ 9930
 257+ 9930 CD 3F 99     DESPLZ_DER call Desplaza_derecha
 258+ 9933 CD 8B 99         call modifica_parametros_1er_DESPLZ_2
 259+ 9936 CD B4 99         call Ciclo_completo
 260+ 9939 21 4F 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 993C CB FE        	set 7,(hl)
 262+ 993E C9           	ret
 263+ 993F
 264+ 993F              ; ******************************************************************************************************************************************************************************************
 265+ 993F              ;	15/02/23
 266+ 993F              ;
 267+ 993F
 268+ 993F 3A 57 88     Desplaza_derecha ld a,(Vel_right)
 269+ 9942 47           	ld b,a
 270+ 9943 2A 3B 88     	ld hl,(Puntero_DESPLZ_der)
 271+ 9946 23           1 inc hl
 272+ 9947 23           	inc hl
 273+ 9948 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 994A 22 3B 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 994D CD B2 8B     	call Extrae_address
 276+ 9950 22 31 88     	ld (Puntero_objeto),hl
 277+ 9953
 278+ 9953              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9953
 280+ 9953              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9953              ; Cuántos movimientos hemos hecho ??
 282+ 9953              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9953
 284+ 9953 2A 37 88     7 ld hl,(Indice_Sprite_der)
 285+ 9956 EB           	ex de,hl
 286+ 9957 A7           	and a
 287+ 9958 ED 52        	sbc hl,de
 288+ 995A CB 3D        	srl l
 289+ 995C 3E 08        6 ld a,8
 290+ 995E 95           	sub l
 291+ 995F 30 1E        	jr nc,3F
 292+ 9961
 293+ 9961              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9961              ; B="0".
 295+ 9961
 296+ 9961 04           4 inc b
 297+ 9962 3C           	inc a
 298+ 9963 20 FC        	jr nz,4B
 299+ 9965 78           	ld a,b
 300+ 9966 08           	ex af,af
 301+ 9967 2A 37 88     	ld hl,(Indice_Sprite_der)
 302+ 996A 23           5 inc hl
 303+ 996B 23           	inc hl
 304+ 996C 10 FC        	djnz 5B
 305+ 996E 22 3B 88     	ld (Puntero_DESPLZ_der),hl
 306+ 9971 CD B2 8B     	call Extrae_address
 307+ 9974 22 31 88     	ld (Puntero_objeto),hl
 308+ 9977
 309+ 9977              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9977              ; _(Posicion_actual).
 311+ 9977
 312+ 9977 21 2F 88     	ld hl,Posicion_actual
 313+ 997A 34           	inc (hl)
 314+ 997B 08               ex af,af
 315+ 997C 6F           	ld l,a
 316+ 997D 18 DD        	jr 6B
 317+ 997F
 318+ 997F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 997F
 320+ 997F 47           3 ld b,a
 321+ 9980 2A 39 88     	ld hl,(Indice_Sprite_izq)
 322+ 9983 23           2 inc hl
 323+ 9984 23           	inc hl
 324+ 9985 10 FC        	djnz 2B
 325+ 9987 22 3D 88     	ld (Puntero_DESPLZ_izq),hl
 326+ 998A C9           8 ret
 327+ 998B
 328+ 998B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 998B              ;
 330+ 998B              ;	24/7/22
 331+ 998B              ;
 332+ 998B              ;	modifica_parametros_1er_DESPLZ_2
 333+ 998B              ;
 334+ 998B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 998B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 998B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 998B
 338+ 998B 3A 35 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 998E A7           	and a
 340+ 998F 20 1F        	jr nz,1F
 341+ 9991 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9993 32 35 88         ld (CTRL_DESPLZ),a
 343+ 9996
 344+ 9996 21 2E 88     	ld hl,Columns
 345+ 9999 34           	inc (hl)
 346+ 999A 3A 41 88     	ld a,(Cuad_objeto)
 347+ 999D E6 01        	and 1
 348+ 999F 28 0F        	jr z,1F
 349+ 99A1 2A 2F 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 99A4 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 99A5 22 2F 88     	ld (Posicion_actual),hl
 352+ 99A8 CD 9B 9B     	call Genera_coordenadas
 353+ 99AB CD 10 9B     	call Inc_CTRL_DESPLZ
 354+ 99AE 18 03        	jr 2F
 355+ 99B0 CD 10 9B     1 call Inc_CTRL_DESPLZ
 356+ 99B3 C9           2 ret
 357+ 99B4
 358+ 99B4              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 99B4              ;
 360+ 99B4              ;	24/7/22
 361+ 99B4              ;
 362+ 99B4              ;	Ciclo_completo.
 363+ 99B4              ;
 364+ 99B4              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 99B4              ;
 366+ 99B4              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 99B4              ; 	Decrementamos (Columns).
 368+ 99B4              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 99B4              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 99B4
 371+ 99B4
 372+ 99B4 3A 35 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 99B7 FE FF        	cp $ff
 374+ 99B9 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 99BB E6 F0        	and $f0
 376+ 99BD 20 28        	jr nz,3F
 377+ 99BF
 378+ 99BF              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 99BF
 380+ 99BF 3A 35 88     	ld a,(CTRL_DESPLZ)
 381+ 99C2 47           	ld b,a
 382+ 99C3 3E F8        	ld a,$f8
 383+ 99C5 80           	add b
 384+ 99C6 32 35 88     	ld (CTRL_DESPLZ),a
 385+ 99C9 18 1C        	jr 3F
 386+ 99CB 21 2E 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 99CE 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 99CF AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 99D0 32 35 88     	ld (CTRL_DESPLZ),a
 390+ 99D3 3A 41 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 99D6 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 99D8 20 0A        	jr nz,2F
 393+ 99DA 2A 2F 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 99DD 23           	inc hl
 395+ 99DE 22 2F 88     	ld (Posicion_actual),hl
 396+ 99E1 CD 9B 9B     	call Genera_coordenadas
 397+ 99E4
 398+ 99E4              ; Inicia el puntero de Sprite.
 399+ 99E4
 400+ 99E4 CD C7 8B     2 call Inicia_puntero_objeto_der
 401+ 99E7 C9           3 ret
 402+ 99E8
 403+ 99E8              ; ******************************************************************************************************************************************************************************************
 404+ 99E8              ;
 405+ 99E8              ;	15/02/23
 406+ 99E8              ;
 407+ 99E8              ;	Mov_left.
 408+ 99E8              ;
 409+ 99E8              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 99E8              ;
 411+ 99E8              Mov_left
 412+ 99E8
 413+ 99E8 21 4F 88     	ld hl,Ctrl_0
 414+ 99EB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 99ED              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 99ED              ; 																	; _ en el caso de que no lo haya.
 417+ 99ED 3A 4F 88     	ld a,(Ctrl_0)
 418+ 99F0 CB 77        	bit 6,a
 419+ 99F2 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 99F4
 421+ 99F4 CD 0A 9B     	call Stop_Amadeus_left
 422+ 99F7 C8           	ret z
 423+ 99F8 20 4A        	jr nz,8F
 424+ 99FA
 425+ 99FA 3A 33 88     11 ld a,(Coordenada_X)
 426+ 99FD A7           	and a
 427+ 99FE 20 44        	jr nz,8F
 428+ 9A00
 429+ 9A00 3A 35 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9A03 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9A04 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9A06
 433+ 9A06              ; ---------- ---------- ----------
 434+ 9A06
 435+ 9A06 3A 56 88     	ld a,(Vel_left)
 436+ 9A09 FE 02        	cp 2
 437+ 9A0B 28 0F        	jr z,1F
 438+ 9A0D 38 04        	jr c,6F
 439+ 9A0F FE 04        	cp 4
 440+ 9A11 28 12        	jr z,7F
 441+ 9A13
 442+ 9A13              ; ---------- ---------- ----------
 443+ 9A13
 444+ 9A13 3A 35 88     6 ld a,(CTRL_DESPLZ)
 445+ 9A16 FE F8        	cp $f8
 446+ 9A18 20 2A        	jr nz,8F
 447+ 9A1A 18 10        	jr 4F
 448+ 9A1C 3A 35 88     1 ld a,(CTRL_DESPLZ)
 449+ 9A1F FE F9        	cp $f9
 450+ 9A21 20 21        	jr nz,8F
 451+ 9A23 18 07        	jr 4F
 452+ 9A25 3A 35 88     7 ld a,(CTRL_DESPLZ)
 453+ 9A28 FE FB        	cp $fb
 454+ 9A2A 20 18        	jr nz,8F
 455+ 9A2C
 456+ 9A2C              ; ---------- ---------- ----------
 457+ 9A2C
 458+ 9A2C              4
 459+ 9A2C CD 32 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9A2F              ;	call Reinicio
 461+ 9A2F
 462+ 9A2F              ; ---------- ---------- ----------
 463+ 9A2F
 464+ 9A2F 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9A31 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9A32
 467+ 9A32              ;	ld hl,(Indice_Sprite_izq)
 468+ 9A32              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9A32
 470+ 9A32 CD 4B 9A     	call DESPLZ_IZQ
 471+ 9A35 C1           	pop bc
 472+ 9A36 10 F9        	djnz 5B
 473+ 9A38 2A 2F 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9A3B 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9A3C 22 2F 88     	ld (Posicion_actual),hl
 476+ 9A3F CD 9B 9B     	call Genera_coordenadas
 477+ 9A42 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9A44
 479+ 9A44              ; ---------- ---------- ----------
 480+ 9A44
 481+ 9A44              ; Movemos, no hay recolocación.
 482+ 9A44
 483+ 9A44 2A 2F 88     8 ld hl,(Posicion_actual)
 484+ 9A47 CD 4B 9A     	call DESPLZ_IZQ
 485+ 9A4A C9           2 ret
 486+ 9A4B
 487+ 9A4B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9A4B              ;
 489+ 9A4B              ;	22/9/22
 490+ 9A4B
 491+ 9A4B              DESPLZ_IZQ
 492+ 9A4B
 493+ 9A4B CD 5A 9A     	call Desplaza_izquierda
 494+ 9A4E CD A6 9A         call modifica_parametros_1er_DESPLZ
 495+ 9A51 CD CE 9A     	call Ciclo_completo_2
 496+ 9A54 21 4F 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9A57 CB BE        	res 7,(hl)
 498+ 9A59 C9           	ret
 499+ 9A5A
 500+ 9A5A              Desplaza_izquierda
 501+ 9A5A
 502+ 9A5A 3A 56 88     	ld a,(Vel_left)
 503+ 9A5D 47           	ld b,a
 504+ 9A5E 2A 3D 88     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9A61 23           1 inc hl
 506+ 9A62 23           	inc hl
 507+ 9A63 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9A65 22 3D 88     	ld (Puntero_DESPLZ_izq),hl
 509+ 9A68 CD B2 8B     	call Extrae_address
 510+ 9A6B 22 31 88     	ld (Puntero_objeto),hl
 511+ 9A6E
 512+ 9A6E              ; Modifica (Puntero_DESPLZ_der).
 513+ 9A6E
 514+ 9A6E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9A6E              ; Cuántos movimientos hemos hecho ??
 516+ 9A6E              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9A6E
 518+ 9A6E 2A 39 88     7 ld hl,(Indice_Sprite_izq)
 519+ 9A71 EB           	ex de,hl
 520+ 9A72 A7           	and a
 521+ 9A73 ED 52        	sbc hl,de
 522+ 9A75 CB 3D        	srl l
 523+ 9A77 3E 08        6 ld a,8
 524+ 9A79 95           	sub l
 525+ 9A7A 30 1E        	jr nc,3F
 526+ 9A7C
 527+ 9A7C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9A7C              ; B="0".
 529+ 9A7C
 530+ 9A7C 04           4 inc b
 531+ 9A7D 3C           	inc a
 532+ 9A7E 20 FC        	jr nz,4B
 533+ 9A80 78           	ld a,b
 534+ 9A81 08           	ex af,af
 535+ 9A82 2A 39 88     	ld hl,(Indice_Sprite_izq)
 536+ 9A85 23           5 inc hl
 537+ 9A86 23           	inc hl
 538+ 9A87 10 FC        	djnz 5B
 539+ 9A89 22 3D 88     	ld (Puntero_DESPLZ_izq),hl
 540+ 9A8C CD B2 8B     	call Extrae_address
 541+ 9A8F 22 31 88     	ld (Puntero_objeto),hl
 542+ 9A92
 543+ 9A92              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9A92              ; _(Posicion_actual).
 545+ 9A92
 546+ 9A92 21 2F 88     	ld hl,Posicion_actual
 547+ 9A95 35           	dec (hl)
 548+ 9A96 08           	ex af,af
 549+ 9A97 6F           	ld l,a
 550+ 9A98 18 DD        	jr 6B
 551+ 9A9A
 552+ 9A9A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9A9A
 554+ 9A9A 47           3 ld b,a
 555+ 9A9B 2A 37 88     	ld hl,(Indice_Sprite_der)
 556+ 9A9E 23           2 inc hl
 557+ 9A9F 23           	inc hl
 558+ 9AA0 10 FC        	djnz 2B
 559+ 9AA2 22 3B 88     	ld (Puntero_DESPLZ_der),hl
 560+ 9AA5 C9           8 ret
 561+ 9AA6
 562+ 9AA6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9AA6              ;
 564+ 9AA6              ;	modifica_parametros_1er_DESPLZ
 565+ 9AA6              ;
 566+ 9AA6              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9AA6              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9AA6              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9AA6
 570+ 9AA6 3A 35 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9AA9 A7           	and a
 572+ 9AAA 20 1E        	jr nz,1F
 573+ 9AAC 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9AAD 32 35 88         ld (CTRL_DESPLZ),a
 575+ 9AB0 21 2E 88     	ld hl,Columns
 576+ 9AB3 34           	inc (hl)
 577+ 9AB4 3A 41 88     	ld a,(Cuad_objeto)
 578+ 9AB7 E6 01        	and 1
 579+ 9AB9 20 0F        	jr nz,1F
 580+ 9ABB 2A 2F 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9ABE 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9ABF 22 2F 88     	ld (Posicion_actual),hl
 583+ 9AC2 CD 9B 9B     	call Genera_coordenadas
 584+ 9AC5 CD 21 9B     	call Dec_CTRL_DESPLZ
 585+ 9AC8 18 03        	jr 2F
 586+ 9ACA CD 21 9B     1 call Dec_CTRL_DESPLZ
 587+ 9ACD C9           2 ret
 588+ 9ACE
 589+ 9ACE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9ACE
 591+ 9ACE 3A 35 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9AD1 FE F7        	cp $f7
 593+ 9AD3 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9AD5 30 2C        	jr nc,3F
 595+ 9AD7
 596+ 9AD7              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9AD7
 598+ 9AD7 06 00        	ld b,0
 599+ 9AD9 04           4 inc b
 600+ 9ADA 3C           	inc a
 601+ 9ADB FE F7        	cp $f7
 602+ 9ADD 20 FA        	jr nz,4B
 603+ 9ADF 3E FF        	ld a,$ff
 604+ 9AE1 90           	sub b
 605+ 9AE2 32 35 88     	ld (CTRL_DESPLZ),a
 606+ 9AE5 18 1C        	jr 3F
 607+ 9AE7
 608+ 9AE7              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9AE7
 610+ 9AE7 21 2E 88     1 ld hl,Columns
 611+ 9AEA 35           	dec (hl)
 612+ 9AEB AF           	xor a
 613+ 9AEC 32 35 88     	ld (CTRL_DESPLZ),a
 614+ 9AEF 3A 41 88     	ld a,(Cuad_objeto)
 615+ 9AF2 E6 01        	and 1
 616+ 9AF4 28 0A        	jr z,2F
 617+ 9AF6 2A 2F 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9AF9 2B           	dec hl
 619+ 9AFA 22 2F 88     	ld (Posicion_actual),hl
 620+ 9AFD CD 9B 9B     	call Genera_coordenadas
 621+ 9B00
 622+ 9B00              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9B00
 624+ 9B00 CD DA 8B     2 call Inicia_puntero_objeto_izq
 625+ 9B03 C9           3 ret
 626+ 9B04
 627+ 9B04              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9B04              ;
 629+ 9B04              ;	19/10/22
 630+ 9B04              ;
 631+ 9B04              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9B04              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9B04
 634+ 9B04 3A 33 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9B07 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9B09 C9           	ret
 637+ 9B0A
 638+ 9B0A              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9B0A              ;
 640+ 9B0A              ;	19/10/22
 641+ 9B0A              ;
 642+ 9B0A              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9B0A              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9B0A
 645+ 9B0A 3A 33 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9B0D FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9B0F C9           	ret
 648+ 9B10
 649+ 9B10              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9B10              ;
 651+ 9B10              ;	24/7/22
 652+ 9B10              ;
 653+ 9B10              ;	Inc_CTRL_DESPLZ
 654+ 9B10              ;
 655+ 9B10              ;
 656+ 9B10              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9B10
 658+ 9B10 21 35 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9B13 3A 57 88     	ld a,(Vel_right)
 660+ 9B16 A7           	and a
 661+ 9B17 28 06        	jr z,1F
 662+ 9B19 47           	ld b,a
 663+ 9B1A 34           3 inc (hl)
 664+ 9B1B 10 FD        	djnz 3B
 665+ 9B1D 18 01        	jr 2F
 666+ 9B1F 34           1 inc (hl)
 667+ 9B20 C9           2 ret
 668+ 9B21
 669+ 9B21              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9B21              ;
 671+ 9B21              ;	5/2/23
 672+ 9B21              ;
 673+ 9B21              ;	Dec_CTRL_DESPLZ
 674+ 9B21              ;
 675+ 9B21              ;
 676+ 9B21              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9B21
 678+ 9B21 21 35 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9B24 3A 56 88     	ld a,(Vel_left)
 680+ 9B27 A7           	and a
 681+ 9B28 28 06        	jr z,1F
 682+ 9B2A 47           	ld b,a
 683+ 9B2B 35           3 dec (hl)
 684+ 9B2C 10 FD        	djnz 3B
 685+ 9B2E 18 01        	jr 2F
 686+ 9B30 35           1 dec (hl)
 687+ 9B31 C9           2 ret
 688+ 9B32
 689+ 9B32              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9B32
 691+ 9B32 2A 2F 88     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9B35 01 1F 00     	ld bc,31
 693+ 9B38 A7           	and a
 694+ 9B39 ED 4A        	adc hl,bc
 695+ 9B3B 22 2F 88     	ld (Posicion_actual),hl
 696+ 9B3E 21 4F 88     	ld hl,Ctrl_0														; $xxx1
 697+ 9B41 CB C6        	set 0,(hl)
 698+ 9B43 C9           	ret
 699+ 9B44
 700+ 9B44              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9B44
 702+ 9B44 2A 2F 88     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9B47 01 1F 00     	ld bc,31
 704+ 9B4A A7           	and a
 705+ 9B4B ED 42        	sbc hl,bc
 706+ 9B4D 22 2F 88     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9B50 21 4F 88     	ld hl,Ctrl_0
 708+ 9B53 CB CE        	set 1,(hl)
 709+ 9B55 C9           	ret
 710+ 9B56
 711+ 9B56              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9B56
 713+ 9B56 24           Reaparece_abajo inc h
 714+ 9B57 01 E0 17     	ld bc,$17e0
 715+ 9B5A A7           	and a
 716+ 9B5B ED 4A        	adc hl,bc
 717+ 9B5D 22 2F 88     	ld (Posicion_actual),hl
 718+ 9B60 21 4F 88     	ld hl,Ctrl_0
 719+ 9B63 CB D6        	set 2,(hl)
 720+ 9B65 C9           	ret
 721+ 9B66
 722+ 9B66              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9B66
 724+ 9B66 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9B69 A7           	and a
 726+ 9B6A ED 42        	sbc hl,bc
 727+ 9B6C 22 2F 88     	ld (Posicion_actual),hl
 728+ 9B6F 21 4F 88     	ld hl,Ctrl_0
 729+ 9B72 CB DE        	set 3,(hl)
 730+ 9B74 C9           	ret
 731+ 9B75
 732+ 9B75              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9B75              ;
 734+ 9B75              ;	15/07/23
 735+ 9B75
 736+ 9B75              Reinicio
 737+ 9B75
 738+ 9B75              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9B75
 740+ 9B75 AF           	xor a
 741+ 9B76 21 66 88     	ld hl,Puntero_indice_mov_bucle
 742+ 9B79 CD 97 9B     	call Limpia_contenido_hl
 743+ 9B7C
 744+ 9B7C 21 2F 88     	ld hl,Posicion_actual
 745+ 9B7F CD 97 9B     	call Limpia_contenido_hl
 746+ 9B82
 747+ 9B82 CD 93 86     	call Inicializa_Puntero_indice_mov
 748+ 9B85 CD 58 9E     	call Inicia_Puntero_mov
 749+ 9B88
 750+ 9B88 21 68 88     	ld hl,Incrementa_puntero
 751+ 9B8B 06 05        	ld b,5
 752+ 9B8D 77           1 ld (hl),a
 753+ 9B8E 23           	inc hl
 754+ 9B8F 10 FC        	djnz 1B
 755+ 9B91
 756+ 9B91 21 54 88     	ld hl,Ctrl_2
 757+ 9B94 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9B96
 759+ 9B96 C9           	ret
 760+ 9B97
 761+ 9B97 77           Limpia_contenido_hl	ld (hl),a
 762+ 9B98 23           	inc hl
 763+ 9B99 77           	ld (hl),a
 764+ 9B9A C9           	ret
 765+ 9B9B
 766+ 9B9B
# file closed: Direcciones.asm
1816  9B9B              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B9B              ; ------------------------------------------------------------------------
   2+ 9B9B              ;
   3+ 9B9B              ;	22/1/24
   4+ 9B9B              ;
   5+ 9B9B              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B9B              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B9B              ;
   8+ 9B9B              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B9B              ;
  10+ 9B9B              ;	Modifica: A,BC y DE.
  11+ 9B9B
  12+ 9B9B 7D           Genera_coordenadas ld a,l
  13+ 9B9C E6 1F        	and $1f
  14+ 9B9E 32 33 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9BA1
  16+ 9BA1 3E 39        	ld a,$39											; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9BA3 BC           	cp h
  18+ 9BA4 20 05        	jr nz,4F
  19+ 9BA6
  20+ 9BA6 AF           	xor a
  21+ 9BA7 32 34 88     	ld (Coordenada_y),a
  22+ 9BAA C9           	ret
  23+ 9BAB
  24+ 9BAB CD 03 98     4 call calcula_tercio
  25+ 9BAE 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  26+ 9BAF
  27+ 9BAF 1E 00        	ld e,0
  28+ 9BB1 7D           	ld a,l
  29+ 9BB2 E6 E0        	and $e0
  30+ 9BB4 28 01        	jr z,1F
  31+ 9BB6 04           	inc b
  32+ 9BB7
  33+ 9BB7 04           1 inc b
  34+ 9BB8 05           	dec b
  35+ 9BB9 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  36+ 9BBB              ;														; _ , salimos.
  37+ 9BBB 1C           3 inc e
  38+ 9BBC D6 20        	sub 32
  39+ 9BBE 20 FB        	jr nz,3B
  40+ 9BC0 10 F5        	djnz 1B
  41+ 9BC2
  42+ 9BC2 7B           2 ld a,e
  43+ 9BC3 32 34 88     	ld (Coordenada_y),a
  44+ 9BC6
  45+ 9BC6 C9           	ret
  46+ 9BC7
  47+ 9BC7              ; ------------------------------------------------------------------------
  48+ 9BC7              ;	28/05/23
  49+ 9BC7              ;
  50+ 9BC7              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  51+ 9BC7              ;	Fila superior "0", Columna izquierda "0".
  52+ 9BC7              ;
  53+ 9BC7              ;	Input: HL contendrá la posición del proyectil en pantalla.
  54+ 9BC7              ;	Output: DE contendrá las coordenadas del disparo:
  55+ 9BC7              ;
  56+ 9BC7              ;		DE="$120d"
  57+ 9BC7              ;
  58+ 9BC7              ;		D, (Coordenada_X), Columnas, $12
  59+ 9BC7              ;		E, (Coordenada_y), Filas, $0d
  60+ 9BC7              ;
  61+ 9BC7              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  62+ 9BC7
  63+ 9BC7              ;	Modifica: A,BC y DE.
  64+ 9BC7
  65+ 9BC7
  66+ 9BC7              Genera_coordenadas_disparo
  67+ 9BC7
  68+ 9BC7              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  69+ 9BC7
  70+ 9BC7 7D           	ld a,l
  71+ 9BC8 E6 1F        	and $1f
  72+ 9BCA 57           	ld d,a 												; Columnas en D. Coordenada_X.
  73+ 9BCB CD 03 98     	call calcula_tercio
  74+ 9BCE 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  75+ 9BCF 1E 00        	ld e,0
  76+ 9BD1 7D           	ld a,l
  77+ 9BD2 E6 E0        	and $e0
  78+ 9BD4 28 01        	jr z,1F
  79+ 9BD6 04           	inc b
  80+ 9BD7 1C           1 inc e
  81+ 9BD8 D6 20        	sub 32
  82+ 9BDA 20 FB        	jr nz,1B
  83+ 9BDC 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  84+ 9BDE C9           	ret
  85+ 9BDF
# file closed: Genera_coordenadas.asm
1817  9BDF              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9BDF              ; Relojes y temporizaciones.
   2+ 9BDF
   3+ 9BDF              ; ------------------------------------------------------
   4+ 9BDF              ;
   5+ 9BDF              ;	16/7/23
   6+ 9BDF              ;
   7+ 9BDF              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9BDF              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9BDF              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9BDF              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9BDF              ;
  12+ 9BDF              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9BDF              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9BDF
  15+ 9BDF              ; Disparo_entidad db 1
  16+ 9BDF              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9BDF              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9BDF
  19+ 9BDF              Habilita_disparos
  20+ 9BDF
  21+ 9BDF 7E           	ld a,(hl)
  22+ 9BE0 A7           	and a
  23+ 9BE1 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9BE2
  25+ 9BE2 EB           	ex de,hl
  26+ 9BE3
  27+ 9BE3 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9BE4 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9BE5
  30+ 9BE5              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9BE5
  32+ 9BE5 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9BE6 7E           	ld a,(hl)
  34+ 9BE7 23           	inc hl
  35+ 9BE8 77           	ld (hl),a
  36+ 9BE9
  37+ 9BE9 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9BEA 3E 01        	ld a,1
  39+ 9BEC 77           	ld (hl),a
  40+ 9BED C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1818  9BEE              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9BEE
   2+ 9BEE
   3+ 9BEE              ;   07/07/23
   4+ 9BEE              ;
   5+ 9BEE              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9BEE              ;
   7+ 9BEE              ;   Codificación:
   8+ 9BEE              ;
   9+ 9BEE              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9BEE              ;
  11+ 9BEE              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9BEE              ;
  13+ 9BEE              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9BEE              ;
  15+ 9BEE              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9BEE              ;
  17+ 9BEE              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9BEE              ;                               ..... %01000010 Vel_up 4
  19+ 9BEE              ;                                               Vel_down 2
  20+ 9BEE              ;                               ..... $42
  21+ 9BEE              ;
  22+ 9BEE              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9BEE              ;
  24+ 9BEE              ;                               ..... %01000010 Vel_left 4
  25+ 9BEE              ;                                               Vel_right 2
  26+ 9BEE              ;                               ..... $42
  27+ 9BEE              ;
  28+ 9BEE              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9BEE              ;
  30+ 9BEE              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9BEE              ;
  32+ 9BEE              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9BEE              ;
  34+ 9BEE              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9BEE              ;                                     $53
  36+ 9BEE              ;
  37+ 9BEE              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9BEE              ;
  39+ 9BEE              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9BEE              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9BEE              ;
  42+ 9BEE              ;                       Arriba ..... $81
  43+ 9BEE              ;                       Arriba - izquierda ..... $a1
  44+ 9BEE              ;                       Arriba - derecha ..... $91
  45+ 9BEE              ;
  46+ 9BEE              ;                       Abajo ..... $41
  47+ 9BEE              ;                       Abajo - izquierda ..... $61
  48+ 9BEE              ;                       Abajo - derecha ..... $51
  49+ 9BEE              ;
  50+ 9BEE              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9BEE              ;
  52+ 9BEE              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9BEE              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9BEE              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9BEE              ;
  56+ 9BEE              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9BEE              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9BEE              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9BEE              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9BEE              ;
  61+ 9BEE              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9BEE              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9BEE              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9BEE              ;
  65+ 9BEE              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9BEE              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9BEE              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9BEE              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9BEE
  70+ 9BEE              ; ----- ----- ----- ----- -----
  71+ 9BEE
  72+ 9BEE 1A 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9BF0 22 9C            defw F_1
  74+ 9BF2 2C 9C            defw F_2
  75+ 9BF4 36 9C            defw Codo_abajo_derecha
  76+ 9BF6 6A 9C            defw Derecha_y_subiendo
  77+ 9BF8 74 9C            defw Derecha_y_subiendo_1
  78+ 9BFA 7E 9C            defw F_3
  79+ 9BFC 88 9C            defw F_4
  80+ 9BFE 92 9C            defw Derecha_y_bajando
  81+ 9C00 9C 9C            defw Derecha_y_bajando_1
  82+ 9C02 A6 9C            defw Derecha_y_bajando_2
  83+ 9C04 B0 9C            defw Codo_derecha_abajo
  84+ 9C06 E0 9C            defw Codo_abajo_izq.
  85+ 9C08 14 9D            defw Izquierda_y_subiendo
  86+ 9C0A 1E 9D            defw Izquierda_y_subiendo_1
  87+ 9C0C 28 9D            defw F_5
  88+ 9C0E 32 9D            defw F_6
  89+ 9C10 3C 9D            defw Izquierda_y_bajando
  90+ 9C12 46 9D            defw Izquierda_y_bajando_1
  91+ 9C14 50 9D            defw Izquierda_y_bajando_2
  92+ 9C16 5A 9D            defw Codo_izquierda_abajo
  93+ 9C18 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C1A
  95+ 9C1A 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C1E 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9C22
  98+ 9C22 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9C26 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9C2A 08 00
 100+ 9C2C 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9C30 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9C34 0F FE
 102+ 9C36
 103+ 9C36 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9C3A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9C3E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9C42 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9C46 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9C4A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9C4E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9C52 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9C56 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9C5A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9C5E 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9C62 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9C66 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9C6A
 117+ 9C6A 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9C6E 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9C72 06 00
 119+ 9C74
 120+ 9C74 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9C78 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9C7C 02 00
 122+ 9C7E
 123+ 9C7E 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9C82 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9C86 04 00
 125+ 9C88 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9C8C 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9C90 08 00
 127+ 9C92
 128+ 9C92 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9C96 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9C9A 02 00
 130+ 9C9C
 131+ 9C9C 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9CA0 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9CA4 06 00
 133+ 9CA6
 134+ 9CA6 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9CAA 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9CAE 06 00
 136+ 9CB0
 137+ 9CB0              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9CB0
 139+ 9CB0 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9CB4 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9CB8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9CBC 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9CC0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9CC4 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9CC8 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9CCC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9CD0 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9CD4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9CD8 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9CDC 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9CE0
 152+ 9CE0 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9CE4 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9CE8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9CEC 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9CF0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9CF4 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9CF8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9CFC 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D00 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D04 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D08 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D0C 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D10 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D14
 166+ 9D14 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D18 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D1C 06 00
 168+ 9D1E
 169+ 9D1E 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9D22 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9D26 02 00
 171+ 9D28
 172+ 9D28 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9D2C 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9D30 04 00
 174+ 9D32 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9D36 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9D3A 08 00
 176+ 9D3C
 177+ 9D3C 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9D40 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9D44 02 00
 179+ 9D46
 180+ 9D46 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9D4A 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9D4E 06 00
 182+ 9D50
 183+ 9D50 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9D54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9D58 06 00
 185+ 9D5A
 186+ 9D5A 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9D5E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9D62 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9D66 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9D6A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9D6E 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9D72 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9D76 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9D7A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9D7E 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9D82 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9D86 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9D8A
 199+ 9D8A              ; ----- ----- ----- ----- -----
 200+ 9D8A              ;
 201+ 9D8A              ;   28/12/23
 202+ 9D8A
 203+ 9D8A              Movimiento
 204+ 9D8A
 205+ 9D8A              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9D8A
 207+ 9D8A 3A 54 88         ld a,(Ctrl_2)
 208+ 9D8D CB 57            bit 2,a
 209+ 9D8F 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9D91
 211+ 9D91 2A 64 88         ld hl,(Puntero_mov)
 212+ 9D94 7E               ld a,(hl)
 213+ 9D95
 214+ 9D95              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9D95
 216+ 9D95              Inicia_desplazamiento.
 217+ 9D95
 218+ 9D95              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9D95
 220+ 9D95 CD 95 9E         call Ajusta_velocidad_desplazamiento
 221+ 9D98
 222+ 9D98              ; Iniciamos (Repetimos_mov).
 223+ 9D98
 224+ 9D98 7E               ld a,(hl)
 225+ 9D99 E6 0F            and $0f
 226+ 9D9B 32 6A 88         ld (Repetimos_desplazamiento),a
 227+ 9D9E 32 6B 88         ld (Repetimos_desplazamiento_backup),a
 228+ 9DA1
 229+ 9DA1              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9DA1
 231+ 9DA1 23               inc hl
 232+ 9DA2 7E               ld a,(hl)
 233+ 9DA3 32 6D 88         ld (Cola_de_desplazamiento),a
 234+ 9DA6 2B               dec hl
 235+ 9DA7
 236+ 9DA7 21 54 88         ld hl,Ctrl_2
 237+ 9DAA CB D6            set 2,(hl)
 238+ 9DAC
 239+ 9DAC              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9DAC              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9DAC
 242+ 9DAC              Desplazamiento_iniciado
 243+ 9DAC
 244+ 9DAC CD 63 9E         call Aplica_desplazamiento
 245+ 9DAF
 246+ 9DAF              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9DAF
 248+ 9DAF 3A 8D 88         ld a,(Ctrl_3)
 249+ 9DB2 CB 57            bit 2,a
 250+ 9DB4 C0               ret nz
 251+ 9DB5
 252+ 9DB5 3A 54 88         ld a,(Ctrl_2)
 253+ 9DB8 CB 67            bit 4,a
 254+ 9DBA C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9DBB
 256+ 9DBB 21 6A 88     3 ld hl,Repetimos_desplazamiento
 257+ 9DBE 35               dec (hl)
 258+ 9DBF C0               ret nz
 259+ 9DC0
 260+ 9DC0              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9DC0              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9DC0              ; Analiza (Cola_de_desplazamiento).
 263+ 9DC0
 264+ 9DC0 3A 6D 88     Cola ld a,(Cola_de_desplazamiento)
 265+ 9DC3 A7               and a
 266+ 9DC4 CC BE 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9DC7 28 30            jr z,Reinicia_el_movimiento
 268+ 9DC9
 269+ 9DC9 FE FF            cp $ff
 270+ 9DCB 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9DCD
 272+ 9DCD FE FE            cp $fe
 273+ 9DCF CC 3C 9E         call z,Fijamos_bucle
 274+ 9DD2 28 25            jr z,Reinicia_el_movimiento
 275+ 9DD4
 276+ 9DD4 FE FD            cp $fd
 277+ 9DD6 20 11            jr nz,1F
 278+ 9DD8
 279+ 9DD8              ; ---
 280+ 9DD8              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9DD8
 282+ 9DD8 3A 54 88         ld a,(Ctrl_2)
 283+ 9DDB CB 5F            bit 3,a
 284+ 9DDD 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9DDF
 286+ 9DDF              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9DDF
 288+ 9DDF 21 54 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9DE2 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9DE4
 291+ 9DE4 CD 4D 9E         call Inicia_Repetimos_movimiento
 292+ 9DE7 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9DE9              ; ---
 294+ 9DE9
 295+ 9DE9 FE 01        1 cp 1
 296+ 9DEB CA 26 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9DEE
 298+ 9DEE 3D               dec a
 299+ 9DEF 32 6D 88         ld (Cola_de_desplazamiento),a
 300+ 9DF2
 301+ 9DF2 3A 6B 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9DF5 32 6A 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9DF8              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9DF8 C9               ret
 305+ 9DF9
 306+ 9DF9              Reinicia_el_movimiento
 307+ 9DF9
 308+ 9DF9 3A 54 88         ld a,(Ctrl_2)
 309+ 9DFC CB 5F            bit 3,a
 310+ 9DFE 28 1B            jr z,2F
 311+ 9E00
 312+ 9E00              ; (Cola_de_desplazamiento)="254".
 313+ 9E00
 314+ 9E00 21 6C 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9E03 35               dec (hl)
 316+ 9E04 20 15            jr nz,2F
 317+ 9E06
 318+ 9E06              ; Fin de las repeticiones del último movimiento.
 319+ 9E06
 320+ 9E06 21 54 88         ld hl,Ctrl_2
 321+ 9E09 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9E0B
 323+ 9E0B 2A 64 88         ld hl,(Puntero_mov)
 324+ 9E0E 23               inc hl
 325+ 9E0F 23               inc hl
 326+ 9E10 23               inc hl
 327+ 9E11 22 64 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9E14              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9E14 7E               ld a,(hl)
 330+ 9E15 32 6D 88         ld (Cola_de_desplazamiento),a
 331+ 9E18
 332+ 9E18 C3 C0 9D         jp Cola
 333+ 9E1B
 334+ 9E1B CD 58 9E     2 call Inicia_Puntero_mov
 335+ 9E1E
 336+ 9E1E 21 54 88         ld hl,Ctrl_2
 337+ 9E21 CB 96            res 2,(hl)
 338+ 9E23
 339+ 9E23 C3 8A 9D         jp Movimiento
 340+ 9E26
 341+ 9E26              Siguiente_desplazamiento
 342+ 9E26
 343+ 9E26              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9E26              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9E26
 346+ 9E26 21 54 88         ld hl,Ctrl_2
 347+ 9E29 CB 96            res 2,(hl)
 348+ 9E2B
 349+ 9E2B 2A 64 88         ld hl,(Puntero_mov)
 350+ 9E2E 23               inc hl
 351+ 9E2F 23               inc hl
 352+ 9E30 22 64 88         ld (Puntero_mov),hl
 353+ 9E33
 354+ 9E33 7E               ld a,(hl)
 355+ 9E34 A7               and a
 356+ 9E35 CC BE 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9E38 CA F9 9D         jp z,Reinicia_el_movimiento
 358+ 9E3B
 359+ 9E3B C9               ret
 360+ 9E3C
 361+ 9E3C              ; Subrutinas -----------------------------------------
 362+ 9E3C              ; ---------- --------- --------- ---------- ----------
 363+ 9E3C              ;
 364+ 9E3C              ;   24/07/23
 365+ 9E3C              ;
 366+ 9E3C              ;   Fijamos_bucle
 367+ 9E3C              ;
 368+ 9E3C              ;
 369+ 9E3C
 370+ 9E3C              Fijamos_bucle
 371+ 9E3C
 372+ 9E3C 3A 68 88         ld a,(Incrementa_puntero)
 373+ 9E3F 3C               inc a
 374+ 9E40 32 69 88         ld (Incrementa_puntero_backup),a
 375+ 9E43
 376+ 9E43 CD BE 9E         call Incrementa_Puntero_indice_mov
 377+ 9E46 2A 62 88         ld hl,(Puntero_indice_mov)
 378+ 9E49 22 66 88         ld (Puntero_indice_mov_bucle),hl
 379+ 9E4C C9               ret
 380+ 9E4D
 381+ 9E4D              ; ---------- --------- --------- ---------- ----------
 382+ 9E4D              ;
 383+ 9E4D              ;   07/7/23
 384+ 9E4D              ;
 385+ 9E4D              ;   Inicia_Repetimos_movimiento
 386+ 9E4D              ;
 387+ 9E4D              ;
 388+ 9E4D
 389+ 9E4D              Inicia_Repetimos_movimiento
 390+ 9E4D
 391+ 9E4D              ; Iniciamos (Repetimos_movimiento).
 392+ 9E4D
 393+ 9E4D DD 2A 64 88      ld ix,(Puntero_mov)
 394+ 9E51 DD 7E 02         ld a,(ix+2)
 395+ 9E54 32 6C 88         ld (Repetimos_movimiento),a
 396+ 9E57
 397+ 9E57 C9               ret
 398+ 9E58
 399+ 9E58              ; ---------- --------- --------- ---------- ----------
 400+ 9E58              ;
 401+ 9E58              ;   26/6/23
 402+ 9E58              ;
 403+ 9E58              ;   Inicia_Puntero_mov
 404+ 9E58              ;
 405+ 9E58              ;
 406+ 9E58
 407+ 9E58 2A 62 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9E5B 5E               ld e,(hl)
 409+ 9E5C 23               inc hl
 410+ 9E5D 56               ld d,(hl)
 411+ 9E5E EB               ex de,hl
 412+ 9E5F 22 64 88         ld (Puntero_mov),hl
 413+ 9E62 C9               ret
 414+ 9E63
 415+ 9E63              ; ---------- --------- --------- ---------- ----------
 416+ 9E63              ;
 417+ 9E63              ;   27/06/23
 418+ 9E63              ;
 419+ 9E63              ;   Aplica_movimiento.
 420+ 9E63
 421+ 9E63              Aplica_desplazamiento
 422+ 9E63
 423+ 9E63              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9E63
 425+ 9E63 2A 64 88         ld hl, (Puntero_mov)
 426+ 9E66
 427+ 9E66 7E               ld a,(hl)
 428+ 9E67 E6 F0            and $f0
 429+ 9E69 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9E6A
 431+ 9E6A CB 7E            bit 7,(hl)
 432+ 9E6C 28 03            jr z,1F
 433+ 9E6E CD 82 98         call Mov_up
 434+ 9E71 2A 64 88     1 ld hl, (Puntero_mov)
 435+ 9E74 CB 76            bit 6,(hl)
 436+ 9E76 28 09            jr z,2F
 437+ 9E78 CD 49 98         call Mov_down
 438+ 9E7B
 439+ 9E7B              ; Se ha aplicado reinicio ???
 440+ 9E7B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9E7B
 442+ 9E7B 3A 8D 88         ld a,(Ctrl_3)
 443+ 9E7E CB 57            bit 2,a
 444+ 9E80 C0               ret nz
 445+ 9E81
 446+ 9E81 2A 64 88     2 ld hl, (Puntero_mov)
 447+ 9E84 CB 6E            bit 5,(hl)
 448+ 9E86 28 03            jr z,3F
 449+ 9E88 CD E8 99         call Mov_left
 450+ 9E8B 2A 64 88     3 ld hl, (Puntero_mov)
 451+ 9E8E CB 66            bit 4,(hl)
 452+ 9E90 C8               ret z
 453+ 9E91 CD C5 98         call Mov_right
 454+ 9E94 C9               ret
 455+ 9E95
 456+ 9E95              ; ---------- --------- --------- ---------- ----------
 457+ 9E95              ;
 458+ 9E95              ;   26/06/23
 459+ 9E95              ;
 460+ 9E95              ;   Ajusta_velocidad_desplazamiento.
 461+ 9E95
 462+ 9E95              Ajusta_velocidad_desplazamiento
 463+ 9E95
 464+ 9E95              ; 1er byte de la cadena de movimiento.
 465+ 9E95              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9E95
 467+ 9E95 CD B3 9E         call Extrae_nibble_alto
 468+ 9E98
 469+ 9E98 32 58 88         ld (Vel_up),a
 470+ 9E9B 79               ld a,c
 471+ 9E9C E6 0F            and $0f
 472+ 9E9E 32 59 88         ld (Vel_down),a
 473+ 9EA1
 474+ 9EA1              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9EA1              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9EA1
 477+ 9EA1 23               inc hl
 478+ 9EA2 CD B3 9E         call Extrae_nibble_alto
 479+ 9EA5
 480+ 9EA5 32 56 88         ld (Vel_left),a
 481+ 9EA8 79               ld a,c
 482+ 9EA9 E6 0F            and $0f
 483+ 9EAB 32 57 88         ld (Vel_right),a
 484+ 9EAE
 485+ 9EAE              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9EAE
 487+ 9EAE 23               inc hl
 488+ 9EAF 22 64 88         ld (Puntero_mov),hl
 489+ 9EB2 C9               ret
 490+ 9EB3
 491+ 9EB3 06 04        Extrae_nibble_alto ld b,4
 492+ 9EB5 7E               ld a,(hl)
 493+ 9EB6 4F               ld c,a
 494+ 9EB7 E6 F0            and $f0
 495+ 9EB9 CB 3F        1 srl a
 496+ 9EBB 10 FC            djnz 1B
 497+ 9EBD C9               ret
 498+ 9EBE
 499+ 9EBE              ; ---------- --------- --------- ---------- ----------
 500+ 9EBE              ;
 501+ 9EBE              ;   5/7/23
 502+ 9EBE              ;
 503+ 9EBE              ;   Incrementa_Puntero_indice_mov
 504+ 9EBE
 505+ 9EBE              Incrementa_Puntero_indice_mov
 506+ 9EBE
 507+ 9EBE 21 68 88         ld hl,Incrementa_puntero
 508+ 9EC1 34               inc (hl)
 509+ 9EC2
 510+ 9EC2 2A 62 88         ld hl,(Puntero_indice_mov)
 511+ 9EC5 01 02 00         ld bc,2
 512+ 9EC8 A7               and a
 513+ 9EC9 09               add hl,bc
 514+ 9ECA 22 62 88         ld (Puntero_indice_mov),hl
 515+ 9ECD
 516+ 9ECD 7E               ld a,(hl)
 517+ 9ECE A7               and a
 518+ 9ECF
 519+ 9ECF              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9ECF
 521+ 9ECF              ;    jr z,$
 522+ 9ECF
 523+ 9ECF              ;! Reinicia el Patrón de movimiento.
 524+ 9ECF
 525+ 9ECF CC D4 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9ED2
 527+ 9ED2 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9ED3
 529+ 9ED3 C9               ret
 530+ 9ED4
 531+ 9ED4              ; ---------- --------- --------- ---------- ----------
 532+ 9ED4              ;
 533+ 9ED4              ;   15/01/24
 534+ 9ED4              ;
 535+ 9ED4              ;   Inicializa_Puntero_indice_mov
 536+ 9ED4
 537+ 9ED4              Inicializa_Puntero_indice_mov_2
 538+ 9ED4
 539+ 9ED4              ; Existe etiqueta de bucle principal???
 540+ 9ED4
 541+ 9ED4 2A 66 88         ld hl,(Puntero_indice_mov_bucle)
 542+ 9ED7 24               inc h
 543+ 9ED8 25               dec h
 544+ 9ED9 28 05            jr z,2F
 545+ 9EDB
 546+ 9EDB 22 62 88         ld (Puntero_indice_mov),hl
 547+ 9EDE 18 14            jr 3F
 548+ 9EE0
 549+ 9EE0              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9EE0
 551+ 9EE0 3A 68 88     2 ld a,(Incrementa_puntero)
 552+ 9EE3 47               ld b,a
 553+ 9EE4
 554+ 9EE4 2A 62 88         ld hl,(Puntero_indice_mov)
 555+ 9EE7 2B           1 dec hl
 556+ 9EE8 2B               dec hl
 557+ 9EE9 10 FC            djnz 1B
 558+ 9EEB 22 62 88         ld (Puntero_indice_mov),hl
 559+ 9EEE
 560+ 9EEE AF               xor a
 561+ 9EEF 32 68 88         ld (Incrementa_puntero),a
 562+ 9EF2 18 06            jr 4F
 563+ 9EF4
 564+ 9EF4 3A 69 88     3 ld a,(Incrementa_puntero_backup)
 565+ 9EF7 32 68 88         ld (Incrementa_puntero),a
 566+ 9EFA C9           4 ret
 567+ 9EFB
 568+ 9EFB              ; ----------------------------------------------------------------------
 569+ 9EFB              ;
 570+ 9EFB              ;   25/01/24
 571+ 9EFB              ;
 572+ 9EFB              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 573+ 9EFB
 574+ 9EFB 3A 2C 88     Situa_en_Contador_general_de_mov_masticados ld a,(Tipo)
 575+ 9EFE CD 92 87         call Calcula_salto_en_BC
 576+ 9F01 21 5A 88         ld hl,Contador_general_de_mov_masticados_Entidad_1
 577+ 9F04 A7               and a
 578+ 9F05 ED 4A            adc hl,bc
 579+ 9F07 C9               ret
 580+ 9F08
 581+ 9F08
# file closed: Patrones_de_mov.asm
1819  9F08              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F08              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F08              ;
   3+ 9F08              ;	12/12/23
   4+ 9F08              ;
   5+ 9F08              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F08
   7+ 9F08              ;	ADC HL,SP	LD (addr),SP
   8+ 9F08              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F08              ;	ADD IX,SP	LD SP,nn
  10+ 9F08              ; 	ADD IY,SP	LD SP,HL
  11+ 9F08              ;				LD SP,IX
  12+ 9F08              ;	DEC SP		LD SP,IY
  13+ 9F08
  14+ 9F08              ;	EX (SP),HL
  15+ 9F08              ;	EX (SP),IX
  16+ 9F08              ;	EX (SP),IY
  17+ 9F08
  18+ 9F08              ;	INC SP
  19+ 9F08
  20+ 9F08                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 7F 88      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 49 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 4B 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 6E 88         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 87 88         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 4F 88     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 8B 88         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 85 88     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 6E 88         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 87 88         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 4F 88     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 8B 88         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 7F 88      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 85 88     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 7F 88  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 85 88         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 85 88         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1820  718B
1821  718B              	SAVESNA "Pruebas.sna", START
1822  718B
1823  718B
1824  718B
1825  718B
# file closed: Banco_de_pruebas.asm
