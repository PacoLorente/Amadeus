# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 E1 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15 3E 02        	ld a,2
  35  AA17 D3 FE        	out ($fe),a
  36  AA19
  37  AA19 3A EB 89     	ld a,(Ctrl_3)
  38  AA1C CB 47        	bit 0,a
  39  AA1E 28 0C        	jr z,1F 												; No pintamos si el FRAME no se ha completado.
  40  AA20
  41  AA20              ; Borramos:
  42  AA20
  43  AA20 CD E2 9A     	call Pinta_Sprites
  44  AA23
  45  AA23              ; Pintamos:
  46  AA23
  47  AA23 2A E3 89     	ld hl,(Album_de_pintado)
  48  AA26 22 E9 89     	ld (Scanlines_album_SP),hl
  49  AA29
  50  AA29 CD E2 9A     	call Pinta_Sprites
  51  AA2C
  52  AA2C              ;	ld a,6
  53  AA2C              ;	out ($fe),a
  54  AA2C              ;	call Pinta_Amadeus										; Borde amarillo.
  55  AA2C
  56  AA2C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  57  AA2C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  58  AA2C
  59  AA2C              ;	ld a,7
  60  AA2C              ;	out ($fe),a												; Borde blanco.
  61  AA2C              ;	call Guarda_parametros_DRAW
  62  AA2C              ;	call Restore_Amadeus
  63  AA2C
  64  AA2C              ; Posible colisión Entidad-Amadeus ???
  65  AA2C
  66  AA2C              ;	ld a,(Impacto2)
  67  AA2C              ;	bit 2,a
  68  AA2C              ;	jr z,1F
  69  AA2C
  70  AA2C              ;	call Detecta_colision_nave_entidad
  71  AA2C
  72  AA2C              ;1 ld a,4
  73  AA2C              ;	out ($fe),a
  74  AA2C              ;	call Gestiona_Amadeus
  75  AA2C
  76  AA2C              ;	ld a,7
  77  AA2C              ;	out ($fe),a											; Borde blanco.
  78  AA2C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  79  AA2C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  80  AA2C
  81  AA2C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  82  AA2C
  83  AA2C              ;	call Recupera_parametros_DRAW
  84  AA2C
  85  AA2C CD 00 8C     1 call Actualiza_relojes
  86  AA2F
  87  AA2F 21 EB 89     	ld hl,Ctrl_3
  88  AA32 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  89  AA34
  90  AA34 FD E1        	pop iy
  91  AA36 DD E1        	pop ix
  92  AA38 F1           	pop af
  93  AA39 C1           	pop bc
  94  AA3A D1           	pop de
  95  AA3B E1           	pop hl
  96  AA3C D9           	exx
  97  AA3D C1           	pop bc
  98  AA3E D1           	pop de
  99  AA3F E1           	pop hl
 100  AA40 08           	ex af,af'
 101  AA41 F1           	pop af
 102  AA42 08           	ex af,af'
 103  AA43 D9           	exx
 104  AA44
 105  AA44 ED 7B E1 89  	ld sp,(Stack_3)
 106  AA48
 107  AA48 FB           	ei
 108  AA49
 109  AA49 3E 01        	ld a,1												; Borde azul.
 110  AA4B D3 FE        	out ($fe),a
 111  AA4D
 112  AA4D C9           	ret
 113  AA4E
 114  AA4E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 115  AA4E
 116  AA4E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA4E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA4E              ;
   3+ AA4E              ;	17/02/23
   4+ AA4E              ;
   5+ AA4E              ;	Sprites e índices.
   6+ AA4E
   7+ AA4E              	org $8232
   8+ 8232
   9+ 8232              ; Disparo.
  10+ 8232
  11+ 8232 3A 82        Indice_disparo defw Disparo_0
  12+ 8234 40 82        	defw Disparo_f9
  13+ 8236 46 82        	defw Disparo_fb
  14+ 8238 4C 82        	defw Disparo_fd
  15+ 823A
  16+ 823A              ; Disparo (CTRL_DESPLZ)="0".
  17+ 823A 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 823E 01 80
  18+ 8240              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8240 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8244 00 60
  20+ 8246              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8246 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 824A 18 00
  22+ 824C              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 824C 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8250 06 00
  24+ 8252
  25+ 8252              ; ----------------------------------------------------------------------------------------
  26+ 8252
  27+ 8252              ; Badsat_izq. 2x2.
  28+ 8252
  29+ 8252 62 82        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8254 C0 82        	defw Badsat_izq_fe
  31+ 8256 90 82        	defw Badsat_izq_fd
  32+ 8258 60 82        	defw Badsat_izq_fc
  33+ 825A 30 82        	defw Badsat_izq_fb
  34+ 825C 00 82        	defw Badsat_izq_fa
  35+ 825E B2 82        	defw Badsat_izq_f9
  36+ 8260 82 82        	defw Badsat_izq_f8
  37+ 8262
  38+ 8262 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8266 02 2A 02 55
  39+ 826A 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 826E 7F E8 03 60
  40+ 8272 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8276 2B E8 54 40
  41+ 827A AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 827E 28 00 10 00
  42+ 8282
  43+ 8282 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8286 0A 00 01 15
  44+ 828A 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 828E 01 55 00 01
  45+ 8292 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8296 00 01 B0 00
  46+ 829A 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 829E FC 00 15 F4
  47+ 82A2 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 82A6 55 30 00 2A
  48+ 82AA 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 82AE 00 08 00 00
  49+ 82B2
  50+ 82B2 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 82B6 85 00 00 8A
  51+ 82BA 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 82BE 00 AA 80 00
  52+ 82C2 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 82C6 00 00 D8 00
  53+ 82CA 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 82CE FE 00 0A FA
  54+ 82D2 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 82D6 2A 98 00 15
  55+ 82DA 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 82DE 00 04 00 00
  56+ 82E2
  57+ 82E2              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 30 83        	defw Badsat_der_f8
  97+ 82F4 60 83        	defw Badsat_der_f9
  98+ 82F6 90 83        	defw Badsat_der_fa
  99+ 82F8 C0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 105+ 8303 28 40 00     	DEFB    $28,$40,$00
 106+ 8306 54 40 00     	DEFB	$54,$40,$00
 107+ 8309 AA 40 00     	DEFB	$AA,$40,$00
 108+ 830C 55 40 00     	DEFB	$55,$40,$00
 109+ 830F 2A 40 00     	DEFB	$2A,$40,$00
 110+ 8312 17 FE 00     	DEFB	$17,$FE,$00
 111+ 8315 06 C0 00     	DEFB	$06,$C0,$00
 112+ 8318 07 50 00     	DEFB	$07,$50,$00
 113+ 831B 1F E8 00     	DEFB	$1F,$E8,$00
 114+ 831E 17 D4 00     	DEFB	$17,$D4,$00
 115+ 8321 02 2A 00     	DEFB	$02,$2A,$00
 116+ 8324 06 55 00     	DEFB	$06,$55,$00
 117+ 8327 00 2A 00     	DEFB	$00,$2A,$00
 118+ 832A 00 14 00     	DEFB	$00,$14,$00
 119+ 832D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 120+ 8330
 121+ 8330 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 121+ 8334 20 00 2A 20
 122+ 8338 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 122+ 833C 2A A0 00 15
 123+ 8340 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 123+ 8344 00 03 60 00
 124+ 8348 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 124+ 834C F4 00 0B EA
 125+ 8350 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 125+ 8354 03 2A 80 00
 126+ 8358 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 126+ 835C 00 00 04 00
 127+ 8360
 128+ 8360 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 128+ 8364 10 00 15 10
 129+ 8368 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 129+ 836C 15 50 00 0A
 130+ 8370 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 130+ 8374 80 01 B0 00
 131+ 8378 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 131+ 837C FA 00 05 F5
 132+ 8380 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 132+ 8384 01 95 40 00
 133+ 8388 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 133+ 838C 00 00 02 00
 134+ 8390
 135+ 8390 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 135+ 8394 08 00 0A 88
 136+ 8398 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 136+ 839C 0A A8 00 05
 137+ 83A0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 137+ 83A4 C0 00 D8 00
 138+ 83A8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 138+ 83AC FD 00 02 FA
 139+ 83B0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 139+ 83B4 00 CA A0 00
 140+ 83B8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 140+ 83BC 80 00 01 00
 141+ 83C0
 142+ 83C0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 142+ 83C4 84 00 05 44
 143+ 83C8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 143+ 83CC 05 54 00 02
 144+ 83D0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 144+ 83D4 E0 00 6C 00
 145+ 83D8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 145+ 83DC FE 80 01 7D
 146+ 83E0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 146+ 83E4 00 65 50 00
 147+ 83E8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 147+ 83EC 40 00 00 80
 148+ 83F0
 149+ 83F0              	org $8400
 150+ 8400
 151+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 151+ 8404 42 00 02 A2
 152+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 152+ 840C 02 AA 00 01
 153+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 153+ 8414 F0 00 36 00
 154+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 154+ 841C FF 40 00 BE
 155+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 155+ 8424 00 32 A8 00
 156+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 156+ 842C A0 00 00 40
 157+ 8430
 158+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 158+ 8434 A1 00 01 51
 159+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 159+ 843C 01 55 00 00
 160+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 160+ 8444 F8 00 1B 00
 161+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 161+ 844C FF A0 00 1F
 162+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 162+ 8454 00 09 54 00
 163+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 163+ 845C 50 00 00 20
 164+ 8460
 165+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 165+ 8464 50 80 00 A8
 166+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 166+ 846C 00 AA 80 00
 167+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 167+ 8474 FC 00 0D 80
 168+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 168+ 847C FF D0 00 0F
 169+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 169+ 8484 00 04 AA 00
 170+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 170+ 848C 28 00 00 10
 171+ 8490
 172+ 8490              ; ----------------------------------------------------------------------------------------
 173+ 8490
 174+ 8490              ; Amadeus. 2x2.
 175+ 8490
 176+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 177+ 8492 00 00        	defw 0
 178+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 179+ 8496 00 00        	defw 0
 180+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 181+ 849A 00 00        	defw 0
 182+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 183+ 849E 00 00        	defw 0	 								; (Fín de índice).
 184+ 84A0
 185+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 186+ 84A2 00 00        	defw 0
 187+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 188+ 84A6 00 00        	defw 0
 189+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 190+ 84AA 00 00        	defw 0
 191+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 192+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 193+ 84B0
 194+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 194+ 84B4 26 64 24 24
 195+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 195+ 84BC 6F F6 67 E6
 196+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 196+ 84C4 F7 EF FF FF
 197+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 197+ 84CC 8B D1 71 8E
 198+ 84D0
 199+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 199+ 84D4 F1 00 09 99
 200+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 200+ 84DC 0B 0D 00 1B
 201+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 201+ 84E4 80 19 F9 80
 202+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 202+ 84EC F3 C0 3D FB
 203+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 203+ 84F4 3E F7 C0 3E
 204+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 204+ 84FC 40 1C 63 80
 205+ 8500
 206+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 206+ 8504 3C 40 02 66
 207+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 207+ 850C 02 C3 40 06
 208+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 208+ 8514 60 06 7E 60
 209+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 209+ 851C 3C F0 0F 7E
 210+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 210+ 8524 0F BD F0 0F
 211+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 211+ 852C 10 07 18 E0
 212+ 8530
 213+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 213+ 8534 8F 10 00 99
 214+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 214+ 853C 00 B0 D0 01
 215+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 215+ 8544 D8 01 9F 98
 216+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 216+ 854C CF 3C 03 DF
 217+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 217+ 8554 03 EF 7C 03
 218+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 218+ 855C 44 01 C6 38
 219+ 8560
 220+ 8560              ; ----------------------------------------------------------------------------------------
 221+ 8560
 222+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 223+ 8562 96 85        	defw Explosion_2x3_2
 224+ 8564 C6 85        	defw Explosion_2x3_3
 225+ 8566
 226+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 226+ 856A 10 00 04 38
 227+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 227+ 8572 02 E6 80 01
 228+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 228+ 857A 00 03 DD 80
 229+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 229+ 8582 3B 80 01 9D
 230+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 230+ 858A 02 FD 80 03
 231+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 231+ 8592 00 08 00 00
 232+ 8596
 233+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 233+ 859A 38 10 03 BC
 234+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 234+ 85A2 04 06 C0 00
 235+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 235+ 85AA 00 03 DD 80
 236+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 236+ 85B2 3A 70 01 9C
 237+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 237+ 85BA 04 F8 80 06
 238+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 238+ 85C2 00 00 00 00
 239+ 85C6
 240+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 240+ 85CA 00 20 08 00
 241+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 241+ 85D2 00 06 00 00
 242+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 242+ 85DA 00 00 14 30
 243+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 243+ 85E2 38 00 01 08
 244+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 244+ 85EA 00 80 00 04
 245+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 245+ 85F2 10 08 00 20
 246+ 85F6
 247+ 85F6              ; ------------------------------------------
 248+ 85F6
 249+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 250+ 85F8 20 86        	defw Explosion_2x2_2
 251+ 85FA 40 86        	defw Explosion_2x2_3
 252+ 85FC
 253+ 85FC              	org $8600
 254+ 8600
 255+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 255+ 8604 43 84 37 D8
 256+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 256+ 860C 17 F0 3D D8
 257+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 257+ 8614 19 D0 1F 60
 258+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 258+ 861C 40 00 80 00
 259+ 8620
 260+ 8620
 261+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 261+ 8624 3B C2 60 0C
 262+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 262+ 862C 07 F0 3D D8
 263+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 263+ 8634 19 C6 1F 64
 264+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 264+ 863C 80 00 00 00
 265+ 8640
 266+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 266+ 8644 88 04 10 0C
 267+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 267+ 864C 81 E0 01 43
 268+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 268+ 8654 10 80 18 00
 269+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 269+ 865C 60 01 80 02
 270+ 8660
 271+ 8660
 272+ 8660
 273+ 8660
 274+ 8660
# file closed: Sprites_e_indices.asm
 117  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715              ;	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8715 00 00        	defw 0
 141+ 8717
 142+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 143+ 8719 40           	db $40												; (Ctrl_0).
 144+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 871E 00 00
 145+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 147+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 148+ 8726 00           	db 0 												; (Columnas).
 149+ 8727 00 00        	defw 0												; (Limite_horizontal).
 150+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 151+ 872C
 152+ 872C              ; ---------- ---------- ---------- ---------- ----------
 153+ 872C              ;
 154+ 872C              ;	22/01/24
 155+ 872C              ;
 156+ 872C              ; 	Cada caja tiene 19 bytes !!!
 157+ 872C
 158+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 159+ 872F 00           	db %00000000										; (Attr).
 160+ 8730              ;	db 0												; (Cuad_objeto).
 161+ 8730 00           	db 0												; (Impacto).
 162+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 163+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 164+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 165+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 166+ 873D 00           	db 0												; (Ctrl_0).
 167+ 873E 00           	db 0												; (Ctrl_2).
 168+ 873F
 169+ 873F              ; ---------- ---------- ---------- ---------- ----------
 170+ 873F
 171+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 172+ 8742 00           	db %00000000										; (Attr).
 173+ 8743              ;	db 0												; (Cuad_objeto).
 174+ 8743 00           	db 0												; (Impacto).
 175+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 176+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 8750 00           	db 0												; (Ctrl_0).
 180+ 8751 00           	db 0												; (Ctrl_2).
 181+ 8752
 182+ 8752              ; ---------- ---------- ---------- ---------- ----------
 183+ 8752
 184+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 185+ 8755 00           	db %00000000										; (Attr).
 186+ 8756              ;	db 0												; (Cuad_objeto).
 187+ 8756 00           	db 0												; (Impacto).
 188+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 189+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 190+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 191+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 192+ 8763 00           	db 0												; (Ctrl_0).
 193+ 8764 00           	db 0												; (Ctrl_2).
 194+ 8765
 195+ 8765              ; ---------- ---------- ---------- ---------- ----------
 196+ 8765
 197+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 198+ 8768 00           	db %00000000										; (Attr).
 199+ 8769              ;	db 0												; (Cuad_objeto).
 200+ 8769 00           	db 0												; (Impacto).
 201+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 202+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 203+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 204+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 205+ 8776 00           	db 0												; (Ctrl_0).
 206+ 8777 00           	db 0												; (Ctrl_2).
 207+ 8778
 208+ 8778              ; ---------- ---------- ---------- ---------- ----------
 209+ 8778
 210+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 211+ 877B 00           	db %00000000										; (Attr).
 212+ 877C              ;	db 0												; (Cuad_objeto).
 213+ 877C 00           	db 0												; (Impacto).
 214+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 215+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 216+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 217+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 218+ 8789 00           	db 0												; (Ctrl_0).
 219+ 878A 00           	db 0												; (Ctrl_2).
 220+ 878B
 221+ 878B              ; ---------- ---------- ---------- ---------- ----------
 222+ 878B
 223+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 224+ 878E 00           	db %00000000										; (Attr).
 225+ 878F              ;	db 0												; (Cuad_objeto).
 226+ 878F 00           	db 0												; (Impacto).
 227+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 228+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 229+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 230+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 231+ 879C 00           	db 0												; (Ctrl_0).
 232+ 879D 00           	db 0												; (Ctrl_2).
 233+ 879E
 234+ 879E              ; ---------- ---------- ---------- ---------- ----------
 235+ 879E
 236+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 237+ 87A1 00           	db %00000000										; (Attr).
 238+ 87A2              ;	db 0												; (Cuad_objeto).
 239+ 87A2 00           	db 0												; (Impacto).
 240+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 241+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 242+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 243+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 244+ 87AF 00           	db 0												; (Ctrl_0).
 245+ 87B0 00           	db 0												; (Ctrl_2).
 246+ 87B1
 247+ 87B1              ; -------------------------------------------------------------------------------------
 248+ 87B1              ;
 249+ 87B1              ;	11/1/24
 250+ 87B1              ;
 251+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 252+ 87B1              ;
 253+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 254+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 255+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 256+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 257+ 87B1
 258+ 87B1              Indice_de_definiciones_de_entidades
 259+ 87B1
 260+ 87B1 B5 87        	defw Entidad_1
 261+ 87B3 C2 87        	defw Entidad_2
 262+ 87B5
 263+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 264+ 87B5
 265+ 87B5              ;	BADSAT, (Satélite malvado).
 266+ 87B5
 267+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 268+ 87B8 04           	db %00000100										; (Attr).
 269+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 270+ 87BB 52 82        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 271+ 87BD 23 47        	defw $4723	                                     	; (Posicion_inicio).
 272+ 87BF 01           	db 1												; (Cuad_objeto).
 273+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 274+ 87C2
 275+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 276+ 87C5 02           	db %00000010										; (Attr).
 277+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 278+ 87C8 52 82        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 279+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 280+ 87CC 01           	db 1												; (Cuad_objeto).
 281+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 282+ 87CF
# file closed: Cajas_y_disparos.asm
 118  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 119  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 79 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8979
  19+ 8979 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8982 01 02
  22+ 8984 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8988 01 02
  23+ 898A
# file closed: Niveles.asm
 120  898A
 121  898A              ; ******************************************************************************************************************************************************************************************
 122  898A              ; Constantes.
 123  898A              ; ******************************************************************************************************************************************************************************************
 124  898A              ;
 125  898A              ; 09/03/24
 126  898A
 127  898A              ;
 128  898A              ; Constantes.
 129  898A              ;
 130  898A
 131  898A              Sprite_vacio equ $eae0
 132  898A
 133  898A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 134  898A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 135  898A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 136  898A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 137  898A
 138  898A              ;Almacen_de_scanlines_masticados_a_borrar equ $e800
 139  898A              ;Almacen_de_scanlines_masticados equ $e900
 140  898A              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $f85c ..... $0d5c / 3420 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 141  898A              ;Almacen_de_movimientos_masticados_Amadeus equ $e700
 142  898A              ;
 143  898A              Scanlines_album equ $8000	;	(8000h - 8118h), 		; Inicialmente 280 bytes.
 144  898A
 145  898A              ;                                                       ;	35 bytes por entidad.
 146  898A              ;														;	1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 147  898A              ;                                                       ;	2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 148  898A              ;														;		El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 149  898A              ; 														;	3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 150  898A
 151  898A              Scanlines_album_2 equ $8119    ;    (8119h - 8231h)
 152  898A
 153  898A              ;Scanlines_album_disparos equ $8119 ;  (8119h - 816eh).	; En (Scanlines_album_disparos) vamos a ir almacenando los valores_
 154  898A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 155  898A              ;														; 55 Bytes.
 156  898A
 157  898A              ;Scanlines_album_Amadeus equ $816f	 ;  (816fh - 8192h) ; 12 bytes.
 158  898A
 159  898A              ;Almacen_de_parametros_DRAW equ $8193 ; ($8193 - $81d5h) ; 66 bytes.
 160  898A
 161  898A
 162  898A              ; 54h es el espacio necesario en (Scanlines_album) para 7 entidades/disparos en pantalla.
 163  898A
 164  898A              ; ******************************************************************************************************************************************************************************************
 165  898A              ; Variables.
 166  898A              ; ******************************************************************************************************************************************************************************************
 167  898A              ;
 168  898A              ; 18/01/24
 169  898A              ;
 170  898A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 171  898A              ;
 172  898A
 173  898A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 174  898A
 175  898A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 176  898B              ;															- Patrón de movimiento.
 177  898B              ;															- Aspecto
 178  898B 00           Filas db 0												; Filas. [DRAW]
 179  898C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 180  898D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 181  898F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 182  8991 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 183  8992 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 184  8993
 185  8993              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 186  8993
 187  8993 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 188  8994              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 189  8994              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 190  8994 00           Attr db 0												; Atributos de la entidad:
 191  8995
 192  8995              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 193  8995              ;
 194  8995              ;	COLORES: 0 ..... NEGRO
 195  8995              ;    		 1 ..... AZUL
 196  8995              ; 			 2 ..... ROJO
 197  8995              ;			 3 ..... MAGENTA
 198  8995              ; 			 4 ..... VERDE
 199  8995              ; 			 5 ..... CIAN
 200  8995              ;			 6 ..... AMARILLO
 201  8995              ; 			 7 ..... BLANCO
 202  8995
 203  8995 00 00        Indice_Sprite_der defw 0
 204  8997 00 00        Indice_Sprite_izq defw 0
 205  8999 00 00        Puntero_DESPLZ_der defw 0
 206  899B 00 00        Puntero_DESPLZ_izq defw 0
 207  899D
 208  899D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 209  899F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 210  89A0
 211  89A0              ; Variables de objeto. (Características).
 212  89A0
 213  89A0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 214  89A1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 215  89A1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 216  89A1 00 00 00...  Variables_de_borrado ds 6
 217  89A7
 218  89A7 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 219  89A9              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 220  89A9
 221  89A9 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 222  89AB
 223  89AB              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 224  89AB              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 225  89AB
 226  89AB 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 227  89AD              ;														; _palabras que componen el "movimiento_masticado".
 228  89AD
 229  89AD              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 230  89AD
 231  89AD 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 232  89AE              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 233  89AE              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 234  89AE              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 235  89AE              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 236  89AE              ;
 237  89AE              ; 														DESCRIPCIÖN:
 238  89AE              ;
 239  89AE              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 240  89AE              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 241  89AE              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 242  89AE              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 243  89AE              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 244  89AE              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 245  89AE              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 246  89AE              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 247  89AE              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 248  89AE              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 249  89AE              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 250  89AE              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 251  89AE              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 252  89AE              ;
 253  89AE              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 254  89AE              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 255  89AE              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 256  89AE
 257  89AE              ; Variables de funcionamiento. [DRAW].
 258  89AE
 259  89AE 00           Columnas db 0
 260  89AF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 261  89B1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 262  89B1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 263  89B2
 264  89B2              ; variables de control general.
 265  89B2
 266  89B2 00           Ctrl_2 db 0
 267  89B3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 268  89B3              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 269  89B3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 270  89B3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 271  89B3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 272  89B3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 273  89B3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 274  89B3              ;
 275  89B3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 276  89B3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 277  89B3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 278  89B3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 279  89B3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 280  89B3              ;														BIT 4, ???
 281  89B3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 282  89B3
 283  89B3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 284  89B4
 285  89B4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 286  89B4
 287  89B4              ;					         		---------;      ;---------
 288  89B4
 289  89B4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 290  89B4
 291  89B4              Perfiles_de_velocidad
 292  89B4
 293  89B4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 294  89B5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 295  89B6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 296  89B7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 297  89B8
 298  89B8              ; Contadores de 16 bits.
 299  89B8
 300  89B8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 301  89BA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 302  89BC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 303  89BE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 304  89C0
 305  89C0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 306  89C0
 307  89C0              ;Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 308  89C0              ;Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 309  89C0              ;Puntero_de_scanlines_en_album defw Scanlines_album+2
 310  89C0
 311  89C0              ;Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 312  89C0
 313  89C0 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 314  89C2 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 315  89C4 00 00        Puntero_indice_mov_bucle defw 0							;
 316  89C6              ;
 317  89C6              ;
 318  89C6 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 319  89C7              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 320  89C7              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 321  89C7 00           Incrementa_puntero_backup db 0
 322  89C8 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 323  89C9              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 324  89C9 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 325  89CA 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 326  89CB 00           Cola_de_desplazamiento db 0								; Este byte indica:
 327  89CC              ;
 328  89CC              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 329  89CC              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 330  89CC              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 331  89CC              ;
 332  89CC              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 333  89CC              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 334  89CC              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 335  89CC              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 336  89CC              ;
 337  89CC              ;														;	"$ff" ..... Bucle infinito de repetición.
 338  89CC              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 339  89CC              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 340  89CC              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 341  89CC
 342  89CC 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 343  89CD
 344  89CD              ;														DESCRIPCIÓN:
 345  89CD              ;
 346  89CD              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 347  89CD              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 348  89CD              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 349  89CD              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 350  89CD              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 351  89CD              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 352  89CD
 353  89CD              ;														BIT 3, Recarga de nueva oleada.
 354  89CD              ;														BIT 4, Recarga de nueva oleada.
 355  89CD              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 356  89CD              ;														BIT 6, **** Frame completo.
 357  89CD              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 358  89CD
 359  89CD 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 360  89CF              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 361  89CF              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 362  89CF              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 363  89CF
 364  89CF              ; Gestión de ENTIDADES y CAJAS.
 365  89CF
 366  89CF 00 00        Puntero_store_caja defw 0
 367  89D1 00 00        Puntero_restore_caja defw 0
 368  89D3 00 00        Indice_restore_caja defw 0
 369  89D5 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 370  89D6 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 371  89D7 00           Entidades_en_curso db 0									; ..... ..... .....
 372  89D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 373  89D9              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 374  89D9              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 375  89D9              ;														; _ (Numero_de_malotes)="0".
 376  89D9 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 377  89DB 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 378  89DD              ;														; _ puntero (Indice_entidades).
 379  89DD
 380  89DD              ;---------------------------------------------------------------------------------------------------------------
 381  89DD              ;
 382  89DD              ;	11/01/24
 383  89DD              ;
 384  89DD              ;	Álbumes.
 385  89DD
 386  89DD 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 387  89DF              ;														; _variable para almacenar lo posición del puntero_
 388  89DF              ; 														; _de pila, SP.
 389  89DF 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 390  89E1              ;														; La utiliza la rutina [Extrae_foto_registros].
 391  89E1 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 392  89E3
 393  89E3 00 00        Album_de_pintado defw 0
 394  89E5 00 00        Album_de_borrado defw 0
 395  89E7 00 00        Techo defw 0
 396  89E9
 397  89E9 00 00        Scanlines_album_SP defw 0
 398  89EB
 399  89EB 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 400  89EC              ;
 401  89EC              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 402  89EC              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 403  89EC              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 404  89EC
 405  89EC 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 406  89ED              ;
 407  89ED              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 408  89ED              ;
 409  89ED              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 410  89ED              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 411  89ED              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 412  89ED              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 413  89ED              ;
 414  89ED              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 415  89ED              ;															_ masticados ya generados.
 416  89ED              ;
 417  89ED              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 418  89ED              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 419  89ED              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 420  89ED              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 421  89ED
 422  89ED
 423  89ED              ; Gestión de Disparos.
 424  89ED
 425  89ED              ;;Numero_de_disparotes db 0
 426  89ED              ;;Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 427  89ED              ;;Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 428  89ED              ;;Impacto2 db 0											; Este byte indica que se ha producido impacto:
 429  89ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 430  89ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 431  89ED              ;;Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 432  89ED              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 433  89ED              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 434  89ED              ;														; _produzca colisión.
 435  89ED              ;;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 436  89ED              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 437  89ED              ;;Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 438  89ED              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 439  89ED 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 440  89F0              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 441  89F0              ;;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 442  89F0
 443  89F0              ;---------------------------------------------------------------------------------------------------------------
 444  89F0
 445  89F0              ; Relojes y temporizaciones.
 446  89F0
 447  89F0 00           Contador_de_frames db 0
 448  89F1 00           Contador_de_frames_2 db 0
 449  89F2
 450  89F2              ;Clock_explosion db 4
 451  89F2 14           Clock_Entidades_en_curso db 20
 452  89F3 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 453  89F4              ;														; Repite la oleada de entidades.
 454  89F4              ;Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 455  89F4              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 456  89F4              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 457  89F4
 458  89F4              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 459  89F4              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 460  89F4              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 461  89F4
 462  89F4              ;---------------------------------------------------------------------------------------------------------------
 463  89F4
 464  89F4              ; Gestión de NIVELES.
 465  89F4
 466  89F4 00           Nivel db 0												; Nivel actual del juego.
 467  89F5 00 00        Puntero_indice_NIVELES defw 0
 468  89F7 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 469  89F9              ; 														; _ que definen el NIVEL.
 470  89F9              ; Y todo comienza aquí .....
 471  89F9              ;
 472  89F9              ; 	INICIO  *************************************************************************************************************************************************************************
 473  89F9              ;
 474  89F9              ;	5/1/24
 475  89F9
 476  89F9              START
 477  89F9
 478  89F9 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 479  89FC 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 480  89FE ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 481  8A00 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 482  8A02 F3           	DI
 483  8A03
 484  8A03              ;	ld a,%00000111
 485  8A03              ;	call Cls
 486  8A03 CD EC 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 487  8A06
 488  8A06              ; INICIALIZACIÓN.
 489  8A06
 490  8A06              ;	Inicializa 1er Nivel.
 491  8A06
 492  8A06 21 6B 89     	ld hl,Indice_de_niveles
 493  8A09 22 F5 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 494  8A0C CD 12 8C     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 495  8A0F              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 496  8A0F              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 497  8A0F              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 498  8A0F
 499  8A0F              ;	Provisional, (para desarrollo).
 500  8A0F              	;-
 501  8A0F              ;	ld hl,Numero_parcial_de_entidades
 502  8A0F              ;	ld b,(hl)
 503  8A0F              ;	inc b
 504  8A0F              ;	dec b
 505  8A0F              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 506  8A0F
 507  8A0F CD 32 8B     	call Inicia_albumes_de_lineas
 508  8A12
 509  8A12 CD 57 8C     4 call Inicia_Entidades
 510  8A15
 511  8A15 CD 42 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 512  8A18              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 513  8A18              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 514  8A18              ; (Esto se dá cuando se inicia una nueva oleada).
 515  8A18
 516  8A18              ;	ld a,(Ctrl_1)
 517  8A18              ;	bit 3,a
 518  8A18              ;	jr nz,5F											 ; Loop
 519  8A18
 520  8A18              ; 	INICIA AMADEUS !!!!!
 521  8A18
 522  8A18              ;3 call Restore_Amadeus
 523  8A18              ;	call Inicia_Puntero_objeto
 524  8A18              ;	call Draw
 525  8A18
 526  8A18              ;	call Guarda_movimiento_masticado	;! Provisional
 527  8A18
 528  8A18              ;	call Genera_datos_de_impresion
 529  8A18              ;	call Guarda_datos_de_borrado_Amadeus
 530  8A18
 531  8A18              ;	ld de,Amadeus_db
 532  8A18              ;	call Store_Amadeus
 533  8A18
 534  8A18              ; 	INICIA DISPAROS !!!!!
 535  8A18
 536  8A18              ;	call Inicia_Puntero_Disparo_Entidades
 537  8A18              ;	call Inicia_Puntero_Disparo_Amadeus
 538  8A18
 539  8A18              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 540  8A18
 541  8A18              ;5 call Inicia_punteros_de_cajas
 542  8A18              ;	call Restore_entidad
 543  8A18
 544  8A18              ;	ld a,(Ctrl_1)
 545  8A18              ;	bit 3,a
 546  8A18              ;	jr z,6F
 547  8A18
 548  8A18              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 549  8A18
 550  8A18              ;	ld hl,Ctrl_1
 551  8A18              ;	res 3,(hl)
 552  8A18              ;	jr Main
 553  8A18
 554  8A18              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 555  8A18
 556  8A18              6
 557  8A18
 558  8A18              ;	call Calcula_numero_de_malotes
 559  8A18
 560  8A18              ; Damos por concluida la construcción del FRAME.
 561  8A18              ; Inicializamos (Scanlines_album_SP). Se sitúa al comienzo del álbum que acabamos de completar.
 562  8A18
 563  8A18 2A E9 89     	ld hl,(Scanlines_album_SP)
 564  8A1B 22 E7 89     	ld (Techo),hl
 565  8A1E
 566  8A1E 2A E5 89     	ld hl,(Album_de_borrado)
 567  8A21 22 E9 89     	ld (Scanlines_album_SP),hl
 568  8A24
 569  8A24 21 EB 89     	ld hl,Ctrl_3
 570  8A27 CB C6        	set 0,(hl) 											 ; Indica Frame completo.
 571  8A29
 572  8A29 FB           	ei
 573  8A2A 76           	halt
 574  8A2B
 575  8A2B              ; ------------------------------------
 576  8A2B
 577  8A2B              Main
 578  8A2B              ;
 579  8A2B              ;	11/12/23
 580  8A2B
 581  8A2B              ; Aparece nueva entidad ???
 582  8A2B
 583  8A2B              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 584  8A2B              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 585  8A2B              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 586  8A2B              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 587  8A2B              ;														; _un 2º bloque.
 588  8A2B
 589  8A2B              ;	call Genera_scanlines_masticados_a_borrar
 590  8A2B              ;	call Limpia_Almacen_de_scanlines_masticados
 591  8A2B
 592  8A2B              ;	call Limpia_y_reinicia_Scanlines_album 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 593  8A2B              ; 													 	; _(Scanlines_album_SP).
 594  8A2B
 595  8A2B F3           	di
 596  8A2C 18 FE        	jr $
 597  8A2E FB           	ei
 598  8A2F
 599  8A2F 3A F2 89     	ld a,(Clock_Entidades_en_curso)
 600  8A32 47           	ld b,a
 601  8A33 3A F0 89     	ld a,(Contador_de_frames)
 602  8A36 B8           	cp b
 603  8A37 20 1E        	jr nz,13F
 604  8A39
 605  8A39              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 606  8A39              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 607  8A39
 608  8A39 3A D6 89     21 ld a,(Numero_parcial_de_entidades)
 609  8A3C 47           	ld b,a
 610  8A3D 3A D7 89     	ld a,(Entidades_en_curso)
 611  8A40 B8           	cp b
 612  8A41 28 14        	jr z,13F
 613  8A43 30 12        	jr nc,13F
 614  8A45
 615  8A45 3C           	inc a
 616  8A46 32 D7 89     	ld (Entidades_en_curso),a
 617  8A49
 618  8A49 FE 02        	cp 2
 619  8A4B F3           	di
 620  8A4C 28 FE        	jr z,$
 621  8A4E FB           	ei
 622  8A4F
 623  8A4F              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 624  8A4F
 625  8A4F 3A F2 89     	ld a,(Clock_Entidades_en_curso)
 626  8A52              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 627  8A52              ;! _ IMPREDECIBLE !!!!
 628  8A52 C6 64        	add 100
 629  8A54 32 F2 89     	ld (Clock_Entidades_en_curso),a
 630  8A57
 631  8A57              ; -------------------------------------------------------------------------------------------------------------
 632  8A57
 633  8A57              ; Habilita disparos.
 634  8A57
 635  8A57              13
 636  8A57
 637  8A57              ;	ld hl,Disparo_Amadeus
 638  8A57              ;	ld de,CLOCK_repone_disparo_Amadeus
 639  8A57              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 640  8A57
 641  8A57              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 642  8A57              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 643  8A57              ;	call Habilita_disparos
 644  8A57
 645  8A57              ; COLISIONES.
 646  8A57
 647  8A57              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 648  8A57
 649  8A57              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 650  8A57              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 651  8A57              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 652  8A57
 653  8A57              ;	xor a
 654  8A57              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 655  8A57
 656  8A57              ;	call Inicia_punteros_de_cajas
 657  8A57              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 658  8A57              ; 														; _ en DRAW.
 659  8A57
 660  8A57              ;	ld a,(Filas)
 661  8A57              ;	and a
 662  8A57              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 663  8A57              ;	call Incrementa_punteros_de_cajas
 664  8A57              ;	jr 12B
 665  8A57
 666  8A57              ; ---------------------------------------------------------------------------------------
 667  8A57
 668  8A57 3A D6 89     10 ld a,(Numero_parcial_de_entidades)
 669  8A5A 47               ld b,a
 670  8A5B A7           	and a
 671  8A5C 20 00        	jr nz,11F
 672  8A5E
 673  8A5E              ;	ld hl,Ctrl_1;
 674  8A5E              ;	bit 4,(hl)
 675  8A5E              ;	jp nz,16F
 676  8A5E
 677  8A5E              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 678  8A5E
 679  8A5E              ;	ld hl,Ctrl_1
 680  8A5E              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 681  8A5E
 682  8A5E              ;	ld a,(Contador_de_frames)
 683  8A5E              ;	inc a
 684  8A5E              ;	ld (Activa_recarga_cajas),a
 685  8A5E
 686  8A5E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 687  8A5E
 688  8A5E 3A D7 89     11 ld a,(Entidades_en_curso)
 689  8A61 A7           	and a
 690  8A62 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 691  8A64 47           	ld b,a												; No hay entidades que gestionar.
 692  8A65
 693  8A65              ; ( Código que ejecutamos con cada entidad: ).
 694  8A65
 695  8A65              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 696  8A65
 697  8A65 C5           15 push bc 												; Nº de entidades en curso.
 698  8A66
 699  8A66 CD AB 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 700  8A69
 701  8A69 3A EB 89     	ld a,(Ctrl_3)
 702  8A6C CB 57        	bit 2,a
 703  8A6E F3           	di
 704  8A6F 20 FE        	jr nz,$
 705  8A71 FB           	ei
 706  8A72
 707  8A72              ; Existe "Entidad_guía" ???.
 708  8A72              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 709  8A72
 710  8A72              ;	ld a,(Ctrl_3)
 711  8A72              ;	bit 1,a
 712  8A72              ;	jr nz,22F
 713  8A72
 714  8A72              ; Almacén de "Movimientos_masticados" lleno ???
 715  8A72              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 716  8A72              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 717  8A72
 718  8A72              ;;	ld a,(Ctrl_3)
 719  8A72              ;;	bit 3,a
 720  8A72              ;;	jr nz,22F
 721  8A72
 722  8A72              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 723  8A72
 724  8A72              ;	ld hl,Ctrl_2
 725  8A72              ;	set 5,(hl)
 726  8A72              ;	ld hl,Ctrl_3
 727  8A72              ;	set 1,(hl)
 728  8A72
 729  8A72              ; Impacto ???
 730  8A72
 731  8A72              ;22 ld a,(Impacto)
 732  8A72              ;	and a
 733  8A72              ;	jr z,8F
 734  8A72
 735  8A72              ; Hay Impacto en esta entidad.
 736  8A72
 737  8A72              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 738  8A72              ;	dec (hl)
 739  8A72              ;	jp nz,17F
 740  8A72
 741  8A72              ;! Velocidad de la animación de la explosión.
 742  8A72
 743  8A72              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 744  8A72              ;														; _,(velocidad de la explosión).
 745  8A72              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 746  8A72
 747  8A72              ;	call Repone_datos_de_borrado
 748  8A72              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 749  8A72
 750  8A72              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 751  8A72
 752  8A72              ;	ld a,(Ctrl_2)
 753  8A72              ;	bit 1,a
 754  8A72              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 755  8A72
 756  8A72              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 757  8A72
 758  8A72              ;	ld a,(CTRL_DESPLZ)
 759  8A72              ;	and a
 760  8A72              ;	jr nz,18F
 761  8A72
 762  8A72              ;	ld hl,Indice_Explosion_2x2-2
 763  8A72              ;	ld (Puntero_DESPLZ_der),hl
 764  8A72              ;	jr 19F
 765  8A72
 766  8A72              ;18 ld hl,Indice_Explosion_2x3-2
 767  8A72              ;	ld (Puntero_DESPLZ_der),hl
 768  8A72
 769  8A72              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 770  8A72              ;	set 1,(hl)
 771  8A72              ;	jr 7F
 772  8A72
 773  8A72              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 774  8A72              ; _con las coordenadas de la entidad almacenada en DRAW.
 775  8A72
 776  8A72              ;8 ld a,(Ctrl_1)
 777  8A72              ;	bit 2,a
 778  8A72              ;	jr z,7F
 779  8A72
 780  8A72              ;	ld hl,(Coordenadas_disparo_certero)
 781  8A72              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 782  8A72              ;														; E contiene la coordenada_X del disparo.
 783  8A72              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 784  8A72              ;														; H FILA, (Coordenada_y de la entidad).
 785  8A72              ;	and a
 786  8A72              ;	sbc hl,de
 787  8A72
 788  8A72              ;	call Determina_resultado_comparativa
 789  8A72
 790  8A72              ;	ld a,b
 791  8A72              ;	and a
 792  8A72              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 793  8A72
 794  8A72              ; ----- ----- -----
 795  8A72
 796  8A72              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 797  8A72              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 798  8A72
 799  8A72              ;	ld hl,Ctrl_1
 800  8A72              ;	res 2,(hl)
 801  8A72
 802  8A72 CD 91 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 803  8A75
 804  8A75              ;	ld a,(Ctrl_0)
 805  8A75              ;	bit 4,a
 806  8A75              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 807  8A75
 808  8A75              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 809  8A75              ; [[[
 810  8A75              ;	call Detecta_disparo_entidad
 811  8A75              ; ]]]
 812  8A75
 813  8A75 CD C1 8C     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 814  8A78
 815  8A78              ;	ld hl,Ctrl_0
 816  8A78              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 817  8A78
 818  8A78 CD B1 8C     17 call Store_Restore_cajas
 819  8A7B
 820  8A7B C1           	pop bc
 821  8A7C
 822  8A7C 10 E7        	djnz 15B
 823  8A7E
 824  8A7E CD 42 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 825  8A81
 826  8A81              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 827  8A81              ; Hemos gestionado todas las unidades.
 828  8A81              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 829  8A81
 830  8A81              ;	ld hl,Ctrl_1
 831  8A81              ;	res 2,(hl)
 832  8A81
 833  8A81
 834  8A81              16
 835  8A81 CD 58 8B     	call Calcula_numero_de_malotes 						; Si el nº de malotes es "0" no generamos scanlines masticados. No ha habido movimiento.
 836  8A84
 837  8A84 21 EB 89     	ld hl,Ctrl_3
 838  8A87 CB C6        	set 0,(hl)											; Frame completo.
 839  8A89
 840  8A89 AF           	xor a
 841  8A8A D3 FE        	out ($fe),a
 842  8A8C 76           	halt
 843  8A8D
 844  8A8D              ; ----------------------------------------
 845  8A8D
 846  8A8D              ;	ld a,(Ctrl_1) 										; Existe Loop?
 847  8A8D              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 848  8A8D CA 2B 8A     	jp z,Main
 849  8A90
 850  8A90              ; RECARGA DE NUEVA OLEADA.
 851  8A90
 852  8A90              ;	ld a,(Contador_de_frames)
 853  8A90              ;	ld b,a
 854  8A90              ;	ld a,(Activa_recarga_cajas)
 855  8A90              ;	cp b
 856  8A90              ;	jr z,20F
 857  8A90
 858  8A90              ;	ld hl,Ctrl_1
 859  8A90              ;	set 4,(hl)
 860  8A90              ;	jp Main
 861  8A90
 862  8A90              ;20 ld hl,Ctrl_1
 863  8A90              ;	res 4,(hl)
 864  8A90
 865  8A90              ;	ld a,(Contador_de_frames)
 866  8A90
 867  8A90              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 868  8A90              ;! _ IMPREDECIBLE !!!!
 869  8A90
 870  8A90              ;	add 10
 871  8A90              ;	ld (Clock_Entidades_en_curso),a
 872  8A90
 873  8A90              ;	jp 4B
 874  8A90
 875  8A90 C9           	ret
 876  8A91
 877  8A91              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 878  8A91              ;
 879  8A91              ;	16/11/23
 880  8A91
 881  8A91              ;;Gestiona_Amadeus
 882  8A91
 883  8A91              ;! Activa/desactiva impacto con Amadeus.
 884  8A91
 885  8A91              ;	ld a,(Impacto)
 886  8A91              ;	and a
 887  8A91              ;	jr nz,2F
 888  8A91
 889  8A91              ;;	call Mov_Amadeus
 890  8A91
 891  8A91              ;;2 ld a,(Ctrl_0)
 892  8A91              ;;	bit 4,a
 893  8A91              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 894  8A91
 895  8A91              ;;	call Guarda_foto_entidad_a_pintar
 896  8A91              ;;	call Guarda_datos_de_borrado_Amadeus
 897  8A91
 898  8A91              ;;1 ld hl,Ctrl_0
 899  8A91              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 900  8A91
 901  8A91              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 902  8A91
 903  8A91              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 904  8A91
 905  8A91              ;	call Calcula_numero_de_disparotes
 906  8A91
 907  8A91              ;;	ret
 908  8A91
 909  8A91              ; -----------------------------
 910  8A91              ;
 911  8A91              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 912  8A91              ;
 913  8A91              ;	INPUTS: B a de estar a "0".
 914  8A91
 915  8A91              ;Prepara_Borra_sprites
 916  8A91
 917  8A91              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 918  8A91              ;	ld a,l
 919  8A91              ;	ret z
 920  8A91
 921  8A91              ;	srl a
 922  8A91
 923  8A91              ;2 sub 16
 924  8A91              ;	jr z,1F
 925  8A91              ;	inc b
 926  8A91              ;	jr 2B
 927  8A91
 928  8A91              ;1 inc b
 929  8A91
 930  8A91              ;	exx
 931  8A91              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 932  8A91              ;	exx
 933  8A91
 934  8A91              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
 935  8A91              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 936  8A91
 937  8A91              ;	ret
 938  8A91
 939  8A91              ; --------------------------------------------------------------------------------------------------------------
 940  8A91              ;
 941  8A91              ;	15/12/23
 942  8A91
 943  8A91              Mov_obj
 944  8A91
 945  8A91              ;	ld a,(Ctrl_2)
 946  8A91              ;	bit 1,a
 947  8A91              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 948  8A91
 949  8A91              ; Explosión:
 950  8A91
 951  8A91              ;	ld a,(Frames_explosion)
 952  8A91              ;	and a
 953  8A91              ;	jr nz,4F
 954  8A91
 955  8A91              ;!  Una alimaña menos!!!!!!!!!1
 956  8A91
 957  8A91              ; Se trataba de una Entidad_guía ???
 958  8A91
 959  8A91              ;	ld a,(Ctrl_2)
 960  8A91              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 961  8A91              ;	jr z,5F
 962  8A91
 963  8A91              ;	ld hl,Ctrl_3
 964  8A91              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 965  8A91
 966  8A91              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 967  8A91              ;!! _generado puede ser distinto, (aletoriedad).
 968  8A91
 969  8A91              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 970  8A91              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 971  8A91              ;	dec (hl)
 972  8A91              ;	ld hl,Entidades_en_curso
 973  8A91              ;	dec (hl)
 974  8A91              ;	ld hl,Numero_de_entidades
 975  8A91              ;	dec (hl)
 976  8A91              ;	jr 3F
 977  8A91
 978  8A91              ; -----
 979  8A91
 980  8A91              ;	`Movemos´ la explosión.
 981  8A91
 982  8A91              ;4 ld hl,(Puntero_DESPLZ_der)
 983  8A91              ;	inc hl
 984  8A91              ;	inc hl
 985  8A91              ;	call Extrae_address
 986  8A91              ;;	ld (Puntero_objeto),hl
 987  8A91
 988  8A91              ;;	ld hl,Frames_explosion
 989  8A91              ;;	dec (hl)
 990  8A91
 991  8A91              ;;	ld hl,Ctrl_0
 992  8A91              ;;	set 4,(hl);;
 993  8A91
 994  8A91              ;;	jr 3F
 995  8A91
 996  8A91              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 997  8A91
 998  8A91              ;2 xor a
 999  8A91              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1000  8A91
1001  8A91              ; Movemos Entidades malignas.
1002  8A91              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1003  8A91
1004  8A91              ;	ld a,(Ctrl_2)
1005  8A91              ;	bit 5,a
1006  8A91              ;	jr nz,8F
1007  8A91
1008  8A91              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1009  8A91              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1010  8A91              ;	jr 7F
1011  8A91
1012  8A91              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1013  8A91
1014  8A91              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1015  8A91              ;	bit 4,a
1016  8A91              ;	ret z
1017  8A91
1018  8A91              ; Ha habido desplazamiento de la entidad maligna.
1019  8A91              ; Ha llegado a zona de AMADEUS ???
1020  8A91
1021  8A91              ;7 ld a,(Coordenada_y)
1022  8A91              ;	cp $14
1023  8A91              ;	jr c,1F
1024  8A91
1025  8A91              ; ---------
1026  8A91
1027  8A91              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1028  8A91              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1029  8A91
1030  8A91              ;	di
1031  8A91              ;	call Genera_coordenadas_X
1032  8A91              ;	call Compara_coordenadas_X
1033  8A91              ;	ei
1034  8A91
1035  8A91              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1036  8A91
1037  8A91              ; ---------
1038  8A91
1039  8A91              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1040  8A91              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1041  8A91              ;	call Limpia_Variables_de_borrado
1042  8A91
1043  8A91 C9           3 ret
1044  8A92
1045  8A92              ; --------------------------------------------------------------------------------------------------------------
1046  8A92              ;
1047  8A92              ;	29/1/23
1048  8A92
1049  8A92              ;Mov_Amadeus
1050  8A92
1051  8A92              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1052  8A92
1053  8A92              ;	call Mov_right
1054  8A92
1055  8A92              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1056  8A92              ;	bit 4,a
1057  8A92              ;	ret z
1058  8A92
1059  8A92              ; ---------
1060  8A92
1061  8A92              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1062  8A92              ;	call Repone_datos_de_borrado_Amadeus
1063  8A92              ;	call Limpia_Variables_de_borrado
1064  8A92
1065  8A92              ;	ret
1066  8A92
1067  8A92              ; -----------------------------------------------------------------------------------
1068  8A92              ;
1069  8A92              ;	20/01/24
1070  8A92              ;
1071  8A92              ;
1072  8A92
1073  8A92              Construye_movimientos_masticados_entidad
1074  8A92
1075  8A92 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1076  8A95 E5           	push hl
1077  8A96 CD D6 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1078  8A99              ;															; _ el (Contador_de_mov_masticados).
1079  8A99 CD 76 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1080  8A9C              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1081  8A9C              ;	call Recompone_posicion_inicio
1082  8A9C
1083  8A9C CD 08 8E     1 call Draw
1084  8A9F CD BB 8A     	call Guarda_movimiento_masticado
1085  8AA2
1086  8AA2 CD EE 97     	call Movimiento
1087  8AA5
1088  8AA5 3A EB 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1089  8AA8 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1090  8AAA 28 F0        	jr z,1B
1091  8AAC
1092  8AAC              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1093  8AAC              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1094  8AAC
1095  8AAC E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1096  8AAD 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1097  8AB0
1098  8AB0              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1099  8AB0
1100  8AB0 CD 52 99     	call Situa_en_contador_general_de_mov_masticados
1101  8AB3
1102  8AB3              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1103  8AB3              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1104  8AB3
1105  8AB3 ED 4B AB 89  	ld bc,(Contador_de_mov_masticados)
1106  8AB7 71           	ld (hl),c
1107  8AB8 23           	inc hl
1108  8AB9 70           	ld (hl),b
1109  8ABA
1110  8ABA C9           	ret
1111  8ABB
1112  8ABB              ; -----------------------------------------------------------------------------------
1113  8ABB              ;
1114  8ABB              ;	28/12/23
1115  8ABB              ;
1116  8ABB              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1117  8ABB              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1118  8ABB
1119  8ABB              Guarda_movimiento_masticado
1120  8ABB
1121  8ABB ED 73 DD 89  	ld (Stack),sp
1122  8ABF ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1123  8AC3
1124  8AC3              ;	push hl
1125  8AC3 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1126  8AC5 FD E5            push iy 												; Pushea Puntero_objeto.
1127  8AC7
1128  8AC7 ED 7B DD 89      ld sp,(Stack)
1129  8ACB
1130  8ACB 2A AB 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1131  8ACE 23           	inc hl
1132  8ACF 22 AB 89     	ld (Contador_de_mov_masticados),hl
1133  8AD2
1134  8AD2 CD D6 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1135  8AD5              ;															; _ el (Contador_de_mov_masticados).
1136  8AD5 C9               ret
1137  8AD6
1138  8AD6              ; --------------------------------------------------------------------------------------------------------------
1139  8AD6              ;
1140  8AD6              ;	12/1/24
1141  8AD6              ;
1142  8AD6              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1143  8AD6
1144  8AD6              Actualiza_Puntero_de_almacen_de_mov_masticados
1145  8AD6
1146  8AD6 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1147  8AD9 01 04 00     	ld bc,4
1148  8ADC A7           	and a
1149  8ADD ED 4A        	adc hl,bc
1150  8ADF 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1151  8AE2 C9           	ret
1152  8AE3
1153  8AE3              ; --------------------------------------------------------------------------------------------------------------
1154  8AE3              ;
1155  8AE3              ;	09/03/24
1156  8AE3              ;
1157  8AE3              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1158  8AE3              ;
1159  8AE3              ;	IX contiene el puntero de impresión.
1160  8AE3              ;	DE contiene (Puntero_objeto).
1161  8AE3
1162  8AE3
1163  8AE3 ED 73 DD 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1164  8AE7 ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1165  8AEB
1166  8AEB D1           	pop de 															; DE contiene Puntero_objeto
1167  8AEC DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1168  8AEE
1169  8AEE ED 73 A9 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1170  8AF2
1171  8AF2 ED 7B DD 89  	ld sp,(Stack)
1172  8AF6
1173  8AF6 C9           	ret
1174  8AF7
1175  8AF7              ; --------------------------------------------------------------------------------------------------------------
1176  8AF7              ;
1177  8AF7              ;	28/12/23
1178  8AF7              ;
1179  8AF7              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1180  8AF7              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1181  8AF7
1182  8AF7              Guarda_foto_entidad_a_pintar
1183  8AF7
1184  8AF7 3A AD 89     	ld a,(Ctrl_0)
1185  8AFA CB 77        	bit 6,a
1186  8AFC 28 04        	jr z,5F
1187  8AFE
1188  8AFE              ;	Guarda la foto de Amadeus.
1189  8AFE
1190  8AFE              ;	call Draw
1191  8AFE              ;	call Guarda_movimiento_masticado	;! Provisional
1192  8AFE CD D9 99     	call Genera_datos_de_impresion
1193  8B01 C9           	ret
1194  8B02
1195  8B02              ; ENTIDADES!
1196  8B02              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1197  8B02
1198  8B02 3A EB 89     5 ld a,(Ctrl_3)
1199  8B05 CB 5F        	bit 3,a
1200  8B07 28 01        	jr z,1F
1201  8B09
1202  8B09              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1203  8B09
1204  8B09              4
1205  8B09              ;	call Prepara_registros_con_mov_masticados	; (Tb Genera_datos_de_impresion).
1206  8B09 C9           	ret
1207  8B0A
1208  8B0A              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1209  8B0A
1210  8B0A 3A EB 89     1 ld a,(Ctrl_3)
1211  8B0D CB 57        	bit 2,a
1212  8B0F 20 10        	jr nz,6F
1213  8B11
1214  8B11              ; Entidad guía o fantasma ???
1215  8B11
1216  8B11 3A B2 89     	ld a,(Ctrl_2)
1217  8B14 CB 6F        	bit 5,a
1218  8B16 20 10        	jr nz,3F
1219  8B18
1220  8B18              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1221  8B18
1222  8B18 18 EF        	jr 4B
1223  8B1A
1224  8B1A              ; ENTIDAD_GUÍA:
1225  8B1A              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1226  8B1A              ; _guardando "movimientos_masticados".
1227  8B1A
1228  8B1A 3A EB 89     2 ld a,(Ctrl_3)
1229  8B1D CB 57        	bit 2,a
1230  8B1F 28 07        	jr z,3F
1231  8B21
1232  8B21              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1233  8B21              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1234  8B21
1235  8B21 CB 97        6 res 2,a
1236  8B23 CB DF        	set 3,a
1237  8B25 32 EB 89     	ld (Ctrl_3),a
1238  8B28
1239  8B28
1240  8B28              ;	Esto sólo lo ejecuta una entidad guía.
1241  8B28
1242  8B28 CD 08 8E     3 	call Draw
1243  8B2B CD BB 8A     	call Guarda_movimiento_masticado
1244  8B2E CD D9 99     	call Genera_datos_de_impresion							; Hemos modificado (Scanlines_album_SP), +6.
1245  8B31
1246  8B31              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1247  8B31              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1248  8B31
1249  8B31              ;	call Convierte_guia_en_fantasma
1250  8B31 C9           	ret
1251  8B32
1252  8B32              ; ---------------------------------------------------------------------------------------------------------------------
1253  8B32              ;
1254  8B32              ;	13/03/24
1255  8B32              ;
1256  8B32
1257  8B32              Inicia_albumes_de_lineas
1258  8B32
1259  8B32 21 00 80     	ld hl,Scanlines_album
1260  8B35 22 E3 89     	ld (Album_de_pintado),hl
1261  8B38 22 E9 89     	ld (Scanlines_album_SP),hl
1262  8B3B
1263  8B3B 21 19 81     	ld hl,Scanlines_album_2
1264  8B3E 22 E5 89     	ld (Album_de_borrado),hl
1265  8B41 C9           	ret
1266  8B42
1267  8B42              ; ---------------------------------------------------------------------------------------------------------------------
1268  8B42              ;
1269  8B42              ; 8/1/23
1270  8B42              ;
1271  8B42              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1272  8B42              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1273  8B42              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1274  8B42
1275  8B42              ; Destruye HL y DE !!!!!
1276  8B42
1277  8B42              Inicia_punteros_de_cajas
1278  8B42
1279  8B42 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1280  8B45 CD 70 8B         call Extrae_address
1281  8B48 22 CF 89         ld (Puntero_store_caja),hl
1282  8B4B 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1283  8B4E 22 D3 89     	ld (Indice_restore_caja),hl
1284  8B51 CD 70 8B     	call Extrae_address
1285  8B54 22 D1 89     	ld (Puntero_restore_caja),hl
1286  8B57 C9               ret
1287  8B58
1288  8B58              ; *************************************************************************************************************************************************************
1289  8B58              ;
1290  8B58              ; 8/1/23
1291  8B58              ;
1292  8B58              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1293  8B58
1294  8B58              ;Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1295  8B58              ;	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1296  8B58              ;	ret
1297  8B58              ;Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1298  8B58              ;	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1299  8B58              ;	ret
1300  8B58
1301  8B58              ; -------------------------------------------------------------------------------------------------------------
1302  8B58              ;
1303  8B58              ; 21/9/23
1304  8B58              ;
1305  8B58
1306  8B58              ; Scanlines_album_Amadeus equ $72a0 ; (72a0h - 72ach).
1307  8B58
1308  8B58              ;;Limpia_album_Amadeus
1309  8B58              ;
1310  8B58              ;;	ld hl,Scanlines_album_Amadeus
1311  8B58              ;;	ld a,(hl)
1312  8B58              ;;	and a
1313  8B58              ;;	ret z
1314  8B58
1315  8B58              ;;	ld hl,Scanlines_album_Amadeus;
1316  8B58              ;;	ld de,Scanlines_album_Amadeus+1
1317  8B58              ;;	ld bc,11
1318  8B58              ;;	xor a
1319  8B58              ;;	ld (hl),a
1320  8B58              ;;	ldir
1321  8B58
1322  8B58              ;;	ld hl,Scanlines_album_Amadeus
1323  8B58              ;;	ld (End_Snapshot_Amadeus),hl
1324  8B58
1325  8B58              ;;	ret
1326  8B58
1327  8B58              ;Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1328  8B58              ;	ld de,Variables_de_borrado+1
1329  8B58              ;	ld bc,5
1330  8B58              ;	xor a
1331  8B58              ;	ld (hl),a
1332  8B58              ;	ldir
1333  8B58              ;	ret
1334  8B58
1335  8B58              ; -------------------------------------------------------------------------------------------------------------
1336  8B58              ;
1337  8B58              ; 	21/02/24
1338  8B58              ;
1339  8B58              ;	MODIFICA: AF,HL,BC,DE
1340  8B58              ;
1341  8B58              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1342  8B58              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1343  8B58
1344  8B58              Calcula_numero_de_malotes
1345  8B58
1346  8B58 21 00 80     	ld hl,Scanlines_album
1347  8B5B EB           	ex de,hl
1348  8B5C 2A E9 89     	ld hl,(Scanlines_album_SP)
1349  8B5F
1350  8B5F 06 00        	ld b,0
1351  8B61 7D           	ld a,l
1352  8B62 93           	sub e
1353  8B63 28 07        	jr z,1F
1354  8B65
1355  8B65              ; Nº de malotes no es "0".
1356  8B65
1357  8B65 D6 06        2 sub 6
1358  8B67 04           	inc b
1359  8B68 A7           	and a
1360  8B69 20 FA        	jr nz,2B
1361  8B6B 78           	ld a,b
1362  8B6C
1363  8B6C 32 D8 89     1 ld (Numero_de_malotes),a
1364  8B6F C9           	ret
1365  8B70
1366  8B70              ; -------------------------------------------------------------------------------------------------------------
1367  8B70              ;
1368  8B70              ; 8/9/23
1369  8B70              ;
1370  8B70
1371  8B70              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1372  8B70              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Scanlines_album.
1373  8B70
1374  8B70              ;Calcula_malotes_Amadeus
1375  8B70
1376  8B70              ;	ld hl,Scanlines_album_Amadeus
1377  8B70              ;	ex de,hl
1378  8B70              ;	ld hl,(End_Snapshot_Amadeus)
1379  8B70
1380  8B70              ;	ld a,h
1381  8B70              ;	and a
1382  8B70              ;	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1383  8B70
1384  8B70              ;	ld b,0
1385  8B70              ;	ld a,l
1386  8B70              ;	sub e
1387  8B70              ;	jr z,1F
1388  8B70
1389  8B70              ; Nº de malotes no es "0".
1390  8B70
1391  8B70              ;2 sub 6
1392  8B70              ;	inc b
1393  8B70              ;	and a
1394  8B70              ;	jr nz,2B
1395  8B70              ;	ld a,b
1396  8B70
1397  8B70              ;1 ld (Numero_de_malotes),a
1398  8B70              ;	ret
1399  8B70
1400  8B70              ; -------------------------------------------------------------------------------------------------------------
1401  8B70              ;
1402  8B70              ; 28/2/23
1403  8B70              ;
1404  8B70
1405  8B70              ;;Calcula_numero_de_disparotes
1406  8B70
1407  8B70              ;	ld hl,Scanlines_album_disparos
1408  8B70              ;	ex de,hl
1409  8B70              ;	ld hl,(End_Snapshot_disparos)
1410  8B70
1411  8B70              ;	ld b,0
1412  8B70              ;	ld a,l
1413  8B70              ;	sub e
1414  8B70              ;	jr z,1F
1415  8B70
1416  8B70              ; Nº de malotes no es "0".
1417  8B70
1418  8B70              ;2 sub 6
1419  8B70              ;	inc b
1420  8B70              ;	and a
1421  8B70              ;	jr nz,2B
1422  8B70              ;	ld a,b
1423  8B70
1424  8B70              ;1 ld (Numero_de_disparotes),a
1425  8B70              ;	ret
1426  8B70
1427  8B70              ; *************************************************************************************************************************************************************
1428  8B70              ;
1429  8B70              ; 20/10/22
1430  8B70              ;
1431  8B70              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1432  8B70              ;
1433  8B70              ; Destruye el puntero y DE !!!!!
1434  8B70
1435  8B70 5E           Extrae_address ld e,(hl)
1436  8B71 23           	inc hl
1437  8B72 56           	ld d,(hl)
1438  8B73 2B           	dec hl
1439  8B74 EB           	ex de,hl
1440  8B75 C9           	ret
1441  8B76
1442  8B76              ; *************************************************************************************************************************************************************
1443  8B76              ;
1444  8B76              ;	20/1/24
1445  8B76              ;
1446  8B76              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1447  8B76              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1448  8B76              ;
1449  8B76              ;   Destruye HL y BC !!!!!,
1450  8B76              ;
1451  8B76              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1452  8B76              ;					"0" ..... Izquierda.
1453  8B76
1454  8B76              Inicia_Puntero_objeto
1455  8B76
1456  8B76 3A 9F 89     	ld a,(Cuad_objeto)
1457  8B79 E6 01        	and 1
1458  8B7B F5           	push af
1459  8B7C CC 98 8B     	call z,Inicia_puntero_objeto_izq
1460  8B7F F1           	pop af
1461  8B80 C8           	ret z
1462  8B81 CD 85 8B     	call Inicia_puntero_objeto_der
1463  8B84 C9           	ret
1464  8B85
1465  8B85              ; Arrancamos desde la parte izquierda de la pantalla.
1466  8B85              ; Iniciamos (Indice_Sprite_der).
1467  8B85
1468  8B85 2A 95 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1469  8B88 22 99 89     	ld (Puntero_DESPLZ_der),hl
1470  8B8B CD 70 8B     	call Extrae_address
1471  8B8E 22 8F 89     	ld (Puntero_objeto),hl
1472  8B91
1473  8B91 2A 97 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1474  8B94 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1475  8B97 C9           	ret
1476  8B98
1477  8B98              ; Arrancamos desde la parte derecha de la pantalla.
1478  8B98              ; Iniciamos (Indice_Sprite_izq).
1479  8B98
1480  8B98 2A 97 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1481  8B9B 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1482  8B9E CD 70 8B     	call Extrae_address
1483  8BA1 22 8F 89     	ld (Puntero_objeto),hl
1484  8BA4
1485  8BA4 2A 95 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1486  8BA7 22 99 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1487  8BAA C9           	ret
1488  8BAB
1489  8BAB              ; **************************************************************************************************
1490  8BAB              ;
1491  8BAB              ;	31/01/24
1492  8BAB              ;
1493  8BAB              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1494  8BAB
1495  8BAB              Restore_entidad
1496  8BAB
1497  8BAB 2A CF 89     	ld hl,(Puntero_store_caja)
1498  8BAE 11 8A 89     	ld de,Bandeja_DRAW
1499  8BB1 7E           	ld a,(hl)
1500  8BB2 12           	ld (de),a
1501  8BB3 23           	inc hl 											; (Tipo).
1502  8BB4
1503  8BB4 11 91 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1504  8BB7 01 02 00     	ld bc,2
1505  8BBA ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1506  8BBC
1507  8BBC 13           	inc de
1508  8BBD 7E           	ld a,(hl)
1509  8BBE 12           	ld (de),a 										; Transferimos (Attr).
1510  8BBF 23           	inc hl
1511  8BC0
1512  8BC0 11 A0 89     	ld de,Impacto
1513  8BC3
1514  8BC3 7E           	ld a,(hl)
1515  8BC4 12           	ld (de),a 										; Transferimos (Impacto).
1516  8BC5 23           	inc hl
1517  8BC6
1518  8BC6 13           	inc de
1519  8BC7
1520  8BC7 01 06 00     	ld bc,6
1521  8BCA ED B0        	ldir
1522  8BCC
1523  8BCC 01 07 00     	ld bc,7
1524  8BCF ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1525  8BD1              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1526  8BD1 11 B2 89     	ld de,Ctrl_2
1527  8BD4
1528  8BD4 7E           	ld a,(hl)
1529  8BD5 12           	ld (de),a 										; Transferimos (Ctrl_2).
1530  8BD6
1531  8BD6 C9           	ret
1532  8BD7
1533  8BD7              ; **************************************************************************************************
1534  8BD7              ;
1535  8BD7              ;	08/05/23
1536  8BD7              ;
1537  8BD7              ;	Incrementamos los dos punteros de entidades. (+1).
1538  8BD7
1539  8BD7              Incrementa_punteros_de_cajas
1540  8BD7
1541  8BD7 2A D1 89     	ld hl,(Puntero_restore_caja)
1542  8BDA 22 CF 89     	ld (Puntero_store_caja),hl
1543  8BDD 2A D3 89     	ld hl,(Indice_restore_caja)
1544  8BE0 23           	inc hl
1545  8BE1 23           	inc hl
1546  8BE2 22 D3 89     	ld (Indice_restore_caja),hl
1547  8BE5 CD 70 8B         call Extrae_address
1548  8BE8 22 D1 89         ld (Puntero_restore_caja),hl
1549  8BEB C9               ret
1550  8BEC
1551  8BEC              ; **************************************************************************************************
1552  8BEC              ;
1553  8BEC              ;	21/12/23
1554  8BEC              ;
1555  8BEC              ;	Restore_Amadeus
1556  8BEC              ;
1557  8BEC              ;	Cargamos en DRAW los parámetros de Amadeus.
1558  8BEC              ;
1559  8BEC
1560  8BEC              ;Restore_Amadeus	push hl
1561  8BEC              ;	push de
1562  8BEC              ; 	push bc
1563  8BEC              ;	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1564  8BEC              ;	ld de,Bandeja_DRAW
1565  8BEC              ;	ld bc,42
1566  8BEC              ;	ldir
1567  8BEC              ;	pop bc
1568  8BEC              ;	pop de
1569  8BEC              ;	pop hl
1570  8BEC              ;	ret
1571  8BEC
1572  8BEC              ; *************************************************************************************************************************************************************
1573  8BEC              ;
1574  8BEC              ;	21/12/23
1575  8BEC              ;
1576  8BEC              ;	Store_Amadeus
1577  8BEC              ;
1578  8BEC              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1579  8BEC              ;
1580  8BEC              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1581  8BEC              ;
1582  8BEC              ;	DESTRUYE: HL y BC y DE.
1583  8BEC
1584  8BEC              ;Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1585  8BEC              ;	ld bc,42
1586  8BEC              ;	ldir
1587  8BEC              ;	ret
1588  8BEC
1589  8BEC              ; -----------------------------------------------------------
1590  8BEC              ;
1591  8BEC              ;	21/12/23
1592  8BEC              ;
1593  8BEC              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1594  8BEC              ;
1595  8BEC              ;	Destruye: HL,BC,DE,A
1596  8BEC
1597  8BEC              ;Borra_datos_entidad ld hl,Bandeja_DRAW
1598  8BEC              ;	ld bc,41
1599  8BEC              ;	xor a
1600  8BEC              ;	ld (hl),a;
1601  8BEC              ;	ld de,Bandeja_DRAW+1
1602  8BEC              ;	ldir
1603  8BEC              ;	ret
1604  8BEC
1605  8BEC              ; -----------------------------------------------------------
1606  8BEC
1607  8BEC              ; Teclado.
1608  8BEC
1609  8BEC 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1610  8BEE DB FE        	in a,($fe)
1611  8BF0 E6 01        	and $01
1612  8BF2 28 02        	jr z,1f
1613  8BF4 18 F6        	jr Pulsa_ENTER
1614  8BF6 C9           1 ret
1615  8BF7
1616  8BF7              ; **************************************************************************************************
1617  8BF7              ;
1618  8BF7              ; Temporización.
1619  8BF7
1620  8BF7              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1621  8BF7              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1622  8BF7              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1623  8BF7              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1624  8BF7
1625  8BF7              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1626  8BF7              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1627  8BF7              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1628  8BF7
1629  8BF7              ; A partir de $4f61 no hace falta DELAY.
1630  8BF7
1631  8BF7              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1632  8BF7
1633  8BF7 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1634  8BFA 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1635  8BFB 78           	LD A,B
1636  8BFC A7           	AND A
1637  8BFD 20 FB        	JR NZ,wait
1638  8BFF C9           	RET
1639  8C00
1640  8C00              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1641  8C00              ;
1642  8C00              ;	5/3/23
1643  8C00              ;
1644  8C00              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1645  8C00
1646  8C00              ;Movimiento_Amadeus
1647  8C00
1648  8C00              ; Disparo.
1649  8C00
1650  8C00              ;	ld a,(Disparo_Amadeus)
1651  8C00              ;	and a
1652  8C00              ;	jr nz,1F
1653  8C00              ;	jr 2F
1654  8C00
1655  8C00              ;1 ld a,$f7													; "5" para disparar.
1656  8C00              ;	in a,($fe)
1657  8C00              ;	and $10
1658  8C00
1659  8C00              ;	push af
1660  8C00              ;	call z,Genera_disparo
1661  8C00              ;	pop af
1662  8C00              ;	jr nz,2F
1663  8C00
1664  8C00              ;	ld a,(Disparo_Amadeus)
1665  8C00              ;	xor 1
1666  8C00              ;	ld (Disparo_Amadeus),a
1667  8C00              ;2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1668  8C00              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1669  8C00              ;	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1670  8C00              ;    call z,Mov_left											;			"			"			"			"			"			"			"			"
1671  8C00
1672  8C00              ;	ld a,$f7
1673  8C00              ;	in a,($fe)
1674  8C00              ;	and $01
1675  8C00              ;	ret z
1676  8C00
1677  8C00              ;	ld a,$f7
1678  8C00              ;	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1679  8C00              ;	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1680  8C00              ;	call z,Mov_right										;			"			"			"			"			"			"			"			"
1681  8C00              ;	ret
1682  8C00
1683  8C00              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1684  8C00              ;
1685  8C00              ;	Rutina provisional para que los malotes cagen balas.
1686  8C00
1687  8C00              ;Detecta_disparo_entidad
1688  8C00
1689  8C00              ;	ld a,(Disparo_entidad)
1690  8C00              ;	and a
1691  8C00              ;	ret z
1692  8C00
1693  8C00              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1694  8C00
1695  8C00              ;	ld a,$7f				; Detecta SPACE.
1696  8C00              ;	in a,($fe)
1697  8C00              ;	and 1
1698  8C00              ;	ret nz
1699  8C00
1700  8C00              ;	call Genera_disparo
1701  8C00              ;	ret
1702  8C00
1703  8C00              ; ----------------------------------------------------------------------
1704  8C00              ;
1705  8C00              ;	8/9/23
1706  8C00
1707  8C00              ;Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1708  8C00              ; 	dec hl
1709  8C00              ;	ld a,(hl)
1710  8C00              ;	and a
1711  8C00              ;	ret z										; Salimos si es álbum está vacío.
1712  8C00
1713  8C00              ;	ld de,Variables_de_borrado+5
1714  8C00              ;	ld bc,6
1715  8C00              ;	lddr
1716  8C00              ;	ret
1717  8C00
1718  8C00              ; ----------------------------------------------------------------------
1719  8C00              ;
1720  8C00              ;	9/9/23
1721  8C00
1722  8C00              ;Repone_datos_de_borrado_Amadeus
1723  8C00
1724  8C00              ;	ld hl,Variables_de_borrado
1725  8C00              ;	ld de,Scanlines_album_Amadeus
1726  8C00              ;	ld bc,6
1727  8C00              ;	ldir
1728  8C00
1729  8C00              ;	ex de,hl
1730  8C00              ;	ld (End_Snapshot_Amadeus),hl
1731  8C00
1732  8C00              ;	ret
1733  8C00
1734  8C00              ; ----------------------------------------------------------------------
1735  8C00              ;
1736  8C00              ;	27/10/23
1737  8C00              ;
1738  8C00
1739  8C00              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1740  8C00              ;	_ Scanlines_album correspondiente.
1741  8C00
1742  8C00              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1743  8C00              ;	_ durante el proceso de escritura.
1744  8C00
1745  8C00              ;Repone_datos_de_borrado
1746  8C00
1747  8C00              ;	ld de,(Scanlines_album_SP)
1748  8C00              ;	ld hl,Variables_de_borrado
1749  8C00              ;	ld bc,6
1750  8C00              ;	ldir
1751  8C00
1752  8C00              ;	ex de,hl
1753  8C00              ;	ld (Scanlines_album_SP),hl
1754  8C00
1755  8C00              ;	ret
1756  8C00
1757  8C00              ; --------------------------------------------------------------------------------------
1758  8C00
1759  8C00              ;Pinta_Amadeus
1760  8C00
1761  8C00              ;   	call Calcula_malotes_Amadeus
1762  8C00              ;	call Extrae_foto_Amadeus
1763  8C00              ;	call Limpia_album_Amadeus
1764  8C00
1765  8C00              ;	ret
1766  8C00
1767  8C00              ; -----------------------------------------------------------------------------------
1768  8C00              ;
1769  8C00              ;	10/12/23
1770  8C00              ;
1771  8C00              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1772  8C00
1773  8C00              Actualiza_relojes
1774  8C00
1775  8C00 3A EB 89     	ld a,(Ctrl_3)
1776  8C03 CB 47        	bit 0,a
1777  8C05 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1778  8C06
1779  8C06 21 F0 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1780  8C09 34           	inc (hl)
1781  8C0A
1782  8C0A 34           	inc (hl)
1783  8C0B 35           	dec (hl)
1784  8C0C C0           	ret nz
1785  8C0D
1786  8C0D 21 F1 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1787  8C10 34           	inc (hl)
1788  8C11 C9           	ret
1789  8C12
1790  8C12              ; ---------------------------------------------------------------
1791  8C12
1792  8C12              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8C12              ;---------------------------------------------------------------------------------------------------------------
   2+ 8C12              ;
   3+ 8C12              ;   8/3/24
   4+ 8C12              ;
   5+ 8C12              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8C12              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8C12              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8C12              ;	_ de la 1ª entidad del Nivel.
   9+ 8C12              ;
  10+ 8C12              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 8C12
  12+ 8C12              ;	MODIFICA: HL,DE y A.
  13+ 8C12              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 8C12
  15+ 8C12              Inicializa_Nivel
  16+ 8C12
  17+ 8C12 2A F5 89     	ld hl,(Puntero_indice_NIVELES)
  18+ 8C15 CD 70 8B     	call Extrae_address
  19+ 8C18 7E           	ld a,(hl)
  20+ 8C19 32 D5 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 8C1C 23           	inc hl
  22+ 8C1D CD 2A 8C     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 8C20 22 F7 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 8C23 CD 33 8C     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 8C26
  26+ 8C26 CD 44 8C     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 8C29 C9           	ret
  28+ 8C2A
  29+ 8C2A              ; ----------------------
  30+ 8C2A
  31+ 8C2A 11 B4 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 8C2D 01 04 00     	ld bc,4
  33+ 8C30 ED B0        	ldir
  34+ 8C32 C9           	ret
  35+ 8C33
  36+ 8C33 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 8C34 CD 84 8D         call Calcula_salto_en_BC
  38+ 8C37 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 8C3A A7               and a
  40+ 8C3B ED 4A            adc hl,bc
  41+ 8C3D CD 70 8B         call Extrae_address
  42+ 8C40 22 C0 89         ld (Puntero_indice_mov),hl
  43+ 8C43 C9               ret
  44+ 8C44
  45+ 8C44 3A 8A 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 8C47 CD 84 8D     	call Calcula_salto_en_BC
  47+ 8C4A 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 8C4D A7               and a
  49+ 8C4E ED 4A            adc hl,bc
  50+ 8C50 CD 70 8B         call Extrae_address
  51+ 8C53 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 8C56 C9           	ret
  53+ 8C57
  54+ 8C57              ;---------------------------------------------------------------------------------------------------------------
  55+ 8C57              ;
  56+ 8C57              ;   5/1/24
  57+ 8C57              ;
  58+ 8C57              ;	Destruye A,BC,HL,DE
  59+ 8C57
  60+ 8C57              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 8C57              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 8C57
  63+ 8C57              Inicia_Entidades
  64+ 8C57
  65+ 8C57              ; Preparamos los punteros de las cajas de entidades:
  66+ 8C57
  67+ 8C57 CD 42 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 8C5A              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 8C5A CD EB 8D     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 8C5D
  71+ 8C5D 2A F7 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 8C60
  73+ 8C60 22 F7 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 8C63
  75+ 8C63 CD 32 8D     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 8C66
  77+ 8C66 2A F7 89     	ld hl,(Datos_de_nivel)
  78+ 8C69
  79+ 8C69              ; En este punto:
  80+ 8C69              ;
  81+ 8C69              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 8C69              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 8C69
  84+ 8C69 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 8C6A
  86+ 8C6A 7E           	ld a,(hl)
  87+ 8C6B CD A7 8C     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 8C6E
  89+ 8C6E CD 96 8D     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 8C71
  91+ 8C71              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 8C71
  93+ 8C71 CD 54 8D     	call Busca_mov_masticados_segun_tipo
  94+ 8C74
  95+ 8C74 A7           	and a
  96+ 8C75 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 8C77
  98+ 8C77              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 8C77
 100+ 8C77              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 8C77              ;	_ de este tipo de entidad.
 102+ 8C77
 103+ 8C77 CD 52 99     	call Situa_en_contador_general_de_mov_masticados
 104+ 8C7A CD 5F 99     	call Transfiere_datos_de_contadores
 105+ 8C7D
 106+ 8C7D 18 06        	jr 4F
 107+ 8C7F
 108+ 8C7F CD 92 8A     3 call Construye_movimientos_masticados_entidad
 109+ 8C82
 110+ 8C82              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 8C82              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 8C82              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 8C82              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 8C82              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 8C82
 116+ 8C82 CD 12 8D     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 8C85              ;																; _ Mov_masticados ya generados.
 118+ 8C85 CD C1 8C     4 call Guarda_foto_de_mov_masticado
 119+ 8C88
 120+ 8C88              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 121+ 8C88
 122+ 8C88 2A A7 89     	ld hl,(Puntero_de_impresion)
 123+ 8C8B CD 95 99     	call Genera_coordenadas
 124+ 8C8E CD BD 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 125+ 8C91 CD CB 8C     	call Limpiamos_bandeja_DRAW
 126+ 8C94 CD D7 8B     	call Incrementa_punteros_de_cajas
 127+ 8C97
 128+ 8C97              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 129+ 8C97              ; _ entidad del Nivel.
 130+ 8C97
 131+ 8C97 3A EC 89     	ld a,(Ctrl_4)
 132+ 8C9A E6 F0        	and $f0
 133+ 8C9C 32 EC 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 134+ 8C9F
 135+ 8C9F              ; Siguiente entidad del Nivel.
 136+ 8C9F
 137+ 8C9F 2A F7 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 138+ 8CA2 23           	inc hl 														; _ entidad del Nivel.
 139+ 8CA3
 140+ 8CA3 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 141+ 8CA4
 142+ 8CA4 10 BA        	djnz 2B
 143+ 8CA6
 144+ 8CA6 C9           	ret
 145+ 8CA7
 146+ 8CA7              ; ---------------------------------------------------------------------
 147+ 8CA7              ;
 148+ 8CA7              ;	10/02/24
 149+ 8CA7              ;
 150+ 8CA7              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 151+ 8CA7              ;
 152+ 8CA7              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 153+ 8CA7
 154+ 8CA7              Definicion_segun_tipo
 155+ 8CA7
 156+ 8CA7 CD 84 8D     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 157+ 8CAA 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 158+ 8CAD CD 8C 8D     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 159+ 8CB0 C9           	ret
 160+ 8CB1
 161+ 8CB1              ; ---------------------------------------------------------------------
 162+ 8CB1              ;
 163+ 8CB1              ;	30/01/24
 164+ 8CB1
 165+ 8CB1
 166+ 8CB1              Store_Restore_cajas
 167+ 8CB1
 168+ 8CB1              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 169+ 8CB1
 170+ 8CB1 2A A7 89     	ld hl,(Puntero_de_impresion)
 171+ 8CB4 CD 95 99     	call Genera_coordenadas
 172+ 8CB7
 173+ 8CB7 CD BD 8D     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 174+ 8CBA CD CB 8C     	call Limpiamos_bandeja_DRAW
 175+ 8CBD
 176+ 8CBD              ; 	Entidad_sospechosa. 20/4/23
 177+ 8CBD
 178+ 8CBD              ;	ld a,(Impacto)
 179+ 8CBD              ;	and a
 180+ 8CBD              ;	jr z,1F
 181+ 8CBD
 182+ 8CBD              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 183+ 8CBD              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 184+ 8CBD              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 185+ 8CBD              ;	adc hl,bc 											; _ "0" más adelante.
 186+ 8CBD              ;	ld (Entidad_sospechosa_de_colision),hl
 187+ 8CBD
 188+ 8CBD
 189+ 8CBD              ;1 ld hl,(Puntero_restore_caja)
 190+ 8CBD              ;	ld a,(hl)
 191+ 8CBD              ;	and a
 192+ 8CBD              ;	push af
 193+ 8CBD              ;	jr z,2F
 194+ 8CBD
 195+ 8CBD              ;	di
 196+ 8CBD              ;	ld de,Bandeja_DRAW
 197+ 8CBD              ;	ld bc,42
 198+ 8CBD              ;	ldir
 199+ 8CBD              ;	ei
 200+ 8CBD
 201+ 8CBD CD D7 8B     2 call Incrementa_punteros_de_cajas
 202+ 8CC0 C9           	ret
 203+ 8CC1
 204+ 8CC1
 205+ 8CC1              ; ---------------------------------------------------------------------
 206+ 8CC1              ;
 207+ 8CC1              ;	29/01/24
 208+ 8CC1
 209+ 8CC1              Guarda_foto_de_mov_masticado
 210+ 8CC1
 211+ 8CC1 CD E3 8A     	call Cargamos_registros_con_mov_masticado
 212+ 8CC4 CD D9 99     	call Genera_datos_de_impresion
 213+ 8CC7              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 214+ 8CC7              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 215+ 8CC7              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 216+ 8CC7              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 217+ 8CC7
 218+ 8CC7 CD D6 8C     	call Decrementa_Contador_de_mov_masticados
 219+ 8CCA C9           	ret
 220+ 8CCB
 221+ 8CCB              ; ---------------------------------------------------------------------
 222+ 8CCB              ;
 223+ 8CCB              ;	25/01/24
 224+ 8CCB
 225+ 8CCB 21 8A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 226+ 8CCE 06 2A        	ld b,42
 227+ 8CD0 AF           	xor a
 228+ 8CD1
 229+ 8CD1 77           1 ld (hl),a
 230+ 8CD2 23           	inc hl
 231+ 8CD3 10 FC        	djnz 1B
 232+ 8CD5
 233+ 8CD5 C9           	ret
 234+ 8CD6
 235+ 8CD6              ; ---------------------------------------------------------------------
 236+ 8CD6              ;
 237+ 8CD6              ;	22/01/24
 238+ 8CD6
 239+ 8CD6 2A AB 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 240+ 8CD9 2B           	dec hl
 241+ 8CDA
 242+ 8CDA 24           	inc h
 243+ 8CDB 25           	dec h
 244+ 8CDC
 245+ 8CDC FC E3 8C     	call m,Reinicia_entidad_maliciosa
 246+ 8CDF
 247+ 8CDF              ;	jr nz,1F
 248+ 8CDF
 249+ 8CDF              ;	inc l
 250+ 8CDF              ;	dec l
 251+ 8CDF
 252+ 8CDF              ;	di
 253+ 8CDF              ;	jr z,$
 254+ 8CDF              ;	ei
 255+ 8CDF
 256+ 8CDF 22 AB 89     1 ld (Contador_de_mov_masticados),hl
 257+ 8CE2 C9           	ret
 258+ 8CE3
 259+ 8CE3              ; ---------------------------------------------------------------------
 260+ 8CE3              ;
 261+ 8CE3              ;	10/2/24
 262+ 8CE3
 263+ 8CE3              Reinicia_entidad_maliciosa
 264+ 8CE3
 265+ 8CE3              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 266+ 8CE3
 267+ 8CE3 CD 52 99     	call Situa_en_contador_general_de_mov_masticados
 268+ 8CE6 CD 5F 99     	call Transfiere_datos_de_contadores
 269+ 8CE9
 270+ 8CE9              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 271+ 8CE9
 272+ 8CE9 3A 8A 89     	ld a,(Tipo)
 273+ 8CEC CD A7 8C     	call Definicion_segun_tipo
 274+ 8CEF
 275+ 8CEF E5           	push hl
 276+ 8CF0 DD E1        	pop ix
 277+ 8CF2
 278+ 8CF2 DD 6E 0B     	ld l,(ix+11)
 279+ 8CF5 DD 66 0C     	ld h,(ix+12)
 280+ 8CF8
 281+ 8CF8 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 282+ 8CFB
 283+ 8CFB              ;	Recolocamos el puntero (Scanlines_album_SP) del álbum de fotos para colocamos justo después del borrado.
 284+ 8CFB              ;	Queremos pintar la entidad en su posición de inicio.
 285+ 8CFB
 286+ 8CFB 2A E9 89     	ld hl,(Scanlines_album_SP)
 287+ 8CFE 01 06 00     	ld bc,6
 288+ 8D01 A7           	and a
 289+ 8D02 ED 42        	sbc hl,bc
 290+ 8D04 22 E9 89     	ld (Scanlines_album_SP),hl
 291+ 8D07
 292+ 8D07 CD E3 8A     	call Cargamos_registros_con_mov_masticado
 293+ 8D0A CD D9 99     	call Genera_datos_de_impresion
 294+ 8D0D
 295+ 8D0D 2A AB 89     	ld hl,(Contador_de_mov_masticados)
 296+ 8D10 2B           	dec hl
 297+ 8D11
 298+ 8D11 C9           	ret
 299+ 8D12
 300+ 8D12
 301+ 8D12
 302+ 8D12
 303+ 8D12              ; ---------------------------------------------------------------------
 304+ 8D12              ;
 305+ 8D12              ;	22/01/24
 306+ 8D12
 307+ 8D12 21 EC 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 308+ 8D15 CB 46        	bit 0,(hl)
 309+ 8D17 20 0D        	jr nz,1F
 310+ 8D19 CB 4E        	bit 1,(hl)
 311+ 8D1B 20 0C        	jr nz,2F
 312+ 8D1D CB 56        	bit 2,(hl)
 313+ 8D1F 20 0B        	jr nz,3F
 314+ 8D21 CB 5E        	bit 3,(hl)
 315+ 8D23 20 0A        	jr nz,4F
 316+ 8D25 C9           	ret
 317+ 8D26
 318+ 8D26 CB E6        1 set 4,(hl)
 319+ 8D28 C9           	ret
 320+ 8D29 CB EE        2 set 5,(hl)
 321+ 8D2B C9           	ret
 322+ 8D2C CB F6        3 set 6,(hl)
 323+ 8D2E C9           	ret
 324+ 8D2F CB FE        4 set 7,(hl)
 325+ 8D31 C9           	ret
 326+ 8D32
 327+ 8D32              ; ---------------------------------------------------------------------
 328+ 8D32              ;
 329+ 8D32              ;	23/01/24
 330+ 8D32              ;
 331+ 8D32              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 332+ 8D32              ;
 333+ 8D32              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 334+ 8D32              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 335+ 8D32              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 336+ 8D32              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 337+ 8D32
 338+ 8D32              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 339+ 8D32
 340+ 8D32 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 341+ 8D33 3D           	dec a
 342+ 8D34 20 06        	jr nz,1F
 343+ 8D36
 344+ 8D36              ; --- Tipo_1
 345+ 8D36
 346+ 8D36 21 EC 89     	ld hl,Ctrl_4
 347+ 8D39 CB C6        	set 0,(hl)
 348+ 8D3B C9           	ret
 349+ 8D3C
 350+ 8D3C 3D           1 dec a
 351+ 8D3D 20 06        	jr nz,2F
 352+ 8D3F
 353+ 8D3F              ; --- Tipo_2
 354+ 8D3F
 355+ 8D3F 21 EC 89     	ld hl,Ctrl_4
 356+ 8D42 CB CE        	set 1,(hl)
 357+ 8D44 C9           	ret
 358+ 8D45
 359+ 8D45 3D           2 dec a
 360+ 8D46 20 06        	jr nz,3F
 361+ 8D48
 362+ 8D48              ; --- Tipo_3
 363+ 8D48
 364+ 8D48 21 EC 89     	ld hl,Ctrl_4
 365+ 8D4B CB D6        	set 2,(hl)
 366+ 8D4D C9           	ret
 367+ 8D4E
 368+ 8D4E              ; --- Tipo_3
 369+ 8D4E
 370+ 8D4E 21 EC 89     3 ld hl,Ctrl_4
 371+ 8D51 CB D6        	set 2,(hl)
 372+ 8D53 C9           	ret
 373+ 8D54
 374+ 8D54              ; ---------------------------------------------------------------------
 375+ 8D54              ;
 376+ 8D54              ;	22/01/24
 377+ 8D54
 378+ 8D54 21 EC 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 379+ 8D57 CB 46        	bit 0,(hl)
 380+ 8D59 20 0E        	jr nz,1F
 381+ 8D5B
 382+ 8D5B CB 4E        	bit 1,(hl)
 383+ 8D5D 20 10        	jr nz,2F
 384+ 8D5F
 385+ 8D5F CB 56        	bit 2,(hl)
 386+ 8D61 20 12        	jr nz,3F
 387+ 8D63
 388+ 8D63 CB 5E        	bit 3,(hl)
 389+ 8D65 20 14        	jr nz,4F
 390+ 8D67 18 19        	jr 6F
 391+ 8D69
 392+ 8D69              ; Entidad_de_Tipo_1.
 393+ 8D69
 394+ 8D69 CB 66        1 bit 4,(hl)
 395+ 8D6B 28 15        	jr z,6F
 396+ 8D6D 18 10        	jr 5F
 397+ 8D6F
 398+ 8D6F              ; Entidad_de_Tipo_2.
 399+ 8D6F
 400+ 8D6F CB 6E        2 bit 5,(hl)
 401+ 8D71 28 0F        	jr z,6F
 402+ 8D73 18 0A        	jr 5F
 403+ 8D75
 404+ 8D75              ; Entidad_de_Tipo_3.
 405+ 8D75
 406+ 8D75 CB 76        3 bit 6,(hl)
 407+ 8D77 28 09        	jr z,6F
 408+ 8D79 18 04        	jr 5F
 409+ 8D7B
 410+ 8D7B              ; Entidad_de_Tipo_4.
 411+ 8D7B
 412+ 8D7B CB 7E        4 bit 7,(hl)
 413+ 8D7D 28 03        	jr z,6F
 414+ 8D7F
 415+ 8D7F              ; Esta entidad TIENE MOV_MASTICADOS.
 416+ 8D7F
 417+ 8D7F AF           5 xor a
 418+ 8D80 3C           	inc a
 419+ 8D81 C9           	ret
 420+ 8D82
 421+ 8D82              ; Esta entidad NO TIENE MOV_MASTICADOS.
 422+ 8D82
 423+ 8D82 AF           6 xor a
 424+ 8D83 C9           	ret
 425+ 8D84
 426+ 8D84              ;	------------------------------------------------------------------------------------
 427+ 8D84              ;
 428+ 8D84              ;	12/01/24
 429+ 8D84              ;
 430+ 8D84              ;	INPUTS:	A contiene el (Tipo) de entidad.
 431+ 8D84              ;
 432+ 8D84              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 433+ 8D84              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 434+ 8D84
 435+ 8D84 CB 27        Calcula_salto_en_BC sla a
 436+ 8D86 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 437+ 8D88 4F           	ld c,a
 438+ 8D89 06 00        	ld b,0
 439+ 8D8B C9           	ret
 440+ 8D8C
 441+ 8D8C              ; ------------------------------------------------------------------
 442+ 8D8C              ;
 443+ 8D8C              ;	19/1/24
 444+ 8D8C              ;
 445+ 8D8C              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 446+ 8D8C              ;	Actualiza (Datos_de_entidad) con esa dirección.
 447+ 8D8C
 448+ 8D8C A7           Situa_en_datos_de_definicion and a
 449+ 8D8D ED 4A        	adc hl,bc
 450+ 8D8F CD 70 8B     	call Extrae_address
 451+ 8D92 22 DB 89         ld (Datos_de_entidad),hl
 452+ 8D95 C9           	ret
 453+ 8D96
 454+ 8D96              ; ------------------------------------------------------------------
 455+ 8D96
 456+ 8D96              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 457+ 8D96              ; 	inc de
 458+ 8D96              ; 	inc de
 459+ 8D96              ; 	ex de,hl
 460+ 8D96              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 461+ 8D96              ; 	ret
 462+ 8D96
 463+ 8D96              ; ----------------------------------------------------------------------------------------------------------
 464+ 8D96              ;
 465+ 8D96              ;	31/1/24
 466+ 8D96              ;
 467+ 8D96              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 468+ 8D96              ;	_ de entidad.
 469+ 8D96              ;
 470+ 8D96              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 471+ 8D96              ;
 472+ 8D96              ;
 473+ 8D96              ;	MODIFICA: HL,DE y BC
 474+ 8D96
 475+ 8D96
 476+ 8D96              Definicion_de_entidad_a_bandeja_DRAW
 477+ 8D96
 478+ 8D96 11 8A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 479+ 8D99 01 03 00     	ld bc,3
 480+ 8D9C ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 481+ 8D9E              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 482+ 8D9E 11 94 89     	ld de,Attr									; DE en (Attr).
 483+ 8DA1 01 05 00     	ld bc,5
 484+ 8DA4 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 485+ 8DA6              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 486+ 8DA6 11 9D 89     	ld de,Posicion_inicio
 487+ 8DA9 01 03 00     	ld bc,3
 488+ 8DAC ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 489+ 8DAE              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 490+ 8DAE 11 A9 89     	ld de,Puntero_de_almacen_de_mov_masticados
 491+ 8DB1 01 02 00     	ld bc,2
 492+ 8DB4 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 493+ 8DB6
 494+ 8DB6 11 B3 89     	ld de,Frames_explosion
 495+ 8DB9 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 496+ 8DBB 12           	ld (de),a 									; Vuelco (Frames_explosion).
 497+ 8DBC
 498+ 8DBC C9           	ret
 499+ 8DBD
 500+ 8DBD              ; ----------------------------------------------------------------------------------------------------------
 501+ 8DBD              ;
 502+ 8DBD              ;	22/01/24
 503+ 8DBD              ;
 504+ 8DBD              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 505+ 8DBD              ;
 506+ 8DBD              ;	Las cajas contienen entidades iniciadas:
 507+ 8DBD              ;
 508+ 8DBD              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 509+ 8DBD              ;
 510+ 8DBD              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 511+ 8DBD              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 512+ 8DBD              ;
 513+ 8DBD              ;	MODIFICA: HL,DE y BC
 514+ 8DBD
 515+ 8DBD 21 8A 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 516+ 8DC0 ED 5B CF 89  	ld de,(Puntero_store_caja)
 517+ 8DC4 7E           	ld a,(hl)
 518+ 8DC5 12           	ld (de),a
 519+ 8DC6 13           	inc de 													; (Tipo).
 520+ 8DC7
 521+ 8DC7 21 91 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 522+ 8DCA 01 02 00     	ld bc,2
 523+ 8DCD ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 524+ 8DCF              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 525+ 8DCF 23           	inc hl
 526+ 8DD0 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 527+ 8DD1 12           	ld (de),a
 528+ 8DD2 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 529+ 8DD3
 530+ 8DD3 21 A0 89     	ld hl,Impacto
 531+ 8DD6 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 532+ 8DD7 12           	ld (de),a
 533+ 8DD8 13           	inc de 													; (Impacto), volcado a la caja.
 534+ 8DD9              ;															; DE situado ahora en (Variables_de_borrado).
 535+ 8DD9 23           	inc hl
 536+ 8DDA 01 06 00     	ld bc,6
 537+ 8DDD ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 538+ 8DDF              ; 															; DE situado ahora en (Puntero_de_impresión).
 539+ 8DDF 01 07 00     	ld bc,7
 540+ 8DE2 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 541+ 8DE4              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 542+ 8DE4              ;															; HL apunta ahora a (Columnas).
 543+ 8DE4 21 B2 89     	ld hl,Ctrl_2
 544+ 8DE7 7E           	ld a,(hl)
 545+ 8DE8 12           	ld (de),a 												; Volcamos (Ctrl_2).
 546+ 8DE9 13           	inc de
 547+ 8DEA
 548+ 8DEA C9           	ret
 549+ 8DEB
 550+ 8DEB              ;---------------------------------------------------------------------------------------------------------------
 551+ 8DEB              ;
 552+ 8DEB              ;	5/1/24
 553+ 8DEB              ;
 554+ 8DEB              ;	INICIALIZA (Numero_parcial_de_entidades).
 555+ 8DEB              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 556+ 8DEB              ;
 557+ 8DEB              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 558+ 8DEB              ;
 559+ 8DEB              ;	(Numero_parcial_de_entidades)="7".
 560+ 8DEB              ;
 561+ 8DEB              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 562+ 8DEB              ;
 563+ 8DEB              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 564+ 8DEB              ;
 565+ 8DEB              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 566+ 8DEB              ;	MODIFICA: A y B.
 567+ 8DEB              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 568+ 8DEB
 569+ 8DEB              Inicializa_Numero_parcial_de_entidades
 570+ 8DEB
 571+ 8DEB              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 572+ 8DEB
 573+ 8DEB 3A D5 89     	ld a,(Numero_de_entidades)
 574+ 8DEE A7           	and a
 575+ 8DEF
 576+ 8DEF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8DEF              ;	jr z,$
 578+ 8DEF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 579+ 8DEF
 580+ 8DEF 20 03        	jr nz,3F
 581+ 8DF1
 582+ 8DF1              ; ---------- ---------- ----------
 583+ 8DF1
 584+ 8DF1              ;! RESET para pruebas. Omitir esta línea en modo normal.
 585+ 8DF1              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 586+ 8DF1
 587+ 8DF1 CD 12 8C     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 588+ 8DF4
 589+ 8DF4              ; ---------- ---------- ----------
 590+ 8DF4
 591+ 8DF4 3A D5 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 592+ 8DF7 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 593+ 8DF9 38 08        	jr c,1F
 594+ 8DFB
 595+ 8DFB              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 596+ 8DFB              ; Actualizamos variables.
 597+ 8DFB
 598+ 8DFB 3E 07        	ld a,7
 599+ 8DFD 32 D6 89     	ld (Numero_parcial_de_entidades),a
 600+ 8E00 47           	ld b,a
 601+ 8E01 18 04        	jr 2F
 602+ 8E03
 603+ 8E03              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 604+ 8E03              ; (Numero_de_entidades)="0".
 605+ 8E03
 606+ 8E03 32 D6 89     1 ld (Numero_parcial_de_entidades),a
 607+ 8E06 47           	ld b,a
 608+ 8E07 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1793  8E08              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8E08              ; ******************************************************************************************************************************************************************************************
   2+ 8E08              ;
   3+ 8E08              ; 26/06/23
   4+ 8E08              ;
   5+ 8E08              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8E08
   7+ 8E08              Draw
   8+ 8E08
   9+ 8E08 CD F2 90     	call Prepara_draw
  10+ 8E0B 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8E0C A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8E0D 28 05        	jr z,2F
  13+ 8E0F
  14+ 8E0F 3A 9F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8E12 18 0C        	jr 1F
  16+ 8E14
  17+ 8E14 2A 9D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8E17 22 8D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8E1A CD A6 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8E1D              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8E1D
  22+ 8E1D CD B6 98     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8E20
  24+ 8E20 3A AD 89     1 ld a,(Ctrl_0)
  25+ 8E23 CB 6F        	bit 5,a
  26+ 8E25 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8E27
  28+ 8E27 CD 3C 8E     	call Comprueba_limite_horizontal
  29+ 8E2A CD CC 8E     	call Comprueba_limite_vertical
  30+ 8E2D
  31+ 8E2D              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8E2D              ; -----------------------
  33+ 8E2D              ; -----------------------
  34+ 8E2D              ; -----------------------
  35+ 8E2D
  36+ 8E2D CD 22 90     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8E30 CD 59 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8E33              ;	call Define_rutina_de_impresion
  39+ 8E33
  40+ 8E33 3A AD 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8E36 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8E38 32 AD 89     	ld (Ctrl_0),a
  43+ 8E3B
  44+ 8E3B C9           	ret
  45+ 8E3C
  46+ 8E3C              ; *******************************************************************************************************************************************************************************************
  47+ 8E3C              ;	21/01/23
  48+ 8E3C              ;
  49+ 8E3C              ; 	Comprueba_limite_horizontal.
  50+ 8E3C              ;
  51+ 8E3C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8E3C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8E3C              ;
  54+ 8E3C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8E3C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8E3C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8E3C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8E3C
  59+ 8E3C
  60+ 8E3C
  61+ 8E3C 3A AD 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8E3F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8E41 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8E43 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8E45 32 AD 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8E48 18 09            jr 6F
  67+ 8E4A CB 5F        1 bit 3,a
  68+ 8E4C 28 0A            jr z,2F
  69+ 8E4E E6 F7            and $f7
  70+ 8E50 32 AD 89         ld (Ctrl_0),a
  71+ 8E53 CD A6 8F     6 call Inicializacion
  72+ 8E56 18 5B            jr 5F
  73+ 8E58 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8E59
  75+ 8E59              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8E59              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8E59
  78+ 8E59 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8E5A 2A AF 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8E5D CD 77 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8E60 67           	ld h,a
  82+ 8E61 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8E62 CD 77 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8E65 67           	ld h,a
  85+ 8E66 A7           	and a
  86+ 8E67 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8E69 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8E6A 3A 9F 89     	ld a,(Cuad_objeto)
  89+ 8E6D FE 02        	cp 2
  90+ 8E6F 38 1E        	jr c,3F
  91+ 8E71 28 1C        	jr z,3F
  92+ 8E73 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8E74 28 23            jr z,7F
  94+ 8E76 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8E78 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8E7A E1           	pop hl
  97+ 8E7B
  98+ 8E7B              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8E7B              ; _para indicar con E="2" en caso necesario.
 100+ 8E7B
 101+ 8E7B E5               push hl
 102+ 8E7C C5               push bc
 103+ 8E7D CD 77 99     	call calcula_tercio
 104+ 8E80 FE 01        	cp 1
 105+ 8E82 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8E84 CD B4 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8E87 28 26            jr z,9F
 108+ 8E89 38 24            jr c,9F
 109+ 8E8B 1E 00        11 ld e,0
 110+ 8E8D 18 22            jr 8F
 111+ 8E8F 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8E90 28 07        	jr z, 7F
 113+ 8E92 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8E94 1E 00         	ld e,0
 115+ 8E96 E1           	pop hl
 116+ 8E97 18 04        	jr 4F
 117+ 8E99 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8E9B 18 15            jr 10F
 119+ 8E9D
 120+ 8E9D              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8E9D              ; _para indicar con E="2" en caso necesario.
 122+ 8E9D
 123+ 8E9D E5           4 push hl
 124+ 8E9E C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8E9F CD 77 99     	call calcula_tercio
 126+ 8EA2 FE 01        	cp 1
 127+ 8EA4 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8EA6 CD B4 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8EA9 28 04            jr z,9F
 130+ 8EAB 30 02            jr nc,9F
 131+ 8EAD 18 02        	jr 8F
 132+ 8EAF 1E 02        9 ld e,2
 133+ 8EB1 C1           8 pop bc
 134+ 8EB2 E1           10 pop hl
 135+ 8EB3 C9           5 ret
 136+ 8EB4
 137+ 8EB4              ; --------------------
 138+ 8EB4              ;
 139+ 8EB4              ; 25/08/22
 140+ 8EB4
 141+ 8EB4 CD 77 99     Comprueba_centro call calcula_tercio
 142+ 8EB7 67               ld h,a
 143+ 8EB8 08           	ex af,af
 144+ 8EB9 FE 02        	cp 2
 145+ 8EBB 38 07        	jr c,1F
 146+ 8EBD 28 05        	jr z,1F
 147+ 8EBF 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8EC2 18 03        	jr 2F
 149+ 8EC4 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8EC7 08           2 ex af,af
 151+ 8EC8 A7               and a
 152+ 8EC9 ED 42            sbc hl,bc
 153+ 8ECB C9               ret
 154+ 8ECC
 155+ 8ECC              ; *********************************************************************************************************************************************************************************************
 156+ 8ECC              ;
 157+ 8ECC              ;   16/8/22
 158+ 8ECC              ;
 159+ 8ECC              ;	Comprueba_limite_vertical
 160+ 8ECC              ;
 161+ 8ECC              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8ECC              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8ECC              ;
 164+ 8ECC
 165+ 8ECC 2A 8D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8ECF 7D           	ld a,l
 167+ 8ED0 E6 1F        	and $1F
 168+ 8ED2 57           	ld d,a
 169+ 8ED3 3A B1 89     	ld a,(Limite_vertical)
 170+ 8ED6 BA           	cp d 											; Límite - Posición.
 171+ 8ED7 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8ED8 3A 9F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8EDB CB 47        	bit 0,a
 174+ 8EDD 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8EDF
 176+ 8EDF              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8EDF
 178+ 8EDF 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8EE0 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8EE2
 181+ 8EE2              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8EE2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8EE2
 184+ 8EE2 3A 91 89         ld a,(Coordenada_X)
 185+ 8EE5 16 0F            ld d,Centro_izquierda
 186+ 8EE7 A7               and a
 187+ 8EE8 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8EE9 28 1E            jr z,3F
 189+ 8EEB 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8EED              ;                                                    ; _salimos sin modificar nada.
 191+ 8EED 18 0E            jr 2F
 192+ 8EEF 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8EF0 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8EF2
 195+ 8EF2              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8EF2              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8EF2
 198+ 8EF2 3A 91 89         ld a,(Coordenada_X)
 199+ 8EF5 16 10            ld d,Centro_derecha
 200+ 8EF7 A7               and a
 201+ 8EF8 92               sub d
 202+ 8EF9 28 0E            jr z,3F
 203+ 8EFB 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 8EFD              ;                                                    ; _salimos sin modificar nada.
 205+ 8EFD CB 43        2 bit 0,e
 206+ 8EFF 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 8F01 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 8F02 CD 96 8F         call Modificaccionne
 209+ 8F05 C1           	pop bc
 210+ 8F06 CD A6 8F         call Inicializacion
 211+ 8F09 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 8F0A
 213+ 8F0A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 8F0A
 215+ 8F0A C5           4 push bc
 216+ 8F0B 01 8C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 8F0E 0A           	ld a,(bc)
 218+ 8F0F 3D           	dec a
 219+ 8F10 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 8F11 7D           	ld a,l
 221+ 8F12 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 8F13 CB 47        	bit 0,a
 223+ 8F15 28 03        	jr z,5F
 224+ 8F17 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 8F18 18 2E        	jr 7F
 226+ 8F1A
 227+ 8F1A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 8F1A
 229+ 8F1A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 8F1B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 8F1C 3A AD 89     	ld a,(Ctrl_0)
 232+ 8F1F CB 4F        	bit 1,a
 233+ 8F21 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 8F23 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 8F24
 236+ 8F24              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 8F24
 238+ 8F24 1C               inc e
 239+ 8F25 1D               dec e
 240+ 8F26 20 07            jr nz,12F
 241+ 8F28 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 8F29 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 8F2A 22 8D 89     	ld (Posicion_actual),hl
 244+ 8F2D 18 44        13 jr 9F
 245+ 8F2F CB 43        12 bit 0,e
 246+ 8F31 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 8F33              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 8F33 C1           	pop bc
 249+ 8F34 18 D3        	jr 3B
 250+ 8F36 80           14 add b
 251+ 8F37 6F               ld l,a
 252+ 8F38 22 8D 89     	ld (Posicion_actual),hl
 253+ 8F3B CD 96 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 8F3E 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 8F40 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 8F42 32 AD 89         ld (Ctrl_0),a
 257+ 8F45 F1           	pop af
 258+ 8F46 18 2B        	jr 9F
 259+ 8F48
 260+ 8F48              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 8F48
 262+ 8F48 F5           7 push af
 263+ 8F49 3A AD 89     	ld a,(Ctrl_0)
 264+ 8F4C CB 47        	bit 0,a
 265+ 8F4E 20 1D        	jr nz,8F
 266+ 8F50 F1           	pop af
 267+ 8F51
 268+ 8F51              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 8F51
 270+ 8F51 1C           	inc e
 271+ 8F52 1D               dec e
 272+ 8F53 20 07            jr nz,10F
 273+ 8F55 90           	sub b
 274+ 8F56 6F               ld l,a
 275+ 8F57 22 8D 89     	ld (Posicion_actual),hl
 276+ 8F5A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 8F5C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 8F5C CB 43        10 bit 0,e
 279+ 8F5E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 8F60              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 8F60 C1           	pop bc
 282+ 8F61 18 A6        	jr 3B
 283+ 8F63 90           16 sub b
 284+ 8F64 6F               ld l,a
 285+ 8F65 22 8D 89     	ld (Posicion_actual),hl
 286+ 8F68 CD 96 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 8F6B 18 06            jr 9F
 288+ 8F6D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 8F6F 32 AD 89         ld (Ctrl_0),a
 290+ 8F72 F1           	pop af
 291+ 8F73 C1           9 pop bc
 292+ 8F74 1E 00        	ld e,0
 293+ 8F76 CD A6 8F         call Inicializacion
 294+ 8F79 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 8F7A 08           	ex af,af
 296+ 8F7B F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 8F7C 18 8B            jr 3B
 298+ 8F7E
 299+ 8F7E              ; --------------------
 300+ 8F7E
 301+ 8F7E 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 8F80 CD 0D 91     1 call PreviousScan
 303+ 8F83 10 FB            djnz 1B
 304+ 8F85 22 8D 89     	ld (Posicion_actual),hl
 305+ 8F88 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 8F89 C9           	ret
 307+ 8F8A
 308+ 8F8A              ; --------------------
 309+ 8F8A
 310+ 8F8A 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 8F8C CD FE 90     1 call NextScan
 312+ 8F8F 10 FB            djnz 1B
 313+ 8F91 22 8D 89     	ld (Posicion_actual),hl
 314+ 8F94 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 8F95 C9           	ret
 316+ 8F96
 317+ 8F96              ; --------------------
 318+ 8F96              ;
 319+ 8F96              ;	22/01/23
 320+ 8F96              ;
 321+ 8F96              ;	E="1". Hemos cambiado de cuadrante.
 322+ 8F96              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 8F96              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 8F96
 325+ 8F96
 326+ 8F96              Modificaccionne
 327+ 8F96
 328+ 8F96 3A 9F 89     	ld a,(Cuad_objeto)
 329+ 8F99 FE 02        	cp 2
 330+ 8F9B CC 7E 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 8F9E DC 7E 8F         call c,Modifica_Pos_actual
 332+ 8FA1 C8           	ret z
 333+ 8FA2 CD 8A 8F         call Modifica_Pos_actual2
 334+ 8FA5 C9               ret
 335+ 8FA6
 336+ 8FA6              ; *************************************************************************************************************************************************************************************************
 337+ 8FA6              ;
 338+ 8FA6              ;	13/8/22
 339+ 8FA6              ;
 340+ 8FA6              ;	Inicializacion
 341+ 8FA6              ;
 342+ 8FA6              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 8FA6              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 8FA6              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 8FA6              ;
 346+ 8FA6              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 8FA6              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 8FA6              ;	_ desaparece/aparece.
 349+ 8FA6
 350+ 8FA6              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 8FA6              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 8FA6              ;
 353+ 8FA6              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 8FA6              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 8FA6              ; 		   [E] ="0"
 356+ 8FA6
 357+ 8FA6              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 8FA6
 359+ 8FA6 CD 77 99     Inicializacion call calcula_tercio
 360+ 8FA9 28 36        	jr z,primit
 361+ 8FAB E6 02        	and 2
 362+ 8FAD 20 07        	jr nz,segmit
 363+ 8FAF 7D           	ld a,l
 364+ 8FB0 FE 7F        	cp $7f
 365+ 8FB2 38 2D        	jr c,primit
 366+ 8FB4 28 2B        	jr z,primit
 367+ 8FB6 CD 1C 90     segmit call column
 368+ 8FB9 38 13        	jr c,tercuad
 369+ 8FBB 3E 04        cuarcuad ld a,4
 370+ 8FBD 32 9F 89     	ld (Cuad_objeto),a
 371+ 8FC0 21 20 48     	ld hl,$4820
 372+ 8FC3 22 AF 89     	ld (Limite_horizontal),hl
 373+ 8FC6 21 B1 89     	ld hl,Limite_vertical
 374+ 8FC9 36 0D        	ld (hl),$0d
 375+ 8FCB 08           	ex af,af
 376+ 8FCC 18 3C        	jr 1F
 377+ 8FCE              tercuad
 378+ 8FCE 3E 03        	ld a,3
 379+ 8FD0 32 9F 89     	ld (Cuad_objeto),a
 380+ 8FD3 21 20 48     	ld hl,$4820
 381+ 8FD6 22 AF 89     	ld (Limite_horizontal),hl
 382+ 8FD9 21 B1 89     	ld hl,Limite_vertical
 383+ 8FDC 36 12        	ld (hl),$12
 384+ 8FDE 08           	ex af,af
 385+ 8FDF 18 29        	jr 1F
 386+ 8FE1 CD 1C 90     primit call column
 387+ 8FE4 38 13        	jr c, primcuad
 388+ 8FE6              segcuad
 389+ 8FE6 3E 02        	ld a,2
 390+ 8FE8 32 9F 89     	ld (Cuad_objeto),a
 391+ 8FEB 21 C0 4F     	ld hl,$4fc0
 392+ 8FEE 22 AF 89     	ld (Limite_horizontal),hl
 393+ 8FF1 21 B1 89     	ld hl,Limite_vertical
 394+ 8FF4 36 0D        	ld (hl),$0d
 395+ 8FF6 08           	ex af,af
 396+ 8FF7 18 11        	jr 1F
 397+ 8FF9              primcuad
 398+ 8FF9 3E 01        	ld a,1
 399+ 8FFB 32 9F 89     	ld (Cuad_objeto),a
 400+ 8FFE 21 C0 4F     	ld hl,$4fc0
 401+ 9001 22 AF 89     	ld (Limite_horizontal),hl
 402+ 9004 21 B1 89     	ld hl,Limite_vertical
 403+ 9007 36 12        	ld (hl),$12
 404+ 9009 08           	ex af,af
 405+ 900A
 406+ 900A C5           1 push bc
 407+ 900B E5           	push hl
 408+ 900C D5           	push de
 409+ 900D
 410+ 900D 2A 8D 89     	ld hl,(Posicion_actual)
 411+ 9010 CD 95 99     	call Genera_coordenadas
 412+ 9013
 413+ 9013 D1           	pop de
 414+ 9014 E1           	pop hl
 415+ 9015 C1           	pop bc
 416+ 9016
 417+ 9016 21 AD 89     	ld hl,Ctrl_0
 418+ 9019 CB EE        	set 5,(hl)
 419+ 901B C9           	ret
 420+ 901C
 421+ 901C              ; ------------------------------------------------------------------------------------------------------------------
 422+ 901C
 423+ 901C              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 901C              ;
 425+ 901C              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 901C
 427+ 901C 7D           column ld a,l
 428+ 901D E6 1F        	and $1f
 429+ 901F FE 10         	cp $10
 430+ 9021 C9            	ret
 431+ 9022
 432+ 9022              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9022              ;
 434+ 9022              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9022              ;
 436+ 9022              ; 14/12/22
 437+ 9022              ;
 438+ 9022              ;	Modifica: A y BC.
 439+ 9022
 440+ 9022 3A 9F 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9025 E6 01        	and 1
 442+ 9027 28 17        	jr z,1F
 443+ 9029
 444+ 9029              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9029
 446+ 9029 3A 91 89     	ld a,(Coordenada_X)
 447+ 902C 47           	ld b,a
 448+ 902D 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 902E 79           	ld a,c
 450+ 902F 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9030 38 08        	jr c,2F
 452+ 9032 47           	ld b,a
 453+ 9033 79           	ld a,c
 454+ 9034 90           	sub b
 455+ 9035 32 AE 89     	ld (Columnas),a
 456+ 9038 18 1B        	jr 4F
 457+ 903A 79           2 ld a,c
 458+ 903B 32 AE 89     	ld (Columnas),a
 459+ 903E 18 15        	jr 4F
 460+ 9040
 461+ 9040              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9040
 463+ 9040 3A 91 89     1 ld a,(Coordenada_X)
 464+ 9043 81           	add c
 465+ 9044 3D           	dec a
 466+ 9045 D6 1F        	sub $1f
 467+ 9047 38 08        	jr c,3F
 468+ 9049 47           	ld b,a
 469+ 904A 79           	ld a,c
 470+ 904B 90           	sub b
 471+ 904C 32 AE 89     	ld (Columnas),a
 472+ 904F 18 04        	jr 4F
 473+ 9051 79           3 ld a,c
 474+ 9052 32 AE 89     	ld (Columnas),a
 475+ 9055 D9           4 exx
 476+ 9056 4F           	ld c,a
 477+ 9057 D9           	exx
 478+ 9058 C9            ret
 479+ 9059
 480+ 9059              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9059              ;
 482+ 9059              ;   19/7/23
 483+ 9059              ;
 484+ 9059              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9059              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9059              ;
 487+ 9059              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9059              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9059              ;
 490+ 9059              ;	DESTRUYE: HL,B Y A.
 491+ 9059
 492+ 9059 3A 9F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 905C FE 02        	cp 2
 494+ 905E 38 18        	jr c,1F
 495+ 9060 28 16        	jr z,1F
 496+ 9062 E6 01        	and 1
 497+ 9064 28 0D        	jr z,3F
 498+ 9066
 499+ 9066              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9066
 501+ 9066 CD AC 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9069
 503+ 9069 7D           9 ld a,l
 504+ 906A E6 1F        	and $1f
 505+ 906C 28 2A        	jr z,7F
 506+ 906E 2B           	dec hl
 507+ 906F 10 F8        	djnz 9B
 508+ 9071 18 25        	jr 7F
 509+ 9073
 510+ 9073              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9073
 512+ 9073 2A 8D 89     3 ld hl,(Posicion_actual)
 513+ 9076 18 20        	jr 7F
 514+ 9078
 515+ 9078 28 14        1 jr z,2F
 516+ 907A
 517+ 907A              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 907A
 519+ 907A CD AC 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 907D
 521+ 907D 7D           4 ld a,l
 522+ 907E E6 1F        	and $1f
 523+ 9080 28 03        	jr z,6F
 524+ 9082 2B           	dec hl
 525+ 9083 10 F8        	djnz 4B
 526+ 9085 06 0F        6 ld b,15
 527+ 9087 CD 0D 91     5 call PreviousScan
 528+ 908A 10 FB        	djnz 5B
 529+ 908C 18 0A        	jr 7F
 530+ 908E
 531+ 908E              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 908E
 533+ 908E CD AC 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9091 06 0F        	ld b,15
 535+ 9093 CD 0D 91     8 call PreviousScan
 536+ 9096 10 FB        	djnz 8B
 537+ 9098
 538+ 9098 E5           7 push hl
 539+ 9099 DD E1        	pop ix
 540+ 909B
 541+ 909B 2A 8F 89     	ld hl,(Puntero_objeto)
 542+ 909E E5           	push hl
 543+ 909F FD E1        	pop iy
 544+ 90A1
 545+ 90A1              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 90A1
 547+ 90A1 3A AD 89     	ld a,(Ctrl_0)
 548+ 90A4 CB 77        	bit 6,a
 549+ 90A6 C8           	ret z
 550+ 90A7
 551+ 90A7              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 90A7              ; _ entidad / Amadeus´.
 553+ 90A7
 554+ 90A7 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 90AB
 556+ 90AB C9           	ret
 557+ 90AC
 558+ 90AC              ; --------------------------------------------------------------------------------------------------------------------
 559+ 90AC              ;
 560+ 90AC              ;	2/1/23
 561+ 90AC              ;
 562+ 90AC              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 90AC              ;
 564+ 90AC              ;	Tras esta rutina tenemos:
 565+ 90AC              ;
 566+ 90AC              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 90AC              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 90AC              ;
 569+ 90AC              ;	DESTRUYE!!!!! HL,B y A.
 570+ 90AC
 571+ 90AC 2A 8D 89     Operandos ld hl,(Posicion_actual)
 572+ 90AF 3A AE 89     	ld a,(Columnas)
 573+ 90B2 3D           	dec a
 574+ 90B3 20 01        	jr nz,1F
 575+ 90B5 3C           	inc a
 576+ 90B6 47           1 ld b,a
 577+ 90B7 C9           	ret
 578+ 90B8
 579+ 90B8              ; --------------------------------------------------------------------------------------------------------------------
 580+ 90B8              ;
 581+ 90B8              ;	3/1/23
 582+ 90B8              ;
 583+ 90B8              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 90B8              ;
 585+ 90B8              ;	Destruye: A,B,HL y DE.
 586+ 90B8
 587+ 90B8              Define_rutina_de_impresion
 588+ 90B8
 589+ 90B8 3A 8C 89     	ld a,(Columns)
 590+ 90BB 47           	ld b,a
 591+ 90BC 3A AE 89     	ld a,(Columnas)
 592+ 90BF B8           	cp b
 593+ 90C0 20 0D        	jr nz,2f
 594+ 90C2
 595+ 90C2              ;	La entidad se imprime entera.
 596+ 90C2
 597+ 90C2 21 5F 91     	ld hl, Indice_entidades_completas
 598+ 90C5 E6 01        	and 1
 599+ 90C7 28 02        	jr z,1F
 600+ 90C9
 601+ 90C9 23           	inc hl
 602+ 90CA 23           	inc hl
 603+ 90CB
 604+ 90CB CD 70 8B     1 call Extrae_address
 605+ 90CE C9           	ret		;	ret
 606+ 90CF
 607+ 90CF              ;	La entidad no se imprime entera en pantalla.
 608+ 90CF
 609+ 90CF 3A 9F 89     2 ld a,(Cuad_objeto)
 610+ 90D2 E6 01        	and 1
 611+ 90D4 28 17        	jr z,3F
 612+ 90D6
 613+ 90D6              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 90D6
 615+ 90D6 21 63 91     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 90D9 3A 8C 89     4 ld a,(Columns)
 617+ 90DC E6 01        	and 1
 618+ 90DE 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 90E0
 620+ 90E0 23           	inc hl
 621+ 90E1 23           	inc hl
 622+ 90E2
 623+ 90E2 3A AE 89     	ld a,(Columnas)
 624+ 90E5 E6 01        	and 1
 625+ 90E7 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 90E9
 627+ 90E9 23           	inc hl
 628+ 90EA 23           	inc hl
 629+ 90EB
 630+ 90EB 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 90ED
 632+ 90ED 21 69 91     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 90F0 18 E7        	jr 4B
 634+ 90F2
 635+ 90F2              ; --------------------------------------------------------------------------------------------------------------------
 636+ 90F2              ;
 637+ 90F2              ;	Prepara_draw
 638+ 90F2              ;
 639+ 90F2              ;	Es una rutina de carga.
 640+ 90F2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 90F2              ;
 642+ 90F2              ;	FUNCIONAMIENTO:
 643+ 90F2              ;
 644+ 90F2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 90F2              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 90F2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 90F2              ;
 648+ 90F2              ;	DESTRUYE:
 649+ 90F2              ;
 650+ 90F2              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 90F2
 652+ 90F2 21 8B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 90F5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 90F6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 90F7 4E           	ld c,(hl)
 656+ 90F8 2A 8D 89     	ld hl,(Posicion_actual)
 657+ 90FB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 90FD C9           	ret
 659+ 90FE
 660+ 90FE              ;----------------------------------------------------------------------------------------------------------------
 661+ 90FE              ;
 662+ 90FE              ;	5/08/22
 663+ 90FE              ;
 664+ 90FE              ;   NextScan.
 665+ 90FE              ;
 666+ 90FE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 90FE              ;
 668+ 90FE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 90FE              ;
 670+ 90FE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 90FE              ;
 672+ 90FE              ;       DESTRUIDOS: AF y HL !!!
 673+ 90FE              ;
 674+ 90FE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 90FE              ;
 676+ 90FE
 677+ 90FE 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 90FF 7C               ld a,h
 679+ 9100 E6 07            and 7
 680+ 9102 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9103
 682+ 9103 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 9104 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9106 6F               ld l,a
 685+ 9107 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9108
 687+ 9108 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 9109 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 910B 67               ld h,a
 690+ 910C C9               ret
 691+ 910D
 692+ 910D              ;----------------------------------------------------------------------------------------------------------------
 693+ 910D              ;
 694+ 910D              ;	5/08/22
 695+ 910D              ;
 696+ 910D              ;   PreviousScan.
 697+ 910D              ;
 698+ 910D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 910D              ;
 700+ 910D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 910D              ;
 702+ 910D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 910D              ;
 704+ 910D              ;       DESTRUIDOS: AF y HL !!!
 705+ 910D              ;
 706+ 910D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 910D              ;
 708+ 910D
 709+ 910D 7C           PreviousScan ld a,h
 710+ 910E 25               dec h               ; Dec H.
 711+ 910F E6 07            and 7
 712+ 9111 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9112
 714+ 9112 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9113 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9115 6F               ld l,a
 717+ 9116 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9117
 719+ 9117 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9118 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 911A 67               ld h,a
 722+ 911B C9               ret
 723+ 911C
 724+ 911C              ; -----------------------------------------------------------------------------------
 725+ 911C              ;
 726+ 911C              ;	31/7/23
 727+ 911C              ;
 728+ 911C              ;	Rutina principal de pintado de entidades.
 729+ 911C              ;	Extrae la foto del frame, (entidades).
 730+ 911C
 731+ 911C              Extrae_Scanlines_album
 732+ 911C
 733+ 911C 21 01 80     	ld hl,Scanlines_album+1
 734+ 911F 7E           	ld a,(hl)
 735+ 9120 A7           	and a
 736+ 9121 C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 9122
 738+ 9122              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9122
 740+ 9122 3A D8 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9125 A7           	and a
 742+ 9126 C8           	ret z
 743+ 9127
 744+ 9127              ; -----------------------------------
 745+ 9127
 746+ 9127 ED 73 DD 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 747+ 912B 31 00 80     	ld sp,Scanlines_album
 748+ 912E
 749+ 912E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9130 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9131 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9132
 753+ 9132 ED 73 DF 89  	ld (Stack_2),sp
 754+ 9136 ED 7B DD 89  	ld sp,(Stack)
 755+ 913A
 756+ 913A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 913A
 758+ 913A 3E CD        	ld a,$cd
 759+ 913C 32 44 91     	ld (Imprime),a
 760+ 913F EB           	ex de,hl
 761+ 9140 22 45 91     	ld (Imprime+1),hl
 762+ 9143 EB           	ex de,hl
 763+ 9144
 764+ 9144              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9144
 766+ 9144 00 00 00     Imprime db 0,0,0
 767+ 9147
 768+ 9147 ED 73 DD 89  	ld (Stack),sp
 769+ 914B
 770+ 914B 3A D8 89     	ld a,(Numero_de_malotes)
 771+ 914E 3D           	dec a
 772+ 914F 28 09        	jr z,1F
 773+ 9151 32 D8 89      	ld (Numero_de_malotes),a
 774+ 9154
 775+ 9154 ED 7B DF 89  	ld sp,(Stack_2)
 776+ 9158 18 D4        	jr 2B
 777+ 915A
 778+ 915A AF           1 xor a
 779+ 915B 32 DF 89     	ld (Stack_2),a
 780+ 915E
 781+ 915E C9           	ret
 782+ 915F
 783+ 915F              ; -----------------------------------------------------------------------------------
 784+ 915F              ;
 785+ 915F              ;	28/2/23
 786+ 915F              ;
 787+ 915F              ;	Pinta los disparos generados.
 788+ 915F
 789+ 915F              ;Extrae_foto_disparos
 790+ 915F
 791+ 915F              ;	ld hl,Scanlines_album_disparos+1
 792+ 915F              ;    ld a,(hl)
 793+ 915F              ;    and a
 794+ 915F              ;    ret z
 795+ 915F
 796+ 915F              ;	ld a,(Numero_de_disparotes)
 797+ 915F              ;	and a
 798+ 915F              ;	ret z
 799+ 915F              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 800+ 915F              ;	ld sp,Scanlines_album_disparos
 801+ 915F
 802+ 915F              ;2 pop iy																	; (Puntero_objeto) en IY.
 803+ 915F              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 915F              ;	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 915F
 806+ 915F              ;	ld (Stack_2),sp
 807+ 915F              ;	ld sp,(Stack)
 808+ 915F
 809+ 915F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 915F
 811+ 915F              ;	ld a,$cd
 812+ 915F              ;	ld (Imprime2),a
 813+ 915F              ;	ex de,hl
 814+ 915F              ;	ld (Imprime2+1),hl
 815+ 915F              ;	ex de,hl
 816+ 915F
 817+ 915F              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 915F
 819+ 915F              ;Imprime2 db 0,0,0
 820+ 915F
 821+ 915F              ;	ld a,(Numero_de_disparotes)
 822+ 915F              ;	dec a
 823+ 915F              ;	jr z,1F
 824+ 915F              ; 	ld (Numero_de_disparotes),a
 825+ 915F
 826+ 915F              ;	ld sp,(Stack_2)
 827+ 915F              ;	jr 2B
 828+ 915F
 829+ 915F              ;1 xor a
 830+ 915F              ;	ld (Stack_2),a
 831+ 915F              ;	ret
 832+ 915F
 833+ 915F              ; -----------------------------------------------------------------------------------
 834+ 915F              ;
 835+ 915F              ;	4/9/23
 836+ 915F              ;
 837+ 915F              ;	Rutina principal de pintado de Amadeus.
 838+ 915F              ;	Extrae fotos de Scanlines_album_Amadeus.
 839+ 915F
 840+ 915F              ;Extrae_foto_Amadeus	ld hl,Scanlines_album_Amadeus
 841+ 915F              ;	ld a,(hl)
 842+ 915F              ;	and a
 843+ 915F              ;	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 915F
 845+ 915F              ;	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 915F              ;	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 915F              ;	ret z
 848+ 915F
 849+ 915F              ; -----------------------------------
 850+ 915F
 851+ 915F              ;	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Scanlines_album
 852+ 915F              ;	ld sp,Scanlines_album_Amadeus
 853+ 915F
 854+ 915F              ;2 pop iy																	; (Puntero_objeto) en IY.
 855+ 915F              ;	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 915F              ;	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 915F
 858+ 915F              ;	ld (Stack_2),sp
 859+ 915F              ;	ld sp,(Stack)
 860+ 915F
 861+ 915F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 915F
 863+ 915F              ;	ld a,$cd
 864+ 915F              ;	ld (Imprime_Amadeus),a
 865+ 915F              ;	ex de,hl
 866+ 915F              ;	ld (Imprime_Amadeus+1),hl
 867+ 915F              ;	ex de,hl
 868+ 915F
 869+ 915F              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 915F
 871+ 915F              ;Imprime_Amadeus db 0,0,0
 872+ 915F
 873+ 915F              ;	ld (Stack),sp
 874+ 915F
 875+ 915F              ;	ld a,(Numero_de_malotes)
 876+ 915F              ;	dec a
 877+ 915F              ;	jr z,1F
 878+ 915F              ; 	ld (Numero_de_malotes),a
 879+ 915F
 880+ 915F              ;	ld sp,(Stack_2)
 881+ 915F              ;	jr 2B
 882+ 915F
 883+ 915F              ;1 xor a
 884+ 915F              ;	ld (Stack_2),a
 885+ 915F
 886+ 915F              ;	ret
 887+ 915F
 888+ 915F
 889+ 915F
 890+ 915F
 891+ 915F
 892+ 915F
# file closed: Draw_XOR.asm
1794  915F              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 915F              ;   índices de Rutinas de impresión.
   2+ 915F
   3+ 915F 6F 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9161 03 92            defw Pinta_Amadeus_3x2
   5+ 9163
   6+ 9163 D7 92        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9165 77 93            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9167 2B 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9169
  10+ 9169 01 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 916B 05 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 916D B9 93            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 916F
  14+ 916F
  15+ 916F              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 916F              ;
  17+ 916F              ;   28/2/24
  18+ 916F              ;
  19+ 916F              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 916F              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 916F              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 916F              ;
  23+ 916F              ;   Modifica: AF,HL,BC y DE.
  24+ 916F
  25+ 916F              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 916F
  27+ 916F D9               exx
  28+ 9170 36 01            ld (hl),1
  29+ 9172 2C               inc l
  30+ 9173 D9               exx
  31+ 9174
  32+ 9174 FD E5            push iy
  33+ 9176 D1               pop de
  34+ 9177
  35+ 9177 ED 73 DD 89      ld (Stack),sp
  36+ 917B F9           	ld sp,hl
  37+ 917C 06 10            ld b,16
  38+ 917E
  39+ 917E E1               pop hl
  40+ 917F 1A               ld a,(de)
  41+ 9180 77               ld (hl),a
  42+ 9181 1C           	inc e
  43+ 9182 2C               inc l
  44+ 9183 1A               ld a,(de)
  45+ 9184 77               ld (hl),a
  46+ 9185 1C               inc e
  47+ 9186
  48+ 9186 E1               pop hl
  49+ 9187 1A               ld a,(de)
  50+ 9188 77               ld (hl),a
  51+ 9189 1C           	inc e
  52+ 918A 2C               inc l
  53+ 918B 1A               ld a,(de)
  54+ 918C 77               ld (hl),a
  55+ 918D 1C               inc e
  56+ 918E
  57+ 918E E1               pop hl
  58+ 918F 1A               ld a,(de)
  59+ 9190 77               ld (hl),a
  60+ 9191 1C           	inc e
  61+ 9192 2C               inc l
  62+ 9193 1A               ld a,(de)
  63+ 9194 77               ld (hl),a
  64+ 9195 1C               inc e
  65+ 9196
  66+ 9196 E1               pop hl
  67+ 9197 1A               ld a,(de)
  68+ 9198 77               ld (hl),a
  69+ 9199 1C           	inc e
  70+ 919A 2C               inc l
  71+ 919B 1A               ld a,(de)
  72+ 919C 77               ld (hl),a
  73+ 919D 1C               inc e
  74+ 919E
  75+ 919E E1               pop hl
  76+ 919F 1A               ld a,(de)
  77+ 91A0 77               ld (hl),a
  78+ 91A1 1C           	inc e
  79+ 91A2 2C               inc l
  80+ 91A3 1A               ld a,(de)
  81+ 91A4 77               ld (hl),a
  82+ 91A5 1C               inc e
  83+ 91A6
  84+ 91A6 E1               pop hl
  85+ 91A7 1A               ld a,(de)
  86+ 91A8 77               ld (hl),a
  87+ 91A9 1C           	inc e
  88+ 91AA 2C               inc l
  89+ 91AB 1A               ld a,(de)
  90+ 91AC 77               ld (hl),a
  91+ 91AD 1C               inc e
  92+ 91AE
  93+ 91AE E1               pop hl
  94+ 91AF 1A               ld a,(de)
  95+ 91B0 77               ld (hl),a
  96+ 91B1 1C           	inc e
  97+ 91B2 2C               inc l
  98+ 91B3 1A               ld a,(de)
  99+ 91B4 77               ld (hl),a
 100+ 91B5 1C               inc e
 101+ 91B6
 102+ 91B6 E1               pop hl
 103+ 91B7 1A               ld a,(de)
 104+ 91B8 77               ld (hl),a
 105+ 91B9 1C           	inc e
 106+ 91BA 2C               inc l
 107+ 91BB 1A               ld a,(de)
 108+ 91BC 77               ld (hl),a
 109+ 91BD 1C               inc e
 110+ 91BE
 111+ 91BE E1               pop hl
 112+ 91BF 1A               ld a,(de)
 113+ 91C0 77               ld (hl),a
 114+ 91C1 1C           	inc e
 115+ 91C2 2C               inc l
 116+ 91C3 1A               ld a,(de)
 117+ 91C4 77               ld (hl),a
 118+ 91C5 1C               inc e
 119+ 91C6
 120+ 91C6 E1               pop hl
 121+ 91C7 1A               ld a,(de)
 122+ 91C8 77               ld (hl),a
 123+ 91C9 1C           	inc e
 124+ 91CA 2C               inc l
 125+ 91CB 1A               ld a,(de)
 126+ 91CC 77               ld (hl),a
 127+ 91CD 1C               inc e
 128+ 91CE
 129+ 91CE E1               pop hl
 130+ 91CF 1A               ld a,(de)
 131+ 91D0 77               ld (hl),a
 132+ 91D1 1C           	inc e
 133+ 91D2 2C               inc l
 134+ 91D3 1A               ld a,(de)
 135+ 91D4 77               ld (hl),a
 136+ 91D5 1C               inc e
 137+ 91D6
 138+ 91D6 E1               pop hl
 139+ 91D7 1A               ld a,(de)
 140+ 91D8 77               ld (hl),a
 141+ 91D9 1C           	inc e
 142+ 91DA 2C               inc l
 143+ 91DB 1A               ld a,(de)
 144+ 91DC 77               ld (hl),a
 145+ 91DD 1C               inc e
 146+ 91DE
 147+ 91DE E1               pop hl
 148+ 91DF 1A               ld a,(de)
 149+ 91E0 77               ld (hl),a
 150+ 91E1 1C           	inc e
 151+ 91E2 2C               inc l
 152+ 91E3 1A               ld a,(de)
 153+ 91E4 77               ld (hl),a
 154+ 91E5 1C               inc e
 155+ 91E6
 156+ 91E6 E1               pop hl
 157+ 91E7 1A               ld a,(de)
 158+ 91E8 77               ld (hl),a
 159+ 91E9 1C           	inc e
 160+ 91EA 2C               inc l
 161+ 91EB 1A               ld a,(de)
 162+ 91EC 77               ld (hl),a
 163+ 91ED 1C               inc e
 164+ 91EE
 165+ 91EE E1               pop hl
 166+ 91EF 1A               ld a,(de)
 167+ 91F0 77               ld (hl),a
 168+ 91F1 1C           	inc e
 169+ 91F2 2C               inc l
 170+ 91F3 1A               ld a,(de)
 171+ 91F4 77               ld (hl),a
 172+ 91F5 1C               inc e
 173+ 91F6
 174+ 91F6 E1               pop hl
 175+ 91F7 1A               ld a,(de)
 176+ 91F8 77               ld (hl),a
 177+ 91F9 1C           	inc e
 178+ 91FA 2C               inc l
 179+ 91FB 1A               ld a,(de)
 180+ 91FC 77               ld (hl),a
 181+ 91FD 1C               inc e
 182+ 91FE
 183+ 91FE ED 7B DD 89      ld sp,(Stack)
 184+ 9202
 185+ 9202 C9           	ret
 186+ 9203
 187+ 9203              Pinta_Amadeus_3x2
 188+ 9203
 189+ 9203 D9               exx
 190+ 9204 36 02            ld (hl),2
 191+ 9206 2C               inc l
 192+ 9207 D9               exx
 193+ 9208
 194+ 9208 FD E5            push iy
 195+ 920A D1               pop de
 196+ 920B
 197+ 920B ED 73 DD 89      ld (Stack),sp
 198+ 920F F9               ld sp,hl
 199+ 9210 06 10            ld b,16
 200+ 9212
 201+ 9212 E1               pop hl
 202+ 9213 1A               ld a,(de)
 203+ 9214 77               ld (hl),a
 204+ 9215 1C               inc e
 205+ 9216 2C               inc l
 206+ 9217 1A               ld a,(de)
 207+ 9218 77               ld (hl),a
 208+ 9219 1C               inc e
 209+ 921A 2C               inc l
 210+ 921B 1A               ld a,(de)
 211+ 921C 77               ld (hl),a
 212+ 921D 1C               inc e
 213+ 921E
 214+ 921E E1               pop hl
 215+ 921F 1A               ld a,(de)
 216+ 9220 77               ld (hl),a
 217+ 9221 1C               inc e
 218+ 9222 2C               inc l
 219+ 9223 1A               ld a,(de)
 220+ 9224 77               ld (hl),a
 221+ 9225 1C               inc e
 222+ 9226 2C               inc l
 223+ 9227 1A               ld a,(de)
 224+ 9228 77               ld (hl),a
 225+ 9229 1C               inc e
 226+ 922A
 227+ 922A E1               pop hl
 228+ 922B 1A               ld a,(de)
 229+ 922C 77               ld (hl),a
 230+ 922D 1C               inc e
 231+ 922E 2C               inc l
 232+ 922F 1A               ld a,(de)
 233+ 9230 77               ld (hl),a
 234+ 9231 1C               inc e
 235+ 9232 2C               inc l
 236+ 9233 1A               ld a,(de)
 237+ 9234 77               ld (hl),a
 238+ 9235 1C               inc e
 239+ 9236
 240+ 9236 E1               pop hl
 241+ 9237 1A               ld a,(de)
 242+ 9238 77               ld (hl),a
 243+ 9239 1C               inc e
 244+ 923A 2C               inc l
 245+ 923B 1A               ld a,(de)
 246+ 923C 77               ld (hl),a
 247+ 923D 1C               inc e
 248+ 923E 2C               inc l
 249+ 923F 1A               ld a,(de)
 250+ 9240 77               ld (hl),a
 251+ 9241 1C               inc e
 252+ 9242
 253+ 9242 E1               pop hl
 254+ 9243 1A               ld a,(de)
 255+ 9244 77               ld (hl),a
 256+ 9245 1C               inc e
 257+ 9246 2C               inc l
 258+ 9247 1A               ld a,(de)
 259+ 9248 77               ld (hl),a
 260+ 9249 1C               inc e
 261+ 924A 2C               inc l
 262+ 924B 1A               ld a,(de)
 263+ 924C 77               ld (hl),a
 264+ 924D 1C               inc e
 265+ 924E
 266+ 924E E1               pop hl
 267+ 924F 1A               ld a,(de)
 268+ 9250 77               ld (hl),a
 269+ 9251 1C               inc e
 270+ 9252 2C               inc l
 271+ 9253 1A               ld a,(de)
 272+ 9254 77               ld (hl),a
 273+ 9255 1C               inc e
 274+ 9256 2C               inc l
 275+ 9257 1A               ld a,(de)
 276+ 9258 77               ld (hl),a
 277+ 9259 1C               inc e
 278+ 925A
 279+ 925A E1               pop hl
 280+ 925B 1A               ld a,(de)
 281+ 925C 77               ld (hl),a
 282+ 925D 1C               inc e
 283+ 925E 2C               inc l
 284+ 925F 1A               ld a,(de)
 285+ 9260 77               ld (hl),a
 286+ 9261 1C               inc e
 287+ 9262 2C               inc l
 288+ 9263 1A               ld a,(de)
 289+ 9264 77               ld (hl),a
 290+ 9265 1C               inc e
 291+ 9266
 292+ 9266 E1               pop hl
 293+ 9267 1A               ld a,(de)
 294+ 9268 77               ld (hl),a
 295+ 9269 1C               inc e
 296+ 926A 2C               inc l
 297+ 926B 1A               ld a,(de)
 298+ 926C 77               ld (hl),a
 299+ 926D 1C               inc e
 300+ 926E 2C               inc l
 301+ 926F 1A               ld a,(de)
 302+ 9270 77               ld (hl),a
 303+ 9271 1C               inc e
 304+ 9272
 305+ 9272 E1               pop hl
 306+ 9273 1A               ld a,(de)
 307+ 9274 77               ld (hl),a
 308+ 9275 1C               inc e
 309+ 9276 2C               inc l
 310+ 9277 1A               ld a,(de)
 311+ 9278 77               ld (hl),a
 312+ 9279 1C               inc e
 313+ 927A 2C               inc l
 314+ 927B 1A               ld a,(de)
 315+ 927C 77               ld (hl),a
 316+ 927D 1C               inc e
 317+ 927E
 318+ 927E E1               pop hl
 319+ 927F 1A               ld a,(de)
 320+ 9280 77               ld (hl),a
 321+ 9281 1C               inc e
 322+ 9282 2C               inc l
 323+ 9283 1A               ld a,(de)
 324+ 9284 77               ld (hl),a
 325+ 9285 1C               inc e
 326+ 9286 2C               inc l
 327+ 9287 1A               ld a,(de)
 328+ 9288 77               ld (hl),a
 329+ 9289 1C               inc e
 330+ 928A
 331+ 928A E1               pop hl
 332+ 928B 1A               ld a,(de)
 333+ 928C 77               ld (hl),a
 334+ 928D 1C               inc e
 335+ 928E 2C               inc l
 336+ 928F 1A               ld a,(de)
 337+ 9290 77               ld (hl),a
 338+ 9291 1C               inc e
 339+ 9292 2C               inc l
 340+ 9293 1A               ld a,(de)
 341+ 9294 77               ld (hl),a
 342+ 9295 1C               inc e
 343+ 9296
 344+ 9296 E1               pop hl
 345+ 9297 1A               ld a,(de)
 346+ 9298 77               ld (hl),a
 347+ 9299 1C               inc e
 348+ 929A 2C               inc l
 349+ 929B 1A               ld a,(de)
 350+ 929C 77               ld (hl),a
 351+ 929D 1C               inc e
 352+ 929E 2C               inc l
 353+ 929F 1A               ld a,(de)
 354+ 92A0 77               ld (hl),a
 355+ 92A1 1C               inc e
 356+ 92A2
 357+ 92A2 E1               pop hl
 358+ 92A3 1A               ld a,(de)
 359+ 92A4 77               ld (hl),a
 360+ 92A5 1C               inc e
 361+ 92A6 2C               inc l
 362+ 92A7 1A               ld a,(de)
 363+ 92A8 77               ld (hl),a
 364+ 92A9 1C               inc e
 365+ 92AA 2C               inc l
 366+ 92AB 1A               ld a,(de)
 367+ 92AC 77               ld (hl),a
 368+ 92AD 1C               inc e
 369+ 92AE
 370+ 92AE E1               pop hl
 371+ 92AF 1A               ld a,(de)
 372+ 92B0 77               ld (hl),a
 373+ 92B1 1C               inc e
 374+ 92B2 2C               inc l
 375+ 92B3 1A               ld a,(de)
 376+ 92B4 77               ld (hl),a
 377+ 92B5 1C               inc e
 378+ 92B6 2C               inc l
 379+ 92B7 1A               ld a,(de)
 380+ 92B8 77               ld (hl),a
 381+ 92B9 1C               inc e
 382+ 92BA
 383+ 92BA E1               pop hl
 384+ 92BB 1A               ld a,(de)
 385+ 92BC 77               ld (hl),a
 386+ 92BD 1C               inc e
 387+ 92BE 2C               inc l
 388+ 92BF 1A               ld a,(de)
 389+ 92C0 77               ld (hl),a
 390+ 92C1 1C               inc e
 391+ 92C2 2C               inc l
 392+ 92C3 1A               ld a,(de)
 393+ 92C4 77               ld (hl),a
 394+ 92C5 1C               inc e
 395+ 92C6
 396+ 92C6 E1               pop hl
 397+ 92C7 1A               ld a,(de)
 398+ 92C8 77               ld (hl),a
 399+ 92C9 1C               inc e
 400+ 92CA 2C               inc l
 401+ 92CB 1A               ld a,(de)
 402+ 92CC 77               ld (hl),a
 403+ 92CD 1C               inc e
 404+ 92CE 2C               inc l
 405+ 92CF 1A               ld a,(de)
 406+ 92D0 77               ld (hl),a
 407+ 92D1 1C               inc e
 408+ 92D2
 409+ 92D2 ED 7B DD 89      ld sp,(Stack)
 410+ 92D6
 411+ 92D6 C9               ret
 412+ 92D7
 413+ 92D7              ; ---------------------------------------------------
 414+ 92D7
 415+ 92D7 ED 73 DD 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 416+ 92DB FD F9        	ld sp,iy
 417+ 92DD
 418+ 92DD              ; >>>
 419+ 92DD
 420+ 92DD 06 10            ld b,16
 421+ 92DF D1           1 pop de
 422+ 92E0 7A           	ld a,d
 423+ 92E1 AE           	xor (hl)
 424+ 92E2 77           	ld (hl),a
 425+ 92E3 24           	inc h
 426+ 92E4 7C               ld a,h
 427+ 92E5 E6 07            and 7
 428+ 92E7 20 0C            jr nz,2F
 429+ 92E9 7D               ld a,l
 430+ 92EA C6 20            add a,$20
 431+ 92EC 6F               ld l,a
 432+ 92ED 38 06            jr c,2F
 433+ 92EF 7C               ld a,h
 434+ 92F0 D6 08            sub 8
 435+ 92F2 67               ld h,a
 436+ 92F3 18 00            jr 2F
 437+ 92F5 7C           2 ld a,h
 438+ 92F6 FE 58            cp $58
 439+ 92F8 28 02            jr z,3F
 440+ 92FA 10 E3            djnz 1B
 441+ 92FC ED 7B DD 89  3 ld sp,(Stack)
 442+ 9300 C9           	ret
 443+ 9301
 444+ 9301 ED 73 DD 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 445+ 9305 FD F9        	ld sp,iy
 446+ 9307
 447+ 9307              ; >>>
 448+ 9307
 449+ 9307 06 10            ld b,16
 450+ 9309 D1           1 pop de
 451+ 930A 7B           	ld a,e
 452+ 930B AE           	xor (hl)
 453+ 930C 77           	ld (hl),a
 454+ 930D 24           	inc h
 455+ 930E 7C               ld a,h
 456+ 930F E6 07            and 7
 457+ 9311 20 0C            jr nz,2F
 458+ 9313 7D               ld a,l
 459+ 9314 C6 20            add a,$20
 460+ 9316 6F               ld l,a
 461+ 9317 38 06            jr c,2F
 462+ 9319 7C               ld a,h
 463+ 931A D6 08            sub 8
 464+ 931C 67               ld h,a
 465+ 931D 18 00            jr 2F
 466+ 931F 7C           2 ld a,h
 467+ 9320 FE 58            cp $58
 468+ 9322 28 02            jr z,3F
 469+ 9324 10 E3            djnz 1B
 470+ 9326 ED 7B DD 89  3 ld sp,(Stack)
 471+ 932A C9           	ret
 472+ 932B
 473+ 932B              ; ---------------------------------------------------
 474+ 932B
 475+ 932B ED 73 DD 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 476+ 932F FD F9        	ld sp,iy
 477+ 9331 06 08            ld b,8
 478+ 9333 D1           1 pop de
 479+ 9334 7A           	ld a,d
 480+ 9335 AE           	xor (hl)
 481+ 9336 77           	ld (hl),a
 482+ 9337 23           	inc hl
 483+ 9338 D1           	pop de
 484+ 9339 7B           	ld a,e
 485+ 933A AE           	xor (hl)
 486+ 933B 77           	ld (hl),a
 487+ 933C 2B           	dec hl
 488+ 933D 24            	inc h
 489+ 933E 7C               ld a,h
 490+ 933F E6 07            and 7
 491+ 9341 20 0A            jr nz,2F
 492+ 9343 7D               ld a,l
 493+ 9344 C6 20            add a,$20
 494+ 9346 6F               ld l,a
 495+ 9347 38 04            jr c,2F
 496+ 9349 7C               ld a,h
 497+ 934A D6 08            sub 8
 498+ 934C 67               ld h,a
 499+ 934D 7C           2 ld a,h
 500+ 934E FE 58            cp $58
 501+ 9350 28 20            jr z,4F
 502+ 9352 D1               pop de
 503+ 9353 7B           	ld a,e
 504+ 9354 AE           	xor (hl)
 505+ 9355 77           	ld (hl),a
 506+ 9356 23           	inc hl
 507+ 9357 7A           	ld a,d
 508+ 9358 AE           	xor (hl)
 509+ 9359 77           	ld (hl),a
 510+ 935A 2B           	dec hl
 511+ 935B 24           	inc h
 512+ 935C 7C               ld a,h
 513+ 935D E6 07            and 7
 514+ 935F 20 0A            jr nz,3F
 515+ 9361 7D               ld a,l
 516+ 9362 C6 20            add a,$20
 517+ 9364 6F               ld l,a
 518+ 9365 38 04            jr c,3F
 519+ 9367 7C               ld a,h
 520+ 9368 D6 08            sub 8
 521+ 936A 67               ld h,a
 522+ 936B 7C           3 ld a,h
 523+ 936C FE 58            cp $58
 524+ 936E 28 02            jr z,4F
 525+ 9370 10 C1            djnz 1B
 526+ 9372 ED 7B DD 89  4 ld sp,(Stack)
 527+ 9376 C9           	ret
 528+ 9377
 529+ 9377 ED 73 DD 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 530+ 937B FD F9        	ld sp,iy
 531+ 937D 06 08            ld b,8
 532+ 937F D1           1 pop de
 533+ 9380 D1           	pop de
 534+ 9381 7B           	ld a,e
 535+ 9382 AE           	xor (hl)
 536+ 9383 77           	ld (hl),a
 537+ 9384 24            	inc h
 538+ 9385 7C               ld a,h
 539+ 9386 E6 07            and 7
 540+ 9388 20 0A            jr nz,2F
 541+ 938A 7D               ld a,l
 542+ 938B C6 20            add a,$20
 543+ 938D 6F               ld l,a
 544+ 938E 38 04            jr c,2F
 545+ 9390 7C               ld a,h
 546+ 9391 D6 08            sub 8
 547+ 9393 67               ld h,a
 548+ 9394 7C           2 ld a,h
 549+ 9395 FE 58            cp $58
 550+ 9397 28 1B            jr z,4F
 551+ 9399 D1               pop de
 552+ 939A 7A           	ld a,d
 553+ 939B AE           	xor (hl)
 554+ 939C 77           	ld (hl),a
 555+ 939D 24           	inc h
 556+ 939E 7C               ld a,h
 557+ 939F E6 07            and 7
 558+ 93A1 20 0A            jr nz,3F
 559+ 93A3 7D               ld a,l
 560+ 93A4 C6 20            add a,$20
 561+ 93A6 6F               ld l,a
 562+ 93A7 38 04            jr c,3F
 563+ 93A9 7C               ld a,h
 564+ 93AA D6 08            sub 8
 565+ 93AC 67               ld h,a
 566+ 93AD 7C           3 ld a,h
 567+ 93AE FE 58            cp $58
 568+ 93B0 28 02            jr z,4F
 569+ 93B2 10 CB            djnz 1B
 570+ 93B4 ED 7B DD 89  4 ld sp,(Stack)
 571+ 93B8 C9           	ret
 572+ 93B9
 573+ 93B9 ED 73 DD 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 574+ 93BD FD F9        	ld sp,iy
 575+ 93BF 06 08            ld b,8
 576+ 93C1 D1           1 pop de
 577+ 93C2 7B           	ld a,e
 578+ 93C3 AE           	xor (hl)
 579+ 93C4 77           	ld (hl),a
 580+ 93C5 23           	inc hl
 581+ 93C6 7A           	ld a,d
 582+ 93C7 AE           	xor (hl)
 583+ 93C8 77           	ld (hl),a
 584+ 93C9 2B           	dec hl
 585+ 93CA 24             	inc h
 586+ 93CB 7C               ld a,h
 587+ 93CC E6 07            and 7
 588+ 93CE 20 0A            jr nz,2F
 589+ 93D0 7D               ld a,l
 590+ 93D1 C6 20            add a,$20
 591+ 93D3 6F               ld l,a
 592+ 93D4 38 04            jr c,2F
 593+ 93D6 7C               ld a,h
 594+ 93D7 D6 08            sub 8
 595+ 93D9 67               ld h,a
 596+ 93DA 7C           2 ld a,h
 597+ 93DB FE 58            cp $58
 598+ 93DD 28 21            jr z,4F
 599+ 93DF D1               pop de
 600+ 93E0 7A           	ld a,d
 601+ 93E1 AE           	xor (hl)
 602+ 93E2 77           	ld (hl),a
 603+ 93E3 23           	inc hl
 604+ 93E4 D1               pop de
 605+ 93E5 7B           	ld a,e
 606+ 93E6 AE           	xor (hl)
 607+ 93E7 77           	ld (hl),a
 608+ 93E8 2B           	dec hl
 609+ 93E9 24           	inc h
 610+ 93EA 7C               ld a,h
 611+ 93EB E6 07            and 7
 612+ 93ED 20 0A            jr nz,3F
 613+ 93EF 7D               ld a,l
 614+ 93F0 C6 20            add a,$20
 615+ 93F2 6F               ld l,a
 616+ 93F3 38 04            jr c,3F
 617+ 93F5 7C               ld a,h
 618+ 93F6 D6 08            sub 8
 619+ 93F8 67               ld h,a
 620+ 93F9 7C           3 ld a,h
 621+ 93FA FE 58            cp $58
 622+ 93FC 28 02            jr z,4F
 623+ 93FE 10 C1            djnz 1B
 624+ 9400 ED 7B DD 89  4 ld sp,(Stack)
 625+ 9404 C9           	ret
 626+ 9405
 627+ 9405 ED 73 DD 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 628+ 9409 FD F9        	ld sp,iy
 629+ 940B 06 08            ld b,8
 630+ 940D D1           1 pop de
 631+ 940E 7B           	ld a,e
 632+ 940F AE           	xor (hl)
 633+ 9410 77           	ld (hl),a
 634+ 9411 24            	inc h
 635+ 9412 7C               ld a,h
 636+ 9413 E6 07            and 7
 637+ 9415 20 0A            jr nz,2F
 638+ 9417 7D               ld a,l
 639+ 9418 C6 20            add a,$20
 640+ 941A 6F               ld l,a
 641+ 941B 38 04            jr c,2F
 642+ 941D 7C               ld a,h
 643+ 941E D6 08            sub 8
 644+ 9420 67               ld h,a
 645+ 9421 7C           2 ld a,h
 646+ 9422 FE 58            cp $58
 647+ 9424 28 1C            jr z,4F
 648+ 9426 D1               pop de
 649+ 9427 7A           	ld a,d
 650+ 9428 AE           	xor (hl)
 651+ 9429 77           	ld (hl),a
 652+ 942A 24           	inc h
 653+ 942B 7C               ld a,h
 654+ 942C E6 07            and 7
 655+ 942E 20 0A            jr nz,3F
 656+ 9430 7D               ld a,l
 657+ 9431 C6 20            add a,$20
 658+ 9433 6F               ld l,a
 659+ 9434 38 04            jr c,3F
 660+ 9436 7C               ld a,h
 661+ 9437 D6 08            sub 8
 662+ 9439 67               ld h,a
 663+ 943A 7C           3 ld a,h
 664+ 943B FE 58            cp $58
 665+ 943D 28 03            jr z,4F
 666+ 943F D1               pop de
 667+ 9440 10 CB            djnz 1B
 668+ 9442 ED 7B DD 89  4 ld sp,(Stack)
 669+ 9446 C9           	ret
 670+ 9447
 671+ 9447              ; ---------------------------------------------------
 672+ 9447              ;
 673+ 9447              ;   27/02/23
 674+ 9447              ;
 675+ 9447              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 676+ 9447              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 677+ 9447              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 678+ 9447
 679+ 9447 ED 73 DD 89  Pinta_Disparo ld (Stack),sp
 680+ 944B FD F9            ld sp,iy
 681+ 944D 06 03            ld b,3
 682+ 944F D1           1 pop de
 683+ 9450 7B               ld a,e
 684+ 9451 AE               xor (hl)
 685+ 9452 77               ld (hl),a
 686+ 9453 23               inc hl
 687+ 9454 7A               ld a,d
 688+ 9455 AE               xor (hl)
 689+ 9456 77               ld (hl),a
 690+ 9457 2B               dec hl
 691+ 9458
 692+ 9458 24               inc h
 693+ 9459 7C               ld a,h
 694+ 945A E6 07            and 7
 695+ 945C 20 0A            jr nz,2F
 696+ 945E 7D               ld a,l
 697+ 945F C6 20            add a,$20
 698+ 9461 6F               ld l,a
 699+ 9462 38 04            jr c,2F
 700+ 9464 7C               ld a,h
 701+ 9465 D6 08            sub 8
 702+ 9467 67               ld h,a
 703+ 9468 7C           2 ld a,h
 704+ 9469 FE 58            cp $58
 705+ 946B 28 02            jr z,3F
 706+ 946D
 707+ 946D 10 E0            djnz 1B
 708+ 946F ED 7B DD 89  3 ld sp,(Stack)
 709+ 9473 C9               ret
 710+ 9474
# file closed: Rutinas_de_impresion_sprites.asm
1795  9474              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9474
   2+ 9474              ; ******************************************************************************************************************************************************************************************
   3+ 9474              ;
   4+ 9474              ;   20/05/23
   5+ 9474              ;
   6+ 9474              ;	Recompone_posicion_inicio
   7+ 9474              ;
   8+ 9474              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9474              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9474              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9474              ;	_ a una u otra rutina.
  12+ 9474
  13+ 9474              Recompone_posicion_inicio
  14+ 9474
  15+ 9474 2A 9D 89     	ld hl,(Posicion_inicio)
  16+ 9477 7D           	ld a,l
  17+ 9478 E6 1F        	and $1f
  18+ 947A 28 16        	jr z,1F
  19+ 947C
  20+ 947C FE 1F        	cp $1f
  21+ 947E 28 0D        	jr z,3F
  22+ 9480
  23+ 9480 21 B2 89     	ld hl,Ctrl_2
  24+ 9483 CB C6        	set 0,(hl)
  25+ 9485 2A 8F 89     	ld hl,(Puntero_objeto)
  26+ 9488 22 CD 89     	ld (Repone_puntero_objeto),hl
  27+ 948B 18 08        	jr 2F
  28+ 948D
  29+ 948D CD 3B 96     3 call Mov_left
  30+ 9490 18 03        	jr 2F
  31+ 9492
  32+ 9492 CD 18 95     1 call Mov_right
  33+ 9495 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9498 22 8F 89     	ld (Puntero_objeto),hl
  35+ 949B C9           	ret
  36+ 949C
  37+ 949C              ; ******************************************************************************************************************************************************************************************
  38+ 949C              ;
  39+ 949C              ;   27/05/23
  40+ 949C              ;
  41+ 949C              ;	Mov_down
  42+ 949C              ;
  43+ 949C              ; 	Mueve el Sprite X px hacia abajo.
  44+ 949C              ;
  45+ 949C              ;
  46+ 949C              Mov_down
  47+ 949C
  48+ 949C CD 06 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 949F              ;																	; _ repone (Puntero_objeto).
  50+ 949F 21 AD 89     	ld hl,Ctrl_0
  51+ 94A2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 94A4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 94A4              ; 																	; _ en el caso de que no lo haya.
  54+ 94A4 3A B7 89     	ld a,(Vel_down)
  55+ 94A7 47           	ld b,a
  56+ 94A8 2A 8D 89         ld hl,(Posicion_actual)
  57+ 94AB CD 77 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 94AE E6 02        	and 2
  59+ 94B0 28 17        	jr z,1F
  60+ 94B2
  61+ 94B2              ; Nos encontramos en el último tercio de pantalla.
  62+ 94B2              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 94B2
  64+ 94B2 7C           	ld a,h
  65+ 94B3 FE 57        	cp $57
  66+ 94B5 20 12        	jr nz,1F
  67+ 94B7
  68+ 94B7 7D           	ld a,l
  69+ 94B8 C6 20        	add $20
  70+ 94BA 30 0D        	jr nc,1F
  71+ 94BC
  72+ 94BC              ; ------------------------------
  73+ 94BC              ;
  74+ 94BC              ;	12/01/24
  75+ 94BC
  76+ 94BC              ;	call Reaparece_arriba
  77+ 94BC CD C8 97     	call Reinicio
  78+ 94BF
  79+ 94BF              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 94BF
  81+ 94BF 3A EB 89     	ld a,(Ctrl_3)
  82+ 94C2 CB CF        	set 1,a
  83+ 94C4 32 EB 89     	ld (Ctrl_3),a
  84+ 94C7
  85+ 94C7 18 08        	jr 3F
  86+ 94C9              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 94C9              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 94C9              ; ------------------------------
  89+ 94C9
  90+ 94C9 CD FE 90     1 call NextScan
  91+ 94CC 22 8D 89     	ld (Posicion_actual),hl
  92+ 94CF 10 DA            djnz 2B
  93+ 94D1 CD 95 99     3 call Genera_coordenadas
  94+ 94D4 C9           	ret
  95+ 94D5
  96+ 94D5              ; ******************************************************************************************************************************************************************************************
  97+ 94D5              ;
  98+ 94D5              ;   27/05/23
  99+ 94D5              ;
 100+ 94D5              ;	Mov_up
 101+ 94D5              ;
 102+ 94D5              ; 	Mueve el Sprite hacia arriba.
 103+ 94D5              ;
 104+ 94D5              ;
 105+ 94D5              Mov_up
 106+ 94D5
 107+ 94D5 CD 06 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 94D8              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 94D8 21 AD 89     	ld hl,Ctrl_0
 110+ 94DB CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 94DD              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 94DD              ; 																		; _ en el caso de que no lo haya.
 113+ 94DD 3A B6 89     	ld a,(Vel_up)
 114+ 94E0 47           	ld b,a
 115+ 94E1 2A 8D 89     	ld hl,(Posicion_actual)
 116+ 94E4 CD 77 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 94E7 A7           	and a
 118+ 94E8 20 10        	jr nz,1F
 119+ 94EA
 120+ 94EA              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 94EA              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 94EA
 123+ 94EA 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 94EB FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 94ED 20 0B            jr nz,1F
 126+ 94EF 7D               ld a,l
 127+ 94F0 D6 20            sub $20
 128+ 94F2 30 06            jr nc,1F
 129+ 94F4 25               dec h
 130+ 94F5
 131+ 94F5              ; -----------------------------
 132+ 94F5 CD A9 97         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 94F8              ;	call Reinicio
 134+ 94F8              ; -----------------------------
 135+ 94F8
 136+ 94F8 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 94FA CD 0D 91     1 call PreviousScan
 138+ 94FD 22 8D 89     	ld (Posicion_actual),hl
 139+ 9500 10 E2            djnz 3B
 140+ 9502 CD 95 99     2 call Genera_coordenadas
 141+ 9505 C9           	ret
 142+ 9506
 143+ 9506              ; -----------------------------
 144+ 9506              ;
 145+ 9506              ;	27/5/23
 146+ 9506              ;
 147+ 9506              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9506              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9506              ;
 150+ 9506              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9506              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9506              ;
 153+ 9506              ;	Modifica: A y (Puntero_objeto).
 154+ 9506
 155+ 9506 3A B2 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9509 CB 47        	bit 0,a
 157+ 950B C8           	ret z
 158+ 950C CB 87        	res 0,a
 159+ 950E 32 B2 89     	ld (Ctrl_2),a
 160+ 9511 2A CD 89     	ld hl,(Repone_puntero_objeto)
 161+ 9514 22 8F 89     	ld (Puntero_objeto),hl
 162+ 9517 C9           	ret
 163+ 9518
 164+ 9518              ; ******************************************************************************************************************************************************************************************
 165+ 9518              ;
 166+ 9518              ;	19/10/22
 167+ 9518              ;
 168+ 9518              ;	Mov_right.
 169+ 9518              ;
 170+ 9518              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9518              ;
 172+ 9518
 173+ 9518 3A AD 89     Mov_right ld a,(Ctrl_0)
 174+ 951B CB 77        	bit 6,a
 175+ 951D 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 951F
 177+ 951F CD 57 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9522 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9523
 180+ 9523 21 AD 89     	ld hl,Ctrl_0
 181+ 9526 CB E6        	set 4,(hl)
 182+ 9528 18 52        	jr 8F
 183+ 952A
 184+ 952A 21 AD 89     10 ld hl,Ctrl_0
 185+ 952D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 952F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 952F              ; 																	; _ en el caso de que no lo haya.
 188+ 952F 3A 91 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9532 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9534 20 46        	jr nz,8F
 191+ 9536
 192+ 9536 3A 93 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9539 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 953A 28 40        	jr z,8F
 195+ 953C
 196+ 953C              ; ---------- ---------- ----------
 197+ 953C              ;
 198+ 953C              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 953C
 200+ 953C 3A B5 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 953F FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9541 28 11        	jr z,1F
 203+ 9543 38 06        	jr c,6F
 204+ 9545 FE 04        	cp 4
 205+ 9547 28 14        	jr z,7F
 206+ 9549 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 954B
 208+ 954B              ; ---------- ---------- ----------
 209+ 954B              ;
 210+ 954B              ; Perfiles de velocidad
 211+ 954B              ;
 212+ 954B
 213+ 954B 3A 93 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 954E FE FE        	cp $fe
 215+ 9550 20 2A        	jr nz,8F
 216+ 9552 18 10        	jr 3F
 217+ 9554 3A 93 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9557 FE FD        	cp $fd
 219+ 9559 20 21        	jr nz,8F
 220+ 955B 18 07        	jr 3F
 221+ 955D 3A 93 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9560 FE FB        	cp $fb
 223+ 9562 20 18        	jr nz,8F
 224+ 9564
 225+ 9564              ; ---------- ---------- ----------
 226+ 9564
 227+ 9564              3
 228+ 9564 CD 97 97     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9567              ;	call Reinicio
 230+ 9567
 231+ 9567              ; ---------- ---------- ----------
 232+ 9567              ;
 233+ 9567              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9567
 235+ 9567 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9569 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 956A CD 83 95     	call DESPLZ_DER
 238+ 956D C1           	pop bc
 239+ 956E 10 F9        	djnz 5B
 240+ 9570 2A 8D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9573 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9574 22 8D 89     	ld (Posicion_actual),hl
 243+ 9577 CD 95 99     	call Genera_coordenadas
 244+ 957A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 957C
 246+ 957C              ; ---------- ---------- ----------
 247+ 957C
 248+ 957C 2A 8D 89     8 ld hl,(Posicion_actual)
 249+ 957F CD 83 95     	call DESPLZ_DER
 250+ 9582 C9           2 ret
 251+ 9583
 252+ 9583              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9583              ;
 254+ 9583              ;	22/9/22
 255+ 9583              ;
 256+ 9583
 257+ 9583 CD 92 95     DESPLZ_DER call Desplaza_derecha
 258+ 9586 CD DE 95         call modifica_parametros_1er_DESPLZ_2
 259+ 9589 CD 07 96         call Ciclo_completo
 260+ 958C 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 958F CB FE        	set 7,(hl)
 262+ 9591 C9           	ret
 263+ 9592
 264+ 9592              ; ******************************************************************************************************************************************************************************************
 265+ 9592              ;	15/02/23
 266+ 9592              ;
 267+ 9592
 268+ 9592 3A B5 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9595 47           	ld b,a
 270+ 9596 2A 99 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9599 23           1 inc hl
 272+ 959A 23           	inc hl
 273+ 959B 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 959D 22 99 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 95A0 CD 70 8B     	call Extrae_address
 276+ 95A3 22 8F 89     	ld (Puntero_objeto),hl
 277+ 95A6
 278+ 95A6              ; Modifica (Puntero_DESPLZ_izq).
 279+ 95A6
 280+ 95A6              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 95A6              ; Cuántos movimientos hemos hecho ??
 282+ 95A6              ; DE contiene (Puntero_DESPLZ_der).
 283+ 95A6
 284+ 95A6 2A 95 89     7 ld hl,(Indice_Sprite_der)
 285+ 95A9 EB           	ex de,hl
 286+ 95AA A7           	and a
 287+ 95AB ED 52        	sbc hl,de
 288+ 95AD CB 3D        	srl l
 289+ 95AF 3E 08        6 ld a,8
 290+ 95B1 95           	sub l
 291+ 95B2 30 1E        	jr nc,3F
 292+ 95B4
 293+ 95B4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 95B4              ; B="0".
 295+ 95B4
 296+ 95B4 04           4 inc b
 297+ 95B5 3C           	inc a
 298+ 95B6 20 FC        	jr nz,4B
 299+ 95B8 78           	ld a,b
 300+ 95B9 08           	ex af,af
 301+ 95BA 2A 95 89     	ld hl,(Indice_Sprite_der)
 302+ 95BD 23           5 inc hl
 303+ 95BE 23           	inc hl
 304+ 95BF 10 FC        	djnz 5B
 305+ 95C1 22 99 89     	ld (Puntero_DESPLZ_der),hl
 306+ 95C4 CD 70 8B     	call Extrae_address
 307+ 95C7 22 8F 89     	ld (Puntero_objeto),hl
 308+ 95CA
 309+ 95CA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 95CA              ; _(Posicion_actual).
 311+ 95CA
 312+ 95CA 21 8D 89     	ld hl,Posicion_actual
 313+ 95CD 34           	inc (hl)
 314+ 95CE 08               ex af,af
 315+ 95CF 6F           	ld l,a
 316+ 95D0 18 DD        	jr 6B
 317+ 95D2
 318+ 95D2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 95D2
 320+ 95D2 47           3 ld b,a
 321+ 95D3 2A 97 89     	ld hl,(Indice_Sprite_izq)
 322+ 95D6 23           2 inc hl
 323+ 95D7 23           	inc hl
 324+ 95D8 10 FC        	djnz 2B
 325+ 95DA 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 95DD C9           8 ret
 327+ 95DE
 328+ 95DE              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 95DE              ;
 330+ 95DE              ;	24/7/22
 331+ 95DE              ;
 332+ 95DE              ;	modifica_parametros_1er_DESPLZ_2
 333+ 95DE              ;
 334+ 95DE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 95DE              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 95DE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 95DE
 338+ 95DE 3A 93 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 95E1 A7           	and a
 340+ 95E2 20 1F        	jr nz,1F
 341+ 95E4 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 95E6 32 93 89         ld (CTRL_DESPLZ),a
 343+ 95E9
 344+ 95E9 21 8C 89     	ld hl,Columns
 345+ 95EC 34           	inc (hl)
 346+ 95ED 3A 9F 89     	ld a,(Cuad_objeto)
 347+ 95F0 E6 01        	and 1
 348+ 95F2 28 0F        	jr z,1F
 349+ 95F4 2A 8D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 95F7 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 95F8 22 8D 89     	ld (Posicion_actual),hl
 352+ 95FB CD 95 99     	call Genera_coordenadas
 353+ 95FE CD 63 97     	call Inc_CTRL_DESPLZ
 354+ 9601 18 03        	jr 2F
 355+ 9603 CD 63 97     1 call Inc_CTRL_DESPLZ
 356+ 9606 C9           2 ret
 357+ 9607
 358+ 9607              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9607              ;
 360+ 9607              ;	24/7/22
 361+ 9607              ;
 362+ 9607              ;	Ciclo_completo.
 363+ 9607              ;
 364+ 9607              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9607              ;
 366+ 9607              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9607              ; 	Decrementamos (Columns).
 368+ 9607              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9607              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9607
 371+ 9607
 372+ 9607 3A 93 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 960A FE FF        	cp $ff
 374+ 960C 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 960E E6 F0        	and $f0
 376+ 9610 20 28        	jr nz,3F
 377+ 9612
 378+ 9612              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9612
 380+ 9612 3A 93 89     	ld a,(CTRL_DESPLZ)
 381+ 9615 47           	ld b,a
 382+ 9616 3E F8        	ld a,$f8
 383+ 9618 80           	add b
 384+ 9619 32 93 89     	ld (CTRL_DESPLZ),a
 385+ 961C 18 1C        	jr 3F
 386+ 961E 21 8C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9621 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9622 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9623 32 93 89     	ld (CTRL_DESPLZ),a
 390+ 9626 3A 9F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9629 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 962B 20 0A        	jr nz,2F
 393+ 962D 2A 8D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9630 23           	inc hl
 395+ 9631 22 8D 89     	ld (Posicion_actual),hl
 396+ 9634 CD 95 99     	call Genera_coordenadas
 397+ 9637
 398+ 9637              ; Inicia el puntero de Sprite.
 399+ 9637
 400+ 9637 CD 85 8B     2 call Inicia_puntero_objeto_der
 401+ 963A C9           3 ret
 402+ 963B
 403+ 963B              ; ******************************************************************************************************************************************************************************************
 404+ 963B              ;
 405+ 963B              ;	15/02/23
 406+ 963B              ;
 407+ 963B              ;	Mov_left.
 408+ 963B              ;
 409+ 963B              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 963B              ;
 411+ 963B              Mov_left
 412+ 963B
 413+ 963B 21 AD 89     	ld hl,Ctrl_0
 414+ 963E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9640              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9640              ; 																	; _ en el caso de que no lo haya.
 417+ 9640 3A AD 89     	ld a,(Ctrl_0)
 418+ 9643 CB 77        	bit 6,a
 419+ 9645 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9647
 421+ 9647 CD 5D 97     	call Stop_Amadeus_left
 422+ 964A C8           	ret z
 423+ 964B 20 4A        	jr nz,8F
 424+ 964D
 425+ 964D 3A 91 89     11 ld a,(Coordenada_X)
 426+ 9650 A7           	and a
 427+ 9651 20 44        	jr nz,8F
 428+ 9653
 429+ 9653 3A 93 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9656 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9657 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9659
 433+ 9659              ; ---------- ---------- ----------
 434+ 9659
 435+ 9659 3A B4 89     	ld a,(Vel_left)
 436+ 965C FE 02        	cp 2
 437+ 965E 28 0F        	jr z,1F
 438+ 9660 38 04        	jr c,6F
 439+ 9662 FE 04        	cp 4
 440+ 9664 28 12        	jr z,7F
 441+ 9666
 442+ 9666              ; ---------- ---------- ----------
 443+ 9666
 444+ 9666 3A 93 89     6 ld a,(CTRL_DESPLZ)
 445+ 9669 FE F8        	cp $f8
 446+ 966B 20 2A        	jr nz,8F
 447+ 966D 18 10        	jr 4F
 448+ 966F 3A 93 89     1 ld a,(CTRL_DESPLZ)
 449+ 9672 FE F9        	cp $f9
 450+ 9674 20 21        	jr nz,8F
 451+ 9676 18 07        	jr 4F
 452+ 9678 3A 93 89     7 ld a,(CTRL_DESPLZ)
 453+ 967B FE FB        	cp $fb
 454+ 967D 20 18        	jr nz,8F
 455+ 967F
 456+ 967F              ; ---------- ---------- ----------
 457+ 967F
 458+ 967F              4
 459+ 967F CD 85 97     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9682              ;	call Reinicio
 461+ 9682
 462+ 9682              ; ---------- ---------- ----------
 463+ 9682
 464+ 9682 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9684 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9685
 467+ 9685              ;	ld hl,(Indice_Sprite_izq)
 468+ 9685              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9685
 470+ 9685 CD 9E 96     	call DESPLZ_IZQ
 471+ 9688 C1           	pop bc
 472+ 9689 10 F9        	djnz 5B
 473+ 968B 2A 8D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 968E 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 968F 22 8D 89     	ld (Posicion_actual),hl
 476+ 9692 CD 95 99     	call Genera_coordenadas
 477+ 9695 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9697
 479+ 9697              ; ---------- ---------- ----------
 480+ 9697
 481+ 9697              ; Movemos, no hay recolocación.
 482+ 9697
 483+ 9697 2A 8D 89     8 ld hl,(Posicion_actual)
 484+ 969A CD 9E 96     	call DESPLZ_IZQ
 485+ 969D C9           2 ret
 486+ 969E
 487+ 969E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 969E              ;
 489+ 969E              ;	22/9/22
 490+ 969E
 491+ 969E              DESPLZ_IZQ
 492+ 969E
 493+ 969E CD AD 96     	call Desplaza_izquierda
 494+ 96A1 CD F9 96         call modifica_parametros_1er_DESPLZ
 495+ 96A4 CD 21 97     	call Ciclo_completo_2
 496+ 96A7 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 96AA CB BE        	res 7,(hl)
 498+ 96AC C9           	ret
 499+ 96AD
 500+ 96AD              Desplaza_izquierda
 501+ 96AD
 502+ 96AD 3A B4 89     	ld a,(Vel_left)
 503+ 96B0 47           	ld b,a
 504+ 96B1 2A 9B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 96B4 23           1 inc hl
 506+ 96B5 23           	inc hl
 507+ 96B6 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 96B8 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 96BB CD 70 8B     	call Extrae_address
 510+ 96BE 22 8F 89     	ld (Puntero_objeto),hl
 511+ 96C1
 512+ 96C1              ; Modifica (Puntero_DESPLZ_der).
 513+ 96C1
 514+ 96C1              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 96C1              ; Cuántos movimientos hemos hecho ??
 516+ 96C1              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 96C1
 518+ 96C1 2A 97 89     7 ld hl,(Indice_Sprite_izq)
 519+ 96C4 EB           	ex de,hl
 520+ 96C5 A7           	and a
 521+ 96C6 ED 52        	sbc hl,de
 522+ 96C8 CB 3D        	srl l
 523+ 96CA 3E 08        6 ld a,8
 524+ 96CC 95           	sub l
 525+ 96CD 30 1E        	jr nc,3F
 526+ 96CF
 527+ 96CF              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 96CF              ; B="0".
 529+ 96CF
 530+ 96CF 04           4 inc b
 531+ 96D0 3C           	inc a
 532+ 96D1 20 FC        	jr nz,4B
 533+ 96D3 78           	ld a,b
 534+ 96D4 08           	ex af,af
 535+ 96D5 2A 97 89     	ld hl,(Indice_Sprite_izq)
 536+ 96D8 23           5 inc hl
 537+ 96D9 23           	inc hl
 538+ 96DA 10 FC        	djnz 5B
 539+ 96DC 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 96DF CD 70 8B     	call Extrae_address
 541+ 96E2 22 8F 89     	ld (Puntero_objeto),hl
 542+ 96E5
 543+ 96E5              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 96E5              ; _(Posicion_actual).
 545+ 96E5
 546+ 96E5 21 8D 89     	ld hl,Posicion_actual
 547+ 96E8 35           	dec (hl)
 548+ 96E9 08           	ex af,af
 549+ 96EA 6F           	ld l,a
 550+ 96EB 18 DD        	jr 6B
 551+ 96ED
 552+ 96ED              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 96ED
 554+ 96ED 47           3 ld b,a
 555+ 96EE 2A 95 89     	ld hl,(Indice_Sprite_der)
 556+ 96F1 23           2 inc hl
 557+ 96F2 23           	inc hl
 558+ 96F3 10 FC        	djnz 2B
 559+ 96F5 22 99 89     	ld (Puntero_DESPLZ_der),hl
 560+ 96F8 C9           8 ret
 561+ 96F9
 562+ 96F9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 96F9              ;
 564+ 96F9              ;	modifica_parametros_1er_DESPLZ
 565+ 96F9              ;
 566+ 96F9              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 96F9              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 96F9              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 96F9
 570+ 96F9 3A 93 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 96FC A7           	and a
 572+ 96FD 20 1E        	jr nz,1F
 573+ 96FF 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9700 32 93 89         ld (CTRL_DESPLZ),a
 575+ 9703 21 8C 89     	ld hl,Columns
 576+ 9706 34           	inc (hl)
 577+ 9707 3A 9F 89     	ld a,(Cuad_objeto)
 578+ 970A E6 01        	and 1
 579+ 970C 20 0F        	jr nz,1F
 580+ 970E 2A 8D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9711 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9712 22 8D 89     	ld (Posicion_actual),hl
 583+ 9715 CD 95 99     	call Genera_coordenadas
 584+ 9718 CD 74 97     	call Dec_CTRL_DESPLZ
 585+ 971B 18 03        	jr 2F
 586+ 971D CD 74 97     1 call Dec_CTRL_DESPLZ
 587+ 9720 C9           2 ret
 588+ 9721
 589+ 9721              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9721
 591+ 9721 3A 93 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9724 FE F7        	cp $f7
 593+ 9726 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9728 30 2C        	jr nc,3F
 595+ 972A
 596+ 972A              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 972A
 598+ 972A 06 00        	ld b,0
 599+ 972C 04           4 inc b
 600+ 972D 3C           	inc a
 601+ 972E FE F7        	cp $f7
 602+ 9730 20 FA        	jr nz,4B
 603+ 9732 3E FF        	ld a,$ff
 604+ 9734 90           	sub b
 605+ 9735 32 93 89     	ld (CTRL_DESPLZ),a
 606+ 9738 18 1C        	jr 3F
 607+ 973A
 608+ 973A              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 973A
 610+ 973A 21 8C 89     1 ld hl,Columns
 611+ 973D 35           	dec (hl)
 612+ 973E AF           	xor a
 613+ 973F 32 93 89     	ld (CTRL_DESPLZ),a
 614+ 9742 3A 9F 89     	ld a,(Cuad_objeto)
 615+ 9745 E6 01        	and 1
 616+ 9747 28 0A        	jr z,2F
 617+ 9749 2A 8D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 974C 2B           	dec hl
 619+ 974D 22 8D 89     	ld (Posicion_actual),hl
 620+ 9750 CD 95 99     	call Genera_coordenadas
 621+ 9753
 622+ 9753              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9753
 624+ 9753 CD 98 8B     2 call Inicia_puntero_objeto_izq
 625+ 9756 C9           3 ret
 626+ 9757
 627+ 9757              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9757              ;
 629+ 9757              ;	19/10/22
 630+ 9757              ;
 631+ 9757              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9757              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9757
 634+ 9757 3A 91 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 975A FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 975C C9           	ret
 637+ 975D
 638+ 975D              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 975D              ;
 640+ 975D              ;	19/10/22
 641+ 975D              ;
 642+ 975D              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 975D              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 975D
 645+ 975D 3A 91 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9760 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9762 C9           	ret
 648+ 9763
 649+ 9763              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9763              ;
 651+ 9763              ;	24/7/22
 652+ 9763              ;
 653+ 9763              ;	Inc_CTRL_DESPLZ
 654+ 9763              ;
 655+ 9763              ;
 656+ 9763              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9763
 658+ 9763 21 93 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9766 3A B5 89     	ld a,(Vel_right)
 660+ 9769 A7           	and a
 661+ 976A 28 06        	jr z,1F
 662+ 976C 47           	ld b,a
 663+ 976D 34           3 inc (hl)
 664+ 976E 10 FD        	djnz 3B
 665+ 9770 18 01        	jr 2F
 666+ 9772 34           1 inc (hl)
 667+ 9773 C9           2 ret
 668+ 9774
 669+ 9774              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9774              ;
 671+ 9774              ;	5/2/23
 672+ 9774              ;
 673+ 9774              ;	Dec_CTRL_DESPLZ
 674+ 9774              ;
 675+ 9774              ;
 676+ 9774              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9774
 678+ 9774 21 93 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9777 3A B4 89     	ld a,(Vel_left)
 680+ 977A A7           	and a
 681+ 977B 28 06        	jr z,1F
 682+ 977D 47           	ld b,a
 683+ 977E 35           3 dec (hl)
 684+ 977F 10 FD        	djnz 3B
 685+ 9781 18 01        	jr 2F
 686+ 9783 35           1 dec (hl)
 687+ 9784 C9           2 ret
 688+ 9785
 689+ 9785              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9785
 691+ 9785 2A 8D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9788 01 1F 00     	ld bc,31
 693+ 978B A7           	and a
 694+ 978C ED 4A        	adc hl,bc
 695+ 978E 22 8D 89     	ld (Posicion_actual),hl
 696+ 9791 21 AD 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9794 CB C6        	set 0,(hl)
 698+ 9796 C9           	ret
 699+ 9797
 700+ 9797              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9797
 702+ 9797 2A 8D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 979A 01 1F 00     	ld bc,31
 704+ 979D A7           	and a
 705+ 979E ED 42        	sbc hl,bc
 706+ 97A0 22 8D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 97A3 21 AD 89     	ld hl,Ctrl_0
 708+ 97A6 CB CE        	set 1,(hl)
 709+ 97A8 C9           	ret
 710+ 97A9
 711+ 97A9              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 97A9
 713+ 97A9 24           Reaparece_abajo inc h
 714+ 97AA 01 E0 17     	ld bc,$17e0
 715+ 97AD A7           	and a
 716+ 97AE ED 4A        	adc hl,bc
 717+ 97B0 22 8D 89     	ld (Posicion_actual),hl
 718+ 97B3 21 AD 89     	ld hl,Ctrl_0
 719+ 97B6 CB D6        	set 2,(hl)
 720+ 97B8 C9           	ret
 721+ 97B9
 722+ 97B9              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 97B9
 724+ 97B9 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 97BC A7           	and a
 726+ 97BD ED 42        	sbc hl,bc
 727+ 97BF 22 8D 89     	ld (Posicion_actual),hl
 728+ 97C2 21 AD 89     	ld hl,Ctrl_0
 729+ 97C5 CB DE        	set 3,(hl)
 730+ 97C7 C9           	ret
 731+ 97C8
 732+ 97C8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 97C8              ;
 734+ 97C8              ;	15/07/23
 735+ 97C8
 736+ 97C8              Reinicio
 737+ 97C8
 738+ 97C8              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 97C8
 740+ 97C8 AF           	xor a
 741+ 97C9 21 C4 89     	ld hl,Puntero_indice_mov_bucle
 742+ 97CC CD EA 97     	call Limpia_contenido_hl
 743+ 97CF
 744+ 97CF 21 8D 89     	ld hl,Posicion_actual
 745+ 97D2 CD EA 97     	call Limpia_contenido_hl
 746+ 97D5
 747+ 97D5 CD 33 8C     	call Inicializa_Puntero_indice_mov
 748+ 97D8 CD B6 98     	call Inicia_Puntero_mov
 749+ 97DB
 750+ 97DB 21 C6 89     	ld hl,Incrementa_puntero
 751+ 97DE 06 05        	ld b,5
 752+ 97E0 77           1 ld (hl),a
 753+ 97E1 23           	inc hl
 754+ 97E2 10 FC        	djnz 1B
 755+ 97E4
 756+ 97E4 21 B2 89     	ld hl,Ctrl_2
 757+ 97E7 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 97E9
 759+ 97E9 C9           	ret
 760+ 97EA
 761+ 97EA 77           Limpia_contenido_hl	ld (hl),a
 762+ 97EB 23           	inc hl
 763+ 97EC 77           	ld (hl),a
 764+ 97ED C9           	ret
 765+ 97EE
 766+ 97EE
# file closed: Direcciones.asm
1796  97EE              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 97EE              ; ----- ----- ----- ----- -----
   2+ 97EE              ;
   3+ 97EE              ;   28/12/23
   4+ 97EE
   5+ 97EE              Movimiento
   6+ 97EE
   7+ 97EE              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 97EE
   9+ 97EE 3A B2 89         ld a,(Ctrl_2)
  10+ 97F1 CB 57            bit 2,a
  11+ 97F3 20 1B            jr nz, Desplazamiento_iniciado
  12+ 97F5
  13+ 97F5 2A C2 89         ld hl,(Puntero_mov)
  14+ 97F8 7E               ld a,(hl)
  15+ 97F9
  16+ 97F9              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 97F9
  18+ 97F9              Inicia_desplazamiento.
  19+ 97F9
  20+ 97F9              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 97F9
  22+ 97F9 CD EC 98         call Ajusta_velocidad_desplazamiento
  23+ 97FC
  24+ 97FC              ; Iniciamos (Repetimos_mov).
  25+ 97FC
  26+ 97FC 7E               ld a,(hl)
  27+ 97FD E6 0F            and $0f
  28+ 97FF 32 C8 89         ld (Repetimos_desplazamiento),a
  29+ 9802 32 C9 89         ld (Repetimos_desplazamiento_backup),a
  30+ 9805
  31+ 9805              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9805
  33+ 9805 23               inc hl
  34+ 9806 7E               ld a,(hl)
  35+ 9807 32 CB 89         ld (Cola_de_desplazamiento),a
  36+ 980A 2B               dec hl
  37+ 980B
  38+ 980B 21 B2 89         ld hl,Ctrl_2
  39+ 980E CB D6            set 2,(hl)
  40+ 9810
  41+ 9810              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9810              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9810
  44+ 9810              Desplazamiento_iniciado
  45+ 9810
  46+ 9810 CD C0 98         call Aplica_desplazamiento
  47+ 9813
  48+ 9813              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9813
  50+ 9813 3A EB 89         ld a,(Ctrl_3)
  51+ 9816 CB 4F            bit 1,a
  52+ 9818 C0               ret nz
  53+ 9819
  54+ 9819 21 C8 89     3 ld hl,Repetimos_desplazamiento
  55+ 981C 35               dec (hl)
  56+ 981D C0               ret nz
  57+ 981E
  58+ 981E              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 981E              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 981E              ; Analiza (Cola_de_desplazamiento).
  61+ 981E
  62+ 981E 3A CB 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 9821 A7               and a
  64+ 9822 CC 15 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9825 28 30            jr z,Reinicia_el_movimiento
  66+ 9827
  67+ 9827 FE FF            cp $ff
  68+ 9829 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 982B
  70+ 982B FE FE            cp $fe
  71+ 982D CC 9A 98         call z,Fijamos_bucle
  72+ 9830 28 25            jr z,Reinicia_el_movimiento
  73+ 9832
  74+ 9832 FE FD            cp $fd
  75+ 9834 20 11            jr nz,1F
  76+ 9836
  77+ 9836              ; ---
  78+ 9836              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9836
  80+ 9836 3A B2 89         ld a,(Ctrl_2)
  81+ 9839 CB 5F            bit 3,a
  82+ 983B 20 1A            jr nz,Reinicia_el_movimiento
  83+ 983D
  84+ 983D              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 983D
  86+ 983D 21 B2 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9840 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9842
  89+ 9842 CD AB 98         call Inicia_Repetimos_movimiento
  90+ 9845 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9847              ; ---
  92+ 9847
  93+ 9847 FE 01        1 cp 1
  94+ 9849 CA 84 98         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 984C
  96+ 984C 3D               dec a
  97+ 984D 32 CB 89         ld (Cola_de_desplazamiento),a
  98+ 9850
  99+ 9850 3A C9 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9853 32 C8 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9856              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9856 C9               ret
 103+ 9857
 104+ 9857              Reinicia_el_movimiento
 105+ 9857
 106+ 9857 3A B2 89         ld a,(Ctrl_2)
 107+ 985A CB 5F            bit 3,a
 108+ 985C 28 1B            jr z,2F
 109+ 985E
 110+ 985E              ; (Cola_de_desplazamiento)="254".
 111+ 985E
 112+ 985E 21 CA 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9861 35               dec (hl)
 114+ 9862 20 15            jr nz,2F
 115+ 9864
 116+ 9864              ; Fin de las repeticiones del último movimiento.
 117+ 9864
 118+ 9864 21 B2 89         ld hl,Ctrl_2
 119+ 9867 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9869
 121+ 9869 2A C2 89         ld hl,(Puntero_mov)
 122+ 986C 23               inc hl
 123+ 986D 23               inc hl
 124+ 986E 23               inc hl
 125+ 986F 22 C2 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9872              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9872 7E               ld a,(hl)
 128+ 9873 32 CB 89         ld (Cola_de_desplazamiento),a
 129+ 9876
 130+ 9876 C3 1E 98         jp Cola
 131+ 9879
 132+ 9879 CD B6 98     2 call Inicia_Puntero_mov
 133+ 987C
 134+ 987C 21 B2 89         ld hl,Ctrl_2
 135+ 987F CB 96            res 2,(hl)
 136+ 9881
 137+ 9881 C3 EE 97         jp Movimiento
 138+ 9884
 139+ 9884              Siguiente_desplazamiento
 140+ 9884
 141+ 9884              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9884              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9884
 144+ 9884 21 B2 89         ld hl,Ctrl_2
 145+ 9887 CB 96            res 2,(hl)
 146+ 9889
 147+ 9889 2A C2 89         ld hl,(Puntero_mov)
 148+ 988C 23               inc hl
 149+ 988D 23               inc hl
 150+ 988E 22 C2 89         ld (Puntero_mov),hl
 151+ 9891
 152+ 9891 7E               ld a,(hl)
 153+ 9892 A7               and a
 154+ 9893 CC 15 99         call z,Incrementa_Puntero_indice_mov
 155+ 9896 CA 57 98         jp z,Reinicia_el_movimiento
 156+ 9899
 157+ 9899 C9               ret
 158+ 989A
 159+ 989A              ; Subrutinas -----------------------------------------
 160+ 989A              ; ---------- --------- --------- ---------- ----------
 161+ 989A              ;
 162+ 989A              ;   24/07/23
 163+ 989A              ;
 164+ 989A              ;   Fijamos_bucle
 165+ 989A              ;
 166+ 989A              ;
 167+ 989A
 168+ 989A              Fijamos_bucle
 169+ 989A
 170+ 989A 3A C6 89         ld a,(Incrementa_puntero)
 171+ 989D 3C               inc a
 172+ 989E 32 C7 89         ld (Incrementa_puntero_backup),a
 173+ 98A1
 174+ 98A1 CD 15 99         call Incrementa_Puntero_indice_mov
 175+ 98A4 2A C0 89         ld hl,(Puntero_indice_mov)
 176+ 98A7 22 C4 89         ld (Puntero_indice_mov_bucle),hl
 177+ 98AA C9               ret
 178+ 98AB
 179+ 98AB              ; ---------- --------- --------- ---------- ----------
 180+ 98AB              ;
 181+ 98AB              ;   07/7/23
 182+ 98AB              ;
 183+ 98AB              ;   Inicia_Repetimos_movimiento
 184+ 98AB              ;
 185+ 98AB              ;
 186+ 98AB
 187+ 98AB              Inicia_Repetimos_movimiento
 188+ 98AB
 189+ 98AB              ; Iniciamos (Repetimos_movimiento).
 190+ 98AB
 191+ 98AB DD 2A C2 89      ld ix,(Puntero_mov)
 192+ 98AF DD 7E 02         ld a,(ix+2)
 193+ 98B2 32 CA 89         ld (Repetimos_movimiento),a
 194+ 98B5
 195+ 98B5 C9               ret
 196+ 98B6
 197+ 98B6              ; ---------- --------- --------- ---------- ----------
 198+ 98B6              ;
 199+ 98B6              ;   26/6/23
 200+ 98B6              ;
 201+ 98B6              ;   Inicia_Puntero_mov
 202+ 98B6              ;
 203+ 98B6              ;
 204+ 98B6
 205+ 98B6 2A C0 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 98B9 CD 70 8B         call Extrae_address
 207+ 98BC 22 C2 89         ld (Puntero_mov),hl
 208+ 98BF C9               ret
 209+ 98C0
 210+ 98C0              ; ---------- --------- --------- ---------- ----------
 211+ 98C0              ;
 212+ 98C0              ;   27/06/23
 213+ 98C0              ;
 214+ 98C0              ;   Aplica_movimiento.
 215+ 98C0
 216+ 98C0              Aplica_desplazamiento
 217+ 98C0
 218+ 98C0              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 98C0
 220+ 98C0 2A C2 89         ld hl, (Puntero_mov)
 221+ 98C3
 222+ 98C3 7E               ld a,(hl)
 223+ 98C4 E6 F0            and $f0
 224+ 98C6 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 98C7
 226+ 98C7 CB 7E            bit 7,(hl)
 227+ 98C9 28 03            jr z,1F
 228+ 98CB CD D5 94         call Mov_up
 229+ 98CE 2A C2 89     1 ld hl, (Puntero_mov)
 230+ 98D1 CB 76            bit 6,(hl)
 231+ 98D3 28 03            jr z,2F
 232+ 98D5 CD 9C 94         call Mov_down
 233+ 98D8
 234+ 98D8              ; Se ha aplicado reinicio ???
 235+ 98D8              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 98D8
 237+ 98D8              ;    ld a,(Ctrl_3)
 238+ 98D8              ;    bit 1,a
 239+ 98D8              ;    ret nz
 240+ 98D8
 241+ 98D8 2A C2 89     2 ld hl, (Puntero_mov)
 242+ 98DB CB 6E            bit 5,(hl)
 243+ 98DD 28 03            jr z,3F
 244+ 98DF CD 3B 96         call Mov_left
 245+ 98E2 2A C2 89     3 ld hl, (Puntero_mov)
 246+ 98E5 CB 66            bit 4,(hl)
 247+ 98E7 C8               ret z
 248+ 98E8 CD 18 95         call Mov_right
 249+ 98EB C9               ret
 250+ 98EC
 251+ 98EC              ; ---------- --------- --------- ---------- ----------
 252+ 98EC              ;
 253+ 98EC              ;   26/06/23
 254+ 98EC              ;
 255+ 98EC              ;   Ajusta_velocidad_desplazamiento.
 256+ 98EC
 257+ 98EC              Ajusta_velocidad_desplazamiento
 258+ 98EC
 259+ 98EC              ; 1er byte de la cadena de movimiento.
 260+ 98EC              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 98EC
 262+ 98EC CD 0A 99         call Extrae_nibble_alto
 263+ 98EF
 264+ 98EF 32 B6 89         ld (Vel_up),a
 265+ 98F2 79               ld a,c
 266+ 98F3 E6 0F            and $0f
 267+ 98F5 32 B7 89         ld (Vel_down),a
 268+ 98F8
 269+ 98F8              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 98F8              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 98F8
 272+ 98F8 23               inc hl
 273+ 98F9 CD 0A 99         call Extrae_nibble_alto
 274+ 98FC
 275+ 98FC 32 B4 89         ld (Vel_left),a
 276+ 98FF 79               ld a,c
 277+ 9900 E6 0F            and $0f
 278+ 9902 32 B5 89         ld (Vel_right),a
 279+ 9905
 280+ 9905              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9905
 282+ 9905 23               inc hl
 283+ 9906 22 C2 89         ld (Puntero_mov),hl
 284+ 9909 C9               ret
 285+ 990A
 286+ 990A 06 04        Extrae_nibble_alto ld b,4
 287+ 990C 7E               ld a,(hl)
 288+ 990D 4F               ld c,a
 289+ 990E E6 F0            and $f0
 290+ 9910 CB 3F        1 srl a
 291+ 9912 10 FC            djnz 1B
 292+ 9914 C9               ret
 293+ 9915
 294+ 9915              ; ---------- --------- --------- ---------- ----------
 295+ 9915              ;
 296+ 9915              ;   5/7/23
 297+ 9915              ;
 298+ 9915              ;   Incrementa_Puntero_indice_mov
 299+ 9915
 300+ 9915              Incrementa_Puntero_indice_mov
 301+ 9915
 302+ 9915 21 C6 89         ld hl,Incrementa_puntero
 303+ 9918 34               inc (hl)
 304+ 9919
 305+ 9919 2A C0 89         ld hl,(Puntero_indice_mov)
 306+ 991C 01 02 00         ld bc,2
 307+ 991F A7               and a
 308+ 9920 09               add hl,bc
 309+ 9921 22 C0 89         ld (Puntero_indice_mov),hl
 310+ 9924
 311+ 9924 7E               ld a,(hl)
 312+ 9925 A7               and a
 313+ 9926
 314+ 9926              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9926
 316+ 9926              ;    jr z,$
 317+ 9926
 318+ 9926              ;! Reinicia el Patrón de movimiento.
 319+ 9926
 320+ 9926 CC 2B 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 9929
 322+ 9929 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 992A
 324+ 992A C9               ret
 325+ 992B
 326+ 992B              ; ---------- --------- --------- ---------- ----------
 327+ 992B              ;
 328+ 992B              ;   15/01/24
 329+ 992B              ;
 330+ 992B              ;   Inicializa_Puntero_indice_mov
 331+ 992B
 332+ 992B              Inicializa_Puntero_indice_mov_2
 333+ 992B
 334+ 992B              ; Existe etiqueta de bucle principal???
 335+ 992B
 336+ 992B 2A C4 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 992E 24               inc h
 338+ 992F 25               dec h
 339+ 9930 28 05            jr z,2F
 340+ 9932
 341+ 9932 22 C0 89         ld (Puntero_indice_mov),hl
 342+ 9935 18 14            jr 3F
 343+ 9937
 344+ 9937              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9937
 346+ 9937 3A C6 89     2 ld a,(Incrementa_puntero)
 347+ 993A 47               ld b,a
 348+ 993B
 349+ 993B 2A C0 89         ld hl,(Puntero_indice_mov)
 350+ 993E 2B           1 dec hl
 351+ 993F 2B               dec hl
 352+ 9940 10 FC            djnz 1B
 353+ 9942 22 C0 89         ld (Puntero_indice_mov),hl
 354+ 9945
 355+ 9945 AF               xor a
 356+ 9946 32 C6 89         ld (Incrementa_puntero),a
 357+ 9949 18 06            jr 4F
 358+ 994B
 359+ 994B 3A C7 89     3 ld a,(Incrementa_puntero_backup)
 360+ 994E 32 C6 89         ld (Incrementa_puntero),a
 361+ 9951 C9           4 ret
 362+ 9952
 363+ 9952              ; ----------------------------------------------------------------------
 364+ 9952              ;
 365+ 9952              ;   30/01/24
 366+ 9952              ;
 367+ 9952              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9952
 369+ 9952 3A 8A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9955 CD 84 8D         call Calcula_salto_en_BC
 371+ 9958 21 B8 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 995B A7               and a
 373+ 995C ED 4A            adc hl,bc
 374+ 995E C9               ret
 375+ 995F
 376+ 995F              ; ----------------------------------------------------------------------
 377+ 995F              ;
 378+ 995F              ;   30/01/24
 379+ 995F              ;
 380+ 995F              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 995F              ;
 382+ 995F              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 995F
 384+ 995F 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9960 23               inc hl
 386+ 9961 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9962 69               ld l,c
 388+ 9963 60               ld h,b
 389+ 9964 22 AB 89         ld (Contador_de_mov_masticados),hl
 390+ 9967 C9               ret
 391+ 9968
# file closed: Movimiento.asm
1797  9968              ;	include "Disparo.asm"
1798  9968              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9968              ; Relojes y temporizaciones.
   2+ 9968
   3+ 9968              ; ------------------------------------------------------
   4+ 9968              ;
   5+ 9968              ;	16/7/23
   6+ 9968              ;
   7+ 9968              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9968              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9968              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9968              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9968              ;
  12+ 9968              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9968              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9968
  15+ 9968              ; Disparo_entidad db 1
  16+ 9968              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9968              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9968
  19+ 9968              Habilita_disparos
  20+ 9968
  21+ 9968 7E           	ld a,(hl)
  22+ 9969 A7           	and a
  23+ 996A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 996B
  25+ 996B EB           	ex de,hl
  26+ 996C
  27+ 996C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 996D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 996E
  30+ 996E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 996E
  32+ 996E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 996F 7E           	ld a,(hl)
  34+ 9970 23           	inc hl
  35+ 9971 77           	ld (hl),a
  36+ 9972
  37+ 9972 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9973 3E 01        	ld a,1
  39+ 9975 77           	ld (hl),a
  40+ 9976 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1799  9977              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9977              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9977              ;
   3+ 9977              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9977              ;
   5+ 9977              ; *****************************************************************************************************************************************************************************************
   6+ 9977              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9977
   8+ 9977 7C           calcula_tercio ld a,h
   9+ 9978 E6 18        	and $18
  10+ 997A CB 2F        	sra a
  11+ 997C CB 2F        	sra a
  12+ 997E CB 2F        	sra a
  13+ 9980 C9           	ret
  14+ 9981
# file closed: calcula_tercio.asm
1800  9981              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9981              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9981              ;
   3+ 9981              ;
   4+ 9981              ;	CLS.
   5+ 9981              ;
   6+ 9981              ;	Limpia la pantalla y define sus atributos.
   7+ 9981              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9981              ;
   9+ 9981              ;	COLORES: 0 ..... NEGRO
  10+ 9981              ;    		 1 ..... AZUL
  11+ 9981              ; 			 2 ..... ROJO
  12+ 9981              ;			 3 ..... MAGENTA
  13+ 9981              ; 			 4 ..... VERDE
  14+ 9981              ; 			 5 ..... CIAN
  15+ 9981              ;			 6 ..... AMARILLO
  16+ 9981              ; 			 7 ..... BLANCO
  17+ 9981              ;
  18+ 9981              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9981              ;
  20+ 9981              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9981
  22+ 9981
  23+ 9981 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9984 11 01 40     	LD DE,$4001
  25+ 9987 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 998A 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 998C ED B0        	LDIR
  28+ 998E 01 FF 02     	LD BC,767
  29+ 9991 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9992 ED B0        	LDIR
  31+ 9994 C9           	ret
  32+ 9995
# file closed: Cls.asm
1801  9995              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9995              ; ------------------------------------------------------------------------
   2+ 9995              ;
   3+ 9995              ;	30/1/24
   4+ 9995              ;
   5+ 9995              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9995              ;	Fila superior "0", Columna izquierda "0".
   7+ 9995              ;
   8+ 9995              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9995              ;
  10+ 9995              ;	Modifica: A,BC y DE.
  11+ 9995
  12+ 9995 7D           Genera_coordenadas ld a,l
  13+ 9996 E6 1F        	and $1f
  14+ 9998 32 91 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 999B
  16+ 999B 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 999C FE 40        	cp $40
  18+ 999E 38 1C        	jr c,4F
  19+ 99A0
  20+ 99A0 CD 77 99     	call calcula_tercio
  21+ 99A3 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 99A4
  23+ 99A4 1E 00        	ld e,0
  24+ 99A6 7D           	ld a,l
  25+ 99A7 E6 E0        	and $e0
  26+ 99A9 28 01        	jr z,1F
  27+ 99AB 04           	inc b
  28+ 99AC
  29+ 99AC 04           1 inc b
  30+ 99AD 05           	dec b
  31+ 99AE 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 99B0              ;														; _ , salimos.
  33+ 99B0 1C           3 inc e
  34+ 99B1 D6 20        	sub 32
  35+ 99B3 20 FB        	jr nz,3B
  36+ 99B5 10 F5        	djnz 1B
  37+ 99B7
  38+ 99B7 7B           2 ld a,e
  39+ 99B8 32 92 89     	ld (Coordenada_y),a
  40+ 99BB C9           	ret
  41+ 99BC
  42+ 99BC AF           4 xor a
  43+ 99BD 32 92 89     	ld (Coordenada_y),a
  44+ 99C0 C9           	ret
  45+ 99C1
  46+ 99C1              ; ------------------------------------------------------------------------
  47+ 99C1              ;	28/05/23
  48+ 99C1              ;
  49+ 99C1              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 99C1              ;	Fila superior "0", Columna izquierda "0".
  51+ 99C1              ;
  52+ 99C1              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 99C1              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 99C1              ;
  55+ 99C1              ;		DE="$120d"
  56+ 99C1              ;
  57+ 99C1              ;		D, (Coordenada_X), Columnas, $12
  58+ 99C1              ;		E, (Coordenada_y), Filas, $0d
  59+ 99C1              ;
  60+ 99C1              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 99C1
  62+ 99C1              ;	Modifica: A,BC y DE.
  63+ 99C1
  64+ 99C1
  65+ 99C1              Genera_coordenadas_disparo
  66+ 99C1
  67+ 99C1              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 99C1
  69+ 99C1 7D           	ld a,l
  70+ 99C2 E6 1F        	and $1f
  71+ 99C4 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 99C5 CD 77 99     	call calcula_tercio
  73+ 99C8 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 99C9 1E 00        	ld e,0
  75+ 99CB 7D           	ld a,l
  76+ 99CC E6 E0        	and $e0
  77+ 99CE 28 01        	jr z,1F
  78+ 99D0 04           	inc b
  79+ 99D1 1C           1 inc e
  80+ 99D2 D6 20        	sub 32
  81+ 99D4 20 FB        	jr nz,1B
  82+ 99D6 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 99D8 C9           	ret
  84+ 99D9
# file closed: Genera_coordenadas.asm
1802  99D9              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 99D9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 99D9              ;
   3+ 99D9              ;	11/03/24
   4+ 99D9              ;
   5+ 99D9              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 99D9              ;   DE contiene Puntero_objeto.
   7+ 99D9              ;   IX contiene el Puntero de impresión.
   8+ 99D9
   9+ 99D9              Genera_datos_de_impresion
  10+ 99D9
  11+ 99D9 ED 73 DD 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 99DD 31 A9 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  13+ 99E0 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  14+ 99E2
  15+ 99E2 2A E9 89         ld hl,(Scanlines_album_SP)
  16+ 99E5
  17+ 99E5 3E 05            ld a,5
  18+ 99E7 85               add l
  19+ 99E8 6F               ld l,a
  20+ 99E9
  21+ 99E9 F9               ld sp,hl
  22+ 99EA 22 E9 89         ld (Scanlines_album_SP),hl
  23+ 99ED
  24+ 99ED 21 00 00         ld hl,0
  25+ 99F0
  26+ 99F0 DD E5            push ix
  27+ 99F2 3B               dec sp
  28+ 99F3 ED 7A            adc hl,sp
  29+ 99F5 D5               push de
  30+ 99F6
  31+ 99F6              ; Recuperamos SP.
  32+ 99F6
  33+ 99F6 ED 7B DD 89      ld sp,(Stack)
  34+ 99FA
  35+ 99FA E5               push hl
  36+ 99FB F1               pop af
  37+ 99FC 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  38+ 99FD
  39+ 99FD              ; Tenemos el encabezado listo.
  40+ 99FD              ; Preparamos registros para generar los scanlines.
  41+ 99FD
  42+ 99FD DD E5            push ix
  43+ 99FF E1               pop hl                                          ; 1er scanline en HL.
  44+ 9A00
  45+ 9A00 ED 5B E9 89      ld de,(Scanlines_album_SP)
  46+ 9A04
  47+ 9A04              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  48+ 9A04              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  49+ 9A04
  50+ 9A04 7C               ld a,h
  51+ 9A05 FE 50            cp $50
  52+ 9A07 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  53+ 9A09
  54+ 9A09 20 05            jr nz,2F
  55+ 9A0B
  56+ 9A0B 7D               ld a,l
  57+ 9A0C FE E0            cp $e0
  58+ 9A0E 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  59+ 9A10
  60+ 9A10 7D           2 ld a,l
  61+ 9A11 FE C0            cp $c0
  62+ 9A13 D2 A5 9A         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  63+ 9A16
  64+ 9A16              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  65+ 9A16
  66+ 9A16 CD FE 90         call NextScan
  67+ 9A19 EB               ex de,hl
  68+ 9A1A
  69+ 9A1A 73               ld (hl),e
  70+ 9A1B 2C               inc l
  71+ 9A1C 72               ld (hl),d
  72+ 9A1D 2C               inc l
  73+ 9A1E
  74+ 9A1E EB               ex de,hl
  75+ 9A1F
  76+ 9A1F CD FE 90         call NextScan
  77+ 9A22 EB               ex de,hl
  78+ 9A23
  79+ 9A23 73               ld (hl),e
  80+ 9A24 2C               inc l
  81+ 9A25 72               ld (hl),d
  82+ 9A26 2C               inc l
  83+ 9A27
  84+ 9A27 EB               ex de,hl
  85+ 9A28
  86+ 9A28 CD FE 90         call NextScan
  87+ 9A2B EB               ex de,hl
  88+ 9A2C
  89+ 9A2C 73               ld (hl),e
  90+ 9A2D 2C               inc l
  91+ 9A2E 72               ld (hl),d
  92+ 9A2F 2C               inc l
  93+ 9A30
  94+ 9A30 EB               ex de,hl
  95+ 9A31
  96+ 9A31 CD FE 90         call NextScan
  97+ 9A34 EB               ex de,hl
  98+ 9A35
  99+ 9A35 73               ld (hl),e
 100+ 9A36 2C               inc l
 101+ 9A37 72               ld (hl),d
 102+ 9A38 2C               inc l
 103+ 9A39
 104+ 9A39 EB               ex de,hl
 105+ 9A3A
 106+ 9A3A CD FE 90         call NextScan
 107+ 9A3D EB               ex de,hl
 108+ 9A3E
 109+ 9A3E 73               ld (hl),e
 110+ 9A3F 2C               inc l
 111+ 9A40 72               ld (hl),d
 112+ 9A41 2C               inc l
 113+ 9A42
 114+ 9A42 EB               ex de,hl
 115+ 9A43
 116+ 9A43 CD FE 90         call NextScan
 117+ 9A46 EB               ex de,hl
 118+ 9A47
 119+ 9A47 73               ld (hl),e
 120+ 9A48 2C               inc l
 121+ 9A49 72               ld (hl),d
 122+ 9A4A 2C               inc l
 123+ 9A4B
 124+ 9A4B EB               ex de,hl
 125+ 9A4C
 126+ 9A4C CD FE 90         call NextScan
 127+ 9A4F EB               ex de,hl
 128+ 9A50
 129+ 9A50 73               ld (hl),e
 130+ 9A51 2C               inc l
 131+ 9A52 72               ld (hl),d
 132+ 9A53 2C               inc l
 133+ 9A54
 134+ 9A54 EB               ex de,hl
 135+ 9A55
 136+ 9A55 CD FE 90         call NextScan
 137+ 9A58 EB               ex de,hl
 138+ 9A59
 139+ 9A59 73               ld (hl),e
 140+ 9A5A 2C               inc l
 141+ 9A5B 72               ld (hl),d
 142+ 9A5C 2C               inc l
 143+ 9A5D
 144+ 9A5D EB               ex de,hl
 145+ 9A5E
 146+ 9A5E CD FE 90         call NextScan
 147+ 9A61 EB               ex de,hl
 148+ 9A62
 149+ 9A62 73               ld (hl),e
 150+ 9A63 2C               inc l
 151+ 9A64 72               ld (hl),d
 152+ 9A65 2C               inc l
 153+ 9A66
 154+ 9A66 EB               ex de,hl
 155+ 9A67
 156+ 9A67 CD FE 90         call NextScan
 157+ 9A6A EB               ex de,hl
 158+ 9A6B
 159+ 9A6B 73               ld (hl),e
 160+ 9A6C 2C               inc l
 161+ 9A6D 72               ld (hl),d
 162+ 9A6E 2C               inc l
 163+ 9A6F
 164+ 9A6F EB               ex de,hl
 165+ 9A70
 166+ 9A70 CD FE 90         call NextScan
 167+ 9A73 EB               ex de,hl
 168+ 9A74
 169+ 9A74 73               ld (hl),e
 170+ 9A75 2C               inc l
 171+ 9A76 72               ld (hl),d
 172+ 9A77 2C               inc l
 173+ 9A78
 174+ 9A78 EB               ex de,hl
 175+ 9A79
 176+ 9A79 CD FE 90         call NextScan
 177+ 9A7C EB               ex de,hl
 178+ 9A7D
 179+ 9A7D 73               ld (hl),e
 180+ 9A7E 2C               inc l
 181+ 9A7F 72               ld (hl),d
 182+ 9A80 2C               inc l
 183+ 9A81
 184+ 9A81 EB               ex de,hl
 185+ 9A82
 186+ 9A82 CD FE 90         call NextScan
 187+ 9A85 EB               ex de,hl
 188+ 9A86
 189+ 9A86 73               ld (hl),e
 190+ 9A87 2C               inc l
 191+ 9A88 72               ld (hl),d
 192+ 9A89 2C               inc l
 193+ 9A8A
 194+ 9A8A EB               ex de,hl
 195+ 9A8B
 196+ 9A8B CD FE 90         call NextScan
 197+ 9A8E EB               ex de,hl
 198+ 9A8F
 199+ 9A8F 73               ld (hl),e
 200+ 9A90 2C               inc l
 201+ 9A91 72               ld (hl),d
 202+ 9A92 2C               inc l
 203+ 9A93
 204+ 9A93 EB               ex de,hl
 205+ 9A94
 206+ 9A94 CD FE 90         call NextScan
 207+ 9A97 EB               ex de,hl
 208+ 9A98
 209+ 9A98 73               ld (hl),e
 210+ 9A99 2C               inc l
 211+ 9A9A 72               ld (hl),d
 212+ 9A9B 2C               inc l
 213+ 9A9C
 214+ 9A9C              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 215+ 9A9C
 216+ 9A9C 22 E9 89         ld (Scanlines_album_SP),hl
 217+ 9A9F
 218+ 9A9F              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 219+ 9A9F
 220+ 9A9F 08               ex af,af
 221+ 9AA0
 222+ 9AA0 F5               push af
 223+ 9AA1 E1               pop hl
 224+ 9AA2
 225+ 9AA2 36 10            ld (hl),16
 226+ 9AA4
 227+ 9AA4 C9               ret
 228+ 9AA5
 229+ 9AA5              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 230+ 9AA5
 231+ 9AA5              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 232+ 9AA5
 233+ 9AA5 3E 57            ld a,$57
 234+ 9AA7 94               sub h
 235+ 9AA8 20 04            jr nz,4F
 236+ 9AAA
 237+ 9AAA 0E 01            ld c,1
 238+ 9AAC 18 1B            jr 5F
 239+ 9AAE
 240+ 9AAE 47           4 ld b,a
 241+ 9AAF
 242+ 9AAF 3E DF            ld a,$df
 243+ 9AB1 BD               cp l
 244+ 9AB2 38 04            jr c,1F
 245+ 9AB4
 246+ 9AB4 3E 08            ld a,8
 247+ 9AB6 80               add b
 248+ 9AB7 47               ld b,a
 249+ 9AB8
 250+ 9AB8              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 251+ 9AB8              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 252+ 9AB8
 253+ 9AB8 48           1 ld c,b
 254+ 9AB9 0C               inc c
 255+ 9ABA
 256+ 9ABA CD FE 90     3 call NextScan
 257+ 9ABD EB               ex de,hl
 258+ 9ABE
 259+ 9ABE 73               ld (hl),e
 260+ 9ABF 2C               inc l
 261+ 9AC0 72               ld (hl),d
 262+ 9AC1 2C               inc l
 263+ 9AC2
 264+ 9AC2 EB               ex de,hl
 265+ 9AC3
 266+ 9AC3 10 F5            djnz 3B
 267+ 9AC5
 268+ 9AC5 ED 53 E9 89      ld (Scanlines_album_SP),de
 269+ 9AC9
 270+ 9AC9 08           5 ex af,af
 271+ 9ACA F5               push af
 272+ 9ACB E1               pop hl
 273+ 9ACC
 274+ 9ACC 71               ld (hl),c
 275+ 9ACD
 276+ 9ACD C9               ret
 277+ 9ACE
 278+ 9ACE              ; -----------------------------------------------------------------------------
 279+ 9ACE              ;
 280+ 9ACE              ;   21/11/23
 281+ 9ACE
 282+ 9ACE              Limpia_y_reinicia_Scanlines_album
 283+ 9ACE
 284+ 9ACE              ;   Limpia Scanlines_album.
 285+ 9ACE
 286+ 9ACE 2A E9 89         ld hl,(Scanlines_album_SP)
 287+ 9AD1 7D               ld a,l
 288+ 9AD2 A7               and a
 289+ 9AD3 C8               ret z   ;   Salimos si el álbum está vacío.
 290+ 9AD4
 291+ 9AD4 47               ld b,a
 292+ 9AD5 04               inc b
 293+ 9AD6
 294+ 9AD6 36 00        1 ld (hl),0
 295+ 9AD8 2D               dec l
 296+ 9AD9 10 FB            djnz 1B
 297+ 9ADB
 298+ 9ADB              ;   Reinicializa (Scanlines_album_SP).
 299+ 9ADB
 300+ 9ADB 21 00 80         ld hl,Scanlines_album
 301+ 9ADE 22 E9 89         ld (Scanlines_album_SP),hl
 302+ 9AE1
 303+ 9AE1 C9               ret
 304+ 9AE2
 305+ 9AE2              ; -----------------------------------------------------------------------------
 306+ 9AE2              ;
 307+ 9AE2              ;   11/03/24
 308+ 9AE2
 309+ 9AE2              Pinta_Sprites
 310+ 9AE2
 311+ 9AE2              ;   Preparamos registros ...
 312+ 9AE2
 313+ 9AE2 2A E9 89         ld hl,(Scanlines_album_SP)
 314+ 9AE5 CD 70 8B         call Extrae_address
 315+ 9AE8
 316+ 9AE8 24               inc h
 317+ 9AE9 25               dec h
 318+ 9AEA C8               ret z                               ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
 319+ 9AEB
 320+ 9AEB ED 73 DD 89      ld (Stack),sp
 321+ 9AEF
 322+ 9AEF EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
 323+ 9AF0              ;                                       ; DE se encuentra en los datos del sprite.
 324+ 9AF0 2C               inc l
 325+ 9AF1 2C               inc l
 326+ 9AF2
 327+ 9AF2 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
 328+ 9AF3
 329+ 9AF3 2C               inc l
 330+ 9AF4 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
 331+ 9AF5
 332+ 9AF5              ;   Seleccionamos rutina de impresión:
 333+ 9AF5
 334+ 9AF5 3E 10            ld a,16
 335+ 9AF7 B8               cp b
 336+ 9AF8 C2 F6 9B         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
 337+ 9AFB
 338+ 9AFB              ;   Rutinas:
 339+ 9AFB
 340+ 9AFB              Pinta_rapido    ;   1520 t/states.
 341+ 9AFB
 342+ 9AFB E1               pop hl
 343+ 9AFC
 344+ 9AFC 1A               ld a,(de)
 345+ 9AFD AE               xor (hl)
 346+ 9AFE 77               ld (hl),a
 347+ 9AFF 2C               inc l
 348+ 9B00 1C               inc e
 349+ 9B01 1A               ld a,(de)
 350+ 9B02 AE               xor (hl)
 351+ 9B03 77               ld (hl),a
 352+ 9B04 2C               inc l
 353+ 9B05 1C               inc e
 354+ 9B06 1A               ld a,(de)
 355+ 9B07 AE               xor (hl)
 356+ 9B08 77               ld (hl),a
 357+ 9B09 13               inc de
 358+ 9B0A
 359+ 9B0A E1               pop hl
 360+ 9B0B
 361+ 9B0B 1A               ld a,(de)
 362+ 9B0C AE               xor (hl)
 363+ 9B0D 77               ld (hl),a
 364+ 9B0E 2C               inc l
 365+ 9B0F 1C               inc e
 366+ 9B10 1A               ld a,(de)
 367+ 9B11 AE               xor (hl)
 368+ 9B12 77               ld (hl),a
 369+ 9B13 2C               inc l
 370+ 9B14 1C               inc e
 371+ 9B15 1A               ld a,(de)
 372+ 9B16 AE               xor (hl)
 373+ 9B17 77               ld (hl),a
 374+ 9B18 13               inc de
 375+ 9B19
 376+ 9B19 E1               pop hl
 377+ 9B1A
 378+ 9B1A 1A               ld a,(de)
 379+ 9B1B AE               xor (hl)
 380+ 9B1C 77               ld (hl),a
 381+ 9B1D 2C               inc l
 382+ 9B1E 1C               inc e
 383+ 9B1F 1A               ld a,(de)
 384+ 9B20 AE               xor (hl)
 385+ 9B21 77               ld (hl),a
 386+ 9B22 2C               inc l
 387+ 9B23 1C               inc e
 388+ 9B24 1A               ld a,(de)
 389+ 9B25 AE               xor (hl)
 390+ 9B26 77               ld (hl),a
 391+ 9B27 13               inc de
 392+ 9B28
 393+ 9B28 E1               pop hl
 394+ 9B29
 395+ 9B29 1A               ld a,(de)
 396+ 9B2A AE               xor (hl)
 397+ 9B2B 77               ld (hl),a
 398+ 9B2C 2C               inc l
 399+ 9B2D 1C               inc e
 400+ 9B2E 1A               ld a,(de)
 401+ 9B2F AE               xor (hl)
 402+ 9B30 77               ld (hl),a
 403+ 9B31 2C               inc l
 404+ 9B32 1C               inc e
 405+ 9B33 1A               ld a,(de)
 406+ 9B34 AE               xor (hl)
 407+ 9B35 77               ld (hl),a
 408+ 9B36 13               inc de
 409+ 9B37
 410+ 9B37 E1               pop hl
 411+ 9B38
 412+ 9B38 1A               ld a,(de)
 413+ 9B39 AE               xor (hl)
 414+ 9B3A 77               ld (hl),a
 415+ 9B3B 2C               inc l
 416+ 9B3C 1C               inc e
 417+ 9B3D 1A               ld a,(de)
 418+ 9B3E AE               xor (hl)
 419+ 9B3F 77               ld (hl),a
 420+ 9B40 2C               inc l
 421+ 9B41 1C               inc e
 422+ 9B42 1A               ld a,(de)
 423+ 9B43 AE               xor (hl)
 424+ 9B44 77               ld (hl),a
 425+ 9B45 13               inc de
 426+ 9B46
 427+ 9B46 E1               pop hl
 428+ 9B47
 429+ 9B47 1A               ld a,(de)
 430+ 9B48 AE               xor (hl)
 431+ 9B49 77               ld (hl),a
 432+ 9B4A 2C               inc l
 433+ 9B4B 1C               inc e
 434+ 9B4C 1A               ld a,(de)
 435+ 9B4D AE               xor (hl)
 436+ 9B4E 77               ld (hl),a
 437+ 9B4F 2C               inc l
 438+ 9B50 1C               inc e
 439+ 9B51 1A               ld a,(de)
 440+ 9B52 AE               xor (hl)
 441+ 9B53 77               ld (hl),a
 442+ 9B54 13               inc de
 443+ 9B55
 444+ 9B55 E1               pop hl
 445+ 9B56
 446+ 9B56 1A               ld a,(de)
 447+ 9B57 AE               xor (hl)
 448+ 9B58 77               ld (hl),a
 449+ 9B59 2C               inc l
 450+ 9B5A 1C               inc e
 451+ 9B5B 1A               ld a,(de)
 452+ 9B5C AE               xor (hl)
 453+ 9B5D 77               ld (hl),a
 454+ 9B5E 2C               inc l
 455+ 9B5F 1C               inc e
 456+ 9B60 1A               ld a,(de)
 457+ 9B61 AE               xor (hl)
 458+ 9B62 77               ld (hl),a
 459+ 9B63 13               inc de
 460+ 9B64
 461+ 9B64 E1               pop hl
 462+ 9B65
 463+ 9B65 1A               ld a,(de)
 464+ 9B66 AE               xor (hl)
 465+ 9B67 77               ld (hl),a
 466+ 9B68 2C               inc l
 467+ 9B69 1C               inc e
 468+ 9B6A 1A               ld a,(de)
 469+ 9B6B AE               xor (hl)
 470+ 9B6C 77               ld (hl),a
 471+ 9B6D 2C               inc l
 472+ 9B6E 1C               inc e
 473+ 9B6F 1A               ld a,(de)
 474+ 9B70 AE               xor (hl)
 475+ 9B71 77               ld (hl),a
 476+ 9B72 13               inc de
 477+ 9B73
 478+ 9B73 E1               pop hl
 479+ 9B74
 480+ 9B74 1A               ld a,(de)
 481+ 9B75 AE               xor (hl)
 482+ 9B76 77               ld (hl),a
 483+ 9B77 2C               inc l
 484+ 9B78 1C               inc e
 485+ 9B79 1A               ld a,(de)
 486+ 9B7A AE               xor (hl)
 487+ 9B7B 77               ld (hl),a
 488+ 9B7C 2C               inc l
 489+ 9B7D 1C               inc e
 490+ 9B7E 1A               ld a,(de)
 491+ 9B7F AE               xor (hl)
 492+ 9B80 77               ld (hl),a
 493+ 9B81 13               inc de
 494+ 9B82
 495+ 9B82 E1               pop hl
 496+ 9B83
 497+ 9B83 1A               ld a,(de)
 498+ 9B84 AE               xor (hl)
 499+ 9B85 77               ld (hl),a
 500+ 9B86 2C               inc l
 501+ 9B87 1C               inc e
 502+ 9B88 1A               ld a,(de)
 503+ 9B89 AE               xor (hl)
 504+ 9B8A 77               ld (hl),a
 505+ 9B8B 2C               inc l
 506+ 9B8C 1C               inc e
 507+ 9B8D 1A               ld a,(de)
 508+ 9B8E AE               xor (hl)
 509+ 9B8F 77               ld (hl),a
 510+ 9B90 13               inc de
 511+ 9B91
 512+ 9B91 E1               pop hl
 513+ 9B92
 514+ 9B92 1A               ld a,(de)
 515+ 9B93 AE               xor (hl)
 516+ 9B94 77               ld (hl),a
 517+ 9B95 2C               inc l
 518+ 9B96 1C               inc e
 519+ 9B97 1A               ld a,(de)
 520+ 9B98 AE               xor (hl)
 521+ 9B99 77               ld (hl),a
 522+ 9B9A 2C               inc l
 523+ 9B9B 1C               inc e
 524+ 9B9C 1A               ld a,(de)
 525+ 9B9D AE               xor (hl)
 526+ 9B9E 77               ld (hl),a
 527+ 9B9F 13               inc de
 528+ 9BA0
 529+ 9BA0 E1               pop hl
 530+ 9BA1
 531+ 9BA1 1A               ld a,(de)
 532+ 9BA2 AE               xor (hl)
 533+ 9BA3 77               ld (hl),a
 534+ 9BA4 2C               inc l
 535+ 9BA5 1C               inc e
 536+ 9BA6 1A               ld a,(de)
 537+ 9BA7 AE               xor (hl)
 538+ 9BA8 77               ld (hl),a
 539+ 9BA9 2C               inc l
 540+ 9BAA 1C               inc e
 541+ 9BAB 1A               ld a,(de)
 542+ 9BAC AE               xor (hl)
 543+ 9BAD 77               ld (hl),a
 544+ 9BAE 13               inc de
 545+ 9BAF
 546+ 9BAF E1               pop hl
 547+ 9BB0
 548+ 9BB0 1A               ld a,(de)
 549+ 9BB1 AE               xor (hl)
 550+ 9BB2 77               ld (hl),a
 551+ 9BB3 2C               inc l
 552+ 9BB4 1C               inc e
 553+ 9BB5 1A               ld a,(de)
 554+ 9BB6 AE               xor (hl)
 555+ 9BB7 77               ld (hl),a
 556+ 9BB8 2C               inc l
 557+ 9BB9 1C               inc e
 558+ 9BBA 1A               ld a,(de)
 559+ 9BBB AE               xor (hl)
 560+ 9BBC 77               ld (hl),a
 561+ 9BBD 13               inc de
 562+ 9BBE
 563+ 9BBE E1               pop hl
 564+ 9BBF
 565+ 9BBF 1A               ld a,(de)
 566+ 9BC0 AE               xor (hl)
 567+ 9BC1 77               ld (hl),a
 568+ 9BC2 2C               inc l
 569+ 9BC3 1C               inc e
 570+ 9BC4 1A               ld a,(de)
 571+ 9BC5 AE               xor (hl)
 572+ 9BC6 77               ld (hl),a
 573+ 9BC7 2C               inc l
 574+ 9BC8 1C               inc e
 575+ 9BC9 1A               ld a,(de)
 576+ 9BCA AE               xor (hl)
 577+ 9BCB 77               ld (hl),a
 578+ 9BCC 13               inc de
 579+ 9BCD
 580+ 9BCD E1               pop hl
 581+ 9BCE
 582+ 9BCE 1A               ld a,(de)
 583+ 9BCF AE               xor (hl)
 584+ 9BD0 77               ld (hl),a
 585+ 9BD1 2C               inc l
 586+ 9BD2 1C               inc e
 587+ 9BD3 1A               ld a,(de)
 588+ 9BD4 AE               xor (hl)
 589+ 9BD5 77               ld (hl),a
 590+ 9BD6 2C               inc l
 591+ 9BD7 1C               inc e
 592+ 9BD8 1A               ld a,(de)
 593+ 9BD9 AE               xor (hl)
 594+ 9BDA 77               ld (hl),a
 595+ 9BDB 13               inc de
 596+ 9BDC
 597+ 9BDC E1               pop hl
 598+ 9BDD
 599+ 9BDD 1A               ld a,(de)
 600+ 9BDE AE               xor (hl)
 601+ 9BDF 77               ld (hl),a
 602+ 9BE0 2C               inc l
 603+ 9BE1 1C               inc e
 604+ 9BE2 1A               ld a,(de)
 605+ 9BE3 AE               xor (hl)
 606+ 9BE4 77               ld (hl),a
 607+ 9BE5 2C               inc l
 608+ 9BE6 1C               inc e
 609+ 9BE7 1A               ld a,(de)
 610+ 9BE8 AE               xor (hl)
 611+ 9BE9 77               ld (hl),a
 612+ 9BEA 13               inc de
 613+ 9BEB
 614+ 9BEB ED 73 E9 89  2 ld (Scanlines_album_SP),sp
 615+ 9BEF ED 7B DD 89      ld sp,(Stack)
 616+ 9BF3 C3 E2 9A         jp Pinta_Sprites
 617+ 9BF6
 618+ 9BF6              Pinta_lento
 619+ 9BF6
 620+ 9BF6 E1           1 pop hl
 621+ 9BF7
 622+ 9BF7 1A               ld a,(de)
 623+ 9BF8 AE               xor (hl)
 624+ 9BF9 77               ld (hl),a
 625+ 9BFA 2C               inc l
 626+ 9BFB 1C               inc e
 627+ 9BFC 1A               ld a,(de)
 628+ 9BFD AE               xor (hl)
 629+ 9BFE 77               ld (hl),a
 630+ 9BFF 2C               inc l
 631+ 9C00 1C               inc e
 632+ 9C01 1A               ld a,(de)
 633+ 9C02 AE               xor (hl)
 634+ 9C03 77               ld (hl),a
 635+ 9C04 13               inc de
 636+ 9C05
 637+ 9C05 10 EF            djnz 1B
 638+ 9C07
 639+ 9C07 18 E2            jr 2B
# file closed: Genera_datos_de_impresion.asm
1803  9C09
1804  9C09              	SAVESNA "Pruebas.sna", START
1805  9C09
1806  9C09
1807  9C09
1808  9C09
# file closed: Banco_de_pruebas.asm
