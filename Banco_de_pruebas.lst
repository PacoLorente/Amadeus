# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 0A 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15
  39  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  40  AA15
  41  AA15
  42  AA15              ;	ld a,(Contador_de_frames)
  43  AA15              ;	cp $70	; 	$51 ok.
  44  AA15              ;	jr z,$
  45  AA15              ;	jr nc,$
  46  AA15
  47  AA15 3E 01        	ld a,1
  48  AA17 D3 FE        	out ($fe),a
  49  AA19 CD 85 8D     	call Pinta_entidades
  50  AA1C CD 77 8D     	call Pinta_Amadeus
  51  AA1F 3E 02        	ld a,2
  52  AA21 D3 FE        	out ($fe),a
  53  AA23
  54  AA23 CD A1 8D     	call Guarda_parametros_DRAW
  55  AA26 CD C7 8C     	call Restore_Amadeus
  56  AA29
  57  AA29              ; Si acabamos de imprimir un FRAME completo, (entidades+Amadeus), gestionamos las colisiones entidad-Amadeus.
  58  AA29
  59  AA29              ;	ld a,(Ctrl_3)
  60  AA29              ;	bit 0,a
  61  AA29              ;	jr z,1F
  62  AA29
  63  AA29              ; Posible colisión Entidad-Amadeus ???
  64  AA29
  65  AA29 3A 1A 89     	ld a,(Impacto2)
  66  AA2C CB 57        	bit 2,a
  67  AA2E 28 03        	jr z,1F
  68  AA30
  69  AA30 CD C4 8F     	call Detecta_colision_nave_entidad
  70  AA33
  71  AA33 CD C2 8A     1 call Gestiona_Amadeus
  72  AA36 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  73  AA39 CD D9 8C     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  74  AA3C
  75  AA3C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  76  AA3C
  77  AA3C CD AD 8D     	call Recupera_parametros_DRAW
  78  AA3F CD 95 8D     	call Actualiza_relojes
  79  AA42 3E 00        	ld a,0
  80  AA44 D3 FE        	out ($fe),a
  81  AA46
  82  AA46 21 14 89     	ld hl,Ctrl_3
  83  AA49 CB 86        	res 0,(hl)
  84  AA4B
  85  AA4B FD E1        	pop iy
  86  AA4D DD E1        	pop ix
  87  AA4F F1           	pop af
  88  AA50 C1           	pop bc
  89  AA51 D1           	pop de
  90  AA52 E1           	pop hl
  91  AA53 D9           	exx
  92  AA54 C1           	pop bc
  93  AA55 D1           	pop de
  94  AA56 E1           	pop hl
  95  AA57 08           	ex af,af'
  96  AA58 F1           	pop af
  97  AA59 08           	ex af,af'
  98  AA5A D9           	exx
  99  AA5B
 100  AA5B ED 7B 0A 89  	ld sp,(Stack_3)
 101  AA5F
 102  AA5F FB           	ei
 103  AA60 C9           	ret
 104  AA61
 105  AA61              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 106  AA61
 107  AA61              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA61              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA61              ;
   3+ AA61              ;	17/02/23
   4+ AA61              ;
   5+ AA61              ;	Sprites e índices.
   6+ AA61
   7+ AA61              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 108  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C
  97+ 856C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  98+ 856C
  99+ 856C BF 85        	defw Caja_1
 100+ 856E 00 86        	defw Caja_2
 101+ 8570 41 86        	defw Caja_3
 102+ 8572 82 86        	defw Caja_4
 103+ 8574 C3 86        	defw Caja_5
 104+ 8576 04 87        	defw Caja_6
 105+ 8578 45 87        	defw Caja_7
 106+ 857A
 107+ 857A 00 00        	defw 0
 108+ 857C 00 00        	defw 0
 109+ 857E
 110+ 857E              ; ---------- ---------- ---------- ---------- ----------
 111+ 857E
 112+ 857E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8580 00 00        	defw 0		 									; (Posicion_actual).
 114+ 8582 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 8584 00 00        	db 0,0											; (Coordenada_X) / (Coordenada_Y).
 116+ 8586
 117+ 8586 00           ctrl_desplz_amadeus	db 0							; (CTRL_DESPLZ).
 118+ 8587
 119+ 8587 05           	db %00000101									; (Attr).
 120+ 8588 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 121+ 858A 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 122+ 858C
 123+ 858C 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 124+ 858E 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 125+ 8590
 126+ 8590 DE 50        	defw $50de										; (Posicion_inicio).
 127+ 8592 04           	db 4 											; (Cuad_objeto).
 128+ 8593 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 129+ 8597
 130+ 8597 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 131+ 8598
 132+ 8598 00 00 00...  	ds 6											; Variables_de_borrado
 133+ 859E
 134+ 859E 00 00        	db 0,0											; Variables_de_pintado
 135+ 85A0 00 00        	defw 0											;	" " " " " " "
 136+ 85A2 00 00        	defw 0											;	" " " " " " "
 137+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 85A8
 139+ 85A8 00 00        p.imp.amadeus defw 0 								; Puntero_de_impresion.
 140+ 85AA
 141+ 85AA 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 142+ 85AC
 143+ 85AC 00           	db 0											; (Autoriza_movimiento).
 144+ 85AD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 144+ 85B1 00 00
 145+ 85B3 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 146+ 85B6
 147+ 85B6 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 148+ 85B8 00           	db 0											; (Cola_de_desplazamiento).
 149+ 85B9
 150+ 85B9 00           	db 0 											; (Columnas).
 151+ 85BA 00 00        	defw 0											; (Limite_horizontal).
 152+ 85BC 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 153+ 85BF
 154+ 85BF              ; ---------- ---------- ---------- ---------- ----------
 155+ 85BF
 156+ 85BF 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 157+ 85C1 00 00        	defw 0											; (Posicion_actual).
 158+ 85C3 00 00        	defw 0 											; (Puntero_objeto).
 159+ 85C5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 160+ 85C8
 161+ 85C8 00           	db %00000000 									; (Attr).
 162+ 85C9
 163+ 85C9 00 00        	defw 0											; (Indice_Sprite_der).
 164+ 85CB 00 00        	defw 0											; (Indice_Sprite_izq).
 165+ 85CD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 166+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 167+ 85D1
 168+ 85D1 00 00        	defw 0											; (Posicion_inicio).
 169+ 85D3 00           	db 0											; (Cuad_objeto).
 170+ 85D4
 171+ 85D4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 172+ 85D8
 173+ 85D8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 174+ 85D9
 175+ 85D9 00 00 00...  	ds 6											; Variables_de_borrado
 176+ 85DF
 177+ 85DF 00 00        	db 0,0											; Variables_de_pintado
 178+ 85E1 00 00        	defw 0											;	" " " " " " "
 179+ 85E3 00 00        	defw 0											;	" " " " " " "
 180+ 85E5 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 181+ 85E9
 182+ 85E9 00 00        	defw 0 											; Puntero_de_impresion.
 183+ 85EB
 184+ 85EB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 185+ 85ED
 186+ 85ED 00           	db 0											; (Autoriza_movimiento).
 187+ 85EE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 187+ 85F2 00 00
 188+ 85F4 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 189+ 85F7
 190+ 85F7 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 191+ 85F9 00           	db 0											; (Cola_de_desplazamiento).
 192+ 85FA
 193+ 85FA 00           	db 0 											; (Columnas).
 194+ 85FB 00 00        	defw 0											; (Limite_horizontal).
 195+ 85FD 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 196+ 8600
 197+ 8600              ; ---------- ---------- ---------- ---------- ----------
 198+ 8600
 199+ 8600 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 200+ 8602 00 00        	defw 0											; (Posicion_actual).
 201+ 8604 00 00        	defw 0 											; (Puntero_objeto).
 202+ 8606 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 203+ 8609
 204+ 8609 00           	db %00000000 									; (Attr).
 205+ 860A
 206+ 860A 00 00        	defw 0											; (Indice_Sprite_der).
 207+ 860C 00 00        	defw 0											; (Indice_Sprite_izq).
 208+ 860E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 209+ 8610 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 210+ 8612
 211+ 8612 00 00        	defw 0											; (Posicion_inicio).
 212+ 8614 00           	db 0											; (Cuad_objeto).
 213+ 8615
 214+ 8615 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 215+ 8619
 216+ 8619 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 217+ 861A
 218+ 861A 00 00 00...  	ds 6											; Variables_de_borrado
 219+ 8620
 220+ 8620 00 00        	db 0,0											; Variables_de_pintado
 221+ 8622 00 00        	defw 0											;	" " " " " " "
 222+ 8624 00 00        	defw 0											;	" " " " " " "
 223+ 8626 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 224+ 862A
 225+ 862A 00 00        	defw 0 											; Puntero_de_impresion.
 226+ 862C
 227+ 862C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 228+ 862E
 229+ 862E 00           	db 0											; (Autoriza_movimiento).
 230+ 862F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 230+ 8633 00 00
 231+ 8635 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 232+ 8638
 233+ 8638 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 234+ 863A 00           	db 0											; (Cola_de_desplazamiento).
 235+ 863B
 236+ 863B 00           	db 0 											; (Columnas).
 237+ 863C 00 00        	defw 0											; (Limite_horizontal).
 238+ 863E 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 239+ 8641
 240+ 8641              ; ---------- ---------- ---------- ---------- ----------
 241+ 8641
 242+ 8641 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 243+ 8643 00 00        	defw 0											; (Posicion_actual).
 244+ 8645 00 00        	defw 0 											; (Puntero_objeto).
 245+ 8647 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 246+ 864A
 247+ 864A 00           	db %00000000 									; (Attr).
 248+ 864B
 249+ 864B 00 00        	defw 0											; (Indice_Sprite_der).
 250+ 864D 00 00        	defw 0											; (Indice_Sprite_izq).
 251+ 864F 00 00        	defw 0											; (Puntero_DESPLZ_der).
 252+ 8651 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 253+ 8653
 254+ 8653 00 00        	defw 0											; (Posicion_inicio).
 255+ 8655 00           	db 0											; (Cuad_objeto).
 256+ 8656
 257+ 8656 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 258+ 865A
 259+ 865A 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 260+ 865B
 261+ 865B 00 00 00...  	ds 6											; Variables_de_borrado
 262+ 8661
 263+ 8661 00 00        	db 0,0											; Variables_de_pintado
 264+ 8663 00 00        	defw 0											;	" " " " " " "
 265+ 8665 00 00        	defw 0											;	" " " " " " "
 266+ 8667 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 267+ 866B
 268+ 866B 00 00        	defw 0 											; Puntero_de_impresion.
 269+ 866D
 270+ 866D 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 271+ 866F
 272+ 866F 00           	db 0											; (Autoriza_movimiento).
 273+ 8670 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 273+ 8674 00 00
 274+ 8676 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 275+ 8679
 276+ 8679 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 277+ 867B 00           	db 0											; (Cola_de_desplazamiento).
 278+ 867C
 279+ 867C 00           	db 0 											; (Columnas).
 280+ 867D 00 00        	defw 0											; (Limite_horizontal).
 281+ 867F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 282+ 8682
 283+ 8682              ; ---------- ---------- ---------- ---------- ----------
 284+ 8682
 285+ 8682 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 286+ 8684 00 00        	defw 0											; (Posicion_actual).
 287+ 8686 00 00        	defw 0 											; (Puntero_objeto).
 288+ 8688 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 289+ 868B
 290+ 868B 00           	db %00000000 									; (Attr).
 291+ 868C
 292+ 868C 00 00        	defw 0											; (Indice_Sprite_der).
 293+ 868E 00 00        	defw 0											; (Indice_Sprite_izq).
 294+ 8690 00 00        	defw 0											; (Puntero_DESPLZ_der).
 295+ 8692 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 296+ 8694
 297+ 8694 00 00        	defw 0											; (Posicion_inicio).
 298+ 8696 00           	db 0											; (Cuad_objeto).
 299+ 8697
 300+ 8697 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 301+ 869B
 302+ 869B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 303+ 869C
 304+ 869C 00 00 00...  	ds 6											; Variables_de_borrado
 305+ 86A2
 306+ 86A2 00 00        	db 0,0											; Variables_de_pintado
 307+ 86A4 00 00        	defw 0											;	" " " " " " "
 308+ 86A6 00 00        	defw 0											;	" " " " " " "
 309+ 86A8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 310+ 86AC
 311+ 86AC 00 00        	defw 0 											; Puntero_de_impresion.
 312+ 86AE
 313+ 86AE 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 314+ 86B0
 315+ 86B0 00           	db 0											; (Autoriza_movimiento).
 316+ 86B1 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 316+ 86B5 00 00
 317+ 86B7 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 318+ 86BA
 319+ 86BA 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 320+ 86BC 00           	db 0											; (Cola_de_desplazamiento).
 321+ 86BD
 322+ 86BD 00           	db 0 											; (Columnas).
 323+ 86BE 00 00        	defw 0											; (Limite_horizontal).
 324+ 86C0 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 325+ 86C3
 326+ 86C3              ; ---------- ---------- ---------- ---------- ----------
 327+ 86C3
 328+ 86C3 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 329+ 86C5 00 00        	defw 0											; (Posicion_actual).
 330+ 86C7 00 00        	defw 0 											; (Puntero_objeto).
 331+ 86C9 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 332+ 86CC
 333+ 86CC 00           	db %00000000 									; (Attr).
 334+ 86CD
 335+ 86CD 00 00        	defw 0											; (Indice_Sprite_der).
 336+ 86CF 00 00        	defw 0											; (Indice_Sprite_izq).
 337+ 86D1 00 00        	defw 0											; (Puntero_DESPLZ_der).
 338+ 86D3 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 339+ 86D5
 340+ 86D5 00 00        	defw 0											; (Posicion_inicio).
 341+ 86D7 00           	db 0											; (Cuad_objeto).
 342+ 86D8
 343+ 86D8 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 344+ 86DC
 345+ 86DC 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 346+ 86DD
 347+ 86DD 00 00 00...  	ds 6											; Variables_de_borrado
 348+ 86E3
 349+ 86E3 00 00        	db 0,0											; Variables_de_pintado
 350+ 86E5 00 00        	defw 0											;	" " " " " " "
 351+ 86E7 00 00        	defw 0											;	" " " " " " "
 352+ 86E9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 353+ 86ED
 354+ 86ED 00 00        	defw 0 											; Puntero_de_impresion.
 355+ 86EF
 356+ 86EF 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 357+ 86F1
 358+ 86F1 00           	db 0											; (Autoriza_movimiento).
 359+ 86F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 359+ 86F6 00 00
 360+ 86F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 361+ 86FB
 362+ 86FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 363+ 86FD 00           	db 0											; (Cola_de_desplazamiento).
 364+ 86FE
 365+ 86FE 00           	db 0 											; (Columnas).
 366+ 86FF 00 00        	defw 0											; (Limite_horizontal).
 367+ 8701 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 368+ 8704
 369+ 8704              ; ---------- ---------- ---------- ---------- ----------
 370+ 8704
 371+ 8704 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 372+ 8706 00 00        	defw 0											; (Posicion_actual).
 373+ 8708 00 00        	defw 0 											; (Puntero_objeto).
 374+ 870A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 375+ 870D
 376+ 870D 00           	db %00000000 									; (Attr).
 377+ 870E
 378+ 870E 00 00        	defw 0											; (Indice_Sprite_der).
 379+ 8710 00 00        	defw 0											; (Indice_Sprite_izq).
 380+ 8712 00 00        	defw 0											; (Puntero_DESPLZ_der).
 381+ 8714 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 382+ 8716
 383+ 8716 00 00        	defw 0											; (Posicion_inicio).
 384+ 8718 00           	db 0											; (Cuad_objeto).
 385+ 8719
 386+ 8719 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 387+ 871D
 388+ 871D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 389+ 871E
 390+ 871E 00 00 00...  	ds 6											; Variables_de_borrado
 391+ 8724
 392+ 8724 00 00        	db 0,0											; Variables_de_pintado
 393+ 8726 00 00        	defw 0											;	" " " " " " "
 394+ 8728 00 00        	defw 0											;	" " " " " " "
 395+ 872A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 396+ 872E
 397+ 872E 00 00        	defw 0 											; Puntero_de_impresion.
 398+ 8730
 399+ 8730 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 400+ 8732
 401+ 8732 00           	db 0											; (Autoriza_movimiento).
 402+ 8733 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 402+ 8737 00 00
 403+ 8739 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 404+ 873C
 405+ 873C 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 406+ 873E 00           	db 0											; (Cola_de_desplazamiento).
 407+ 873F
 408+ 873F 00           	db 0 											; (Columnas).
 409+ 8740 00 00        	defw 0											; (Limite_horizontal).
 410+ 8742 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 411+ 8745
 412+ 8745              ; ---------- ---------- ---------- ---------- ----------
 413+ 8745
 414+ 8745 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 415+ 8747 00 00        	defw 0											; (Posicion_actual).
 416+ 8749 00 00        	defw 0 											; (Puntero_objeto).
 417+ 874B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 418+ 874E
 419+ 874E 00           	db %00000000 									; (Attr).
 420+ 874F
 421+ 874F 00 00        	defw 0											; (Indice_Sprite_der).
 422+ 8751 00 00        	defw 0											; (Indice_Sprite_izq).
 423+ 8753 00 00        	defw 0											; (Puntero_DESPLZ_der).
 424+ 8755 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 425+ 8757
 426+ 8757 00 00        	defw 0											; (Posicion_inicio).
 427+ 8759 00           	db 0											; (Cuad_objeto).
 428+ 875A
 429+ 875A 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 430+ 875E
 431+ 875E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 432+ 875F
 433+ 875F 00 00 00...  	ds 6											; Variables_de_borrado
 434+ 8765
 435+ 8765 00 00        	db 0,0											; Variables_de_pintado
 436+ 8767 00 00        	defw 0											;	" " " " " " "
 437+ 8769 00 00        	defw 0											;	" " " " " " "
 438+ 876B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 439+ 876F
 440+ 876F 00 00        	defw 0 											; Puntero_de_impresion.
 441+ 8771
 442+ 8771 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 443+ 8773
 444+ 8773 00           	db 0											; (Autoriza_movimiento).
 445+ 8774 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 445+ 8778 00 00
 446+ 877A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 447+ 877D
 448+ 877D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 449+ 877F 00           	db 0											; (Cola_de_desplazamiento).
 450+ 8780
 451+ 8780 00           	db 0 											; (Columnas).
 452+ 8781 00 00        	defw 0											; (Limite_horizontal).
 453+ 8783 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 454+ 8786
 455+ 8786              ; -------------------------------------------------------------------------------------
 456+ 8786              ;
 457+ 8786              ;	20/05/23
 458+ 8786              ;
 459+ 8786              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 460+ 8786              ;
 461+ 8786              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 462+ 8786              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 463+ 8786              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 464+ 8786              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 465+ 8786
 466+ 8786              Indice_de_entidades
 467+ 8786
 468+ 8786 8A 87        	defw Entidad_1
 469+ 8788 9A 87        	defw Entidad_2
 470+ 878A
 471+ 878A              ;	BADSAT, (Satélite malvado).
 472+ 878A
 473+ 878A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 474+ 878C 04           	db %00000100									; (Attr).
 475+ 878D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 476+ 878F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 477+ 8791 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 478+ 8793 01           	db 1											; (Cuad_objeto).
 479+ 8794 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 480+ 8798 6D 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 481+ 879A
 482+ 879A 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 483+ 879C 02           	db %00000010									; (Attr).
 484+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 485+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 486+ 87A1 40 50        	defw $5040                                      ; (Posicion_inicio).
 487+ 87A3 01           	db 1											; (Cuad_objeto).
 488+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 489+ 87A8 6D 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 490+ 87AA
# file closed: Cajas_y_disparos.asm
 109  87AA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87AA              ; 13/05/23
   2+ 87AA
   3+ 87AA              Indice_de_niveles
   4+ 87AA
   5+ 87AA B8 87        	defw Nivel_1
   6+ 87AC BC 87        	defw Nivel_2
   7+ 87AE C9 87        	defw Nivel_3
   8+ 87B0 D9 87        	defw Nivel_4
   9+ 87B2 EB 87        	defw Nivel_5
  10+ 87B4              ;	...
  11+ 87B4              ;	...
  12+ 87B4              ;	+ Niveles ...
  13+ 87B4
  14+ 87B4 00 00        	defw 0
  15+ 87B6 00 00        	defw 0
  16+ 87B8
  17+ 87B8 03           Nivel_1 db 3	                                ; Nº de entidades.
  18+ 87B9 01 01 01     	db 1,1,1									; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87BC 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87BD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87C1 01 02
  21+ 87C3 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87C7 01 02
  22+ 87C9 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87CA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87CE 01
  24+ 87CF 03 01 01 01  	db 3,1,1,1,1
  24+ 87D3 01
  25+ 87D4 03 01 01 01  	db 3,1,1,1,1
  25+ 87D8 01
  26+ 87D9 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87DA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87DE 01
  28+ 87DF 04 01 01 01  	db 4,1,1,1,1
  28+ 87E3 01
  29+ 87E4 04 01 01 01  	db 4,1,1,1,1
  29+ 87E8 01
  30+ 87E9 02 03        	db 2,3
  31+ 87EB 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87EC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87F0 01
  33+ 87F1 05 01 01 01  	db 5,1,1,1,1
  33+ 87F5 01
  34+ 87F6 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 87FA 01
  35+ 87FB 05 01 01 01  	db 5,1,1,1,1
  35+ 87FF 01
  36+ 8800
  37+ 8800              ;---------------------------------------------------------------------------------------------------------------
  38+ 8800              ;
  39+ 8800              ;   3/9/23
  40+ 8800              ;
  41+ 8800              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8800              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8800              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8800              ;	_en la caja DRAW correspondiente.
  45+ 8800              ;
  46+ 8800              ;	MODIFICA: HL,DE y A.
  47+ 8800              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8800
  49+ 8800              Inicializa_Punteros_de_nivel
  50+ 8800
  51+ 8800 21 AA 87     	ld hl,Indice_de_niveles
  52+ 8803 22 32 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8806 CD 17 8C     	call Extrae_address
  54+ 8809 7E           	ld a,(hl)
  55+ 880A 32 FE 88     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 880D 23           	inc hl
  57+ 880E 22 34 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8811 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8812
  60+ 8812              ;---------------------------------------------------------------------------------------------------------------
  61+ 8812              ;
  62+ 8812              ;   13/5/23
  63+ 8812              ;
  64+ 8812              ;	Destruye A,BC,HL,DE
  65+ 8812
  66+ 8812              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8812              ;	_del juego.
  68+ 8812
  69+ 8812              Prepara_cajas
  70+ 8812
  71+ 8812              ; Preparamos los punteros de las cajas.
  72+ 8812
  73+ 8812 21 6C 85     	ld hl,Indice_de_cajas
  74+ 8815 CD 17 8C     	call Extrae_address
  75+ 8818 CD 55 88     	call Avanza_caja
  76+ 881B
  77+ 881B CD 99 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 881E
  79+ 881E 2A 34 89     	ld hl,(Datos_de_nivel)
  80+ 8821
  81+ 8821              ; HL está en los datos del nivel correspondiente.
  82+ 8821              ; B actuará como contador de cajas.
  83+ 8821
  84+ 8821 C5           1 push bc
  85+ 8822
  86+ 8822 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8823 CD 46 88     	call PreparaBC
  88+ 8826
  89+ 8826 21 86 87     	ld hl,Indice_de_entidades
  90+ 8829 CD 4E 88     	call SBC_HL_con_BC_y_Extrae
  91+ 882C 22 04 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 882F
  93+ 882F CD 5F 88     	call Datos_de_entidad_a_caja
  94+ 8832
  95+ 8832 2A FC 88     	ld hl,(Indice_restore_caja)
  96+ 8835 CD 17 8C     	call Extrae_address
  97+ 8838 CD 55 88     	call Avanza_caja
  98+ 883B
  99+ 883B 2A 34 89     	ld hl,(Datos_de_nivel)
 100+ 883E 23           	inc hl
 101+ 883F 22 34 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8842
 103+ 8842 C1           	pop bc
 104+ 8843 10 DC        	djnz 1B
 105+ 8845 C9           	ret
 106+ 8846
 107+ 8846 CB 27        PreparaBC sla a
 108+ 8848 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 884A 4F           	ld c,a
 110+ 884B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 884D C9           	ret
 112+ 884E
 113+ 884E A7           SBC_HL_con_BC_y_Extrae and a
 114+ 884F ED 4A        	adc hl,bc
 115+ 8851 CD 17 8C     	call Extrae_address
 116+ 8854 C9           	ret
 117+ 8855
 118+ 8855 22 F8 88     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8858 13           	inc de
 120+ 8859 13           	inc de
 121+ 885A EB           	ex de,hl
 122+ 885B 22 FC 88     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 885E C9           	ret
 124+ 885F
 125+ 885F              Datos_de_entidad_a_caja
 126+ 885F
 127+ 885F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 885F
 129+ 885F
 130+ 885F ED 5B F8 88  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8863
 132+ 8863 01 02 00     	ld bc,2
 133+ 8866 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8868
 135+ 8868 01 07 00     	ld bc,7
 136+ 886B CD 93 88     	call Situa_DE
 137+ 886E
 138+ 886E 01 05 00     	ld bc,5
 139+ 8871 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8873
 141+ 8873 01 04 00     	ld bc,4
 142+ 8876 CD 93 88     	call Situa_DE
 143+ 8879
 144+ 8879 01 07 00     	ld bc,7
 145+ 887C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 887E
 147+ 887E 01 14 00     	ld bc,20
 148+ 8881 CD 93 88     	call Situa_DE
 149+ 8884
 150+ 8884 01 02 00     	ld bc,2
 151+ 8887 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8889
 153+ 8889              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8889              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8889
 156+ 8889 01 0F 00     	ld bc,15									; *****
 157+ 888C CD 93 88     	call Situa_DE
 158+ 888F
 159+ 888F 3E 03        	ld a,3
 160+ 8891 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 8892
 162+ 8892 C9           	ret
 163+ 8893
 164+ 8893 EB           Situa_DE ex de,hl
 165+ 8894 A7           	and a
 166+ 8895 ED 4A        	adc hl,bc
 167+ 8897 EB           	ex de,hl
 168+ 8898 C9           	ret
 169+ 8899
 170+ 8899              ;---------------------------------------------------------------------------------------------------------------
 171+ 8899              ;
 172+ 8899              ;	21/5/23
 173+ 8899              ;
 174+ 8899              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 8899              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 8899              ;
 177+ 8899              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 8899              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 8899              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 8899              ;
 181+ 8899              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 8899              ;	MODIFICA: A y B.
 183+ 8899              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 8899
 185+ 8899              Admin_num_entidades
 186+ 8899
 187+ 8899              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 8899
 189+ 8899 3A FE 88     	ld a,(Numero_de_entidades)
 190+ 889C A7           	and a
 191+ 889D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 889D              ;	jr z,$
 193+ 889D              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 889D
 195+ 889D 20 03        	jr nz,3F
 196+ 889F
 197+ 889F              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 889F
 199+ 889F CD 00 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88A2
 201+ 88A2 3A FE 88     3 ld a,(Numero_de_entidades)
 202+ 88A5 FE 0A        	cp 10
 203+ 88A7 38 08        	jr c,1F
 204+ 88A9
 205+ 88A9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88A9              ; Actualizamos variables.
 207+ 88A9
 208+ 88A9 3E 0A        	ld a,10
 209+ 88AB 32 FF 88     	ld (Numero_parcial_de_entidades),a
 210+ 88AE 47           	ld b,a
 211+ 88AF 18 04        	jr 2F
 212+ 88B1
 213+ 88B1              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88B1              ; (Numero_de_entidades)="0".
 215+ 88B1
 216+ 88B1 32 FF 88     1 ld (Numero_parcial_de_entidades),a
 217+ 88B4 47           	ld b,a
 218+ 88B5 C9           2 ret
# file closed: Niveles.asm
 110  88B6
 111  88B6              ; ******************************************************************************************************************************************************************************************
 112  88B6              ; Constantes.
 113  88B6              ; ******************************************************************************************************************************************************************************************
 114  88B6              ;
 115  88B6              ; 10/11/23
 116  88B6
 117  88B6              ;
 118  88B6              ; Constantes generales.
 119  88B6              ;
 120  88B6
 121  88B6              Sprite_vacio equ $f000
 122  88B6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 123  88B6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 124  88B6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 125  88B6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 126  88B6
 127  88B6              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  88B6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  88B6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  88B6              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  88B6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  88B6
 133  88B6              ;														; 55 Bytes.
 134  88B6
 135  88B6              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70c0h) ; 14 bytes.
 136  88B6              Almacen_de_parametros_DRAW equ $70c1 ; ($70c1 - $7123) ; 61 bytes.
 137  88B6
 138  88B6              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  88B6
 140  88B6              ; ******************************************************************************************************************************************************************************************
 141  88B6              ; Variables.
 142  88B6              ; ******************************************************************************************************************************************************************************************
 143  88B6              ;
 144  88B6              ; 10/11//23
 145  88B6              ;
 146  88B6              ; Variables de DRAW. (Motor principal).
 147  88B6              ;
 148  88B6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 149  88B6
 150  88B6 00           Filas db 0												; Filas. [DRAW]
 151  88B7 00           Columns db 0  											; Nº de columnas. [DRAW]
 152  88B8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 153  88BA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 154  88BC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 155  88BD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 156  88BE
 157  88BE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 158  88BE
 159  88BE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 160  88BF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 161  88BF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 162  88BF 00           Attr db 0												; Atributos de la entidad:
 163  88C0
 164  88C0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 165  88C0              ;
 166  88C0              ;	COLORES: 0 ..... NEGRO
 167  88C0              ;    		 1 ..... AZUL
 168  88C0              ; 			 2 ..... ROJO
 169  88C0              ;			 3 ..... MAGENTA
 170  88C0              ; 			 4 ..... VERDE
 171  88C0              ; 			 5 ..... CIAN
 172  88C0              ;			 6 ..... AMARILLO
 173  88C0              ; 			 7 ..... BLANCO
 174  88C0
 175  88C0 00 00        Indice_Sprite_der defw 0
 176  88C2 00 00        Indice_Sprite_izq defw 0
 177  88C4 00 00        Puntero_DESPLZ_der defw 0
 178  88C6 00 00        Puntero_DESPLZ_izq defw 0
 179  88C8
 180  88C8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 181  88CA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 182  88CB
 183  88CB              ; Variables de objeto. (Características).
 184  88CB
 185  88CB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 186  88CC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 187  88CD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 188  88CE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 189  88CF
 190  88CF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 191  88D0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 192  88D0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 193  88D0 00 00 00...  Variables_de_borrado ds 6
 194  88D6
 195  88D6 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 196  88D8 00 00        	defw 0
 197  88DA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 198  88DC 00 00 00 00  	db 0,0,0,0
 199  88E0
 200  88E0 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 201  88E2              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 202  88E2
 203  88E2              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 204  88E2
 205  88E2 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 206  88E3              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 207  88E3              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 208  88E3              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 209  88E3              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 210  88E3              ;
 211  88E3              ; 														DESCRIPCIÖN:
 212  88E3              ;
 213  88E3              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 214  88E3              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 215  88E3              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 216  88E3              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 217  88E3              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 218  88E3              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 219  88E3              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 220  88E3              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 221  88E3              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 222  88E3              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 223  88E3              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 224  88E3              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 225  88E3              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 226  88E3              ;
 227  88E3              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 228  88E3              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 229  88E3              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 230  88E3
 231  88E3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 232  88E3
 233  88E3 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 234  88E5 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 235  88E7 00 00        Puntero_indice_mov_bucle defw 0							;
 236  88E9              ;
 237  88E9              ;
 238  88E9 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 239  88EA              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 240  88EA              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 241  88EA 00           Incrementa_puntero_backup db 0
 242  88EB 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 243  88EC              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 244  88EC 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 245  88ED 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 246  88EE 00           Cola_de_desplazamiento db 0								; Este byte indica:
 247  88EF              ;
 248  88EF              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 249  88EF              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 250  88EF              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 251  88EF              ;
 252  88EF              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 253  88EF              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 254  88EF              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 255  88EF              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 256  88EF              ;
 257  88EF              ;														;	"$ff" ..... Bucle infinito de repetición.
 258  88EF              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 259  88EF              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 260  88EF
 261  88EF
 262  88EF              ; Variables de funcionamiento. [DRAW].
 263  88EF
 264  88EF 00           Columnas db 0
 265  88F0 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 266  88F2              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 267  88F2 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 268  88F3
 269  88F3              ; variables de control general.
 270  88F3
 271  88F3 00           Ctrl_2 db 0
 272  88F4              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 273  88F4              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 274  88F4              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 275  88F4              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 276  88F4              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 277  88F4              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 278  88F4              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 279  88F4              ;
 280  88F4              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 281  88F4              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 282  88F4              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 283  88F4              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 284  88F4              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 285  88F4
 286  88F4 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 287  88F5
 288  88F5              ;! 63; Bytes por entidad.
 289  88F5
 290  88F5              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 291  88F5              ;					         		---------;      ;---------
 292  88F5
 293  88F5
 294  88F5              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 295  88F5
 296  88F5 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 297  88F6
 298  88F6              ;														DESCRIPCIÓN:
 299  88F6              ;
 300  88F6              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 301  88F6              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 302  88F6              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 303  88F6              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 304  88F6              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 305  88F6              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 306  88F6
 307  88F6              ;														BIT 3, Recarga de nueva oleada.
 308  88F6              ;														BIT 4, Recarga de nueva oleada.
 309  88F6              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 310  88F6              ;														BIT 6, **** Frame completo.
 311  88F6              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 312  88F6
 313  88F6 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 314  88F8              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 315  88F8              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 316  88F8              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 317  88F8
 318  88F8              ; Gestión de ENTIDADES y CAJAS.
 319  88F8
 320  88F8 00 00        Puntero_store_caja defw 0
 321  88FA 00 00        Puntero_restore_caja defw 0
 322  88FC 00 00        Indice_restore_caja defw 0
 323  88FE 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 324  88FF 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 325  8900 00           Entidades_en_curso db 0									; ..... ..... .....
 326  8901 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 327  8902              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 328  8902              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 329  8902              ;														; _ (Numero_de_malotes)="0".
 330  8902 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 331  8904 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 332  8906              ;														; _ puntero (Indice_entidades).
 333  8906
 334  8906
 335  8906              ;---------------------------------------------------------------------------------------------------------------
 336  8906              ;
 337  8906              ;	18/11/23
 338  8906              ;
 339  8906              ;	Álbumes.
 340  8906
 341  8906 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 342  8908              ;														; _variable para almacenar lo posición del puntero_
 343  8908              ; 														; _de pila, SP.
 344  8908 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 345  890A              ;														; La utiliza la rutina [Extrae_foto_registros].
 346  890A 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 347  890C 00 70        Stack_snapshot defw Album_de_fotos
 348  890E 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 349  8910
 350  8910              ;End_Snapshot defw Album_de_fotos
 351  8910              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 352  8910 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 353  8912              ;														; _el snapshot de los registros del siguiente disparo.
 354  8912              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 355  8912 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 356  8914
 357  8914 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 358  8915              ;
 359  8915              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 360  8915              ; Gestión de Disparos.
 361  8915
 362  8915 00           Numero_de_disparotes db 0
 363  8916 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 364  8918 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 365  891A 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 366  891B              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 367  891B              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 368  891B 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 369  891D              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 370  891D              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 371  891D              ;														; _produzca colisión.
 372  891D 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 373  891F              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 374  891F 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 375  8922              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 376  8922 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 377  8925              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 378  8925 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 379  8926
 380  8926              ;---------------------------------------------------------------------------------------------------------------
 381  8926
 382  8926              ; Relojes y temporizaciones.
 383  8926
 384  8926 00           Contador_de_frames db 0
 385  8927 00           Contador_de_frames_2 db 0
 386  8928
 387  8928 04           Clock_explosion db 4
 388  8929 1E           Clock_Entidades_en_curso db 30
 389  892A 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 390  892B              ;														; Repite la oleada de entidades.
 391  892B 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 392  892C 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 393  892D 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 394  892E
 395  892E 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 396  892F 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 397  8930 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 398  8931
 399  8931              ;---------------------------------------------------------------------------------------------------------------
 400  8931
 401  8931              ; Gestión de NIVELES.
 402  8931
 403  8931 00           Nivel db 0												; Nivel actual del juego.
 404  8932 00 00        Puntero_indice_NIVELES defw 0
 405  8934 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 406  8936              ; 														; _ que definen el NIVEL.
 407  8936              ; Y todo comienza aquí .....
 408  8936              ;
 409  8936              ; Rutina principal *************************************************************************************************************************************************************************
 410  8936              ;
 411  8936              ;	16/11/22
 412  8936
 413  8936              START
 414  8936
 415  8936 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 416  8939 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 417  893B ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 418  893D ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 419  893F F3           	DI
 420  8940
 421  8940 3E 07        	ld a,%00000111
 422  8942 CD 9A 98     	call Cls
 423  8945
 424  8945 CD F0 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 425  8948
 426  8948              ; INICIALIZACIÓN.
 427  8948
 428  8948 CD 00 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 429  894B CD 12 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 430  894E CD 7F 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 431  8951              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 432  8951 CD A0 8C     	call Restore_entidad
 433  8954
 434  8954 21 FF 88     	ld hl,Numero_parcial_de_entidades
 435  8957 46           	ld b,(hl)
 436  8958 04           	inc b
 437  8959 05           	dec b
 438  895A 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 439  895C
 440  895C              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 441  895C              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 442  895C              ;	Pintamos el resto de entidades:
 443  895C
 444  895C              ;	INICIA ENTIDADES !!!!!
 445  895C
 446  895C C5           1 push bc  												; Guardo el contador de entidades.
 447  895D CD 4F 8B     	call Inicia_entidad
 448  8960 C1           	pop bc
 449  8961 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 450  8963
 451  8963              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 452  8963              ; (Esto se dá cuando se inicia una nueva oleada).
 453  8963
 454  8963 3A F5 88     	ld a,(Ctrl_1)
 455  8966 CB 5F        	bit 3,a
 456  8968 20 1B        	jr nz,5F											; Loop
 457  896A
 458  896A              ; 	INICIA AMADEUS !!!!!
 459  896A
 460  896A CD C7 8C     3 call Restore_Amadeus
 461  896D CD 1D 8C     	call Inicia_Puntero_objeto
 462  8970 CD 8D 92     	call Draw
 463  8973 CD A0 7F     	call Guarda_foto_registros
 464  8976 CD 44 8D     	call Guarda_datos_de_borrado_Amadeus
 465  8979
 466  8979 11 7E 85     	ld de,Amadeus_db
 467  897C CD D9 8C     	call Store_Amadeus
 468  897F
 469  897F              ; 	INICIA DISPAROS !!!!!
 470  897F
 471  897F CD 95 8B     	call Inicia_Puntero_Disparo_Entidades
 472  8982 CD 9C 8B     	call Inicia_Puntero_Disparo_Amadeus
 473  8985
 474  8985              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 475  8985
 476  8985 CD 7F 8B     5 call Inicia_punteros_de_cajas
 477  8988 CD A0 8C     	call Restore_entidad
 478  898B
 479  898B 3A F5 88     	ld a,(Ctrl_1)
 480  898E CB 5F        	bit 3,a
 481  8990 28 07        	jr z,6F
 482  8992
 483  8992              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 484  8992
 485  8992 21 F5 88     	ld hl,Ctrl_1
 486  8995 CB 9E        	res 3,(hl)
 487  8997 18 07        	jr Main
 488  8999
 489  8999              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 490  8999
 491  8999 21 14 89     6 ld hl,Ctrl_3
 492  899C CB C6        	set 0,(hl)											; Frame completo.
 493  899E FB           	ei
 494  899F 76           	halt
 495  89A0
 496  89A0              ; ------------------------------------
 497  89A0
 498  89A0              Main
 499  89A0              ;
 500  89A0              ;	12/11/23
 501  89A0
 502  89A0              ; Aparece nueva entidad ???
 503  89A0
 504  89A0              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 505  89A0              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 506  89A0              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 507  89A0              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 508  89A0              ;														; _un 2º bloque.
 509  89A0
 510  89A0 3A 29 89     	ld a,(Clock_Entidades_en_curso)
 511  89A3 47           	ld b,a
 512  89A4 3A 26 89     	ld a,(Contador_de_frames)
 513  89A7 B8           	cp b
 514  89A8 28 07        	jr z,21F
 515  89AA
 516  89AA              ; Es probable que en el ciclo anterior NO HAYAMOS EJECUTADO [FRAME], (por tener desactivadas las interrupciones en ese momento, rutinas: _
 517  89AA              ; _ [Guarda_foto_registros] y [Repone_datos_de_borrado].
 518  89AA              ; En ese caso, corregiremos el "NO CONTEO" de (Contador_de_frames) incrementándolo en "1" y volviendo a comparar con (Clock_Entidades_en_curso).
 519  89AA              ; Si la comparativa resulta positiva, actualizaremos (Contador_de_frames), evitando así la pérdida de sincronismo.
 520  89AA
 521  89AA 3C           	inc a
 522  89AB B8           	cp b
 523  89AC 20 1B        	jr nz,13F
 524  89AE
 525  89AE 32 26 89     	ld (Contador_de_frames),a
 526  89B1
 527  89B1              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 528  89B1              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 529  89B1
 530  89B1 3A FF 88     21 ld a,(Numero_parcial_de_entidades)
 531  89B4 47           	ld b,a
 532  89B5 3A 00 89     	ld a,(Entidades_en_curso)
 533  89B8 B8           	cp b
 534  89B9 28 0E        	jr z,13F
 535  89BB 30 0C        	jr nc,13F
 536  89BD
 537  89BD              ; --- --- --- --- ---
 538  89BD
 539  89BD 3C           	inc a
 540  89BE 32 00 89     	ld (Entidades_en_curso),a
 541  89C1
 542  89C1              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 543  89C1
 544  89C1 3A 29 89     	ld a,(Clock_Entidades_en_curso)
 545  89C4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 546  89C4              ;! _ IMPREDECIBLE !!!!
 547  89C4 C6 32        	add 50
 548  89C6 32 29 89     	ld (Clock_Entidades_en_curso),a
 549  89C9
 550  89C9              ; -------------------------------------------------------------------------------------------------------------
 551  89C9
 552  89C9              ; Habilita disparos.
 553  89C9
 554  89C9 21 2B 89     13 ld hl,Disparo_Amadeus
 555  89CC 11 2D 89     	ld de,CLOCK_repone_disparo_Amadeus
 556  89CF CD 5E 9C     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 557  89D2
 558  89D2 21 2E 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 559  89D5 11 30 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 560  89D8 CD 5E 9C     	call Habilita_disparos
 561  89DB
 562  89DB              ; COLISIONES.
 563  89DB
 564  89DB CD 8D 91     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 565  89DE
 566  89DE              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 567  89DE              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 568  89DE              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 569  89DE
 570  89DE AF           	xor a
 571  89DF 32 1A 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 572  89E2
 573  89E2 CD 7F 8B     	call Inicia_punteros_de_cajas
 574  89E5 CD A0 8C     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 575  89E8              ; 														; _ en DRAW.
 576  89E8 3A B6 88     	ld a,(Filas)
 577  89EB A7           	and a
 578  89EC 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 579  89EE CD B2 8C     	call Incrementa_punteros_de_cajas
 580  89F1 18 F2        	jr 12B
 581  89F3
 582  89F3              ; ---------------------------------------------------------------------------------------
 583  89F3
 584  89F3 3A FF 88     10 ld a,(Numero_parcial_de_entidades)
 585  89F6 47               ld b,a
 586  89F7 A7           	and a
 587  89F8 20 14        	jr nz,11F
 588  89FA
 589  89FA 21 F5 88     	ld hl,Ctrl_1
 590  89FD CB 66        	bit 4,(hl)
 591  89FF C2 8D 8A     	jp nz,16F
 592  8A02
 593  8A02              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 594  8A02
 595  8A02 21 F5 88     	ld hl,Ctrl_1
 596  8A05 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 597  8A07
 598  8A07 3A 26 89     	ld a,(Contador_de_frames)
 599  8A0A 3C           	inc a
 600  8A0B 32 2A 89     	ld (Activa_recarga_cajas),a
 601  8A0E
 602  8A0E              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 603  8A0E
 604  8A0E 3A 00 89     11 ld a,(Entidades_en_curso)
 605  8A11 A7           	and a
 606  8A12 CA 8D 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 607  8A15 47           	ld b,a												; No hay entidades que gestionar.
 608  8A16
 609  8A16              ; Código que ejecutamos con cada entidad:
 610  8A16              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 611  8A16
 612  8A16 C5           15 push bc 												; Nº de entidades en curso.
 613  8A17
 614  8A17              ; Impacto ???
 615  8A17
 616  8A17 3A CF 88     22 ld a,(Impacto)
 617  8A1A A7           	and a
 618  8A1B 28 31        	jr z,8F
 619  8A1D
 620  8A1D              ; Hay Impacto en esta entidad.
 621  8A1D
 622  8A1D 21 28 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 623  8A20 35           	dec (hl)
 624  8A21 C2 82 8A     	jp nz,17F
 625  8A24
 626  8A24              ;! Velocidad de la animación de la explosión.
 627  8A24
 628  8A24 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 629  8A26              ;														; _,(velocidad de la explosión).
 630  8A26
 631  8A26              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 632  8A26
 633  8A26 CD 64 8D     	call Repone_datos_de_borrado
 634  8A29 CD BD 8B     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 635  8A2C
 636  8A2C              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 637  8A2C
 638  8A2C 3A F3 88     	ld a,(Ctrl_2)
 639  8A2F CB 4F        	bit 1,a
 640  8A31 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 641  8A33
 642  8A33              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 643  8A33
 644  8A33 3A BE 88     	ld a,(CTRL_DESPLZ)
 645  8A36 A7           	and a
 646  8A37 20 08        	jr nz,18F
 647  8A39
 648  8A39 21 84 84     	ld hl,Indice_Explosion_2x2-2
 649  8A3C 22 C4 88     	ld (Puntero_DESPLZ_der),hl
 650  8A3F 18 06        	jr 19F
 651  8A41
 652  8A41 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 653  8A44 22 C4 88     	ld (Puntero_DESPLZ_der),hl
 654  8A47
 655  8A47 21 F3 88     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 656  8A4A CB CE        	set 1,(hl)
 657  8A4C 18 22        	jr 7F
 658  8A4E
 659  8A4E              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 660  8A4E              ; _con las coordenadas de la entidad almacenada en DRAW.
 661  8A4E
 662  8A4E 3A F5 88     8 ld a,(Ctrl_1)
 663  8A51 CB 57        	bit 2,a
 664  8A53 28 1B        	jr z,7F
 665  8A55
 666  8A55 2A 1D 89     	ld hl,(Coordenadas_disparo_certero)
 667  8A58 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 668  8A59              ;														; E contiene la coordenada_X del disparo.
 669  8A59 2A BC 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 670  8A5C              ;														; H FILA, (Coordenada_y de la entidad).
 671  8A5C A7           	and a
 672  8A5D ED 52        	sbc hl,de
 673  8A5F
 674  8A5F CD A6 91     	call Determina_resultado_comparativa
 675  8A62
 676  8A62 78           	ld a,b
 677  8A63 A7           	and a
 678  8A64 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 679  8A66
 680  8A66              ; ----- ----- -----
 681  8A66
 682  8A66 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 683  8A68 32 CF 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 684  8A6B
 685  8A6B 21 F5 88     	ld hl,Ctrl_1
 686  8A6E CB 96        	res 2,(hl)
 687  8A70
 688  8A70 CD E4 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 689  8A73
 690  8A73 3A E2 88     	ld a,(Ctrl_0)
 691  8A76 CB 67        	bit 4,a
 692  8A78 28 08        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 693  8A7A
 694  8A7A              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 695  8A7A              ; [[[
 696  8A7A              ;	call Detecta_disparo_entidad
 697  8A7A              ; ]]]
 698  8A7A CD 60 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 699  8A7D
 700  8A7D 21 E2 88     	ld hl,Ctrl_0
 701  8A80 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 702  8A82
 703  8A82 CD 65 8C     17 call Store_Restore_cajas
 704  8A85
 705  8A85 C1           	pop bc
 706  8A86 10 8E        	djnz 15B
 707  8A88
 708  8A88              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 709  8A88              ; Hemos gestionado todas las unidades.
 710  8A88              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 711  8A88
 712  8A88 21 F5 88     	ld hl,Ctrl_1
 713  8A8B CB 96        	res 2,(hl)
 714  8A8D
 715  8A8D 21 14 89     16 ld hl,Ctrl_3
 716  8A90 CB C6        	set 0,(hl)											; Frame completo.
 717  8A92 AF           	xor a
 718  8A93 D3 FE        	out ($fe),a
 719  8A95 FB           	ei
 720  8A96 76           	halt
 721  8A97
 722  8A97              ; ----------------------------------------
 723  8A97
 724  8A97 3A F5 88     	ld a,(Ctrl_1) 										; Existe Loop?
 725  8A9A CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 726  8A9C CA A0 89     	jp z,Main
 727  8A9F
 728  8A9F              ; RECARGA DE NUEVA OLEADA.
 729  8A9F
 730  8A9F 3A 26 89     	ld a,(Contador_de_frames)
 731  8AA2 47           	ld b,a
 732  8AA3 3A 2A 89     	ld a,(Activa_recarga_cajas)
 733  8AA6 B8           	cp b
 734  8AA7 28 08        	jr z,20F
 735  8AA9
 736  8AA9 21 F5 88     	ld hl,Ctrl_1
 737  8AAC CB E6        	set 4,(hl)
 738  8AAE C3 A0 89     	jp Main
 739  8AB1
 740  8AB1 21 F5 88     20 ld hl,Ctrl_1
 741  8AB4 CB A6        	res 4,(hl)
 742  8AB6
 743  8AB6 3A 26 89     	ld a,(Contador_de_frames)
 744  8AB9
 745  8AB9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 746  8AB9              ;! _ IMPREDECIBLE !!!!
 747  8AB9
 748  8AB9 C6 0A        	add 10
 749  8ABB 32 29 89     	ld (Clock_Entidades_en_curso),a
 750  8ABE
 751  8ABE C3 4B 89     	jp 4B
 752  8AC1
 753  8AC1 C9           	ret
 754  8AC2
 755  8AC2              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 756  8AC2              ;
 757  8AC2              ;	16/11/23
 758  8AC2
 759  8AC2              Gestiona_Amadeus
 760  8AC2
 761  8AC2              ;! Activa/desactiva impacto con Amadeus.
 762  8AC2
 763  8AC2 3A CF 88     	ld a,(Impacto)
 764  8AC5 A7           	and a
 765  8AC6 20 FE        	jr nz,$
 766  8AC8
 767  8AC8 CD 3C 8B     	call Mov_Amadeus
 768  8ACB
 769  8ACB 3A E2 88     	ld a,(Ctrl_0)
 770  8ACE CB 67        	bit 4,a
 771  8AD0 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 772  8AD2
 773  8AD2 CD 60 8B     	call Guarda_foto_entidad_a_pintar
 774  8AD5 CD 44 8D     	call Guarda_datos_de_borrado_Amadeus
 775  8AD8
 776  8AD8 21 E2 88     14 ld hl,Ctrl_0
 777  8ADB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 778  8ADD
 779  8ADD CD 31 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 780  8AE0
 781  8AE0              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 782  8AE0
 783  8AE0 CD FF 8B     	call Calcula_numero_de_disparotes
 784  8AE3
 785  8AE3 C9           	ret
 786  8AE4
 787  8AE4              ; --------------------------------------------------------------------------------------------------------------
 788  8AE4              ;
 789  8AE4              ;	27/05/23
 790  8AE4
 791  8AE4              Mov_obj
 792  8AE4
 793  8AE4 3A F3 88     	ld a,(Ctrl_2)
 794  8AE7 CB 4F        	bit 1,a
 795  8AE9 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 796  8AEB
 797  8AEB              ; Explosión:
 798  8AEB
 799  8AEB 3A F4 88     	ld a,(Frames_explosion)
 800  8AEE A7           	and a
 801  8AEF 20 11        	jr nz,4F
 802  8AF1
 803  8AF1              ; Una alimaña menos!!!!!!!!!1
 804  8AF1
 805  8AF1 CD E2 8C     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 806  8AF4 21 FF 88     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 807  8AF7 35           	dec (hl)
 808  8AF8 21 00 89     	ld hl,Entidades_en_curso
 809  8AFB 35           	dec (hl)
 810  8AFC 21 FE 88     	ld hl,Numero_de_entidades
 811  8AFF 35           	dec (hl)
 812  8B00 18 39        	jr 3F
 813  8B02
 814  8B02              ; -----
 815  8B02
 816  8B02              ;	`Movemos´ la explosión.
 817  8B02
 818  8B02 2A C4 88     4 ld hl,(Puntero_DESPLZ_der)
 819  8B05 23           	inc hl
 820  8B06 23           	inc hl
 821  8B07 22 C4 88     	ld (Puntero_DESPLZ_der),hl
 822  8B0A CD 17 8C     	call Extrae_address
 823  8B0D 22 BA 88     	ld (Puntero_objeto),hl
 824  8B10
 825  8B10 21 F4 88     	ld hl,Frames_explosion
 826  8B13 35           	dec (hl)
 827  8B14 18 25        	jr 3F
 828  8B16
 829  8B16 AF           2 xor a
 830  8B17 32 E2 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 831  8B1A
 832  8B1A              ; Movemos Entidades malignas.
 833  8B1A
 834  8B1A CD 09 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 835  8B1D
 836  8B1D 3A E2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 837  8B20 CB 67        	bit 4,a
 838  8B22 C8           	ret z
 839  8B23
 840  8B23              ; Ha habido desplazamiento de la entidad maligna.
 841  8B23              ; Ha llegado a zona de AMADEUS ???
 842  8B23
 843  8B23 3A BD 88     	ld a,(Coordenada_y)
 844  8B26 FE 14        	cp $14
 845  8B28 38 08        	jr c,1F
 846  8B2A
 847  8B2A              ; ---------
 848  8B2A
 849  8B2A              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 850  8B2A              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 851  8B2A
 852  8B2A F3           	di
 853  8B2B CD 56 8F     	call Genera_coordenadas_X
 854  8B2E CD 92 8F     	call Compara_coordenadas_X
 855  8B31 FB           	ei
 856  8B32
 857  8B32              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 858  8B32
 859  8B32              ; ---------
 860  8B32
 861  8B32 CD 67 8B     1 call Prepara_var_pintado	 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 862  8B35 CD 64 8D     	call Repone_datos_de_borrado
 863  8B38 CD BD 8B     	call Limpia_Variables_de_borrado
 864  8B3B
 865  8B3B C9           3 ret													; _de la misma.
 866  8B3C
 867  8B3C              ; --------------------------------------------------------------------------------------------------------------
 868  8B3C              ;
 869  8B3C              ;	29/1/23
 870  8B3C
 871  8B3C              Mov_Amadeus
 872  8B3C
 873  8B3C CD 04 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 874  8B3F
 875  8B3F 3A E2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 876  8B42 CB 67        	bit 4,a
 877  8B44 C8           	ret z
 878  8B45
 879  8B45              ; ---------
 880  8B45
 881  8B45 CD 67 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 882  8B48 CD 54 8D     	call Repone_datos_de_borrado_Amadeus
 883  8B4B CD BD 8B     	call Limpia_Variables_de_borrado
 884  8B4E
 885  8B4E C9           	ret
 886  8B4F
 887  8B4F              ; -----------------------------------------------------------------------------------
 888  8B4F              ;
 889  8B4F              ;	16/11/23
 890  8B4F
 891  8B4F CD 1D 8C     Inicia_entidad	call Inicia_Puntero_objeto
 892  8B52 CD AE 98     	call Recompone_posicion_inicio
 893  8B55 CD 8D 92     	call Draw
 894  8B58 CD A0 7F     	call Guarda_foto_registros
 895  8B5B F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 896  8B5C              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 897  8B5C CD 65 8C     1 call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 898  8B5F C9           	ret
 899  8B60
 900  8B60              ; --------------------------------------------------------------------------------------------------------------
 901  8B60              ;
 902  8B60              ;	31/08/23
 903  8B60              ;
 904  8B60              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 905  8B60              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 906  8B60
 907  8B60              Guarda_foto_entidad_a_pintar
 908  8B60
 909  8B60              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 910  8B60
 911  8B60 CD 8D 92     	call Draw
 912  8B63 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 913  8B66 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 914  8B67
 915  8B67              ; --------------------------------------------------------------------------------------------------------------
 916  8B67              ;
 917  8B67              ;	19/9/23
 918  8B67
 919  8B67 21 B6 88     Prepara_var_pintado ld hl,Filas
 920  8B6A 11 D6 88     	ld de,Variables_de_pintado
 921  8B6D 01 08 00     	ld bc,8
 922  8B70 ED B0        	ldir
 923  8B72 C9           	ret
 924  8B73
 925  8B73              ; --------------------------------------------------------------------------------------------------------------
 926  8B73
 927  8B73 21 D6 88     Repone_pintar ld hl,Variables_de_pintado
 928  8B76 11 B6 88     	ld de,Filas
 929  8B79 01 08 00     	ld bc,8
 930  8B7C ED B0        	ldir
 931  8B7E C9           	ret
 932  8B7F
 933  8B7F              ; *************************************************************************************************************************************************************
 934  8B7F              ;
 935  8B7F              ; 8/1/23
 936  8B7F              ;
 937  8B7F              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 938  8B7F              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 939  8B7F              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 940  8B7F
 941  8B7F              ; Destruye HL y DE !!!!!
 942  8B7F
 943  8B7F              Inicia_punteros_de_cajas
 944  8B7F
 945  8B7F 21 6C 85     	ld hl,Indice_de_cajas
 946  8B82 CD 17 8C         call Extrae_address
 947  8B85 22 F8 88         ld (Puntero_store_caja),hl
 948  8B88 21 6E 85     	ld hl,Indice_de_cajas+2
 949  8B8B 22 FC 88     	ld (Indice_restore_caja),hl
 950  8B8E CD 17 8C     	call Extrae_address
 951  8B91 22 FA 88     	ld (Puntero_restore_caja),hl
 952  8B94 C9               ret
 953  8B95
 954  8B95              ; *************************************************************************************************************************************************************
 955  8B95              ;
 956  8B95              ; 8/1/23
 957  8B95              ;
 958  8B95              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 959  8B95
 960  8B95 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 961  8B98 22 16 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 962  8B9B C9           	ret
 963  8B9C 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 964  8B9F 22 18 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 965  8BA2 C9           	ret
 966  8BA3
 967  8BA3              ; -------------------------------------------------------------------------------------------------------------
 968  8BA3              ;
 969  8BA3              ; 21/9/23
 970  8BA3              ;
 971  8BA3
 972  8BA3              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
 973  8BA3
 974  8BA3              Limpia_album_Amadeus
 975  8BA3
 976  8BA3 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 977  8BA6 7E           	ld a,(hl)
 978  8BA7 A7           	and a
 979  8BA8 C8           	ret z
 980  8BA9
 981  8BA9 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 982  8BAC 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
 983  8BAF 01 0B 00     	ld bc,11
 984  8BB2 AF           	xor a
 985  8BB3 77           	ld (hl),a
 986  8BB4 ED B0        	ldir
 987  8BB6
 988  8BB6 21 AC 70     	ld hl,Album_de_fotos_Amadeus
 989  8BB9 22 12 89     	ld (End_Snapshot_Amadeus),hl
 990  8BBC
 991  8BBC C9           	ret
 992  8BBD
 993  8BBD 21 D0 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
 994  8BC0 11 D1 88     	ld de,Variables_de_borrado+1
 995  8BC3 01 05 00     	ld bc,5
 996  8BC6 AF           	xor a
 997  8BC7 77           	ld (hl),a
 998  8BC8 ED B0        	ldir
 999  8BCA C9           	ret
1000  8BCB
1001  8BCB              ; -------------------------------------------------------------------------------------------------------------
1002  8BCB              ;
1003  8BCB              ; 8/9/23
1004  8BCB              ;
1005  8BCB
1006  8BCB              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1007  8BCB              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1008  8BCB
1009  8BCB              Calcula_numero_de_malotes
1010  8BCB
1011  8BCB 21 00 70     	ld hl,Album_de_fotos
1012  8BCE EB           	ex de,hl
1013  8BCF 2A 0C 89     	ld hl,(Stack_snapshot)
1014  8BD2
1015  8BD2 06 00        	ld b,0
1016  8BD4 7D           	ld a,l
1017  8BD5 93           	sub e
1018  8BD6 28 07        	jr z,1F
1019  8BD8
1020  8BD8              ; Nº de malotes no es "0".
1021  8BD8
1022  8BD8 D6 06        2 sub 6
1023  8BDA 04           	inc b
1024  8BDB A7           	and a
1025  8BDC 20 FA        	jr nz,2B
1026  8BDE 78           	ld a,b
1027  8BDF
1028  8BDF 32 01 89     1 ld (Numero_de_malotes),a
1029  8BE2 C9           	ret
1030  8BE3
1031  8BE3              ; -------------------------------------------------------------------------------------------------------------
1032  8BE3              ;
1033  8BE3              ; 8/9/23
1034  8BE3              ;
1035  8BE3
1036  8BE3              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1037  8BE3              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1038  8BE3
1039  8BE3              Calcula_malotes_Amadeus
1040  8BE3
1041  8BE3 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1042  8BE6 EB           	ex de,hl
1043  8BE7 2A 12 89     	ld hl,(End_Snapshot_Amadeus)
1044  8BEA
1045  8BEA 7C           	ld a,h
1046  8BEB A7           	and a
1047  8BEC 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1048  8BEE
1049  8BEE 06 00        	ld b,0
1050  8BF0 7D           	ld a,l
1051  8BF1 93           	sub e
1052  8BF2 28 07        	jr z,1F
1053  8BF4
1054  8BF4              ; Nº de malotes no es "0".
1055  8BF4
1056  8BF4 D6 06        2 sub 6
1057  8BF6 04           	inc b
1058  8BF7 A7           	and a
1059  8BF8 20 FA        	jr nz,2B
1060  8BFA 78           	ld a,b
1061  8BFB
1062  8BFB 32 01 89     1 ld (Numero_de_malotes),a
1063  8BFE C9           	ret
1064  8BFF
1065  8BFF              ; -------------------------------------------------------------------------------------------------------------
1066  8BFF              ;
1067  8BFF              ; 28/2/23
1068  8BFF              ;
1069  8BFF
1070  8BFF              Calcula_numero_de_disparotes
1071  8BFF
1072  8BFF 21 56 70     	ld hl,Album_de_fotos_disparos
1073  8C02 EB           	ex de,hl
1074  8C03 2A 10 89     	ld hl,(End_Snapshot_disparos)
1075  8C06
1076  8C06 06 00        	ld b,0
1077  8C08 7D           	ld a,l
1078  8C09 93           	sub e
1079  8C0A 28 07        	jr z,1F
1080  8C0C
1081  8C0C              ; Nº de malotes no es "0".
1082  8C0C
1083  8C0C D6 06        2 sub 6
1084  8C0E 04           	inc b
1085  8C0F A7           	and a
1086  8C10 20 FA        	jr nz,2B
1087  8C12 78           	ld a,b
1088  8C13
1089  8C13 32 15 89     1 ld (Numero_de_disparotes),a
1090  8C16 C9           	ret
1091  8C17
1092  8C17              ; *************************************************************************************************************************************************************
1093  8C17              ;
1094  8C17              ; 20/10/22
1095  8C17              ;
1096  8C17              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1097  8C17              ;
1098  8C17              ; Destruye el puntero y DE !!!!!
1099  8C17
1100  8C17 5E           Extrae_address ld e,(hl)
1101  8C18 23           	inc hl
1102  8C19 56           	ld d,(hl)
1103  8C1A 2B           	dec hl
1104  8C1B EB           	ex de,hl
1105  8C1C C9           	ret
1106  8C1D
1107  8C1D              ; *************************************************************************************************************************************************************
1108  8C1D              ;
1109  8C1D              ;	7/2/23
1110  8C1D              ;
1111  8C1D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1112  8C1D              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1113  8C1D              ;
1114  8C1D              ;   Destruye HL y BC !!!!!,
1115  8C1D              ;
1116  8C1D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1117  8C1D              ;					"0" ..... Izquierda.
1118  8C1D
1119  8C1D              Inicia_Puntero_objeto
1120  8C1D
1121  8C1D 3A CA 88     	ld a,(Cuad_objeto)
1122  8C20 E6 01        	and 1
1123  8C22 F5           	push af
1124  8C23 CC 41 8C     	call z,Inicia_puntero_objeto_izq
1125  8C26 F1           	pop af
1126  8C27 28 2B        	jr z,1F
1127  8C29 CD 2E 8C     	call Inicia_puntero_objeto_der
1128  8C2C 18 26        	jr 1F
1129  8C2E
1130  8C2E              ; Arrancamos desde la parte izquierda de la pantalla.
1131  8C2E              ; Iniciamos (Indice_Sprite_der).
1132  8C2E
1133  8C2E 2A C0 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1134  8C31 22 C4 88     	ld (Puntero_DESPLZ_der),hl
1135  8C34 CD 17 8C     	call Extrae_address
1136  8C37 22 BA 88     	ld (Puntero_objeto),hl
1137  8C3A
1138  8C3A 2A C2 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1139  8C3D 22 C6 88     	ld (Puntero_DESPLZ_izq),hl
1140  8C40 C9           	ret
1141  8C41
1142  8C41              ; Arrancamos desde la parte derecha de la pantalla.
1143  8C41              ; Iniciamos (Indice_Sprite_izq).
1144  8C41
1145  8C41 2A C2 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1146  8C44 22 C6 88     	ld (Puntero_DESPLZ_izq),hl
1147  8C47 CD 17 8C     	call Extrae_address
1148  8C4A 22 BA 88     	ld (Puntero_objeto),hl
1149  8C4D
1150  8C4D 2A C0 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1151  8C50 22 C4 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1152  8C53 C9           	ret
1153  8C54
1154  8C54              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1155  8C54
1156  8C54 21 40 83     1 ld hl,Amadeus
1157  8C57 ED 4B BA 88  	ld bc,(Puntero_objeto)
1158  8C5B B7 ED 42     	sub hl,bc
1159  8C5E C0           	ret nz
1160  8C5F 21 E2 88     	ld hl,Ctrl_0
1161  8C62 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1162  8C64 C9           	ret 												; _de nuestra nave en los extremos.
1163  8C65
1164  8C65              ; *************************************************************************************************************************************************************
1165  8C65              ;
1166  8C65              ;	14/5/23
1167  8C65              ;
1168  8C65              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1169  8C65              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1170  8C65
1171  8C65              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1172  8C65              ;	_de la 2ª y 3ª entidad respectivamente.
1173  8C65
1174  8C65              Store_Restore_cajas
1175  8C65
1176  8C65 E5           	push hl
1177  8C66 D5           	push de
1178  8C67 C5            	push bc
1179  8C68
1180  8C68              ;	STORE !!!!!
1181  8C68              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1182  8C68
1183  8C68 21 B6 88     	ld hl,Filas
1184  8C6B ED 5B F8 88  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1185  8C6F 01 3F 00     	ld bc,63
1186  8C72 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1187  8C74
1188  8C74              ; 	Entidad_sospechosa. 20/4/23
1189  8C74
1190  8C74 3A CF 88     	ld a,(Impacto)
1191  8C77 A7           	and a
1192  8C78 28 0C        	jr z,1F
1193  8C7A
1194  8C7A 2A F8 88     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1195  8C7D 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1196  8C80 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1197  8C81 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1198  8C83 22 1B 89     	ld (Entidad_sospechosa_de_colision),hl
1199  8C86
1200  8C86              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1201  8C86
1202  8C86 2A FA 88     1 ld hl,(Puntero_restore_caja)
1203  8C89 7E           	ld a,(hl)
1204  8C8A A7           	and a
1205  8C8B F5           	push af
1206  8C8C 28 08        	jr z,2F
1207  8C8E
1208  8C8E 11 B6 88     	ld de,Filas
1209  8C91 01 3F 00     	ld bc,63
1210  8C94 ED B0        	ldir
1211  8C96
1212  8C96 CD B2 8C     2 call Incrementa_punteros_de_cajas
1213  8C99
1214  8C99 F1           	pop af
1215  8C9A 28 EA        	jr z,1B
1216  8C9C
1217  8C9C C1           	pop bc
1218  8C9D D1           	pop de
1219  8C9E E1           	pop hl
1220  8C9F
1221  8C9F C9           	ret
1222  8CA0
1223  8CA0              ; **************************************************************************************************
1224  8CA0              ;
1225  8CA0              ;	12/05/23
1226  8CA0              ;
1227  8CA0              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1228  8CA0
1229  8CA0 E5           Restore_entidad push hl
1230  8CA1 D5           	push de
1231  8CA2 C5            	push bc
1232  8CA3
1233  8CA3 2A F8 88     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1234  8CA6 11 B6 88     	ld de,Filas
1235  8CA9 01 3F 00     	ld bc,63
1236  8CAC ED B0        	ldir
1237  8CAE
1238  8CAE C1           	pop bc
1239  8CAF D1           	pop de
1240  8CB0 E1           	pop hl
1241  8CB1 C9           	ret
1242  8CB2
1243  8CB2              ; **************************************************************************************************
1244  8CB2              ;
1245  8CB2              ;	08/05/23
1246  8CB2              ;
1247  8CB2              ;	Incrementamos los dos punteros de entidades. (+1).
1248  8CB2
1249  8CB2              Incrementa_punteros_de_cajas
1250  8CB2
1251  8CB2 2A FA 88     	ld hl,(Puntero_restore_caja)
1252  8CB5 22 F8 88     	ld (Puntero_store_caja),hl
1253  8CB8 2A FC 88     	ld hl,(Indice_restore_caja)
1254  8CBB 23           	inc hl
1255  8CBC 23           	inc hl
1256  8CBD 22 FC 88     	ld (Indice_restore_caja),hl
1257  8CC0 CD 17 8C         call Extrae_address
1258  8CC3 22 FA 88         ld (Puntero_restore_caja),hl
1259  8CC6 C9               ret
1260  8CC7
1261  8CC7              ; **************************************************************************************************
1262  8CC7              ;
1263  8CC7              ;	25/01/23
1264  8CC7              ;
1265  8CC7              ;	Restore_Amadeus
1266  8CC7              ;
1267  8CC7              ;	Cargamos en DRAW los parámetros de Amadeus.
1268  8CC7              ;
1269  8CC7
1270  8CC7 E5           Restore_Amadeus	push hl
1271  8CC8 D5           	push de
1272  8CC9 C5            	push bc
1273  8CCA 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1274  8CCD 11 B6 88     	ld de,Filas
1275  8CD0 01 3F 00     	ld bc,63
1276  8CD3 ED B0        	ldir
1277  8CD5 C1           	pop bc
1278  8CD6 D1           	pop de
1279  8CD7 E1           	pop hl
1280  8CD8 C9           	ret
1281  8CD9
1282  8CD9              ; *************************************************************************************************************************************************************
1283  8CD9              ;
1284  8CD9              ;	29/04/23
1285  8CD9              ;
1286  8CD9              ;	Store_Amadeus
1287  8CD9              ;
1288  8CD9              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1289  8CD9              ;
1290  8CD9              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1291  8CD9              ;
1292  8CD9              ;	DESTRUYE: HL y BC y DE.
1293  8CD9
1294  8CD9 21 B6 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1295  8CDC 01 3F 00     	ld bc,63
1296  8CDF ED B0        	ldir
1297  8CE1 C9           	ret
1298  8CE2
1299  8CE2              ; -----------------------------------------------------------
1300  8CE2              ;
1301  8CE2              ;	27/04/23
1302  8CE2              ;
1303  8CE2              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1304  8CE2              ;
1305  8CE2              ;	Destruye: HL,BC,DE,A
1306  8CE2
1307  8CE2 21 B6 88     Borra_datos_entidad ld hl,Filas
1308  8CE5 01 3E 00     	ld bc,62
1309  8CE8 AF           	xor a
1310  8CE9 77           	ld (hl),a
1311  8CEA 11 B7 88     	ld de,Filas+1
1312  8CED ED B0        	ldir
1313  8CEF C9           	ret
1314  8CF0
1315  8CF0              ; -----------------------------------------------------------
1316  8CF0
1317  8CF0              ; Teclado.
1318  8CF0
1319  8CF0 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1320  8CF2 DB FE        	in a,($fe)
1321  8CF4 E6 01        	and $01
1322  8CF6 28 02        	jr z,1f
1323  8CF8 18 F6        	jr Pulsa_ENTER
1324  8CFA C9           1 ret
1325  8CFB
1326  8CFB              ; **************************************************************************************************
1327  8CFB              ;
1328  8CFB              ; Temporización.
1329  8CFB
1330  8CFB              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1331  8CFB              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1332  8CFB              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1333  8CFB              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1334  8CFB
1335  8CFB              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1336  8CFB              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1337  8CFB              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1338  8CFB
1339  8CFB              ; A partir de $4f61 no hace falta DELAY.
1340  8CFB
1341  8CFB              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1342  8CFB
1343  8CFB 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1344  8CFE 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1345  8CFF 78           	LD A,B
1346  8D00 A7           	AND A
1347  8D01 20 FB        	JR NZ,wait
1348  8D03 C9           	RET
1349  8D04
1350  8D04              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1351  8D04              ;
1352  8D04              ;	5/3/23
1353  8D04              ;
1354  8D04              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1355  8D04
1356  8D04              Movimiento_Amadeus
1357  8D04
1358  8D04              ; Disparo.
1359  8D04
1360  8D04 3A 2B 89     	ld a,(Disparo_Amadeus)
1361  8D07 A7           	and a
1362  8D08 20 02        	jr nz,1F
1363  8D0A 18 15        	jr 2F
1364  8D0C
1365  8D0C 3E F7        1 ld a,$f7													; "5" para disparar.
1366  8D0E DB FE        	in a,($fe)
1367  8D10 E6 10        	and $10
1368  8D12
1369  8D12 F5           	push af
1370  8D13 CC B9 8D     	call z,Genera_disparo
1371  8D16 F1           	pop af
1372  8D17 20 08        	jr nz,2F
1373  8D19
1374  8D19 3A 2B 89     	ld a,(Disparo_Amadeus)
1375  8D1C EE 01        	xor 1
1376  8D1E 32 2B 89     	ld (Disparo_Amadeus),a
1377  8D21 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1378  8D23 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1379  8D25 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1380  8D27 CC 68 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1381  8D2A
1382  8D2A 3E F7        	ld a,$f7
1383  8D2C DB FE        	in a,($fe)
1384  8D2E E6 01        	and $01
1385  8D30 C8           	ret z
1386  8D31
1387  8D31 3E F7        	ld a,$f7
1388  8D33 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1389  8D35 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1390  8D37 CC 4A 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1391  8D3A C9           	ret
1392  8D3B
1393  8D3B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1394  8D3B              ;
1395  8D3B              ;	Rutina provisional para que los malotes cagen balas.
1396  8D3B
1397  8D3B              Detecta_disparo_entidad
1398  8D3B
1399  8D3B 3A 2E 89     	ld a,(Disparo_entidad)
1400  8D3E A7           	and a
1401  8D3F C8           	ret z
1402  8D40
1403  8D40              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1404  8D40
1405  8D40              ;	ld a,$7f				; Detecta SPACE.
1406  8D40              ;	in a,($fe)
1407  8D40              ;	and 1
1408  8D40              ;	ret nz
1409  8D40
1410  8D40 CD B9 8D     	call Genera_disparo
1411  8D43 C9           	ret
1412  8D44
1413  8D44              ; ----------------------------------------------------------------------
1414  8D44              ;
1415  8D44              ;	8/9/23
1416  8D44
1417  8D44 2A 12 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1418  8D47 2B            	dec hl
1419  8D48 7E           	ld a,(hl)
1420  8D49 A7           	and a
1421  8D4A C8           	ret z										; Salimos si es álbum está vacío.
1422  8D4B
1423  8D4B 11 D5 88     	ld de,Variables_de_borrado+5
1424  8D4E 01 06 00     	ld bc,6
1425  8D51 ED B8        	lddr
1426  8D53 C9           	ret
1427  8D54
1428  8D54              ; ----------------------------------------------------------------------
1429  8D54              ;
1430  8D54              ;	9/9/23
1431  8D54
1432  8D54              Repone_datos_de_borrado_Amadeus
1433  8D54
1434  8D54 21 D0 88     	ld hl,Variables_de_borrado
1435  8D57 11 AC 70     	ld de,Album_de_fotos_Amadeus
1436  8D5A 01 06 00     	ld bc,6
1437  8D5D ED B0        	ldir
1438  8D5F
1439  8D5F EB           	ex de,hl
1440  8D60 22 12 89     	ld (End_Snapshot_Amadeus),hl
1441  8D63
1442  8D63 C9           	ret
1443  8D64
1444  8D64              ; ----------------------------------------------------------------------
1445  8D64              ;
1446  8D64              ;	27/10/23
1447  8D64              ;
1448  8D64
1449  8D64              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1450  8D64              ;	_ Album_de_fotos correspondiente.
1451  8D64
1452  8D64              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1453  8D64              ;	_ durante el proceso de escritura.
1454  8D64
1455  8D64              Repone_datos_de_borrado
1456  8D64
1457  8D64 F3           	di
1458  8D65
1459  8D65 ED 5B 0C 89  	ld de,(Stack_snapshot)
1460  8D69 21 D0 88     	ld hl,Variables_de_borrado
1461  8D6C 01 06 00     	ld bc,6
1462  8D6F ED B0        	ldir
1463  8D71 FB           	ei
1464  8D72
1465  8D72 EB           	ex de,hl
1466  8D73 22 0C 89     	ld (Stack_snapshot),hl
1467  8D76
1468  8D76 C9           	ret
1469  8D77
1470  8D77              ; -----------------------------------------------------------------------------------
1471  8D77
1472  8D77              Pinta_Amadeus
1473  8D77
1474  8D77 3E 06        	ld a,6
1475  8D79 D3 FE            out ($fe),a										; Amarillo
1476  8D7B
1477  8D7B CD E3 8B        	call Calcula_malotes_Amadeus
1478  8D7E CD 1D 96     	call Extrae_foto_Amadeus
1479  8D81 CD A3 8B     	call Limpia_album_Amadeus
1480  8D84
1481  8D84 C9           	ret
1482  8D85
1483  8D85              Pinta_entidades
1484  8D85
1485  8D85              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1486  8D85
1487  8D85 3A 14 89     	ld a,(Ctrl_3)
1488  8D88 CB 47        	bit 0,a
1489  8D8A C8           	ret z
1490  8D8B
1491  8D8B CD CB 8B     	call Calcula_numero_de_malotes
1492  8D8E CD 9B 95     	call Extrae_foto_entidades
1493  8D91 CD 03 80     	call Limpia_y_reinicia_Stack_Snapshot
1494  8D94
1495  8D94 C9           	ret
1496  8D95
1497  8D95              ; -----------------------------------------------------------------------------------
1498  8D95              ;
1499  8D95              ;	12/11/23
1500  8D95              ;
1501  8D95              ;	Incrementa los relojes cada vez que se ejecuta [FRAME].
1502  8D95
1503  8D95              Actualiza_relojes
1504  8D95
1505  8D95 21 26 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1506  8D98 34           	inc (hl)
1507  8D99
1508  8D99 34           	inc (hl)
1509  8D9A 35           	dec (hl)
1510  8D9B C0           	ret nz
1511  8D9C
1512  8D9C 21 27 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1513  8D9F 34           	inc (hl)
1514  8DA0 C9           	ret
1515  8DA1
1516  8DA1              ; ---------------------------------------------------------------
1517  8DA1              ;
1518  8DA1              ;	27/9/23
1519  8DA1
1520  8DA1              Guarda_parametros_DRAW
1521  8DA1
1522  8DA1 21 B6 88     	ld hl,Filas
1523  8DA4 11 C1 70     	ld de,Almacen_de_parametros_DRAW
1524  8DA7 01 3F 00     	ld bc,63
1525  8DAA ED B0        	ldir
1526  8DAC C9           	ret
1527  8DAD
1528  8DAD              Recupera_parametros_DRAW
1529  8DAD
1530  8DAD 21 C1 70     	ld hl,Almacen_de_parametros_DRAW
1531  8DB0 11 B6 88     	ld de,Filas
1532  8DB3 01 3F 00     	ld bc,63
1533  8DB6 ED B0        	ldir
1534  8DB8 C9           	ret
1535  8DB9
1536  8DB9              ; ---------------------------------------------------------------
1537  8DB9
1538  8DB9              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8DB9              ; ******************************************************************************************************************************************************************************************
   2+ 8DB9              ;
   3+ 8DB9              ;   21/07/23
   4+ 8DB9              ;
   5+ 8DB9              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8DB9              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8DB9              ;
   8+ 8DB9              ;
   9+ 8DB9              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8DB9              ;
  11+ 8DB9              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8DB9              ;               _ hacen las entidades hacia abajo.
  13+ 8DB9              ;
  14+ 8DB9              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8DB9              ;
  16+ 8DB9              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8DB9              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8DB9              ;
  19+ 8DB9              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8DB9              ;           _ la bala.
  21+ 8DB9              ;
  22+ 8DB9              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8DB9              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8DB9              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8DB9              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8DB9              ;           _ en el momento de generarse la bala)).
  27+ 8DB9
  28+ 8DB9              Genera_disparo
  29+ 8DB9
  30+ 8DB9              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8DB9              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8DB9              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8DB9              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8DB9              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8DB9              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8DB9              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8DB9
  38+ 8DB9              ; Exclusiones:
  39+ 8DB9
  40+ 8DB9 3A CE 88         ld a,(Vel_down)
  41+ 8DBC 47               ld b,a
  42+ 8DBD 3A 25 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8DC0 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8DC1 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8DC2 3A EF 88         ld a,(Columnas)
  46+ 8DC5 47               ld b,a
  47+ 8DC6 3A B7 88         ld a,(Columns)
  48+ 8DC9 B8               cp b
  49+ 8DCA C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8DCB
  51+ 8DCB              ; ----- ----- -----
  52+ 8DCB
  53+ 8DCB 3A E2 88         ld a,(Ctrl_0)
  54+ 8DCE CB 77            bit 6,a
  55+ 8DD0 20 06            jr nz,14F
  56+ 8DD2
  57+ 8DD2 3A BD 88         ld a,(Coordenada_y)
  58+ 8DD5 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8DD7 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8DD8
  61+ 8DD8 21 00 80     14 ld hl,Indice_disparo
  62+ 8DDB 3A BE 88         ld a,(CTRL_DESPLZ)
  63+ 8DDE 4F               ld c,a
  64+ 8DDF 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8DE1              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8DE1              ;                                            ""        ""       "f9", B="1"
  67+ 8DE1              ;                                            ""        ""       "fb", B="2"
  68+ 8DE1              ;                                            ""        ""       "fb", B="3"
  69+ 8DE1 A7               and a
  70+ 8DE2 28 10            jr z,1F
  71+ 8DE4 E6 01            and 1
  72+ 8DE6 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8DE7
  74+ 8DE7 79               ld a,c
  75+ 8DE8 16 F9            ld d,$f9
  76+ 8DEA 23           2 inc hl
  77+ 8DEB 23               inc hl
  78+ 8DEC 04               inc b
  79+ 8DED BA               cp d
  80+ 8DEE 28 04            jr z,1F
  81+ 8DF0 14               inc d
  82+ 8DF1 14               inc d
  83+ 8DF2 18 F6            jr 2B
  84+ 8DF4
  85+ 8DF4 CD 17 8C     1 call Extrae_address
  86+ 8DF7 E5               push hl
  87+ 8DF8 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8DFA DD 21 63 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8DFE
  90+ 8DFE              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8DFE              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8DFE
  93+ 8DFE 3A E2 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E01 CB 77            bit 6,a
  95+ 8E03 20 04            jr nz,19F
  96+ 8E05
  97+ 8E05 AF               xor a
  98+ 8E06 32 2E 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E09
 100+ 8E09 3A CA 88     19 ld a,(Cuad_objeto)
 101+ 8E0C FE 02            cp 2
 102+ 8E0E 38 66            jr c,3F
 103+ 8E10 28 64            jr z,3F
 104+ 8E12
 105+ 8E12              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E12
 107+ 8E12 E6 01            and 1
 108+ 8E14 28 30            jr z,4F
 109+ 8E16
 110+ 8E16              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E16              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E16              ;
 113+ 8E16              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E16              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E16              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E16
 117+ 8E16 2A B8 88     	ld hl,(Posicion_actual)
 118+ 8E19
 119+ 8E19              ;   Amadeus o entidad ???.
 120+ 8E19
 121+ 8E19 3A E2 88         ld a,(Ctrl_0)
 122+ 8E1C CB 77            bit 6,a
 123+ 8E1E 28 0A            jr z,8F
 124+ 8E20
 125+ 8E20              ; 	Dispara Amadeus.
 126+ 8E20
 127+ 8E20 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8E22 CD 8C 95         call PreviousScan
 129+ 8E25 CD 8C 95         call PreviousScan
 130+ 8E28
 131+ 8E28              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8E28              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8E28              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8E28              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8E28
 136+ 8E28 18 11            jr 10F
 137+ 8E2A
 138+ 8E2A              ; 	Dispara Entidad.
 139+ 8E2A
 140+ 8E2A 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8E2D              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8E2D
 143+ 8E2D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8E2D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8E2D
 146+ 8E2D C5               push bc
 147+ 8E2E 06 10            ld b,16
 148+ 8E30 CD 7D 95     9 call NextScan
 149+ 8E33 10 FB            djnz 9B
 150+ 8E35 C1               pop bc
 151+ 8E36 CD A0 8E         call Ajusta_disparo_parte_izquierda
 152+ 8E39 18 06            jr 17F
 153+ 8E3B
 154+ 8E3B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8E3B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8E3B              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8E3B              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8E3B
 159+ 8E3B CD A0 8E     10 call Ajusta_disparo_parte_izquierda
 160+ 8E3E CD 15 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8E41              ;                                                      ; _al generar el disparo.
 162+ 8E41
 163+ 8E41              ; 	LLegados a este punto tendremos:
 164+ 8E41              ;
 165+ 8E41              ;       Puntero_objeto_disparo en IY.
 166+ 8E41              ;       Rutinas_de_impresion en IX.
 167+ 8E41              ;       Puntero_de_impresion en HL.
 168+ 8E41              ;       Impacto/Dirección en BC.
 169+ 8E41
 170+ 8E41 CD A8 8E     17 call Almacena_disparo
 171+ 8E44 18 52            jr 6F                                             ; RET.
 172+ 8E46
 173+ 8E46              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8E46              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8E46              ;
 176+ 8E46              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8E46              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8E46              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8E46
 180+ 8E46 2A B8 88     4 ld hl,(Posicion_actual)
 181+ 8E49
 182+ 8E49              ;   Amadeus o entidad ???.
 183+ 8E49
 184+ 8E49 3A E2 88         ld a,(Ctrl_0)
 185+ 8E4C CB 77            bit 6,a
 186+ 8E4E 28 0A            jr z,11F
 187+ 8E50
 188+ 8E50              ; 	Dispara Amadeus.
 189+ 8E50
 190+ 8E50 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8E52 CD 8C 95         call PreviousScan
 192+ 8E55 CD 8C 95         call PreviousScan
 193+ 8E58
 194+ 8E58              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8E58              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8E58              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8E58              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8E58
 199+ 8E58 18 11            jr 13F
 200+ 8E5A
 201+ 8E5A              ; 	Dispara Entidad.
 202+ 8E5A
 203+ 8E5A 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8E5D              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8E5D
 206+ 8E5D              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8E5D              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8E5D
 209+ 8E5D C5               push bc
 210+ 8E5E 06 10            ld b,16
 211+ 8E60 CD 7D 95     12 call NextScan
 212+ 8E63 10 FB            djnz 12B
 213+ 8E65 C1               pop bc
 214+ 8E66
 215+ 8E66 CD 99 8E         call Ajusta_disparo_parte_derecha
 216+ 8E69 18 06            jr 18F
 217+ 8E6B
 218+ 8E6B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8E6B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8E6B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8E6B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8E6B
 223+ 8E6B CD 99 8E     13 call Ajusta_disparo_parte_derecha
 224+ 8E6E CD 15 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8E71              ;                                                       ; _al generar el disparo.
 226+ 8E71
 227+ 8E71              ; LLegados a este punto tendremos:
 228+ 8E71              ;
 229+ 8E71              ;       Puntero_objeto_disparo en IY.
 230+ 8E71              ;       Rutinas_de_impresion en IX.
 231+ 8E71              ;       Puntero_de_impresion en HL.
 232+ 8E71              ;       Impacto/Dirección en BC.
 233+ 8E71
 234+ 8E71 CD A8 8E     18 call Almacena_disparo
 235+ 8E74 18 22            jr 6F                                               ; RET.
 236+ 8E76
 237+ 8E76              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8E76
 239+ 8E76 28 11        3 jr z,5F
 240+ 8E78
 241+ 8E78              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8E78              ;
 243+ 8E78              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8E78              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8E78              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8E78              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8E78
 248+ 8E78              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8E78              ;	   ""        ""       "f9", B="1"
 250+ 8E78              ;	   ""        ""       "fb", B="2"
 251+ 8E78              ; 	   ""        ""       "fb", B="3"
 252+ 8E78
 253+ 8E78 2A B8 88     	ld hl,(Posicion_actual)
 254+ 8E7B CD 7D 95     	call NextScan
 255+ 8E7E
 256+ 8E7E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8E7E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8E7E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8E7E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8E7E
 261+ 8E7E CD A0 8E         call Ajusta_disparo_parte_izquierda
 262+ 8E81
 263+ 8E81              ; 	No se produce impacto. B="$80"
 264+ 8E81              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8E81
 266+ 8E81 01 80 80         ld bc,$8080
 267+ 8E84
 268+ 8E84              ; 	LLegados a este punto tendremos:
 269+ 8E84              ;
 270+ 8E84              ;       Puntero_objeto_disparo en IY.
 271+ 8E84              ;       Rutinas_de_impresion en IX.
 272+ 8E84              ;       Puntero_de_impresion en HL.
 273+ 8E84              ;       Impacto/Dirección en BC.
 274+ 8E84
 275+ 8E84 CD A8 8E         call Almacena_disparo
 276+ 8E87 18 0F            jr 6F                                           ; RET.
 277+ 8E89
 278+ 8E89              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8E89              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8E89              ;
 281+ 8E89              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8E89              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8E89              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8E89              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8E89
 286+ 8E89 2A B8 88     5 ld hl,(Posicion_actual)
 287+ 8E8C CD 7D 95     	call NextScan
 288+ 8E8F
 289+ 8E8F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8E8F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8E8F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8E8F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8E8F
 294+ 8E8F CD 99 8E         call Ajusta_disparo_parte_derecha
 295+ 8E92
 296+ 8E92              ; 	No se produce impacto. B="$80"
 297+ 8E92              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8E92
 299+ 8E92 01 80 80     15 ld bc,$8080
 300+ 8E95
 301+ 8E95              ; 	LLegados a este punto tendremos:
 302+ 8E95              ;
 303+ 8E95              ;       Puntero_objeto_disparo en IY.
 304+ 8E95              ;       Rutinas_de_impresion en IX.
 305+ 8E95              ;       Puntero_de_impresion en HL.
 306+ 8E95              ;       Impacto/Dirección en BC.
 307+ 8E95
 308+ 8E95 CD A8 8E         call Almacena_disparo
 309+ 8E98
 310+ 8E98 C9           6 ret
 311+ 8E99
 312+ 8E99              ; ----------------------------------------------------------------
 313+ 8E99              ;
 314+ 8E99              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8E99              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8E99              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8E99
 318+ 8E99 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8E9A FE 02            cp 2
 320+ 8E9C 38 01            jr c,1F
 321+ 8E9E 23               inc hl
 322+ 8E9F C9           1 ret
 323+ 8EA0
 324+ 8EA0 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8EA1 FE 01        	cp 1
 326+ 8EA3 20 01        	jr nz,1F
 327+ 8EA5 2B           	dec hl
 328+ 8EA6 2B           1 dec hl
 329+ 8EA7 C9               ret
 330+ 8EA8
 331+ 8EA8              ; ----------------------------------------------------------------
 332+ 8EA8              ;
 333+ 8EA8              ;   25/02/23
 334+ 8EA8              ;
 335+ 8EA8              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8EA8              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8EA8              ;
 338+ 8EA8              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8EA8              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8EA8
 341+ 8EA8              Almacena_disparo
 342+ 8EA8
 343+ 8EA8 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8EA9 F1               pop af
 345+ 8EAA 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8EAB
 347+ 8EAB 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8EAC E6 01            and 1
 349+ 8EAE 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8EB0              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8EB0              ; 	Dispara AMADEUS.
 352+ 8EB0
 353+ 8EB0              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8EB0              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8EB0              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8EB0              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8EB0
 358+ 8EB0 C5               push bc
 359+ 8EB1 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8EB4 2A 18 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8EB7 A7               and a
 362+ 8EB8 ED 42            sbc hl,bc
 363+ 8EBA CC 9C 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8EBD C1               pop bc
 365+ 8EBE 28 54            jr z,4F
 366+ 8EC0
 367+ 8EC0 2A 18 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8EC3 23               inc hl
 369+ 8EC4 23               inc hl
 370+ 8EC5 22 18 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8EC8              ;                                                   ; _ Disparo_(+1).
 372+ 8EC8 18 18            jr 2F
 373+ 8ECA
 374+ 8ECA              ; Dispara una entidad.
 375+ 8ECA
 376+ 8ECA C5           1 push bc
 377+ 8ECB 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8ECE 2A 16 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8ED1 A7               and a
 380+ 8ED2 ED 42            sbc hl,bc
 381+ 8ED4 CC 95 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8ED7 C1               pop bc
 383+ 8ED8 28 3A            jr z,4F
 384+ 8EDA
 385+ 8EDA 2A 16 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8EDD 23               inc hl
 387+ 8EDE 23               inc hl
 388+ 8EDF 22 16 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8EE2              ;                                                   ; _ Disparo_(+1).
 390+ 8EE2 CD 17 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8EE5              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8EE5              ;
 393+ 8EE5              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8EE5              ;                                                     Rutinas_de_impresion en IX.
 395+ 8EE5              ;                                                     Puntero_de_impresion en HL.
 396+ 8EE5              ;                                                     Impacto/Dirección en BC.
 397+ 8EE5
 398+ 8EE5 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8EE6 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8EE7 23               inc hl                                          ; _ al siguiente.
 401+ 8EE8 A7               and a
 402+ 8EE9 20 C0            jr nz,3B
 403+ 8EEB
 404+ 8EEB 08               ex af,af
 405+ 8EEC ED 73 06 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8EF0 F9               ld sp,hl
 407+ 8EF1
 408+ 8EF1 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8EF3 F5               push af                                         ; Puntero de impresión.
 410+ 8EF4 FD E5            push iy                                         ; Puntero objeto.
 411+ 8EF6 C5               push bc                                         ; Control.
 412+ 8EF7
 413+ 8EF7 ED 7B 06 89      ld sp,(Stack)
 414+ 8EFB
 415+ 8EFB              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8EFB
 417+ 8EFB 21 F5 88     	ld hl,Ctrl_1
 418+ 8EFE CB C6        	set 0,(hl)
 419+ 8F00
 420+ 8F00 DD E5        	push ix
 421+ 8F02 E1               pop hl
 422+ 8F03 F5               push af
 423+ 8F04 DD E1            pop ix
 424+ 8F06
 425+ 8F06 CD A0 7F     	call Guarda_foto_registros
 426+ 8F09
 427+ 8F09 21 F5 88     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F0C CB 86        	res 0,(hl)
 429+ 8F0E
 430+ 8F0E              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F0E              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F0E
 433+ 8F0E CD 9C 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F11 CD 95 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F14
 436+ 8F14 C9           4 ret
 437+ 8F15
 438+ 8F15              ; ----------------------------------------------------------------
 439+ 8F15              ;
 440+ 8F15              ;   4/3/23
 441+ 8F15              ;
 442+ 8F15              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F15              ;   _ al generarse el disparo.
 444+ 8F15              ;
 445+ 8F15              ;       "$80" ..... No se produce colisión.
 446+ 8F15              ;       "$81" ..... Se produce colisión.
 447+ 8F15              ;
 448+ 8F15              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F15              ;         _ que forman el disparo.
 450+ 8F15
 451+ 8F15
 452+ 8F15              Comprueba_Colision
 453+ 8F15
 454+ 8F15              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F15
 456+ 8F15 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F17 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F18
 459+ 8F18 CD 4E 8F         call Modifica_H_Velocidad_disparo
 460+ 8F1B
 461+ 8F1B 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8F1C FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8F1E 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8F20
 465+ 8F20 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8F22 CD 3E 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8F25
 468+ 8F25 7B               ld a,e
 469+ 8F26 E6 01            and 1
 470+ 8F28 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8F2A              ;                                                  ; _ para activar IMPACTO.
 472+ 8F2A E1               pop hl
 473+ 8F2B E5               push hl
 474+ 8F2C CD 7D 95         call NextScan
 475+ 8F2F
 476+ 8F2F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8F30 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8F32 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8F34              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8F34 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8F36 CD 3E 8F         call Bucle_2
 482+ 8F39
 483+ 8F39 43           1 ld b,e
 484+ 8F3A E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8F3B FD E1            pop iy
 486+ 8F3D C9               ret
 487+ 8F3E
 488+ 8F3E              ; ---------- ----------
 489+ 8F3E
 490+ 8F3E 06 02        Bucle_2 ld b,2
 491+ 8F40 FD 7E 00     2 ld a,(iy)
 492+ 8F43 A6               and (hl)
 493+ 8F44 28 02            jr z,1F
 494+ 8F46 1E 81            ld e,$81
 495+ 8F48 23           1 inc hl
 496+ 8F49 FD 23            inc iy
 497+ 8F4B 10 F3            djnz 2B
 498+ 8F4D C9               ret
 499+ 8F4E
 500+ 8F4E              ; ---------- ----------
 501+ 8F4E              ;
 502+ 8F4E              ;   21/7/23
 503+ 8F4E
 504+ 8F4E              Modifica_H_Velocidad_disparo
 505+ 8F4E
 506+ 8F4E 3A 25 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8F51 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8F53 D0               ret nc                                         ; _ incrementamos H.
 509+ 8F54 24               inc h
 510+ 8F55
 511+ 8F55 C9               ret
 512+ 8F56
 513+ 8F56              ; -------------------------------------------------------------------------------------------------------------
 514+ 8F56              ;
 515+ 8F56              ;   04/12/23
 516+ 8F56              ;
 517+ 8F56              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8F56              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8F56              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8F56              ;
 521+ 8F56              ;   MODIFICA: HL,DE,B y A.
 522+ 8F56
 523+ 8F56              Genera_coordenadas_X
 524+ 8F56
 525+ 8F56              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8F56              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8F56
 528+ 8F56              ;   Limpiamos almacenes.
 529+ 8F56
 530+ 8F56 CD 87 8F         call Limpia_Coordenadas_X
 531+ 8F59
 532+ 8F59              ;   Almacenamos coordenadas X.
 533+ 8F59
 534+ 8F59              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8F59
 536+ 8F59 2A E0 88         ld hl,(Puntero_de_impresion)
 537+ 8F5C 11 22 89         ld de,Coordenadas_X_Entidad
 538+ 8F5F 06 02            ld b,2
 539+ 8F61
 540+ 8F61 3A BE 88         ld a,(CTRL_DESPLZ)
 541+ 8F64 A7               and a
 542+ 8F65 28 01            jr z,1F
 543+ 8F67 04               inc b
 544+ 8F68
 545+ 8F68 CD 7E 8F     1 call Guarda_coordenadas_X
 546+ 8F6B
 547+ 8F6B              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8F6B
 549+ 8F6B 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 8F6E 11 1F 89         ld de,Coordenadas_X_Amadeus
 551+ 8F71 06 02            ld b,2
 552+ 8F73
 553+ 8F73 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 8F76 A7               and a
 555+ 8F77 28 01            jr z,2F
 556+ 8F79 04               inc b
 557+ 8F7A
 558+ 8F7A CD 7E 8F     2 call Guarda_coordenadas_X
 559+ 8F7D
 560+ 8F7D              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8F7D
 562+ 8F7D C9               ret
 563+ 8F7E
 564+ 8F7E              ; ----- ----- ----- ----- -----
 565+ 8F7E
 566+ 8F7E 7D           Guarda_coordenadas_X  ld a,l
 567+ 8F7F E6 1F            and $1f
 568+ 8F81 12           1 ld (de),a
 569+ 8F82 3C               inc a
 570+ 8F83 13               inc de
 571+ 8F84 10 FB            djnz 1B
 572+ 8F86 C9               ret
 573+ 8F87
 574+ 8F87 AF           Limpia_Coordenadas_X xor a
 575+ 8F88 06 06            ld b,6
 576+ 8F8A 21 1F 89         ld hl,Coordenadas_X_Amadeus
 577+ 8F8D 77           1 ld (hl),a
 578+ 8F8E 23               inc hl
 579+ 8F8F 10 FC            djnz 1B
 580+ 8F91 C9               ret
 581+ 8F92
 582+ 8F92              ; ----- ----- ----- ----- -----
 583+ 8F92
 584+ 8F92              Compara_coordenadas_X
 585+ 8F92
 586+ 8F92 06 03            ld b,3
 587+ 8F94 11 24 89         ld de,Coordenadas_X_Entidad+2
 588+ 8F97
 589+ 8F97 1A               ld a,(de)
 590+ 8F98 A7               and a
 591+ 8F99 20 01            jr nz,2F
 592+ 8F9B 05               dec b
 593+ 8F9C
 594+ 8F9C 1B           2 dec de
 595+ 8F9D 1B               dec de
 596+ 8F9E 21 1F 89         ld hl,Coordenadas_X_Amadeus
 597+ 8FA1
 598+ 8FA1 D5           1 push de
 599+ 8FA2 E5               push hl
 600+ 8FA3 C5               push bc
 601+ 8FA4
 602+ 8FA4 CD AE 8F         call Comparando
 603+ 8FA7
 604+ 8FA7 C1               pop bc
 605+ 8FA8 E1               pop hl
 606+ 8FA9 D1               pop de
 607+ 8FAA
 608+ 8FAA 13               inc de
 609+ 8FAB 10 F4            djnz 1B
 610+ 8FAD
 611+ 8FAD C9               ret
 612+ 8FAE
 613+ 8FAE              ; ----- ----- ----- ----- -----
 614+ 8FAE              ;
 615+ 8FAE              ;   4/12/23
 616+ 8FAE              ;
 617+ 8FAE              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8FAE
 619+ 8FAE 06 03        Comparando ld b,3
 620+ 8FB0 1A               ld a,(de)
 621+ 8FB1 4E           2 ld c,(hl)
 622+ 8FB2 B9               cp c
 623+ 8FB3 28 04            jr z,1F
 624+ 8FB5 23               inc hl
 625+ 8FB6 10 F9            djnz 2B
 626+ 8FB8 C9               ret
 627+ 8FB9
 628+ 8FB9 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8FBB 32 CF 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8FBE 21 1A 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8FC1 CB D6            set 2,(hl)
 632+ 8FC3 C9               ret
 633+ 8FC4
 634+ 8FC4              ; -----------------------------------------------------------------------
 635+ 8FC4              ;
 636+ 8FC4              ;   7/12/23
 637+ 8FC4              ;
 638+ 8FC4
 639+ 8FC4              Detecta_colision_nave_entidad
 640+ 8FC4
 641+ 8FC4              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8FC4
 643+ 8FC4 FD 2A BA 88      ld iy,(Puntero_objeto)
 644+ 8FC8 2A E0 88         ld hl,(Puntero_de_impresion)
 645+ 8FCB
 646+ 8FCB E5               push hl
 647+ 8FCC
 648+ 8FCC              ; ----- ----- -----
 649+ 8FCC 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8FCE 06 0A            ld b,10
 651+ 8FD0 CD 00 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8FD3 7B               ld a,e
 653+ 8FD4 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8FD6 38 0E            jr c,3F
 655+ 8FD8
 656+ 8FD8              ; LLegados a este punto:
 657+ 8FD8              ;
 658+ 8FD8              ;   HAY COLISIÓN !!!!!.
 659+ 8FD8              ;
 660+ 8FD8              ;   .db (Impacto) de Amadeus a "1".
 661+ 8FD8              ;   SET el bit3 de (Impacto2).
 662+ 8FD8              ;
 663+ 8FD8              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8FD8
 665+ 8FD8
 666+ 8FD8 18 FE            jr $
 667+ 8FDA
 668+ 8FDA 21 CF 88         ld hl,Impacto
 669+ 8FDD 36 01            ld (hl),1
 670+ 8FDF 21 1A 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 671+ 8FE2 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 672+ 8FE4              ;    set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 673+ 8FE4
 674+ 8FE4 18 18            jr 1F
 675+ 8FE6
 676+ 8FE6              ; -----
 677+ 8FE6
 678+ 8FE6 E1           3 pop hl
 679+ 8FE7 CD 7D 95         call NextScan
 680+ 8FEA E5               push hl
 681+ 8FEB 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 682+ 8FEC FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 683+ 8FEE 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 684+ 8FF0 30 0C            jr nc,1F
 685+ 8FF2              ;                                                  ; _ 2º scanline si esto es así.
 686+ 8FF2 10 DC            djnz 2B
 687+ 8FF4
 688+ 8FF4              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 689+ 8FF4
 690+ 8FF4              ; LLegados a este punto:
 691+ 8FF4              ;
 692+ 8FF4              ;   NO HAY COLISIÓN !!!!!.
 693+ 8FF4              ;
 694+ 8FF4              ;   .db (Impacto) de Amadeus a "0".
 695+ 8FF4              ;   RES el bit2 de (Impacto2).
 696+ 8FF4              ;
 697+ 8FF4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 698+ 8FF4              ;   Lo colocamos a "0".
 699+ 8FF4
 700+ 8FF4 21 1A 89         ld hl,Impacto2
 701+ 8FF7 CB 96            res 2,(hl)
 702+ 8FF9 2A 1B 89         ld hl,(Entidad_sospechosa_de_colision)
 703+ 8FFC 36 00            ld (hl),0
 704+ 8FFE
 705+ 8FFE E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 706+ 8FFF C9               ret
 707+ 9000
 708+ 9000               ; ---------- ----------
 709+ 9000
 710+ 9000 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 711+ 9001 3A B7 88         ld a,(Columns)
 712+ 9004 47               ld b,a
 713+ 9005 FD 7E 00     2 ld a,(iy)
 714+ 9008 BE               cp (hl)
 715+ 9009 28 01            jr z,1F
 716+ 900B
 717+ 900B 1C               inc e
 718+ 900C
 719+ 900C 23           1 inc hl
 720+ 900D FD 23            inc iy
 721+ 900F 10 F4            djnz 2B
 722+ 9011 C1               pop bc
 723+ 9012 C9               ret
 724+ 9013
 725+ 9013              ; -------------------------------------------------------------------------------------------------------------
 726+ 9013              ;
 727+ 9013              ;   13/03/23
 728+ 9013              ;
 729+ 9013              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 730+ 9013              ;
 731+ 9013              ;   DESTRUYE: HL,BC,DE y A.
 732+ 9013
 733+ 9013 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 734+ 9016 7E               ld a,(hl)
 735+ 9017 A7               and a
 736+ 9018 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 737+ 9019
 738+ 9019 44               ld b,h
 739+ 901A 4D               ld c,l
 740+ 901B 2A 0E 89         ld hl,(Stack_snapshot_disparos)
 741+ 901E E5               push hl
 742+ 901F A7               and a
 743+ 9020 ED 42            sbc hl,bc
 744+ 9022 E5               push hl
 745+ 9023 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 746+ 9024
 747+ 9024 E1               pop hl
 748+ 9025 54               ld d,h
 749+ 9026 5D               ld e,l
 750+ 9027 1B               dec de
 751+ 9028 ED B8            lddr                                                ; Limpiamos.
 752+ 902A
 753+ 902A 21 56 70         ld hl,Album_de_fotos_disparos
 754+ 902D 22 0E 89         ld (Stack_snapshot_disparos),hl
 755+ 9030
 756+ 9030 C9               ret
 757+ 9031
 758+ 9031              ; -------------------------------------------------------------------------------------------------------------
 759+ 9031              ;
 760+ 9031              ;   18/07/23
 761+ 9031              ;
 762+ 9031
 763+ 9031              Motor_de_disparos
 764+ 9031
 765+ 9031              ; Gestiona DISPAROS DE AMADEUS.
 766+ 9031
 767+ 9031 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 768+ 9034 2A 18 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 769+ 9037
 770+ 9037 CD 17 8C     2 call Extrae_address
 771+ 903A 7E               ld a,(hl)
 772+ 903B A7               and a
 773+ 903C 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 774+ 903E
 775+ 903E              ; ----- ----- ----- ----- ----- -----
 776+ 903E
 777+ 903E C5               push bc
 778+ 903F CD 03 91         call foto_disparo_a_borrar
 779+ 9042
 780+ 9042              ; Existe colisión con este disparo???
 781+ 9042
 782+ 9042 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 783+ 9043 7E               ld a,(hl)
 784+ 9044 2B               dec hl
 785+ 9045 E6 01            and 1
 786+ 9047 28 1D            jr z,9F
 787+ 9049
 788+ 9049              ;   En este punto:
 789+ 9049              ;
 790+ 9049              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 791+ 9049              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 792+ 9049              ;   _con la entidad).
 793+ 9049              ;
 794+ 9049              ;   Disparo_2A defw 0                                ; Control.
 795+ 9049              ;    defw 0                                          ; Puntero objeto.
 796+ 9049              ;    defw 0                                          ; Puntero de impresión.
 797+ 9049              ;    defw 0                                          ; Rutina de impresión.
 798+ 9049
 799+ 9049 E5               push hl
 800+ 904A
 801+ 904A 06 04            ld b,4
 802+ 904C 23           19 inc hl
 803+ 904D 10 FD            djnz 19B
 804+ 904F
 805+ 904F CD 17 8C         call Extrae_address
 806+ 9052 CD 46 9C         call Genera_coordenadas_disparo
 807+ 9055
 808+ 9055              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 809+ 9055
 810+ 9055 21 1D 89         ld hl,Coordenadas_disparo_certero
 811+ 9058 72               ld (hl),d
 812+ 9059 23               inc hl
 813+ 905A 73               ld (hl),e
 814+ 905B
 815+ 905B              ; Elimino el disparo de la base de datos.
 816+ 905B
 817+ 905B E1               pop hl
 818+ 905C CD 82 91         call Elimina_disparo_de_base_de_datos
 819+ 905F 21 1A 89         ld hl,Impacto2
 820+ 9062 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 821+ 9064
 822+ 9064 18 06            jr 11F
 823+ 9066
 824+ 9066 CD 2C 91     9 call Mueve_disparo
 825+ 9069 CD 03 91         call foto_disparo_a_borrar
 826+ 906C
 827+ 906C C1           11 pop bc
 828+ 906D 18 04            jr 7F
 829+ 906F
 830+ 906F              ; ----- ----- ----- ----- ----- -----
 831+ 906F
 832+ 906F ED 42        1 sbc hl,bc
 833+ 9071 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 834+ 9073
 835+ 9073 2A 18 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 836+ 9076 23               inc hl
 837+ 9077 23               inc hl
 838+ 9078 22 18 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 839+ 907B 18 BA            jr 2B
 840+ 907D
 841+ 907D CD 9C 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 842+ 9080              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 843+ 9080
 844+ 9080              ; Gestiona DISPAROS DE ENTIDADES.
 845+ 9080
 846+ 9080 01 6A 85         ld bc,Disparo_11
 847+ 9083 2A 16 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 848+ 9086
 849+ 9086 CD 17 8C     5 call Extrae_address
 850+ 9089 7E               ld a,(hl)
 851+ 908A A7               and a
 852+ 908B 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 853+ 908D
 854+ 908D              ; ----- ----- ----- ----- ----- -----
 855+ 908D
 856+ 908D C5               push bc
 857+ 908E CD 03 91         call foto_disparo_a_borrar
 858+ 9091
 859+ 9091              ; Existe colisión con este disparo???
 860+ 9091
 861+ 9091 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 862+ 9092 7E               ld a,(hl)
 863+ 9093 2B               dec hl
 864+ 9094 E6 01            and 1
 865+ 9096 28 4D            jr z,10F
 866+ 9098
 867+ 9098              ;! La colisión se produce con Amadeus???
 868+ 9098              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 869+ 9098
 870+ 9098 E5               push hl
 871+ 9099
 872+ 9099 06 04            ld b,4
 873+ 909B 23           16 inc hl
 874+ 909C 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 875+ 909E
 876+ 909E CD 17 8C         call Extrae_address
 877+ 90A1 CD 46 9C         call Genera_coordenadas_disparo
 878+ 90A4
 879+ 90A4 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 880+ 90A5 FE 16            cp $16
 881+ 90A7 38 2A            jr c,15F
 882+ 90A9
 883+ 90A9
 884+ 90A9              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 885+ 90A9
 886+ 90A9 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 887+ 90AA
 888+ 90AA              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 889+ 90AA
 890+ 90AA 2A A8 85         ld hl,(p.imp.amadeus)
 891+ 90AD
 892+ 90AD              ; Coordenada X de Amadeus en D.
 893+ 90AD
 894+ 90AD 7D               ld a,l
 895+ 90AE E6 1F            and $1F
 896+ 90B0 57               ld d,a
 897+ 90B1
 898+ 90B1 21 86 85         ld hl,Amadeus_db+8
 899+ 90B4 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 900+ 90B5
 901+ 90B5 21 1F 89         ld hl,Coordenadas_X_Amadeus
 902+ 90B8 CD 7E 8F         call Guarda_coordenadas_X
 903+ 90BB
 904+ 90BB D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 905+ 90BC
 906+ 90BC              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 907+ 90BC
 908+ 90BC 06 02            ld b,2
 909+ 90BE C5           20 push bc
 910+ 90BF
 911+ 90BF 06 03            ld b,3
 912+ 90C1 21 1F 89         ld hl,Coordenadas_X_Amadeus
 913+ 90C4 7E           18 ld a,(hl)
 914+ 90C5 BA               cp d
 915+ 90C6 20 04            jr nz,17F
 916+ 90C8
 917+ 90C8              ;! Colisión Amadeus !!!!!!!!!!
 918+ 90C8
 919+ 90C8 C1               pop bc
 920+ 90C9 E1               pop hl
 921+ 90CA 18 0D            jr 14F
 922+ 90CC
 923+ 90CC 23           17 inc hl
 924+ 90CD 10 F5            djnz 18B
 925+ 90CF
 926+ 90CF 14               inc d                       ; 2ª Coordenada_X del disparo.
 927+ 90D0
 928+ 90D0 C1               pop bc
 929+ 90D1 10 EB            djnz 20B
 930+ 90D3
 931+ 90D3
 932+ 90D3              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 933+ 90D3              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 934+ 90D3
 935+ 90D3 E1           15 pop hl
 936+ 90D4 23               inc hl
 937+ 90D5 35               dec (hl)
 938+ 90D6 2B               dec hl
 939+ 90D7 18 0C            jr 10F
 940+ 90D9
 941+ 90D9              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 942+ 90D9              ; _ almacén de coordenadas_X de Amadeus.
 943+ 90D9
 944+ 90D9 E5           14 push hl
 945+ 90DA CD 82 91         call Elimina_disparo_de_base_de_datos
 946+ 90DD 21 1A 89         ld hl,Impacto2
 947+ 90E0 CB CE            set 1,(hl)
 948+ 90E2 E1               pop hl
 949+ 90E3 18 06            jr 12F
 950+ 90E5
 951+ 90E5              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 952+ 90E5
 953+ 90E5 CD 2C 91     10 call Mueve_disparo
 954+ 90E8 CD 03 91         call foto_disparo_a_borrar
 955+ 90EB C1           12 pop bc
 956+ 90EC
 957+ 90EC 18 04            jr 8F
 958+ 90EE
 959+ 90EE              ; ----- ----- ----- ----- ----- -----
 960+ 90EE
 961+ 90EE ED 42        4 sbc hl,bc
 962+ 90F0 28 0A            jr z,6F
 963+ 90F2
 964+ 90F2 2A 16 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 965+ 90F5 23               inc hl
 966+ 90F6 23               inc hl
 967+ 90F7 22 16 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 968+ 90FA 18 8A            jr 5B
 969+ 90FC
 970+ 90FC CD 95 8B     6 call Inicia_Puntero_Disparo_Entidades
 971+ 90FF CD 87 8F         call Limpia_Coordenadas_X
 972+ 9102 C9               ret
 973+ 9103
 974+ 9103              ; ------------------------------------------------------------------
 975+ 9103
 976+ 9103              foto_disparo_a_borrar
 977+ 9103
 978+ 9103 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 979+ 9104 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 980+ 9105 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 981+ 9106
 982+ 9106 E5               push hl
 983+ 9107 23               inc hl
 984+ 9108 23               inc hl
 985+ 9109 ED 73 06 89      ld (Stack),sp
 986+ 910D F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 987+ 910E FD E1            pop iy
 988+ 9110 DD E1            pop ix
 989+ 9112 E1               pop hl
 990+ 9113 ED 7B 06 89      ld sp,(Stack)
 991+ 9117 3A F5 88         ld a,(Ctrl_1)
 992+ 911A CB C7            set 0,a
 993+ 911C 32 F5 88         ld (Ctrl_1),a
 994+ 911F CD A0 7F         call Guarda_foto_registros
 995+ 9122 3A F5 88         ld a,(Ctrl_1)
 996+ 9125 CB 87            res 0,a
 997+ 9127 32 F5 88         ld (Ctrl_1),a
 998+ 912A E1               pop hl
 999+ 912B C9               ret
1000+ 912C
1001+ 912C              ;---------------------------------------------------
1002+ 912C              ;
1003+ 912C              ;   18/07/23
1004+ 912C              ;
1005+ 912C
1006+ 912C              Mueve_disparo
1007+ 912C
1008+ 912C              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1009+ 912C              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1010+ 912C              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1011+ 912C
1012+ 912C E5               push hl
1013+ 912D
1014+ 912D 7E               ld a,(hl)
1015+ 912E
1016+ 912E 06 04            ld b,4
1017+ 9130 23           1 inc hl
1018+ 9131 10 FD            djnz 1B
1019+ 9133
1020+ 9133              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1021+ 9133
1022+ 9133 CD 17 8C         call Extrae_address
1023+ 9136
1024+ 9136 E6 01            and 1
1025+ 9138 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1026+ 913A
1027+ 913A              ; Disparo hacia arriba, (Amadeus).
1028+ 913A
1029+ 913A              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1030+ 913A              ; _ de la dificultad.
1031+ 913A
1032+ 913A CD 8C 95         call PreviousScan
1033+ 913D CD 8C 95         call PreviousScan
1034+ 9140 CD 8C 95         call PreviousScan
1035+ 9143 CD 8C 95         call PreviousScan
1036+ 9146
1037+ 9146              ; Detecta si el disparo de Amadeus sale de pantalla:
1038+ 9146
1039+ 9146 7C               ld a,h
1040+ 9147 FE 40            cp $40
1041+ 9149 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1042+ 914B
1043+ 914B              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1044+ 914B
1045+ 914B EB               ex de,hl
1046+ 914C 06 04            ld b,4
1047+ 914E 2B           6 dec hl
1048+ 914F 10 FD            djnz 6B
1049+ 9151
1050+ 9151 CD 82 91         call Elimina_disparo_de_base_de_datos
1051+ 9154 E1               pop hl
1052+ 9155 18 10            jr 7F
1053+ 9157
1054+ 9157              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1055+ 9157              ; HL contiene el puntero de impresión del disparo.
1056+ 9157              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1057+ 9157
1058+ 9157 D5           3 push de
1059+ 9158 C5               push bc
1060+ 9159
1061+ 9159 CD 15 8F         call Comprueba_Colision
1062+ 915C
1063+ 915C              ; B="$80", no hay colisión. B="$81", existe colisión.
1064+ 915C
1065+ 915C 78               ld a,b
1066+ 915D
1067+ 915D C1               pop bc
1068+ 915E D1               pop de
1069+ 915F
1070+ 915F EB               ex de,hl
1071+ 9160
1072+ 9160 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1073+ 9161 23               inc hl                                      ; _ movimiento.
1074+ 9162 72               ld (hl),d
1075+ 9163
1076+ 9163 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1077+ 9164
1078+ 9164 23               inc hl                                      ; _ en curso.
1079+ 9165 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1080+ 9166 2B               dec hl
1081+ 9167
1082+ 9167 C9           7 ret
1083+ 9168
1084+ 9168              ; Disparo hacia abajo, (Entidad).
1085+ 9168
1086+ 9168 3A 25 89     2 ld a,(Velocidad_disparo_entidades)
1087+ 916B 47               ld b,a
1088+ 916C
1089+ 916C CD 7D 95     4 call NextScan
1090+ 916F 10 FB            djnz 4B
1091+ 9171
1092+ 9171              ; Detecta si el disparo de la entidad sale de la pantalla.
1093+ 9171
1094+ 9171 7C               ld a,h
1095+ 9172 FE 58            cp $58
1096+ 9174 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1097+ 9176
1098+ 9176 EB               ex de,hl
1099+ 9177 06 04            ld b,4
1100+ 9179 2B           5 dec hl
1101+ 917A 10 FD            djnz 5B
1102+ 917C
1103+ 917C CD 82 91         call Elimina_disparo_de_base_de_datos
1104+ 917F E1               pop hl
1105+ 9180 18 E5            jr 7B
1106+ 9182
1107+ 9182              ; HL apunta al primer byte de la base de datos del disparo.
1108+ 9182
1109+ 9182 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1110+ 9185 AF               xor a
1111+ 9186 77               ld (hl),a
1112+ 9187 54               ld d,h
1113+ 9188 5D               ld e,l
1114+ 9189 13               inc de
1115+ 918A ED B0            ldir
1116+ 918C C9               ret
1117+ 918D
1118+ 918D              ; -----------------------------------------------------------------
1119+ 918D              ;
1120+ 918D              ;   7/12/23
1121+ 918D              ;
1122+ 918D
1123+ 918D 3A 1A 89     Selector_de_impactos ld a,(Impacto2)
1124+ 9190 A7               and a
1125+ 9191 C8               ret z
1126+ 9192
1127+ 9192              ; Analizamos si hay impacto por disparos.
1128+ 9192
1129+ 9192              ; Primero analizamos si algún disparo impacta en Amadeus.
1130+ 9192
1131+ 9192 CB 4F            bit 1,a
1132+ 9194 28 07            jr z,1F
1133+ 9196
1134+ 9196 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1135+ 9199 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1136+ 919B 18 08            jr 2F
1137+ 919D
1138+ 919D CB 47        1 bit 0,a
1139+ 919F C8               ret z
1140+ 91A0
1141+ 91A0              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1142+ 91A0
1143+ 91A0 21 F5 88         ld hl,Ctrl_1
1144+ 91A3 CB D6            set 2,(hl)
1145+ 91A5
1146+ 91A5 C9           2 ret
1147+ 91A6
1148+ 91A6              ; -----------------------------------------------------------------
1149+ 91A6              ;
1150+ 91A6              ;   25/04/23
1151+ 91A6              ;
1152+ 91A6
1153+ 91A6              Determina_resultado_comparativa
1154+ 91A6
1155+ 91A6              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1156+ 91A6              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1157+ 91A6              ;
1158+ 91A6              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1159+ 91A6              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1160+ 91A6              ;
1161+ 91A6              ;   SBC HL,DE
1162+ 91A6
1163+ 91A6              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1164+ 91A6              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1165+ 91A6
1166+ 91A6              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1167+ 91A6              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1168+ 91A6
1169+ 91A6
1170+ 91A6 3A CA 88         ld a,(Cuad_objeto)
1171+ 91A9 FE 02            cp 2
1172+ 91AB 28 26            jr z,2F
1173+ 91AD 38 24            jr c,2F
1174+ 91AF
1175+ 91AF              ; Cuadrantes 3º y 4º
1176+ 91AF
1177+ 91AF E6 01            and 1
1178+ 91B1 28 10            jr z,4F
1179+ 91B3
1180+ 91B3              ; Cuadrante 3º
1181+ 91B3
1182+ 91B3 7C               ld a,h
1183+ 91B4 06 00            ld b,0
1184+ 91B6
1185+ 91B6 CD 41 92         call Compara_cositas_H3
1186+ 91B9
1187+ 91B9 04               inc b
1188+ 91BA 05               dec b
1189+ 91BB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1190+ 91BC
1191+ 91BC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1192+ 91BD 06 00            ld b,0
1193+ 91BF
1194+ 91BF CD 53 92         call Compara_cositas_L3
1195+ 91C2 C9               ret
1196+ 91C3
1197+ 91C3              ; Cuadrante 4º
1198+ 91C3
1199+ 91C3 7C           4 ld a,h
1200+ 91C4 06 00            ld b,0
1201+ 91C6
1202+ 91C6 CD 65 92         call Compara_cositas_H4
1203+ 91C9
1204+ 91C9 04               inc b
1205+ 91CA 05               dec b
1206+ 91CB C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1207+ 91CC
1208+ 91CC 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1209+ 91CD 06 00            ld b,0
1210+ 91CF
1211+ 91CF CD 7B 92         call Compara_cositas_L4
1212+ 91D2 C9               ret
1213+ 91D3
1214+ 91D3              ; Cuadrantes 1º y 2º.
1215+ 91D3
1216+ 91D3 28 10        2 jr z,3F
1217+ 91D5
1218+ 91D5              ; 1er Cuadrante
1219+ 91D5
1220+ 91D5 7C               ld a,h
1221+ 91D6 06 00            ld b,0
1222+ 91D8
1223+ 91D8 CD 19 92         call Compara_cositas_H1
1224+ 91DB
1225+ 91DB 04               inc b
1226+ 91DC 05               dec b
1227+ 91DD C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1228+ 91DE
1229+ 91DE 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1230+ 91DF 06 00            ld b,0
1231+ 91E1
1232+ 91E1 CD 2F 92         call Compara_cositas_L1
1233+ 91E4 C9               ret
1234+ 91E5
1235+ 91E5
1236+ 91E5              ; 2º Cuadrante
1237+ 91E5
1238+ 91E5 7C           3 ld a,h
1239+ 91E6 06 00            ld b,0
1240+ 91E8
1241+ 91E8 CD F5 91         call Compara_cositas_H2
1242+ 91EB
1243+ 91EB 04               inc b
1244+ 91EC 05               dec b
1245+ 91ED C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1246+ 91EE
1247+ 91EE 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1248+ 91EF 06 00            ld b,0
1249+ 91F1
1250+ 91F1 CD 07 92         call Compara_cositas_L2
1251+ 91F4 C9               ret
1252+ 91F5
1253+ 91F5 A7           Compara_cositas_H2 and a
1254+ 91F6 28 0D            jr z,1F
1255+ 91F8              ;    cp $fd
1256+ 91F8              ;    jr z,1F
1257+ 91F8              ;    cp $fe
1258+ 91F8              ;    jr z,1F
1259+ 91F8 FE FF            cp $ff
1260+ 91FA 28 09            jr z,1F
1261+ 91FC FE 01            cp $01
1262+ 91FE 28 05            jr z,1F
1263+ 9200 FE 02            cp $02
1264+ 9202 28 01            jr z,1F
1265+ 9204 C0               ret nz
1266+ 9205 04           1 inc b
1267+ 9206 C9               ret
1268+ 9207
1269+ 9207 A7           Compara_cositas_L2 and a
1270+ 9208 28 0D            jr z,1F
1271+ 920A              ;    cp $fd
1272+ 920A              ;    jr z,1F
1273+ 920A FE FE            cp $fe
1274+ 920C 28 09            jr z,1F
1275+ 920E FE FF            cp $ff
1276+ 9210 28 05            jr z,1F
1277+ 9212 FE 01            cp $01
1278+ 9214 28 01            jr z,1F
1279+ 9216              ;    cp $02
1280+ 9216              ;    jr z,1F
1281+ 9216 C0               ret nz
1282+ 9217 04           1 inc b
1283+ 9218 C9               ret
1284+ 9219
1285+ 9219 A7           Compara_cositas_H1 and a
1286+ 921A 28 11            jr z,1F
1287+ 921C              ;    cp $fd
1288+ 921C              ;    jr z,1F
1289+ 921C              ;    cp $fe
1290+ 921C              ;    jr z,1F
1291+ 921C FE FF            cp $ff
1292+ 921E 28 0D            jr z,1F
1293+ 9220 FE 01            cp $01
1294+ 9222 28 09            jr z,1F
1295+ 9224 FE 02            cp $02
1296+ 9226 28 05            jr z,1F
1297+ 9228 FE 03            cp $03
1298+ 922A 28 01            jr z,1F
1299+ 922C C0               ret nz
1300+ 922D 04           1 inc b
1301+ 922E C9               ret
1302+ 922F
1303+ 922F A7           Compara_cositas_L1 and a
1304+ 9230 28 0D            jr z,1F
1305+ 9232              ;    cp $fd
1306+ 9232              ;    jr z,1F
1307+ 9232              ;    cp $fe
1308+ 9232              ;    jr z,1F
1309+ 9232              ;    cp $ff
1310+ 9232              ;    jr z,1F
1311+ 9232 FE 01            cp $01
1312+ 9234 28 09            jr z,1F
1313+ 9236 FE 02            cp $02
1314+ 9238 28 05            jr z,1F
1315+ 923A FE 03            cp $03
1316+ 923C 28 01            jr z,1F
1317+ 923E C0               ret nz
1318+ 923F 04           1 inc b
1319+ 9240 C9               ret
1320+ 9241
1321+ 9241 A7           Compara_cositas_H3 and a
1322+ 9242 28 0D            jr z,1F
1323+ 9244              ;    cp $fd
1324+ 9244              ;    jr z,1F
1325+ 9244 FE FE            cp $fe
1326+ 9246 28 09            jr z,1F
1327+ 9248 FE FF            cp $ff
1328+ 924A 28 05            jr z,1F
1329+ 924C FE 01            cp $01
1330+ 924E 28 01            jr z,1F
1331+ 9250              ;    cp $02
1332+ 9250              ;    jr z,1F
1333+ 9250              ;    cp $03
1334+ 9250              ;    jr z,1F
1335+ 9250 C0               ret nz
1336+ 9251 04           1 inc b
1337+ 9252 C9               ret
1338+ 9253
1339+ 9253 A7           Compara_cositas_L3 and a
1340+ 9254 28 0D            jr z,1F
1341+ 9256              ;    cp $fd
1342+ 9256              ;    jr z,1F
1343+ 9256              ;    cp $fe
1344+ 9256              ;    jr z,1F
1345+ 9256              ;    cp $ff
1346+ 9256              ;    jr z,1F
1347+ 9256 FE 01            cp $01
1348+ 9258 28 09            jr z,1F
1349+ 925A FE 02            cp $02
1350+ 925C 28 05            jr z,1F
1351+ 925E FE 03            cp $03
1352+ 9260 28 01            jr z,1F
1353+ 9262 C0               ret nz
1354+ 9263 04           1 inc b
1355+ 9264 C9               ret
1356+ 9265
1357+ 9265 A7           Compara_cositas_H4 and a
1358+ 9266 28 11            jr z,1F
1359+ 9268 FE FD            cp $fd
1360+ 926A 28 0D            jr z,1F
1361+ 926C FE FE            cp $fe
1362+ 926E 28 09            jr z,1F
1363+ 9270 FE FF            cp $ff
1364+ 9272 28 05            jr z,1F
1365+ 9274 FE 01            cp $01
1366+ 9276 28 01            jr z,1F
1367+ 9278              ;    cp $02
1368+ 9278              ;    jr z,1F
1369+ 9278              ;    cp $03
1370+ 9278              ;    jr z,1F
1371+ 9278 C0               ret nz
1372+ 9279 04           1 inc b
1373+ 927A C9               ret
1374+ 927B
1375+ 927B A7           Compara_cositas_L4 and a
1376+ 927C 28 0D            jr z,1F
1377+ 927E              ;    cp $fd
1378+ 927E              ;    jr z,1F
1379+ 927E FE FE            cp $fe
1380+ 9280 28 09            jr z,1F
1381+ 9282 FE FF            cp $ff
1382+ 9284 28 05            jr z,1F
1383+ 9286 FE 01            cp $01
1384+ 9288 28 01            jr z,1F
1385+ 928A              ;    cp $02
1386+ 928A              ;    jr z,1F
1387+ 928A              ;    cp $03
1388+ 928A              ;    jr z,1F
1389+ 928A C0               ret nz
1390+ 928B 04           1 inc b
1391+ 928C C9               ret
# file closed: Disparo.asm
1539  928D              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 928D              ; ******************************************************************************************************************************************************************************************
   2+ 928D              ;
   3+ 928D              ; 26/06/23
   4+ 928D              ;
   5+ 928D              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 928D
   7+ 928D CD 71 95     Draw call Prepara_draw
   8+ 9290 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9291 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9292 28 05        	jr z,2F
  11+ 9294
  12+ 9294 3A CA 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9297 18 0C        	jr 1F
  14+ 9299
  15+ 9299 2A C8 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 929C 22 B8 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 929F CD 2E 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 92A2              ;													; _la esquina superior izquierda de la pantalla.
  19+ 92A2 CD D1 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 92A5
  21+ 92A5 3A E2 88     1 ld a,(Ctrl_0)
  22+ 92A8 CB 6F        	bit 5,a
  23+ 92AA 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 92AC
  25+ 92AC CD C4 92     	call Comprueba_limite_horizontal
  26+ 92AF CD 54 93     	call Comprueba_limite_vertical
  27+ 92B2
  28+ 92B2              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 92B2              ; -----------------------
  30+ 92B2              ; -----------------------
  31+ 92B2              ; -----------------------
  32+ 92B2
  33+ 92B2 CD A1 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 92B5 CD D8 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 92B8 CD 37 95     	call Define_rutina_de_impresion
  36+ 92BB
  37+ 92BB 3A E2 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 92BE CB AF        	res 5,a											; _a ser de utilidad.
  39+ 92C0 32 E2 88     	ld (Ctrl_0),a
  40+ 92C3
  41+ 92C3 C9           	ret
  42+ 92C4
  43+ 92C4              ; *******************************************************************************************************************************************************************************************
  44+ 92C4              ;	21/01/23
  45+ 92C4              ;
  46+ 92C4              ; 	Comprueba_limite_horizontal.
  47+ 92C4              ;
  48+ 92C4              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 92C4              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 92C4              ;
  51+ 92C4              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 92C4              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 92C4              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 92C4              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 92C4
  56+ 92C4
  57+ 92C4
  58+ 92C4 3A E2 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 92C7 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 92C9 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 92CB E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 92CD 32 E2 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 92D0 18 09            jr 6F
  64+ 92D2 CB 5F        1 bit 3,a
  65+ 92D4 28 0A            jr z,2F
  66+ 92D6 E6 F7            and $f7
  67+ 92D8 32 E2 88         ld (Ctrl_0),a
  68+ 92DB CD 2E 94     6 call Inicializacion
  69+ 92DE 18 5B            jr 5F
  70+ 92E0 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 92E1
  72+ 92E1              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 92E1              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 92E1
  75+ 92E1 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 92E2 2A F0 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 92E5 CD 90 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 92E8 67           	ld h,a
  79+ 92E9 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 92EA CD 90 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 92ED 67           	ld h,a
  82+ 92EE A7           	and a
  83+ 92EF ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 92F1 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 92F2 3A CA 88     	ld a,(Cuad_objeto)
  86+ 92F5 FE 02        	cp 2
  87+ 92F7 38 1E        	jr c,3F
  88+ 92F9 28 1C        	jr z,3F
  89+ 92FB 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 92FC 28 23            jr z,7F
  91+ 92FE 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9300 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 9302 E1           	pop hl
  94+ 9303
  95+ 9303              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 9303              ; _para indicar con E="2" en caso necesario.
  97+ 9303
  98+ 9303 E5               push hl
  99+ 9304 C5               push bc
 100+ 9305 CD 90 98     	call calcula_tercio
 101+ 9308 FE 01        	cp 1
 102+ 930A 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 930C CD 3C 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 930F 28 26            jr z,9F
 105+ 9311 38 24            jr c,9F
 106+ 9313 1E 00        11 ld e,0
 107+ 9315 18 22            jr 8F
 108+ 9317 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9318 28 07        	jr z, 7F
 110+ 931A 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 931C 1E 00         	ld e,0
 112+ 931E E1           	pop hl
 113+ 931F 18 04        	jr 4F
 114+ 9321 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 9323 18 15            jr 10F
 116+ 9325
 117+ 9325              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 9325              ; _para indicar con E="2" en caso necesario.
 119+ 9325
 120+ 9325 E5           4 push hl
 121+ 9326 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9327 CD 90 98     	call calcula_tercio
 123+ 932A FE 01        	cp 1
 124+ 932C 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 932E CD 3C 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 9331 28 04            jr z,9F
 127+ 9333 30 02            jr nc,9F
 128+ 9335 18 02        	jr 8F
 129+ 9337 1E 02        9 ld e,2
 130+ 9339 C1           8 pop bc
 131+ 933A E1           10 pop hl
 132+ 933B C9           5 ret
 133+ 933C
 134+ 933C              ; --------------------
 135+ 933C              ;
 136+ 933C              ; 25/08/22
 137+ 933C
 138+ 933C CD 90 98     Comprueba_centro call calcula_tercio
 139+ 933F 67               ld h,a
 140+ 9340 08           	ex af,af
 141+ 9341 FE 02        	cp 2
 142+ 9343 38 07        	jr c,1F
 143+ 9345 28 05        	jr z,1F
 144+ 9347 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 934A 18 03        	jr 2F
 146+ 934C 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 934F 08           2 ex af,af
 148+ 9350 A7               and a
 149+ 9351 ED 42            sbc hl,bc
 150+ 9353 C9               ret
 151+ 9354
 152+ 9354              ; *********************************************************************************************************************************************************************************************
 153+ 9354              ;
 154+ 9354              ;   16/8/22
 155+ 9354              ;
 156+ 9354              ;	Comprueba_limite_vertical
 157+ 9354              ;
 158+ 9354              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 9354              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 9354              ;
 161+ 9354
 162+ 9354 2A B8 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9357 7D           	ld a,l
 164+ 9358 E6 1F        	and $1F
 165+ 935A 57           	ld d,a
 166+ 935B 3A F2 88     	ld a,(Limite_vertical)
 167+ 935E BA           	cp d 											; Límite - Posición.
 168+ 935F 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9360 3A CA 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 9363 CB 47        	bit 0,a
 171+ 9365 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 9367
 173+ 9367              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 9367
 175+ 9367 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9368 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 936A
 178+ 936A              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 936A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 936A
 181+ 936A 3A BC 88         ld a,(Coordenada_X)
 182+ 936D 16 0F            ld d,Centro_izquierda
 183+ 936F A7               and a
 184+ 9370 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9371 28 1E            jr z,3F
 186+ 9373 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 9375              ;                                                    ; _salimos sin modificar nada.
 188+ 9375 18 0E            jr 2F
 189+ 9377 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9378 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 937A
 192+ 937A              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 937A              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 937A
 195+ 937A 3A BC 88         ld a,(Coordenada_X)
 196+ 937D 16 10            ld d,Centro_derecha
 197+ 937F A7               and a
 198+ 9380 92               sub d
 199+ 9381 28 0E            jr z,3F
 200+ 9383 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 9385              ;                                                    ; _salimos sin modificar nada.
 202+ 9385 CB 43        2 bit 0,e
 203+ 9387 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9389 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 938A CD 1E 94         call Modificaccionne
 206+ 938D C1           	pop bc
 207+ 938E CD 2E 94         call Inicializacion
 208+ 9391 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 9392
 210+ 9392              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 9392
 212+ 9392 C5           4 push bc
 213+ 9393 01 B7 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 9396 0A           	ld a,(bc)
 215+ 9397 3D           	dec a
 216+ 9398 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9399 7D           	ld a,l
 218+ 939A 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 939B CB 47        	bit 0,a
 220+ 939D 28 03        	jr z,5F
 221+ 939F 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 93A0 18 2E        	jr 7F
 223+ 93A2
 224+ 93A2              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 93A2
 226+ 93A2 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 93A3 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 93A4 3A E2 88     	ld a,(Ctrl_0)
 229+ 93A7 CB 4F        	bit 1,a
 230+ 93A9 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 93AB F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 93AC
 233+ 93AC              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 93AC
 235+ 93AC 1C               inc e
 236+ 93AD 1D               dec e
 237+ 93AE 20 07            jr nz,12F
 238+ 93B0 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 93B1 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 93B2 22 B8 88     	ld (Posicion_actual),hl
 241+ 93B5 18 44        13 jr 9F
 242+ 93B7 CB 43        12 bit 0,e
 243+ 93B9 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 93BB              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 93BB C1           	pop bc
 246+ 93BC 18 D3        	jr 3B
 247+ 93BE 80           14 add b
 248+ 93BF 6F               ld l,a
 249+ 93C0 22 B8 88     	ld (Posicion_actual),hl
 250+ 93C3 CD 1E 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 93C6 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 93C8 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 93CA 32 E2 88         ld (Ctrl_0),a
 254+ 93CD F1           	pop af
 255+ 93CE 18 2B        	jr 9F
 256+ 93D0
 257+ 93D0              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 93D0
 259+ 93D0 F5           7 push af
 260+ 93D1 3A E2 88     	ld a,(Ctrl_0)
 261+ 93D4 CB 47        	bit 0,a
 262+ 93D6 20 1D        	jr nz,8F
 263+ 93D8 F1           	pop af
 264+ 93D9
 265+ 93D9              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 93D9
 267+ 93D9 1C           	inc e
 268+ 93DA 1D               dec e
 269+ 93DB 20 07            jr nz,10F
 270+ 93DD 90           	sub b
 271+ 93DE 6F               ld l,a
 272+ 93DF 22 B8 88     	ld (Posicion_actual),hl
 273+ 93E2 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 93E4              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 93E4 CB 43        10 bit 0,e
 276+ 93E6 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 93E8              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 93E8 C1           	pop bc
 279+ 93E9 18 A6        	jr 3B
 280+ 93EB 90           16 sub b
 281+ 93EC 6F               ld l,a
 282+ 93ED 22 B8 88     	ld (Posicion_actual),hl
 283+ 93F0 CD 1E 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 93F3 18 06            jr 9F
 285+ 93F5 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 93F7 32 E2 88         ld (Ctrl_0),a
 287+ 93FA F1           	pop af
 288+ 93FB C1           9 pop bc
 289+ 93FC 1E 00        	ld e,0
 290+ 93FE CD 2E 94         call Inicializacion
 291+ 9401 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 9402 08           	ex af,af
 293+ 9403 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 9404 18 8B            jr 3B
 295+ 9406
 296+ 9406              ; --------------------
 297+ 9406
 298+ 9406 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9408 CD 8C 95     1 call PreviousScan
 300+ 940B 10 FB            djnz 1B
 301+ 940D 22 B8 88     	ld (Posicion_actual),hl
 302+ 9410 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 9411 C9           	ret
 304+ 9412
 305+ 9412              ; --------------------
 306+ 9412
 307+ 9412 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 9414 CD 7D 95     1 call NextScan
 309+ 9417 10 FB            djnz 1B
 310+ 9419 22 B8 88     	ld (Posicion_actual),hl
 311+ 941C AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 941D C9           	ret
 313+ 941E
 314+ 941E              ; --------------------
 315+ 941E              ;
 316+ 941E              ;	22/01/23
 317+ 941E              ;
 318+ 941E              ;	E="1". Hemos cambiado de cuadrante.
 319+ 941E              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 941E              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 941E
 322+ 941E
 323+ 941E              Modificaccionne
 324+ 941E
 325+ 941E 3A CA 88     	ld a,(Cuad_objeto)
 326+ 9421 FE 02        	cp 2
 327+ 9423 CC 06 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 9426 DC 06 94         call c,Modifica_Pos_actual
 329+ 9429 C8           	ret z
 330+ 942A CD 12 94         call Modifica_Pos_actual2
 331+ 942D C9               ret
 332+ 942E
 333+ 942E              ; *************************************************************************************************************************************************************************************************
 334+ 942E              ;
 335+ 942E              ;	13/8/22
 336+ 942E              ;
 337+ 942E              ;	Inicializacion
 338+ 942E              ;
 339+ 942E              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 942E              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 942E              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 942E              ;
 343+ 942E              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 942E              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 942E              ;	_ desaparece/aparece.
 346+ 942E
 347+ 942E              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 942E              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 942E              ;
 350+ 942E              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 942E              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 942E              ; 		   [E] ="0"
 353+ 942E
 354+ 942E              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 942E
 356+ 942E CD 90 98     Inicializacion call calcula_tercio
 357+ 9431 28 36        	jr z,primit
 358+ 9433 E6 02        	and 2
 359+ 9435 20 07        	jr nz,segmit
 360+ 9437 7D           	ld a,l
 361+ 9438 FE 7F        	cp $7f
 362+ 943A 38 2D        	jr c,primit
 363+ 943C 28 2B        	jr z,primit
 364+ 943E CD 9B 94     segmit call column
 365+ 9441 38 13        	jr c,tercuad
 366+ 9443 3E 04        cuarcuad ld a,4
 367+ 9445 32 CA 88     	ld (Cuad_objeto),a
 368+ 9448 21 20 48     	ld hl,$4820
 369+ 944B 22 F0 88     	ld (Limite_horizontal),hl
 370+ 944E 21 F2 88     	ld hl,Limite_vertical
 371+ 9451 36 0D        	ld (hl),$0d
 372+ 9453 08           	ex af,af
 373+ 9454 18 3C        	jr 1F
 374+ 9456              tercuad
 375+ 9456 3E 03        	ld a,3
 376+ 9458 32 CA 88     	ld (Cuad_objeto),a
 377+ 945B 21 20 48     	ld hl,$4820
 378+ 945E 22 F0 88     	ld (Limite_horizontal),hl
 379+ 9461 21 F2 88     	ld hl,Limite_vertical
 380+ 9464 36 12        	ld (hl),$12
 381+ 9466 08           	ex af,af
 382+ 9467 18 29        	jr 1F
 383+ 9469 CD 9B 94     primit call column
 384+ 946C 38 13        	jr c, primcuad
 385+ 946E              segcuad
 386+ 946E 3E 02        	ld a,2
 387+ 9470 32 CA 88     	ld (Cuad_objeto),a
 388+ 9473 21 C0 4F     	ld hl,$4fc0
 389+ 9476 22 F0 88     	ld (Limite_horizontal),hl
 390+ 9479 21 F2 88     	ld hl,Limite_vertical
 391+ 947C 36 0D        	ld (hl),$0d
 392+ 947E 08           	ex af,af
 393+ 947F 18 11        	jr 1F
 394+ 9481              primcuad
 395+ 9481 3E 01        	ld a,1
 396+ 9483 32 CA 88     	ld (Cuad_objeto),a
 397+ 9486 21 C0 4F     	ld hl,$4fc0
 398+ 9489 22 F0 88     	ld (Limite_horizontal),hl
 399+ 948C 21 F2 88     	ld hl,Limite_vertical
 400+ 948F 36 12        	ld (hl),$12
 401+ 9491 08           	ex af,af
 402+ 9492 CD 1B 9C     1 call Genera_coordenadas
 403+ 9495 21 E2 88     	ld hl,Ctrl_0
 404+ 9498 CB EE        	set 5,(hl)
 405+ 949A C9           	ret
 406+ 949B
 407+ 949B              ; ------------------------------------------------------------------------------------------------------------------
 408+ 949B
 409+ 949B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 949B              ;
 411+ 949B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 949B
 413+ 949B 7D           column ld a,l
 414+ 949C E6 1F        	and $1f
 415+ 949E FE 10         	cp $10
 416+ 94A0 C9            	ret
 417+ 94A1
 418+ 94A1              ; --------------------------------------------------------------------------------------------------------------------
 419+ 94A1              ;
 420+ 94A1              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 94A1              ;
 422+ 94A1              ; 14/12/22
 423+ 94A1              ;
 424+ 94A1              ;	Modifica: A y BC.
 425+ 94A1
 426+ 94A1 3A CA 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 94A4 E6 01        	and 1
 428+ 94A6 28 17        	jr z,1F
 429+ 94A8
 430+ 94A8              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 94A8
 432+ 94A8 3A BC 88     	ld a,(Coordenada_X)
 433+ 94AB 47           	ld b,a
 434+ 94AC 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 94AD 79           	ld a,c
 436+ 94AE 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 94AF 38 08        	jr c,2F
 438+ 94B1 47           	ld b,a
 439+ 94B2 79           	ld a,c
 440+ 94B3 90           	sub b
 441+ 94B4 32 EF 88     	ld (Columnas),a
 442+ 94B7 18 1B        	jr 4F
 443+ 94B9 79           2 ld a,c
 444+ 94BA 32 EF 88     	ld (Columnas),a
 445+ 94BD 18 15        	jr 4F
 446+ 94BF
 447+ 94BF              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 94BF
 449+ 94BF 3A BC 88     1 ld a,(Coordenada_X)
 450+ 94C2 81           	add c
 451+ 94C3 3D           	dec a
 452+ 94C4 D6 1F        	sub $1f
 453+ 94C6 38 08        	jr c,3F
 454+ 94C8 47           	ld b,a
 455+ 94C9 79           	ld a,c
 456+ 94CA 90           	sub b
 457+ 94CB 32 EF 88     	ld (Columnas),a
 458+ 94CE 18 04        	jr 4F
 459+ 94D0 79           3 ld a,c
 460+ 94D1 32 EF 88     	ld (Columnas),a
 461+ 94D4 D9           4 exx
 462+ 94D5 4F           	ld c,a
 463+ 94D6 D9           	exx
 464+ 94D7 C9            ret
 465+ 94D8
 466+ 94D8              ; --------------------------------------------------------------------------------------------------------------------
 467+ 94D8              ;
 468+ 94D8              ;   19/7/23
 469+ 94D8              ;
 470+ 94D8              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 94D8              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 94D8              ;
 473+ 94D8              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 94D8              ;			HL e IY Contienen (Puntero_objeto).
 475+ 94D8              ;
 476+ 94D8              ;	DESTRUYE: HL,B Y A.
 477+ 94D8
 478+ 94D8 3A CA 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 94DB FE 02        	cp 2
 480+ 94DD 38 18        	jr c,1F
 481+ 94DF 28 16        	jr z,1F
 482+ 94E1 E6 01        	and 1
 483+ 94E3 28 0D        	jr z,3F
 484+ 94E5
 485+ 94E5              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 94E5
 487+ 94E5 CD 2B 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 94E8
 489+ 94E8 7D           9 ld a,l
 490+ 94E9 E6 1F        	and $1f
 491+ 94EB 28 2A        	jr z,7F
 492+ 94ED 2B           	dec hl
 493+ 94EE 10 F8        	djnz 9B
 494+ 94F0 18 25        	jr 7F
 495+ 94F2
 496+ 94F2              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 94F2
 498+ 94F2 2A B8 88     3 ld hl,(Posicion_actual)
 499+ 94F5 18 20        	jr 7F
 500+ 94F7
 501+ 94F7 28 14        1 jr z,2F
 502+ 94F9
 503+ 94F9              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 94F9
 505+ 94F9 CD 2B 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 94FC
 507+ 94FC 7D           4 ld a,l
 508+ 94FD E6 1F        	and $1f
 509+ 94FF 28 03        	jr z,6F
 510+ 9501 2B           	dec hl
 511+ 9502 10 F8        	djnz 4B
 512+ 9504 06 0F        6 ld b,15
 513+ 9506 CD 8C 95     5 call PreviousScan
 514+ 9509 10 FB        	djnz 5B
 515+ 950B 18 0A        	jr 7F
 516+ 950D
 517+ 950D              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 950D
 519+ 950D CD 2B 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9510 06 0F        	ld b,15
 521+ 9512 CD 8C 95     8 call PreviousScan
 522+ 9515 10 FB        	djnz 8B
 523+ 9517
 524+ 9517 E5           7 push hl
 525+ 9518 DD E1        	pop ix
 526+ 951A
 527+ 951A 2A BA 88     	ld hl,(Puntero_objeto)
 528+ 951D E5           	push hl
 529+ 951E FD E1        	pop iy
 530+ 9520
 531+ 9520              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9520
 533+ 9520 3A E2 88     	ld a,(Ctrl_0)
 534+ 9523 CB 77        	bit 6,a
 535+ 9525 C8           	ret z
 536+ 9526
 537+ 9526              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 9526              ; _ entidad / Amadeus´.
 539+ 9526
 540+ 9526 DD 22 A8 85  	ld (p.imp.amadeus),ix
 541+ 952A
 542+ 952A C9           	ret
 543+ 952B
 544+ 952B              ; --------------------------------------------------------------------------------------------------------------------
 545+ 952B              ;
 546+ 952B              ;	2/1/23
 547+ 952B              ;
 548+ 952B              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 952B              ;
 550+ 952B              ;	Tras esta rutina tenemos:
 551+ 952B              ;
 552+ 952B              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 952B              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 952B              ;
 555+ 952B              ;	DESTRUYE!!!!! HL,B y A.
 556+ 952B
 557+ 952B 2A B8 88     Operandos ld hl,(Posicion_actual)
 558+ 952E 3A EF 88     	ld a,(Columnas)
 559+ 9531 3D           	dec a
 560+ 9532 20 01        	jr nz,1F
 561+ 9534 3C           	inc a
 562+ 9535 47           1 ld b,a
 563+ 9536 C9           	ret
 564+ 9537
 565+ 9537              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9537              ;
 567+ 9537              ;	3/1/23
 568+ 9537              ;
 569+ 9537              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9537              ;
 571+ 9537              ;	Destruye: A,B,HL y DE.
 572+ 9537
 573+ 9537              Define_rutina_de_impresion
 574+ 9537
 575+ 9537 3A B7 88     	ld a,(Columns)
 576+ 953A 47           	ld b,a
 577+ 953B 3A EF 88     	ld a,(Columnas)
 578+ 953E B8           	cp b
 579+ 953F 20 0D        	jr nz,2f
 580+ 9541
 581+ 9541              ;	La entidad se imprime entera.
 582+ 9541
 583+ 9541 21 60 96     	ld hl, Indice_entidades_completas
 584+ 9544 E6 01        	and 1
 585+ 9546 28 02        	jr z,1F
 586+ 9548
 587+ 9548 23           	inc hl
 588+ 9549 23           	inc hl
 589+ 954A
 590+ 954A CD 17 8C     1 call Extrae_address
 591+ 954D C9           	ret		;	ret
 592+ 954E
 593+ 954E              ;	La entidad no se imprime entera en pantalla.
 594+ 954E
 595+ 954E 3A CA 88     2 ld a,(Cuad_objeto)
 596+ 9551 E6 01        	and 1
 597+ 9553 28 17        	jr z,3F
 598+ 9555
 599+ 9555              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 9555
 601+ 9555 21 64 96     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9558 3A B7 88     4 ld a,(Columns)
 603+ 955B E6 01        	and 1
 604+ 955D 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 955F
 606+ 955F 23           	inc hl
 607+ 9560 23           	inc hl
 608+ 9561
 609+ 9561 3A EF 88     	ld a,(Columnas)
 610+ 9564 E6 01        	and 1
 611+ 9566 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9568
 613+ 9568 23           	inc hl
 614+ 9569 23           	inc hl
 615+ 956A
 616+ 956A 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 956C
 618+ 956C 21 6A 96     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 956F 18 E7        	jr 4B
 620+ 9571
 621+ 9571              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9571              ;
 623+ 9571              ;	Prepara_draw
 624+ 9571              ;
 625+ 9571              ;	Es una rutina de carga.
 626+ 9571              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9571              ;
 628+ 9571              ;	FUNCIONAMIENTO:
 629+ 9571              ;
 630+ 9571              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9571              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9571              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9571              ;
 634+ 9571              ;	DESTRUYE:
 635+ 9571              ;
 636+ 9571              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9571
 638+ 9571 21 B6 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 9574 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 9575 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 9576 4E           	ld c,(hl)
 642+ 9577 2A B8 88     	ld hl,(Posicion_actual)
 643+ 957A 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 957C C9           	ret
 645+ 957D
 646+ 957D              ;----------------------------------------------------------------------------------------------------------------
 647+ 957D              ;
 648+ 957D              ;	5/08/22
 649+ 957D              ;
 650+ 957D              ;   NextScan.
 651+ 957D              ;
 652+ 957D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 957D              ;
 654+ 957D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 957D              ;
 656+ 957D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 957D              ;
 658+ 957D              ;       DESTRUIDOS: AF y HL !!!
 659+ 957D              ;
 660+ 957D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 957D              ;
 662+ 957D
 663+ 957D 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 957E 7C               ld a,h
 665+ 957F E6 07            and 7
 666+ 9581 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 9582
 668+ 9582 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 9583 C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 9585 6F               ld l,a
 671+ 9586 D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 9587
 673+ 9587 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9588 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 958A 67               ld h,a
 676+ 958B C9               ret
 677+ 958C
 678+ 958C              ;----------------------------------------------------------------------------------------------------------------
 679+ 958C              ;
 680+ 958C              ;	5/08/22
 681+ 958C              ;
 682+ 958C              ;   PreviousScan.
 683+ 958C              ;
 684+ 958C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 958C              ;
 686+ 958C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 958C              ;
 688+ 958C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 958C              ;
 690+ 958C              ;       DESTRUIDOS: AF y HL !!!
 691+ 958C              ;
 692+ 958C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 958C              ;
 694+ 958C
 695+ 958C 7C           PreviousScan ld a,h
 696+ 958D 25               dec h               ; Dec H.
 697+ 958E E6 07            and 7
 698+ 9590 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9591
 700+ 9591 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 9592 D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 9594 6F               ld l,a
 703+ 9595 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 9596
 705+ 9596 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 9597 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9599 67               ld h,a
 708+ 959A C9               ret
 709+ 959B
 710+ 959B              ; -----------------------------------------------------------------------------------
 711+ 959B              ;
 712+ 959B              ;	31/7/23
 713+ 959B              ;
 714+ 959B              ;	Rutina principal de pintado de entidades.
 715+ 959B              ;	Extrae la foto del frame, (entidades).
 716+ 959B
 717+ 959B              Extrae_foto_entidades
 718+ 959B
 719+ 959B 21 01 70     	ld hl,Album_de_fotos+1
 720+ 959E 7E           	ld a,(hl)
 721+ 959F A7           	and a
 722+ 95A0 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 95A1
 724+ 95A1              ;	No hay datos, (entidades para pintar en este frame).
 725+ 95A1
 726+ 95A1 3A 01 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 95A4 A7           	and a
 728+ 95A5 C8           	ret z
 729+ 95A6
 730+ 95A6              ; -----------------------------------
 731+ 95A6
 732+ 95A6 ED 73 06 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 95AA 31 00 70     	ld sp,Album_de_fotos
 734+ 95AD
 735+ 95AD FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 95AF E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 95B0 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 95B1
 739+ 95B1 ED 73 08 89  	ld (Stack_2),sp
 740+ 95B5 ED 7B 06 89  	ld sp,(Stack)
 741+ 95B9
 742+ 95B9              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 95B9
 744+ 95B9 3E CD        	ld a,$cd
 745+ 95BB 32 C3 95     	ld (Imprime),a
 746+ 95BE EB           	ex de,hl
 747+ 95BF 22 C4 95     	ld (Imprime+1),hl
 748+ 95C2 EB           	ex de,hl
 749+ 95C3
 750+ 95C3              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 95C3
 752+ 95C3 00 00 00     Imprime db 0,0,0
 753+ 95C6
 754+ 95C6 ED 73 06 89  	ld (Stack),sp
 755+ 95CA
 756+ 95CA 3A 01 89     	ld a,(Numero_de_malotes)
 757+ 95CD 3D           	dec a
 758+ 95CE 28 09        	jr z,1F
 759+ 95D0 32 01 89      	ld (Numero_de_malotes),a
 760+ 95D3
 761+ 95D3 ED 7B 08 89  	ld sp,(Stack_2)
 762+ 95D7 18 D4        	jr 2B
 763+ 95D9
 764+ 95D9 AF           1 xor a
 765+ 95DA 32 08 89     	ld (Stack_2),a
 766+ 95DD
 767+ 95DD C9           	ret
 768+ 95DE
 769+ 95DE              ; -----------------------------------------------------------------------------------
 770+ 95DE              ;
 771+ 95DE              ;	28/2/23
 772+ 95DE              ;
 773+ 95DE              ;	Pinta los disparos generados.
 774+ 95DE
 775+ 95DE              Extrae_foto_disparos
 776+ 95DE
 777+ 95DE 21 57 70     	ld hl,Album_de_fotos_disparos+1
 778+ 95E1 7E               ld a,(hl)
 779+ 95E2 A7               and a
 780+ 95E3 C8               ret z
 781+ 95E4
 782+ 95E4 3A 15 89     	ld a,(Numero_de_disparotes)
 783+ 95E7 A7           	and a
 784+ 95E8 C8           	ret z
 785+ 95E9 ED 73 06 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 95ED 31 56 70     	ld sp,Album_de_fotos_disparos
 787+ 95F0
 788+ 95F0 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 95F2 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 95F3 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 95F4
 792+ 95F4 ED 73 08 89  	ld (Stack_2),sp
 793+ 95F8 ED 7B 06 89  	ld sp,(Stack)
 794+ 95FC
 795+ 95FC              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 95FC
 797+ 95FC 3E CD        	ld a,$cd
 798+ 95FE 32 06 96     	ld (Imprime2),a
 799+ 9601 EB           	ex de,hl
 800+ 9602 22 07 96     	ld (Imprime2+1),hl
 801+ 9605 EB           	ex de,hl
 802+ 9606
 803+ 9606              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 9606
 805+ 9606 00 00 00     Imprime2 db 0,0,0
 806+ 9609
 807+ 9609 3A 15 89     	ld a,(Numero_de_disparotes)
 808+ 960C 3D           	dec a
 809+ 960D 28 09        	jr z,1F
 810+ 960F 32 15 89      	ld (Numero_de_disparotes),a
 811+ 9612
 812+ 9612 ED 7B 08 89  	ld sp,(Stack_2)
 813+ 9616 18 D8        	jr 2B
 814+ 9618
 815+ 9618 AF           1 xor a
 816+ 9619 32 08 89     	ld (Stack_2),a
 817+ 961C C9           	ret
 818+ 961D
 819+ 961D              ; -----------------------------------------------------------------------------------
 820+ 961D              ;
 821+ 961D              ;	4/9/23
 822+ 961D              ;
 823+ 961D              ;	Rutina principal de pintado de Amadeus.
 824+ 961D              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 961D
 826+ 961D 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 9620 7E           	ld a,(hl)
 828+ 9621 A7           	and a
 829+ 9622 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 9623
 831+ 9623 3A 01 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 9626 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 9627 C8           	ret z
 834+ 9628
 835+ 9628              ; -----------------------------------
 836+ 9628
 837+ 9628 ED 73 06 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 962C 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 839+ 962F
 840+ 962F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 9631 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 9632 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 9633
 844+ 9633 ED 73 08 89  	ld (Stack_2),sp
 845+ 9637 ED 7B 06 89  	ld sp,(Stack)
 846+ 963B
 847+ 963B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 963B
 849+ 963B 3E CD        	ld a,$cd
 850+ 963D 32 45 96     	ld (Imprime_Amadeus),a
 851+ 9640 EB           	ex de,hl
 852+ 9641 22 46 96     	ld (Imprime_Amadeus+1),hl
 853+ 9644 EB           	ex de,hl
 854+ 9645
 855+ 9645              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 9645
 857+ 9645 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9648
 859+ 9648 ED 73 06 89  	ld (Stack),sp
 860+ 964C
 861+ 964C 3A 01 89     	ld a,(Numero_de_malotes)
 862+ 964F 3D           	dec a
 863+ 9650 28 09        	jr z,1F
 864+ 9652 32 01 89      	ld (Numero_de_malotes),a
 865+ 9655
 866+ 9655 ED 7B 08 89  	ld sp,(Stack_2)
 867+ 9659 18 D4        	jr 2B
 868+ 965B
 869+ 965B AF           1 xor a
 870+ 965C 32 08 89     	ld (Stack_2),a
 871+ 965F
 872+ 965F C9           	ret
# file closed: Draw_XOR.asm
1540  9660              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9660              ;   índices de Rutinas de impresión.
   2+ 9660
   3+ 9660 70 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9662 9D 96            defw Pinta_Amadeus_3x2
   5+ 9664
   6+ 9664 F3 96        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9666 93 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9668 47 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 966A
  10+ 966A 1D 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 966C 21 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 966E D5 97            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9670
  14+ 9670
  15+ 9670              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9670              ;
  17+ 9670              ;   12/12/22
  18+ 9670              ;
  19+ 9670              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9670              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9670              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9670              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9670              ;
  24+ 9670              ;   Modifica: DE y HL.
  25+ 9670
  26+ 9670 ED 73 06 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9674 FD F9        	ld sp,iy
  28+ 9676 06 10            ld b,16
  29+ 9678 D1           1 pop de
  30+ 9679 7B               ld a,e
  31+ 967A AE               xor (hl)
  32+ 967B 77           	ld (hl),a
  33+ 967C 23           	inc hl
  34+ 967D 7A               ld a,d
  35+ 967E AE               xor (hl)
  36+ 967F 77           	ld (hl),a
  37+ 9680 2B           	dec hl
  38+ 9681 24           	inc h
  39+ 9682 7C               ld a,h
  40+ 9683 E6 07            and 7
  41+ 9685 20 0A            jr nz,2F
  42+ 9687 7D               ld a,l
  43+ 9688 C6 20            add a,$20
  44+ 968A 6F               ld l,a
  45+ 968B 38 04            jr c,2F
  46+ 968D 7C               ld a,h
  47+ 968E D6 08            sub 8
  48+ 9690 67               ld h,a
  49+ 9691 7C           2 ld a,h
  50+ 9692 FE 58            cp $58
  51+ 9694 28 02            jr z,3F
  52+ 9696 10 E0            djnz 1B
  53+ 9698 ED 7B 06 89  3 ld sp,(Stack)
  54+ 969C C9           	ret
  55+ 969D
  56+ 969D ED 73 06 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96A1 FD F9        	ld sp,iy
  58+ 96A3 06 08            ld b,8
  59+ 96A5 D1           1 pop de
  60+ 96A6 7B               ld a,e
  61+ 96A7 AE               xor (hl)
  62+ 96A8 77           	ld (hl),a
  63+ 96A9 23           	inc hl
  64+ 96AA 7A               ld a,d
  65+ 96AB AE               xor (hl)
  66+ 96AC 77           	ld (hl),a
  67+ 96AD 23           	inc hl
  68+ 96AE D1           	pop de
  69+ 96AF 7B               ld a,e
  70+ 96B0 AE               xor (hl)
  71+ 96B1 77           	ld (hl),a
  72+ 96B2 2B           	dec hl
  73+ 96B3 2B           	dec hl
  74+ 96B4 24           	inc h
  75+ 96B5 7C               ld a,h
  76+ 96B6 E6 07            and 7
  77+ 96B8 20 0A            jr nz,2F
  78+ 96BA 7D               ld a,l
  79+ 96BB C6 20            add a,$20
  80+ 96BD 6F               ld l,a
  81+ 96BE 38 04            jr c,2F
  82+ 96C0 7C               ld a,h
  83+ 96C1 D6 08            sub 8
  84+ 96C3 67               ld h,a
  85+ 96C4 7C           2 ld a,h
  86+ 96C5 FE 58            cp $58
  87+ 96C7 28 25            jr z,4F
  88+ 96C9 7A               ld a,d
  89+ 96CA AE               xor (hl)
  90+ 96CB 77               ld (hl),a
  91+ 96CC D1           	pop de
  92+ 96CD 23           	inc hl
  93+ 96CE 7B               ld a,e
  94+ 96CF AE               xor (hl)
  95+ 96D0 77           	ld (hl),a
  96+ 96D1 23           	inc hl
  97+ 96D2 7A               ld a,d
  98+ 96D3 AE               xor (hl)
  99+ 96D4 77           	ld (hl),a
 100+ 96D5 2B           	dec hl
 101+ 96D6 2B           	dec hl
 102+ 96D7 24           	inc h
 103+ 96D8 7C               ld a,h
 104+ 96D9 E6 07            and 7
 105+ 96DB 20 0A            jr nz,3F
 106+ 96DD 7D               ld a,l
 107+ 96DE C6 20            add a,$20
 108+ 96E0 6F               ld l,a
 109+ 96E1 38 04            jr c,3F
 110+ 96E3 7C               ld a,h
 111+ 96E4 D6 08            sub 8
 112+ 96E6 67               ld h,a
 113+ 96E7 7C           3 ld a,h
 114+ 96E8 FE 58            cp $58
 115+ 96EA 28 02            jr z,4F
 116+ 96EC 10 B7            djnz 1B
 117+ 96EE ED 7B 06 89  4 ld sp,(Stack)
 118+ 96F2 C9           	ret
 119+ 96F3
 120+ 96F3              ; ---------------------------------------------------
 121+ 96F3
 122+ 96F3 ED 73 06 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 96F7 FD F9        	ld sp,iy
 124+ 96F9
 125+ 96F9              ; >>>
 126+ 96F9
 127+ 96F9 06 10            ld b,16
 128+ 96FB D1           1 pop de
 129+ 96FC 7A           	ld a,d
 130+ 96FD AE           	xor (hl)
 131+ 96FE 77           	ld (hl),a
 132+ 96FF 24           	inc h
 133+ 9700 7C               ld a,h
 134+ 9701 E6 07            and 7
 135+ 9703 20 0C            jr nz,2F
 136+ 9705 7D               ld a,l
 137+ 9706 C6 20            add a,$20
 138+ 9708 6F               ld l,a
 139+ 9709 38 06            jr c,2F
 140+ 970B 7C               ld a,h
 141+ 970C D6 08            sub 8
 142+ 970E 67               ld h,a
 143+ 970F 18 00            jr 2F
 144+ 9711 7C           2 ld a,h
 145+ 9712 FE 58            cp $58
 146+ 9714 28 02            jr z,3F
 147+ 9716 10 E3            djnz 1B
 148+ 9718 ED 7B 06 89  3 ld sp,(Stack)
 149+ 971C C9           	ret
 150+ 971D
 151+ 971D ED 73 06 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9721 FD F9        	ld sp,iy
 153+ 9723
 154+ 9723              ; >>>
 155+ 9723
 156+ 9723 06 10            ld b,16
 157+ 9725 D1           1 pop de
 158+ 9726 7B           	ld a,e
 159+ 9727 AE           	xor (hl)
 160+ 9728 77           	ld (hl),a
 161+ 9729 24           	inc h
 162+ 972A 7C               ld a,h
 163+ 972B E6 07            and 7
 164+ 972D 20 0C            jr nz,2F
 165+ 972F 7D               ld a,l
 166+ 9730 C6 20            add a,$20
 167+ 9732 6F               ld l,a
 168+ 9733 38 06            jr c,2F
 169+ 9735 7C               ld a,h
 170+ 9736 D6 08            sub 8
 171+ 9738 67               ld h,a
 172+ 9739 18 00            jr 2F
 173+ 973B 7C           2 ld a,h
 174+ 973C FE 58            cp $58
 175+ 973E 28 02            jr z,3F
 176+ 9740 10 E3            djnz 1B
 177+ 9742 ED 7B 06 89  3 ld sp,(Stack)
 178+ 9746 C9           	ret
 179+ 9747
 180+ 9747              ; ---------------------------------------------------
 181+ 9747
 182+ 9747 ED 73 06 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 974B FD F9        	ld sp,iy
 184+ 974D 06 08            ld b,8
 185+ 974F D1           1 pop de
 186+ 9750 7A           	ld a,d
 187+ 9751 AE           	xor (hl)
 188+ 9752 77           	ld (hl),a
 189+ 9753 23           	inc hl
 190+ 9754 D1           	pop de
 191+ 9755 7B           	ld a,e
 192+ 9756 AE           	xor (hl)
 193+ 9757 77           	ld (hl),a
 194+ 9758 2B           	dec hl
 195+ 9759 24            	inc h
 196+ 975A 7C               ld a,h
 197+ 975B E6 07            and 7
 198+ 975D 20 0A            jr nz,2F
 199+ 975F 7D               ld a,l
 200+ 9760 C6 20            add a,$20
 201+ 9762 6F               ld l,a
 202+ 9763 38 04            jr c,2F
 203+ 9765 7C               ld a,h
 204+ 9766 D6 08            sub 8
 205+ 9768 67               ld h,a
 206+ 9769 7C           2 ld a,h
 207+ 976A FE 58            cp $58
 208+ 976C 28 20            jr z,4F
 209+ 976E D1               pop de
 210+ 976F 7B           	ld a,e
 211+ 9770 AE           	xor (hl)
 212+ 9771 77           	ld (hl),a
 213+ 9772 23           	inc hl
 214+ 9773 7A           	ld a,d
 215+ 9774 AE           	xor (hl)
 216+ 9775 77           	ld (hl),a
 217+ 9776 2B           	dec hl
 218+ 9777 24           	inc h
 219+ 9778 7C               ld a,h
 220+ 9779 E6 07            and 7
 221+ 977B 20 0A            jr nz,3F
 222+ 977D 7D               ld a,l
 223+ 977E C6 20            add a,$20
 224+ 9780 6F               ld l,a
 225+ 9781 38 04            jr c,3F
 226+ 9783 7C               ld a,h
 227+ 9784 D6 08            sub 8
 228+ 9786 67               ld h,a
 229+ 9787 7C           3 ld a,h
 230+ 9788 FE 58            cp $58
 231+ 978A 28 02            jr z,4F
 232+ 978C 10 C1            djnz 1B
 233+ 978E ED 7B 06 89  4 ld sp,(Stack)
 234+ 9792 C9           	ret
 235+ 9793
 236+ 9793 ED 73 06 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9797 FD F9        	ld sp,iy
 238+ 9799 06 08            ld b,8
 239+ 979B D1           1 pop de
 240+ 979C D1           	pop de
 241+ 979D 7B           	ld a,e
 242+ 979E AE           	xor (hl)
 243+ 979F 77           	ld (hl),a
 244+ 97A0 24            	inc h
 245+ 97A1 7C               ld a,h
 246+ 97A2 E6 07            and 7
 247+ 97A4 20 0A            jr nz,2F
 248+ 97A6 7D               ld a,l
 249+ 97A7 C6 20            add a,$20
 250+ 97A9 6F               ld l,a
 251+ 97AA 38 04            jr c,2F
 252+ 97AC 7C               ld a,h
 253+ 97AD D6 08            sub 8
 254+ 97AF 67               ld h,a
 255+ 97B0 7C           2 ld a,h
 256+ 97B1 FE 58            cp $58
 257+ 97B3 28 1B            jr z,4F
 258+ 97B5 D1               pop de
 259+ 97B6 7A           	ld a,d
 260+ 97B7 AE           	xor (hl)
 261+ 97B8 77           	ld (hl),a
 262+ 97B9 24           	inc h
 263+ 97BA 7C               ld a,h
 264+ 97BB E6 07            and 7
 265+ 97BD 20 0A            jr nz,3F
 266+ 97BF 7D               ld a,l
 267+ 97C0 C6 20            add a,$20
 268+ 97C2 6F               ld l,a
 269+ 97C3 38 04            jr c,3F
 270+ 97C5 7C               ld a,h
 271+ 97C6 D6 08            sub 8
 272+ 97C8 67               ld h,a
 273+ 97C9 7C           3 ld a,h
 274+ 97CA FE 58            cp $58
 275+ 97CC 28 02            jr z,4F
 276+ 97CE 10 CB            djnz 1B
 277+ 97D0 ED 7B 06 89  4 ld sp,(Stack)
 278+ 97D4 C9           	ret
 279+ 97D5
 280+ 97D5 ED 73 06 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 97D9 FD F9        	ld sp,iy
 282+ 97DB 06 08            ld b,8
 283+ 97DD D1           1 pop de
 284+ 97DE 7B           	ld a,e
 285+ 97DF AE           	xor (hl)
 286+ 97E0 77           	ld (hl),a
 287+ 97E1 23           	inc hl
 288+ 97E2 7A           	ld a,d
 289+ 97E3 AE           	xor (hl)
 290+ 97E4 77           	ld (hl),a
 291+ 97E5 2B           	dec hl
 292+ 97E6 24             	inc h
 293+ 97E7 7C               ld a,h
 294+ 97E8 E6 07            and 7
 295+ 97EA 20 0A            jr nz,2F
 296+ 97EC 7D               ld a,l
 297+ 97ED C6 20            add a,$20
 298+ 97EF 6F               ld l,a
 299+ 97F0 38 04            jr c,2F
 300+ 97F2 7C               ld a,h
 301+ 97F3 D6 08            sub 8
 302+ 97F5 67               ld h,a
 303+ 97F6 7C           2 ld a,h
 304+ 97F7 FE 58            cp $58
 305+ 97F9 28 21            jr z,4F
 306+ 97FB D1               pop de
 307+ 97FC 7A           	ld a,d
 308+ 97FD AE           	xor (hl)
 309+ 97FE 77           	ld (hl),a
 310+ 97FF 23           	inc hl
 311+ 9800 D1               pop de
 312+ 9801 7B           	ld a,e
 313+ 9802 AE           	xor (hl)
 314+ 9803 77           	ld (hl),a
 315+ 9804 2B           	dec hl
 316+ 9805 24           	inc h
 317+ 9806 7C               ld a,h
 318+ 9807 E6 07            and 7
 319+ 9809 20 0A            jr nz,3F
 320+ 980B 7D               ld a,l
 321+ 980C C6 20            add a,$20
 322+ 980E 6F               ld l,a
 323+ 980F 38 04            jr c,3F
 324+ 9811 7C               ld a,h
 325+ 9812 D6 08            sub 8
 326+ 9814 67               ld h,a
 327+ 9815 7C           3 ld a,h
 328+ 9816 FE 58            cp $58
 329+ 9818 28 02            jr z,4F
 330+ 981A 10 C1            djnz 1B
 331+ 981C ED 7B 06 89  4 ld sp,(Stack)
 332+ 9820 C9           	ret
 333+ 9821
 334+ 9821 ED 73 06 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9825 FD F9        	ld sp,iy
 336+ 9827 06 08            ld b,8
 337+ 9829 D1           1 pop de
 338+ 982A 7B           	ld a,e
 339+ 982B AE           	xor (hl)
 340+ 982C 77           	ld (hl),a
 341+ 982D 24            	inc h
 342+ 982E 7C               ld a,h
 343+ 982F E6 07            and 7
 344+ 9831 20 0A            jr nz,2F
 345+ 9833 7D               ld a,l
 346+ 9834 C6 20            add a,$20
 347+ 9836 6F               ld l,a
 348+ 9837 38 04            jr c,2F
 349+ 9839 7C               ld a,h
 350+ 983A D6 08            sub 8
 351+ 983C 67               ld h,a
 352+ 983D 7C           2 ld a,h
 353+ 983E FE 58            cp $58
 354+ 9840 28 1C            jr z,4F
 355+ 9842 D1               pop de
 356+ 9843 7A           	ld a,d
 357+ 9844 AE           	xor (hl)
 358+ 9845 77           	ld (hl),a
 359+ 9846 24           	inc h
 360+ 9847 7C               ld a,h
 361+ 9848 E6 07            and 7
 362+ 984A 20 0A            jr nz,3F
 363+ 984C 7D               ld a,l
 364+ 984D C6 20            add a,$20
 365+ 984F 6F               ld l,a
 366+ 9850 38 04            jr c,3F
 367+ 9852 7C               ld a,h
 368+ 9853 D6 08            sub 8
 369+ 9855 67               ld h,a
 370+ 9856 7C           3 ld a,h
 371+ 9857 FE 58            cp $58
 372+ 9859 28 03            jr z,4F
 373+ 985B D1               pop de
 374+ 985C 10 CB            djnz 1B
 375+ 985E ED 7B 06 89  4 ld sp,(Stack)
 376+ 9862 C9           	ret
 377+ 9863
 378+ 9863              ; ---------------------------------------------------
 379+ 9863              ;
 380+ 9863              ;   27/02/23
 381+ 9863              ;
 382+ 9863              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9863              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9863              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9863
 386+ 9863 ED 73 06 89  Pinta_Disparo ld (Stack),sp
 387+ 9867 FD F9            ld sp,iy
 388+ 9869 06 03            ld b,3
 389+ 986B D1           1 pop de
 390+ 986C 7B               ld a,e
 391+ 986D AE               xor (hl)
 392+ 986E 77               ld (hl),a
 393+ 986F 23               inc hl
 394+ 9870 7A               ld a,d
 395+ 9871 AE               xor (hl)
 396+ 9872 77               ld (hl),a
 397+ 9873 2B               dec hl
 398+ 9874
 399+ 9874 24               inc h
 400+ 9875 7C               ld a,h
 401+ 9876 E6 07            and 7
 402+ 9878 20 0A            jr nz,2F
 403+ 987A 7D               ld a,l
 404+ 987B C6 20            add a,$20
 405+ 987D 6F               ld l,a
 406+ 987E 38 04            jr c,2F
 407+ 9880 7C               ld a,h
 408+ 9881 D6 08            sub 8
 409+ 9883 67               ld h,a
 410+ 9884 7C           2 ld a,h
 411+ 9885 FE 58            cp $58
 412+ 9887 28 02            jr z,3F
 413+ 9889
 414+ 9889 10 E0            djnz 1B
 415+ 988B ED 7B 06 89  3 ld sp,(Stack)
 416+ 988F C9               ret
 417+ 9890
# file closed: Rutinas_de_impresion_sprites.asm
1541  9890              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9890              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9890              ;
   3+ 9890              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9890              ;
   5+ 9890              ; *****************************************************************************************************************************************************************************************
   6+ 9890              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9890
   8+ 9890 7C           calcula_tercio ld a,h
   9+ 9891 E6 18        	and $18
  10+ 9893 CB 2F        	sra a
  11+ 9895 CB 2F        	sra a
  12+ 9897 CB 2F        	sra a
  13+ 9899 C9           	ret
  14+ 989A
# file closed: calcula_tercio.asm
1542  989A              	include "Cls.asm"
# file opened: Cls.asm
   1+ 989A              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 989A              ;
   3+ 989A              ;
   4+ 989A              ;	CLS.
   5+ 989A              ;
   6+ 989A              ;	Limpia la pantalla y define sus atributos.
   7+ 989A              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 989A              ;
   9+ 989A              ;	COLORES: 0 ..... NEGRO
  10+ 989A              ;    		 1 ..... AZUL
  11+ 989A              ; 			 2 ..... ROJO
  12+ 989A              ;			 3 ..... MAGENTA
  13+ 989A              ; 			 4 ..... VERDE
  14+ 989A              ; 			 5 ..... CIAN
  15+ 989A              ;			 6 ..... AMARILLO
  16+ 989A              ; 			 7 ..... BLANCO
  17+ 989A              ;
  18+ 989A              ;	INPUT: A contiene los atributos de pantalla.
  19+ 989A              ;
  20+ 989A              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 989A
  22+ 989A
  23+ 989A 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 989D 11 01 40     	LD DE,$4001
  25+ 98A0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98A3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98A5 ED B0        	LDIR
  28+ 98A7 01 FF 02     	LD BC,767
  29+ 98AA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98AB ED B0        	LDIR
  31+ 98AD C9           	ret
  32+ 98AE
# file closed: Cls.asm
1543  98AE              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98AE              ; ******************************************************************************************************************************************************************************************
   2+ 98AE              ;
   3+ 98AE              ;   20/05/23
   4+ 98AE              ;
   5+ 98AE              ;	Recompone_posicion_inicio
   6+ 98AE              ;
   7+ 98AE              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98AE              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98AE              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98AE              ;	_ a una u otra rutina.
  11+ 98AE
  12+ 98AE              Recompone_posicion_inicio
  13+ 98AE
  14+ 98AE 2A C8 88     	ld hl,(Posicion_inicio)
  15+ 98B1 7D           	ld a,l
  16+ 98B2 E6 1F        	and $1f
  17+ 98B4 28 16        	jr z,1F
  18+ 98B6
  19+ 98B6 FE 1F        	cp $1f
  20+ 98B8 28 0D        	jr z,3F
  21+ 98BA
  22+ 98BA 21 F3 88     	ld hl,Ctrl_2
  23+ 98BD CB C6        	set 0,(hl)
  24+ 98BF 2A BA 88     	ld hl,(Puntero_objeto)
  25+ 98C2 22 F6 88     	ld (Repone_puntero_objeto),hl
  26+ 98C5 18 08        	jr 2F
  27+ 98C7
  28+ 98C7 CD 68 9A     3 call Mov_left
  29+ 98CA 18 03        	jr 2F
  30+ 98CC
  31+ 98CC CD 4A 99     1 call Mov_right
  32+ 98CF 21 00 F0     2 ld hl,Sprite_vacio
  33+ 98D2 22 BA 88     	ld (Puntero_objeto),hl
  34+ 98D5 C9           	ret
  35+ 98D6
  36+ 98D6              ; ******************************************************************************************************************************************************************************************
  37+ 98D6              ;
  38+ 98D6              ;   27/05/23
  39+ 98D6              ;
  40+ 98D6              ;	Mov_down
  41+ 98D6              ;
  42+ 98D6              ; 	Mueve el Sprite X px hacia abajo.
  43+ 98D6              ;
  44+ 98D6              ;
  45+ 98D6              Mov_down
  46+ 98D6
  47+ 98D6 CD 38 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 98D9              ;																	; _ repone (Puntero_objeto).
  49+ 98D9 21 E2 88     	ld hl,Ctrl_0
  50+ 98DC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 98DE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 98DE              ; 																	; _ en el caso de que no lo haya.
  53+ 98DE 3A CE 88     	ld a,(Vel_down)
  54+ 98E1 47           	ld b,a
  55+ 98E2 2A B8 88         ld hl,(Posicion_actual)
  56+ 98E5 CD 90 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 98E8 E6 02        	and 2
  58+ 98EA 28 0F        	jr z,1F
  59+ 98EC
  60+ 98EC              ; Nos encontramos en el último tercio de pantalla.
  61+ 98EC              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 98EC
  63+ 98EC 7C           	ld a,h
  64+ 98ED FE 57        	cp $57
  65+ 98EF 20 0A        	jr nz,1F
  66+ 98F1
  67+ 98F1 7D           	ld a,l
  68+ 98F2 C6 20        	add $20
  69+ 98F4 30 05        	jr nc,1F
  70+ 98F6
  71+ 98F6              ; ------------------------------
  72+ 98F6              ;	call Reaparece_arriba
  73+ 98F6 CD F5 9B     	call Reinicio
  74+ 98F9              ; ------------------------------
  75+ 98F9
  76+ 98F9 18 08        	jr 3F
  77+ 98FB CD 7D 95     1 call NextScan
  78+ 98FE 22 B8 88     	ld (Posicion_actual),hl
  79+ 9901 10 E2            djnz 2B
  80+ 9903 CD 1B 9C     3 call Genera_coordenadas
  81+ 9906 C9           	ret
  82+ 9907
  83+ 9907              ; ******************************************************************************************************************************************************************************************
  84+ 9907              ;
  85+ 9907              ;   27/05/23
  86+ 9907              ;
  87+ 9907              ;	Mov_up
  88+ 9907              ;
  89+ 9907              ; 	Mueve el Sprite hacia arriba.
  90+ 9907              ;
  91+ 9907              ;
  92+ 9907              Mov_up
  93+ 9907
  94+ 9907 CD 38 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 990A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 990A 21 E2 88     	ld hl,Ctrl_0
  97+ 990D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 990F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 990F              ; 																		; _ en el caso de que no lo haya.
 100+ 990F 3A CD 88     	ld a,(Vel_up)
 101+ 9912 47           	ld b,a
 102+ 9913 2A B8 88     	ld hl,(Posicion_actual)
 103+ 9916 CD 90 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9919 A7           	and a
 105+ 991A 20 10        	jr nz,1F
 106+ 991C
 107+ 991C              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 991C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 991C
 110+ 991C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 991D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 991F 20 0B            jr nz,1F
 113+ 9921 7D               ld a,l
 114+ 9922 D6 20            sub $20
 115+ 9924 30 06            jr nc,1F
 116+ 9926 25               dec h
 117+ 9927
 118+ 9927              ; -----------------------------
 119+ 9927 CD D6 9B         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 992A              ;	call Reinicio
 121+ 992A              ; -----------------------------
 122+ 992A
 123+ 992A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 992C CD 8C 95     1 call PreviousScan
 125+ 992F 22 B8 88     	ld (Posicion_actual),hl
 126+ 9932 10 E2            djnz 3B
 127+ 9934 CD 1B 9C     2 call Genera_coordenadas
 128+ 9937 C9           	ret
 129+ 9938
 130+ 9938              ; -----------------------------
 131+ 9938              ;
 132+ 9938              ;	27/5/23
 133+ 9938              ;
 134+ 9938              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9938              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9938              ;
 137+ 9938              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9938              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9938              ;
 140+ 9938              ;	Modifica: A y (Puntero_objeto).
 141+ 9938
 142+ 9938 3A F3 88     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 993B CB 47        	bit 0,a
 144+ 993D C8           	ret z
 145+ 993E CB 87        	res 0,a
 146+ 9940 32 F3 88     	ld (Ctrl_2),a
 147+ 9943 2A F6 88     	ld hl,(Repone_puntero_objeto)
 148+ 9946 22 BA 88     	ld (Puntero_objeto),hl
 149+ 9949 C9           	ret
 150+ 994A
 151+ 994A              ; ******************************************************************************************************************************************************************************************
 152+ 994A              ;
 153+ 994A              ;	19/10/22
 154+ 994A              ;
 155+ 994A              ;	Mov_right.
 156+ 994A              ;
 157+ 994A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 994A              ;
 159+ 994A
 160+ 994A 21 E2 88     Mov_right ld hl,Ctrl_0
 161+ 994D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 994F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 994F              ; 																	; _ en el caso de que no lo haya.
 164+ 994F 3A E2 88     	ld a,(Ctrl_0)
 165+ 9952 CB 77        	bit 6,a
 166+ 9954 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9956
 168+ 9956 CD 84 9B     	call Stop_Amadeus_right
 169+ 9959 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 995A 18 4D        	jr 8F
 171+ 995C
 172+ 995C 3A BC 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 995F FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9961 20 46        	jr nz,8F
 175+ 9963
 176+ 9963 3A BE 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9966 A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9967 28 40        	jr z,8F
 179+ 9969
 180+ 9969              ; ---------- ---------- ----------
 181+ 9969              ;
 182+ 9969              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9969
 184+ 9969 3A CC 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 996C FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 996E 28 11        	jr z,1F
 187+ 9970 38 06        	jr c,6F
 188+ 9972 FE 04        	cp 4
 189+ 9974 28 14        	jr z,7F
 190+ 9976 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9978
 192+ 9978              ; ---------- ---------- ----------
 193+ 9978              ;
 194+ 9978              ; Perfiles de velocidad
 195+ 9978              ;
 196+ 9978
 197+ 9978 3A BE 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 997B FE FE        	cp $fe
 199+ 997D 20 2A        	jr nz,8F
 200+ 997F 18 10        	jr 3F
 201+ 9981 3A BE 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9984 FE FD        	cp $fd
 203+ 9986 20 21        	jr nz,8F
 204+ 9988 18 07        	jr 3F
 205+ 998A 3A BE 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 998D FE FB        	cp $fb
 207+ 998F 20 18        	jr nz,8F
 208+ 9991
 209+ 9991              ; ---------- ---------- ----------
 210+ 9991
 211+ 9991              3
 212+ 9991 CD C4 9B     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9994              ;	call Reinicio
 214+ 9994
 215+ 9994              ; ---------- ---------- ----------
 216+ 9994              ;
 217+ 9994              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9994
 219+ 9994 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9996 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9997 CD B0 99     	call DESPLZ_DER
 222+ 999A C1           	pop bc
 223+ 999B 10 F9        	djnz 5B
 224+ 999D 2A B8 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 99A0 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 99A1 22 B8 88     	ld (Posicion_actual),hl
 227+ 99A4 CD 1B 9C     	call Genera_coordenadas
 228+ 99A7 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 99A9
 230+ 99A9              ; ---------- ---------- ----------
 231+ 99A9
 232+ 99A9 2A B8 88     8 ld hl,(Posicion_actual)
 233+ 99AC CD B0 99     	call DESPLZ_DER
 234+ 99AF C9           2 ret
 235+ 99B0
 236+ 99B0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 99B0              ;
 238+ 99B0              ;	22/9/22
 239+ 99B0              ;
 240+ 99B0
 241+ 99B0 CD BF 99     DESPLZ_DER call Desplaza_derecha
 242+ 99B3 CD 0B 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 99B6 CD 34 9A         call Ciclo_completo
 244+ 99B9 21 E2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 99BC CB FE        	set 7,(hl)
 246+ 99BE C9           	ret
 247+ 99BF
 248+ 99BF              ; ******************************************************************************************************************************************************************************************
 249+ 99BF              ;	15/02/23
 250+ 99BF              ;
 251+ 99BF
 252+ 99BF 3A CC 88     Desplaza_derecha ld a,(Vel_right)
 253+ 99C2 47           	ld b,a
 254+ 99C3 2A C4 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 99C6 23           1 inc hl
 256+ 99C7 23           	inc hl
 257+ 99C8 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 99CA 22 C4 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 99CD CD 17 8C     	call Extrae_address
 260+ 99D0 22 BA 88     	ld (Puntero_objeto),hl
 261+ 99D3
 262+ 99D3              ; Modifica (Puntero_DESPLZ_izq).
 263+ 99D3
 264+ 99D3              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 99D3              ; Cuántos movimientos hemos hecho ??
 266+ 99D3              ; DE contiene (Puntero_DESPLZ_der).
 267+ 99D3
 268+ 99D3 2A C0 88     7 ld hl,(Indice_Sprite_der)
 269+ 99D6 EB           	ex de,hl
 270+ 99D7 A7           	and a
 271+ 99D8 ED 52        	sbc hl,de
 272+ 99DA CB 3D        	srl l
 273+ 99DC 3E 08        6 ld a,8
 274+ 99DE 95           	sub l
 275+ 99DF 30 1E        	jr nc,3F
 276+ 99E1
 277+ 99E1              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 99E1              ; B="0".
 279+ 99E1
 280+ 99E1 04           4 inc b
 281+ 99E2 3C           	inc a
 282+ 99E3 20 FC        	jr nz,4B
 283+ 99E5 78           	ld a,b
 284+ 99E6 08           	ex af,af
 285+ 99E7 2A C0 88     	ld hl,(Indice_Sprite_der)
 286+ 99EA 23           5 inc hl
 287+ 99EB 23           	inc hl
 288+ 99EC 10 FC        	djnz 5B
 289+ 99EE 22 C4 88     	ld (Puntero_DESPLZ_der),hl
 290+ 99F1 CD 17 8C     	call Extrae_address
 291+ 99F4 22 BA 88     	ld (Puntero_objeto),hl
 292+ 99F7
 293+ 99F7              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 99F7              ; _(Posicion_actual).
 295+ 99F7
 296+ 99F7 21 B8 88     	ld hl,Posicion_actual
 297+ 99FA 34           	inc (hl)
 298+ 99FB 08               ex af,af
 299+ 99FC 6F           	ld l,a
 300+ 99FD 18 DD        	jr 6B
 301+ 99FF
 302+ 99FF              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 99FF
 304+ 99FF 47           3 ld b,a
 305+ 9A00 2A C2 88     	ld hl,(Indice_Sprite_izq)
 306+ 9A03 23           2 inc hl
 307+ 9A04 23           	inc hl
 308+ 9A05 10 FC        	djnz 2B
 309+ 9A07 22 C6 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9A0A C9           8 ret
 311+ 9A0B
 312+ 9A0B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9A0B              ;
 314+ 9A0B              ;	24/7/22
 315+ 9A0B              ;
 316+ 9A0B              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9A0B              ;
 318+ 9A0B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9A0B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9A0B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9A0B
 322+ 9A0B 3A BE 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9A0E A7           	and a
 324+ 9A0F 20 1F        	jr nz,1F
 325+ 9A11 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9A13 32 BE 88         ld (CTRL_DESPLZ),a
 327+ 9A16
 328+ 9A16 21 B7 88     	ld hl,Columns
 329+ 9A19 34           	inc (hl)
 330+ 9A1A 3A CA 88     	ld a,(Cuad_objeto)
 331+ 9A1D E6 01        	and 1
 332+ 9A1F 28 0F        	jr z,1F
 333+ 9A21 2A B8 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9A24 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9A25 22 B8 88     	ld (Posicion_actual),hl
 336+ 9A28 CD 1B 9C     	call Genera_coordenadas
 337+ 9A2B CD 90 9B     	call Inc_CTRL_DESPLZ
 338+ 9A2E 18 03        	jr 2F
 339+ 9A30 CD 90 9B     1 call Inc_CTRL_DESPLZ
 340+ 9A33 C9           2 ret
 341+ 9A34
 342+ 9A34              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9A34              ;
 344+ 9A34              ;	24/7/22
 345+ 9A34              ;
 346+ 9A34              ;	Ciclo_completo.
 347+ 9A34              ;
 348+ 9A34              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9A34              ;
 350+ 9A34              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9A34              ; 	Decrementamos (Columns).
 352+ 9A34              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9A34              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9A34
 355+ 9A34
 356+ 9A34 3A BE 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9A37 FE FF        	cp $ff
 358+ 9A39 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9A3B E6 F0        	and $f0
 360+ 9A3D 20 28        	jr nz,3F
 361+ 9A3F
 362+ 9A3F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9A3F
 364+ 9A3F 3A BE 88     	ld a,(CTRL_DESPLZ)
 365+ 9A42 47           	ld b,a
 366+ 9A43 3E F8        	ld a,$f8
 367+ 9A45 80           	add b
 368+ 9A46 32 BE 88     	ld (CTRL_DESPLZ),a
 369+ 9A49 18 1C        	jr 3F
 370+ 9A4B 21 B7 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9A4E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9A4F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9A50 32 BE 88     	ld (CTRL_DESPLZ),a
 374+ 9A53 3A CA 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9A56 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9A58 20 0A        	jr nz,2F
 377+ 9A5A 2A B8 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9A5D 23           	inc hl
 379+ 9A5E 22 B8 88     	ld (Posicion_actual),hl
 380+ 9A61 CD 1B 9C     	call Genera_coordenadas
 381+ 9A64
 382+ 9A64              ; Inicia el puntero de Sprite.
 383+ 9A64
 384+ 9A64 CD 2E 8C     2 call Inicia_puntero_objeto_der
 385+ 9A67 C9           3 ret
 386+ 9A68
 387+ 9A68              ; ******************************************************************************************************************************************************************************************
 388+ 9A68              ;
 389+ 9A68              ;	15/02/23
 390+ 9A68              ;
 391+ 9A68              ;	Mov_left.
 392+ 9A68              ;
 393+ 9A68              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9A68              ;
 395+ 9A68              Mov_left
 396+ 9A68
 397+ 9A68 21 E2 88     	ld hl,Ctrl_0
 398+ 9A6B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9A6D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9A6D              ; 																	; _ en el caso de que no lo haya.
 401+ 9A6D 3A E2 88     	ld a,(Ctrl_0)
 402+ 9A70 CB 77        	bit 6,a
 403+ 9A72 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9A74
 405+ 9A74 CD 8A 9B     	call Stop_Amadeus_left
 406+ 9A77 C8           	ret z
 407+ 9A78 20 4A        	jr nz,8F
 408+ 9A7A
 409+ 9A7A 3A BC 88     11 ld a,(Coordenada_X)
 410+ 9A7D A7           	and a
 411+ 9A7E 20 44        	jr nz,8F
 412+ 9A80
 413+ 9A80 3A BE 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9A83 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9A84 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9A86
 417+ 9A86              ; ---------- ---------- ----------
 418+ 9A86
 419+ 9A86 3A CB 88     	ld a,(Vel_left)
 420+ 9A89 FE 02        	cp 2
 421+ 9A8B 28 0F        	jr z,1F
 422+ 9A8D 38 04        	jr c,6F
 423+ 9A8F FE 04        	cp 4
 424+ 9A91 28 12        	jr z,7F
 425+ 9A93
 426+ 9A93              ; ---------- ---------- ----------
 427+ 9A93
 428+ 9A93 3A BE 88     6 ld a,(CTRL_DESPLZ)
 429+ 9A96 FE F8        	cp $f8
 430+ 9A98 20 2A        	jr nz,8F
 431+ 9A9A 18 10        	jr 4F
 432+ 9A9C 3A BE 88     1 ld a,(CTRL_DESPLZ)
 433+ 9A9F FE F9        	cp $f9
 434+ 9AA1 20 21        	jr nz,8F
 435+ 9AA3 18 07        	jr 4F
 436+ 9AA5 3A BE 88     7 ld a,(CTRL_DESPLZ)
 437+ 9AA8 FE FB        	cp $fb
 438+ 9AAA 20 18        	jr nz,8F
 439+ 9AAC
 440+ 9AAC              ; ---------- ---------- ----------
 441+ 9AAC
 442+ 9AAC              4
 443+ 9AAC CD B2 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9AAF              ;	call Reinicio
 445+ 9AAF
 446+ 9AAF              ; ---------- ---------- ----------
 447+ 9AAF
 448+ 9AAF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9AB1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9AB2
 451+ 9AB2              ;	ld hl,(Indice_Sprite_izq)
 452+ 9AB2              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9AB2
 454+ 9AB2 CD CB 9A     	call DESPLZ_IZQ
 455+ 9AB5 C1           	pop bc
 456+ 9AB6 10 F9        	djnz 5B
 457+ 9AB8 2A B8 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9ABB 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9ABC 22 B8 88     	ld (Posicion_actual),hl
 460+ 9ABF CD 1B 9C     	call Genera_coordenadas
 461+ 9AC2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9AC4
 463+ 9AC4              ; ---------- ---------- ----------
 464+ 9AC4
 465+ 9AC4              ; Movemos, no hay recolocación.
 466+ 9AC4
 467+ 9AC4 2A B8 88     8 ld hl,(Posicion_actual)
 468+ 9AC7 CD CB 9A     	call DESPLZ_IZQ
 469+ 9ACA C9           2 ret
 470+ 9ACB
 471+ 9ACB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9ACB              ;
 473+ 9ACB              ;	22/9/22
 474+ 9ACB
 475+ 9ACB              DESPLZ_IZQ
 476+ 9ACB
 477+ 9ACB CD DA 9A     	call Desplaza_izquierda
 478+ 9ACE CD 26 9B         call modifica_parametros_1er_DESPLZ
 479+ 9AD1 CD 4E 9B     	call Ciclo_completo_2
 480+ 9AD4 21 E2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9AD7 CB BE        	res 7,(hl)
 482+ 9AD9 C9           	ret
 483+ 9ADA
 484+ 9ADA              Desplaza_izquierda
 485+ 9ADA
 486+ 9ADA 3A CB 88     	ld a,(Vel_left)
 487+ 9ADD 47           	ld b,a
 488+ 9ADE 2A C6 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9AE1 23           1 inc hl
 490+ 9AE2 23           	inc hl
 491+ 9AE3 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9AE5 22 C6 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9AE8 CD 17 8C     	call Extrae_address
 494+ 9AEB 22 BA 88     	ld (Puntero_objeto),hl
 495+ 9AEE
 496+ 9AEE              ; Modifica (Puntero_DESPLZ_der).
 497+ 9AEE
 498+ 9AEE              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9AEE              ; Cuántos movimientos hemos hecho ??
 500+ 9AEE              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9AEE
 502+ 9AEE 2A C2 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9AF1 EB           	ex de,hl
 504+ 9AF2 A7           	and a
 505+ 9AF3 ED 52        	sbc hl,de
 506+ 9AF5 CB 3D        	srl l
 507+ 9AF7 3E 08        6 ld a,8
 508+ 9AF9 95           	sub l
 509+ 9AFA 30 1E        	jr nc,3F
 510+ 9AFC
 511+ 9AFC              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9AFC              ; B="0".
 513+ 9AFC
 514+ 9AFC 04           4 inc b
 515+ 9AFD 3C           	inc a
 516+ 9AFE 20 FC        	jr nz,4B
 517+ 9B00 78           	ld a,b
 518+ 9B01 08           	ex af,af
 519+ 9B02 2A C2 88     	ld hl,(Indice_Sprite_izq)
 520+ 9B05 23           5 inc hl
 521+ 9B06 23           	inc hl
 522+ 9B07 10 FC        	djnz 5B
 523+ 9B09 22 C6 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9B0C CD 17 8C     	call Extrae_address
 525+ 9B0F 22 BA 88     	ld (Puntero_objeto),hl
 526+ 9B12
 527+ 9B12              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9B12              ; _(Posicion_actual).
 529+ 9B12
 530+ 9B12 21 B8 88     	ld hl,Posicion_actual
 531+ 9B15 35           	dec (hl)
 532+ 9B16 08           	ex af,af
 533+ 9B17 6F           	ld l,a
 534+ 9B18 18 DD        	jr 6B
 535+ 9B1A
 536+ 9B1A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9B1A
 538+ 9B1A 47           3 ld b,a
 539+ 9B1B 2A C0 88     	ld hl,(Indice_Sprite_der)
 540+ 9B1E 23           2 inc hl
 541+ 9B1F 23           	inc hl
 542+ 9B20 10 FC        	djnz 2B
 543+ 9B22 22 C4 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9B25 C9           8 ret
 545+ 9B26
 546+ 9B26              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9B26              ;
 548+ 9B26              ;	modifica_parametros_1er_DESPLZ
 549+ 9B26              ;
 550+ 9B26              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9B26              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9B26              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9B26
 554+ 9B26 3A BE 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9B29 A7           	and a
 556+ 9B2A 20 1E        	jr nz,1F
 557+ 9B2C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9B2D 32 BE 88         ld (CTRL_DESPLZ),a
 559+ 9B30 21 B7 88     	ld hl,Columns
 560+ 9B33 34           	inc (hl)
 561+ 9B34 3A CA 88     	ld a,(Cuad_objeto)
 562+ 9B37 E6 01        	and 1
 563+ 9B39 20 0F        	jr nz,1F
 564+ 9B3B 2A B8 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9B3E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9B3F 22 B8 88     	ld (Posicion_actual),hl
 567+ 9B42 CD 1B 9C     	call Genera_coordenadas
 568+ 9B45 CD A1 9B     	call Dec_CTRL_DESPLZ
 569+ 9B48 18 03        	jr 2F
 570+ 9B4A CD A1 9B     1 call Dec_CTRL_DESPLZ
 571+ 9B4D C9           2 ret
 572+ 9B4E
 573+ 9B4E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9B4E
 575+ 9B4E 3A BE 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9B51 FE F7        	cp $f7
 577+ 9B53 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9B55 30 2C        	jr nc,3F
 579+ 9B57
 580+ 9B57              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9B57
 582+ 9B57 06 00        	ld b,0
 583+ 9B59 04           4 inc b
 584+ 9B5A 3C           	inc a
 585+ 9B5B FE F7        	cp $f7
 586+ 9B5D 20 FA        	jr nz,4B
 587+ 9B5F 3E FF        	ld a,$ff
 588+ 9B61 90           	sub b
 589+ 9B62 32 BE 88     	ld (CTRL_DESPLZ),a
 590+ 9B65 18 1C        	jr 3F
 591+ 9B67
 592+ 9B67              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9B67
 594+ 9B67 21 B7 88     1 ld hl,Columns
 595+ 9B6A 35           	dec (hl)
 596+ 9B6B AF           	xor a
 597+ 9B6C 32 BE 88     	ld (CTRL_DESPLZ),a
 598+ 9B6F 3A CA 88     	ld a,(Cuad_objeto)
 599+ 9B72 E6 01        	and 1
 600+ 9B74 28 0A        	jr z,2F
 601+ 9B76 2A B8 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9B79 2B           	dec hl
 603+ 9B7A 22 B8 88     	ld (Posicion_actual),hl
 604+ 9B7D CD 1B 9C     	call Genera_coordenadas
 605+ 9B80
 606+ 9B80              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9B80
 608+ 9B80 CD 41 8C     2 call Inicia_puntero_objeto_izq
 609+ 9B83 C9           3 ret
 610+ 9B84
 611+ 9B84              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9B84              ;
 613+ 9B84              ;	19/10/22
 614+ 9B84              ;
 615+ 9B84              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9B84              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9B84
 618+ 9B84 3A BC 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9B87 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9B89 C9           	ret
 621+ 9B8A
 622+ 9B8A              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9B8A              ;
 624+ 9B8A              ;	19/10/22
 625+ 9B8A              ;
 626+ 9B8A              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9B8A              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9B8A
 629+ 9B8A 3A BC 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9B8D FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9B8F C9           	ret
 632+ 9B90
 633+ 9B90              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9B90              ;
 635+ 9B90              ;	24/7/22
 636+ 9B90              ;
 637+ 9B90              ;	Inc_CTRL_DESPLZ
 638+ 9B90              ;
 639+ 9B90              ;
 640+ 9B90              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9B90
 642+ 9B90 21 BE 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9B93 3A CC 88     	ld a,(Vel_right)
 644+ 9B96 A7           	and a
 645+ 9B97 28 06        	jr z,1F
 646+ 9B99 47           	ld b,a
 647+ 9B9A 34           3 inc (hl)
 648+ 9B9B 10 FD        	djnz 3B
 649+ 9B9D 18 01        	jr 2F
 650+ 9B9F 34           1 inc (hl)
 651+ 9BA0 C9           2 ret
 652+ 9BA1
 653+ 9BA1              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9BA1              ;
 655+ 9BA1              ;	5/2/23
 656+ 9BA1              ;
 657+ 9BA1              ;	Dec_CTRL_DESPLZ
 658+ 9BA1              ;
 659+ 9BA1              ;
 660+ 9BA1              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9BA1
 662+ 9BA1 21 BE 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9BA4 3A CB 88     	ld a,(Vel_left)
 664+ 9BA7 A7           	and a
 665+ 9BA8 28 06        	jr z,1F
 666+ 9BAA 47           	ld b,a
 667+ 9BAB 35           3 dec (hl)
 668+ 9BAC 10 FD        	djnz 3B
 669+ 9BAE 18 01        	jr 2F
 670+ 9BB0 35           1 dec (hl)
 671+ 9BB1 C9           2 ret
 672+ 9BB2
 673+ 9BB2              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9BB2
 675+ 9BB2 2A B8 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9BB5 01 1F 00     	ld bc,31
 677+ 9BB8 A7           	and a
 678+ 9BB9 ED 4A        	adc hl,bc
 679+ 9BBB 22 B8 88     	ld (Posicion_actual),hl
 680+ 9BBE 21 E2 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9BC1 CB C6        	set 0,(hl)
 682+ 9BC3 C9           	ret
 683+ 9BC4
 684+ 9BC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9BC4
 686+ 9BC4 2A B8 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9BC7 01 1F 00     	ld bc,31
 688+ 9BCA A7           	and a
 689+ 9BCB ED 42        	sbc hl,bc
 690+ 9BCD 22 B8 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9BD0 21 E2 88     	ld hl,Ctrl_0
 692+ 9BD3 CB CE        	set 1,(hl)
 693+ 9BD5 C9           	ret
 694+ 9BD6
 695+ 9BD6              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9BD6
 697+ 9BD6 24           Reaparece_abajo inc h
 698+ 9BD7 01 E0 17     	ld bc,$17e0
 699+ 9BDA A7           	and a
 700+ 9BDB ED 4A        	adc hl,bc
 701+ 9BDD 22 B8 88     	ld (Posicion_actual),hl
 702+ 9BE0 21 E2 88     	ld hl,Ctrl_0
 703+ 9BE3 CB D6        	set 2,(hl)
 704+ 9BE5 C9           	ret
 705+ 9BE6
 706+ 9BE6              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9BE6
 708+ 9BE6 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9BE9 A7           	and a
 710+ 9BEA ED 42        	sbc hl,bc
 711+ 9BEC 22 B8 88     	ld (Posicion_actual),hl
 712+ 9BEF 21 E2 88     	ld hl,Ctrl_0
 713+ 9BF2 CB DE        	set 3,(hl)
 714+ 9BF4 C9           	ret
 715+ 9BF5
 716+ 9BF5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9BF5              ;
 718+ 9BF5              ;	15/07/23
 719+ 9BF5
 720+ 9BF5              Reinicio
 721+ 9BF5
 722+ 9BF5              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9BF5
 724+ 9BF5 AF           	xor a
 725+ 9BF6 21 E7 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9BF9 CD 17 9C     	call Limpia_contenido_hl
 727+ 9BFC
 728+ 9BFC 21 B8 88     	ld hl,Posicion_actual
 729+ 9BFF CD 17 9C     	call Limpia_contenido_hl
 730+ 9C02
 731+ 9C02 CD 47 9F     	call Inicializa_Puntero_indice_mov
 732+ 9C05 CD D1 9E     	call Inicia_Puntero_mov
 733+ 9C08
 734+ 9C08 21 E9 88     	ld hl,Incrementa_puntero
 735+ 9C0B 06 05        	ld b,5
 736+ 9C0D 77           1 ld (hl),a
 737+ 9C0E 23           	inc hl
 738+ 9C0F 10 FC        	djnz 1B
 739+ 9C11
 740+ 9C11 21 F3 88     	ld hl,Ctrl_2
 741+ 9C14 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9C16
 743+ 9C16 C9           	ret
 744+ 9C17
 745+ 9C17 77           Limpia_contenido_hl	ld (hl),a
 746+ 9C18 23           	inc hl
 747+ 9C19 77           	ld (hl),a
 748+ 9C1A C9           	ret
 749+ 9C1B
 750+ 9C1B
# file closed: Direcciones.asm
1544  9C1B              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C1B              ; ------------------------------------------------------------------------
   2+ 9C1B              ;
   3+ 9C1B              ;	02/04/23
   4+ 9C1B              ;
   5+ 9C1B              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C1B              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C1B              ;
   8+ 9C1B              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C1B              ;
  10+ 9C1B              ;	Modifica: A,BC y DE.
  11+ 9C1B
  12+ 9C1B C5           Genera_coordenadas push bc
  13+ 9C1C E5           	push hl
  14+ 9C1D D5           	push de
  15+ 9C1E
  16+ 9C1E 2A B8 88     	ld hl,(Posicion_actual)
  17+ 9C21
  18+ 9C21 7D           	ld a,l
  19+ 9C22 E6 1F        	and $1f
  20+ 9C24 32 BC 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C27
  22+ 9C27 CD 90 98     	call calcula_tercio
  23+ 9C2A 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C2B
  25+ 9C2B 1E 00        	ld e,0
  26+ 9C2D 7D           	ld a,l
  27+ 9C2E E6 E0        	and $e0
  28+ 9C30 28 01        	jr z,1F
  29+ 9C32 04           	inc b
  30+ 9C33
  31+ 9C33 04           1 inc b
  32+ 9C34 05           	dec b
  33+ 9C35 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C37              ;														; _ , salimos.
  35+ 9C37 1C           3 inc e
  36+ 9C38 D6 20        	sub 32
  37+ 9C3A 20 FB        	jr nz,3B
  38+ 9C3C 10 F5        	djnz 1B
  39+ 9C3E
  40+ 9C3E 7B           2 ld a,e
  41+ 9C3F 32 BD 88     	ld (Coordenada_y),a
  42+ 9C42
  43+ 9C42 D1           	pop de
  44+ 9C43 E1           	pop hl
  45+ 9C44 C1           	pop bc
  46+ 9C45
  47+ 9C45 C9           	ret
  48+ 9C46
  49+ 9C46              ; ------------------------------------------------------------------------
  50+ 9C46              ;	28/05/23
  51+ 9C46              ;
  52+ 9C46              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C46              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C46              ;
  55+ 9C46              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C46              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C46              ;
  58+ 9C46              ;		DE="$120d"
  59+ 9C46              ;
  60+ 9C46              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C46              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C46              ;
  63+ 9C46              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C46
  65+ 9C46              ;	Modifica: A,BC y DE.
  66+ 9C46
  67+ 9C46
  68+ 9C46              Genera_coordenadas_disparo
  69+ 9C46
  70+ 9C46              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C46
  72+ 9C46 7D           	ld a,l
  73+ 9C47 E6 1F        	and $1f
  74+ 9C49 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C4A CD 90 98     	call calcula_tercio
  76+ 9C4D 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C4E 1E 00        	ld e,0
  78+ 9C50 7D           	ld a,l
  79+ 9C51 E6 E0        	and $e0
  80+ 9C53 28 01        	jr z,1F
  81+ 9C55 04           	inc b
  82+ 9C56 1C           1 inc e
  83+ 9C57 D6 20        	sub 32
  84+ 9C59 20 FB        	jr nz,1B
  85+ 9C5B 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9C5D C9           	ret
  87+ 9C5E
# file closed: Genera_coordenadas.asm
1545  9C5E              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9C5E              ; Relojes y temporizaciones.
   2+ 9C5E
   3+ 9C5E              ; ------------------------------------------------------
   4+ 9C5E              ;
   5+ 9C5E              ;	16/7/23
   6+ 9C5E              ;
   7+ 9C5E              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9C5E              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9C5E              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9C5E              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9C5E              ;
  12+ 9C5E              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9C5E              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9C5E
  15+ 9C5E              ; Disparo_entidad db 1
  16+ 9C5E              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9C5E              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9C5E
  19+ 9C5E              Habilita_disparos
  20+ 9C5E
  21+ 9C5E 7E           	ld a,(hl)
  22+ 9C5F A7           	and a
  23+ 9C60 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9C61
  25+ 9C61 EB           	ex de,hl
  26+ 9C62
  27+ 9C62 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9C63 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9C64
  30+ 9C64              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9C64
  32+ 9C64 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9C65 7E           	ld a,(hl)
  34+ 9C66 23           	inc hl
  35+ 9C67 77           	ld (hl),a
  36+ 9C68
  37+ 9C68 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9C69 3E 01        	ld a,1
  39+ 9C6B 77           	ld (hl),a
  40+ 9C6C C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1546  9C6D              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9C6D
   2+ 9C6D
   3+ 9C6D              ;   07/07/23
   4+ 9C6D              ;
   5+ 9C6D              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9C6D              ;
   7+ 9C6D              ;   Codificación:
   8+ 9C6D              ;
   9+ 9C6D              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9C6D              ;
  11+ 9C6D              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9C6D              ;
  13+ 9C6D              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9C6D              ;
  15+ 9C6D              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9C6D              ;
  17+ 9C6D              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9C6D              ;                               ..... %01000010 Vel_up 4
  19+ 9C6D              ;                                               Vel_down 2
  20+ 9C6D              ;                               ..... $42
  21+ 9C6D              ;
  22+ 9C6D              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9C6D              ;
  24+ 9C6D              ;                               ..... %01000010 Vel_left 4
  25+ 9C6D              ;                                               Vel_right 2
  26+ 9C6D              ;                               ..... $42
  27+ 9C6D              ;
  28+ 9C6D              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9C6D              ;
  30+ 9C6D              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9C6D              ;
  32+ 9C6D              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9C6D              ;
  34+ 9C6D              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9C6D              ;                                     $53
  36+ 9C6D              ;
  37+ 9C6D              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9C6D              ;
  39+ 9C6D              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9C6D              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9C6D              ;
  42+ 9C6D              ;                       Arriba ..... $81
  43+ 9C6D              ;                       Arriba - izquierda ..... $a1
  44+ 9C6D              ;                       Arriba - derecha ..... $91
  45+ 9C6D              ;
  46+ 9C6D              ;                       Abajo ..... $41
  47+ 9C6D              ;                       Abajo - izquierda ..... $61
  48+ 9C6D              ;                       Abajo - derecha ..... $51
  49+ 9C6D              ;
  50+ 9C6D              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9C6D              ;
  52+ 9C6D              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9C6D              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9C6D              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9C6D              ;
  56+ 9C6D              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9C6D              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9C6D              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9C6D              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9C6D              ;
  61+ 9C6D              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9C6D              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9C6D              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9C6D              ;
  65+ 9C6D              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9C6D              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9C6D              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9C6D              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9C6D
  70+ 9C6D              ; ----- ----- ----- ----- -----
  71+ 9C6D
  72+ 9C6D 99 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9C6F A1 9C            defw F_1
  74+ 9C71 AB 9C            defw F_2
  75+ 9C73 B5 9C            defw Codo_abajo_derecha
  76+ 9C75 E9 9C            defw Derecha_y_subiendo
  77+ 9C77 F3 9C            defw Derecha_y_subiendo_1
  78+ 9C79 FD 9C            defw F_3
  79+ 9C7B 07 9D            defw F_4
  80+ 9C7D 11 9D            defw Derecha_y_bajando
  81+ 9C7F 1B 9D            defw Derecha_y_bajando_1
  82+ 9C81 25 9D            defw Derecha_y_bajando_2
  83+ 9C83 2F 9D            defw Codo_derecha_abajo
  84+ 9C85 5F 9D            defw Codo_abajo_izq.
  85+ 9C87 93 9D            defw Izquierda_y_subiendo
  86+ 9C89 9D 9D            defw Izquierda_y_subiendo_1
  87+ 9C8B A7 9D            defw F_5
  88+ 9C8D B1 9D            defw F_6
  89+ 9C8F BB 9D            defw Izquierda_y_bajando
  90+ 9C91 C5 9D            defw Izquierda_y_bajando_1
  91+ 9C93 CF 9D            defw Izquierda_y_bajando_2
  92+ 9C95 D9 9D            defw Codo_izquierda_abajo
  93+ 9C97 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9C99
  95+ 9C99 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9C9D 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9CA1
  98+ 9CA1 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9CA5 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9CA9 08 00
 100+ 9CAB 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9CAF 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9CB3 0F FE
 102+ 9CB5
 103+ 9CB5 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9CB9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9CBD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9CC1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9CC5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9CC9 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9CCD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9CD1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9CD5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9CD9 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9CDD 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9CE1 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9CE5 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9CE9
 117+ 9CE9 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9CED 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9CF1 06 00
 119+ 9CF3
 120+ 9CF3 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9CF7 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9CFB 02 00
 122+ 9CFD
 123+ 9CFD 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9D01 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9D05 04 00
 125+ 9D07 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9D0B 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9D0F 08 00
 127+ 9D11
 128+ 9D11 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9D15 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9D19 02 00
 130+ 9D1B
 131+ 9D1B 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9D1F 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9D23 06 00
 133+ 9D25
 134+ 9D25 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9D29 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9D2D 06 00
 136+ 9D2F
 137+ 9D2F              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9D2F
 139+ 9D2F 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9D33 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9D37 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9D3B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9D3F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9D43 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9D47 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9D4B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9D4F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9D53 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9D57 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9D5B 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9D5F
 152+ 9D5F 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9D63 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9D67 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9D6B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9D6F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9D73 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9D77 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9D7B 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9D7F 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9D83 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9D87 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9D8B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9D8F 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9D93
 166+ 9D93 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9D97 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9D9B 06 00
 168+ 9D9D
 169+ 9D9D 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9DA1 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9DA5 02 00
 171+ 9DA7
 172+ 9DA7 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9DAB 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9DAF 04 00
 174+ 9DB1 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9DB5 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9DB9 08 00
 176+ 9DBB
 177+ 9DBB 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9DBF 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9DC3 02 00
 179+ 9DC5
 180+ 9DC5 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9DC9 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9DCD 06 00
 182+ 9DCF
 183+ 9DCF 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9DD3 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9DD7 06 00
 185+ 9DD9
 186+ 9DD9 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9DDD 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9DE1 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9DE5 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9DE9 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9DED 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9DF1 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9DF5 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9DF9 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9DFD 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9E01 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9E05 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9E09
 199+ 9E09              ; ----- ----- ----- ----- -----
 200+ 9E09              ;
 201+ 9E09              ;   27/06/23
 202+ 9E09
 203+ 9E09              Movimiento
 204+ 9E09
 205+ 9E09              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9E09
 207+ 9E09              ;    ld hl,(Posicion_actual)
 208+ 9E09
 209+ 9E09 3A F3 88         ld a,(Ctrl_2)
 210+ 9E0C CB 57            bit 2,a
 211+ 9E0E 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9E10
 213+ 9E10 2A E5 88         ld hl,(Puntero_mov)
 214+ 9E13 7E               ld a,(hl)
 215+ 9E14
 216+ 9E14              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9E14
 218+ 9E14              Inicia_desplazamiento.
 219+ 9E14
 220+ 9E14              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9E14
 222+ 9E14 CD 08 9F         call Ajusta_velocidad_desplazamiento
 223+ 9E17
 224+ 9E17              ; Iniciamos (Repetimos_mov).
 225+ 9E17
 226+ 9E17 7E               ld a,(hl)
 227+ 9E18 E6 0F            and $0f
 228+ 9E1A 32 EB 88         ld (Repetimos_desplazamiento),a
 229+ 9E1D 32 EC 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9E20
 231+ 9E20              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9E20
 233+ 9E20 23               inc hl
 234+ 9E21 7E               ld a,(hl)
 235+ 9E22 32 EE 88         ld (Cola_de_desplazamiento),a
 236+ 9E25 2B               dec hl
 237+ 9E26
 238+ 9E26 21 F3 88         ld hl,Ctrl_2
 239+ 9E29 CB D6            set 2,(hl)
 240+ 9E2B
 241+ 9E2B              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9E2B              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9E2B
 244+ 9E2B              Desplazamiento_iniciado
 245+ 9E2B
 246+ 9E2B CD DC 9E         call Aplica_desplazamiento
 247+ 9E2E
 248+ 9E2E 3A F3 88         ld a,(Ctrl_2)
 249+ 9E31 CB 67            bit 4,a
 250+ 9E33 C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9E34
 252+ 9E34 21 EB 88     3 ld hl,Repetimos_desplazamiento
 253+ 9E37 35               dec (hl)
 254+ 9E38 C0               ret nz
 255+ 9E39
 256+ 9E39              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9E39              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9E39              ; Analiza (Cola_de_desplazamiento).
 259+ 9E39
 260+ 9E39 3A EE 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9E3C A7               and a
 262+ 9E3D CC 31 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9E40 28 30            jr z,Reinicia_el_movimiento
 264+ 9E42
 265+ 9E42 FE FF            cp $ff
 266+ 9E44 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9E46
 268+ 9E46 FE FE            cp $fe
 269+ 9E48 CC B5 9E         call z,Fijamos_bucle
 270+ 9E4B 28 25            jr z,Reinicia_el_movimiento
 271+ 9E4D
 272+ 9E4D FE FD            cp $fd
 273+ 9E4F 20 11            jr nz,1F
 274+ 9E51
 275+ 9E51              ; ---
 276+ 9E51              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9E51
 278+ 9E51 3A F3 88         ld a,(Ctrl_2)
 279+ 9E54 CB 5F            bit 3,a
 280+ 9E56 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9E58
 282+ 9E58              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9E58
 284+ 9E58 21 F3 88         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9E5B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9E5D
 287+ 9E5D CD C6 9E         call Inicia_Repetimos_movimiento
 288+ 9E60 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9E62              ; ---
 290+ 9E62
 291+ 9E62 FE 01        1 cp 1
 292+ 9E64 CA 9F 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9E67
 294+ 9E67 3D               dec a
 295+ 9E68 32 EE 88         ld (Cola_de_desplazamiento),a
 296+ 9E6B
 297+ 9E6B 3A EC 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9E6E 32 EB 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9E71              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9E71 C9               ret
 301+ 9E72
 302+ 9E72              Reinicia_el_movimiento
 303+ 9E72
 304+ 9E72 3A F3 88         ld a,(Ctrl_2)
 305+ 9E75 CB 5F            bit 3,a
 306+ 9E77 28 1B            jr z,2F
 307+ 9E79
 308+ 9E79              ; (Cola_de_desplazamiento)="254".
 309+ 9E79
 310+ 9E79 21 ED 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9E7C 35               dec (hl)
 312+ 9E7D 20 15            jr nz,2F
 313+ 9E7F
 314+ 9E7F              ; Fin de las repeticiones del último movimiento.
 315+ 9E7F
 316+ 9E7F 21 F3 88         ld hl,Ctrl_2
 317+ 9E82 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9E84
 319+ 9E84 2A E5 88         ld hl,(Puntero_mov)
 320+ 9E87 23               inc hl
 321+ 9E88 23               inc hl
 322+ 9E89 23               inc hl
 323+ 9E8A 22 E5 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9E8D              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9E8D 7E               ld a,(hl)
 326+ 9E8E 32 EE 88         ld (Cola_de_desplazamiento),a
 327+ 9E91
 328+ 9E91 C3 39 9E         jp Cola
 329+ 9E94
 330+ 9E94 CD D1 9E     2 call Inicia_Puntero_mov
 331+ 9E97
 332+ 9E97 21 F3 88         ld hl,Ctrl_2
 333+ 9E9A CB 96            res 2,(hl)
 334+ 9E9C
 335+ 9E9C C3 09 9E         jp Movimiento
 336+ 9E9F
 337+ 9E9F              Siguiente_desplazamiento
 338+ 9E9F
 339+ 9E9F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9E9F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9E9F
 342+ 9E9F 21 F3 88         ld hl,Ctrl_2
 343+ 9EA2 CB 96            res 2,(hl)
 344+ 9EA4
 345+ 9EA4 2A E5 88         ld hl,(Puntero_mov)
 346+ 9EA7 23               inc hl
 347+ 9EA8 23               inc hl
 348+ 9EA9 22 E5 88         ld (Puntero_mov),hl
 349+ 9EAC
 350+ 9EAC 7E               ld a,(hl)
 351+ 9EAD A7               and a
 352+ 9EAE CC 31 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9EB1 CA 72 9E         jp z,Reinicia_el_movimiento
 354+ 9EB4
 355+ 9EB4 C9               ret
 356+ 9EB5
 357+ 9EB5              ; Subrutinas -----------------------------------------
 358+ 9EB5              ; ---------- --------- --------- ---------- ----------
 359+ 9EB5              ;
 360+ 9EB5              ;   24/07/23
 361+ 9EB5              ;
 362+ 9EB5              ;   Fijamos_bucle
 363+ 9EB5              ;
 364+ 9EB5              ;
 365+ 9EB5
 366+ 9EB5              Fijamos_bucle
 367+ 9EB5
 368+ 9EB5 3A E9 88         ld a,(Incrementa_puntero)
 369+ 9EB8 3C               inc a
 370+ 9EB9 32 EA 88         ld (Incrementa_puntero_backup),a
 371+ 9EBC
 372+ 9EBC CD 31 9F         call Incrementa_Puntero_indice_mov
 373+ 9EBF 2A E3 88         ld hl,(Puntero_indice_mov)
 374+ 9EC2 22 E7 88         ld (Puntero_indice_mov_bucle),hl
 375+ 9EC5 C9               ret
 376+ 9EC6
 377+ 9EC6              ; ---------- --------- --------- ---------- ----------
 378+ 9EC6              ;
 379+ 9EC6              ;   07/7/23
 380+ 9EC6              ;
 381+ 9EC6              ;   Inicia_Repetimos_movimiento
 382+ 9EC6              ;
 383+ 9EC6              ;
 384+ 9EC6
 385+ 9EC6              Inicia_Repetimos_movimiento
 386+ 9EC6
 387+ 9EC6              ; Iniciamos (Repetimos_movimiento).
 388+ 9EC6
 389+ 9EC6 DD 2A E5 88      ld ix,(Puntero_mov)
 390+ 9ECA DD 7E 02         ld a,(ix+2)
 391+ 9ECD 32 ED 88         ld (Repetimos_movimiento),a
 392+ 9ED0
 393+ 9ED0 C9               ret
 394+ 9ED1
 395+ 9ED1              ; ---------- --------- --------- ---------- ----------
 396+ 9ED1              ;
 397+ 9ED1              ;   26/6/23
 398+ 9ED1              ;
 399+ 9ED1              ;   Inicia_Puntero_mov
 400+ 9ED1              ;
 401+ 9ED1              ;
 402+ 9ED1
 403+ 9ED1 2A E3 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 404+ 9ED4 5E               ld e,(hl)
 405+ 9ED5 23               inc hl
 406+ 9ED6 56               ld d,(hl)
 407+ 9ED7 EB               ex de,hl
 408+ 9ED8 22 E5 88         ld (Puntero_mov),hl
 409+ 9EDB C9               ret
 410+ 9EDC
 411+ 9EDC              ; ---------- --------- --------- ---------- ----------
 412+ 9EDC              ;
 413+ 9EDC              ;   27/06/23
 414+ 9EDC              ;
 415+ 9EDC              ;   Aplica_movimiento.
 416+ 9EDC
 417+ 9EDC              Aplica_desplazamiento
 418+ 9EDC
 419+ 9EDC              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 420+ 9EDC
 421+ 9EDC 2A E5 88         ld hl, (Puntero_mov)
 422+ 9EDF
 423+ 9EDF 7E               ld a,(hl)
 424+ 9EE0 E6 F0            and $f0
 425+ 9EE2 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 426+ 9EE3
 427+ 9EE3 CB 7E            bit 7,(hl)
 428+ 9EE5 28 03            jr z,1F
 429+ 9EE7 CD 07 99         call Mov_up
 430+ 9EEA 2A E5 88     1 ld hl, (Puntero_mov)
 431+ 9EED CB 76            bit 6,(hl)
 432+ 9EEF 28 03            jr z,2F
 433+ 9EF1 CD D6 98         call Mov_down
 434+ 9EF4 2A E5 88     2 ld hl, (Puntero_mov)
 435+ 9EF7 CB 6E            bit 5,(hl)
 436+ 9EF9 28 03            jr z,3F
 437+ 9EFB CD 68 9A         call Mov_left
 438+ 9EFE 2A E5 88     3 ld hl, (Puntero_mov)
 439+ 9F01 CB 66            bit 4,(hl)
 440+ 9F03 C8               ret z
 441+ 9F04 CD 4A 99         call Mov_right
 442+ 9F07 C9               ret
 443+ 9F08
 444+ 9F08              ; ---------- --------- --------- ---------- ----------
 445+ 9F08              ;
 446+ 9F08              ;   26/06/23
 447+ 9F08              ;
 448+ 9F08              ;   Ajusta_velocidad_desplazamiento.
 449+ 9F08
 450+ 9F08              Ajusta_velocidad_desplazamiento
 451+ 9F08
 452+ 9F08              ; 1er byte de la cadena de movimiento.
 453+ 9F08              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 454+ 9F08
 455+ 9F08 CD 26 9F         call Extrae_nibble_alto
 456+ 9F0B
 457+ 9F0B 32 CD 88         ld (Vel_up),a
 458+ 9F0E 79               ld a,c
 459+ 9F0F E6 0F            and $0f
 460+ 9F11 32 CE 88         ld (Vel_down),a
 461+ 9F14
 462+ 9F14              ; Saltamos al 2º byte de la cadena de movimiento.
 463+ 9F14              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 464+ 9F14
 465+ 9F14 23               inc hl
 466+ 9F15 CD 26 9F         call Extrae_nibble_alto
 467+ 9F18
 468+ 9F18 32 CB 88         ld (Vel_left),a
 469+ 9F1B 79               ld a,c
 470+ 9F1C E6 0F            and $0f
 471+ 9F1E 32 CC 88         ld (Vel_right),a
 472+ 9F21
 473+ 9F21              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 474+ 9F21
 475+ 9F21 23               inc hl
 476+ 9F22 22 E5 88         ld (Puntero_mov),hl
 477+ 9F25 C9               ret
 478+ 9F26
 479+ 9F26 06 04        Extrae_nibble_alto ld b,4
 480+ 9F28 7E               ld a,(hl)
 481+ 9F29 4F               ld c,a
 482+ 9F2A E6 F0            and $f0
 483+ 9F2C CB 3F        1 srl a
 484+ 9F2E 10 FC            djnz 1B
 485+ 9F30 C9               ret
 486+ 9F31
 487+ 9F31              ; ---------- --------- --------- ---------- ----------
 488+ 9F31              ;
 489+ 9F31              ;   5/7/23
 490+ 9F31              ;
 491+ 9F31              ;   Incrementa_Puntero_indice_mov
 492+ 9F31
 493+ 9F31              Incrementa_Puntero_indice_mov
 494+ 9F31
 495+ 9F31 21 E9 88         ld hl,Incrementa_puntero
 496+ 9F34 34               inc (hl)
 497+ 9F35
 498+ 9F35 2A E3 88         ld hl,(Puntero_indice_mov)
 499+ 9F38 01 02 00         ld bc,2
 500+ 9F3B A7               and a
 501+ 9F3C 09               add hl,bc
 502+ 9F3D 22 E3 88         ld (Puntero_indice_mov),hl
 503+ 9F40
 504+ 9F40 7E               ld a,(hl)
 505+ 9F41 A7               and a
 506+ 9F42
 507+ 9F42              ;! STOP. Fin del patrón de movimiento de la entidad.
 508+ 9F42
 509+ 9F42              ;    jr z,$
 510+ 9F42
 511+ 9F42              ;! Reinicia el Patrón de movimiento.
 512+ 9F42
 513+ 9F42 CC 47 9F         call z,Inicializa_Puntero_indice_mov
 514+ 9F45
 515+ 9F45 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 516+ 9F46
 517+ 9F46 C9               ret
 518+ 9F47
 519+ 9F47
 520+ 9F47              ; ---------- --------- --------- ---------- ----------
 521+ 9F47              ;
 522+ 9F47              ;   24/07/23
 523+ 9F47              ;
 524+ 9F47              ;   Inicializa_Puntero_indice_mov
 525+ 9F47
 526+ 9F47              Inicializa_Puntero_indice_mov
 527+ 9F47
 528+ 9F47              ; Existe etiqueta de bucle principal???
 529+ 9F47
 530+ 9F47 2A E7 88         ld hl,(Puntero_indice_mov_bucle)
 531+ 9F4A 24               inc h
 532+ 9F4B 25               dec h
 533+ 9F4C 28 05            jr z,2F
 534+ 9F4E
 535+ 9F4E 22 E3 88         ld (Puntero_indice_mov),hl
 536+ 9F51 18 14            jr 3F
 537+ 9F53
 538+ 9F53              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 539+ 9F53
 540+ 9F53 3A E9 88     2 ld a,(Incrementa_puntero)
 541+ 9F56 47               ld b,a
 542+ 9F57
 543+ 9F57 2A E3 88         ld hl,(Puntero_indice_mov)
 544+ 9F5A 2B           1 dec hl
 545+ 9F5B 2B               dec hl
 546+ 9F5C 10 FC            djnz 1B
 547+ 9F5E 22 E3 88         ld (Puntero_indice_mov),hl
 548+ 9F61
 549+ 9F61 AF               xor a
 550+ 9F62 32 E9 88         ld (Incrementa_puntero),a
 551+ 9F65 18 06            jr 4F
 552+ 9F67
 553+ 9F67 3A EA 88     3 ld a,(Incrementa_puntero_backup)
 554+ 9F6A 32 E9 88         ld (Incrementa_puntero),a
 555+ 9F6D C9           4 ret
 556+ 9F6E
 557+ 9F6E
 558+ 9F6E
# file closed: Patrones_de_mov.asm
1547  9F6E              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F6E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F6E              ;
   3+ 9F6E              ;	4/12/23
   4+ 9F6E              ;
   5+ 9F6E              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F6E
   7+ 9F6E              ;	ADC HL,SP	LD (addr),SP
   8+ 9F6E              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F6E              ;	ADD IX,SP	LD SP,nn
  10+ 9F6E              ; 	ADD IY,SP	LD SP,HL
  11+ 9F6E              ;				LD SP,IX
  12+ 9F6E              ;	DEC SP		LD SP,IY
  13+ 9F6E
  14+ 9F6E              ;	EX (SP),HL
  15+ 9F6E              ;	EX (SP),IX
  16+ 9F6E              ;	EX (SP),IY
  17+ 9F6E
  18+ 9F6E              ;	INC SP
  19+ 9F6E
  20+ 9F6E                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 06 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 D6 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 E2 88         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7FB0 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7FB2              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7FB2
  50+ 7FB2 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 7FB5
  52+ 7FB5 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 7FB6 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 7FB8 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7FBA
  56+ 7FBA              ; Disparo o entidad?
  57+ 7FBA
  58+ 7FBA 3A F5 88         ld a,(Ctrl_1)
  59+ 7FBD CB 47            bit 0,a
  60+ 7FBF 28 05            jr z,2F
  61+ 7FC1
  62+ 7FC1 2A 0E 89         ld hl,(Stack_snapshot_disparos)
  63+ 7FC4 18 0F            jr 4F
  64+ 7FC6
  65+ 7FC6              ; No es disparo. Entidad/Amadeus ????
  66+ 7FC6
  67+ 7FC6 3A E2 88     2 ld a,(Ctrl_0)
  68+ 7FC9 CB 77            bit 6,a
  69+ 7FCB 28 05            jr z,7F
  70+ 7FCD
  71+ 7FCD              ; Guardamos foto de Amadeus.
  72+ 7FCD
  73+ 7FCD 2A 12 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7FD0 18 03            jr 4F
  75+ 7FD2
  76+ 7FD2 2A 0C 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 7FD5
  78+ 7FD5 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 7FD7
  80+ 7FD7 D1           1 pop de
  81+ 7FD8 73               ld (hl),e
  82+ 7FD9 23               inc hl
  83+ 7FDA 72               ld (hl),d
  84+ 7FDB 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7FDC 10 F9            djnz 1B
  86+ 7FDE
  87+ 7FDE              ; Disparo o entidad ?
  88+ 7FDE
  89+ 7FDE 3A F5 88         ld a,(Ctrl_1)
  90+ 7FE1 CB 47            bit 0,a
  91+ 7FE3 28 05            jr z,5F
  92+ 7FE5
  93+ 7FE5 22 0E 89         ld (Stack_snapshot_disparos),hl
  94+ 7FE8 18 13            jr 6F
  95+ 7FEA
  96+ 7FEA              ; Entidad o Amadeus ?
  97+ 7FEA
  98+ 7FEA 3A E2 88     5 ld a,(Ctrl_0)
  99+ 7FED CB 77            bit 6,a
 100+ 7FEF 28 09            jr z,8F
 101+ 7FF1
 102+ 7FF1 22 12 89         ld (End_Snapshot_Amadeus),hl
 103+ 7FF4 ED 7B 06 89      ld sp,(Stack)
 104+ 7FF8 FB               ei
 105+ 7FF9 C9               ret
 106+ 7FFA
 107+ 7FFA 22 0C 89     8 ld (Stack_snapshot),hl
 108+ 7FFD ED 7B 06 89  6 ld sp,(Stack)
 109+ 8001
 110+ 8001 FB               ei
 111+ 8002 C9               ret
 112+ 8003
 113+ 8003              ; -----------------------------------------------------------------------------
 114+ 8003              ;
 115+ 8003              ;   21/11/23
 116+ 8003
 117+ 8003              Limpia_y_reinicia_Stack_Snapshot
 118+ 8003
 119+ 8003              ;   Limpia Album_de_fotos.
 120+ 8003
 121+ 8003 2A 0C 89         ld hl,(Stack_snapshot)
 122+ 8006 7D               ld a,l
 123+ 8007 A7               and a
 124+ 8008 C8               ret z   ;   Salimos si el álbum está vacío.
 125+ 8009
 126+ 8009 47               ld b,a
 127+ 800A 04               inc b
 128+ 800B
 129+ 800B 36 00        1 ld (hl),0
 130+ 800D 2D               dec l
 131+ 800E 10 FB            djnz 1B
 132+ 8010
 133+ 8010              ;   Reinicializa (Stack_snapshot).
 134+ 8010
 135+ 8010 AF               xor a
 136+ 8011 32 0C 89         ld (Stack_snapshot),a
 137+ 8014
 138+ 8014 C9               ret
# file closed: Guarda_foto_registros.asm
1548  8015
1549  8015              	SAVESNA "Pruebas.sna", START
1550  8015
1551  8015
1552  8015
1553  8015
# file closed: Banco_de_pruebas.asm
