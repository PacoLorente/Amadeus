# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	Reloj del juego. IM2 *******************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	13/08/24
   8  0000              ;
   9  0000              ;
  10  0000
  11  0000              	org $fdff															; (Debajo de la pila).
  12  FDFF
  13  FDFF F4 82        	defw $82f4															; Indica al vector de interrupciones, (IM2), que el clock del programa se encuentra en $82a0.
  14  FE01
  15  FE01              ;
  16  FE01              ;	13/08/24
  17  FE01              ;
  18  FE01              ; 	Constantes del programa.
  19  FE01              ;
  20  FE01
  21  FE01              FRAMES equ $5c78														; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
  22  FE01              FRAMES_3 equ $5c7a
  23  FE01
  24  FE01              Sprite_vacio equ $eae0													; ($eae0 - $eb10) 48 Bytes de "0".
  25  FE01
  26  FE01              Centro_arriba equ $0160 												; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  27  FE01              Centro_abajo equ $0180 													; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  28  FE01              Centro_izquierda equ $0f 												; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  29  FE01              Centro_derecha equ $10 													; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  30  FE01
  31  FE01              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20					; $eb20 - $f87b ..... 3419 bytes.
  32  FE01              Almacen_de_movimientos_masticados_Amadeus equ $e000						; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
  33  FE01
  34  FE01              Scanlines_album equ $8000	;	($8000 - $8118) 						; Inicialmente 280 bytes, $118.
  35  FE01              Scanlines_album_2 equ $811a	;    ($811a - $8232)
  36  FE01              Amadeus_scanlines_album equ $8234	;	($8234 - $8256) 				; Inicialmente 34 bytes, $22.
  37  FE01              Amadeus_scanlines_album_2 equ $8258	;	($8258 - $827a)
  38  FE01
  39  FE01              Disparos_scanlines_album equ $827c	;	($827c - $82b6) 				; Inicialmente 58 bytes, $3a.
  40  FE01              Disparos_scanlines_album_2 equ $82b8	;	($82b8 - $82f2)
  41  FE01
  42  FE01              ;																		; Scanlines_album.
  43  FE01
  44  FE01              ;                                                       				; 35 bytes por entidad, (7 entidades).
  45  FE01
  46  FE01              ;																		; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
  47  FE01              ;                                                       				; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
  48  FE01              ;																		; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
  49  FE01              ; 																		; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
  50  FE01
  51  FE01              ;	Reloj del juego. IM2 ---------------------------------------------------------------------------------------------------------------------------------------------------
  52  FE01              ;
  53  FE01              ;	13/08/24
  54  FE01              ;
  55  FE01
  56  FE01              	org $82f4
  57  82F4
  58  82F4 F5           	push af
  59  82F5 E5           	push hl
  60  82F6
  61  82F6              ;! ------------------- STOP si no hemos terminado de construir el FRAME.
  62  82F6 21 26 8C     	ld hl,Ctrl_3
  63  82F9 CB 46        	bit 0,(hl)
  64  82FB 28 FE        	jr z,$
  65  82FD              ;! -------------------
  66  82FD
  67  82FD              ; Disparos.
  68  82FD
  69  82FD CD E0 A0     	call Pinta_disparos
  70  8300
  71  8300              ; Shield -----------------------
  72  8300
  73  8300              Temporizacion_shield
  74  8300
  75  8300 21 50 8C     	ld hl,Shield
  76  8303 7E           	ld a,(hl)
  77  8304 A7           	and a
  78  8305 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  79  8307
  80  8307 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  81  8308
  82  8308 23           	inc hl
  83  8309 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  84  830A
  85  830A 20 17        	jr nz,Incrementa_FRAMES
  86  830C
  87  830C              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  88  830C
  89  830C              Cambio_de_estado
  90  830C
  91  830C              ;	Indica cambio de estado.
  92  830C
  93  830C 23           	inc hl						;	Sitúa en (Shield_3).
  94  830D
  95  830D CB 5E        	bit 3,(hl)
  96  830F 28 05        	jr z,2F
  97  8311
  98  8311 CD 1B 91     	call Inicia_Shield
  99  8314
 100  8314 18 0D        	jr Incrementa_FRAMES
 101  8316
 102  8316 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
 103  8318
 104  8318              ;	Carga en (Shield_2) la siguiente temporización.
 105  8318
 106  8318 2A 4E 8C     	ld hl,(Puntero_datos_shield)
 107  831B 23           	inc hl
 108  831C 22 4E 8C     	ld (Puntero_datos_shield),hl
 109  831F 7E           	ld a,(hl)
 110  8320 32 51 8C     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
 111  8323
 112  8323              Incrementa_FRAMES
 113  8323
 114  8323 2A 78 5C     	ld hl,(FRAMES)
 115  8326 23           	inc hl
 116  8327 22 78 5C     	ld (FRAMES),hl
 117  832A
 118  832A 7C           	ld a,h
 119  832B B5           	or l
 120  832C 20 04        	jr nz,1F
 121  832E
 122  832E 21 7A 5C     	ld hl,FRAMES_3
 123  8331 34           	inc (hl)
 124  8332
 125  8332 D5           1 push de
 126  8333 C5           	push bc
 127  8334
 128  8334 CD 2B 91     	call Actualiza_pantalla
 129  8337
 130  8337 C1           	pop bc
 131  8338 D1           	pop de
 132  8339 E1           	pop hl
 133  833A F1           	pop af
 134  833B
 135  833B FB           	ei
 136  833C
 137  833C C9           	ret
 138  833D
 139  833D              ; --------------------------------------------------------------------------------
 140  833D
 141  833D              	include "Sprites_e_indices.asm"						; Comienza en $8370
# file opened: Sprites_e_indices.asm
   1+ 833D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 833D              ;
   3+ 833D              ;	17/02/23
   4+ 833D              ;
   5+ 833D              ;	Sprites e índices.
   6+ 833D
   7+ 833D              	org $8370
   8+ 8370
   9+ 8370              ; Disparo.
  10+ 8370
  11+ 8370 00 18        Disparo_de_entidad DEFB $00,$18
  12+ 8372
  13+ 8372 7A 83        Indice_disparo_Amadeus defw Disparo_0
  14+ 8374 7E 83        	defw Disparo_f9
  15+ 8376 82 83        	defw Disparo_fb
  16+ 8378 86 83        	defw Disparo_fd
  17+ 837A
  18+ 837A              ; Disparo (CTRL_DESPLZ)="0".
  19+ 837A 01 80        Disparo_0 DEFB $01,$80
  20+ 837C 07 E0        Disparo_0b DEFB $07,$e0 						; (No se imprime, detección de colisión).
  21+ 837E              ; Disparo (CTRL_DESPLZ)="f9"
  22+ 837E 00 60        Disparo_f9 DEFB $00,$60
  23+ 8380 01 F8        Disparo_f9b DEFB $01,$f8 						; (No se imprime, detección de colisión).
  24+ 8382              ; Disparo (CTRL_DESPLZ)="fb"
  25+ 8382 18 00        Disparo_fb DEFB $18,$00
  26+ 8384 7E 00        Disparo_fbb DEFB $7e,$00 						; (No se imprime, detección de colisión).
  27+ 8386              ; Disparo (CTRL_DESPLZ)="fd"
  28+ 8386 06 00        Disparo_fd DEFB $06,$00
  29+ 8388 1F 80        Disparo_fdb DEFB $1f,$80 						; (No se imprime, detección de colisión).
  30+ 838A
  31+ 838A              ; ----------------------------------------------------------------------------------------
  32+ 838A
  33+ 838A              ; Badsat_izq. 2x2.
  34+ 838A
  35+ 838A 9A 83        Indice_Badsat_izq defw Badsat_izquierda
  36+ 838C 00 85        	defw Badsat_izq_fe
  37+ 838E C0 84        	defw Badsat_izq_fd
  38+ 8390 90 84        	defw Badsat_izq_fc
  39+ 8392 60 84        	defw Badsat_izq_fb
  40+ 8394 30 84        	defw Badsat_izq_fa
  41+ 8396 00 84        	defw Badsat_izq_f9
  42+ 8398 CA 83        	defw Badsat_izq_f8
  43+ 839A
  44+ 839A 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  45+ 839D 02 14 00     	DEFB 	$02,$14,$00
  46+ 83A0 02 2A 00     	DEFB 	$02,$2A,$00
  47+ 83A3 02 55 00     	DEFB 	$02,$55,$00
  48+ 83A6 02 AA 00     	DEFB	$02,$AA,$00
  49+ 83A9 02 54 00     	DEFB 	$02,$54,$00
  50+ 83AC 7F E8 00     	DEFB 	$7F,$E8,$00
  51+ 83AF 03 60 00     	DEFB 	$03,$60,$00
  52+ 83B2 0A E0 00     	DEFB	$0A,$E0,$00
  53+ 83B5 17 F8 00     	DEFB 	$17,$F8,$00
  54+ 83B8 2B E8 00     	DEFB 	$2B,$E8,$00
  55+ 83BB 54 40 00     	DEFB 	$54,$40,$00
  56+ 83BE AA 60 00     	DEFB	$AA,$60,$00
  57+ 83C1 54 00 00     	DEFB 	$54,$00,$00
  58+ 83C4 28 00 00     	DEFB 	$28,$00,$00
  59+ 83C7 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  60+ 83CA
  61+ 83CA 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  61+ 83CE 0A 00 01 15
  62+ 83D2 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  62+ 83D6 01 55 00 01
  63+ 83DA 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  63+ 83DE 00 01 B0 00
  64+ 83E2 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  64+ 83E6 FC 00 15 F4
  65+ 83EA 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  65+ 83EE 55 30 00 2A
  66+ 83F2 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  66+ 83F6 00 08 00 00
  67+ 83FA
  68+ 83FA              	org $8400
  69+ 8400
  70+ 8400 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  70+ 8404 85 00 00 8A
  71+ 8408 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  71+ 840C 00 AA 80 00
  72+ 8410 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  72+ 8414 00 00 D8 00
  73+ 8418 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  73+ 841C FE 00 0A FA
  74+ 8420 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  74+ 8424 2A 98 00 15
  75+ 8428 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  75+ 842C 00 04 00 00
  76+ 8430
  77+ 8430 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  77+ 8434 42 80 00 45
  78+ 8438 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  78+ 843C 00 55 40 00
  79+ 8440 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  79+ 8444 00 00 6C 00
  80+ 8448 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  80+ 844C FF 00 05 7D
  81+ 8450 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  81+ 8454 15 4C 00 0A
  82+ 8458 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  82+ 845C 00 02 00 00
  83+ 8460
  84+ 8460 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  84+ 8464 21 40 00 22
  85+ 8468 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  85+ 846C 00 2A A0 00
  86+ 8470 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  86+ 8474 80 00 36 00
  87+ 8478 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  87+ 847C 7F 80 02 BE
  88+ 8480 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  88+ 8484 0A A6 00 05
  89+ 8488 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  89+ 848C 00 01 00 00
  90+ 8490
  91+ 8490 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  91+ 8494 10 A0 00 11
  92+ 8498 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  92+ 849C 00 15 50 00
  93+ 84A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  93+ 84A4 40 00 1B 00
  94+ 84A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  94+ 84AC BF C0 01 5F
  95+ 84B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  95+ 84B4 05 53 00 02
  96+ 84B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  96+ 84BC 00 00 80 00
  97+ 84C0
  98+ 84C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  98+ 84C4 08 50 00 08
  99+ 84C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  99+ 84CC 00 0A A8 00
 100+ 84D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 100+ 84D4 A0 00 0D 80
 101+ 84D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 101+ 84DC 5F F8 00 AF
 102+ 84E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 102+ 84E4 02 A9 00 01
 103+ 84E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 103+ 84EC 00 00 40 00
 104+ 84F0
 105+ 84F0              	org $8500
 106+ 8500
 107+ 8500 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 107+ 8504 04 28 00 04
 108+ 8508 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 108+ 850C 00 05 54 00
 109+ 8510 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 109+ 8514 D0 00 06 C0
 110+ 8518 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 110+ 851C 2F FC 00 57
 111+ 8520 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 111+ 8524 01 54 80 00
 112+ 8528 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 112+ 852C 00 00 20 00
 113+ 8530
 114+ 8530
 115+ 8530 40 85        Indice_Badsat_der defw Badsat_derecha
 116+ 8532 70 85        	defw Badsat_der_f8
 117+ 8534 A0 85        	defw Badsat_der_f9
 118+ 8536 D0 85        	defw Badsat_der_fa
 119+ 8538 00 86        	defw Badsat_der_fb
 120+ 853A 30 86        	defw Badsat_der_fc
 121+ 853C 60 86        	defw Badsat_der_fd
 122+ 853E 90 86        	defw Badsat_der_fe
 123+ 8540
 124+ 8540 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 125+ 8543 28 40 00     	DEFB    $28,$40,$00
 126+ 8546 54 40 00     	DEFB	$54,$40,$00
 127+ 8549 AA 40 00     	DEFB	$AA,$40,$00
 128+ 854C 55 40 00     	DEFB	$55,$40,$00
 129+ 854F 2A 40 00     	DEFB	$2A,$40,$00
 130+ 8552 17 FE 00     	DEFB	$17,$FE,$00
 131+ 8555 06 C0 00     	DEFB	$06,$C0,$00
 132+ 8558 07 50 00     	DEFB	$07,$50,$00
 133+ 855B 1F E8 00     	DEFB	$1F,$E8,$00
 134+ 855E 17 D4 00     	DEFB	$17,$D4,$00
 135+ 8561 02 2A 00     	DEFB	$02,$2A,$00
 136+ 8564 06 55 00     	DEFB	$06,$55,$00
 137+ 8567 00 2A 00     	DEFB	$00,$2A,$00
 138+ 856A 00 14 00     	DEFB	$00,$14,$00
 139+ 856D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 140+ 8570
 141+ 8570 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 141+ 8574 20 00 2A 20
 142+ 8578 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 142+ 857C 2A A0 00 15
 143+ 8580 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 143+ 8584 00 03 60 00
 144+ 8588 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 144+ 858C F4 00 0B EA
 145+ 8590 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 145+ 8594 03 2A 80 00
 146+ 8598 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 146+ 859C 00 00 04 00
 147+ 85A0
 148+ 85A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 148+ 85A4 10 00 15 10
 149+ 85A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 149+ 85AC 15 50 00 0A
 150+ 85B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 150+ 85B4 80 01 B0 00
 151+ 85B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 151+ 85BC FA 00 05 F5
 152+ 85C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 152+ 85C4 01 95 40 00
 153+ 85C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 153+ 85CC 00 00 02 00
 154+ 85D0
 155+ 85D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 155+ 85D4 08 00 0A 88
 156+ 85D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 156+ 85DC 0A A8 00 05
 157+ 85E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 157+ 85E4 C0 00 D8 00
 158+ 85E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 158+ 85EC FD 00 02 FA
 159+ 85F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 159+ 85F4 00 CA A0 00
 160+ 85F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 160+ 85FC 80 00 01 00
 161+ 8600
 162+ 8600 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 162+ 8604 84 00 05 44
 163+ 8608 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 163+ 860C 05 54 00 02
 164+ 8610 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 164+ 8614 E0 00 6C 00
 165+ 8618 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 165+ 861C FE 80 01 7D
 166+ 8620 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 166+ 8624 00 65 50 00
 167+ 8628 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 167+ 862C 40 00 00 80
 168+ 8630
 169+ 8630 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 169+ 8634 42 00 02 A2
 170+ 8638 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 170+ 863C 02 AA 00 01
 171+ 8640 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 171+ 8644 F0 00 36 00
 172+ 8648 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 172+ 864C FF 40 00 BE
 173+ 8650 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 173+ 8654 00 32 A8 00
 174+ 8658 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 174+ 865C A0 00 00 40
 175+ 8660
 176+ 8660 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 176+ 8664 A1 00 01 51
 177+ 8668 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 177+ 866C 01 55 00 00
 178+ 8670 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 178+ 8674 F8 00 1B 00
 179+ 8678 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 179+ 867C FF A0 00 1F
 180+ 8680 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 180+ 8684 00 09 54 00
 181+ 8688 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 181+ 868C 50 00 00 20
 182+ 8690
 183+ 8690 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 183+ 8694 50 80 00 A8
 184+ 8698 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 184+ 869C 00 AA 80 00
 185+ 86A0 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 185+ 86A4 FC 00 0D 80
 186+ 86A8 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 186+ 86AC FF D0 00 0F
 187+ 86B0 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 187+ 86B4 00 04 AA 00
 188+ 86B8 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 188+ 86BC 28 00 00 10
 189+ 86C0
 190+ 86C0              ; ----------------------------------------------------------------------------------------
 191+ 86C0
 192+ 86C0              ; Amadeus. 2x2.
 193+ 86C0
 194+ 86C0 00 87        Indice_Amadeus_der defw Amadeus
 195+ 86C2 00 00        	defw 0
 196+ 86C4 30 87        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 86C6 00 00        	defw 0
 198+ 86C8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 86CA 00 00        	defw 0
 200+ 86CC 90 87        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 86CE 00 00        	defw 0	 								; (Fín de índice).
 202+ 86D0
 203+ 86D0 00 87        Indice_Amadeus_izq defw Amadeus
 204+ 86D2 00 00        	defw 0
 205+ 86D4 90 87        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 86D6 00 00        	defw 0
 207+ 86D8 60 87        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 86DA 00 00        	defw 0
 209+ 86DC 30 87        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 86DE 00 00        	defw 0	 								; (Fín de índice).
 211+ 86E0
 212+ 86E0              	org $8700
 213+ 8700
 214+ 8700 01 80 00     Amadeus DEFB $01,$80,0
 215+ 8703 23 C4 00     	DEFB	$23,$C4,0
 216+ 8706 26 64 00     	DEFB	$26,$64,0
 217+ 8709 24 24 00     	DEFB	$24,$24,0
 218+ 870C 2C 34 00     	DEFB	$2C,$34,0
 219+ 870F 6D B6 00     	DEFB	$6D,$B6,0
 220+ 8712 6F F6 00     	DEFB	$6F,$F6,0
 221+ 8715 67 E6 00     	DEFB	$67,$E6,0
 222+ 8718 E7 E7 00     	DEFB	$E7,$E7,0
 223+ 871B F3 CF 00     	DEFB	$F3,$CF,0
 224+ 871E F7 EF 00     	DEFB	$F7,$EF,0
 225+ 8721 FF FF 00     	DEFB	$FF,$FF,0
 226+ 8724 FB DF 00     	DEFB	$FB,$DF,0
 227+ 8727 FB DF 00     	DEFB	$FB,$DF,0
 228+ 872A 8B D1 00     	DEFB	$8B,$D1,0
 229+ 872D 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 230+ 8730
 231+ 8730 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8734 F1 00 09 99
 232+ 8738 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 873C 0B 0D 00 1B
 233+ 8740 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8744 80 19 F9 80
 234+ 8748 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 874C F3 C0 3D FB
 235+ 8750 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8754 3E F7 C0 3E
 236+ 8758 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 875C 40 1C 63 80
 237+ 8760
 238+ 8760 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8764 3C 40 02 66
 239+ 8768 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 876C 02 C3 40 06
 240+ 8770 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8774 60 06 7E 60
 241+ 8778 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 877C 3C F0 0F 7E
 242+ 8780 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8784 0F BD F0 0F
 243+ 8788 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 878C 10 07 18 E0
 244+ 8790
 245+ 8790 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8794 8F 10 00 99
 246+ 8798 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 879C 00 B0 D0 01
 247+ 87A0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 87A4 D8 01 9F 98
 248+ 87A8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 87AC CF 3C 03 DF
 249+ 87B0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 87B4 03 EF 7C 03
 250+ 87B8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 87BC 44 01 C6 38
 251+ 87C0
 252+ 87C0              ; ----------------------------------------------------------------------------------------
 253+ 87C0
 254+ 87C0 C6 87        Indice_Explosion_entidades defw Explosion_entidades_1
 255+ 87C2 00 88        	defw Explosion_entidades_2
 256+ 87C4 30 88        	defw Explosion_entidades_3
 257+ 87C6
 258+ 87C6 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 259+ 87C9 08 10 00     	DEFB 	$08,$10,$00
 260+ 87CC 04 38 40     	DEFB	$04,$38,$40
 261+ 87CF 03 7D 80     	DEFB	$03,$7D,$80
 262+ 87D2 02 E6 80     	DEFB	$02,$E6,$80
 263+ 87D5 01 B7 00     	DEFB	$01,$B7,$00
 264+ 87D8 01 7F 00     	DEFB	$01,$7F,$00
 265+ 87DB 03 DD 80     	DEFB	$03,$DD,$80
 266+ 87DE 0F FF E0     	DEFB	$0F,$FF,$E0
 267+ 87E1 03 3B 80     	DEFB	$03,$3B,$80
 268+ 87E4 01 9D 00     	DEFB	$01,$9D,$00
 269+ 87E7 01 F6 00     	DEFB	$01,$F6,$00
 270+ 87EA 02 FD 80     	DEFB	$02,$FD,$80
 271+ 87ED 03 00 40     	DEFB	$03,$00,$40
 272+ 87F0 04 00 00     	DEFB	$04,$00,$00
 273+ 87F3 08 00 00     	DEFB	$08,$00,$00
 274+ 87F6
 275+ 87F6              	org $8800
 276+ 8800
 277+ 8800 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 8804 38 10 03 BC
 278+ 8808 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 880C 04 06 C0 00
 279+ 8810 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 8814 00 03 DD 80
 280+ 8818 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 881C 3A 70 01 9C
 281+ 8820 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 8824 04 F8 80 06
 282+ 8828 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 882C 00 00 00 00
 283+ 8830
 284+ 8830 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 284+ 8834 00 20 08 00
 285+ 8838 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 285+ 883C 00 06 00 00
 286+ 8840 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 286+ 8844 00 00 14 30
 287+ 8848 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 287+ 884C 38 00 01 08
 288+ 8850 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 288+ 8854 00 80 00 04
 289+ 8858 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 289+ 885C 10 08 00 20
 290+ 8860
 291+ 8860              ; ------------------------------------------
 292+ 8860
 293+ 8860 66 88        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 294+ 8862 96 88        	defw Explosion_Amadeus_2
 295+ 8864 C6 88        	defw Explosion_Amadeus_3
 296+ 8866
 297+ 8866 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 298+ 8869 02 3C 36     	DEFB	$02,$3C,$36
 299+ 886C 02 66 56     	DEFB	$02,$66,$56
 300+ 886F 02 42 48     	DEFB	$02,$42,$48
 301+ 8872 02 C3 32     	DEFB	$02,$C3,$32
 302+ 8875 06 DB 0C     	DEFB	$06,$DB,$0C
 303+ 8878 06 FE 46     	DEFB	$06,$FE,$46
 304+ 887B 06 79 68     	DEFB	$06,$79,$68
 305+ 887E 0E 76 D8     	DEFB	$0E,$76,$D8
 306+ 8881 1E 34 6C     	DEFB	$1E,$34,$6C
 307+ 8884 0F 6E BE     	DEFB	$0F,$6E,$BE
 308+ 8887 0F EF B0     	DEFB	$0F,$EF,$B0
 309+ 888A 0F B5 A0     	DEFB	$0F,$B5,$A0
 310+ 888D 0F B1 8A     	DEFB	$0F,$B1,$8A
 311+ 8890 08 BA 4C     	DEFB	$08,$BA,$4C
 312+ 8893 07 19 80     	DEFB	$07,$19,$80
 313+ 8896
 314+ 8896 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 315+ 8899 00 3C 36     	DEFB	$00,$3C,$36
 316+ 889C 00 66 56     	DEFB	$00,$66,$56
 317+ 889F 04 42 48     	DEFB	$04,$42,$48
 318+ 88A2 0A 03 32     	DEFB	$0A,$03,$32
 319+ 88A5 14 DB 0C     	DEFB	$14,$DB,$0C
 320+ 88A8 1C DE 46     	DEFB	$1C,$DE,$46
 321+ 88AB 36 49 68     	DEFB 	$36,$49,$68
 322+ 88AE 0C 76 D8     	DEFB	$0C,$76,$D8
 323+ 88B1 10 34 6C     	DEFB	$10,$34,$6C
 324+ 88B4 2B 6E BE     	DEFB	$2B,$6E,$BE
 325+ 88B7 0E AF B0     	DEFB	$0E,$AF,$B0
 326+ 88BA 29 B5 A0     	DEFB	$29,$B5,$A0
 327+ 88BD 0C 91 8A     	DEFB	$0C,$91,$8A
 328+ 88C0 08 BA 4C     	DEFB	$08,$BA,$4C
 329+ 88C3 07 19 80     	DEFB	$07,$19,$80
 330+ 88C6
 331+ 88C6 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 332+ 88C9 00 00 00     	DEFB	$00,$00,$00
 333+ 88CC 00 00 00     	DEFB	$00,$00,$00
 334+ 88CF 00 00 40     	DEFB	$00,$00,$40
 335+ 88D2 00 00 30     	DEFB	$00,$00,$30
 336+ 88D5 00 00 08     	DEFB	$00,$00,$08
 337+ 88D8 00 82 40     	DEFB	$00,$82,$40
 338+ 88DB 04 04 68     	DEFB	$04,$04,$68
 339+ 88DE 04 20 58     	DEFB	$04,$20,$58
 340+ 88E1 18 12 2C     	DEFB	$18,$12,$2C
 341+ 88E4 2A 40 3C     	DEFB	$2A,$40,$3C
 342+ 88E7 0F C2 30     	DEFB	$0F,$C2,$30
 343+ 88EA 29 80 A0     	DEFB	$29,$80,$A0
 344+ 88ED 0F 84 88     	DEFB	$0F,$84,$88
 345+ 88F0 08 A0 4C     	DEFB	$08,$A0,$4C
 346+ 88F3 07 11 80     	DEFB	$07,$11,$80
 347+ 88F6
# file closed: Sprites_e_indices.asm
 142  88F6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 88F6              ; ---------------------------------------------------------------------
   2+ 88F6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 88F6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 88F6              ; ---------------------------------------------------------------------
   5+ 88F6
   6+ 88F6              ; 30/05/24
   7+ 88F6              ;
   8+ 88F6              ;	En esta tabla iremos almacenando:
   9+ 88F6              ;
  10+ 88F6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 88F6              ;
  12+ 88F6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 88F6
  14+ 88F6 00 00 00...  Numeros_aleatorios ds 7
  15+ 88FD
  16+ 88FD              	org $8900
  17+ 8900
  18+ 8900 00 00 00...  Tabla_de_pintado ds 27								 ; No puede haber cambio de byte alto en la Tabla_de_pintado, ese es el motivo del "org".
  19+ 891B
  20+ 891B              ;	db 0, defw 0
  21+ 891B              ;	db 0, defw 0
  22+ 891B              ;	db 0, defw 0
  23+ 891B              ;	db 0, defw 0
  24+ 891B              ;	db 0, defw 0
  25+ 891B              ;	db 0, defw 0
  26+ 891B              ;	db 0, defw 0
  27+ 891B
  28+ 891B F8 89        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  29+ 891D              ;	defw ...
  30+ 891D              ; 	defw ...
  31+ 891D 00 00        	defw 0
  32+ 891F
  33+ 891F              ;* Caja del disparo de Amadeus y cajas de disparos de entidades.
  34+ 891F
  35+ 891F 00 00        Disparo_Amad defw 0									; Puntero objeto.
  36+ 8921 00 00        	defw 0											; Puntero de impresión.
  37+ 8923
  38+ 8923 31 89        Indice_de_disparos_entidades defw Disparo_1
  39+ 8925 37 89        	defw Disparo_2
  40+ 8927 3D 89        	defw Disparo_3
  41+ 8929 43 89        	defw Disparo_4
  42+ 892B 49 89        	defw Disparo_5
  43+ 892D 4F 89        	defw Disparo_6
  44+ 892F 55 89        	defw Disparo_7
  45+ 8931
  46+ 8931 00 00        Disparo_1 defw 0									; Puntero objeto.
  47+ 8933 00 00        	defw 0											; Puntero de impresión.
  48+ 8935 00 00        	defw 0											; Control.
  49+ 8937
  50+ 8937 00 00        Disparo_2 defw 0									; Puntero objeto.
  51+ 8939 00 00        	defw 0											; Puntero de impresión.
  52+ 893B 00 00        	defw 0											; Control.
  53+ 893D
  54+ 893D 00 00        Disparo_3 defw 0									; Puntero objeto.
  55+ 893F 00 00        	defw 0											; Puntero de impresión.
  56+ 8941 00 00        	defw 0											; Control.
  57+ 8943
  58+ 8943 00 00        Disparo_4 defw 0									; Puntero objeto.
  59+ 8945 00 00        	defw 0											; Puntero de impresión.
  60+ 8947 00 00        	defw 0											; Control.
  61+ 8949
  62+ 8949 00 00        Disparo_5 defw 0									; Puntero objeto.
  63+ 894B 00 00        	defw 0											; Puntero de impresión.
  64+ 894D 00 00        	defw 0											; Control.
  65+ 894F
  66+ 894F 00 00        Disparo_6 defw 0									; Puntero objeto.
  67+ 8951 00 00        	defw 0											; Puntero de impresión.
  68+ 8953 00 00        	defw 0											; Control.
  69+ 8955
  70+ 8955 00 00        Disparo_7 defw 0									; Puntero objeto.
  71+ 8957 00 00        	defw 0											; Puntero de impresión.
  72+ 8959 00 00        	defw 0											; Control.
  73+ 895B
  74+ 895B              ; -------------------------------------------------------------------------------------
  75+ 895B              ;
  76+ 895B              ;	Índice de cajas de entidades.
  77+ 895B              ;
  78+ 895B              ;	18/1/24
  79+ 895B              ;
  80+ 895B
  81+ 895B              Indice_de_cajas_de_entidades
  82+ 895B
  83+ 895B 79 89        	defw Caja_1
  84+ 895D 85 89        	defw Caja_2
  85+ 895F 91 89        	defw Caja_3
  86+ 8961 9D 89        	defw Caja_4
  87+ 8963 A9 89        	defw Caja_5
  88+ 8965 B5 89        	defw Caja_6
  89+ 8967 C1 89        	defw Caja_7
  90+ 8969
  91+ 8969 00 00        	defw 0
  92+ 896B 00 00        	defw 0
  93+ 896D
  94+ 896D              ; -------------------------
  95+ 896D
  96+ 896D              ; Relleno para que no se corrompa el movimiento. ?????
  97+ 896D
  98+ 896D              ;	db 0
  99+ 896D
 100+ 896D              ; ---------- ---------- ---------- ---------- ----------
 101+ 896D              ;
 102+ 896D              ;	28/05/24
 103+ 896D              ;
 104+ 896D              ; 	Cada caja tiene 14 bytes !!!
 105+ 896D              ;
 106+ 896D              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 107+ 896D
 108+ 896D 00           Amadeus_BOX db 0										; (Tipo).
 109+ 896E 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 110+ 8970 00           	db 0												; (Contador_de_vueltas).
 111+ 8971 00           Impacto_Amadeus	db 0									; (Impacto).
 112+ 8972 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 113+ 8974 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 114+ 8976 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 115+ 8978 00           	db 0												; (Velocidad).
 116+ 8979
 117+ 8979              ; ---------- ---------- ---------- ---------- ----------
 118+ 8979              ;
 119+ 8979              ;	22/01/24
 120+ 8979              ;
 121+ 8979              ; 	Cada caja tiene 12 bytes !!!
 122+ 8979
 123+ 8979 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 124+ 897C 00           	db 0												; (Contador_de_vueltas).
 125+ 897D 00           	db 0												; (Impacto).
 126+ 897E 00 00        	defw 0												; (Puntero_de_impresion).
 127+ 8980 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 128+ 8982 00 00        	defw 0 												; (Contador_de_mov_masticados).
 129+ 8984 00           	db 0												; (Velocidad).
 130+ 8985
 131+ 8985              ; ---------- ---------- ---------- ---------- ----------
 132+ 8985
 133+ 8985 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 134+ 8988 00           	db 0 												; (Contador_de_vueltas).
 135+ 8989 00           	db 0												; (Impacto).
 136+ 898A 00 00        	defw 0												; (Puntero_de_impresion).
 137+ 898C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 138+ 898E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 139+ 8990 00           	db 0												; (Velocidad).
 140+ 8991
 141+ 8991              ; ---------- ---------- ---------- ---------- ----------
 142+ 8991
 143+ 8991 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 144+ 8994 00           	db 0 												; (Contador_de_vueltas).
 145+ 8995 00           	db 0												; (Impacto).
 146+ 8996 00 00        	defw 0												; (Puntero_de_impresion).
 147+ 8998 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 148+ 899A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 149+ 899C 00           	db 0												; (Velocidad).
 150+ 899D
 151+ 899D              ; ---------- ---------- ---------- ---------- ----------
 152+ 899D
 153+ 899D 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 154+ 89A0 00           	db 0 												; (Contador_de_vueltas).
 155+ 89A1 00           	db 0												; (Impacto).
 156+ 89A2 00 00        	defw 0												; (Puntero_de_impresion).
 157+ 89A4 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 158+ 89A6 00 00        	defw 0 												; (Contador_de_mov_masticados).
 159+ 89A8 00           	db 0												; (Velocidad).
 160+ 89A9
 161+ 89A9              ; ---------- ---------- ---------- ---------- ----------
 162+ 89A9
 163+ 89A9 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 164+ 89AC 00           	db 0 												; (Contador_de_vueltas).
 165+ 89AD 00           	db 0												; (Impacto).
 166+ 89AE 00 00        	defw 0												; (Puntero_de_impresion).
 167+ 89B0 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 168+ 89B2 00 00        	defw 0 												; (Contador_de_mov_masticados).
 169+ 89B4 00           	db 0												; (Velocidad).
 170+ 89B5
 171+ 89B5              ; ---------- ---------- ---------- ---------- ----------
 172+ 89B5
 173+ 89B5 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 174+ 89B8 00           	db 0 												; (Contador_de_vueltas).
 175+ 89B9 00           	db 0												; (Impacto).
 176+ 89BA 00 00        	defw 0												; (Puntero_de_impresion).
 177+ 89BC 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 178+ 89BE 00 00        	defw 0 												; (Contador_de_mov_masticados).
 179+ 89C0 00           	db 0												; (Velocidad).
 180+ 89C1
 181+ 89C1              ; ---------- ---------- ---------- ---------- ----------
 182+ 89C1
 183+ 89C1 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 184+ 89C4 00           	db 0 												; (Contador_de_vueltas).
 185+ 89C5 00           	db 0												; (Impacto).
 186+ 89C6 00 00        	defw 0												; (Puntero_de_impresion).
 187+ 89C8 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 188+ 89CA 00 00        	defw 0 												; (Contador_de_mov_masticados).
 189+ 89CC 00           	db 0												; (Velocidad).
 190+ 89CD
 191+ 89CD              ; -------------------------------------------------------------------------------------
 192+ 89CD              ;
 193+ 89CD              ;	11/1/24
 194+ 89CD              ;
 195+ 89CD              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 196+ 89CD              ;
 197+ 89CD              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 198+ 89CD              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 199+ 89CD              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 200+ 89CD              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 201+ 89CD
 202+ 89CD              Indice_de_definiciones_de_entidades
 203+ 89CD
 204+ 89CD D1 89        	defw Entidad_1
 205+ 89CF DE 89        	defw Entidad_2
 206+ 89D1
 207+ 89D1              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 208+ 89D1
 209+ 89D1              ;	BADSAT, (Satélite malvado).
 210+ 89D1
 211+ 89D1 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 212+ 89D4 01           	db 1												; (Contador_de_vueltas).
 213+ 89D5 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 214+ 89D7 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 215+ 89D9 03 40        	defw $4003	                                     	; (Posicion_inicio).
 216+ 89DB 01           	db 1												; (Cuad_objeto).
 217+ 89DC 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 218+ 89DE
 219+ 89DE 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 220+ 89E1 01           	db 1												; (Contador_de_vueltas).
 221+ 89E2 30 85        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 222+ 89E4 8A 83        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 223+ 89E6 40 50        	defw $5040                                      	; (Posicion_inicio).
 224+ 89E8 01           	db 1												; (Cuad_objeto).
 225+ 89E9 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 226+ 89EB
 227+ 89EB              ; -------------------------------------------------------------------------------------
 228+ 89EB              ;
 229+ 89EB              ;	28/05/24
 230+ 89EB              ;
 231+ 89EB              ;	Definición de Amadeus.
 232+ 89EB              ;
 233+ 89EB              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 234+ 89EB              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 235+ 89EB
 236+ 89EB 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 237+ 89EE 00           	db 0												; (Contador_de_vueltas).
 238+ 89EF C0 86        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 239+ 89F1 D0 86        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 240+ 89F3 C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 241+ 89F5 03           	db 3												; (Cuad_objeto).
 242+ 89F6 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
 143  89F8              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 89F8
   2+ 89F8
   3+ 89F8              ;   07/07/23
   4+ 89F8              ;
   5+ 89F8              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 89F8              ;
   7+ 89F8              ;   Codificación:
   8+ 89F8              ;
   9+ 89F8              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 89F8              ;
  11+ 89F8              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 89F8              ;
  13+ 89F8              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 89F8              ;
  15+ 89F8              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 89F8              ;
  17+ 89F8              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 89F8              ;                               ..... %01000010 Vel_up 4
  19+ 89F8              ;                                               Vel_down 2
  20+ 89F8              ;                               ..... $42
  21+ 89F8              ;
  22+ 89F8              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 89F8              ;
  24+ 89F8              ;                               ..... %01000010 Vel_left 4
  25+ 89F8              ;                                               Vel_right 2
  26+ 89F8              ;                               ..... $42
  27+ 89F8              ;
  28+ 89F8              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 89F8              ;
  30+ 89F8              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 89F8              ;
  32+ 89F8              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 89F8              ;
  34+ 89F8              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 89F8              ;                                     $53
  36+ 89F8              ;
  37+ 89F8              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 89F8              ;
  39+ 89F8              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 89F8              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 89F8              ;
  42+ 89F8              ;                       Arriba ..... $81
  43+ 89F8              ;                       Arriba - izquierda ..... $a1
  44+ 89F8              ;                       Arriba - derecha ..... $91
  45+ 89F8              ;
  46+ 89F8              ;                       Abajo ..... $41
  47+ 89F8              ;                       Abajo - izquierda ..... $61
  48+ 89F8              ;                       Abajo - derecha ..... $51
  49+ 89F8              ;
  50+ 89F8              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 89F8              ;
  52+ 89F8              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 89F8              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 89F8              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 89F8              ;
  56+ 89F8              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 89F8              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 89F8              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 89F8              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 89F8              ;
  61+ 89F8              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 89F8              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 89F8              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 89F8              ;
  65+ 89F8              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 89F8              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 89F8              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 89F8              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 89F8
  70+ 89F8              ; ----- ----- ----- ----- -----
  71+ 89F8
  72+ 89F8 24 8A        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 89FA 2C 8A            defw F_1
  74+ 89FC 36 8A            defw F_2
  75+ 89FE 40 8A            defw Codo_abajo_derecha
  76+ 8A00 74 8A            defw Derecha_y_subiendo
  77+ 8A02 7E 8A            defw Derecha_y_subiendo_1
  78+ 8A04 88 8A            defw F_3
  79+ 8A06 92 8A            defw F_4
  80+ 8A08 9C 8A            defw Derecha_y_bajando
  81+ 8A0A A6 8A            defw Derecha_y_bajando_1
  82+ 8A0C B0 8A            defw Derecha_y_bajando_2
  83+ 8A0E BA 8A            defw Codo_derecha_abajo
  84+ 8A10 EA 8A            defw Codo_abajo_izq.
  85+ 8A12 1E 8B            defw Izquierda_y_subiendo
  86+ 8A14 28 8B            defw Izquierda_y_subiendo_1
  87+ 8A16 32 8B            defw F_5
  88+ 8A18 3C 8B            defw F_6
  89+ 8A1A 46 8B            defw Izquierda_y_bajando
  90+ 8A1C 50 8B            defw Izquierda_y_bajando_1
  91+ 8A1E 5A 8B            defw Izquierda_y_bajando_2
  92+ 8A20 64 8B            defw Codo_izquierda_abajo
  93+ 8A22 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 8A24
  95+ 8A24 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8A28 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8A2C
  98+ 8A2C 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8A30 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 8A34 08 00
 100+ 8A36
 101+ 8A36 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8A3A 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8A3E 0F FE
 103+ 8A40
 104+ 8A40 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 8A44 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8A48 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8A4C 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8A50 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 8A54 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8A58 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8A5C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8A60 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 8A64 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8A68 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8A6C 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8A70 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8A74
 118+ 8A74 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8A78 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8A7C 06 00
 120+ 8A7E
 121+ 8A7E 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8A82 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 8A86 02 00
 123+ 8A88
 124+ 8A88 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8A8C 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8A90 04 00
 126+ 8A92
 127+ 8A92 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 8A96 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8A9A 08 00
 129+ 8A9C
 130+ 8A9C 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8AA0 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8AA4 02 00
 132+ 8AA6
 133+ 8AA6 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8AAA 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8AAE 06 00
 135+ 8AB0
 136+ 8AB0 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8AB4 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 8AB8 06 00
 138+ 8ABA
 139+ 8ABA              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8ABA
 141+ 8ABA 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8ABE 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8AC2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 8AC6 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 8ACA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8ACE 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8AD2 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 8AD6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 8ADA 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8ADE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8AE2 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 8AE6 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 8AEA
 154+ 8AEA 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8AEE 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8AF2 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 8AF6 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 8AFA 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8AFE 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8B02 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 8B06 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8B0A 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8B0E 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 8B12 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 8B16 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8B1A 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8B1E
 168+ 8B1E 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 8B22 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 8B26 06 00
 170+ 8B28
 171+ 8B28 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8B2C 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8B30 02 00
 173+ 8B32
 174+ 8B32 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 8B36 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8B3A 04 00
 176+ 8B3C
 177+ 8B3C 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8B40 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 8B44 08 00
 179+ 8B46
 180+ 8B46 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8B4A 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8B4E 02 00
 182+ 8B50
 183+ 8B50 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 8B54 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8B58 06 00
 185+ 8B5A
 186+ 8B5A 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8B5E 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8B62 06 00
 188+ 8B64
 189+ 8B64 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8B68 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8B6C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8B70 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8B74 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8B78 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8B7C 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8B80 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8B84 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8B88 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8B8C 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8B90 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8B94
 202+ 8B94
 203+ 8B94
 204+ 8B94
 205+ 8B94
 206+ 8B94
 207+ 8B94
 208+ 8B94
 209+ 8B94
 210+ 8B94
# file closed: Patrones_de_mov.asm
 144  8B94              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8B94              ; 19/1/24
   2+ 8B94
   3+ 8B94              Indice_de_niveles
   4+ 8B94
   5+ 8B94 9C 8B        	defw Nivel_1
   6+ 8B96 A4 8B        	defw Nivel_2
   7+ 8B98
   8+ 8B98              ;	...
   9+ 8B98              ;	...
  10+ 8B98              ;	+ Niveles ...
  11+ 8B98
  12+ 8B98 00 00        	defw 0
  13+ 8B9A 00 00        	defw 0
  14+ 8B9C
  15+ 8B9C 03           Nivel_1 db 3									; Nº de entidades.
  16+ 8B9D 01 01 01 01  	db 1,1,1,1	                           		; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8BA1 01 01 01     	db 1,1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8BA4
  19+ 8BA4 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8BA5 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8BA9 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8BAD 01 02
  22+ 8BAF 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8BB3 01 02
  23+ 8BB5
# file closed: Niveles.asm
 145  8BB5
 146  8BB5              ; --------------------------------------------------------------------------------
 147  8BB5              ;
 148  8BB5              ; 12/05/24
 149  8BB5              ;
 150  8BB5              ; Parámetros DRAW.
 151  8BB5              ;
 152  8BB5
 153  8BB5              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 154  8BB5
 155  8BB5 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 156  8BB6              ;															- Patrón de movimiento.
 157  8BB6 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  8BB7 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  8BB8
 160  8BB8 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 161  8BB9              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 162  8BB9
 163  8BB9              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 164  8BB9              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 165  8BB9              ; Ejemplos.
 166  8BB9
 167  8BB9              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 168  8BB9              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 169  8BB9              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 170  8BB9              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 171  8BB9              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 172  8BB9
 173  8BB9 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 174  8BBA              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 175  8BBA              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 176  8BBA
 177  8BBA 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 178  8BBC              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 179  8BBC
 180  8BBC 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 181  8BBE
 182  8BBE              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 183  8BBE
 184  8BBE 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 185  8BC0              ;														; _palabras que componen el "movimiento_masticado".
 186  8BC0
 187  8BC0              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 188  8BC0
 189  8BC0 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 190  8BC1              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 191  8BC1              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 192  8BC1              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 193  8BC1              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 194  8BC1
 195  8BC1 00           Ctrl_2 db 0
 196  8BC2              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 197  8BC2              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 198  8BC2              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 199  8BC2              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 200  8BC2              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 201  8BC2              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 202  8BC2              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 203  8BC2              ;
 204  8BC2              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 205  8BC2              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 206  8BC2              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 207  8BC2              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 208  8BC2              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 209  8BC2              ;														BIT 4, ???
 210  8BC2              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 211  8BC2
 212  8BC2 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 213  8BC3              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 214  8BC3              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 215  8BC3              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 216  8BC3              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 217  8BC3              ;
 218  8BC3              ; 														DESCRIPCIÖN:
 219  8BC3              ;
 220  8BC3              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 221  8BC3              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 222  8BC3              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 223  8BC3              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 224  8BC3              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 225  8BC3              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 226  8BC3              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 227  8BC3              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 228  8BC3              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 229  8BC3              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 230  8BC3              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 231  8BC3              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 232  8BC3              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 233  8BC3              ;
 234  8BC3              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 235  8BC3              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 236  8BC3              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 237  8BC3
 238  8BC3              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 239  8BC3
 240  8BC3 00           Filas db 0												; Filas. [DRAW]
 241  8BC4 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 242  8BC5 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 243  8BC7 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 244  8BC9
 245  8BC9              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 246  8BC9
 247  8BC9 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 248  8BCA              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 249  8BCA              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 250  8BCA
 251  8BCA              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 252  8BCA
 253  8BCA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 254  8BCA              ;
 255  8BCA              ;	COLORES: 0 ..... NEGRO
 256  8BCA              ;    		 1 ..... AZUL
 257  8BCA              ; 			 2 ..... ROJO
 258  8BCA              ;			 3 ..... MAGENTA
 259  8BCA              ; 			 4 ..... VERDE
 260  8BCA              ; 			 5 ..... CIAN
 261  8BCA              ;			 6 ..... AMARILLO
 262  8BCA              ; 			 7 ..... BLANCO
 263  8BCA
 264  8BCA 00 00        Indice_Sprite_der defw 0
 265  8BCC 00 00        Indice_Sprite_izq defw 0
 266  8BCE 00 00        Puntero_DESPLZ_der defw 0
 267  8BD0 00 00        Puntero_DESPLZ_izq defw 0
 268  8BD2
 269  8BD2 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 270  8BD4 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 271  8BD5 00           Columnas db 0
 272  8BD6 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 273  8BD8              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 274  8BD8 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 275  8BD9
 276  8BD9              ; variables de control general.
 277  8BD9
 278  8BD9 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 279  8BDA
 280  8BDA              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8BDA
 282  8BDA              Perfiles_de_velocidad
 283  8BDA
 284  8BDA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 285  8BDB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 286  8BDC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 287  8BDD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 288  8BDE
 289  8BDE              ; Contadores de 16 bits.
 290  8BDE
 291  8BDE 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 292  8BE0 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 293  8BE2 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 294  8BE4 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 295  8BE6
 296  8BE6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 297  8BE6
 298  8BE6 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  8BE8 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  8BEA 00 00        Puntero_indice_mov_bucle defw 0							;
 301  8BEC              ;
 302  8BEC              ;
 303  8BEC 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  8BED              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  8BED              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  8BED 00           Incrementa_puntero_backup db 0
 307  8BEE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  8BEF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  8BEF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  8BF0 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  8BF1 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  8BF2              ;
 313  8BF2              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  8BF2              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  8BF2              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  8BF2              ;
 317  8BF2              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  8BF2              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  8BF2              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  8BF2              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  8BF2              ;
 322  8BF2              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  8BF2              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  8BF2              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  8BF2
 326  8BF2 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 327  8BF3
 328  8BF3              ;														DESCRIPCIÓN:
 329  8BF3              ;
 330  8BF3              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 331  8BF3              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 332  8BF3              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 333  8BF3              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 334  8BF3              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 335  8BF3              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 336  8BF3
 337  8BF3              ;														BIT 3, Recarga de nueva oleada.
 338  8BF3              ;														BIT 4, Recarga de nueva oleada.
 339  8BF3              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 340  8BF3              ;														BIT 6, **** Frame completo.
 341  8BF3              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 342  8BF3
 343  8BF3 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 344  8BF5              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 345  8BF5              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 346  8BF5              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 347  8BF5
 348  8BF5              ; Gestión de ENTIDADES y CAJAS.
 349  8BF5
 350  8BF5 00 00        Puntero_store_caja defw 0
 351  8BF7 00 00        Puntero_restore_caja defw 0
 352  8BF9 00 00        Indice_restore_caja defw 0
 353  8BFB 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 354  8BFC 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 355  8BFD 00           Entidades_en_curso db 0									; ..... ..... .....
 356  8BFE
 357  8BFE 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 358  8C00 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 359  8C02              ;														; _ puntero (Indice_entidades).
 360  8C02
 361  8C02              ;---------------------------------------------------------------------------------------------------------------
 362  8C02              ;
 363  8C02              ;	11/09/24
 364  8C02              ;
 365  8C02              ;	Álbumes.
 366  8C02
 367  8C02 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 368  8C04              ;														; _variable para almacenar lo posición del puntero_
 369  8C04              ; 														; _de pila, SP.
 370  8C04 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 371  8C06              ;														; La utiliza la rutina [Extrae_foto_registros].
 372  8C06
 373  8C06              ; Impresión. ----------------------------------------------------------------------------------------------------
 374  8C06
 375  8C06 00 00        Album_de_pintado defw 0
 376  8C08 00 00        Album_de_borrado defw 0
 377  8C0A 00 00        Album_de_pintado_Amadeus defw 0
 378  8C0C 00 00        Album_de_borrado_Amadeus defw 0
 379  8C0E 00 00        Album_de_pintado_disparos defw 0
 380  8C10 00 00        Album_de_borrado_disparos defw 0
 381  8C12
 382  8C12 00 00        Nivel_scan_disparos_album_de_pintado defw 0
 383  8C14 00           Num_de_bytes_album_de_disparos db 0
 384  8C15 00           Num_de_bytes_album_de_disparos_2 db 0
 385  8C16
 386  8C16 07           Numero_de_disparos_de_entidades db 7
 387  8C17
 388  8C17 01           Permiso_de_disparo_Amadeus db 1							; A "1", se puede generar disparo.
 389  8C18 00           Permiso_de_disparo_Entidades db 0						; A "1", se puede generar disparo.
 390  8C19
 391  8C19 00 00        Techo_Scanlines_album defw 0
 392  8C1B 00 00        Techo_Scanlines_album_2 defw 0
 393  8C1D 00           Switch db 0
 394  8C1E 00 00        Techo defw 0
 395  8C20 00 00        Scanlines_album_SP defw 0
 396  8C22 00 89        India_SP defw Tabla_de_pintado
 397  8C24 03 89        India_2_SP defw Tabla_de_pintado+3
 398  8C26
 399  8C26 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 400  8C27              ;
 401  8C27              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 402  8C27              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 403  8C27              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 404  8C27              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 405  8C27              ;																Habilita el borrado/pintado de sprites.
 406  8C27              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 407  8C27              ;																_ a la baja.
 408  8C27              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 409  8C27              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 410  8C27              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 411  8C27              ; 																_ el último frame de la explosión de nuestra nave.
 412  8C27              ;															BIT 7, "1" Indica que se ha iniciado el proceso de explosión en Amadeus.
 413  8C27              ;																_ Mientras este bit este activo, no se generarán dos explosiones de entidades a la vez.
 414  8C27
 415  8C27 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 416  8C28              ;
 417  8C28              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 418  8C28              ;
 419  8C28              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 420  8C28              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 421  8C28              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 422  8C28              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 423  8C28              ;
 424  8C28              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 425  8C28              ;															_ masticados ya generados.
 426  8C28              ;
 427  8C28              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 428  8C28              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 429  8C28              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 430  8C28              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 431  8C28
 432  8C28 00           Ctrl_5 db 0												;	BIT 0, "1" Indica que se ha eliminado un disparo. (Esta información es necesaria para borrar un único disparo de la pantalla).
 433  8C29              ;															BIT 1, "1" Indica que la entidad en curso es la alcanzada por nuestro disparo. La comparativa entre coordenadas ha sido satisfactoria.
 434  8C29              ;                                                           BIT 2, "1" Indica que ha desaparecido un disparo de entidad.
 435  8C29
 436  8C29
 437  8C29
 438  8C29
 439  8C29
 440  8C29              ; Gestión de Disparos.
 441  8C29
 442  8C29 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 443  8C2B 00 00        Puntero_de_impresion_disparo_de_entidad defw 0			; Guardaremos aquí la dirección de pantalla del último scanline de la entidad en curso.
 444  8C2D 00           Impacto2 db 0											; Byte de control de impactos.
 445  8C2E
 446  8C2E              ;
 447  8C2E              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 448  8C2E              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 449  8C2E              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 450  8C2E              ;														; bit_3. La rutina [Genera_coordenadas_de_disparo_Amadeus] pone este bit a "1" para indicar que un disparo de Amadeus ha alcanzado a una entidad.
 451  8C2E
 452  8C2E
 453  8C2E
 454  8C2E
 455  8C2E
 456  8C2E
 457  8C2E
 458  8C2E 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 459  8C30              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 460  8C30              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 461  8C30
 462  8C30 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que alcanza a una entidad, (Fila, Columna).
 463  8C32              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 464  8C32 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 465  8C35              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 466  8C35 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 467  8C38              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 468  8C38
 469  8C38              ;---------------------------------------------------------------------------------------------------------------
 470  8C38
 471  8C38              ; Relojes y temporizaciones.
 472  8C38
 473  8C38 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 474  8C39 05           Clock_explosion_Amadeus db 5
 475  8C3A 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 476  8C3B
 477  8C3B F6 88        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 478  8C3D F6 88        RND_SP_Disparos defw Numeros_aleatorios					; Puntero que se irá desplazando por el SET de nº aleatorios, (para generar disparos de entidades).
 479  8C3F 00           DB_RND_disparos db 0
 480  8C40
 481  8C40 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 482  8C42 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 483  8C43              ;														; Repite la oleada de entidades.
 484  8C43 30           CLOCK_disparo_entidad_MASTER db $30						; Reloj, decreciente.
 485  8C44 30           CLOCK_disparo_entidad db $30
 486  8C45
 487  8C45              ;---------------------------------------------------------------------------------------------------------------
 488  8C45
 489  8C45              ; Gestión de NIVELES.
 490  8C45
 491  8C45 00           Nivel db 0												; Nivel actual del juego.
 492  8C46 00 00        Puntero_indice_NIVELES defw 0
 493  8C48 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 494  8C4A              ; 														; _ que definen el NIVEL.
 495  8C4A
 496  8C4A              ; ---------------------------------------------------------------------------------------------------------------
 497  8C4A
 498  8C4A              ; Temporizaciones Shield.
 499  8C4A
 500  8C4A 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 501  8C4E 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 502  8C50 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 503  8C51 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 504  8C52 00           Shield_3 db 0
 505  8C53
 506  8C53 06           Lives db 6
 507  8C54
 508  8C54              ; 	INICIO  *************************************************************************************************************************************************************************
 509  8C54              ;
 510  8C54              ;	5/1/24
 511  8C54
 512  8C54              START
 513  8C54
 514  8C54 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 515  8C57 3E FD        	ld a,$fd 											; IM2 ON. Vector de interrupciones a $fdff, (defw debajo de la pila).
 516  8C59 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 517  8C5B ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 518  8C5D F3           	DI
 519  8C5E
 520  8C5E              ; Limpiamos pantalla.
 521  8C5E
 522  8C5E 3E 07        	ld a,%00000111
 523  8C60              ;	call Cls
 524  8C60 CD 10 91     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 525  8C63
 526  8C63              ; INICIALIZACIÓN.
 527  8C63
 528  8C63 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 529  8C65 CD 5D 92     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 530  8C68 CD A7 8E     	call Extrae_numero_aleatorio_y_avanza
 531  8C6B
 532  8C6B 6F           	ld l,a
 533  8C6C 26 00        	ld h,0
 534  8C6E 22 40 8C     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 535  8C71
 536  8C71              ;	Inicializa 1er Nivel.
 537  8C71
 538  8C71 21 94 8B     	ld hl,Indice_de_niveles
 539  8C74 22 46 8C     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 540  8C77 CD 8D 92     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 541  8C7A              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 542  8C7A              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 543  8C7A              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 544  8C7A
 545  8C7A              ;	Inicia los álbumes de líneas.
 546  8C7A
 547  8C7A CD 60 90     	call Inicia_albumes_de_lineas
 548  8C7D              ;
 549  8C7D CD 70 90     	call Inicia_albumes_de_lineas_Amadeus
 550  8C80 CD 7D 90     	call Inicia_albumes_de_disparos
 551  8C83
 552  8C83 CD A6 90     	call Inicia_Puntero_Disparo_Entidades
 553  8C86
 554  8C86 CD D2 92     4 call Inicia_Entidades
 555  8C89 CD 35 93     	call Inicia_Amadeus
 556  8C8C
 557  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 558  8C8C              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 559  8C8C              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 560  8C8C
 561  8C8C 11 6D 89     	ld de,Amadeus_BOX
 562  8C8F CD 88 94     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 563  8C92 CD 78 93     	call Limpiamos_bandeja_DRAW
 564  8C95
 565  8C95              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 566  8C95
 567  8C95 06 3C        	ld b,60
 568  8C97 CD 64 9D     2 call Amadeus_a_izquierda
 569  8C9A 10 FB        	djnz 2B
 570  8C9C
 571  8C9C CD 3E 90     	call Genera_datos_de_impresion_Amadeus
 572  8C9F
 573  8C9F              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 574  8C9F
 575  8C9F CD 90 90     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 576  8CA2              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 577  8CA2
 578  8CA2              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 579  8CA2              ; (Esto se dá cuando se inicia una nueva oleada).
 580  8CA2
 581  8CA2              ;	ld a,(Ctrl_1)
 582  8CA2              ;	bit 3,a
 583  8CA2              ;	jr nz,5F											 ; Loop
 584  8CA2
 585  8CA2              ;	ld de,Amadeus_db
 586  8CA2              ;	call Store_Amadeus
 587  8CA2
 588  8CA2              ; 	INICIA DISPAROS !!!!!
 589  8CA2
 590  8CA2              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 591  8CA2
 592  8CA2              ;5 call Inicia_punteros_de_cajas
 593  8CA2              ;	call Restore_entidad
 594  8CA2
 595  8CA2              ;	ld a,(Ctrl_1)
 596  8CA2              ;	bit 3,a
 597  8CA2              ;	jr z,6F
 598  8CA2
 599  8CA2              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 600  8CA2
 601  8CA2              ;	ld hl,Ctrl_1
 602  8CA2              ;	res 3,(hl)
 603  8CA2              ;	jr Main
 604  8CA2
 605  8CA2              ; Damos por concluida la construcción del FRAME.
 606  8CA2              ;
 607  8CA2
 608  8CA2 CD 1B 91     	call Inicia_Shield
 609  8CA5
 610  8CA5
 611  8CA5 2A 20 8C     6 ld hl,(Scanlines_album_SP)
 612  8CA8 22 19 8C     	ld (Techo_Scanlines_album),hl
 613  8CAB
 614  8CAB 2A 08 8C     	ld hl,(Album_de_borrado)
 615  8CAE 22 20 8C     	ld (Scanlines_album_SP),hl
 616  8CB1
 617  8CB1 21 00 89     	ld hl,Tabla_de_pintado
 618  8CB4 22 22 8C     	ld (India_SP),hl
 619  8CB7
 620  8CB7 21 26 8C     	ld hl,Ctrl_3
 621  8CBA CB C6        	set 0,(hl) 											; Indica Frame completo.
 622  8CBC CB D6        	set 2,(hl)
 623  8CBE CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 624  8CC0
 625  8CC0 FB           	ei 													; Ha de apuntar a $5c3a.
 626  8CC1
 627  8CC1 76           	halt
 628  8CC2
 629  8CC2              ; ------------------------------------
 630  8CC2
 631  8CC2              Main
 632  8CC2              ;
 633  8CC2              ; 20/09/24
 634  8CC2
 635  8CC2              ; Gestión de disparos.
 636  8CC2
 637  8CC2 CD 46 A0     	call Limpia_album_de_borrado_disparos
 638  8CC5 CD 8E 8E     	call Change_Disparos								; Intercambiamos los álbumes de disparos.
 639  8CC8 CD 11 9F     	call Motor_de_disparos_entidades
 640  8CCB CD 8A A0     	call Motor_Disparos_Amadeus							; Mueve y detecta colisión de los disparos de Amadeus.
 641  8CCE
 642  8CCE              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 643  8CCE              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 644  8CCE              ; Este hecho lo indica el bit2 de (Impacto2).
 645  8CCE
 646  8CCE CD 2C A2     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 647  8CD1
 648  8CD1              ; TEMPORIZACIONES !!!!!!!!!!!!!!!!
 649  8CD1
 650  8CD1 21 44 8C     	ld hl,CLOCK_disparo_entidad
 651  8CD4 35           	dec (hl)
 652  8CD5 CC D1 8D     	call z,Autoriza_disparo_de_entidades
 653  8CD8
 654  8CD8 2A 40 8C     	ld hl,(Clock_next_entity)
 655  8CDB ED 4B 78 5C  	ld bc,(FRAMES)
 656  8CDF A7           	and a
 657  8CE0 ED 42        	sbc hl,bc
 658  8CE2 20 16        	jr nz,1F
 659  8CE4
 660  8CE4              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 661  8CE4              ; _ (Clock_next_entity) para la siguiente entidad.
 662  8CE4
 663  8CE4 3A FC 8B     	ld a,(Numero_parcial_de_entidades)
 664  8CE7 47           	ld b,a
 665  8CE8 3A FD 8B     	ld a,(Entidades_en_curso)
 666  8CEB B8           	cp b
 667  8CEC 28 0C        	jr z,1F
 668  8CEE 30 0A        	jr nc,1F
 669  8CF0
 670  8CF0 3C           	inc a
 671  8CF1 32 FD 8B     	ld (Entidades_en_curso),a
 672  8CF4
 673  8CF4              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 674  8CF4
 675  8CF4 CD A7 8E     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 676  8CF7 CD C3 8E     	call Define_Clock_next_entity
 677  8CFA
 678  8CFA 3A FD 8B     1 ld a,(Entidades_en_curso)
 679  8CFD A7           	and a
 680  8CFE CA 78 8D     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 681  8D01 47           	ld b,a												; No hay entidades que gestionar.
 682  8D02
 683  8D02              ; ( Código que ejecutamos con cada entidad: ).
 684  8D02
 685  8D02              ; --------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 686  8D02              ;
 687  8D02              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 688  8D02
 689  8D02 21 00 89     	ld hl,Tabla_de_pintado
 690  8D05 22 22 8C     	ld (India_SP),hl
 691  8D08
 692  8D08 21 26 8C     	ld hl,Ctrl_3
 693  8D0B CB D6        	set 2,(hl)
 694  8D0D CD 63 8E     	call Change
 695  8D10
 696  8D10 C5           2 push bc 												; Nº de entidades en curso.
 697  8D11
 698  8D11 CD E8 90     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 699  8D14 ED 5B 20 8C  	ld de,(Scanlines_album_SP)
 700  8D18
 701  8D18              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 702  8D18
 703  8D18              ; En 1er lugar, ... existe (Impacto) de un disparo de Amadeus en esta entidad ???
 704  8D18              ; Si es así, comprobamos si es la entidad en curso la alcanzada por nuestro disparo.
 705  8D18
 706  8D18 3A 2D 8C     	ld a,(Impacto2)
 707  8D1B CB 5F        	bit 3,a
 708  8D1D C4 0C A0     	call nz,Compara_con_coordenadas_de_disparo
 709  8D20
 710  8D20 3A B9 8B     	ld a,(Impacto)
 711  8D23 CB 4F        	bit 1,a
 712  8D25 C4 F8 91     	call nz,Genera_explosion
 713  8D28 20 31        	jr nz,Gestiona_siguiente_entidad
 714  8D2A
 715  8D2A 3A B9 8B     	ld a,(Impacto)
 716  8D2D A7           	and a
 717  8D2E 28 0C        	jr z,3F
 718  8D30
 719  8D30              ; IMPACTO en entidad por colisión con Amadeus.
 720  8D30
 721  8D30              ; 5/7/24
 722  8D30              ; Nota importante:
 723  8D30              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 724  8D30              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 725  8D30              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 726  8D30
 727  8D30 3A 71 89     	ld a,(Impacto_Amadeus)
 728  8D33 A7           	and a
 729  8D34 C4 F8 91     	call nz,Genera_explosion
 730  8D37 20 22        	jr nz,Gestiona_siguiente_entidad
 731  8D39
 732  8D39              ; Falsa colisión !!!
 733  8D39
 734  8D39 32 B9 8B     	ld (Impacto),a												; Colocamos el .db (Impacto) de la entidad en curso a "0".
 735  8D3C
 736  8D3C              ; -------------------------------------------
 737  8D3C
 738  8D3C CD 07 8F     3 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 739  8D3F CD 43 8E     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 740  8D42 CD F7 8F     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 741  8D45 CD F8 94     	call Genera_datos_de_impresion
 742  8D48 CD 9B 93     	call Decrementa_Contador_de_mov_masticados
 743  8D4B
 744  8D4B              ; -------------------------------------------
 745  8D4B
 746  8D4B              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 747  8D4B
 748  8D4B 2A BA 8B     	ld hl,(Puntero_de_impresion)
 749  8D4E CD CC 94     	call Genera_coordenadas
 750  8D51
 751  8D51              ; TODO: Generamos disparo ???
 752  8D51
 753  8D51 3A 18 8C     	ld a,(Permiso_de_disparo_Entidades)
 754  8D54 A7           	and a
 755  8D55 C4 F3 8D     	call nz,Entidad_genera_disparo_si_procede
 756  8D58
 757  8D58 CD AA A1     4 call Colision_Entidad_Amadeus									; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 758  8D5B
 759  8D5B              Gestiona_siguiente_entidad
 760  8D5B
 761  8D5B CD 6D 93      	call Store_Restore_cajas
 762  8D5E C1           	pop bc
 763  8D5F 10 AF        	djnz 2B
 764  8D61
 765  8D61              ; Hemos gestionado todas las entidades.
 766  8D61              ; ----- ----- -----
 767  8D61
 768  8D61 CD 1B 8F     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 769  8D64 CD 32 8F     	call Ordena_tabla_de_impresion
 770  8D67 CD 90 90     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 771  8D6A
 772  8D6A              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 773  8D6A              ; Hemos gestionado todas las unidades.
 774  8D6A              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 775  8D6A
 776  8D6A              ;	ld hl,Ctrl_1
 777  8D6A              ;	res 2,(hl)
 778  8D6A
 779  8D6A CD D8 8E     	call Borra_diferencia
 780  8D6D
 781  8D6D 3A 26 8C     	ld a,(Ctrl_3)
 782  8D70 CB 5F        	bit 3,a
 783  8D72 20 04        	jr nz,Gestion_de_Amadeus
 784  8D74
 785  8D74 EB           	ex de,hl
 786  8D75 71           	ld (hl),c
 787  8D76 2C           	inc l
 788  8D77 70           	ld (hl),b													; Nuevo techo, mayor que el anterior.
 789  8D78
 790  8D78              ;! GESTIONA AMADEUS !!!!!!!!!!
 791  8D78
 792  8D78              Gestion_de_Amadeus
 793  8D78
 794  8D78 21 26 8C     	ld hl,Ctrl_3
 795  8D7B CB 76        	bit 6,(hl)
 796  8D7D 28 13        	jr z,Amadeus_vivo
 797  8D7F
 798  8D7F              ; Amadeus ha sido destruido.
 799  8D7F              ; Decrementa (Temp_new_live).
 800  8D7F
 801  8D7F 21 3A 8C     	ld hl,Temp_new_live
 802  8D82 35           	dec (hl)
 803  8D83 20 26        	jr nz,End_frame
 804  8D85
 805  8D85              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 806  8D85
 807  8D85 21 53 8C     	ld hl,Lives
 808  8D88 35           	dec (hl)
 809  8D89
 810  8D89              ;! Fin del juego
 811  8D89
 812  8D89 F3           	di
 813  8D8A 28 FE        	jr z,$
 814  8D8C FB           	ei
 815  8D8D
 816  8D8D              ; Nueva nave.
 817  8D8D
 818  8D8D CD 09 8E     	call Reinicia_Amadeus
 819  8D90 18 19        	jr End_frame
 820  8D92
 821  8D92              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 822  8D92
 823  8D92              Amadeus_vivo
 824  8D92
 825  8D92 3A 71 89     	ld a,(Impacto_Amadeus)
 826  8D95 A7           	and a
 827  8D96 C4 28 92     	call nz, Genera_explosion_Amadeus
 828  8D99 20 10        	jr nz, End_frame
 829  8D9B
 830  8D9B CD D5 91     	call Teclado
 831  8D9E
 832  8D9E 21 26 8C     	ld hl,Ctrl_3
 833  8DA1 CB 6E        	bit 5,(hl)
 834  8DA3 28 06        	jr z,End_frame
 835  8DA5
 836  8DA5              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 837  8DA5
 838  8DA5 CD 7E 8E     	call Change_Amadeus
 839  8DA8 CD 3E 90     	call Genera_datos_de_impresion_Amadeus				; Genera los datos de impresión de la nave.
 840  8DAB
 841  8DAB              End_frame
 842  8DAB
 843  8DAB              ; 20/09/24. Deshabilitamos el permiso de disparo de entidades y generamos los scanlines de los disparos de entidades.
 844  8DAB
 845  8DAB AF           	xor a
 846  8DAC 32 18 8C     	ld (Permiso_de_disparo_Entidades),a
 847  8DAF
 848  8DAF
 849  8DAF              ; 23/08/24 Llegados a este punto: NO HAY POSIBILIDAD DE GENERAR MÁS DISPAROS.
 850  8DAF              ; Generamos los datos de impresión en el álbum_de_pintado y limpiamos el sobrante de datos del anterior FRAME si toca.
 851  8DAF
 852  8DAF CD 6E 9F     	call Genera_datos_de_impresion_disparos_Entidades
 853  8DB2 CD 11 A1     	call Genera_datos_de_impresion_disparos_Amadeus		; Genera los datos de impresión de los disparos de Amadeus y entidades.
 854  8DB5 CD 64 A0     	call Calcula_bytes_pintado_disparos
 855  8DB8 CD 71 A0     	call Limpia_album_de_pintado_disparos
 856  8DBB
 857  8DBB              ; ------------ ------------- --------------
 858  8DBB
 859  8DBB 2A 08 8C     	ld hl,(Album_de_borrado)
 860  8DBE 22 20 8C     	ld (Scanlines_album_SP),hl
 861  8DC1
 862  8DC1 21 26 8C     	ld hl,Ctrl_3
 863  8DC4 CB C6        	set 0,(hl) 											; Indica Frame completo.
 864  8DC6 CB 9E        	res 3,(hl)
 865  8DC8 CB A6        	res 4,(hl)
 866  8DCA
 867  8DCA AF           	xor a
 868  8DCB D3 FE        	out ($fe),a
 869  8DCD
 870  8DCD 76           	halt
 871  8DCE
 872  8DCE              ; ----------------------------------------
 873  8DCE
 874  8DCE              ;	ld a,(Ctrl_1) 										; Existe Loop?
 875  8DCE              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 876  8DCE CA C2 8C     	jp z,Main
 877  8DD1
 878  8DD1              ;------------------------------------------
 879  8DD1              ;
 880  8DD1              ;	14/09/24
 881  8DD1
 882  8DD1              Autoriza_disparo_de_entidades
 883  8DD1
 884  8DD1 3E 01        	ld a,1
 885  8DD3 32 18 8C     	ld (Permiso_de_disparo_Entidades),a
 886  8DD6
 887  8DD6 3A 43 8C     	ld a,(CLOCK_disparo_entidad_MASTER)
 888  8DD9 32 44 8C     	ld (CLOCK_disparo_entidad),a
 889  8DDC
 890  8DDC 2A 3D 8C     	ld hl,(RND_SP_Disparos)
 891  8DDF
 892  8DDF 7E           2 ld a,(hl)
 893  8DE0 A7           	and a
 894  8DE1 28 08        	jr z,1F
 895  8DE3
 896  8DE3 32 3F 8C     	ld (DB_RND_disparos),a
 897  8DE6 23           	inc hl
 898  8DE7 22 3D 8C     	ld (RND_SP_Disparos),hl
 899  8DEA
 900  8DEA C9           	ret
 901  8DEB
 902  8DEB 21 F6 88     1	ld hl,Numeros_aleatorios
 903  8DEE 22 3D 8C     	ld (RND_SP_Disparos),hl
 904  8DF1 18 EC        	jr 2B
 905  8DF3
 906  8DF3              ;------------------------------------------
 907  8DF3              ;
 908  8DF3              ;	14/09/24
 909  8DF3              ;
 910  8DF3              ;	Nota: en la bandeja DRAW se encuentran los datos de la entidad que va a disparar.
 911  8DF3
 912  8DF3              Entidad_genera_disparo_si_procede
 913  8DF3
 914  8DF3 3A FD 8B     	ld a,(Entidades_en_curso)
 915  8DF6 A7           	and a
 916  8DF7 C8           	ret z
 917  8DF8
 918  8DF8 3A 3F 8C     	ld a,(DB_RND_disparos)
 919  8DFB CB 4F        	bit 1,a
 920  8DFD F5           	push af											; Guardamos FLAGS.
 921  8DFE
 922  8DFE 17           	rla
 923  8DFF 17           	rla
 924  8E00
 925  8E00 32 3F 8C     	ld (DB_RND_disparos),a
 926  8E03
 927  8E03 F1           	pop af
 928  8E04 C4 A9 9F     	call nz,Genera_disparo_de_entidad_maldosa
 929  8E07
 930  8E07 C9           	ret
 931  8E08
 932  8E08
 933  8E08              ; RECARGA DE NUEVA OLEADA.
 934  8E08
 935  8E08              ;	ld a,(Contador_de_frames)
 936  8E08              ;	ld b,a
 937  8E08              ;	ld a,(Activa_recarga_cajas)
 938  8E08              ;	cp b
 939  8E08              ;	jr z,20F
 940  8E08
 941  8E08              ;	ld hl,Ctrl_1
 942  8E08              ;	set 4,(hl)
 943  8E08              ;	jp Main
 944  8E08
 945  8E08              ;20 ld hl,Ctrl_1
 946  8E08              ;	res 4,(hl)
 947  8E08
 948  8E08              ;	ld a,(Contador_de_frames)
 949  8E08
 950  8E08              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 951  8E08              ;! _ IMPREDECIBLE !!!!
 952  8E08
 953  8E08              ;	add 10
 954  8E08              ;	ld (Clock_next_entity),a
 955  8E08
 956  8E08              ;	jp 4B
 957  8E08
 958  8E08 C9           	ret
 959  8E09
 960  8E09              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 961  8E09              ;
 962  8E09              ;	16/11/23
 963  8E09
 964  8E09              ;;Gestiona_Amadeus
 965  8E09
 966  8E09              ;! Activa/desactiva impacto con Amadeus.
 967  8E09
 968  8E09              ;	ld a,(Impacto)
 969  8E09              ;	and a
 970  8E09              ;	jr nz,2F
 971  8E09
 972  8E09              ;;	call Mov_Amadeus
 973  8E09
 974  8E09              ;;2 ld a,(Ctrl_0)
 975  8E09              ;;	bit 4,a
 976  8E09              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 977  8E09
 978  8E09              ;;	call Guarda_foto_entidad_a_pintar
 979  8E09              ;;	call Guarda_datos_de_borrado_Amadeus
 980  8E09
 981  8E09              ;;1 ld hl,Ctrl_0
 982  8E09              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 983  8E09
 984  8E09              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 985  8E09
 986  8E09              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 987  8E09
 988  8E09              ;	call Calcula_numero_de_disparotes
 989  8E09
 990  8E09              ;;	ret
 991  8E09
 992  8E09              ; -----------------------------
 993  8E09              ;
 994  8E09              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 995  8E09              ;
 996  8E09              ;	INPUTS: B a de estar a "0".
 997  8E09
 998  8E09              ;Prepara_Borra_sprites
 999  8E09
1000  8E09              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
1001  8E09              ;	ld a,l
1002  8E09              ;	ret z
1003  8E09
1004  8E09              ;	srl a
1005  8E09
1006  8E09              ;2 sub 16
1007  8E09              ;	jr z,1F
1008  8E09              ;	inc b
1009  8E09              ;	jr 2B
1010  8E09
1011  8E09              ;1 inc b
1012  8E09
1013  8E09              ;	exx
1014  8E09              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1015  8E09              ;	exx
1016  8E09
1017  8E09              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1018  8E09              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1019  8E09
1020  8E09              ;	ret
1021  8E09
1022  8E09              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1023  8E09              ;
1024  8E09              ;	24/07/24
1025  8E09
1026  8E09              Reinicia_Amadeus
1027  8E09
1028  8E09              ;	Reinicia posición y estado.
1029  8E09
1030  8E09 21 CF 50     	ld hl,$50cf
1031  8E0C 22 72 89     	ld (p.imp.amadeus),hl
1032  8E0F 21 F0 E0     	ld hl,$e0f0
1033  8E12 22 74 89     	ld (Pamm_Amadeus),hl
1034  8E15 21 3D 00     	ld hl,$003d
1035  8E18 22 76 89     	ld (Comm_Amadeus),hl
1036  8E1B
1037  8E1B              ;	limpiamos el álbum de borrado.
1038  8E1B
1039  8E1B 2A 0C 8C     	ld hl,(Album_de_borrado_Amadeus)
1040  8E1E
1041  8E1E AF           	xor a
1042  8E1F 77           	ld (hl),a
1043  8E20
1044  8E20 E5           	push hl
1045  8E21 D1           	pop de
1046  8E22 13           	inc de
1047  8E23
1048  8E23 01 23 00     	ld bc,35
1049  8E26 ED B0        	ldir
1050  8E28
1051  8E28 CD 3E 90     	call Genera_datos_de_impresion_Amadeus
1052  8E2B
1053  8E2B              ;	Reinicia temporizaciones.
1054  8E2B
1055  8E2B CD 1B 91     	call Inicia_Shield
1056  8E2E
1057  8E2E 3E 5A        	ld a,90
1058  8E30 32 50 8C     	ld (Shield),a
1059  8E33
1060  8E33 3E 64        	ld a,100
1061  8E35 32 3A 8C     	ld (Temp_new_live),a
1062  8E38
1063  8E38              ; 	Restauramos el FLAG: Amadeus vivo.
1064  8E38
1065  8E38 21 26 8C     	ld hl,Ctrl_3
1066  8E3B CB B6        	res 6,(hl)
1067  8E3D
1068  8E3D              ;	Fuerza la impresión de la nave en el siguiente frame.
1069  8E3D
1070  8E3D 21 26 8C      	ld hl,Ctrl_3
1071  8E40 CB EE        	set 5,(hl)
1072  8E42
1073  8E42 C9           	ret
1074  8E43
1075  8E43              ; --------------------------------------------------------------------------------------------------------------
1076  8E43              ;
1077  8E43              ;	12/05/24
1078  8E43
1079  8E43 3A C0 8B     Ajusta_velocidad_entidad ld a,(Velocidad)
1080  8E46 CB 27        	sla a
1081  8E48 32 C0 8B     	ld (Velocidad),a
1082  8E4B E6 10        	and $10
1083  8E4D C8           	ret z
1084  8E4E
1085  8E4E              ; Restaura (Velocidad) a razón del nº de vueltas.
1086  8E4E
1087  8E4E 3A B8 8B     	ld a,(Contador_de_vueltas)
1088  8E51 CB 2F        	sra a
1089  8E53 CB 2F        	sra a
1090  8E55 32 C0 8B     	ld (Velocidad),a
1091  8E58
1092  8E58 2A BC 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1093  8E5B 23           	inc hl
1094  8E5C 23           	inc hl
1095  8E5D 23           	inc hl
1096  8E5E 23           	inc hl
1097  8E5F 22 BC 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1098  8E62
1099  8E62 C9           	ret
1100  8E63
1101  8E63              ; --------------------------------------------------------------------------------------------------------------
1102  8E63              ;
1103  8E63              ;	25/08/24
1104  8E63
1105  8E63              Change
1106  8E63
1107  8E63 3A 1D 8C     	ld a,(Switch)
1108  8E66 EE 01        	xor 1
1109  8E68 32 1D 8C     	ld (Switch),a
1110  8E6B 2A 06 8C     	ld hl,(Album_de_pintado)
1111  8E6E ED 5B 08 8C  	ld de,(Album_de_borrado)
1112  8E72 EB           	ex de,hl
1113  8E73 22 06 8C     	ld (Album_de_pintado),hl
1114  8E76 22 20 8C     	ld (Scanlines_album_SP),hl
1115  8E79 ED 53 08 8C  	ld (Album_de_borrado),de
1116  8E7D C9           	ret
1117  8E7E
1118  8E7E              Change_Amadeus
1119  8E7E
1120  8E7E 2A 0A 8C     	ld hl,(Album_de_pintado_Amadeus)
1121  8E81 ED 5B 0C 8C  	ld de,(Album_de_borrado_Amadeus)
1122  8E85 EB           	ex de,hl
1123  8E86 22 0A 8C     	ld (Album_de_pintado_Amadeus),hl
1124  8E89 ED 53 0C 8C  	ld (Album_de_borrado_Amadeus),de
1125  8E8D C9           	ret
1126  8E8E
1127  8E8E              Change_Disparos
1128  8E8E
1129  8E8E 2A 0E 8C     	ld hl,(Album_de_pintado_disparos)
1130  8E91 ED 5B 10 8C  	ld de,(Album_de_borrado_disparos)
1131  8E95 EB           	ex de,hl
1132  8E96 22 0E 8C     	ld (Album_de_pintado_disparos),hl
1133  8E99 ED 53 10 8C  	ld (Album_de_borrado_disparos),de
1134  8E9D 22 12 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1135  8EA0
1136  8EA0 3A 14 8C     	ld a,(Num_de_bytes_album_de_disparos)
1137  8EA3 32 15 8C     	ld (Num_de_bytes_album_de_disparos_2),a
1138  8EA6
1139  8EA6 C9           	ret
1140  8EA7
1141  8EA7              ; ------------------------------------
1142  8EA7              ;
1143  8EA7              ; 1/05/24
1144  8EA7
1145  8EA7              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1146  8EA7              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1147  8EA7
1148  8EA7              ;	DESTRUYE: HL,DE,A
1149  8EA7              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1150  8EA7
1151  8EA7              ;	Variables implicadas: (RND_SP).
1152  8EA7
1153  8EA7              Extrae_numero_aleatorio_y_avanza
1154  8EA7
1155  8EA7 21 00 89     	ld hl,Tabla_de_pintado
1156  8EAA EB           	ex de,hl
1157  8EAB 2A 3B 8C     	ld hl,(RND_SP)
1158  8EAE EB           	ex de,hl
1159  8EAF A7           	and a
1160  8EB0 ED 52        	sbc hl,de
1161  8EB2
1162  8EB2 2A 3B 8C     	ld hl,(RND_SP)
1163  8EB5 20 06        	jr nz,1F
1164  8EB7
1165  8EB7              ; Sitúa HL al principio de la tabla de nº aleatorios.
1166  8EB7
1167  8EB7 21 F6 88     	ld hl,Numeros_aleatorios
1168  8EBA 22 3B 8C     	ld (RND_SP),HL
1169  8EBD
1170  8EBD              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1171  8EBD
1172  8EBD 7E           1 ld a,(hl)
1173  8EBE 23           	inc hl
1174  8EBF 22 3B 8C     	ld (RND_SP),hl
1175  8EC2 C9           	ret
1176  8EC3
1177  8EC3              ; ------------------------------------
1178  8EC3              ;
1179  8EC3              ; 1/05/24
1180  8EC3
1181  8EC3              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1182  8EC3              ; (1 a 4 segundos).
1183  8EC3              ; Actualizamos (Clock_next_entity) con A.
1184  8EC3
1185  8EC3              ;	DESTRUYE: A y B.
1186  8EC3              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1187  8EC3              ;			 Actualiza (Clock_next_entity) con A.
1188  8EC3
1189  8EC3              ;	Variables implicadas: (Clock_next_entity).
1190  8EC3
1191  8EC3              ; Notas:
1192  8EC3
1193  8EC3              ; 	$32 1 seg.
1194  8EC3              ; 	$64 2 seg.
1195  8EC3              ; 	$96 3 seg.
1196  8EC3              ; 	$c8 4 seg.
1197  8EC3              ; 	$fa 5 seg.
1198  8EC3
1199  8EC3              ; $ffff 1310,7 seg, 22 minutos.
1200  8EC3
1201  8EC3              ;	$0100  5 seg. aproximadamente.
1202  8EC3              ;	$0200 10 seg. aproximadamente.
1203  8EC3              ;	$0300 15 seg. aproximadamente.
1204  8EC3              ;	$0400 20 seg. aproximadamente.
1205  8EC3              ;	$0500 25 seg. aproximadamente.
1206  8EC3              ;	$0600 30 seg. aproximadamente.
1207  8EC3
1208  8EC3              Define_Clock_next_entity
1209  8EC3
1210  8EC3 FE 34        	cp $34
1211  8EC5 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1212  8EC7
1213  8EC7              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1214  8EC7
1215  8EC7 4F           3 ld c,a
1216  8EC8 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1217  8ECA 2A 78 5C     	ld hl,(FRAMES)
1218  8ECD A7           	and a
1219  8ECE ED 4A        	adc hl,bc
1220  8ED0 22 40 8C     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1221  8ED3 C9           	ret
1222  8ED4
1223  8ED4 3E 34        1 ld a,$34
1224  8ED6 18 EF        	jr 3B
1225  8ED8
1226  8ED8              ; ------------------------------------
1227  8ED8              ;
1228  8ED8              ; 18/03/24
1229  8ED8
1230  8ED8              Borra_diferencia
1231  8ED8
1232  8ED8 ED 4B 20 8C  	ld bc,(Scanlines_album_SP)
1233  8EDC
1234  8EDC 3A 1D 8C     	ld a,(Switch)
1235  8EDF A7           	and a
1236  8EE0 28 08        	jr z,2F
1237  8EE2
1238  8EE2 2A 1B 8C     	ld hl,(Techo_Scanlines_album_2)
1239  8EE5 11 1B 8C     	ld de,Techo_Scanlines_album_2
1240  8EE8 18 06        	jr 3F
1241  8EEA
1242  8EEA 2A 19 8C     2 ld hl,(Techo_Scanlines_album)
1243  8EED 11 19 8C     	ld de,Techo_Scanlines_album
1244  8EF0
1245  8EF0              ; Diferencia.
1246  8EF0
1247  8EF0 ED 42        3 sbc hl,bc
1248  8EF2
1249  8EF2 C8           	ret z
1250  8EF3 D8           	ret c
1251  8EF4
1252  8EF4              ; Nuevo techo, (más bajo que el anterior).
1253  8EF4              ; Fijamos nuevo techo y borramos bytes sobrantes.
1254  8EF4
1255  8EF4 EB           	ex de,hl
1256  8EF5
1257  8EF5 71           	ld (hl),c
1258  8EF6 2C           	inc l
1259  8EF7 70           	ld (hl),b
1260  8EF8
1261  8EF8 AF           	xor a
1262  8EF9 43           	ld b,e
1263  8EFA
1264  8EFA 2A 20 8C     	ld hl,(Scanlines_album_SP)
1265  8EFD
1266  8EFD 77           1 ld (hl),a
1267  8EFE 23           	inc hl
1268  8EFF 10 FC        	djnz 1B
1269  8F01
1270  8F01              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1271  8F01
1272  8F01 21 26 8C     	ld hl,Ctrl_3
1273  8F04 CB DE        	set 3,(hl)
1274  8F06
1275  8F06 C9           	ret
1276  8F07
1277  8F07              ; --------------------------------------------------------------------------------------------------------------
1278  8F07              ;
1279  8F07              ;	26/3/24
1280  8F07
1281  8F07              Recauda_informacion_de_entidad_en_curso
1282  8F07
1283  8F07              ; Almacena la Coordenada Y de la entidad en curso.
1284  8F07
1285  8F07              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1286  8F07
1287  8F07 3A B7 8B     	ld a,(Coordenada_y)
1288  8F0A 2A 22 8C     	ld hl,(India_SP)
1289  8F0D 77           	ld (hl),a
1290  8F0E 2C           	inc l
1291  8F0F
1292  8F0F              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1293  8F0F
1294  8F0F ED 5B 20 8C  	ld de,(Scanlines_album_SP)
1295  8F13
1296  8F13 73           	ld (hl),e
1297  8F14 2C           	inc l
1298  8F15 72           	ld (hl),d
1299  8F16 2C           	inc l
1300  8F17
1301  8F17 22 22 8C     	ld (India_SP),hl
1302  8F1A
1303  8F1A C9           	ret
1304  8F1B
1305  8F1B              ; --------------------------------------------------------------------------------------------------------------
1306  8F1B              ;
1307  8F1B              ;	27/03/24
1308  8F1B              ;
1309  8F1B
1310  8F1B              Inicializa_India_y_limpia_Tabla_de_impresion
1311  8F1B
1312  8F1B 2A 22 8C     	ld hl,(India_SP)
1313  8F1E 01 18 89     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1314  8F21
1315  8F21 79           	ld a,c
1316  8F22 95           	sub l
1317  8F23 28 06        	jr z,2F
1318  8F25 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1319  8F26              ;														; _ y pasamos a inicializar (India_SP).
1320  8F26 AF           	xor a
1321  8F27
1322  8F27 77           1 ld (hl),a
1323  8F28 2C           	inc l
1324  8F29 10 FC        	djnz 1B												; Limpia Tabla.
1325  8F2B
1326  8F2B 21 00 89     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1327  8F2E 22 22 8C     	ld (India_SP),hl
1328  8F31
1329  8F31 C9           	ret
1330  8F32
1331  8F32              ; --------------------------------------------------------------------------------------------------------------
1332  8F32              ;
1333  8F32              ;	31/3/24
1334  8F32
1335  8F32              Ordena_tabla_de_impresion
1336  8F32
1337  8F32              ; 5794 T/states.
1338  8F32              ; 6278 T/states.
1339  8F32              ; 5310 T/states.
1340  8F32
1341  8F32              ; Inicializamos punteros (India_SP) e (India_2_SP).
1342  8F32              ; Inicializamos contador de comparaciones, [C].
1343  8F32              ; Cargamos los registros A y B para efectuar comparación.
1344  8F32
1345  8F32 FD 2E 00     	ld iyl,0
1346  8F35
1347  8F35 3A FD 8B     	ld a,(Entidades_en_curso)
1348  8F38 FE 04        	cp 4 	;	4
1349  8F3A D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1350  8F3B
1351  8F3B 3D           	dec a
1352  8F3C 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1353  8F3D 51           	ld d,c 										; Copia de respaldo.
1354  8F3E
1355  8F3E 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1356  8F3F
1357  8F3F 21 03 89     	ld hl,Tabla_de_pintado+3
1358  8F42 46           	ld b,(hl)
1359  8F43 22 24 8C     	ld (India_2_SP),hl
1360  8F46
1361  8F46 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1362  8F47 DC 6F 8F     	call c, Avanza_India_2_SP
1363  8F4A CC 6F 8F     	call z, Avanza_India_2_SP
1364  8F4D
1365  8F4D FD 2D        	dec iyl
1366  8F4F 28 18        	jr z,2F
1367  8F51
1368  8F51
1369  8F51              ; --------------------------------------------------------------------------------------------------------------
1370  8F51              ;
1371  8F51              ;	7/4/24
1372  8F51
1373  8F51              Trueque
1374  8F51
1375  8F51              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1376  8F51              ;  			A contiene en nº de fila de (India_SP).
1377  8F51              ;			HL contiene (India_2_SP).
1378  8F51
1379  8F51 D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1380  8F52 E5           	push hl										; Preservo (India_2_SP).
1381  8F53
1382  8F53 ED 5B 22 8C  	ld de,(India_SP)
1383  8F57 EB           	ex de,hl
1384  8F58 70           	ld (hl),b
1385  8F59 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1386  8F5A
1387  8F5A CD 9B 8F     	call Intercambia_1_byte
1388  8F5D CD 9B 8F     	call Intercambia_1_byte
1389  8F60
1390  8F60
1391  8F60              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1392  8F60              ; Recuperamos (India_2_SP) en HL.
1393  8F60
1394  8F60 2A 22 8C     	ld hl,(India_SP)
1395  8F63 7E           	ld a,(hl)
1396  8F64
1397  8F64 E1           	pop hl
1398  8F65 D1           	pop de
1399  8F66
1400  8F66              ; --------------------------------------------------------------------------------------------------------------
1401  8F66
1402  8F66 CD 6F 8F     	call Avanza_India_2_SP
1403  8F69
1404  8F69 14           2 inc d
1405  8F6A 15           	dec d
1406  8F6B C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1407  8F6C 18 D8        	jr 1B
1408  8F6E
1409  8F6E C9           	ret
1410  8F6F
1411  8F6F              ; ----- ----- ----- ----- -----
1412  8F6F
1413  8F6F              Avanza_India_2_SP
1414  8F6F
1415  8F6F 0D           	dec c
1416  8F70 28 0A        	jr z,Avanza_punteros_indios
1417  8F72
1418  8F72 FD 2C        	inc iyl
1419  8F74
1420  8F74 2C           	inc l
1421  8F75 2C           	inc l
1422  8F76 2C           	inc l
1423  8F77
1424  8F77 46           	ld b,(hl)
1425  8F78 22 24 8C     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1426  8F7B
1427  8F7B C9           	ret
1428  8F7C
1429  8F7C              ; ----- ----- ----- ----- -----
1430  8F7C
1431  8F7C              Avanza_punteros_indios
1432  8F7C
1433  8F7C 15           	dec d
1434  8F7D 28 15        	jr z,Prepara_salida
1435  8F7F
1436  8F7F 4A           	ld c,d
1437  8F80
1438  8F80 2A 22 8C     	ld hl,(India_SP)
1439  8F83 2C           	inc l
1440  8F84 2C           	inc l
1441  8F85 2C           	inc l
1442  8F86 7E           	ld a,(hl)
1443  8F87 22 22 8C     	ld (India_SP),hl
1444  8F8A
1445  8F8A 2C           	inc l
1446  8F8B 2C           	inc l
1447  8F8C 2C           	inc l
1448  8F8D 46           	ld b,(hl)
1449  8F8E 22 24 8C     	ld (India_2_SP),hl
1450  8F91
1451  8F91 FD 2C        	inc iyl
1452  8F93
1453  8F93 C9           	ret
1454  8F94
1455  8F94              Prepara_salida
1456  8F94
1457  8F94 21 00 89     	ld hl,Tabla_de_pintado
1458  8F97 22 22 8C     	ld (India_SP),hl
1459  8F9A C9           	ret
1460  8F9B
1461  8F9B
1462  8F9B 2C           Intercambia_1_byte inc l
1463  8F9C 1C           	inc e
1464  8F9D 46           	ld b,(hl)
1465  8F9E 1A           	ld a,(de)
1466  8F9F EB           	ex de,hl
1467  8FA0 70           	ld (hl),b
1468  8FA1 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1469  8FA2 C9           	ret
1470  8FA3
1471  8FA3              ; -----------------------------------------------------------------------------------
1472  8FA3              ;
1473  8FA3              ;	20/01/24
1474  8FA3              ;
1475  8FA3              ;
1476  8FA3
1477  8FA3              Construye_movimientos_masticados_entidad
1478  8FA3
1479  8FA3 2A BC 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1480  8FA6 E5           	push hl
1481  8FA7 CD EA 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1482  8FAA              ;															; _ el (Contador_de_mov_masticados).
1483  8FAA CD B3 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1484  8FAD              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1485  8FAD CD EA 99     	call Recompone_posicion_inicio
1486  8FB0
1487  8FB0 CD 1A 97     1 call Draw
1488  8FB3 CD CF 8F     	call Guarda_movimiento_masticado
1489  8FB6
1490  8FB6 CD 97 9D     	call Movimiento
1491  8FB9
1492  8FB9 3A 26 8C     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1493  8FBC CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1494  8FBE 28 F0        	jr z,1B
1495  8FC0
1496  8FC0              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1497  8FC0              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1498  8FC0
1499  8FC0 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1500  8FC1 22 BC 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1501  8FC4
1502  8FC4              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1503  8FC4
1504  8FC4 CD FB 9E     	call Situa_en_contador_general_de_mov_masticados
1505  8FC7
1506  8FC7              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1507  8FC7              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1508  8FC7
1509  8FC7 ED 4B BE 8B  	ld bc,(Contador_de_mov_masticados)
1510  8FCB
1511  8FCB 71           	ld (hl),c
1512  8FCC 23           	inc hl
1513  8FCD 70           	ld (hl),b
1514  8FCE
1515  8FCE C9           	ret
1516  8FCF
1517  8FCF              ; -----------------------------------------------------------------------------------
1518  8FCF              ;
1519  8FCF              ;	28/12/23
1520  8FCF              ;
1521  8FCF              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1522  8FCF              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1523  8FCF
1524  8FCF              Guarda_movimiento_masticado
1525  8FCF
1526  8FCF ED 73 02 8C  	ld (Stack),sp
1527  8FD3 ED 7B BC 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1528  8FD7
1529  8FD7 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1530  8FD9 FD E5            push iy 												; Pushea Puntero_objeto.
1531  8FDB
1532  8FDB ED 7B 02 8C      ld sp,(Stack)
1533  8FDF
1534  8FDF 2A BE 8B        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1535  8FE2 23           	inc hl
1536  8FE3 22 BE 8B     	ld (Contador_de_mov_masticados),hl
1537  8FE6
1538  8FE6 CD EA 8F         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1539  8FE9              ;															; _ el (Contador_de_mov_masticados).
1540  8FE9 C9               ret
1541  8FEA
1542  8FEA              ; --------------------------------------------------------------------------------------------------------------
1543  8FEA              ;
1544  8FEA              ;	12/1/24
1545  8FEA              ;
1546  8FEA              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1547  8FEA
1548  8FEA              Actualiza_Puntero_de_almacen_de_mov_masticados
1549  8FEA
1550  8FEA 2A BC 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1551  8FED 01 04 00     	ld bc,4
1552  8FF0 A7           	and a
1553  8FF1 ED 4A        	adc hl,bc
1554  8FF3 22 BC 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
1555  8FF6 C9           	ret
1556  8FF7
1557  8FF7              ; --------------------------------------------------------------------------------------------------------------
1558  8FF7              ;
1559  8FF7              ;	24/03/24
1560  8FF7              ;
1561  8FF7              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1562  8FF7              ;
1563  8FF7              ;	IX contiene el puntero de impresión.
1564  8FF7              ;	DE contiene (Puntero_objeto).
1565  8FF7
1566  8FF7
1567  8FF7              Cargamos_registros_con_mov_masticado
1568  8FF7
1569  8FF7 ED 73 02 8C  	ld (Stack),sp
1570  8FFB ED 7B BC 8B  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1571  8FFF
1572  8FFF D1           	pop de 															; DE contiene Puntero_objeto
1573  9000 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1574  9002
1575  9002 ED 73 BC 8B  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1576  9006 ED 7B 02 8C  	ld sp,(Stack)
1577  900A
1578  900A 7B           	ld a,e
1579  900B 82           	add d															; Comprueba si ya no hay datos en el almacén.
1580  900C
1581  900C CC A3 93     	call z,Reinicia_entidad_maliciosa
1582  900F
1583  900F C9           	ret
1584  9010
1585  9010              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1586  9010              ;
1587  9010              ;	22/7/24
1588  9010
1589  9010              Cargamos_registros_con_explosion
1590  9010
1591  9010
1592  9010 2A BC 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1593  9013 CD AD 90     	call Extrae_address
1594  9016
1595  9016 5D           	ld e,l
1596  9017 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1597  9018
1598  9018 DD 2A BA 8B  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1599  901C
1600  901C C9           	ret
1601  901D
1602  901D
1603  901D              Cargamos_registros_con_explosion_Amadeus
1604  901D
1605  901D 2A 74 89     	ld hl,(Pamm_Amadeus)
1606  9020 CD AD 90     	call Extrae_address
1607  9023
1608  9023 5D           	ld e,l
1609  9024 54           	ld d,h
1610  9025
1611  9025 DD 2A 72 89  	ld ix,(p.imp.amadeus)
1612  9029
1613  9029 C9           	ret
1614  902A
1615  902A              ; --------------------------------------------------------------------------------------------------------------
1616  902A              ;
1617  902A              ;	17/06/24
1618  902A              ;
1619  902A              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1620  902A              ;
1621  902A              ;	IX contiene el puntero de impresión.
1622  902A              ;	DE contiene (Puntero_objeto).
1623  902A
1624  902A
1625  902A              Cargamos_registros_con_mov_masticado_Amadeus
1626  902A
1627  902A ED 73 02 8C  	ld (Stack),sp
1628  902E ED 7B 74 89  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1629  9032 D1           	pop de 															; DE contiene Puntero_objeto
1630  9033 DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1631  9035 DD 22 72 89  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1632  9039 ED 7B 02 8C  	ld sp,(Stack)
1633  903D C9           	ret
1634  903E
1635  903E              ; ---------------------------------------------------------------------------------------------------------------------
1636  903E              ;
1637  903E              ;	18/6/24
1638  903E              ;
1639  903E              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1640  903E
1641  903E              Genera_datos_de_impresion_Amadeus
1642  903E
1643  903E 3A 71 89     	ld a,(Impacto_Amadeus)
1644  9041 A7           	and a
1645  9042 20 03        	jr nz,1F
1646  9044
1647  9044              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1648  9044              ; _apuntando a la correspondiente explosión.
1649  9044
1650  9044 CD 2A 90     	call Cargamos_registros_con_mov_masticado_Amadeus
1651  9047
1652  9047 DD 7D        1 ld a,ixl
1653  9049 E6 1F        	and $1f
1654  904B 32 6E 89     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1655  904E
1656  904E 2A 20 8C     	ld hl,(Scanlines_album_SP)
1657  9051 E5           	push hl
1658  9052
1659  9052 2A 0A 8C     	ld hl,(Album_de_pintado_Amadeus)
1660  9055 22 20 8C     	ld (Scanlines_album_SP),hl
1661  9058
1662  9058 CD F8 94     	call Genera_datos_de_impresion
1663  905B
1664  905B E1           	pop hl
1665  905C 22 20 8C     	ld (Scanlines_album_SP),hl
1666  905F
1667  905F C9           	ret
1668  9060
1669  9060              ; ---------------------------------------------------------------------------------------------------------------------
1670  9060              ;
1671  9060              ;	13/03/24
1672  9060              ;
1673  9060              ;	Inicialización de los álbumes de líneas, (pintado/borrado).
1674  9060
1675  9060              Inicia_albumes_de_lineas
1676  9060
1677  9060 21 00 80     	ld hl,Scanlines_album
1678  9063 22 06 8C     	ld (Album_de_pintado),hl
1679  9066 22 20 8C     	ld (Scanlines_album_SP),hl
1680  9069
1681  9069 21 1A 81     	ld hl,Scanlines_album_2
1682  906C 22 08 8C     	ld (Album_de_borrado),hl
1683  906F
1684  906F C9           	ret
1685  9070
1686  9070              Inicia_albumes_de_lineas_Amadeus
1687  9070
1688  9070 21 34 82     	ld hl,Amadeus_scanlines_album
1689  9073 22 0A 8C     	ld (Album_de_pintado_Amadeus),hl
1690  9076 21 58 82     	ld hl,Amadeus_scanlines_album_2
1691  9079 22 0C 8C     	ld (Album_de_borrado_Amadeus),hl
1692  907C
1693  907C C9           	ret
1694  907D
1695  907D              Inicia_albumes_de_disparos
1696  907D
1697  907D 21 7C 82     	ld hl,Disparos_scanlines_album
1698  9080 22 0E 8C     	ld (Album_de_pintado_disparos),hl
1699  9083 21 B8 82     	ld hl,Disparos_scanlines_album_2
1700  9086 22 10 8C     	ld (Album_de_borrado_disparos),hl
1701  9089
1702  9089 21 7C 82     	ld hl,Disparos_scanlines_album
1703  908C 22 12 8C     	ld (Nivel_scan_disparos_album_de_pintado),hl
1704  908F
1705  908F C9           	ret
1706  9090
1707  9090              ; ---------------------------------------------------------------------------------------------------------------------
1708  9090              ;
1709  9090              ; 8/1/23
1710  9090              ;
1711  9090              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1712  9090              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1713  9090              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1714  9090
1715  9090              ; Destruye HL y DE !!!!!
1716  9090
1717  9090              Inicia_punteros_de_cajas
1718  9090
1719  9090 21 5B 89     	ld hl,Indice_de_cajas_de_entidades
1720  9093 CD AD 90         call Extrae_address
1721  9096 22 F5 8B         ld (Puntero_store_caja),hl
1722  9099 21 5D 89     	ld hl,Indice_de_cajas_de_entidades+2
1723  909C 22 F9 8B     	ld (Indice_restore_caja),hl
1724  909F CD AD 90     	call Extrae_address
1725  90A2 22 F7 8B     	ld (Puntero_restore_caja),hl
1726  90A5 C9               ret
1727  90A6
1728  90A6              ; *************************************************************************************************************************************************************
1729  90A6              ;
1730  90A6              ; 8/1/23
1731  90A6              ;
1732  90A6              ;	Inicializamos el puntero que se irá desplazando por el índice de disparos de Entidades.
1733  90A6
1734  90A6 21 23 89     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1735  90A9 22 29 8C     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1736  90AC C9           	ret
1737  90AD
1738  90AD              ; *************************************************************************************************************************************************************
1739  90AD              ;
1740  90AD              ; 20/10/22
1741  90AD              ;
1742  90AD              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1743  90AD              ;
1744  90AD              ; Destruye el puntero y DE !!!!!
1745  90AD
1746  90AD 5E           Extrae_address ld e,(hl)
1747  90AE 23           	inc hl
1748  90AF 56           	ld d,(hl)
1749  90B0 2B           	dec hl
1750  90B1 EB           	ex de,hl
1751  90B2 C9           	ret
1752  90B3
1753  90B3              ; *************************************************************************************************************************************************************
1754  90B3              ;
1755  90B3              ;	20/1/24
1756  90B3              ;
1757  90B3              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1758  90B3              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1759  90B3              ;
1760  90B3              ;   Destruye HL y BC !!!!!,
1761  90B3              ;
1762  90B3              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1763  90B3              ;					"0" ..... Izquierda.
1764  90B3
1765  90B3              Inicia_Puntero_objeto
1766  90B3
1767  90B3 3A D4 8B     	ld a,(Cuad_objeto)
1768  90B6 E6 01        	and 1
1769  90B8 F5           	push af
1770  90B9 CC D5 90     	call z,Inicia_puntero_objeto_izq
1771  90BC F1           	pop af
1772  90BD C8           	ret z
1773  90BE CD C2 90     	call Inicia_puntero_objeto_der
1774  90C1 C9           	ret
1775  90C2
1776  90C2              ; Arrancamos desde la parte izquierda de la pantalla.
1777  90C2              ; Iniciamos (Indice_Sprite_der).
1778  90C2
1779  90C2 2A CA 8B     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1780  90C5 22 CE 8B     	ld (Puntero_DESPLZ_der),hl
1781  90C8 CD AD 90     	call Extrae_address
1782  90CB 22 C7 8B     	ld (Puntero_objeto),hl
1783  90CE
1784  90CE 2A CC 8B     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1785  90D1 22 D0 8B     	ld (Puntero_DESPLZ_izq),hl
1786  90D4 C9           	ret
1787  90D5
1788  90D5              ; Arrancamos desde la parte derecha de la pantalla.
1789  90D5              ; Iniciamos (Indice_Sprite_izq).
1790  90D5
1791  90D5 2A CC 8B     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1792  90D8 22 D0 8B     	ld (Puntero_DESPLZ_izq),hl
1793  90DB CD AD 90     	call Extrae_address
1794  90DE 22 C7 8B     	ld (Puntero_objeto),hl
1795  90E1
1796  90E1 2A CA 8B     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1797  90E4 22 CE 8B     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1798  90E7 C9           	ret
1799  90E8
1800  90E8              ; **************************************************************************************************
1801  90E8              ;
1802  90E8              ;	06/07/24
1803  90E8              ;
1804  90E8              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1805  90E8
1806  90E8              Restore_entidad
1807  90E8
1808  90E8 2A F5 8B     	ld hl,(Puntero_store_caja)
1809  90EB 7E           	ld a,(hl)
1810  90EC A7           	and a
1811  90ED CC FB 90     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1812  90F0 28 F6        	jr z,Restore_entidad
1813  90F2
1814  90F2 11 B5 8B     	ld de,Bandeja_DRAW
1815  90F5 01 0C 00     	ld bc,12
1816  90F8 ED B0        	ldir
1817  90FA C9           	ret
1818  90FB
1819  90FB              ; **************************************************************************************************
1820  90FB              ;
1821  90FB              ;	08/05/23
1822  90FB              ;
1823  90FB              ;	Incrementamos los dos punteros de entidades. (+1).
1824  90FB
1825  90FB              Incrementa_punteros_de_cajas
1826  90FB
1827  90FB 2A F7 8B     	ld hl,(Puntero_restore_caja)
1828  90FE 22 F5 8B     	ld (Puntero_store_caja),hl
1829  9101 2A F9 8B     	ld hl,(Indice_restore_caja)
1830  9104 23           	inc hl
1831  9105 23           	inc hl
1832  9106 22 F9 8B     	ld (Indice_restore_caja),hl
1833  9109 CD AD 90         call Extrae_address
1834  910C 22 F7 8B         ld (Puntero_restore_caja),hl
1835  910F C9               ret
1836  9110
1837  9110              ; -----------------------------------------------------------
1838  9110
1839  9110              ; Teclado.
1840  9110
1841  9110 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1842  9112 DB FE        	in a,($fe)
1843  9114 E6 01        	and $01
1844  9116 28 02        	jr z,1f
1845  9118 18 F6        	jr Pulsa_ENTER
1846  911A C9           1 ret
1847  911B
1848  911B              ; **************************************************************************************************
1849  911B              ;
1850  911B              ; Temporización.
1851  911B
1852  911B              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1853  911B              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1854  911B              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1855  911B              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1856  911B
1857  911B              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1858  911B              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1859  911B              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1860  911B
1861  911B              ; A partir de $4f61 no hace falta DELAY.
1862  911B
1863  911B              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1864  911B
1865  911B              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1866  911B              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1867  911B              ;	LD A,B
1868  911B              ;	AND A
1869  911B              ;	JR NZ,wait
1870  911B              ;	RET
1871  911B
1872  911B              ; ---------------------------------------------------------------------------------------------------------------
1873  911B              ;
1874  911B              ;	13/07/24
1875  911B              ;
1876  911B
1877  911B              Inicia_Shield
1878  911B
1879  911B 21 4A 8C     	ld hl,Datos_Shield
1880  911E 22 4E 8C     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1881  9121
1882  9121 7E           	ld a,(hl)
1883  9122 32 51 8C     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1884  9125
1885  9125 3E 01        	ld a,1
1886  9127 32 52 8C     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1887  912A
1888  912A C9           	ret
1889  912B
1890  912B              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1891  912B              ;
1892  912B              ;	4/6/24
1893  912B              ;
1894  912B              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1895  912B              ;
1896  912B              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
1897  912B              ;
1898  912B
1899  912B              Actualiza_pantalla
1900  912B
1901  912B 3E 02        	ld a,2
1902  912D D3 FE        	out ($fe),a
1903  912F
1904  912F 3A 26 8C     	ld a,(Ctrl_3)
1905  9132 CB 57        	bit 2,a
1906  9134 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
1907  9136
1908  9136              Borrando_entidades
1909  9136
1910  9136 2A 20 8C     	ld hl,(Scanlines_album_SP)
1911  9139 CD AD 90     	call Extrae_address
1912  913C 24           	inc h
1913  913D 25           	dec h
1914  913E 28 05        	jr z,Pintando_entidades
1915  9140 CD F7 95     	call Pinta_Sprites
1916  9143 18 F1        	jr Borrando_entidades
1917  9145
1918  9145              Pintando_entidades
1919  9145
1920  9145 2A 22 8C     	ld hl,(India_SP)
1921  9148 2C           	inc l
1922  9149 CD AD 90     	call Extrae_address
1923  914C 24           	inc h
1924  914D 25           	dec h
1925  914E 28 0E        	jr z,Ejecuta_escudo
1926  9150 1C           	inc e
1927  9151 1C           	inc e
1928  9152 ED 53 22 8C  	ld (India_SP),de
1929  9156 CD AD 90     	call Extrae_address
1930  9159 CD F7 95     	call Pinta_Sprites
1931  915C 18 E7        	jr Pintando_entidades
1932  915E
1933  915E              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1934  915E
1935  915E              Ejecuta_escudo
1936  915E
1937  915E 3A 50 8C     	ld a,(Shield)
1938  9161 A7           	and a
1939  9162 20 2F        	jr nz,Aplica_Shield
1940  9164
1941  9164              Borrando_Amadeus
1942  9164
1943  9164 21 26 8C     	ld hl,Ctrl_3
1944  9167 CB 6E        	bit 5,(hl)
1945  9169 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
1946  916B
1947  916B 2A 0C 8C     	ld hl,(Album_de_borrado_Amadeus)
1948  916E CD AD 90     	call Extrae_address
1949  9171 24           	inc h
1950  9172 25           	dec h
1951  9173 28 03        	jr z,Pintando_Amadeus
1952  9175 CD F7 95     	call Pinta_Sprites
1953  9178
1954  9178              Pintando_Amadeus
1955  9178
1956  9178 2A 0A 8C     	ld hl,(Album_de_pintado_Amadeus)
1957  917B CD AD 90     	call Extrae_address
1958  917E 24           	inc h
1959  917F 25           	dec h
1960  9180 28 03        	jr z,1F
1961  9182 CD F7 95     	call Pinta_Sprites
1962  9185
1963  9185              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
1964  9185
1965  9185 21 26 8C     1 ld hl,Ctrl_3
1966  9188 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
1967  918A CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
1968  918C CB AE        	res 5,(hl)
1969  918E
1970  918E 3E 01        	ld a,1												; Borde azul.
1971  9190 D3 FE        	out ($fe),a
1972  9192
1973  9192 C9           	ret
1974  9193
1975  9193              Aplica_Shield
1976  9193
1977  9193              ;	Bit 1 "1" (Shield_3) Sólo borra.
1978  9193              ;		  "0"     ""     Borra/Pinta.
1979  9193              ;	Bit 2    ""  RET.	 No borra, no pinta.
1980  9193
1981  9193 21 52 8C     	ld hl,Shield_3
1982  9196
1983  9196 CB 5E        	bit 3,(hl)
1984  9198 20 DE        	jr nz,Pintando_Amadeus
1985  919A
1986  919A CB 56        	bit 2,(hl)
1987  919C 20 E7        	jr nz,1B
1988  919E
1989  919E CB 4E        	bit 1,(hl)
1990  91A0 C4 A7 91     	call nz,Borra_Amadeus_shield
1991  91A3
1992  91A3 28 BF        	jr z,Borrando_Amadeus
1993  91A5 18 DE        	jr 1B
1994  91A7
1995  91A7              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1996  91A7
1997  91A7              Borra_Amadeus_shield
1998  91A7
1999  91A7 3A 26 8C     	ld a,(Ctrl_3)
2000  91AA CB 6F        	bit 5,a
2001  91AC 28 08        	jr z,1F
2002  91AE
2003  91AE 2A 0C 8C     	ld hl,(Album_de_borrado_Amadeus)
2004  91B1 CD AD 90     	call Extrae_address
2005  91B4 18 06        	jr 2F
2006  91B6
2007  91B6 2A 0A 8C     1 ld hl,(Album_de_pintado_Amadeus)
2008  91B9 CD AD 90     	call Extrae_address
2009  91BC
2010  91BC CD F7 95     2 call Pinta_Sprites
2011  91BF
2012  91BF AF           	xor a
2013  91C0 3C           	inc a											; Asegura NZ en la salida de la rutina.
2014  91C1
2015  91C1 C9           	ret
2016  91C2
2017  91C2              Pinta_Amadeus_shield
2018  91C2
2019  91C2 2A 0A 8C     	ld hl,(Album_de_pintado_Amadeus)
2020  91C5 CD AD 90     	call Extrae_address
2021  91C8 CD F7 95     	call Pinta_Sprites
2022  91CB
2023  91CB AF           	xor a
2024  91CC 3C           	inc a											; Asegura NZ en la salida de la rutina.
2025  91CD
2026  91CD C9           	ret
2027  91CE
2028  91CE              Borra_Pinta_Amadeus_shield
2029  91CE
2030  91CE CD A7 91     	call Borra_Amadeus_shield
2031  91D1 CD C2 91     	call Pinta_Amadeus_shield
2032  91D4 C9           	ret
2033  91D5
2034  91D5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2035  91D5              ;
2036  91D5              ;	19/6/24
2037  91D5              ;
2038  91D5
2039  91D5              Teclado
2040  91D5
2041  91D5              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2042  91D5
2043  91D5 3E F7        	ld a,$f7												; "5" para disparar.
2044  91D7 DB FE        	in a,($fe)
2045  91D9 E6 10        	and $10
2046  91DB
2047  91DB CC 34 A1     	call z,Genera_disparo_Amadeus
2048  91DE
2049  91DE 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2050  91E0 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2051  91E2 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2052  91E4 CC 64 9D         call z,Amadeus_a_izquierda
2053  91E7
2054  91E7 3E F7        	ld a,$f7
2055  91E9 DB FE        	in a,($fe)
2056  91EB E6 01        	and $01
2057  91ED C8           	ret z
2058  91EE
2059  91EE 3E F7        	ld a,$f7
2060  91F0 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2061  91F2 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2062  91F4 CC 7C 9D     	call z,Amadeus_a_derecha
2063  91F7
2064  91F7 C9           	ret
2065  91F8
2066  91F8              ; ------------------------------------------------------------------------------------------------------------------------
2067  91F8              ;
2068  91F8              ;	06/07/24
2069  91F8              ;
2070  91F8
2071  91F8              Genera_explosion
2072  91F8
2073  91F8 21 38 8C     	ld hl,Clock_explosion
2074  91FB 35           	dec (hl)
2075  91FC 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2076  91FE
2077  91FE              Borra_entidad_colisionada
2078  91FE
2079  91FE CD 07 8F     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2080  9201 CD 10 90     	call Cargamos_registros_con_explosion
2081  9204 CD F8 94     	call Genera_datos_de_impresion
2082  9207
2083  9207 AF           	xor a
2084  9208 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2085  9209
2086  9209 C9           	ret
2087  920A
2088  920A              Siguiente_frame_explosion
2089  920A
2090  920A 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2091  920C
2092  920C              ; Avanza Frame de explosión.
2093  920C
2094  920C 2A BC 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2095  920F 01 C4 87     	ld bc,Indice_Explosion_entidades+4
2096  9212
2097  9212 79           	ld a,c
2098  9213 95           	sub l
2099  9214 20 0B        	jr nz,1F
2100  9216
2101  9216              ; Fín de la entidad !!!!!!!!!!!!!
2102  9216
2103  9216 21 FC 8B     	ld hl,Numero_parcial_de_entidades
2104  9219 35           	dec (hl)
2105  921A 23           	inc hl
2106  921B 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2107  921C
2108  921C CD 78 93     	call Limpiamos_bandeja_DRAW
2109  921F 18 DD        	jr Borra_entidad_colisionada
2110  9221
2111  9221 23           1 inc hl
2112  9222 23           	inc hl
2113  9223 22 BC 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
2114  9226 18 D6        	jr Borra_entidad_colisionada
2115  9228
2116  9228              ; ----- ----- ----- ----- -----
2117  9228
2118  9228              Genera_explosion_Amadeus
2119  9228
2120  9228 21 39 8C     	ld hl,Clock_explosion_Amadeus
2121  922B 35           	dec (hl)
2122  922C 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2123  922E
2124  922E              Borra_Amadeus_impactado
2125  922E
2126  922E CD 7E 8E     	call Change_Amadeus
2127  9231 CD 1D 90     	call Cargamos_registros_con_explosion_Amadeus
2128  9234 CD 3E 90     	call Genera_datos_de_impresion_Amadeus
2129  9237
2130  9237 21 26 8C     	ld hl,Ctrl_3
2131  923A CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2132  923C
2133  923C AF           	xor a
2134  923D 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2135  923E
2136  923E C9           	ret
2137  923F
2138  923F              Siguiente_frame_explosion_Amadeus
2139  923F
2140  923F 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2141  9241
2142  9241              ; Avanza Frame de explosión.
2143  9241
2144  9241 2A 74 89     	ld hl,(Pamm_Amadeus)
2145  9244 01 64 88     	ld bc,Indice_Explosion_Amadeus+4
2146  9247
2147  9247 79           	ld a,c
2148  9248 95           	sub l
2149  9249 20 0B        	jr nz,1F
2150  924B
2151  924B              ; Fín de Amadeus !!!!!!!!!!!!!
2152  924B              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2153  924B
2154  924B AF           	xor a
2155  924C 32 71 89     	ld (Impacto_Amadeus),a
2156  924F 21 26 8C     	ld hl,Ctrl_3
2157  9252 CB F6        	set 6,(hl)
2158  9254
2159  9254 18 D8        	jr Borra_Amadeus_impactado
2160  9256
2161  9256 23           1 inc hl
2162  9257 23           	inc hl
2163  9258 22 74 89     	ld (Pamm_Amadeus),hl
2164  925B 18 D1        	jr Borra_Amadeus_impactado
2165  925D
2166  925D              ; ---------------------------------------------------------------
2167  925D
2168  925D              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ 925D              ; ******************************************************************************************************************************************************************************************
   2+ 925D              ;
   3+ 925D              ;   21/04/24
   4+ 925D              ;
   5+ 925D              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ 925D              ;   (XOR) bit a bit.
   7+ 925D              ;
   8+ 925D              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ 925D
  10+ 925D              Derivando_RND
  11+ 925D
  12+ 925D 21 F6 88         ld hl,Numeros_aleatorios
  13+ 9260
  14+ 9260 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ 9262 C5               push bc
  16+ 9263              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ 9263 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ 9266              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ 9266
  20+ 9266 A7           6 and a                                 ; Carry a "0".
  21+ 9267 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ 9269 30 02            jr nc,1F
  23+ 926B
  24+ 926B CB C1            set 0,c
  25+ 926D
  26+ 926D 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ 926E E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ 9270 5F               ld e,a
  29+ 9271
  30+ 9271 7A               ld a,d
  31+ 9272 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ 9274 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ 9276
  34+ 9276 CB 3F            srl a
  35+ 9278
  36+ 9278 AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ 9279
  38+ 9279 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ 927A 28 04            jr z,4F
  40+ 927C
  41+ 927C CB FF            set 7,a
  42+ 927E 18 02            jr 5F
  43+ 9280
  44+ 9280 CB BF        4 res 7,a
  45+ 9282
  46+ 9282 CB 21        5 sla c
  47+ 9284 10 E0            djnz 6B
  48+ 9286
  49+ 9286 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ 9287
  51+ 9287 77               ld (hl),a
  52+ 9288 23               inc hl
  53+ 9289 C1               pop bc
  54+ 928A 10 D4            djnz 3B
  55+ 928C
  56+ 928C C9               ret
  57+ 928D
  58+ 928D
  59+ 928D
# file closed: RND_Derivando.asm
2169  928D              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 928D              ;---------------------------------------------------------------------------------------------------------------
   2+ 928D              ;
   3+ 928D              ;   8/3/24
   4+ 928D              ;
   5+ 928D              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 928D              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 928D              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 928D              ;	_ de la 1ª entidad del Nivel.
   9+ 928D              ;
  10+ 928D              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ 928D
  12+ 928D              ;	MODIFICA: HL,DE y A.
  13+ 928D              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ 928D
  15+ 928D              Inicializa_Nivel
  16+ 928D
  17+ 928D 2A 46 8C     	ld hl,(Puntero_indice_NIVELES)
  18+ 9290 CD AD 90     	call Extrae_address
  19+ 9293 7E           	ld a,(hl)
  20+ 9294 32 FB 8B     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ 9297 23           	inc hl
  22+ 9298 CD A5 92     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ 929B 22 48 8C     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ 929E CD AE 92     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ 92A1
  26+ 92A1 CD BF 92     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ 92A4 C9           	ret
  28+ 92A5
  29+ 92A5              ; ----------------------
  30+ 92A5
  31+ 92A5 11 DA 8B     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ 92A8 01 04 00     	ld bc,4
  33+ 92AB ED B0        	ldir
  34+ 92AD C9           	ret
  35+ 92AE
  36+ 92AE 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ 92AF CD 49 94         call Calcula_salto_en_BC
  38+ 92B2 21 1B 89         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ 92B5 A7               and a
  40+ 92B6 ED 4A            adc hl,bc
  41+ 92B8 CD AD 90         call Extrae_address
  42+ 92BB 22 E6 8B         ld (Puntero_indice_mov),hl
  43+ 92BE C9               ret
  44+ 92BF
  45+ 92BF 3A B5 8B     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ 92C2 CD 49 94     	call Calcula_salto_en_BC
  47+ 92C5 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ 92C8 A7               and a
  49+ 92C9 ED 4A            adc hl,bc
  50+ 92CB CD AD 90         call Extrae_address
  51+ 92CE 22 BC 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ 92D1 C9           	ret
  53+ 92D2
  54+ 92D2              ;---------------------------------------------------------------------------------------------------------------
  55+ 92D2              ;
  56+ 92D2              ;   5/1/24
  57+ 92D2              ;
  58+ 92D2              ;	Destruye A,BC,HL,DE
  59+ 92D2
  60+ 92D2              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ 92D2              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ 92D2
  63+ 92D2              Inicia_Entidades
  64+ 92D2
  65+ 92D2              ; Preparamos los punteros de las cajas de entidades:
  66+ 92D2
  67+ 92D2 CD 90 90     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ 92D5              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ 92D5 CD 91 94     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ 92D8
  71+ 92D8 2A 48 8C     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ 92DB
  73+ 92DB 22 48 8C     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ 92DE
  75+ 92DE CD F7 93     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ 92E1
  77+ 92E1 2A 48 8C     	ld hl,(Datos_de_nivel)
  78+ 92E4
  79+ 92E4              ; En este punto:
  80+ 92E4              ;
  81+ 92E4              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ 92E4              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ 92E4
  84+ 92E4 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ 92E5
  86+ 92E5 7E           	ld a,(hl)
  87+ 92E6 CD 63 93     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ 92E9
  89+ 92E9 CD 5B 94     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ 92EC
  91+ 92EC              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ 92EC
  93+ 92EC CD 19 94     	call Busca_mov_masticados_segun_tipo
  94+ 92EF
  95+ 92EF A7           	and a
  96+ 92F0 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ 92F2
  98+ 92F2              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ 92F2
 100+ 92F2              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ 92F2              ;	_ de este tipo de entidad.
 102+ 92F2
 103+ 92F2 CD FB 9E     	call Situa_en_contador_general_de_mov_masticados
 104+ 92F5 CD 08 9F     	call Transfiere_datos_de_contadores
 105+ 92F8
 106+ 92F8 18 06        	jr 4F
 107+ 92FA
 108+ 92FA CD A3 8F     3 call Construye_movimientos_masticados_entidad
 109+ 92FD
 110+ 92FD              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ 92FD              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ 92FD              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ 92FD              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ 92FD              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ 92FD
 116+ 92FD CD D7 93     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ 9300              ;																; _ Mov_masticados ya generados.
 118+ 9300
 119+ 9300 CD F7 8F     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ 9303
 121+ 9303 DD E5        	push ix
 122+ 9305 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ 9306
 124+ 9306 D5           	push de
 125+ 9307 CD CC 94     	call Genera_coordenadas
 126+ 930A
 127+ 930A ED 5B 20 8C  	ld de,(Scanlines_album_SP)
 128+ 930E CD 07 8F     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ 9311 D1           	pop de
 130+ 9312
 131+ 9312 CD F8 94     	call Genera_datos_de_impresion
 132+ 9315              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ 9315              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ 9315              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ 9315              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ 9315
 137+ 9315 CD 9B 93     	call Decrementa_Contador_de_mov_masticados
 138+ 9318
 139+ 9318              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ 9318
 141+ 9318 ED 5B F5 8B  	ld de,(Puntero_store_caja)
 142+ 931C CD 88 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ 931F
 144+ 931F CD 78 93     	call Limpiamos_bandeja_DRAW
 145+ 9322 CD FB 90     	call Incrementa_punteros_de_cajas
 146+ 9325
 147+ 9325              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ 9325              ; _ entidad del Nivel.
 149+ 9325
 150+ 9325 3A 27 8C     	ld a,(Ctrl_4)
 151+ 9328 E6 F0        	and $f0
 152+ 932A 32 27 8C     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ 932D
 154+ 932D              ; Siguiente entidad del Nivel.
 155+ 932D
 156+ 932D 2A 48 8C     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ 9330 23           	inc hl 														; _ entidad del Nivel.
 158+ 9331
 159+ 9331 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ 9332
 161+ 9332 10 A7        	djnz 2B
 162+ 9334
 163+ 9334 C9           	ret
 164+ 9335
 165+ 9335              ; -------------------------------------------------------------------------------------------------------------------
 166+ 9335              ;
 167+ 9335              ;	27/5/24
 168+ 9335              ;
 169+ 9335              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ 9335              ;
 171+ 9335
 172+ 9335              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ 9335              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ 9335
 175+ 9335 21 EB 89     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ 9338 CD 5B 94     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ 933B
 178+ 933B
 179+ 933B              Construye_movimientos_masticados_Amadeus
 180+ 933B
 181+ 933B 2A BC 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ 933E CD EA 8F     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ 9341              ;															; _ el (Contador_de_mov_masticados).
 184+ 9341 CD B3 90     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ 9344              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ 9344
 187+ 9344              ; Generamos movimientos masticados de Amadeus.
 188+ 9344
 189+ 9344 06 79        	ld b,121												; $0079, 121d.
 190+ 9346
 191+ 9346 C5           1 push bc
 192+ 9347 CD 1A 97     	call Draw
 193+ 934A CD CF 8F     	call Guarda_movimiento_masticado
 194+ 934D
 195+ 934D CD 8E 9A     	call Mov_right
 196+ 9350 CD 8E 9A     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ 9353
 198+ 9353 C1           	pop bc
 199+ 9354 10 F0        	djnz 1B
 200+ 9356
 201+ 9356              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ 9356
 203+ 9356              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ 9356              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ 9356
 206+ 9356 2A BC 8B     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ 9359 01 08 00     	ld bc,8
 208+ 935C A7           	and a
 209+ 935D ED 42        	sbc hl,bc
 210+ 935F 22 BC 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ 9362
 212+ 9362 C9           	ret
 213+ 9363
 214+ 9363              ; ---------------------------------------------------------------------
 215+ 9363              ;
 216+ 9363              ;	10/02/24
 217+ 9363              ;
 218+ 9363              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ 9363              ;
 220+ 9363              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ 9363
 222+ 9363              Definicion_segun_tipo
 223+ 9363
 224+ 9363 CD 49 94     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ 9366 21 CD 89     	ld hl,Indice_de_definiciones_de_entidades
 226+ 9369 CD 51 94     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ 936C C9           	ret
 228+ 936D
 229+ 936D              ; ---------------------------------------------------------------------
 230+ 936D              ;
 231+ 936D              ;	6/7/24
 232+ 936D
 233+ 936D
 234+ 936D              Store_Restore_cajas
 235+ 936D
 236+ 936D ED 5B F5 8B  	ld de,(Puntero_store_caja)
 237+ 9371 CD 88 94     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ 9374 CD FB 90     	call Incrementa_punteros_de_cajas
 239+ 9377 C9           	ret
 240+ 9378
 241+ 9378              ; ---------------------------------------------------------------------
 242+ 9378              ;
 243+ 9378              ;	23/6/24
 244+ 9378              ;
 245+ 9378              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ 9378              ;
 247+ 9378              ;	MODIFY: HL
 248+ 9378
 249+ 9378              Limpiamos_bandeja_DRAW
 250+ 9378
 251+ 9378 ED 73 02 8C  	ld (Stack),sp
 252+ 937C 31 DA 8B     	ld sp,Vel_left
 253+ 937F
 254+ 937F AF           	xor a
 255+ 9380 67           	ld h,a
 256+ 9381 6F           	ld l,a
 257+ 9382
 258+ 9382 E5           	push hl
 259+ 9383 E5           	push hl
 260+ 9384 E5           	push hl
 261+ 9385 E5           	push hl
 262+ 9386 E5           	push hl
 263+ 9387 E5           	push hl
 264+ 9388 E5           	push hl
 265+ 9389 E5           	push hl
 266+ 938A E5           	push hl
 267+ 938B E5           	push hl
 268+ 938C E5           	push hl
 269+ 938D E5           	push hl
 270+ 938E E5           	push hl
 271+ 938F E5           	push hl
 272+ 9390 E5           	push hl
 273+ 9391 E5           	push hl
 274+ 9392 E5           	push hl
 275+ 9393 E5           	push hl
 276+ 9394
 277+ 9394 33           	inc sp
 278+ 9395
 279+ 9395 E5           	push hl
 280+ 9396 ED 7B 02 8C  	ld sp,(Stack)
 281+ 939A
 282+ 939A C9           	ret
 283+ 939B
 284+ 939B              ; ---------------------------------------------------------------------
 285+ 939B              ;
 286+ 939B              ;	24/03/24
 287+ 939B
 288+ 939B 2A BE 8B     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ 939E 2B           	dec hl
 290+ 939F 22 BE 8B     	ld (Contador_de_mov_masticados),hl
 291+ 93A2 C9           	ret
 292+ 93A3
 293+ 93A3              ; ---------------------------------------------------------------------
 294+ 93A3              ;
 295+ 93A3              ;	8/5/24
 296+ 93A3
 297+ 93A3              Reinicia_entidad_maliciosa
 298+ 93A3
 299+ 93A3              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ 93A3
 301+ 93A3 CD FB 9E     	call Situa_en_contador_general_de_mov_masticados
 302+ 93A6 CD 08 9F     	call Transfiere_datos_de_contadores
 303+ 93A9
 304+ 93A9              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ 93A9
 306+ 93A9 3A B5 8B     	ld a,(Tipo)
 307+ 93AC CD 63 93     	call Definicion_segun_tipo
 308+ 93AF
 309+ 93AF E5           	push hl
 310+ 93B0 DD E1        	pop ix
 311+ 93B2
 312+ 93B2 DD 6E 0B     	ld l,(ix+11)
 313+ 93B5 DD 66 0C     	ld h,(ix+12)
 314+ 93B8
 315+ 93B8 22 BC 8B     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ 93BB
 317+ 93BB CD F7 8F     	call Cargamos_registros_con_mov_masticado
 318+ 93BE
 319+ 93BE              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ 93BE              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ 93BE              ; Ejemplos.
 322+ 93BE
 323+ 93BE              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ 93BE              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ 93BE              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ 93BE              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ 93BE              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ 93BE
 329+ 93BE 21 B8 8B     	ld hl,Contador_de_vueltas
 330+ 93C1 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ 93C3
 332+ 93C3 7E           	ld a,(hl)
 333+ 93C4 CB 2F        	sra a
 334+ 93C6 CB 2F        	sra a
 335+ 93C8
 336+ 93C8 32 C0 8B     	ld (Velocidad),a
 337+ 93CB
 338+ 93CB 3E 40        	ld a,$40
 339+ 93CD BE           	cp (hl)
 340+ 93CE C0           	ret nz
 341+ 93CF
 342+ 93CF              ; Límitador.
 343+ 93CF
 344+ 93CF              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ 93CF
 346+ 93CF CB 2E        	sra (hl)
 347+ 93D1 21 C0 8B     	ld hl,Velocidad
 348+ 93D4 CB 2E        	sra (hl)
 349+ 93D6
 350+ 93D6 C9           	ret
 351+ 93D7
 352+ 93D7              ; ---------------------------------------------------------------------
 353+ 93D7              ;
 354+ 93D7              ;	22/01/24
 355+ 93D7
 356+ 93D7 21 27 8C     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ 93DA CB 46        	bit 0,(hl)
 358+ 93DC 20 0D        	jr nz,1F
 359+ 93DE CB 4E        	bit 1,(hl)
 360+ 93E0 20 0C        	jr nz,2F
 361+ 93E2 CB 56        	bit 2,(hl)
 362+ 93E4 20 0B        	jr nz,3F
 363+ 93E6 CB 5E        	bit 3,(hl)
 364+ 93E8 20 0A        	jr nz,4F
 365+ 93EA C9           	ret
 366+ 93EB
 367+ 93EB CB E6        1 set 4,(hl)
 368+ 93ED C9           	ret
 369+ 93EE CB EE        2 set 5,(hl)
 370+ 93F0 C9           	ret
 371+ 93F1 CB F6        3 set 6,(hl)
 372+ 93F3 C9           	ret
 373+ 93F4 CB FE        4 set 7,(hl)
 374+ 93F6 C9           	ret
 375+ 93F7
 376+ 93F7              ; ---------------------------------------------------------------------
 377+ 93F7              ;
 378+ 93F7              ;	23/01/24
 379+ 93F7              ;
 380+ 93F7              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ 93F7              ;
 382+ 93F7              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ 93F7              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ 93F7              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ 93F7              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ 93F7
 387+ 93F7              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ 93F7
 389+ 93F7 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ 93F8 3D           	dec a
 391+ 93F9 20 06        	jr nz,1F
 392+ 93FB
 393+ 93FB              ; --- Tipo_1
 394+ 93FB
 395+ 93FB 21 27 8C     	ld hl,Ctrl_4
 396+ 93FE CB C6        	set 0,(hl)
 397+ 9400 C9           	ret
 398+ 9401
 399+ 9401 3D           1 dec a
 400+ 9402 20 06        	jr nz,2F
 401+ 9404
 402+ 9404              ; --- Tipo_2
 403+ 9404
 404+ 9404 21 27 8C     	ld hl,Ctrl_4
 405+ 9407 CB CE        	set 1,(hl)
 406+ 9409 C9           	ret
 407+ 940A
 408+ 940A 3D           2 dec a
 409+ 940B 20 06        	jr nz,3F
 410+ 940D
 411+ 940D              ; --- Tipo_3
 412+ 940D
 413+ 940D 21 27 8C     	ld hl,Ctrl_4
 414+ 9410 CB D6        	set 2,(hl)
 415+ 9412 C9           	ret
 416+ 9413
 417+ 9413              ; --- Tipo_3
 418+ 9413
 419+ 9413 21 27 8C     3 ld hl,Ctrl_4
 420+ 9416 CB D6        	set 2,(hl)
 421+ 9418 C9           	ret
 422+ 9419
 423+ 9419              ; ---------------------------------------------------------------------
 424+ 9419              ;
 425+ 9419              ;	22/01/24
 426+ 9419
 427+ 9419 21 27 8C     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ 941C CB 46        	bit 0,(hl)
 429+ 941E 20 0E        	jr nz,1F
 430+ 9420
 431+ 9420 CB 4E        	bit 1,(hl)
 432+ 9422 20 10        	jr nz,2F
 433+ 9424
 434+ 9424 CB 56        	bit 2,(hl)
 435+ 9426 20 12        	jr nz,3F
 436+ 9428
 437+ 9428 CB 5E        	bit 3,(hl)
 438+ 942A 20 14        	jr nz,4F
 439+ 942C 18 19        	jr 6F
 440+ 942E
 441+ 942E              ; Entidad_de_Tipo_1.
 442+ 942E
 443+ 942E CB 66        1 bit 4,(hl)
 444+ 9430 28 15        	jr z,6F
 445+ 9432 18 10        	jr 5F
 446+ 9434
 447+ 9434              ; Entidad_de_Tipo_2.
 448+ 9434
 449+ 9434 CB 6E        2 bit 5,(hl)
 450+ 9436 28 0F        	jr z,6F
 451+ 9438 18 0A        	jr 5F
 452+ 943A
 453+ 943A              ; Entidad_de_Tipo_3.
 454+ 943A
 455+ 943A CB 76        3 bit 6,(hl)
 456+ 943C 28 09        	jr z,6F
 457+ 943E 18 04        	jr 5F
 458+ 9440
 459+ 9440              ; Entidad_de_Tipo_4.
 460+ 9440
 461+ 9440 CB 7E        4 bit 7,(hl)
 462+ 9442 28 03        	jr z,6F
 463+ 9444
 464+ 9444              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ 9444
 466+ 9444 AF           5 xor a
 467+ 9445 3C           	inc a
 468+ 9446 C9           	ret
 469+ 9447
 470+ 9447              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ 9447
 472+ 9447 AF           6 xor a
 473+ 9448 C9           	ret
 474+ 9449
 475+ 9449              ;	------------------------------------------------------------------------------------
 476+ 9449              ;
 477+ 9449              ;	12/01/24
 478+ 9449              ;
 479+ 9449              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ 9449              ;
 481+ 9449              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ 9449              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ 9449
 484+ 9449 CB 27        Calcula_salto_en_BC sla a
 485+ 944B D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ 944D 4F           	ld c,a
 487+ 944E 06 00        	ld b,0
 488+ 9450 C9           	ret
 489+ 9451
 490+ 9451              ; ------------------------------------------------------------------
 491+ 9451              ;
 492+ 9451              ;	19/1/24
 493+ 9451              ;
 494+ 9451              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ 9451              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ 9451
 497+ 9451 A7           Situa_en_datos_de_definicion and a
 498+ 9452 ED 4A        	adc hl,bc
 499+ 9454 CD AD 90     	call Extrae_address
 500+ 9457 22 00 8C         ld (Datos_de_entidad),hl
 501+ 945A C9           	ret
 502+ 945B
 503+ 945B              ; ------------------------------------------------------------------
 504+ 945B
 505+ 945B              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ 945B              ; 	inc de
 507+ 945B              ; 	inc de
 508+ 945B              ; 	ex de,hl
 509+ 945B              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ 945B              ; 	ret
 511+ 945B
 512+ 945B              ; ----------------------------------------------------------------------------------------------------------
 513+ 945B              ;
 514+ 945B              ;	24/6/24
 515+ 945B              ;
 516+ 945B              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ 945B              ;	_ de entidad.
 518+ 945B              ;
 519+ 945B              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ 945B              ;
 521+ 945B              ;
 522+ 945B              ;	MODIFICA: HL,DE y BC
 523+ 945B
 524+ 945B
 525+ 945B              Definicion_de_entidad_a_bandeja_DRAW
 526+ 945B
 527+ 945B 11 B5 8B     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ 945E 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ 945F 12           	ld (de),a
 530+ 9460 23           	inc hl
 531+ 9461              ;
 532+ 9461 11 C3 8B     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ 9464 01 02 00     	ld bc,2
 534+ 9467 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ 9469              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ 9469 11 B8 8B     	ld de,Contador_de_vueltas
 537+ 946C 7E           	ld a,(hl)
 538+ 946D 12           	ld (de),a
 539+ 946E 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ 946F
 541+ 946F 11 CA 8B     	ld de,Indice_Sprite_der
 542+ 9472 01 04 00     	ld bc,4
 543+ 9475 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ 9477
 545+ 9477 11 D2 8B     	ld de,Posicion_inicio
 546+ 947A 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ 947D ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ 947F
 549+ 947F 11 BC 8B     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ 9482 01 02 00     	ld bc,2
 551+ 9485 ED B0        	ldir
 552+ 9487
 553+ 9487 C9           	ret
 554+ 9488
 555+ 9488              ; ----------------------------------------------------------------------------------------------------------
 556+ 9488              ;
 557+ 9488              ;	1/8/24
 558+ 9488              ;
 559+ 9488
 560+ 9488              Parametros_de_bandeja_DRAW_a_caja
 561+ 9488
 562+ 9488 21 B5 8B     	ld hl,Bandeja_DRAW
 563+ 948B 01 0C 00     	ld bc,12
 564+ 948E ED B0        	ldir
 565+ 9490 C9           	ret
 566+ 9491
 567+ 9491              ;---------------------------------------------------------------------------------------------------------------
 568+ 9491              ;
 569+ 9491              ;	5/1/24
 570+ 9491              ;
 571+ 9491              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ 9491              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ 9491              ;
 574+ 9491              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ 9491              ;
 576+ 9491              ;	(Numero_parcial_de_entidades)="7".
 577+ 9491              ;
 578+ 9491              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ 9491              ;
 580+ 9491              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ 9491              ;
 582+ 9491              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ 9491              ;	MODIFICA: A y B.
 584+ 9491              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ 9491
 586+ 9491              Inicializa_Numero_parcial_de_entidades
 587+ 9491
 588+ 9491              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ 9491
 590+ 9491 3A FB 8B     	ld a,(Numero_de_entidades)
 591+ 9494 A7           	and a
 592+ 9495
 593+ 9495              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ 9495              ;	jr z,$
 595+ 9495              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ 9495
 597+ 9495 20 03        	jr nz,3F
 598+ 9497
 599+ 9497              ; ---------- ---------- ----------
 600+ 9497
 601+ 9497              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ 9497              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ 9497
 604+ 9497 CD 8D 92     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ 949A
 606+ 949A              ; ---------- ---------- ----------
 607+ 949A
 608+ 949A 3A FB 8B     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ 949D FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ 949F 38 08        	jr c,1F
 611+ 94A1
 612+ 94A1              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ 94A1              ; Actualizamos variables.
 614+ 94A1
 615+ 94A1 3E 07        	ld a,7
 616+ 94A3 32 FC 8B     	ld (Numero_parcial_de_entidades),a
 617+ 94A6 47           	ld b,a
 618+ 94A7 18 04        	jr 2F
 619+ 94A9
 620+ 94A9              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ 94A9              ; (Numero_de_entidades)="0".
 622+ 94A9
 623+ 94A9 32 FC 8B     1 ld (Numero_parcial_de_entidades),a
 624+ 94AC 47           	ld b,a
 625+ 94AD C9           2 ret
 626+ 94AE
# file closed: Rutinas_de_inicio_y_niveles.asm
2170  94AE              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 94AE              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 94AE              ;
   3+ 94AE              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 94AE              ;
   5+ 94AE              ; *****************************************************************************************************************************************************************************************
   6+ 94AE              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 94AE
   8+ 94AE 7C           calcula_tercio ld a,h
   9+ 94AF E6 18        	and $18
  10+ 94B1 CB 2F        	sra a
  11+ 94B3 CB 2F        	sra a
  12+ 94B5 CB 2F        	sra a
  13+ 94B7 C9           	ret
  14+ 94B8
# file closed: calcula_tercio.asm
2171  94B8              	include "Cls.asm"
# file opened: Cls.asm
   1+ 94B8              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 94B8              ;
   3+ 94B8              ;
   4+ 94B8              ;	CLS.
   5+ 94B8              ;
   6+ 94B8              ;	Limpia la pantalla y define sus atributos.
   7+ 94B8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 94B8              ;
   9+ 94B8              ;	COLORES: 0 ..... NEGRO
  10+ 94B8              ;    		 1 ..... AZUL
  11+ 94B8              ; 			 2 ..... ROJO
  12+ 94B8              ;			 3 ..... MAGENTA
  13+ 94B8              ; 			 4 ..... VERDE
  14+ 94B8              ; 			 5 ..... CIAN
  15+ 94B8              ;			 6 ..... AMARILLO
  16+ 94B8              ; 			 7 ..... BLANCO
  17+ 94B8              ;
  18+ 94B8              ;	INPUT: A contiene los atributos de pantalla.
  19+ 94B8              ;
  20+ 94B8              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 94B8
  22+ 94B8
  23+ 94B8 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 94BB 11 01 40     	LD DE,$4001
  25+ 94BE 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 94C1 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 94C3 ED B0        	LDIR
  28+ 94C5 01 FF 02     	LD BC,767
  29+ 94C8 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 94C9 ED B0        	LDIR
  31+ 94CB C9           	ret
  32+ 94CC
# file closed: Cls.asm
2172  94CC              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 94CC              ; ------------------------------------------------------------------------
   2+ 94CC              ;
   3+ 94CC              ;	30/1/24
   4+ 94CC              ;
   5+ 94CC              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 94CC              ;	Fila superior "0", Columna izquierda "0".
   7+ 94CC              ;
   8+ 94CC              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 94CC              ;
  10+ 94CC              ;	Modifica: A,BC y DE.
  11+ 94CC
  12+ 94CC 7D           Genera_coordenadas ld a,l
  13+ 94CD E6 1F        	and $1f
  14+ 94CF 32 B6 8B     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 94D2
  16+ 94D2 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 94D3 FE 40        	cp $40
  18+ 94D5 38 1C        	jr c,4F
  19+ 94D7
  20+ 94D7 CD AE 94     	call calcula_tercio
  21+ 94DA 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 94DB
  23+ 94DB 1E 00        	ld e,0
  24+ 94DD 7D           	ld a,l
  25+ 94DE E6 E0        	and $e0
  26+ 94E0 28 01        	jr z,1F
  27+ 94E2 04           	inc b
  28+ 94E3
  29+ 94E3 04           1 inc b
  30+ 94E4 05           	dec b
  31+ 94E5 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 94E7              ;														; _ , salimos.
  33+ 94E7 1C           3 inc e
  34+ 94E8 D6 20        	sub 32
  35+ 94EA 20 FB        	jr nz,3B
  36+ 94EC 10 F5        	djnz 1B
  37+ 94EE
  38+ 94EE 7B           2 ld a,e
  39+ 94EF 32 B7 8B     	ld (Coordenada_y),a
  40+ 94F2 C9           	ret
  41+ 94F3
  42+ 94F3 AF           4 xor a
  43+ 94F4 32 B7 8B     	ld (Coordenada_y),a
  44+ 94F7 C9           	ret
  45+ 94F8
# file closed: Genera_coordenadas.asm
2173  94F8              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ 94F8              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 94F8              ;
   3+ 94F8              ;	20/09/24
   4+ 94F8              ;
   5+ 94F8              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ 94F8              ;   DE contiene Puntero_objeto.
   7+ 94F8              ;   IX contiene el Puntero de impresión.
   8+ 94F8
   9+ 94F8              Genera_datos_de_impresion
  10+ 94F8
  11+ 94F8 ED 73 02 8C      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ 94FC
  13+ 94FC 31 BC 8B         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ 94FF DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ 9501
  16+ 9501 2A 20 8C         ld hl,(Scanlines_album_SP)
  17+ 9504
  18+ 9504 3E 05            ld a,5
  19+ 9506 85               add l
  20+ 9507 6F               ld l,a
  21+ 9508
  22+ 9508 F9               ld sp,hl
  23+ 9509 22 20 8C         ld (Scanlines_album_SP),hl
  24+ 950C
  25+ 950C 21 00 00         ld hl,0
  26+ 950F
  27+ 950F DD E5            push ix
  28+ 9511 3B               dec sp
  29+ 9512 ED 7A            adc hl,sp
  30+ 9514 D5               push de
  31+ 9515
  32+ 9515              ; Recuperamos SP.
  33+ 9515
  34+ 9515 ED 7B 02 8C      ld sp,(Stack)
  35+ 9519
  36+ 9519 E5               push hl
  37+ 951A F1               pop af
  38+ 951B 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ 951C
  40+ 951C              ; Tenemos el encabezado listo.
  41+ 951C              ; Preparamos registros para generar los scanlines.
  42+ 951C
  43+ 951C DD E5            push ix
  44+ 951E E1               pop hl                                          ; 1er scanline en HL.
  45+ 951F
  46+ 951F ED 5B 20 8C      ld de,(Scanlines_album_SP)
  47+ 9523
  48+ 9523              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ 9523              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ 9523
  51+ 9523 7C               ld a,h
  52+ 9524 FE 50            cp $50
  53+ 9526 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ 9528
  55+ 9528 20 05            jr nz,2F
  56+ 952A
  57+ 952A 7D               ld a,l
  58+ 952B FE E0            cp $e0
  59+ 952D 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ 952F
  61+ 952F 7D           2 ld a,l
  62+ 9530 FE C0            cp $c0
  63+ 9532 D2 CE 95         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ 9535
  65+ 9535              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ 9535
  67+ 9535 CD CC 99         call NextScan
  68+ 9538 EB               ex de,hl
  69+ 9539
  70+ 9539 73               ld (hl),e
  71+ 953A 23               inc hl
  72+ 953B 72               ld (hl),d
  73+ 953C 23               inc hl
  74+ 953D
  75+ 953D EB               ex de,hl
  76+ 953E
  77+ 953E CD CC 99         call NextScan
  78+ 9541 EB               ex de,hl
  79+ 9542
  80+ 9542 73               ld (hl),e
  81+ 9543 23               inc hl
  82+ 9544 72               ld (hl),d
  83+ 9545 23               inc hl
  84+ 9546
  85+ 9546 EB               ex de,hl
  86+ 9547
  87+ 9547 CD CC 99         call NextScan
  88+ 954A EB               ex de,hl
  89+ 954B
  90+ 954B 73               ld (hl),e
  91+ 954C 23               inc hl
  92+ 954D 72               ld (hl),d
  93+ 954E 23               inc hl
  94+ 954F
  95+ 954F EB               ex de,hl
  96+ 9550
  97+ 9550 CD CC 99         call NextScan
  98+ 9553 EB               ex de,hl
  99+ 9554
 100+ 9554 73               ld (hl),e
 101+ 9555 23               inc hl
 102+ 9556 72               ld (hl),d
 103+ 9557 23               inc hl
 104+ 9558
 105+ 9558 EB               ex de,hl
 106+ 9559
 107+ 9559 CD CC 99         call NextScan
 108+ 955C EB               ex de,hl
 109+ 955D
 110+ 955D 73               ld (hl),e
 111+ 955E 23               inc hl
 112+ 955F 72               ld (hl),d
 113+ 9560 23               inc hl
 114+ 9561
 115+ 9561 EB               ex de,hl
 116+ 9562
 117+ 9562 CD CC 99         call NextScan
 118+ 9565 EB               ex de,hl
 119+ 9566
 120+ 9566 73               ld (hl),e
 121+ 9567 23               inc hl
 122+ 9568 72               ld (hl),d
 123+ 9569 23               inc hl
 124+ 956A
 125+ 956A EB               ex de,hl
 126+ 956B
 127+ 956B CD CC 99         call NextScan
 128+ 956E EB               ex de,hl
 129+ 956F
 130+ 956F 73               ld (hl),e
 131+ 9570 23               inc hl
 132+ 9571 72               ld (hl),d
 133+ 9572 23               inc hl
 134+ 9573
 135+ 9573 EB               ex de,hl
 136+ 9574
 137+ 9574 CD CC 99         call NextScan
 138+ 9577 EB               ex de,hl
 139+ 9578
 140+ 9578 73               ld (hl),e
 141+ 9579 23               inc hl
 142+ 957A 72               ld (hl),d
 143+ 957B 23               inc hl
 144+ 957C
 145+ 957C EB               ex de,hl
 146+ 957D
 147+ 957D CD CC 99         call NextScan
 148+ 9580 EB               ex de,hl
 149+ 9581
 150+ 9581 73               ld (hl),e
 151+ 9582 23               inc hl
 152+ 9583 72               ld (hl),d
 153+ 9584 23               inc hl
 154+ 9585
 155+ 9585 EB               ex de,hl
 156+ 9586
 157+ 9586 CD CC 99         call NextScan
 158+ 9589 EB               ex de,hl
 159+ 958A
 160+ 958A 73               ld (hl),e
 161+ 958B 23               inc hl
 162+ 958C 72               ld (hl),d
 163+ 958D 23               inc hl
 164+ 958E
 165+ 958E EB               ex de,hl
 166+ 958F
 167+ 958F CD CC 99         call NextScan
 168+ 9592 EB               ex de,hl
 169+ 9593
 170+ 9593 73               ld (hl),e
 171+ 9594 23               inc hl
 172+ 9595 72               ld (hl),d
 173+ 9596 23               inc hl
 174+ 9597
 175+ 9597 EB               ex de,hl
 176+ 9598
 177+ 9598 CD CC 99         call NextScan
 178+ 959B EB               ex de,hl
 179+ 959C
 180+ 959C 73               ld (hl),e
 181+ 959D 23               inc hl
 182+ 959E 72               ld (hl),d
 183+ 959F 23               inc hl
 184+ 95A0
 185+ 95A0 EB               ex de,hl
 186+ 95A1
 187+ 95A1 CD CC 99         call NextScan
 188+ 95A4 EB               ex de,hl
 189+ 95A5
 190+ 95A5 73               ld (hl),e
 191+ 95A6 23               inc hl
 192+ 95A7 72               ld (hl),d
 193+ 95A8 23               inc hl
 194+ 95A9
 195+ 95A9 EB               ex de,hl
 196+ 95AA
 197+ 95AA CD CC 99         call NextScan
 198+ 95AD EB               ex de,hl
 199+ 95AE
 200+ 95AE 73               ld (hl),e
 201+ 95AF 23               inc hl
 202+ 95B0 72               ld (hl),d
 203+ 95B1 23               inc hl
 204+ 95B2
 205+ 95B2 EB               ex de,hl
 206+ 95B3
 207+ 95B3 CD CC 99         call NextScan
 208+ 95B6 EB               ex de,hl
 209+ 95B7
 210+ 95B7              ;   Vamos a guardar esta dirección de VRAM por si hay que generar un disparo, así no habra que hacer_
 211+ 95B7              ;   _ 16 o 17 llamadas a Nextscan. Una entidad con "permiso de disparo" siempre utiliza esta rutina para_
 212+ 95B7              ;   _ generar sus scanlines.
 213+ 95B7
 214+ 95B7              ;    ld (Puntero_de_impresion_disparo),de
 215+ 95B7
 216+ 95B7 73               ld (hl),e
 217+ 95B8 23               inc hl
 218+ 95B9 72               ld (hl),d
 219+ 95BA 23               inc hl
 220+ 95BB
 221+ 95BB              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 222+ 95BB
 223+ 95BB 22 20 8C         ld (Scanlines_album_SP),hl
 224+ 95BE
 225+ 95BE EB               ex de,hl
 226+ 95BF
 227+ 95BF              ; El disparo aparecerá dos líneas por debajo de la entidad.
 228+ 95BF
 229+ 95BF CD CC 99         call NextScan
 230+ 95C2 CD CC 99         call NextScan
 231+ 95C5
 232+ 95C5 22 2B 8C         ld (Puntero_de_impresion_disparo_de_entidad),hl
 233+ 95C8
 234+ 95C8              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 235+ 95C8
 236+ 95C8 08               ex af,af
 237+ 95C9
 238+ 95C9 F5               push af
 239+ 95CA E1               pop hl
 240+ 95CB
 241+ 95CB 36 10            ld (hl),16
 242+ 95CD
 243+ 95CD C9               ret
 244+ 95CE
 245+ 95CE              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 246+ 95CE
 247+ 95CE              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 248+ 95CE
 249+ 95CE 3E 57            ld a,$57
 250+ 95D0 94               sub h
 251+ 95D1 47               ld b,a
 252+ 95D2
 253+ 95D2 3E DF            ld a,$df
 254+ 95D4 BD               cp l
 255+ 95D5 38 04            jr c,1F
 256+ 95D7
 257+ 95D7 3E 08            ld a,8
 258+ 95D9 80               add b
 259+ 95DA 47               ld b,a
 260+ 95DB
 261+ 95DB              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 262+ 95DB              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 263+ 95DB
 264+ 95DB 48           1 ld c,b
 265+ 95DC 0C               inc c
 266+ 95DD
 267+ 95DD 04               inc b
 268+ 95DE 05               dec b
 269+ 95DF 20 02            jr nz,3F
 270+ 95E1
 271+ 95E1 18 0B            jr 6F
 272+ 95E3
 273+ 95E3 CD CC 99     3 call NextScan
 274+ 95E6 EB               ex de,hl
 275+ 95E7
 276+ 95E7 73               ld (hl),e
 277+ 95E8 23               inc hl
 278+ 95E9 72               ld (hl),d
 279+ 95EA 23               inc hl
 280+ 95EB
 281+ 95EB EB               ex de,hl
 282+ 95EC 10 F5            djnz 3B
 283+ 95EE
 284+ 95EE ED 53 20 8C  6 ld (Scanlines_album_SP),de
 285+ 95F2
 286+ 95F2 08           5 ex af,af
 287+ 95F3 F5               push af
 288+ 95F4 E1               pop hl
 289+ 95F5
 290+ 95F5 71               ld (hl),c
 291+ 95F6
 292+ 95F6 C9               ret
 293+ 95F7
# file closed: Genera_datos_de_impresion.asm
2174  95F7              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ 95F7              ; -----------------------------------------------------------------------------
   2+ 95F7              ;
   3+ 95F7              ;   11/03/24
   4+ 95F7              ;
   5+ 95F7
   6+ 95F7              Pinta_Sprites
   7+ 95F7
   8+ 95F7              ;    ld hl,(Scanlines_album_SP)
   9+ 95F7              ;    call Extrae_address
  10+ 95F7
  11+ 95F7              ;    inc h
  12+ 95F7              ;    dec h
  13+ 95F7              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  14+ 95F7
  15+ 95F7 ED 73 02 8C      ld (Stack),sp
  16+ 95FB
  17+ 95FB EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  18+ 95FC              ;                                       ; DE se encuentra en los datos del sprite.
  19+ 95FC 2C               inc l
  20+ 95FD 2C               inc l
  21+ 95FE
  22+ 95FE 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  23+ 95FF
  24+ 95FF 2C               inc l
  25+ 9600 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  26+ 9601
  27+ 9601              ;   Seleccionamos rutina de impresión:
  28+ 9601
  29+ 9601 3E 10            ld a,16
  30+ 9603 B8               cp b
  31+ 9604 C2 00 97         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  32+ 9607
  33+ 9607              ;   Rutinas:
  34+ 9607
  35+ 9607              Pinta_rapido    ;   1520 t/states.
  36+ 9607
  37+ 9607 E1               pop hl
  38+ 9608
  39+ 9608 1A               ld a,(de)
  40+ 9609 AE               xor (hl)
  41+ 960A 77               ld (hl),a
  42+ 960B 2C               inc l
  43+ 960C 1C               inc e
  44+ 960D 1A               ld a,(de)
  45+ 960E AE               xor (hl)
  46+ 960F 77               ld (hl),a
  47+ 9610 2C               inc l
  48+ 9611 1C               inc e
  49+ 9612 1A               ld a,(de)
  50+ 9613 AE               xor (hl)
  51+ 9614 77               ld (hl),a
  52+ 9615 13               inc de
  53+ 9616
  54+ 9616 E1               pop hl
  55+ 9617
  56+ 9617 1A               ld a,(de)
  57+ 9618 AE               xor (hl)
  58+ 9619 77               ld (hl),a
  59+ 961A 2C               inc l
  60+ 961B 1C               inc e
  61+ 961C 1A               ld a,(de)
  62+ 961D AE               xor (hl)
  63+ 961E 77               ld (hl),a
  64+ 961F 2C               inc l
  65+ 9620 1C               inc e
  66+ 9621 1A               ld a,(de)
  67+ 9622 AE               xor (hl)
  68+ 9623 77               ld (hl),a
  69+ 9624 13               inc de
  70+ 9625
  71+ 9625 E1               pop hl
  72+ 9626
  73+ 9626 1A               ld a,(de)
  74+ 9627 AE               xor (hl)
  75+ 9628 77               ld (hl),a
  76+ 9629 2C               inc l
  77+ 962A 1C               inc e
  78+ 962B 1A               ld a,(de)
  79+ 962C AE               xor (hl)
  80+ 962D 77               ld (hl),a
  81+ 962E 2C               inc l
  82+ 962F 1C               inc e
  83+ 9630 1A               ld a,(de)
  84+ 9631 AE               xor (hl)
  85+ 9632 77               ld (hl),a
  86+ 9633 13               inc de
  87+ 9634
  88+ 9634 E1               pop hl
  89+ 9635
  90+ 9635 1A               ld a,(de)
  91+ 9636 AE               xor (hl)
  92+ 9637 77               ld (hl),a
  93+ 9638 2C               inc l
  94+ 9639 1C               inc e
  95+ 963A 1A               ld a,(de)
  96+ 963B AE               xor (hl)
  97+ 963C 77               ld (hl),a
  98+ 963D 2C               inc l
  99+ 963E 1C               inc e
 100+ 963F 1A               ld a,(de)
 101+ 9640 AE               xor (hl)
 102+ 9641 77               ld (hl),a
 103+ 9642 13               inc de
 104+ 9643
 105+ 9643 E1               pop hl
 106+ 9644
 107+ 9644 1A               ld a,(de)
 108+ 9645 AE               xor (hl)
 109+ 9646 77               ld (hl),a
 110+ 9647 2C               inc l
 111+ 9648 1C               inc e
 112+ 9649 1A               ld a,(de)
 113+ 964A AE               xor (hl)
 114+ 964B 77               ld (hl),a
 115+ 964C 2C               inc l
 116+ 964D 1C               inc e
 117+ 964E 1A               ld a,(de)
 118+ 964F AE               xor (hl)
 119+ 9650 77               ld (hl),a
 120+ 9651 13               inc de
 121+ 9652
 122+ 9652 E1               pop hl
 123+ 9653
 124+ 9653 1A               ld a,(de)
 125+ 9654 AE               xor (hl)
 126+ 9655 77               ld (hl),a
 127+ 9656 2C               inc l
 128+ 9657 1C               inc e
 129+ 9658 1A               ld a,(de)
 130+ 9659 AE               xor (hl)
 131+ 965A 77               ld (hl),a
 132+ 965B 2C               inc l
 133+ 965C 1C               inc e
 134+ 965D 1A               ld a,(de)
 135+ 965E AE               xor (hl)
 136+ 965F 77               ld (hl),a
 137+ 9660 13               inc de
 138+ 9661
 139+ 9661 E1               pop hl
 140+ 9662
 141+ 9662 1A               ld a,(de)
 142+ 9663 AE               xor (hl)
 143+ 9664 77               ld (hl),a
 144+ 9665 2C               inc l
 145+ 9666 1C               inc e
 146+ 9667 1A               ld a,(de)
 147+ 9668 AE               xor (hl)
 148+ 9669 77               ld (hl),a
 149+ 966A 2C               inc l
 150+ 966B 1C               inc e
 151+ 966C 1A               ld a,(de)
 152+ 966D AE               xor (hl)
 153+ 966E 77               ld (hl),a
 154+ 966F 13               inc de
 155+ 9670
 156+ 9670 E1               pop hl
 157+ 9671
 158+ 9671 1A               ld a,(de)
 159+ 9672 AE               xor (hl)
 160+ 9673 77               ld (hl),a
 161+ 9674 2C               inc l
 162+ 9675 1C               inc e
 163+ 9676 1A               ld a,(de)
 164+ 9677 AE               xor (hl)
 165+ 9678 77               ld (hl),a
 166+ 9679 2C               inc l
 167+ 967A 1C               inc e
 168+ 967B 1A               ld a,(de)
 169+ 967C AE               xor (hl)
 170+ 967D 77               ld (hl),a
 171+ 967E 13               inc de
 172+ 967F
 173+ 967F E1               pop hl
 174+ 9680
 175+ 9680 1A               ld a,(de)
 176+ 9681 AE               xor (hl)
 177+ 9682 77               ld (hl),a
 178+ 9683 2C               inc l
 179+ 9684 1C               inc e
 180+ 9685 1A               ld a,(de)
 181+ 9686 AE               xor (hl)
 182+ 9687 77               ld (hl),a
 183+ 9688 2C               inc l
 184+ 9689 1C               inc e
 185+ 968A 1A               ld a,(de)
 186+ 968B AE               xor (hl)
 187+ 968C 77               ld (hl),a
 188+ 968D 13               inc de
 189+ 968E
 190+ 968E E1               pop hl
 191+ 968F
 192+ 968F 1A               ld a,(de)
 193+ 9690 AE               xor (hl)
 194+ 9691 77               ld (hl),a
 195+ 9692 2C               inc l
 196+ 9693 1C               inc e
 197+ 9694 1A               ld a,(de)
 198+ 9695 AE               xor (hl)
 199+ 9696 77               ld (hl),a
 200+ 9697 2C               inc l
 201+ 9698 1C               inc e
 202+ 9699 1A               ld a,(de)
 203+ 969A AE               xor (hl)
 204+ 969B 77               ld (hl),a
 205+ 969C 13               inc de
 206+ 969D
 207+ 969D E1               pop hl
 208+ 969E
 209+ 969E 1A               ld a,(de)
 210+ 969F AE               xor (hl)
 211+ 96A0 77               ld (hl),a
 212+ 96A1 2C               inc l
 213+ 96A2 1C               inc e
 214+ 96A3 1A               ld a,(de)
 215+ 96A4 AE               xor (hl)
 216+ 96A5 77               ld (hl),a
 217+ 96A6 2C               inc l
 218+ 96A7 1C               inc e
 219+ 96A8 1A               ld a,(de)
 220+ 96A9 AE               xor (hl)
 221+ 96AA 77               ld (hl),a
 222+ 96AB 13               inc de
 223+ 96AC
 224+ 96AC E1               pop hl
 225+ 96AD
 226+ 96AD 1A               ld a,(de)
 227+ 96AE AE               xor (hl)
 228+ 96AF 77               ld (hl),a
 229+ 96B0 2C               inc l
 230+ 96B1 1C               inc e
 231+ 96B2 1A               ld a,(de)
 232+ 96B3 AE               xor (hl)
 233+ 96B4 77               ld (hl),a
 234+ 96B5 2C               inc l
 235+ 96B6 1C               inc e
 236+ 96B7 1A               ld a,(de)
 237+ 96B8 AE               xor (hl)
 238+ 96B9 77               ld (hl),a
 239+ 96BA 13               inc de
 240+ 96BB
 241+ 96BB E1               pop hl
 242+ 96BC
 243+ 96BC 1A               ld a,(de)
 244+ 96BD AE               xor (hl)
 245+ 96BE 77               ld (hl),a
 246+ 96BF 2C               inc l
 247+ 96C0 1C               inc e
 248+ 96C1 1A               ld a,(de)
 249+ 96C2 AE               xor (hl)
 250+ 96C3 77               ld (hl),a
 251+ 96C4 2C               inc l
 252+ 96C5 1C               inc e
 253+ 96C6 1A               ld a,(de)
 254+ 96C7 AE               xor (hl)
 255+ 96C8 77               ld (hl),a
 256+ 96C9 13               inc de
 257+ 96CA
 258+ 96CA E1               pop hl
 259+ 96CB
 260+ 96CB 1A               ld a,(de)
 261+ 96CC AE               xor (hl)
 262+ 96CD 77               ld (hl),a
 263+ 96CE 2C               inc l
 264+ 96CF 1C               inc e
 265+ 96D0 1A               ld a,(de)
 266+ 96D1 AE               xor (hl)
 267+ 96D2 77               ld (hl),a
 268+ 96D3 2C               inc l
 269+ 96D4 1C               inc e
 270+ 96D5 1A               ld a,(de)
 271+ 96D6 AE               xor (hl)
 272+ 96D7 77               ld (hl),a
 273+ 96D8 13               inc de
 274+ 96D9
 275+ 96D9 E1               pop hl
 276+ 96DA
 277+ 96DA 1A               ld a,(de)
 278+ 96DB AE               xor (hl)
 279+ 96DC 77               ld (hl),a
 280+ 96DD 2C               inc l
 281+ 96DE 1C               inc e
 282+ 96DF 1A               ld a,(de)
 283+ 96E0 AE               xor (hl)
 284+ 96E1 77               ld (hl),a
 285+ 96E2 2C               inc l
 286+ 96E3 1C               inc e
 287+ 96E4 1A               ld a,(de)
 288+ 96E5 AE               xor (hl)
 289+ 96E6 77               ld (hl),a
 290+ 96E7 13               inc de
 291+ 96E8
 292+ 96E8 E1               pop hl
 293+ 96E9
 294+ 96E9 1A               ld a,(de)
 295+ 96EA AE               xor (hl)
 296+ 96EB 77               ld (hl),a
 297+ 96EC 2C               inc l
 298+ 96ED 1C               inc e
 299+ 96EE 1A               ld a,(de)
 300+ 96EF AE               xor (hl)
 301+ 96F0 77               ld (hl),a
 302+ 96F1 2C               inc l
 303+ 96F2 1C               inc e
 304+ 96F3 1A               ld a,(de)
 305+ 96F4 AE               xor (hl)
 306+ 96F5 77               ld (hl),a
 307+ 96F6 13               inc de
 308+ 96F7
 309+ 96F7 ED 73 20 8C      ld (Scanlines_album_SP),sp
 310+ 96FB ED 7B 02 8C      ld sp,(Stack)
 311+ 96FF C9               ret
 312+ 9700
 313+ 9700              Pinta_lento
 314+ 9700
 315+ 9700 E1           1 pop hl
 316+ 9701
 317+ 9701 1A               ld a,(de)
 318+ 9702 AE               xor (hl)
 319+ 9703 77               ld (hl),a
 320+ 9704 2C               inc l
 321+ 9705 1C               inc e
 322+ 9706 1A               ld a,(de)
 323+ 9707 AE               xor (hl)
 324+ 9708 77               ld (hl),a
 325+ 9709 2C               inc l
 326+ 970A 1C               inc e
 327+ 970B 1A               ld a,(de)
 328+ 970C AE               xor (hl)
 329+ 970D 77               ld (hl),a
 330+ 970E 13               inc de
 331+ 970F
 332+ 970F 10 EF            djnz 1B
 333+ 9711
 334+ 9711 ED 73 20 8C      ld (Scanlines_album_SP),sp
 335+ 9715 ED 7B 02 8C      ld sp,(Stack)
 336+ 9719 C9               ret
# file closed: Pinta_Sprites.asm
2175  971A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 971A              ; ******************************************************************************************************************************************************************************************
   2+ 971A              ;
   3+ 971A              ; 26/06/23
   4+ 971A              ;
   5+ 971A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 971A
   7+ 971A              Draw
   8+ 971A
   9+ 971A CD C0 99     	call Prepara_draw
  10+ 971D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 971E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 971F 28 05        	jr z,2F
  13+ 9721
  14+ 9721 3A D4 8B     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9724 18 0C        	jr 1F
  16+ 9726
  17+ 9726 2A D2 8B     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9729 22 C5 8B     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 972C CD B8 98     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 972F              ;													; _la esquina superior izquierda de la pantalla.
  21+ 972F
  22+ 972F CD 5F 9E     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9732
  24+ 9732 3A C2 8B     1 ld a,(Ctrl_0)
  25+ 9735 CB 6F        	bit 5,a
  26+ 9737 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9739
  28+ 9739 CD 4E 97     	call Comprueba_limite_horizontal
  29+ 973C CD DE 97     	call Comprueba_limite_vertical
  30+ 973F
  31+ 973F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 973F              ; -----------------------
  33+ 973F              ; -----------------------
  34+ 973F              ; -----------------------
  35+ 973F
  36+ 973F CD 34 99     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9742 CD 6B 99     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9745
  39+ 9745 3A C2 8B     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 9748 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 974A 32 C2 8B     	ld (Ctrl_0),a
  42+ 974D
  43+ 974D C9           	ret
  44+ 974E
  45+ 974E              ; *******************************************************************************************************************************************************************************************
  46+ 974E              ;	21/01/23
  47+ 974E              ;
  48+ 974E              ; 	Comprueba_limite_horizontal.
  49+ 974E              ;
  50+ 974E              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 974E              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 974E              ;
  53+ 974E              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 974E              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 974E              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 974E              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 974E
  58+ 974E
  59+ 974E
  60+ 974E 3A C2 8B     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9751 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9753 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9755 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9757 32 C2 8B     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 975A 18 09            jr 6F
  66+ 975C CB 5F        1 bit 3,a
  67+ 975E 28 0A            jr z,2F
  68+ 9760 E6 F7            and $f7
  69+ 9762 32 C2 8B         ld (Ctrl_0),a
  70+ 9765 CD B8 98     6 call Inicializacion
  71+ 9768 18 5B            jr 5F
  72+ 976A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 976B
  74+ 976B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 976B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 976B
  77+ 976B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 976C 2A D6 8B     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 976F CD AE 94     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9772 67           	ld h,a
  81+ 9773 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9774 CD AE 94     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9777 67           	ld h,a
  84+ 9778 A7           	and a
  85+ 9779 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 977B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 977C 3A D4 8B     	ld a,(Cuad_objeto)
  88+ 977F FE 02        	cp 2
  89+ 9781 38 1E        	jr c,3F
  90+ 9783 28 1C        	jr z,3F
  91+ 9785 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9786 28 23            jr z,7F
  93+ 9788 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 978A 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 978C E1           	pop hl
  96+ 978D
  97+ 978D              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 978D              ; _para indicar con E="2" en caso necesario.
  99+ 978D
 100+ 978D E5               push hl
 101+ 978E C5               push bc
 102+ 978F CD AE 94     	call calcula_tercio
 103+ 9792 FE 01        	cp 1
 104+ 9794 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9796 CD C6 97         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 9799 28 26            jr z,9F
 107+ 979B 38 24            jr c,9F
 108+ 979D 1E 00        11 ld e,0
 109+ 979F 18 22            jr 8F
 110+ 97A1 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 97A2 28 07        	jr z, 7F
 112+ 97A4 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 97A6 1E 00         	ld e,0
 114+ 97A8 E1           	pop hl
 115+ 97A9 18 04        	jr 4F
 116+ 97AB 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 97AD 18 15            jr 10F
 118+ 97AF
 119+ 97AF              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 97AF              ; _para indicar con E="2" en caso necesario.
 121+ 97AF
 122+ 97AF E5           4 push hl
 123+ 97B0 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 97B1 CD AE 94     	call calcula_tercio
 125+ 97B4 FE 01        	cp 1
 126+ 97B6 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 97B8 CD C6 97         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 97BB 28 04            jr z,9F
 129+ 97BD 30 02            jr nc,9F
 130+ 97BF 18 02        	jr 8F
 131+ 97C1 1E 02        9 ld e,2
 132+ 97C3 C1           8 pop bc
 133+ 97C4 E1           10 pop hl
 134+ 97C5 C9           5 ret
 135+ 97C6
 136+ 97C6              ; --------------------
 137+ 97C6              ;
 138+ 97C6              ; 25/08/22
 139+ 97C6
 140+ 97C6 CD AE 94     Comprueba_centro call calcula_tercio
 141+ 97C9 67               ld h,a
 142+ 97CA 08           	ex af,af
 143+ 97CB FE 02        	cp 2
 144+ 97CD 38 07        	jr c,1F
 145+ 97CF 28 05        	jr z,1F
 146+ 97D1 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 97D4 18 03        	jr 2F
 148+ 97D6 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 97D9 08           2 ex af,af
 150+ 97DA A7               and a
 151+ 97DB ED 42            sbc hl,bc
 152+ 97DD C9               ret
 153+ 97DE
 154+ 97DE              ; *********************************************************************************************************************************************************************************************
 155+ 97DE              ;
 156+ 97DE              ;   16/8/22
 157+ 97DE              ;
 158+ 97DE              ;	Comprueba_limite_vertical
 159+ 97DE              ;
 160+ 97DE              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 97DE              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 97DE              ;
 163+ 97DE
 164+ 97DE 2A C5 8B     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 97E1 7D           	ld a,l
 166+ 97E2 E6 1F        	and $1F
 167+ 97E4 57           	ld d,a
 168+ 97E5 3A D8 8B     	ld a,(Limite_vertical)
 169+ 97E8 BA           	cp d 											; Límite - Posición.
 170+ 97E9 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 97EA 3A D4 8B     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 97ED CB 47        	bit 0,a
 173+ 97EF 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 97F1
 175+ 97F1              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 97F1
 177+ 97F1 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 97F2 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 97F4
 180+ 97F4              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 97F4              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 97F4
 183+ 97F4 3A B6 8B         ld a,(Coordenada_X)
 184+ 97F7 16 0F            ld d,Centro_izquierda
 185+ 97F9 A7               and a
 186+ 97FA 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 97FB 28 1E            jr z,3F
 188+ 97FD 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 97FF              ;                                                    ; _salimos sin modificar nada.
 190+ 97FF 18 0E            jr 2F
 191+ 9801 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9802 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9804
 194+ 9804              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9804              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9804
 197+ 9804 3A B6 8B         ld a,(Coordenada_X)
 198+ 9807 16 10            ld d,Centro_derecha
 199+ 9809 A7               and a
 200+ 980A 92               sub d
 201+ 980B 28 0E            jr z,3F
 202+ 980D 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 980F              ;                                                    ; _salimos sin modificar nada.
 204+ 980F CB 43        2 bit 0,e
 205+ 9811 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9813 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9814 CD A8 98         call Modificaccionne
 208+ 9817 C1           	pop bc
 209+ 9818 CD B8 98         call Inicializacion
 210+ 981B C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 981C
 212+ 981C              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 981C
 214+ 981C C5           4 push bc
 215+ 981D 01 C4 8B     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9820 0A           	ld a,(bc)
 217+ 9821 3D           	dec a
 218+ 9822 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9823 7D           	ld a,l
 220+ 9824 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9825 CB 47        	bit 0,a
 222+ 9827 28 03        	jr z,5F
 223+ 9829 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 982A 18 2E        	jr 7F
 225+ 982C
 226+ 982C              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 982C
 228+ 982C 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 982D F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 982E 3A C2 8B     	ld a,(Ctrl_0)
 231+ 9831 CB 4F        	bit 1,a
 232+ 9833 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9835 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9836
 235+ 9836              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9836
 237+ 9836 1C               inc e
 238+ 9837 1D               dec e
 239+ 9838 20 07            jr nz,12F
 240+ 983A 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 983B 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 983C 22 C5 8B     	ld (Posicion_actual),hl
 243+ 983F 18 44        13 jr 9F
 244+ 9841 CB 43        12 bit 0,e
 245+ 9843 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9845              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9845 C1           	pop bc
 248+ 9846 18 D3        	jr 3B
 249+ 9848 80           14 add b
 250+ 9849 6F               ld l,a
 251+ 984A 22 C5 8B     	ld (Posicion_actual),hl
 252+ 984D CD A8 98         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9850 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9852 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9854 32 C2 8B         ld (Ctrl_0),a
 256+ 9857 F1           	pop af
 257+ 9858 18 2B        	jr 9F
 258+ 985A
 259+ 985A              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 985A
 261+ 985A F5           7 push af
 262+ 985B 3A C2 8B     	ld a,(Ctrl_0)
 263+ 985E CB 47        	bit 0,a
 264+ 9860 20 1D        	jr nz,8F
 265+ 9862 F1           	pop af
 266+ 9863
 267+ 9863              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9863
 269+ 9863 1C           	inc e
 270+ 9864 1D               dec e
 271+ 9865 20 07            jr nz,10F
 272+ 9867 90           	sub b
 273+ 9868 6F               ld l,a
 274+ 9869 22 C5 8B     	ld (Posicion_actual),hl
 275+ 986C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 986E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 986E CB 43        10 bit 0,e
 278+ 9870 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9872              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9872 C1           	pop bc
 281+ 9873 18 A6        	jr 3B
 282+ 9875 90           16 sub b
 283+ 9876 6F               ld l,a
 284+ 9877 22 C5 8B     	ld (Posicion_actual),hl
 285+ 987A CD A8 98         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 987D 18 06            jr 9F
 287+ 987F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9881 32 C2 8B         ld (Ctrl_0),a
 289+ 9884 F1           	pop af
 290+ 9885 C1           9 pop bc
 291+ 9886 1E 00        	ld e,0
 292+ 9888 CD B8 98         call Inicializacion
 293+ 988B F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 988C 08           	ex af,af
 295+ 988D F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 988E 18 8B            jr 3B
 297+ 9890
 298+ 9890              ; --------------------
 299+ 9890
 300+ 9890 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9892 CD DB 99     1 call PreviousScan
 302+ 9895 10 FB            djnz 1B
 303+ 9897 22 C5 8B     	ld (Posicion_actual),hl
 304+ 989A AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 989B C9           	ret
 306+ 989C
 307+ 989C              ; --------------------
 308+ 989C
 309+ 989C 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 989E CD CC 99     1 call NextScan
 311+ 98A1 10 FB            djnz 1B
 312+ 98A3 22 C5 8B     	ld (Posicion_actual),hl
 313+ 98A6 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 98A7 C9           	ret
 315+ 98A8
 316+ 98A8              ; --------------------
 317+ 98A8              ;
 318+ 98A8              ;	22/01/23
 319+ 98A8              ;
 320+ 98A8              ;	E="1". Hemos cambiado de cuadrante.
 321+ 98A8              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 98A8              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 98A8
 324+ 98A8
 325+ 98A8              Modificaccionne
 326+ 98A8
 327+ 98A8 3A D4 8B     	ld a,(Cuad_objeto)
 328+ 98AB FE 02        	cp 2
 329+ 98AD CC 90 98         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 98B0 DC 90 98         call c,Modifica_Pos_actual
 331+ 98B3 C8           	ret z
 332+ 98B4 CD 9C 98         call Modifica_Pos_actual2
 333+ 98B7 C9               ret
 334+ 98B8
 335+ 98B8              ; *************************************************************************************************************************************************************************************************
 336+ 98B8              ;
 337+ 98B8              ;	13/8/22
 338+ 98B8              ;
 339+ 98B8              ;	Inicializacion
 340+ 98B8              ;
 341+ 98B8              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 98B8              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 98B8              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 98B8              ;
 345+ 98B8              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 98B8              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 98B8              ;	_ desaparece/aparece.
 348+ 98B8
 349+ 98B8              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 98B8              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 98B8              ;
 352+ 98B8              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 98B8              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 98B8              ; 		   [E] ="0"
 355+ 98B8
 356+ 98B8              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 98B8
 358+ 98B8 CD AE 94     Inicializacion call calcula_tercio
 359+ 98BB 28 36        	jr z,primit
 360+ 98BD E6 02        	and 2
 361+ 98BF 20 07        	jr nz,segmit
 362+ 98C1 7D           	ld a,l
 363+ 98C2 FE 7F        	cp $7f
 364+ 98C4 38 2D        	jr c,primit
 365+ 98C6 28 2B        	jr z,primit
 366+ 98C8 CD 2E 99     segmit call column
 367+ 98CB 38 13        	jr c,tercuad
 368+ 98CD 3E 04        cuarcuad ld a,4
 369+ 98CF 32 D4 8B     	ld (Cuad_objeto),a
 370+ 98D2 21 20 48     	ld hl,$4820
 371+ 98D5 22 D6 8B     	ld (Limite_horizontal),hl
 372+ 98D8 21 D8 8B     	ld hl,Limite_vertical
 373+ 98DB 36 0D        	ld (hl),$0d
 374+ 98DD 08           	ex af,af
 375+ 98DE 18 3C        	jr 1F
 376+ 98E0              tercuad
 377+ 98E0 3E 03        	ld a,3
 378+ 98E2 32 D4 8B     	ld (Cuad_objeto),a
 379+ 98E5 21 20 48     	ld hl,$4820
 380+ 98E8 22 D6 8B     	ld (Limite_horizontal),hl
 381+ 98EB 21 D8 8B     	ld hl,Limite_vertical
 382+ 98EE 36 12        	ld (hl),$12
 383+ 98F0 08           	ex af,af
 384+ 98F1 18 29        	jr 1F
 385+ 98F3 CD 2E 99     primit call column
 386+ 98F6 38 13        	jr c, primcuad
 387+ 98F8              segcuad
 388+ 98F8 3E 02        	ld a,2
 389+ 98FA 32 D4 8B     	ld (Cuad_objeto),a
 390+ 98FD 21 C0 4F     	ld hl,$4fc0
 391+ 9900 22 D6 8B     	ld (Limite_horizontal),hl
 392+ 9903 21 D8 8B     	ld hl,Limite_vertical
 393+ 9906 36 0D        	ld (hl),$0d
 394+ 9908 08           	ex af,af
 395+ 9909 18 11        	jr 1F
 396+ 990B              primcuad
 397+ 990B 3E 01        	ld a,1
 398+ 990D 32 D4 8B     	ld (Cuad_objeto),a
 399+ 9910 21 C0 4F     	ld hl,$4fc0
 400+ 9913 22 D6 8B     	ld (Limite_horizontal),hl
 401+ 9916 21 D8 8B     	ld hl,Limite_vertical
 402+ 9919 36 12        	ld (hl),$12
 403+ 991B 08           	ex af,af
 404+ 991C
 405+ 991C C5           1 push bc
 406+ 991D E5           	push hl
 407+ 991E D5           	push de
 408+ 991F
 409+ 991F 2A C5 8B     	ld hl,(Posicion_actual)
 410+ 9922 CD CC 94     	call Genera_coordenadas
 411+ 9925
 412+ 9925 D1           	pop de
 413+ 9926 E1           	pop hl
 414+ 9927 C1           	pop bc
 415+ 9928
 416+ 9928 21 C2 8B     	ld hl,Ctrl_0
 417+ 992B CB EE        	set 5,(hl)
 418+ 992D C9           	ret
 419+ 992E
 420+ 992E              ; ------------------------------------------------------------------------------------------------------------------
 421+ 992E
 422+ 992E              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 992E              ;
 424+ 992E              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 992E
 426+ 992E 7D           column ld a,l
 427+ 992F E6 1F        	and $1f
 428+ 9931 FE 10         	cp $10
 429+ 9933 C9            	ret
 430+ 9934
 431+ 9934              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9934              ;
 433+ 9934              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9934              ;
 435+ 9934              ; 14/12/22
 436+ 9934              ;
 437+ 9934              ;	Modifica: A y BC.
 438+ 9934
 439+ 9934 3A D4 8B     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9937 E6 01        	and 1
 441+ 9939 28 17        	jr z,1F
 442+ 993B
 443+ 993B              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 993B
 445+ 993B 3A B6 8B     	ld a,(Coordenada_X)
 446+ 993E 47           	ld b,a
 447+ 993F 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9940 79           	ld a,c
 449+ 9941 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9942 38 08        	jr c,2F
 451+ 9944 47           	ld b,a
 452+ 9945 79           	ld a,c
 453+ 9946 90           	sub b
 454+ 9947 32 D5 8B     	ld (Columnas),a
 455+ 994A 18 1B        	jr 4F
 456+ 994C 79           2 ld a,c
 457+ 994D 32 D5 8B     	ld (Columnas),a
 458+ 9950 18 15        	jr 4F
 459+ 9952
 460+ 9952              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9952
 462+ 9952 3A B6 8B     1 ld a,(Coordenada_X)
 463+ 9955 81           	add c
 464+ 9956 3D           	dec a
 465+ 9957 D6 1F        	sub $1f
 466+ 9959 38 08        	jr c,3F
 467+ 995B 47           	ld b,a
 468+ 995C 79           	ld a,c
 469+ 995D 90           	sub b
 470+ 995E 32 D5 8B     	ld (Columnas),a
 471+ 9961 18 04        	jr 4F
 472+ 9963 79           3 ld a,c
 473+ 9964 32 D5 8B     	ld (Columnas),a
 474+ 9967 D9           4 exx
 475+ 9968 4F           	ld c,a
 476+ 9969 D9           	exx
 477+ 996A C9            ret
 478+ 996B
 479+ 996B              ; --------------------------------------------------------------------------------------------------------------------
 480+ 996B              ;
 481+ 996B              ;   19/7/23
 482+ 996B              ;
 483+ 996B              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 996B              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 996B              ;
 486+ 996B              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 996B              ;			HL e IY Contienen (Puntero_objeto).
 488+ 996B              ;
 489+ 996B              ;	DESTRUYE: HL,B Y A.
 490+ 996B
 491+ 996B 3A D4 8B     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 996E FE 02        	cp 2
 493+ 9970 38 18        	jr c,1F
 494+ 9972 28 16        	jr z,1F
 495+ 9974 E6 01        	and 1
 496+ 9976 28 0D        	jr z,3F
 497+ 9978
 498+ 9978              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 9978
 500+ 9978 CD B4 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 997B
 502+ 997B 7D           9 ld a,l
 503+ 997C E6 1F        	and $1f
 504+ 997E 28 2A        	jr z,7F
 505+ 9980 2B           	dec hl
 506+ 9981 10 F8        	djnz 9B
 507+ 9983 18 25        	jr 7F
 508+ 9985
 509+ 9985              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 9985
 511+ 9985 2A C5 8B     3 ld hl,(Posicion_actual)
 512+ 9988 18 20        	jr 7F
 513+ 998A
 514+ 998A 28 14        1 jr z,2F
 515+ 998C
 516+ 998C              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 998C
 518+ 998C CD B4 99     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 998F
 520+ 998F 7D           4 ld a,l
 521+ 9990 E6 1F        	and $1f
 522+ 9992 28 03        	jr z,6F
 523+ 9994 2B           	dec hl
 524+ 9995 10 F8        	djnz 4B
 525+ 9997 06 0F        6 ld b,15
 526+ 9999 CD DB 99     5 call PreviousScan
 527+ 999C 10 FB        	djnz 5B
 528+ 999E 18 0A        	jr 7F
 529+ 99A0
 530+ 99A0              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 99A0
 532+ 99A0 CD B4 99     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 99A3 06 0F        	ld b,15
 534+ 99A5 CD DB 99     8 call PreviousScan
 535+ 99A8 10 FB        	djnz 8B
 536+ 99AA
 537+ 99AA E5           7 push hl
 538+ 99AB DD E1        	pop ix
 539+ 99AD
 540+ 99AD 2A C7 8B     	ld hl,(Puntero_objeto)
 541+ 99B0 E5           	push hl
 542+ 99B1 FD E1        	pop iy
 543+ 99B3
 544+ 99B3 C9           	ret
 545+ 99B4
 546+ 99B4              ; --------------------------------------------------------------------------------------------------------------------
 547+ 99B4              ;
 548+ 99B4              ;	2/1/23
 549+ 99B4              ;
 550+ 99B4              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 99B4              ;
 552+ 99B4              ;	Tras esta rutina tenemos:
 553+ 99B4              ;
 554+ 99B4              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 99B4              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 99B4              ;
 557+ 99B4              ;	DESTRUYE!!!!! HL,B y A.
 558+ 99B4
 559+ 99B4 2A C5 8B     Operandos ld hl,(Posicion_actual)
 560+ 99B7 3A D5 8B     	ld a,(Columnas)
 561+ 99BA 3D           	dec a
 562+ 99BB 20 01        	jr nz,1F
 563+ 99BD 3C           	inc a
 564+ 99BE 47           1 ld b,a
 565+ 99BF C9           	ret
 566+ 99C0
 567+ 99C0              ; --------------------------------------------------------------------------------------------------------------------
 568+ 99C0              ;
 569+ 99C0              ;	Prepara_draw
 570+ 99C0              ;
 571+ 99C0              ;	Es una rutina de carga.
 572+ 99C0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 99C0              ;
 574+ 99C0              ;	FUNCIONAMIENTO:
 575+ 99C0              ;
 576+ 99C0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 99C0              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 99C0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 99C0              ;
 580+ 99C0              ;	DESTRUYE:
 581+ 99C0              ;
 582+ 99C0              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 99C0
 584+ 99C0 21 C3 8B     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 99C3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 99C4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 99C5 4E           	ld c,(hl)
 588+ 99C6 2A C5 8B     	ld hl,(Posicion_actual)
 589+ 99C9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 99CB C9           	ret
 591+ 99CC
 592+ 99CC              ;----------------------------------------------------------------------------------------------------------------
 593+ 99CC              ;
 594+ 99CC              ;	5/08/22
 595+ 99CC              ;
 596+ 99CC              ;   NextScan.
 597+ 99CC              ;
 598+ 99CC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 99CC              ;
 600+ 99CC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 99CC              ;
 602+ 99CC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 99CC              ;
 604+ 99CC              ;       DESTRUIDOS: AF y HL !!!
 605+ 99CC              ;
 606+ 99CC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 99CC              ;
 608+ 99CC
 609+ 99CC 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 99CD 7C               ld a,h
 611+ 99CE E6 07            and 7
 612+ 99D0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 99D1
 614+ 99D1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 99D2 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 99D4 6F               ld l,a
 617+ 99D5 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 99D6
 619+ 99D6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 99D7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 99D9 67               ld h,a
 622+ 99DA C9               ret
 623+ 99DB
 624+ 99DB              ;----------------------------------------------------------------------------------------------------------------
 625+ 99DB              ;
 626+ 99DB              ;	5/08/22
 627+ 99DB              ;
 628+ 99DB              ;   PreviousScan.
 629+ 99DB              ;
 630+ 99DB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 99DB              ;
 632+ 99DB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 99DB              ;
 634+ 99DB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 99DB              ;
 636+ 99DB              ;       DESTRUIDOS: AF y HL !!!
 637+ 99DB              ;
 638+ 99DB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 99DB              ;
 640+ 99DB
 641+ 99DB 7C           PreviousScan ld a,h
 642+ 99DC 25               dec h               ; Dec H.
 643+ 99DD E6 07            and 7
 644+ 99DF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 99E0
 646+ 99E0 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 99E1 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 99E3 6F               ld l,a
 649+ 99E4 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 99E5
 651+ 99E5 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 99E6 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 99E8 67               ld h,a
 654+ 99E9 C9               ret
 655+ 99EA
 656+ 99EA
 657+ 99EA
 658+ 99EA
 659+ 99EA
 660+ 99EA
 661+ 99EA
 662+ 99EA
 663+ 99EA
 664+ 99EA
 665+ 99EA
 666+ 99EA
# file closed: Draw_XOR.asm
2176  99EA              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99EA
   2+ 99EA              ; ******************************************************************************************************************************************************************************************
   3+ 99EA              ;
   4+ 99EA              ;   20/05/23
   5+ 99EA              ;
   6+ 99EA              ;	Recompone_posicion_inicio
   7+ 99EA              ;
   8+ 99EA              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 99EA              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 99EA              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 99EA              ;	_ a una u otra rutina.
  12+ 99EA
  13+ 99EA              Recompone_posicion_inicio
  14+ 99EA
  15+ 99EA 2A D2 8B     	ld hl,(Posicion_inicio)
  16+ 99ED 7D           	ld a,l
  17+ 99EE E6 1F        	and $1f
  18+ 99F0 28 16        	jr z,1F
  19+ 99F2
  20+ 99F2 FE 1F        	cp $1f
  21+ 99F4 28 0D        	jr z,3F
  22+ 99F6
  23+ 99F6 21 C1 8B     	ld hl,Ctrl_2
  24+ 99F9 CB C6        	set 0,(hl)
  25+ 99FB 2A C7 8B     	ld hl,(Puntero_objeto)
  26+ 99FE 22 F3 8B     	ld (Repone_puntero_objeto),hl
  27+ 9A01 18 08        	jr 2F
  28+ 9A03
  29+ 9A03 CD B1 9B     3 call Mov_left
  30+ 9A06 18 03        	jr 2F
  31+ 9A08
  32+ 9A08 CD 8E 9A     1 call Mov_right
  33+ 9A0B 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9A0E 22 C7 8B     	ld (Puntero_objeto),hl
  35+ 9A11 C9           	ret
  36+ 9A12
  37+ 9A12              ; ******************************************************************************************************************************************************************************************
  38+ 9A12              ;
  39+ 9A12              ;   27/05/23
  40+ 9A12              ;
  41+ 9A12              ;	Mov_down
  42+ 9A12              ;
  43+ 9A12              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9A12              ;
  45+ 9A12              ;
  46+ 9A12              Mov_down
  47+ 9A12
  48+ 9A12 CD 7C 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9A15              ;																	; _ repone (Puntero_objeto).
  50+ 9A15 21 C2 8B     	ld hl,Ctrl_0
  51+ 9A18 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9A1A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9A1A              ; 																	; _ en el caso de que no lo haya.
  54+ 9A1A 3A DD 8B     	ld a,(Vel_down)
  55+ 9A1D 47           	ld b,a
  56+ 9A1E 2A C5 8B         ld hl,(Posicion_actual)
  57+ 9A21 CD AE 94     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9A24 E6 02        	and 2
  59+ 9A26 28 17        	jr z,1F
  60+ 9A28
  61+ 9A28              ; Nos encontramos en el último tercio de pantalla.
  62+ 9A28              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9A28
  64+ 9A28 7C           	ld a,h
  65+ 9A29 FE 57        	cp $57
  66+ 9A2B 20 12        	jr nz,1F
  67+ 9A2D
  68+ 9A2D 7D           	ld a,l
  69+ 9A2E C6 20        	add $20
  70+ 9A30 30 0D        	jr nc,1F
  71+ 9A32
  72+ 9A32              ; ------------------------------
  73+ 9A32              ;
  74+ 9A32              ;	12/01/24
  75+ 9A32
  76+ 9A32              ;	call Reaparece_arriba
  77+ 9A32 CD 3E 9D     	call Reinicio
  78+ 9A35
  79+ 9A35              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9A35
  81+ 9A35 3A 26 8C     	ld a,(Ctrl_3)
  82+ 9A38 CB CF        	set 1,a
  83+ 9A3A 32 26 8C     	ld (Ctrl_3),a
  84+ 9A3D
  85+ 9A3D 18 08        	jr 3F
  86+ 9A3F              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9A3F              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9A3F              ; ------------------------------
  89+ 9A3F
  90+ 9A3F CD CC 99     1 call NextScan
  91+ 9A42 22 C5 8B     	ld (Posicion_actual),hl
  92+ 9A45 10 DA            djnz 2B
  93+ 9A47 CD CC 94     3 call Genera_coordenadas
  94+ 9A4A C9           	ret
  95+ 9A4B
  96+ 9A4B              ; ******************************************************************************************************************************************************************************************
  97+ 9A4B              ;
  98+ 9A4B              ;   27/05/23
  99+ 9A4B              ;
 100+ 9A4B              ;	Mov_up
 101+ 9A4B              ;
 102+ 9A4B              ; 	Mueve el Sprite hacia arriba.
 103+ 9A4B              ;
 104+ 9A4B              ;
 105+ 9A4B              Mov_up
 106+ 9A4B
 107+ 9A4B CD 7C 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9A4E              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9A4E 21 C2 8B     	ld hl,Ctrl_0
 110+ 9A51 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9A53              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9A53              ; 																		; _ en el caso de que no lo haya.
 113+ 9A53 3A DC 8B     	ld a,(Vel_up)
 114+ 9A56 47           	ld b,a
 115+ 9A57 2A C5 8B     	ld hl,(Posicion_actual)
 116+ 9A5A CD AE 94     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9A5D A7           	and a
 118+ 9A5E 20 10        	jr nz,1F
 119+ 9A60
 120+ 9A60              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9A60              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9A60
 123+ 9A60 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9A61 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9A63 20 0B            jr nz,1F
 126+ 9A65 7D               ld a,l
 127+ 9A66 D6 20            sub $20
 128+ 9A68 30 06            jr nc,1F
 129+ 9A6A 25               dec h
 130+ 9A6B
 131+ 9A6B              ; -----------------------------
 132+ 9A6B CD 1F 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9A6E              ;	call Reinicio
 134+ 9A6E              ; -----------------------------
 135+ 9A6E
 136+ 9A6E 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9A70 CD DB 99     1 call PreviousScan
 138+ 9A73 22 C5 8B     	ld (Posicion_actual),hl
 139+ 9A76 10 E2            djnz 3B
 140+ 9A78 CD CC 94     2 call Genera_coordenadas
 141+ 9A7B C9           	ret
 142+ 9A7C
 143+ 9A7C              ; -----------------------------
 144+ 9A7C              ;
 145+ 9A7C              ;	27/5/23
 146+ 9A7C              ;
 147+ 9A7C              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9A7C              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9A7C              ;
 150+ 9A7C              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9A7C              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9A7C              ;
 153+ 9A7C              ;	Modifica: A y (Puntero_objeto).
 154+ 9A7C
 155+ 9A7C 3A C1 8B     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9A7F CB 47        	bit 0,a
 157+ 9A81 C8           	ret z
 158+ 9A82 CB 87        	res 0,a
 159+ 9A84 32 C1 8B     	ld (Ctrl_2),a
 160+ 9A87 2A F3 8B     	ld hl,(Repone_puntero_objeto)
 161+ 9A8A 22 C7 8B     	ld (Puntero_objeto),hl
 162+ 9A8D C9           	ret
 163+ 9A8E
 164+ 9A8E              ; ******************************************************************************************************************************************************************************************
 165+ 9A8E              ;
 166+ 9A8E              ;	19/10/22
 167+ 9A8E              ;
 168+ 9A8E              ;	Mov_right.
 169+ 9A8E              ;
 170+ 9A8E              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9A8E              ;
 172+ 9A8E
 173+ 9A8E 3A C2 8B     Mov_right ld a,(Ctrl_0)
 174+ 9A91 CB 77        	bit 6,a
 175+ 9A93 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9A95
 177+ 9A95 CD CD 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 9A98 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9A99
 180+ 9A99 21 C2 8B     	ld hl,Ctrl_0
 181+ 9A9C CB E6        	set 4,(hl)
 182+ 9A9E 18 52        	jr 8F
 183+ 9AA0
 184+ 9AA0 21 C2 8B     10 ld hl,Ctrl_0
 185+ 9AA3 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9AA5              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9AA5              ; 																	; _ en el caso de que no lo haya.
 188+ 9AA5 3A B6 8B     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 9AA8 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9AAA 20 46        	jr nz,8F
 191+ 9AAC
 192+ 9AAC 3A C9 8B     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9AAF A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9AB0 28 40        	jr z,8F
 195+ 9AB2
 196+ 9AB2              ; ---------- ---------- ----------
 197+ 9AB2              ;
 198+ 9AB2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9AB2
 200+ 9AB2 3A DB 8B     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9AB5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 9AB7 28 11        	jr z,1F
 203+ 9AB9 38 06        	jr c,6F
 204+ 9ABB FE 04        	cp 4
 205+ 9ABD 28 14        	jr z,7F
 206+ 9ABF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9AC1
 208+ 9AC1              ; ---------- ---------- ----------
 209+ 9AC1              ;
 210+ 9AC1              ; Perfiles de velocidad
 211+ 9AC1              ;
 212+ 9AC1
 213+ 9AC1 3A C9 8B     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9AC4 FE FE        	cp $fe
 215+ 9AC6 20 2A        	jr nz,8F
 216+ 9AC8 18 10        	jr 3F
 217+ 9ACA 3A C9 8B     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9ACD FE FD        	cp $fd
 219+ 9ACF 20 21        	jr nz,8F
 220+ 9AD1 18 07        	jr 3F
 221+ 9AD3 3A C9 8B     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9AD6 FE FB        	cp $fb
 223+ 9AD8 20 18        	jr nz,8F
 224+ 9ADA
 225+ 9ADA              ; ---------- ---------- ----------
 226+ 9ADA
 227+ 9ADA              3
 228+ 9ADA CD 0D 9D     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9ADD              ;	call Reinicio
 230+ 9ADD
 231+ 9ADD              ; ---------- ---------- ----------
 232+ 9ADD              ;
 233+ 9ADD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9ADD
 235+ 9ADD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9ADF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9AE0 CD F9 9A     	call DESPLZ_DER
 238+ 9AE3 C1           	pop bc
 239+ 9AE4 10 F9        	djnz 5B
 240+ 9AE6 2A C5 8B     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9AE9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9AEA 22 C5 8B     	ld (Posicion_actual),hl
 243+ 9AED CD CC 94     	call Genera_coordenadas
 244+ 9AF0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9AF2
 246+ 9AF2              ; ---------- ---------- ----------
 247+ 9AF2
 248+ 9AF2 2A C5 8B     8 ld hl,(Posicion_actual)
 249+ 9AF5 CD F9 9A     	call DESPLZ_DER
 250+ 9AF8 C9           2 ret
 251+ 9AF9
 252+ 9AF9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9AF9              ;
 254+ 9AF9              ;	22/9/22
 255+ 9AF9              ;
 256+ 9AF9
 257+ 9AF9 CD 08 9B     DESPLZ_DER call Desplaza_derecha
 258+ 9AFC CD 54 9B         call modifica_parametros_1er_DESPLZ_2
 259+ 9AFF CD 7D 9B         call Ciclo_completo
 260+ 9B02 21 C2 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9B05 CB FE        	set 7,(hl)
 262+ 9B07 C9           	ret
 263+ 9B08
 264+ 9B08              ; ******************************************************************************************************************************************************************************************
 265+ 9B08              ;	15/02/23
 266+ 9B08              ;
 267+ 9B08
 268+ 9B08 3A DB 8B     Desplaza_derecha ld a,(Vel_right)
 269+ 9B0B 47           	ld b,a
 270+ 9B0C 2A CE 8B     	ld hl,(Puntero_DESPLZ_der)
 271+ 9B0F 23           1 inc hl
 272+ 9B10 23           	inc hl
 273+ 9B11 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9B13 22 CE 8B     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9B16 CD AD 90     	call Extrae_address
 276+ 9B19 22 C7 8B     	ld (Puntero_objeto),hl
 277+ 9B1C
 278+ 9B1C              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9B1C
 280+ 9B1C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9B1C              ; Cuántos movimientos hemos hecho ??
 282+ 9B1C              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9B1C
 284+ 9B1C 2A CA 8B     7 ld hl,(Indice_Sprite_der)
 285+ 9B1F EB           	ex de,hl
 286+ 9B20 A7           	and a
 287+ 9B21 ED 52        	sbc hl,de
 288+ 9B23 CB 3D        	srl l
 289+ 9B25 3E 08        6 ld a,8
 290+ 9B27 95           	sub l
 291+ 9B28 30 1E        	jr nc,3F
 292+ 9B2A
 293+ 9B2A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9B2A              ; B="0".
 295+ 9B2A
 296+ 9B2A 04           4 inc b
 297+ 9B2B 3C           	inc a
 298+ 9B2C 20 FC        	jr nz,4B
 299+ 9B2E 78           	ld a,b
 300+ 9B2F 08           	ex af,af
 301+ 9B30 2A CA 8B     	ld hl,(Indice_Sprite_der)
 302+ 9B33 23           5 inc hl
 303+ 9B34 23           	inc hl
 304+ 9B35 10 FC        	djnz 5B
 305+ 9B37 22 CE 8B     	ld (Puntero_DESPLZ_der),hl
 306+ 9B3A CD AD 90     	call Extrae_address
 307+ 9B3D 22 C7 8B     	ld (Puntero_objeto),hl
 308+ 9B40
 309+ 9B40              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9B40              ; _(Posicion_actual).
 311+ 9B40
 312+ 9B40 21 C5 8B     	ld hl,Posicion_actual
 313+ 9B43 34           	inc (hl)
 314+ 9B44 08               ex af,af
 315+ 9B45 6F           	ld l,a
 316+ 9B46 18 DD        	jr 6B
 317+ 9B48
 318+ 9B48              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9B48
 320+ 9B48 47           3 ld b,a
 321+ 9B49 2A CC 8B     	ld hl,(Indice_Sprite_izq)
 322+ 9B4C 23           2 inc hl
 323+ 9B4D 23           	inc hl
 324+ 9B4E 10 FC        	djnz 2B
 325+ 9B50 22 D0 8B     	ld (Puntero_DESPLZ_izq),hl
 326+ 9B53 C9           8 ret
 327+ 9B54
 328+ 9B54              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9B54              ;
 330+ 9B54              ;	24/7/22
 331+ 9B54              ;
 332+ 9B54              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9B54              ;
 334+ 9B54              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9B54              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9B54              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9B54
 338+ 9B54 3A C9 8B     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9B57 A7           	and a
 340+ 9B58 20 1F        	jr nz,1F
 341+ 9B5A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9B5C 32 C9 8B         ld (CTRL_DESPLZ),a
 343+ 9B5F
 344+ 9B5F 21 C4 8B     	ld hl,Columns
 345+ 9B62 34           	inc (hl)
 346+ 9B63 3A D4 8B     	ld a,(Cuad_objeto)
 347+ 9B66 E6 01        	and 1
 348+ 9B68 28 0F        	jr z,1F
 349+ 9B6A 2A C5 8B     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9B6D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9B6E 22 C5 8B     	ld (Posicion_actual),hl
 352+ 9B71 CD CC 94     	call Genera_coordenadas
 353+ 9B74 CD D9 9C     	call Inc_CTRL_DESPLZ
 354+ 9B77 18 03        	jr 2F
 355+ 9B79 CD D9 9C     1 call Inc_CTRL_DESPLZ
 356+ 9B7C C9           2 ret
 357+ 9B7D
 358+ 9B7D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9B7D              ;
 360+ 9B7D              ;	24/7/22
 361+ 9B7D              ;
 362+ 9B7D              ;	Ciclo_completo.
 363+ 9B7D              ;
 364+ 9B7D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9B7D              ;
 366+ 9B7D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9B7D              ; 	Decrementamos (Columns).
 368+ 9B7D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9B7D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9B7D
 371+ 9B7D
 372+ 9B7D 3A C9 8B     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9B80 FE FF        	cp $ff
 374+ 9B82 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9B84 E6 F0        	and $f0
 376+ 9B86 20 28        	jr nz,3F
 377+ 9B88
 378+ 9B88              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 9B88
 380+ 9B88 3A C9 8B     	ld a,(CTRL_DESPLZ)
 381+ 9B8B 47           	ld b,a
 382+ 9B8C 3E F8        	ld a,$f8
 383+ 9B8E 80           	add b
 384+ 9B8F 32 C9 8B     	ld (CTRL_DESPLZ),a
 385+ 9B92 18 1C        	jr 3F
 386+ 9B94 21 C4 8B     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 9B97 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 9B98 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9B99 32 C9 8B     	ld (CTRL_DESPLZ),a
 390+ 9B9C 3A D4 8B     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9B9F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9BA1 20 0A        	jr nz,2F
 393+ 9BA3 2A C5 8B     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 9BA6 23           	inc hl
 395+ 9BA7 22 C5 8B     	ld (Posicion_actual),hl
 396+ 9BAA CD CC 94     	call Genera_coordenadas
 397+ 9BAD
 398+ 9BAD              ; Inicia el puntero de Sprite.
 399+ 9BAD
 400+ 9BAD CD C2 90     2 call Inicia_puntero_objeto_der
 401+ 9BB0 C9           3 ret
 402+ 9BB1
 403+ 9BB1              ; ******************************************************************************************************************************************************************************************
 404+ 9BB1              ;
 405+ 9BB1              ;	15/02/23
 406+ 9BB1              ;
 407+ 9BB1              ;	Mov_left.
 408+ 9BB1              ;
 409+ 9BB1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9BB1              ;
 411+ 9BB1              Mov_left
 412+ 9BB1
 413+ 9BB1 21 C2 8B     	ld hl,Ctrl_0
 414+ 9BB4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 9BB6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 9BB6              ; 																	; _ en el caso de que no lo haya.
 417+ 9BB6 3A C2 8B     	ld a,(Ctrl_0)
 418+ 9BB9 CB 77        	bit 6,a
 419+ 9BBB 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9BBD
 421+ 9BBD CD D3 9C     	call Stop_Amadeus_left
 422+ 9BC0 C8           	ret z
 423+ 9BC1 20 4A        	jr nz,8F
 424+ 9BC3
 425+ 9BC3 3A B6 8B     11 ld a,(Coordenada_X)
 426+ 9BC6 A7           	and a
 427+ 9BC7 20 44        	jr nz,8F
 428+ 9BC9
 429+ 9BC9 3A C9 8B     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9BCC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9BCD 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9BCF
 433+ 9BCF              ; ---------- ---------- ----------
 434+ 9BCF
 435+ 9BCF 3A DA 8B     	ld a,(Vel_left)
 436+ 9BD2 FE 02        	cp 2
 437+ 9BD4 28 0F        	jr z,1F
 438+ 9BD6 38 04        	jr c,6F
 439+ 9BD8 FE 04        	cp 4
 440+ 9BDA 28 12        	jr z,7F
 441+ 9BDC
 442+ 9BDC              ; ---------- ---------- ----------
 443+ 9BDC
 444+ 9BDC 3A C9 8B     6 ld a,(CTRL_DESPLZ)
 445+ 9BDF FE F8        	cp $f8
 446+ 9BE1 20 2A        	jr nz,8F
 447+ 9BE3 18 10        	jr 4F
 448+ 9BE5 3A C9 8B     1 ld a,(CTRL_DESPLZ)
 449+ 9BE8 FE F9        	cp $f9
 450+ 9BEA 20 21        	jr nz,8F
 451+ 9BEC 18 07        	jr 4F
 452+ 9BEE 3A C9 8B     7 ld a,(CTRL_DESPLZ)
 453+ 9BF1 FE FB        	cp $fb
 454+ 9BF3 20 18        	jr nz,8F
 455+ 9BF5
 456+ 9BF5              ; ---------- ---------- ----------
 457+ 9BF5
 458+ 9BF5              4
 459+ 9BF5 CD FB 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9BF8              ;	call Reinicio
 461+ 9BF8
 462+ 9BF8              ; ---------- ---------- ----------
 463+ 9BF8
 464+ 9BF8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9BFA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9BFB
 467+ 9BFB              ;	ld hl,(Indice_Sprite_izq)
 468+ 9BFB              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9BFB
 470+ 9BFB CD 14 9C     	call DESPLZ_IZQ
 471+ 9BFE C1           	pop bc
 472+ 9BFF 10 F9        	djnz 5B
 473+ 9C01 2A C5 8B     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9C04 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9C05 22 C5 8B     	ld (Posicion_actual),hl
 476+ 9C08 CD CC 94     	call Genera_coordenadas
 477+ 9C0B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 9C0D
 479+ 9C0D              ; ---------- ---------- ----------
 480+ 9C0D
 481+ 9C0D              ; Movemos, no hay recolocación.
 482+ 9C0D
 483+ 9C0D 2A C5 8B     8 ld hl,(Posicion_actual)
 484+ 9C10 CD 14 9C     	call DESPLZ_IZQ
 485+ 9C13 C9           2 ret
 486+ 9C14
 487+ 9C14              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9C14              ;
 489+ 9C14              ;	22/9/22
 490+ 9C14
 491+ 9C14              DESPLZ_IZQ
 492+ 9C14
 493+ 9C14 CD 23 9C     	call Desplaza_izquierda
 494+ 9C17 CD 6F 9C         call modifica_parametros_1er_DESPLZ
 495+ 9C1A CD 97 9C     	call Ciclo_completo_2
 496+ 9C1D 21 C2 8B     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9C20 CB BE        	res 7,(hl)
 498+ 9C22 C9           	ret
 499+ 9C23
 500+ 9C23              Desplaza_izquierda
 501+ 9C23
 502+ 9C23 3A DA 8B     	ld a,(Vel_left)
 503+ 9C26 47           	ld b,a
 504+ 9C27 2A D0 8B     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9C2A 23           1 inc hl
 506+ 9C2B 23           	inc hl
 507+ 9C2C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9C2E 22 D0 8B     	ld (Puntero_DESPLZ_izq),hl
 509+ 9C31 CD AD 90     	call Extrae_address
 510+ 9C34 22 C7 8B     	ld (Puntero_objeto),hl
 511+ 9C37
 512+ 9C37              ; Modifica (Puntero_DESPLZ_der).
 513+ 9C37
 514+ 9C37              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9C37              ; Cuántos movimientos hemos hecho ??
 516+ 9C37              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9C37
 518+ 9C37 2A CC 8B     7 ld hl,(Indice_Sprite_izq)
 519+ 9C3A EB           	ex de,hl
 520+ 9C3B A7           	and a
 521+ 9C3C ED 52        	sbc hl,de
 522+ 9C3E CB 3D        	srl l
 523+ 9C40 3E 08        6 ld a,8
 524+ 9C42 95           	sub l
 525+ 9C43 30 1E        	jr nc,3F
 526+ 9C45
 527+ 9C45              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9C45              ; B="0".
 529+ 9C45
 530+ 9C45 04           4 inc b
 531+ 9C46 3C           	inc a
 532+ 9C47 20 FC        	jr nz,4B
 533+ 9C49 78           	ld a,b
 534+ 9C4A 08           	ex af,af
 535+ 9C4B 2A CC 8B     	ld hl,(Indice_Sprite_izq)
 536+ 9C4E 23           5 inc hl
 537+ 9C4F 23           	inc hl
 538+ 9C50 10 FC        	djnz 5B
 539+ 9C52 22 D0 8B     	ld (Puntero_DESPLZ_izq),hl
 540+ 9C55 CD AD 90     	call Extrae_address
 541+ 9C58 22 C7 8B     	ld (Puntero_objeto),hl
 542+ 9C5B
 543+ 9C5B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9C5B              ; _(Posicion_actual).
 545+ 9C5B
 546+ 9C5B 21 C5 8B     	ld hl,Posicion_actual
 547+ 9C5E 35           	dec (hl)
 548+ 9C5F 08           	ex af,af
 549+ 9C60 6F           	ld l,a
 550+ 9C61 18 DD        	jr 6B
 551+ 9C63
 552+ 9C63              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9C63
 554+ 9C63 47           3 ld b,a
 555+ 9C64 2A CA 8B     	ld hl,(Indice_Sprite_der)
 556+ 9C67 23           2 inc hl
 557+ 9C68 23           	inc hl
 558+ 9C69 10 FC        	djnz 2B
 559+ 9C6B 22 CE 8B     	ld (Puntero_DESPLZ_der),hl
 560+ 9C6E C9           8 ret
 561+ 9C6F
 562+ 9C6F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9C6F              ;
 564+ 9C6F              ;	modifica_parametros_1er_DESPLZ
 565+ 9C6F              ;
 566+ 9C6F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9C6F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9C6F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9C6F
 570+ 9C6F 3A C9 8B     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9C72 A7           	and a
 572+ 9C73 20 1E        	jr nz,1F
 573+ 9C75 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9C76 32 C9 8B         ld (CTRL_DESPLZ),a
 575+ 9C79 21 C4 8B     	ld hl,Columns
 576+ 9C7C 34           	inc (hl)
 577+ 9C7D 3A D4 8B     	ld a,(Cuad_objeto)
 578+ 9C80 E6 01        	and 1
 579+ 9C82 20 0F        	jr nz,1F
 580+ 9C84 2A C5 8B     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9C87 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9C88 22 C5 8B     	ld (Posicion_actual),hl
 583+ 9C8B CD CC 94     	call Genera_coordenadas
 584+ 9C8E CD EA 9C     	call Dec_CTRL_DESPLZ
 585+ 9C91 18 03        	jr 2F
 586+ 9C93 CD EA 9C     1 call Dec_CTRL_DESPLZ
 587+ 9C96 C9           2 ret
 588+ 9C97
 589+ 9C97              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9C97
 591+ 9C97 3A C9 8B     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9C9A FE F7        	cp $f7
 593+ 9C9C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9C9E 30 2C        	jr nc,3F
 595+ 9CA0
 596+ 9CA0              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9CA0
 598+ 9CA0 06 00        	ld b,0
 599+ 9CA2 04           4 inc b
 600+ 9CA3 3C           	inc a
 601+ 9CA4 FE F7        	cp $f7
 602+ 9CA6 20 FA        	jr nz,4B
 603+ 9CA8 3E FF        	ld a,$ff
 604+ 9CAA 90           	sub b
 605+ 9CAB 32 C9 8B     	ld (CTRL_DESPLZ),a
 606+ 9CAE 18 1C        	jr 3F
 607+ 9CB0
 608+ 9CB0              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9CB0
 610+ 9CB0 21 C4 8B     1 ld hl,Columns
 611+ 9CB3 35           	dec (hl)
 612+ 9CB4 AF           	xor a
 613+ 9CB5 32 C9 8B     	ld (CTRL_DESPLZ),a
 614+ 9CB8 3A D4 8B     	ld a,(Cuad_objeto)
 615+ 9CBB E6 01        	and 1
 616+ 9CBD 28 0A        	jr z,2F
 617+ 9CBF 2A C5 8B     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9CC2 2B           	dec hl
 619+ 9CC3 22 C5 8B     	ld (Posicion_actual),hl
 620+ 9CC6 CD CC 94     	call Genera_coordenadas
 621+ 9CC9
 622+ 9CC9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9CC9
 624+ 9CC9 CD D5 90     2 call Inicia_puntero_objeto_izq
 625+ 9CCC C9           3 ret
 626+ 9CCD
 627+ 9CCD              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9CCD              ;
 629+ 9CCD              ;	19/10/22
 630+ 9CCD              ;
 631+ 9CCD              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9CCD              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9CCD
 634+ 9CCD 3A B6 8B     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9CD0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9CD2 C9           	ret
 637+ 9CD3
 638+ 9CD3              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9CD3              ;
 640+ 9CD3              ;	19/10/22
 641+ 9CD3              ;
 642+ 9CD3              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9CD3              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9CD3
 645+ 9CD3 3A B6 8B     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9CD6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9CD8 C9           	ret
 648+ 9CD9
 649+ 9CD9              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9CD9              ;
 651+ 9CD9              ;	24/7/22
 652+ 9CD9              ;
 653+ 9CD9              ;	Inc_CTRL_DESPLZ
 654+ 9CD9              ;
 655+ 9CD9              ;
 656+ 9CD9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9CD9
 658+ 9CD9 21 C9 8B     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9CDC 3A DB 8B     	ld a,(Vel_right)
 660+ 9CDF A7           	and a
 661+ 9CE0 28 06        	jr z,1F
 662+ 9CE2 47           	ld b,a
 663+ 9CE3 34           3 inc (hl)
 664+ 9CE4 10 FD        	djnz 3B
 665+ 9CE6 18 01        	jr 2F
 666+ 9CE8 34           1 inc (hl)
 667+ 9CE9 C9           2 ret
 668+ 9CEA
 669+ 9CEA              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9CEA              ;
 671+ 9CEA              ;	5/2/23
 672+ 9CEA              ;
 673+ 9CEA              ;	Dec_CTRL_DESPLZ
 674+ 9CEA              ;
 675+ 9CEA              ;
 676+ 9CEA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9CEA
 678+ 9CEA 21 C9 8B     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9CED 3A DA 8B     	ld a,(Vel_left)
 680+ 9CF0 A7           	and a
 681+ 9CF1 28 06        	jr z,1F
 682+ 9CF3 47           	ld b,a
 683+ 9CF4 35           3 dec (hl)
 684+ 9CF5 10 FD        	djnz 3B
 685+ 9CF7 18 01        	jr 2F
 686+ 9CF9 35           1 dec (hl)
 687+ 9CFA C9           2 ret
 688+ 9CFB
 689+ 9CFB              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9CFB
 691+ 9CFB 2A C5 8B     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9CFE 01 1F 00     	ld bc,31
 693+ 9D01 A7           	and a
 694+ 9D02 ED 4A        	adc hl,bc
 695+ 9D04 22 C5 8B     	ld (Posicion_actual),hl
 696+ 9D07 21 C2 8B     	ld hl,Ctrl_0														; $xxx1
 697+ 9D0A CB C6        	set 0,(hl)
 698+ 9D0C C9           	ret
 699+ 9D0D
 700+ 9D0D              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9D0D
 702+ 9D0D 2A C5 8B     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9D10 01 1F 00     	ld bc,31
 704+ 9D13 A7           	and a
 705+ 9D14 ED 42        	sbc hl,bc
 706+ 9D16 22 C5 8B     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9D19 21 C2 8B     	ld hl,Ctrl_0
 708+ 9D1C CB CE        	set 1,(hl)
 709+ 9D1E C9           	ret
 710+ 9D1F
 711+ 9D1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9D1F
 713+ 9D1F 24           Reaparece_abajo inc h
 714+ 9D20 01 E0 17     	ld bc,$17e0
 715+ 9D23 A7           	and a
 716+ 9D24 ED 4A        	adc hl,bc
 717+ 9D26 22 C5 8B     	ld (Posicion_actual),hl
 718+ 9D29 21 C2 8B     	ld hl,Ctrl_0
 719+ 9D2C CB D6        	set 2,(hl)
 720+ 9D2E C9           	ret
 721+ 9D2F
 722+ 9D2F              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9D2F
 724+ 9D2F 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9D32 A7           	and a
 726+ 9D33 ED 42        	sbc hl,bc
 727+ 9D35 22 C5 8B     	ld (Posicion_actual),hl
 728+ 9D38 21 C2 8B     	ld hl,Ctrl_0
 729+ 9D3B CB DE        	set 3,(hl)
 730+ 9D3D C9           	ret
 731+ 9D3E
 732+ 9D3E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9D3E              ;
 734+ 9D3E              ;	15/07/23
 735+ 9D3E
 736+ 9D3E              Reinicio
 737+ 9D3E
 738+ 9D3E              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9D3E
 740+ 9D3E AF           	xor a
 741+ 9D3F 21 EA 8B     	ld hl,Puntero_indice_mov_bucle
 742+ 9D42 CD 60 9D     	call Limpia_contenido_hl
 743+ 9D45
 744+ 9D45 21 C5 8B     	ld hl,Posicion_actual
 745+ 9D48 CD 60 9D     	call Limpia_contenido_hl
 746+ 9D4B
 747+ 9D4B CD AE 92     	call Inicializa_Puntero_indice_mov
 748+ 9D4E CD 5F 9E     	call Inicia_Puntero_mov
 749+ 9D51
 750+ 9D51 21 EC 8B     	ld hl,Incrementa_puntero
 751+ 9D54 06 05        	ld b,5
 752+ 9D56 77           1 ld (hl),a
 753+ 9D57 23           	inc hl
 754+ 9D58 10 FC        	djnz 1B
 755+ 9D5A
 756+ 9D5A 21 C1 8B     	ld hl,Ctrl_2
 757+ 9D5D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9D5F
 759+ 9D5F C9           	ret
 760+ 9D60
 761+ 9D60 77           Limpia_contenido_hl	ld (hl),a
 762+ 9D61 23           	inc hl
 763+ 9D62 77           	ld (hl),a
 764+ 9D63 C9           	ret
 765+ 9D64
 766+ 9D64              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9D64              ;
 768+ 9D64              ;	18/6/24
 769+ 9D64              ;
 770+ 9D64
 771+ 9D64              Amadeus_a_izquierda
 772+ 9D64
 773+ 9D64              ;	Actualiza contador de movimientos.
 774+ 9D64
 775+ 9D64 21 76 89     	ld hl,Comm_Amadeus
 776+ 9D67 35           	dec (hl)
 777+ 9D68 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 9D6A
 779+ 9D6A 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 9D6D 2B           	dec hl
 781+ 9D6E 2B           	dec hl
 782+ 9D6F 2B           	dec hl
 783+ 9D70 2B           	dec hl
 784+ 9D71 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9D74
 786+ 9D74 21 26 8C     	ld hl,Ctrl_3
 787+ 9D77 CB EE        	set 5,(hl)
 788+ 9D79
 789+ 9D79 C9           	ret
 790+ 9D7A
 791+ 9D7A 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 9D7B C9           	ret
 793+ 9D7C
 794+ 9D7C
 795+ 9D7C              Amadeus_a_derecha
 796+ 9D7C
 797+ 9D7C              ;	Actualiza contador de movimientos.
 798+ 9D7C
 799+ 9D7C 21 76 89     	ld hl,Comm_Amadeus
 800+ 9D7F 34           	inc (hl)
 801+ 9D80 3E 7A        	ld a,$7a
 802+ 9D82 BE           	cp (hl)
 803+ 9D83 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 9D85
 805+ 9D85 2A 74 89     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 9D88 23           	inc hl
 807+ 9D89 23           	inc hl
 808+ 9D8A 23           	inc hl
 809+ 9D8B 23           	inc hl
 810+ 9D8C 22 74 89     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 9D8F
 812+ 9D8F 21 26 8C     	ld hl,Ctrl_3
 813+ 9D92 CB EE        	set 5,(hl)
 814+ 9D94 C9           	ret
 815+ 9D95
 816+ 9D95 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 9D96 C9           	ret
# file closed: Direcciones.asm
2177  9D97              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9D97              ; ----- ----- ----- ----- -----
   2+ 9D97              ;
   3+ 9D97              ;   28/12/23
   4+ 9D97
   5+ 9D97              Movimiento
   6+ 9D97
   7+ 9D97              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9D97
   9+ 9D97 3A C1 8B         ld a,(Ctrl_2)
  10+ 9D9A CB 57            bit 2,a
  11+ 9D9C 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9D9E
  13+ 9D9E 2A E8 8B         ld hl,(Puntero_mov)
  14+ 9DA1 7E               ld a,(hl)
  15+ 9DA2
  16+ 9DA2              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9DA2
  18+ 9DA2              Inicia_desplazamiento.
  19+ 9DA2
  20+ 9DA2              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9DA2
  22+ 9DA2 CD 95 9E         call Ajusta_velocidad_desplazamiento
  23+ 9DA5
  24+ 9DA5              ; Iniciamos (Repetimos_mov).
  25+ 9DA5
  26+ 9DA5 7E               ld a,(hl)
  27+ 9DA6 E6 0F            and $0f
  28+ 9DA8 32 EE 8B         ld (Repetimos_desplazamiento),a
  29+ 9DAB 32 EF 8B         ld (Repetimos_desplazamiento_backup),a
  30+ 9DAE
  31+ 9DAE              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9DAE
  33+ 9DAE 23               inc hl
  34+ 9DAF 7E               ld a,(hl)
  35+ 9DB0 32 F1 8B         ld (Cola_de_desplazamiento),a
  36+ 9DB3 2B               dec hl
  37+ 9DB4
  38+ 9DB4 21 C1 8B         ld hl,Ctrl_2
  39+ 9DB7 CB D6            set 2,(hl)
  40+ 9DB9
  41+ 9DB9              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9DB9              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9DB9
  44+ 9DB9              Desplazamiento_iniciado
  45+ 9DB9
  46+ 9DB9 CD 69 9E         call Aplica_desplazamiento
  47+ 9DBC
  48+ 9DBC              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9DBC
  50+ 9DBC 3A 26 8C         ld a,(Ctrl_3)
  51+ 9DBF CB 4F            bit 1,a
  52+ 9DC1 C0               ret nz
  53+ 9DC2
  54+ 9DC2 21 EE 8B     3 ld hl,Repetimos_desplazamiento
  55+ 9DC5 35               dec (hl)
  56+ 9DC6 C0               ret nz
  57+ 9DC7
  58+ 9DC7              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9DC7              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9DC7              ; Analiza (Cola_de_desplazamiento).
  61+ 9DC7
  62+ 9DC7 3A F1 8B     Cola ld a,(Cola_de_desplazamiento)
  63+ 9DCA A7               and a
  64+ 9DCB CC BE 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9DCE 28 30            jr z,Reinicia_el_movimiento
  66+ 9DD0
  67+ 9DD0 FE FF            cp $ff
  68+ 9DD2 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9DD4
  70+ 9DD4 FE FE            cp $fe
  71+ 9DD6 CC 43 9E         call z,Fijamos_bucle
  72+ 9DD9 28 25            jr z,Reinicia_el_movimiento
  73+ 9DDB
  74+ 9DDB FE FD            cp $fd
  75+ 9DDD 20 11            jr nz,1F
  76+ 9DDF
  77+ 9DDF              ; ---
  78+ 9DDF              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9DDF
  80+ 9DDF 3A C1 8B         ld a,(Ctrl_2)
  81+ 9DE2 CB 5F            bit 3,a
  82+ 9DE4 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9DE6
  84+ 9DE6              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9DE6
  86+ 9DE6 21 C1 8B         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9DE9 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9DEB
  89+ 9DEB CD 54 9E         call Inicia_Repetimos_movimiento
  90+ 9DEE 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9DF0              ; ---
  92+ 9DF0
  93+ 9DF0 FE 01        1 cp 1
  94+ 9DF2 CA 2D 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9DF5
  96+ 9DF5 3D               dec a
  97+ 9DF6 32 F1 8B         ld (Cola_de_desplazamiento),a
  98+ 9DF9
  99+ 9DF9 3A EF 8B         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9DFC 32 EE 8B         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9DFF              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9DFF C9               ret
 103+ 9E00
 104+ 9E00              Reinicia_el_movimiento
 105+ 9E00
 106+ 9E00 3A C1 8B         ld a,(Ctrl_2)
 107+ 9E03 CB 5F            bit 3,a
 108+ 9E05 28 1B            jr z,2F
 109+ 9E07
 110+ 9E07              ; (Cola_de_desplazamiento)="254".
 111+ 9E07
 112+ 9E07 21 F0 8B         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9E0A 35               dec (hl)
 114+ 9E0B 20 15            jr nz,2F
 115+ 9E0D
 116+ 9E0D              ; Fin de las repeticiones del último movimiento.
 117+ 9E0D
 118+ 9E0D 21 C1 8B         ld hl,Ctrl_2
 119+ 9E10 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9E12
 121+ 9E12 2A E8 8B         ld hl,(Puntero_mov)
 122+ 9E15 23               inc hl
 123+ 9E16 23               inc hl
 124+ 9E17 23               inc hl
 125+ 9E18 22 E8 8B         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9E1B              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9E1B 7E               ld a,(hl)
 128+ 9E1C 32 F1 8B         ld (Cola_de_desplazamiento),a
 129+ 9E1F
 130+ 9E1F C3 C7 9D         jp Cola
 131+ 9E22
 132+ 9E22 CD 5F 9E     2 call Inicia_Puntero_mov
 133+ 9E25
 134+ 9E25 21 C1 8B         ld hl,Ctrl_2
 135+ 9E28 CB 96            res 2,(hl)
 136+ 9E2A
 137+ 9E2A C3 97 9D         jp Movimiento
 138+ 9E2D
 139+ 9E2D              Siguiente_desplazamiento
 140+ 9E2D
 141+ 9E2D              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9E2D              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9E2D
 144+ 9E2D 21 C1 8B         ld hl,Ctrl_2
 145+ 9E30 CB 96            res 2,(hl)
 146+ 9E32
 147+ 9E32 2A E8 8B         ld hl,(Puntero_mov)
 148+ 9E35 23               inc hl
 149+ 9E36 23               inc hl
 150+ 9E37 22 E8 8B         ld (Puntero_mov),hl
 151+ 9E3A
 152+ 9E3A 7E               ld a,(hl)
 153+ 9E3B A7               and a
 154+ 9E3C CC BE 9E         call z,Incrementa_Puntero_indice_mov
 155+ 9E3F CA 00 9E         jp z,Reinicia_el_movimiento
 156+ 9E42
 157+ 9E42 C9               ret
 158+ 9E43
 159+ 9E43              ; Subrutinas -----------------------------------------
 160+ 9E43              ; ---------- --------- --------- ---------- ----------
 161+ 9E43              ;
 162+ 9E43              ;   24/07/23
 163+ 9E43              ;
 164+ 9E43              ;   Fijamos_bucle
 165+ 9E43              ;
 166+ 9E43              ;
 167+ 9E43
 168+ 9E43              Fijamos_bucle
 169+ 9E43
 170+ 9E43 3A EC 8B         ld a,(Incrementa_puntero)
 171+ 9E46 3C               inc a
 172+ 9E47 32 ED 8B         ld (Incrementa_puntero_backup),a
 173+ 9E4A
 174+ 9E4A CD BE 9E         call Incrementa_Puntero_indice_mov
 175+ 9E4D 2A E6 8B         ld hl,(Puntero_indice_mov)
 176+ 9E50 22 EA 8B         ld (Puntero_indice_mov_bucle),hl
 177+ 9E53 C9               ret
 178+ 9E54
 179+ 9E54              ; ---------- --------- --------- ---------- ----------
 180+ 9E54              ;
 181+ 9E54              ;   07/7/23
 182+ 9E54              ;
 183+ 9E54              ;   Inicia_Repetimos_movimiento
 184+ 9E54              ;
 185+ 9E54              ;
 186+ 9E54
 187+ 9E54              Inicia_Repetimos_movimiento
 188+ 9E54
 189+ 9E54              ; Iniciamos (Repetimos_movimiento).
 190+ 9E54
 191+ 9E54 DD 2A E8 8B      ld ix,(Puntero_mov)
 192+ 9E58 DD 7E 02         ld a,(ix+2)
 193+ 9E5B 32 F0 8B         ld (Repetimos_movimiento),a
 194+ 9E5E
 195+ 9E5E C9               ret
 196+ 9E5F
 197+ 9E5F              ; ---------- --------- --------- ---------- ----------
 198+ 9E5F              ;
 199+ 9E5F              ;   26/6/23
 200+ 9E5F              ;
 201+ 9E5F              ;   Inicia_Puntero_mov
 202+ 9E5F              ;
 203+ 9E5F              ;
 204+ 9E5F
 205+ 9E5F 2A E6 8B     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9E62 CD AD 90         call Extrae_address
 207+ 9E65 22 E8 8B         ld (Puntero_mov),hl
 208+ 9E68 C9               ret
 209+ 9E69
 210+ 9E69              ; ---------- --------- --------- ---------- ----------
 211+ 9E69              ;
 212+ 9E69              ;   27/06/23
 213+ 9E69              ;
 214+ 9E69              ;   Aplica_movimiento.
 215+ 9E69
 216+ 9E69              Aplica_desplazamiento
 217+ 9E69
 218+ 9E69              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9E69
 220+ 9E69 2A E8 8B         ld hl, (Puntero_mov)
 221+ 9E6C
 222+ 9E6C 7E               ld a,(hl)
 223+ 9E6D E6 F0            and $f0
 224+ 9E6F C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9E70
 226+ 9E70 CB 7E            bit 7,(hl)
 227+ 9E72 28 03            jr z,1F
 228+ 9E74 CD 4B 9A         call Mov_up
 229+ 9E77 2A E8 8B     1 ld hl, (Puntero_mov)
 230+ 9E7A CB 76            bit 6,(hl)
 231+ 9E7C 28 03            jr z,2F
 232+ 9E7E CD 12 9A         call Mov_down
 233+ 9E81
 234+ 9E81              ; Se ha aplicado reinicio ???
 235+ 9E81              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9E81
 237+ 9E81              ;    ld a,(Ctrl_3)
 238+ 9E81              ;    bit 1,a
 239+ 9E81              ;    ret nz
 240+ 9E81
 241+ 9E81 2A E8 8B     2 ld hl, (Puntero_mov)
 242+ 9E84 CB 6E            bit 5,(hl)
 243+ 9E86 28 03            jr z,3F
 244+ 9E88 CD B1 9B         call Mov_left
 245+ 9E8B 2A E8 8B     3 ld hl, (Puntero_mov)
 246+ 9E8E CB 66            bit 4,(hl)
 247+ 9E90 C8               ret z
 248+ 9E91 CD 8E 9A         call Mov_right
 249+ 9E94 C9               ret
 250+ 9E95
 251+ 9E95              ; ---------- --------- --------- ---------- ----------
 252+ 9E95              ;
 253+ 9E95              ;   26/06/23
 254+ 9E95              ;
 255+ 9E95              ;   Ajusta_velocidad_desplazamiento.
 256+ 9E95
 257+ 9E95              Ajusta_velocidad_desplazamiento
 258+ 9E95
 259+ 9E95              ; 1er byte de la cadena de movimiento.
 260+ 9E95              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9E95
 262+ 9E95 CD B3 9E         call Extrae_nibble_alto
 263+ 9E98
 264+ 9E98 32 DC 8B         ld (Vel_up),a
 265+ 9E9B 79               ld a,c
 266+ 9E9C E6 0F            and $0f
 267+ 9E9E 32 DD 8B         ld (Vel_down),a
 268+ 9EA1
 269+ 9EA1              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9EA1              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9EA1
 272+ 9EA1 23               inc hl
 273+ 9EA2 CD B3 9E         call Extrae_nibble_alto
 274+ 9EA5
 275+ 9EA5 32 DA 8B         ld (Vel_left),a
 276+ 9EA8 79               ld a,c
 277+ 9EA9 E6 0F            and $0f
 278+ 9EAB 32 DB 8B         ld (Vel_right),a
 279+ 9EAE
 280+ 9EAE              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9EAE
 282+ 9EAE 23               inc hl
 283+ 9EAF 22 E8 8B         ld (Puntero_mov),hl
 284+ 9EB2 C9               ret
 285+ 9EB3
 286+ 9EB3 06 04        Extrae_nibble_alto ld b,4
 287+ 9EB5 7E               ld a,(hl)
 288+ 9EB6 4F               ld c,a
 289+ 9EB7 E6 F0            and $f0
 290+ 9EB9 CB 3F        1 srl a
 291+ 9EBB 10 FC            djnz 1B
 292+ 9EBD C9               ret
 293+ 9EBE
 294+ 9EBE              ; ---------- --------- --------- ---------- ----------
 295+ 9EBE              ;
 296+ 9EBE              ;   5/7/23
 297+ 9EBE              ;
 298+ 9EBE              ;   Incrementa_Puntero_indice_mov
 299+ 9EBE
 300+ 9EBE              Incrementa_Puntero_indice_mov
 301+ 9EBE
 302+ 9EBE 21 EC 8B         ld hl,Incrementa_puntero
 303+ 9EC1 34               inc (hl)
 304+ 9EC2
 305+ 9EC2 2A E6 8B         ld hl,(Puntero_indice_mov)
 306+ 9EC5 01 02 00         ld bc,2
 307+ 9EC8 A7               and a
 308+ 9EC9 09               add hl,bc
 309+ 9ECA 22 E6 8B         ld (Puntero_indice_mov),hl
 310+ 9ECD
 311+ 9ECD 7E               ld a,(hl)
 312+ 9ECE A7               and a
 313+ 9ECF
 314+ 9ECF              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9ECF
 316+ 9ECF              ;    jr z,$
 317+ 9ECF
 318+ 9ECF              ;! Reinicia el Patrón de movimiento.
 319+ 9ECF
 320+ 9ECF CC D4 9E         call z,Inicializa_Puntero_indice_mov_2
 321+ 9ED2
 322+ 9ED2 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9ED3
 324+ 9ED3 C9               ret
 325+ 9ED4
 326+ 9ED4              ; ---------- --------- --------- ---------- ----------
 327+ 9ED4              ;
 328+ 9ED4              ;   15/01/24
 329+ 9ED4              ;
 330+ 9ED4              ;   Inicializa_Puntero_indice_mov
 331+ 9ED4
 332+ 9ED4              Inicializa_Puntero_indice_mov_2
 333+ 9ED4
 334+ 9ED4              ; Existe etiqueta de bucle principal???
 335+ 9ED4
 336+ 9ED4 2A EA 8B         ld hl,(Puntero_indice_mov_bucle)
 337+ 9ED7 24               inc h
 338+ 9ED8 25               dec h
 339+ 9ED9 28 05            jr z,2F
 340+ 9EDB
 341+ 9EDB 22 E6 8B         ld (Puntero_indice_mov),hl
 342+ 9EDE 18 14            jr 3F
 343+ 9EE0
 344+ 9EE0              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9EE0
 346+ 9EE0 3A EC 8B     2 ld a,(Incrementa_puntero)
 347+ 9EE3 47               ld b,a
 348+ 9EE4
 349+ 9EE4 2A E6 8B         ld hl,(Puntero_indice_mov)
 350+ 9EE7 2B           1 dec hl
 351+ 9EE8 2B               dec hl
 352+ 9EE9 10 FC            djnz 1B
 353+ 9EEB 22 E6 8B         ld (Puntero_indice_mov),hl
 354+ 9EEE
 355+ 9EEE AF               xor a
 356+ 9EEF 32 EC 8B         ld (Incrementa_puntero),a
 357+ 9EF2 18 06            jr 4F
 358+ 9EF4
 359+ 9EF4 3A ED 8B     3 ld a,(Incrementa_puntero_backup)
 360+ 9EF7 32 EC 8B         ld (Incrementa_puntero),a
 361+ 9EFA C9           4 ret
 362+ 9EFB
 363+ 9EFB              ; ----------------------------------------------------------------------
 364+ 9EFB              ;
 365+ 9EFB              ;   30/01/24
 366+ 9EFB              ;
 367+ 9EFB              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9EFB
 369+ 9EFB 3A B5 8B     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9EFE CD 49 94         call Calcula_salto_en_BC
 371+ 9F01 21 DE 8B         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9F04 A7               and a
 373+ 9F05 ED 4A            adc hl,bc
 374+ 9F07 C9               ret
 375+ 9F08
 376+ 9F08              ; ----------------------------------------------------------------------
 377+ 9F08              ;
 378+ 9F08              ;   30/01/24
 379+ 9F08              ;
 380+ 9F08              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9F08              ;
 382+ 9F08              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9F08
 384+ 9F08 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9F09 23               inc hl
 386+ 9F0A 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9F0B 69               ld l,c
 388+ 9F0C 60               ld h,b
 389+ 9F0D 22 BE 8B         ld (Contador_de_mov_masticados),hl
 390+ 9F10 C9               ret
 391+ 9F11
# file closed: Movimiento.asm
2178  9F11              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9F11              Motor_de_disparos_entidades
   2+ 9F11
   3+ 9F11 3A 16 8C         ld a,(Numero_de_disparos_de_entidades)
   4+ 9F14 FE 07            cp 7
   5+ 9F16 C8               ret z                                                                ; Salimos si todas las cajas están vacías.
   6+ 9F17
   7+ 9F17 06 07            ld b,7                                                               ; Contador de disparos, (cajas de disparos).
   8+ 9F19 21 23 89         ld hl,Indice_de_disparos_entidades
   9+ 9F1C
  10+ 9F1C CD AD 90     1 call Extrae_address
  11+ 9F1F 13               inc de
  12+ 9F20 13               inc de
  13+ 9F21 ED 53 29 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
  14+ 9F25
  15+ 9F25 23               inc hl
  16+ 9F26
  17+ 9F26 34               inc (hl)                                                             ; Dispone de Puntero_objeto ???
  18+ 9F27 35               dec (hl)
  19+ 9F28 28 14            jr z,3F
  20+ 9F2A
  21+ 9F2A 23               inc hl
  22+ 9F2B
  23+ 9F2B CD AD 90         call Extrae_address
  24+ 9F2E              ;   (Puntero_de_impresion) del disparo en HL.
  25+ 9F2E
  26+ 9F2E
  27+ 9F2E              ;! Velocidad del disparo de entidades.
  28+ 9F2E
  29+ 9F2E              ;    call NextScan
  30+ 9F2E              ;    call NextScan
  31+ 9F2E              ;    call NextScan
  32+ 9F2E              ;    call NextScan
  33+ 9F2E CD CC 99         call NextScan
  34+ 9F31
  35+ 9F31              ; Después de mover el disparo comprobamos si ha salido por la parte baja de la pantalla.
  36+ 9F31
  37+ 9F31 CD 42 9F         call Fin_de_disparo_de_entidad
  38+ 9F34
  39+ 9F34 EB               ex de,hl
  40+ 9F35
  41+ 9F35 73               ld (hl),e
  42+ 9F36 23               inc hl
  43+ 9F37 72               ld (hl),d                                                            ; Nuevo (Puntero_de_impresion) en su correspondiente caja.
  44+ 9F38
  45+ 9F38 2A 29 8C         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
  46+ 9F3B 18 02            jr 2F
  47+ 9F3D
  48+ 9F3D C9               ret
  49+ 9F3E
  50+ 9F3E EB           3 ex de,hl
  51+ 9F3F 10 DB        2 djnz 1B
  52+ 9F41
  53+ 9F41 C9               ret
  54+ 9F42
  55+ 9F42              ; ------------- ------------- ------------
  56+ 9F42              ;
  57+ 9F42              ;   25/9/24
  58+ 9F42
  59+ 9F42              Fin_de_disparo_de_entidad
  60+ 9F42
  61+ 9F42 7C               ld a,h
  62+ 9F43 FE 54            cp $54
  63+ 9F45 D8               ret c
  64+ 9F46
  65+ 9F46 D5               push de                                                              ; DE se encuentra en el .db (Puntero_de_impresion) de la caja del disparo que estamos moviendo.
  66+ 9F47
  67+ 9F47 5D               ld e,l
  68+ 9F48 54               ld d,h
  69+ 9F49
  70+ 9F49 21 E0 57         ld hl,$57e0
  71+ 9F4C ED 52            sbc hl,de
  72+ 9F4E
  73+ 9F4E 38 04            jr c,Elimina_disparo_entidad
  74+ 9F50
  75+ 9F50 6B               ld l,e
  76+ 9F51 62               ld h,d
  77+ 9F52
  78+ 9F52 D1               pop de
  79+ 9F53
  80+ 9F53 C9               ret
  81+ 9F54
  82+ 9F54              ; ------------ ----------- ------------
  83+ 9F54              ;
  84+ 9F54              ;   25/9/24
  85+ 9F54
  86+ 9F54              Elimina_disparo_entidad
  87+ 9F54
  88+ 9F54 21 16 8C         ld hl,Numero_de_disparos_de_entidades
  89+ 9F57 34               inc (hl)                                                            ; Incrementamos el nº de disparos de entidades.
  90+ 9F58
  91+ 9F58 E1               pop hl
  92+ 9F59 E5               push hl
  93+ 9F5A
  94+ 9F5A 2B               dec hl
  95+ 9F5B 2B               dec hl                                                              ; Sitúa en el 1er .db de la caja.
  96+ 9F5C
  97+ 9F5C 16 06            ld d,6                                                              ; Contador
  98+ 9F5E AF               xor a                                                               ; Borrador
  99+ 9F5F
 100+ 9F5F 77           1 ld (hl),a
 101+ 9F60 15               dec d
 102+ 9F61 23               inc hl
 103+ 9F62 20 FB            jr nz,1B
 104+ 9F64
 105+ 9F64 D1               pop de
 106+ 9F65
 107+ 9F65 21 28 8C         ld hl,Ctrl_5                                                        ; Indica que desaparece un disparo de entidad.
 108+ 9F68 CB D6            set 2,(hl)
 109+ 9F6A
 110+ 9F6A 21 00 00         ld hl,0
 111+ 9F6D
 112+ 9F6D C9               ret
 113+ 9F6E              ; --------------------------------------------------------------------------------------
 114+ 9F6E              ;
 115+ 9F6E              ;   19/09/24
 116+ 9F6E              ;
 117+ 9F6E
 118+ 9F6E              Genera_datos_de_impresion_disparos_Entidades
 119+ 9F6E
 120+ 9F6E              ;*  Exclusiones.
 121+ 9F6E
 122+ 9F6E 3A 16 8C         ld a,(Numero_de_disparos_de_entidades)
 123+ 9F71 47               ld b,a
 124+ 9F72 3E 07            ld a,7
 125+ 9F74 90               sub b
 126+ 9F75 C8               ret z
 127+ 9F76
 128+ 9F76 3C               inc a
 129+ 9F77 08               ex af,af
 130+ 9F78
 131+ 9F78              ; ---------------
 132+ 9F78
 133+ 9F78              ;   En 1er lugar nos situamos en la 1ª caja de disparos de entidades.
 134+ 9F78
 135+ 9F78              ;	ld a,(Ctrl_5)
 136+ 9F78              ;	bit 2,a
 137+ 9F78              ;	di
 138+ 9F78              ;	jr nz,$
 139+ 9F78              ;	ei
 140+ 9F78
 141+ 9F78 CD A6 90         call Inicia_Puntero_Disparo_Entidades
 142+ 9F7B
 143+ 9F7B CD AD 90     1 call Extrae_address
 144+ 9F7E
 145+ 9F7E 23               inc hl
 146+ 9F7F 7E               ld a,(hl)
 147+ 9F80 A7               and a
 148+ 9F81
 149+ 9F81 28 1D            jr z,Situa_en_siguiente_caja                              ;? Avanza a la siguiente caja si esta está vacía.
 150+ 9F83
 151+ 9F83 2B               dec hl
 152+ 9F84
 153+ 9F84 ED 73 02 8C      ld (Stack),sp
 154+ 9F88 F9               ld sp,hl                                                  ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 155+ 9F89
 156+ 9F89              Genera_scanlines_de_los_disparos_de_entidades.
 157+ 9F89
 158+ 9F89 C1               pop bc
 159+ 9F8A E1               pop hl                                                    ;? Puntero_objeto del disparo en BC.
 160+ 9F8B              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 161+ 9F8B ED 7B 12 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 162+ 9F8F
 163+ 9F8F F1               pop af
 164+ 9F90 F1               pop af
 165+ 9F91 F1               pop af
 166+ 9F92
 167+ 9F92 ED 73 12 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 168+ 9F96
 169+ 9F96 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 170+ 9F97 CD CC 99         call NextScan
 171+ 9F9A E5               push hl                                                   ;? Sube 1er scanline al álbum.
 172+ 9F9B C5               push bc                                                   ;? Sube Puntero_objeto del disparo al álbum.
 173+ 9F9C
 174+ 9F9C ED 7B 02 8C      ld sp,(Stack)
 175+ 9FA0
 176+ 9FA0              Situa_en_siguiente_caja
 177+ 9FA0
 178+ 9FA0 08               ex af,af                                                  ;? Actualiza contador de cajas y RET si "Z".
 179+ 9FA1 3D               dec a
 180+ 9FA2 C8               ret z
 181+ 9FA3 08               ex af,af
 182+ 9FA4
 183+ 9FA4 13               inc de
 184+ 9FA5 13               inc de
 185+ 9FA6
 186+ 9FA6 EB               ex de,hl
 187+ 9FA7
 188+ 9FA7 18 D2            jr 1B
 189+ 9FA9
 190+ 9FA9              ; --------------------------------------------------------------------------------------
 191+ 9FA9              ;
 192+ 9FA9              ;   18/09/24
 193+ 9FA9              ;
 194+ 9FA9
 195+ 9FA9              Genera_disparo_de_entidad_maldosa
 196+ 9FA9
 197+ 9FA9              ;   Estructura de un disparo de entidades.
 198+ 9FA9
 199+ 9FA9              ;   Disparo_1 defw 0								; Puntero objeto.
 200+ 9FA9              ; 	defw 0											; Puntero de impresión.
 201+ 9FA9              ;	defw 0											; Control.
 202+ 9FA9
 203+ 9FA9              ;   El byte bajo de Control indica la velocidad a la que fué lanzado el disparo, (Velocidad)_
 204+ 9FA9              ;   _de la entidad en el momento de disparar.
 205+ 9FA9
 206+ 9FA9              ;   El byte alto muestra la siguiente información:
 207+ 9FA9              ;
 208+ 9FA9              ;   Nibble bajo    ..... Inicialmente contiene "7d". Utilizaremos estos bits para desplazar X nº de veces el disparo hacia abajo_
 209+ 9FA9              ;                        _antes de desplazarse a derecha/izquierda.
 210+ 9FA9              ;
 211+ 9FA9              ;   Nibble alto    ..... Bits (2) y (3) ..... Indican si el disparo va hacia la derecha o hacia la izquierda.
 212+ 9FA9              ;
 213+ 9FA9              ;                        10xx ..... Izquierda.
 214+ 9FA9              ;                        01xx ..... Derecha.
 215+ 9FA9              ;                        00xx ..... Recto.
 216+ 9FA9
 217+ 9FA9              ;*  Exclusiones.
 218+ 9FA9
 219+ 9FA9              ;   La entidad no podrá disparar mientras se encuentre en las filas: 0,1,14,15,16.
 220+ 9FA9              ;   La entidad no podrá disparar si hay 7 disparos en pantalla.
 221+ 9FA9
 222+ 9FA9 3A 16 8C         ld a,(Numero_de_disparos_de_entidades)
 223+ 9FAC A7               and a
 224+ 9FAD C8               ret z
 225+ 9FAE
 226+ 9FAE 3A B7 8B         ld a,(Coordenada_y)
 227+ 9FB1 A7               and a
 228+ 9FB2 C8               ret z
 229+ 9FB3
 230+ 9FB3 3D               dec a
 231+ 9FB4 C8               ret z
 232+ 9FB5
 233+ 9FB5 FE 0E            cp 14
 234+ 9FB7 D0               ret nc
 235+ 9FB8
 236+ 9FB8              ;   En este punto el registro B siempre está a "0" y HL apunta al `nuevo´ ( Puntero de impresión) de la entidad.
 237+ 9FB8              ;   (Puntero_objeto) del disparo inicial siempre será el mismo en cualquier caso, ( para que quede centrado ) en cualquier_
 238+ 9FB8              ;   _ posición de cualquier entidad, (como ocurre con el puntero de impresión de las explosiones de entidades).
 239+ 9FB8              ;
 240+ 9FB8
 241+ 9FB8 FD 21 70 83      ld iy,Disparo_de_entidad
 242+ 9FBC
 243+ 9FBC              ;! Debuggg
 244+ 9FBC
 245+ 9FBC              ;   Decrementa el numero de disparos de entidades.
 246+ 9FBC
 247+ 9FBC 21 16 8C         ld hl,Numero_de_disparos_de_entidades
 248+ 9FBF 35               dec (hl)
 249+ 9FC0
 250+ 9FC0              ;   Puntero de impresión del disparo en BC.
 251+ 9FC0
 252+ 9FC0 21 2B 8C         ld hl,Puntero_de_impresion_disparo_de_entidad
 253+ 9FC3 4E               ld c,(hl)
 254+ 9FC4 23               inc hl
 255+ 9FC5 46               ld b,(hl)
 256+ 9FC6
 257+ 9FC6 CD A6 90         call Inicia_Puntero_Disparo_Entidades
 258+ 9FC9
 259+ 9FC9 2A 29 8C     1 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)              ; En la 1ª caja del índice.
 260+ 9FCC CD AD 90         call Extrae_address
 261+ 9FCF
 262+ 9FCF              ;   Comprobamos si la caja está vacía.
 263+ 9FCF
 264+ 9FCF 23               inc hl
 265+ 9FD0 7E               ld a,(hl)
 266+ 9FD1 A7               and a
 267+ 9FD2
 268+ 9FD2 20 30            jr nz,Situa_en_siguiente_disparo                    ; Avanza a la siguiente caja si esta esta completa.
 269+ 9FD4
 270+ 9FD4              ;   Generamos disparo. !!!!!!!!!!!!!!!!
 271+ 9FD4
 272+ 9FD4 2B               dec hl
 273+ 9FD5
 274+ 9FD5 FD 7D            ld a,iyl
 275+ 9FD7 77               ld (hl),a
 276+ 9FD8 23               inc hl
 277+ 9FD9 FD 7C            ld a,iyh
 278+ 9FDB 77               ld (hl),a                                           ; Guarda el (puntero objeto) del disparo en la caja.
 279+ 9FDC
 280+ 9FDC 23               inc hl
 281+ 9FDD
 282+ 9FDD 71               ld (hl),c
 283+ 9FDE 23               inc hl
 284+ 9FDF 70               ld (hl),b                                           ; Guarda el puntero de impresión.
 285+ 9FE0
 286+ 9FE0 23               inc hl
 287+ 9FE1
 288+ 9FE1 3A C0 8B         ld a,(Velocidad)                                    ; Guarda la velocidad de la entidad/disparo.
 289+ 9FE4 77               ld (hl),a
 290+ 9FE5
 291+ 9FE5 23               inc hl
 292+ 9FE6
 293+ 9FE6              ;! Ajusta el grado de inclinación del disparo.
 294+ 9FE6
 295+ 9FE6 36 07            ld (hl),7                                           ; Guarda Byte de Control.
 296+ 9FE8
 297+ 9FE8              ; Determina tendencia del disparo.
 298+ 9FE8
 299+ 9FE8 3A 6E 89         ld a,(CX_Amadeus)
 300+ 9FEB 47               ld b,a
 301+ 9FEC 3A B6 8B         ld a,(Coordenada_X)
 302+ 9FEF 90               sub b
 303+ 9FF0 38 07            jr c,Disparo_a_derecha
 304+ 9FF2
 305+ 9FF2 FE 04        Disparo_a_izquierda cp 4
 306+ 9FF4
 307+ 9FF4 D8               ret c
 308+ 9FF5 C8               ret z
 309+ 9FF6
 310+ 9FF6 CB FE            set 7,(hl)
 311+ 9FF8 C9               ret
 312+ 9FF9
 313+ 9FF9 47           Disparo_a_derecha ld b,a
 314+ 9FFA 3E FF            ld a,$ff
 315+ 9FFC 90               sub b
 316+ 9FFD
 317+ 9FFD FE 04            cp 4
 318+ 9FFF
 319+ 9FFF D8               ret c
 320+ A000 C8               ret z
 321+ A001
 322+ A001 CB F6            set 6,(hl)
 323+ A003 C9               ret
 324+ A004
 325+ A004              ;   --- --- ---
 326+ A004
 327+ A004              Situa_en_siguiente_disparo
 328+ A004
 329+ A004 13               inc de
 330+ A005 13               inc de
 331+ A006
 332+ A006 ED 53 29 8C      ld (Puntero_DESPLZ_DISPARO_ENTIDADES),de
 333+ A00A 18 BD            jr 1B
 334+ A00C
 335+ A00C              ; --------------------------------------------------------------------------------------
 336+ A00C              ;
 337+ A00C              ;   31/08/24
 338+ A00C              ;
 339+ A00C
 340+ A00C              Compara_con_coordenadas_de_disparo
 341+ A00C
 342+ A00C 3A B7 8B         ld a,(Coordenada_y)
 343+ A00F 47               ld b,a
 344+ A010 3A 30 8C         ld a,(Coordenadas_disparo_certero)
 345+ A013 90               sub b
 346+ A014
 347+ A014              ; A = "0" ok
 348+ A014              ; A = "1" ok
 349+ A014
 350+ A014 28 08            jr z,Comprueba_coordenada_X
 351+ A016 3D               dec a
 352+ A017 28 05            jr z,Comprueba_coordenada_X
 353+ A019
 354+ A019              ; A = "$ff" ok
 355+ A019
 356+ A019 FE FE            cp $fe
 357+ A01B 28 01            jr z,Comprueba_coordenada_X
 358+ A01D
 359+ A01D C9               ret
 360+ A01E
 361+ A01E              Comprueba_coordenada_X
 362+ A01E
 363+ A01E 3A B6 8B         ld a,(Coordenada_X)
 364+ A021 47               ld b,a
 365+ A022 21 31 8C         ld hl,Coordenadas_disparo_certero+1
 366+ A025 7E               ld a,(hl)
 367+ A026 90               sub b
 368+ A027
 369+ A027              ; A = "0" ok
 370+ A027              ; A = "1" ok
 371+ A027
 372+ A027 28 09            jr z,Activa_Impacto_en_entidad
 373+ A029 3D               dec a
 374+ A02A 28 06            jr z,Activa_Impacto_en_entidad
 375+ A02C
 376+ A02C              ; A = "2" ok
 377+ A02C
 378+ A02C 3D               dec a
 379+ A02D 28 03            jr z,Activa_Impacto_en_entidad
 380+ A02F
 381+ A02F              ; A = "$ff"
 382+ A02F
 383+ A02F FE FD            cp $fd
 384+ A031 C0               ret nz
 385+ A032
 386+ A032              Activa_Impacto_en_entidad
 387+ A032
 388+ A032              ;   Indica Impacto en la entidad por disparo de Amadeus, "2".
 389+ A032
 390+ A032 3E 02            ld a,2
 391+ A034 32 B9 8B         ld (Impacto),a
 392+ A037
 393+ A037              ;   (Puntero_de_almacen_de_mov_masticados) ahora apuntará a la explosión.
 394+ A037
 395+ A037 11 C0 87         ld de,Indice_Explosion_entidades
 396+ A03A 21 BC 8B         ld hl,Puntero_de_almacen_de_mov_masticados
 397+ A03D
 398+ A03D 73               ld (hl),e
 399+ A03E 23               inc hl
 400+ A03F 72               ld (hl),d
 401+ A040
 402+ A040              ;   Hemos encontrado la entidad impactada, Restauramos FLAG para dejar de buscar en este FRAME.
 403+ A040
 404+ A040 21 2D 8C         ld hl,Impacto2
 405+ A043 CB 9E            res 3,(hl)
 406+ A045
 407+ A045 C9               ret
 408+ A046
 409+ A046              ; --------------------------------------------------------------------------------------
 410+ A046              ;
 411+ A046              ;   11/09/24
 412+ A046              ;
 413+ A046
 414+ A046              Limpia_album_de_borrado_disparos
 415+ A046
 416+ A046 21 28 8C         ld hl,Ctrl_5
 417+ A049 CB 56            bit 2,(hl)
 418+ A04B 28 04            jr z,1F
 419+ A04D CB 96            res 2,(hl)
 420+ A04F 18 05            jr Limpiando
 421+ A051
 422+ A051 CB 46        1 bit 0,(hl)
 423+ A053 C8               ret z
 424+ A054 CB 86            res 0,(hl)
 425+ A056
 426+ A056              Limpiando
 427+ A056
 428+ A056 AF               xor a
 429+ A057 2A 10 8C         ld hl,(Album_de_borrado_disparos)
 430+ A05A 77               ld (hl),a
 431+ A05B 5D               ld e,l
 432+ A05C 54               ld d,h
 433+ A05D 1C               inc e                                           ; DE = HL+1
 434+ A05E 01 3A 00         ld bc,$003a
 435+ A061 ED B0            ldir
 436+ A063
 437+ A063 C9               ret
 438+ A064
 439+ A064
 440+ A064              ; --------------------------------------------------------------------------------------
 441+ A064              ;
 442+ A064              ;   26/08/24
 443+ A064              ;
 444+ A064
 445+ A064              Calcula_bytes_pintado_disparos
 446+ A064
 447+ A064 2A 0E 8C         ld hl,(Album_de_pintado_disparos)
 448+ A067 45               ld b,l
 449+ A068 2A 12 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 450+ A06B 7D               ld a,l
 451+ A06C
 452+ A06C 90               sub b
 453+ A06D 32 14 8C         ld (Num_de_bytes_album_de_disparos),a
 454+ A070
 455+ A070 C9               ret
 456+ A071
 457+ A071              ; --------------------------------------------------------------------------------------
 458+ A071              ;
 459+ A071              ;   11/09/24
 460+ A071              ;
 461+ A071              ;   Limpia la diferencia de bytes entre el (album_de_pintado_disparos) del FRAME anterior y el_
 462+ A071              ;   _(album_de_pintado_disparos) del FRAME actual, (siempre que el álbum del FRAME anterior contenga más_
 463+ A071              ;   _disparos que el álbum del FRAME actual).
 464+ A071
 465+ A071              Limpia_album_de_pintado_disparos
 466+ A071
 467+ A071              ;*   Exclusiones.
 468+ A071
 469+ A071 3A 15 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 470+ A074 A7               and a
 471+ A075 C8               ret z
 472+ A076
 473+ A076              ; -----
 474+ A076
 475+ A076 3A 14 8C         ld a,(Num_de_bytes_album_de_disparos)
 476+ A079 47               ld b,a
 477+ A07A 3A 15 8C         ld a,(Num_de_bytes_album_de_disparos_2)
 478+ A07D
 479+ A07D 90               sub b
 480+ A07E
 481+ A07E C8               ret z
 482+ A07F D8               ret c
 483+ A080
 484+ A080 2A 12 8C         ld hl,(Nivel_scan_disparos_album_de_pintado)
 485+ A083 47               ld b,a                                                              ; Nº de bytes a borrar en B.
 486+ A084 AF               xor a                                                               ; "0".
 487+ A085
 488+ A085 77           1 ld (hl),a
 489+ A086 2C               inc l
 490+ A087 10 FC            djnz 1B
 491+ A089
 492+ A089 C9               ret
 493+ A08A
 494+ A08A              ; --------------------------------------------------------------------------------------
 495+ A08A              ;
 496+ A08A              ;   27/08/24
 497+ A08A              ;
 498+ A08A
 499+ A08A              Motor_Disparos_Amadeus
 500+ A08A
 501+ A08A              ;   Averiguamos si la 1ª caja contiene disparo, para ello nos situamos en el byte alto del (Puntero_de_impresion).
 502+ A08A
 503+ A08A 21 20 89         ld hl,Disparo_Amad+1
 504+ A08D
 505+ A08D 34               inc (hl)
 506+ A08E 35               dec (hl)
 507+ A08F
 508+ A08F C8               ret z
 509+ A090
 510+ A090              ;   Esta caja contiene un disparo.
 511+ A090
 512+ A090 CD 97 A0         call Consulta_Impacto
 513+ A093 CC B0 A0         call z,Mueve_disparo_Amadeus
 514+ A096
 515+ A096 C9               ret
 516+ A097
 517+ A097              ; ----------------------
 518+ A097              ;
 519+ A097              ;
 520+ A097              ;   Nos colocamos en el .db (Impacto) e interrogamos.
 521+ A097              ;
 522+ A097              ;   OUTPUT: (Z) / (NZ) FLAG. NZ indica que existe (Impacto).
 523+ A097
 524+ A097
 525+ A097              Consulta_Impacto
 526+ A097
 527+ A097              ;   Vamos a comprobar si existe (Impacto) de este disparo con alguna entidad antes de mover la entidad y el propio disparo. Lo vamos a hacer así para que la detección_
 528+ A097              ;   _sea lo más coherente posible.
 529+ A097
 530+ A097 E5               push hl
 531+ A098 2B               dec hl
 532+ A099 CD 91 A1         call Detecta_impacto_en_disparo_de_Amadeus                          ; Nos situamos en el 1er .db de la caja y comprobamos Impacto.
 533+ A09C E1               pop hl
 534+ A09D 23               inc hl                                                              ; (Puntero_de_impresion) en HL.
 535+ A09E
 536+ A09E C8               ret z
 537+ A09F
 538+ A09F 3A 2D 8C         ld a,(Impacto2)
 539+ A0A2 CB DF            set 3,a
 540+ A0A4 32 2D 8C         ld (Impacto2),a
 541+ A0A7
 542+ A0A7 E5               push hl
 543+ A0A8 CD 7E A1         call Genera_coordenadas_de_disparo_Amadeus
 544+ A0AB E1               pop hl
 545+ A0AC CD C9 A0         call Elimina_disparo
 546+ A0AF
 547+ A0AF C9               ret
 548+ A0B0
 549+ A0B0              ; ----------------------
 550+ A0B0              ;
 551+ A0B0              ;
 552+ A0B0              ;   INPUTS: HL debe apuntar al (Puntero_de_impresion) del disparo.
 553+ A0B0
 554+ A0B0              Mueve_disparo_Amadeus
 555+ A0B0
 556+ A0B0 CD AD 90         call Extrae_address
 557+ A0B3
 558+ A0B3 CD DB 99         call PreviousScan
 559+ A0B6 CD DB 99         call PreviousScan
 560+ A0B9 CD DB 99         call PreviousScan
 561+ A0BC CD DB 99         call PreviousScan
 562+ A0BF
 563+ A0BF              ; Después de mover el disparo comprobamos si ha salido de la parte alta de la pantalla.
 564+ A0BF
 565+ A0BF 7C               ld a,h
 566+ A0C0 D6 40            sub $40
 567+ A0C2 EB               ex de,hl
 568+ A0C3 38 04            jr c,Elimina_disparo
 569+ A0C5
 570+ A0C5               ; Introduce nuevo puntero_de_impresión en la caja.
 571+ A0C5
 572+ A0C5 73               ld (hl),e
 573+ A0C6 23               inc hl
 574+ A0C7 72               ld (hl),d
 575+ A0C8
 576+ A0C8 C9               ret
 577+ A0C9
 578+ A0C9              ; ----------------------
 579+ A0C9              ;
 580+ A0C9              ;   11/9/24
 581+ A0C9
 582+ A0C9              Elimina_disparo
 583+ A0C9
 584+ A0C9              ; HL apunta al .db (Puntero_de_impresion) del disparo.
 585+ A0C9              ; Recordemos la estructura de datos de una caja de disparos de Amadeus:
 586+ A0C9
 587+ A0C9              ;   Disparo_1A defw 0									; Puntero objeto.
 588+ A0C9              ;   	defw 0											; Puntero de impresión.
 589+ A0C9
 590+ A0C9 2B               dec hl
 591+ A0CA 2B               dec hl
 592+ A0CB
 593+ A0CB AF               xor a
 594+ A0CC 77               ld (hl),a
 595+ A0CD 23               inc hl
 596+ A0CE 77               ld (hl),a                                           ;? Puntero_objeto borrado.
 597+ A0CF
 598+ A0CF 23               inc hl
 599+ A0D0 77               ld (hl),a
 600+ A0D1 23               inc hl
 601+ A0D2 77               ld (hl),a                                           ;? Puntero_de_impresion borrado.
 602+ A0D3
 603+ A0D3 3E 01            ld a,1
 604+ A0D5 32 17 8C         ld (Permiso_de_disparo_Amadeus),a
 605+ A0D8
 606+ A0D8 21 28 8C         ld hl,Ctrl_5                                        ;? Indica que ha desaparecido un disparo.
 607+ A0DB CB C6            set 0,(hl)
 608+ A0DD
 609+ A0DD AF               xor a
 610+ A0DE 3C               inc a                                               ;? Siempre que eliminamos un disparo tenemos: "NZ".
 611+ A0DF
 612+ A0DF C9               ret
 613+ A0E0
 614+ A0E0              ; --------------------------------------------------------------------------------------
 615+ A0E0              ;
 616+ A0E0              ;   21/8/24
 617+ A0E0              ;
 618+ A0E0
 619+ A0E0              Pinta_disparos
 620+ A0E0
 621+ A0E0              ;    ld a,(Ctrl_5)
 622+ A0E0              ;    bit 2,a
 623+ A0E0              ;    jr nz,$
 624+ A0E0
 625+ A0E0 ED 73 02 8C      ld (Stack),sp
 626+ A0E4 06 02            ld b,2
 627+ A0E6
 628+ A0E6 ED 7B 10 8C  Borra_disparos ld sp,(Album_de_borrado_disparos)
 629+ A0EA
 630+ A0EA D1           2 pop de
 631+ A0EB
 632+ A0EB 14               inc d
 633+ A0EC 15               dec d
 634+ A0ED
 635+ A0ED 28 1B            jr z,1F
 636+ A0EF
 637+ A0EF              Imprime_scanlines_de_disparo
 638+ A0EF
 639+ A0EF E1               pop hl
 640+ A0F0
 641+ A0F0              ; Puntero objeto en DE.
 642+ A0F0              ; Puntero_de_impresión en HL.
 643+ A0F0
 644+ A0F0              ; 1er scanline.
 645+ A0F0
 646+ A0F0 1A               ld a,(de)
 647+ A0F1 AE               xor (hl)
 648+ A0F2 77               ld (hl),a
 649+ A0F3
 650+ A0F3 13               inc de
 651+ A0F4 2C               inc l
 652+ A0F5
 653+ A0F5 1A               ld a,(de)
 654+ A0F6 AE               xor (hl)
 655+ A0F7 77               ld (hl),a
 656+ A0F8
 657+ A0F8              ; 2º scanline.
 658+ A0F8
 659+ A0F8 E1               pop hl
 660+ A0F9 1B               dec de
 661+ A0FA
 662+ A0FA 1A               ld a,(de)
 663+ A0FB AE               xor (hl)
 664+ A0FC 77               ld (hl),a
 665+ A0FD
 666+ A0FD 13               inc de
 667+ A0FE 2C               inc l
 668+ A0FF
 669+ A0FF 1A               ld a,(de)
 670+ A100 AE               xor (hl)
 671+ A101 77               ld (hl),a
 672+ A102
 673+ A102              ; Seguimos pintando / borrando disparos si los hay. SP está situado ahora en el siguiente disparo del álbum de scanlines de disparos.
 674+ A102
 675+ A102 18 E6            jr 2B
 676+ A104
 677+ A104 ED 7B 0E 8C  3 ld sp,(Album_de_pintado_disparos)
 678+ A108 18 E0            jr 2B
 679+ A10A
 680+ A10A 10 F8        1 djnz 3B
 681+ A10C ED 7B 02 8C      ld sp,(Stack)
 682+ A110 C9               ret
 683+ A111
 684+ A111              ; --------------------------------------------------------------------------------------
 685+ A111              ;
 686+ A111              ;   14/09/24
 687+ A111              ;
 688+ A111              ;   Modifica: HL y DE.
 689+ A111
 690+ A111
 691+ A111              Genera_datos_de_impresion_disparos_Amadeus
 692+ A111
 693+ A111 ED 73 02 8C      ld (Stack),sp
 694+ A115 31 1F 89         ld sp,Disparo_Amad                                        ;? SP se sitúa en el .db (Puntero objeto) de la caja de disparos de Amadeus.
 695+ A118 D1               pop de                                                    ;? Puntero_objeto del disparo en DE.
 696+ A119
 697+ A119 14               inc d                                                     ;? Salimos si no hay disparo.
 698+ A11A 15               dec d
 699+ A11B
 700+ A11B 28 12            jr z,Salida
 701+ A11D
 702+ A11D              Genera_scanlines_de_disparo_Amadeus
 703+ A11D
 704+ A11D E1               pop hl                                                    ;? Puntero_objeto del disparo en DE.
 705+ A11E              ;                                                             ;? Puntero_de_impresión del disparo en HL.
 706+ A11E ED 7B 12 8C      ld sp,(Nivel_scan_disparos_album_de_pintado)
 707+ A122
 708+ A122 C1               pop bc
 709+ A123 C1               pop bc
 710+ A124 C1               pop bc
 711+ A125
 712+ A125 ED 73 12 8C      ld (Nivel_scan_disparos_album_de_pintado),sp              ;? Nuevo nivel del album de disparos.
 713+ A129
 714+ A129 E5               push hl                                                   ;? Sube 2º scanline al álbum.
 715+ A12A CD DB 99         call PreviousScan
 716+ A12D E5               push hl                                                   ;? Sube 1er scanline al álbum.
 717+ A12E D5               push de                                                   ;? Sube Puntero_objeto del disparo al álbum.
 718+ A12F
 719+ A12F              Salida
 720+ A12F
 721+ A12F ED 7B 02 8C      ld sp,(Stack)
 722+ A133
 723+ A133 C9               ret
 724+ A134
 725+ A134              ; --------------------------------------------------------------------------------------
 726+ A134              ;
 727+ A134              ;   12/09/24
 728+ A134              ;
 729+ A134
 730+ A134              Genera_disparo_Amadeus
 731+ A134
 732+ A134              ;*  Exclusiones.
 733+ A134
 734+ A134 3A 17 8C         ld a,(Permiso_de_disparo_Amadeus)
 735+ A137 A7               and a
 736+ A138 C8               ret z                                                    ;? Salimos si no hay permiso de disparo.
 737+ A139
 738+ A139 3D               dec a
 739+ A13A 32 17 8C         ld (Permiso_de_disparo_Amadeus),a                        ;? No volveremos a tener permiso de disparo hasta que desaparezaca este disparo.
 740+ A13D
 741+ A13D              Define_puntero_objeto_disparo
 742+ A13D
 743+ A13D              ;   Inicializamos contador.
 744+ A13D
 745+ A13D 06 00            ld b,0
 746+ A13F
 747+ A13F 2A 72 89         ld hl,(p.imp.amadeus)
 748+ A142 2C               inc l
 749+ A143
 750+ A143 3E 80            ld a,$80
 751+ A145 BE               cp (hl)
 752+ A146 28 0D            jr z,1F
 753+ A148
 754+ A148 04               inc b
 755+ A149
 756+ A149 3E 60            ld a,$60
 757+ A14B BE               cp (hl)
 758+ A14C 28 07            jr z,1F
 759+ A14E
 760+ A14E
 761+ A14E 04               inc b
 762+ A14F
 763+ A14F 3E 18            ld a,$18
 764+ A151 BE               cp (hl)
 765+ A152 28 01            jr z,1F
 766+ A154
 767+ A154 04               inc b
 768+ A155
 769+ A155              ;   Calcula el Puntero_de_impresión del disparo.
 770+ A155
 771+ A155              ;   El Puntero_de_impresión del disparo apunta al último scanline de los tres que componen el disparo, (el de abajo).
 772+ A155
 773+ A155 CD DB 99     1 call PreviousScan
 774+ A158
 775+ A158 78               ld a,b
 776+ A159 CB 3F            srl a
 777+ A15B 28 03            jr z,4F
 778+ A15D
 779+ A15D              ; --- Guarda el puntero_de_impresión del disparo en la pila.
 780+ A15D E5               push hl
 781+ A15E 18 02            jr 5F
 782+ A160 2D           4 dec l
 783+ A161 E5               push hl
 784+ A162              ; ---
 785+ A162
 786+ A162              ;   Calcula el Puntero_objeto del disparo.
 787+ A162
 788+ A162 21 72 83     5 ld hl,Indice_disparo_Amadeus
 789+ A165 04               inc b
 790+ A166 05               dec b
 791+ A167 28 04            jr z,2F
 792+ A169
 793+ A169              ;   Nos desplazamos por el índice de disparos.
 794+ A169
 795+ A169 2C           3 inc l
 796+ A16A 2C               inc l
 797+ A16B 10 FC            djnz 3B
 798+ A16D
 799+ A16D              ; --- Guarda el Puntero_objeto del disparo en la pila.
 800+ A16D CD AD 90     2 call Extrae_address
 801+ A170 E5               push hl
 802+ A171              ; ---
 803+ A171
 804+ A171              ; Almacenamos (Puntero_objeto) y (Puntero_de_impresion) en su correspondiente caja.
 805+ A171              ; HL en el 1er .db de la caja.
 806+ A171
 807+ A171 21 1F 89         ld hl,Disparo_Amad
 808+ A174
 809+ A174 06 02            ld b,2
 810+ A176
 811+ A176 D1           6 pop de
 812+ A177 73               ld (hl),e
 813+ A178 23               inc hl
 814+ A179 72               ld (hl),d
 815+ A17A 23               inc hl
 816+ A17B
 817+ A17B 10 F9            djnz 6B
 818+ A17D
 819+ A17D C9               ret
 820+ A17E
 821+ A17E              Genera_coordenadas_de_disparo_Amadeus
 822+ A17E
 823+ A17E              ;   HL deberá apuntar al .db (Puntero_de_impresion) del disparo.
 824+ A17E              ;   Esta parte de la rutina sólo aplica cuando un disparo nuestro alcanza a una entidad.
 825+ A17E              ;   Genera las coordenadas de nuestro disparo certero y activa el correspondiente FLAG, (bit3 Impacto2).
 826+ A17E
 827+ A17E CD AD 90         call Extrae_address
 828+ A181 CD CC 94         call Genera_coordenadas
 829+ A184
 830+ A184 3D               dec a
 831+ A185
 832+ A185 21 30 8C         ld hl,Coordenadas_disparo_certero
 833+ A188 77               ld (hl),a                                           ;   Almacenamos la Coordenada_Y, (Fila) del disparo.
 834+ A189 23               inc hl
 835+ A18A 3A B6 8B         ld a,(Coordenada_X)
 836+ A18D 77               ld (hl),a                                           ;   Almacenamos la Coordenada_X, (Columna) del disparo.
 837+ A18E
 838+ A18E AF               xor a
 839+ A18F 3C               inc a                                               ;   Fuerza "NZ" a la salida.
 840+ A190
 841+ A190 C9               ret
 842+ A191
 843+ A191              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 844+ A191              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 845+ A191              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 846+ A191
 847+ A191              ; ----------------------------------------------
 848+ A191              ;
 849+ A191              ;   27/08/24
 850+ A191              ;
 851+ A191              ;   INPUTS: HL contiene la dirección de caja del disparo correspondiente, (1er .db de la caja).
 852+ A191              ;   OUTPUT: FLAG Z indica NO IMPACTO, NZ indica IMPACTO.
 853+ A191
 854+ A191              Detecta_impacto_en_disparo_de_Amadeus
 855+ A191
 856+ A191              Extraccion_de_datos
 857+ A191
 858+ A191 13               inc de
 859+ A192 13               inc de                                                 ;    Se sitúa en Puntero_objeto aumentdao del disparo para comprobar colisión.
 860+ A193
 861+ A193 5E               ld e,(hl)
 862+ A194 23               inc hl
 863+ A195 56               ld d,(hl)
 864+ A196
 865+ A196 23               inc hl
 866+ A197
 867+ A197 4E               ld c,(hl)
 868+ A198 23               inc hl
 869+ A199 46               ld b,(hl)
 870+ A19A
 871+ A19A C5               push bc
 872+ A19B E1               pop hl                                                 ;    Puntero_de_impresión del disparo en HL.
 873+ A19C
 874+ A19C              ;   La detección de colisión se efectúa con el disparo impreso en pantalla.
 875+ A19C
 876+ A19C CD DB 99         call PreviousScan
 877+ A19F CD DB 99         call PreviousScan
 878+ A1A2
 879+ A1A2              Detecta_impacto_
 880+ A1A2
 881+ A1A2 1A               ld a,(de)
 882+ A1A3 A6               and (hl)
 883+ A1A4 C0               ret nz
 884+ A1A5
 885+ A1A5 13               inc de
 886+ A1A6 23               inc hl
 887+ A1A7
 888+ A1A7 1A               ld a,(de)
 889+ A1A8 A6               and (hl)
 890+ A1A9 C9               ret
 891+ A1AA
 892+ A1AA              ; -------------------------------------------------------------------------------------------------------------
 893+ A1AA              ;
 894+ A1AA              ;   8/8/24
 895+ A1AA              ;
 896+ A1AA              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 897+ A1AA              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 898+ A1AA              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 899+ A1AA              ;
 900+ A1AA              ;   MODIFICA: HL,DE,BC y A.
 901+ A1AA              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 902+ A1AA              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 903+ A1AA
 904+ A1AA              Colision_Entidad_Amadeus
 905+ A1AA
 906+ A1AA              ; Posible contacto de entidad con Amadeus. ?????
 907+ A1AA
 908+ A1AA              ; Exclusiones:
 909+ A1AA
 910+ A1AA 3A 50 8C         ld a,(Shield)
 911+ A1AD A7               and a
 912+ A1AE C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 913+ A1AF
 914+ A1AF 21 26 8C         ld hl,Ctrl_3
 915+ A1B2 CB 76            bit 6,(hl)
 916+ A1B4 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 917+ A1B5
 918+ A1B5 21 2D 8C         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 919+ A1B8 CB 56            bit 2,(hl)
 920+ A1BA C0               ret nz
 921+ A1BB
 922+ A1BB 3A B7 8B     	ld a,(Coordenada_y)
 923+ A1BE FE 14        	cp $14
 924+ A1C0 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 925+ A1C1
 926+ A1C1 3A 71 89         ld a,(Impacto_Amadeus)                                 ; Evita que se produzca colisión con dos entidades a la vez.
 927+ A1C4 A7               and a
 928+ A1C5 C0               ret nz
 929+ A1C6
 930+ A1C6              Genera_coordenadas_X
 931+ A1C6
 932+ A1C6              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 933+ A1C6              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 934+ A1C6
 935+ A1C6              ;   Limpiamos almacenes.
 936+ A1C6
 937+ A1C6              ;    call Limpia_Coordenadas_X
 938+ A1C6
 939+ A1C6              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 940+ A1C6
 941+ A1C6 21 32 8C         ld hl,Coordenadas_X_Entidad
 942+ A1C9 3A B6 8B         ld a,(Coordenada_X)
 943+ A1CC CD EE A1         call Guarda_coordenadas_X
 944+ A1CF
 945+ A1CF              ;   Almacenamos las coordenadas X de Amadeus.
 946+ A1CF
 947+ A1CF 3A 6E 89         ld a,(CX_Amadeus)
 948+ A1D2 CD EE A1         call Guarda_coordenadas_X
 949+ A1D5 CD 02 A2         call Compara_coordenadas_X
 950+ A1D8 C0               ret nz
 951+ A1D9
 952+ A1D9 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 953+ A1DB 32 B9 8B         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 954+ A1DE
 955+ A1DE 2A F5 8B         ld hl,(Puntero_store_caja)
 956+ A1E1 2C               inc l
 957+ A1E2 2C               inc l
 958+ A1E3 2C               inc l
 959+ A1E4 2C               inc l
 960+ A1E5 22 2E 8C         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 961+ A1E8
 962+ A1E8 21 2D 8C         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 963+ A1EB CB D6            set 2,(hl)
 964+ A1ED
 965+ A1ED C9               ret
 966+ A1EE
 967+ A1EE               ; ----- ----- ----- ----- -----
 968+ A1EE
 969+ A1EE 77           Guarda_coordenadas_X ld (hl),a
 970+ A1EF 3C               inc a
 971+ A1F0 2C               inc l
 972+ A1F1 77               ld (hl),a
 973+ A1F2 3C               inc a
 974+ A1F3 2C               inc l
 975+ A1F4 77               ld (hl),a
 976+ A1F5 2C               inc l
 977+ A1F6 C9               ret
 978+ A1F7
 979+ A1F7 AF           Limpia_Coordenadas_X xor a
 980+ A1F8 06 06            ld b,6
 981+ A1FA 21 35 8C         ld hl,Coordenadas_X_Amadeus
 982+ A1FD 77           1 ld (hl),a
 983+ A1FE 23               inc hl
 984+ A1FF 10 FC            djnz 1B
 985+ A201 C9               ret
 986+ A202
 987+ A202              ; ----- ----- ----- ----- -----
 988+ A202
 989+ A202              Compara_coordenadas_X
 990+ A202
 991+ A202 DD 21 32 8C      ld ix,Coordenadas_X_Entidad
 992+ A206 DD 7E 00         ld a,(ix+0)
 993+ A209 CD 17 A2         call Comparando
 994+ A20C C8               ret z
 995+ A20D
 996+ A20D 3C               inc a
 997+ A20E CD 26 A2         call Comparando_1
 998+ A211 C8               ret z
 999+ A212
1000+ A212 3C               inc a
1001+ A213 CD 26 A2         call Comparando_1
1002+ A216 C9               ret
1003+ A217
1004+ A217              ; ----- ----- ----- ----- -----
1005+ A217              ;
1006+ A217              ;   4/12/23
1007+ A217              ;
1008+ A217              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
1009+ A217
1010+ A217              Comparando
1011+ A217
1012+ A217 DD 2C            inc ixl
1013+ A219 DD 2C            inc ixl
1014+ A21B DD 2C            inc ixl
1015+ A21D
1016+ A21D DD 46 00         ld b,(ix+0)
1017+ A220 DD 4E 01         ld c,(ix+1)
1018+ A223 DD 56 02         ld d,(ix+2)
1019+ A226
1020+ A226 B8           Comparando_1 cp b
1021+ A227 C8               ret z
1022+ A228 B9               cp c
1023+ A229 C8               ret z
1024+ A22A BA               cp d
1025+ A22B C9               ret
1026+ A22C
1027+ A22C              ; -----------------------------------------------------------------------
1028+ A22C              ;
1029+ A22C              ;   04/7/24
1030+ A22C              ;
1031+ A22C
1032+ A22C              Detecta_colision_nave_entidad
1033+ A22C
1034+ A22C              ; Exclusiones:
1035+ A22C
1036+ A22C              ; Salimos de la rutina si no hay advertencia de posible colisión.
1037+ A22C
1038+ A22C 21 2D 8C     	ld hl,Impacto2
1039+ A22F CB 56        	bit 2,(hl)
1040+ A231 C8           	ret z
1041+ A232
1042+ A232              ; Detección byte a byte de colisión ENTIDAD-NAVE.
1043+ A232
1044+ A232 2A 74 89         ld hl,(Pamm_Amadeus)
1045+ A235 CD AD 90         call Extrae_address
1046+ A238 54               ld d,h
1047+ A239 5D               ld e,l                                         ; (Puntero_objeto) en DE.
1048+ A23A
1049+ A23A 2A 72 89         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
1050+ A23D 06 10            ld b,16                                        ; Contador de scanlines en B.
1051+ A23F FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
1052+ A242
1053+ A242 C5           1 push bc
1054+ A243 06 03            ld b,3
1055+ A245 E5               push hl
1056+ A246
1057+ A246              ; .db
1058+ A246
1059+ A246 1A           3 ld a,(de)
1060+ A247 A7               and a
1061+ A248 20 03            jr nz,4F
1062+ A24A
1063+ A24A 2C               inc l
1064+ A24B 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
1065+ A24D
1066+ A24D ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
1067+ A24F 28 04            jr z,2F
1068+ A251
1069+ A251              ; Impacto.
1070+ A251 FD 2D            dec iyl
1071+ A253 28 22            jr z,5F
1072+ A255
1073+ A255 1C           2 inc e
1074+ A256 10 EE            djnz 3B
1075+ A258
1076+ A258 E1               pop hl
1077+ A259
1078+ A259              ; Hay salto de línea en el puntero de impresión ???
1079+ A259
1080+ A259 7C               ld a,h
1081+ A25A D6 57            sub $57
1082+ A25C 20 0A            jr nz,6F
1083+ A25E
1084+ A25E              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
1085+ A25E
1086+ A25E 2A 72 89         ld hl,(p.imp.amadeus)
1087+ A261 3E 20            ld a,$20
1088+ A263 A7               and a
1089+ A264 85               add l
1090+ A265 6F               ld l,a
1091+ A266 18 01            jr 7F
1092+ A268
1093+ A268 24           6 inc h
1094+ A269
1095+ A269 C1           7 pop bc
1096+ A26A 10 D6            djnz 1B
1097+ A26C
1098+ A26C              ;   Fin de la comparativa.
1099+ A26C
1100+ A26C              ;   NO HAY COLISIÓN !!!!!.
1101+ A26C              ;
1102+ A26C              ;   .db (Impacto) de Amadeus a "0".
1103+ A26C              ;   RES el bit2 de (Impacto2).
1104+ A26C              ;
1105+ A26C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1106+ A26C              ;   Lo colocamos a "0".
1107+ A26C
1108+ A26C 21 2D 8C         ld hl,Impacto2
1109+ A26F CB 96            res 2,(hl)
1110+ A271 2A 2E 8C         ld hl,(Entidad_sospechosa_de_colision)
1111+ A274 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
1112+ A276 C9               ret
1113+ A277
1114+ A277              ;   COLISIÓN !!!!!.
1115+ A277              ;
1116+ A277              ;   .db (Impacto) de Amadeus a "1".
1117+ A277              ;   SET el bit3 de (Impacto2).
1118+ A277              ;
1119+ A277              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
1120+ A277
1121+ A277 E1           5 pop hl
1122+ A278 C1               pop bc
1123+ A279
1124+ A279 21 71 89         ld hl,Impacto_Amadeus
1125+ A27C 36 01            ld (hl),1
1126+ A27E 21 2D 8C         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
1127+ A281 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
1128+ A283
1129+ A283 11 C0 87         ld de,Indice_Explosion_entidades
1130+ A286 2A 2E 8C         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
1131+ A289
1132+ A289 23               inc hl
1133+ A28A 23               inc hl
1134+ A28B 23               inc hl
1135+ A28C
1136+ A28C 73               ld (hl),e
1137+ A28D 23               inc hl
1138+ A28E 72               ld (hl),d
1139+ A28F
1140+ A28F              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
1141+ A28F
1142+ A28F 11 60 88         ld de,Indice_Explosion_Amadeus
1143+ A292 21 74 89         ld hl,Pamm_Amadeus
1144+ A295
1145+ A295 73               ld (hl),e
1146+ A296 23               inc hl
1147+ A297 72               ld (hl),d
1148+ A298
1149+ A298 C9               ret
1150+ A299
1151+ A299
1152+ A299
# file closed: Disparo.asm
2179  A299
2180  A299              	SAVESNA "Pruebas.sna", START
2181  A299
2182  A299
2183  A299
2184  A299
# file closed: Banco_de_pruebas.asm
