# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 9A 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 60 Bytes por entidad.
  96+ 8468
  97+ 8468 B2 84        	defw Entidad_1
  98+ 846A EE 84        	defw Entidad_2
  99+ 846C 2A 85        	defw Entidad_3
 100+ 846E 66 85        	defw Entidad_4
 101+ 8470 A2 85        	defw Entidad_5
 102+ 8472
 103+ 8472              ;	...
 104+ 8472              ;	...
 105+ 8472              ;	+ entidades ...
 106+ 8472
 107+ 8472 00 00        	defw 0
 108+ 8474 00 00        	defw 0
 109+ 8476
 110+ 8476              ; ---------- ---------- ---------- ---------- ----------
 111+ 8476
 112+ 8476 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 113+ 8478 00 00        	defw 0		 									; (Posicion_actual).
 114+ 847A 00 00        	defw 0	 										; (Puntero_objeto).
 115+ 847C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 116+ 847F
 117+ 847F 05           	db %00000101									; (Attr).
 118+ 8480
 119+ 8480 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 120+ 8482 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 121+ 8484 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 122+ 8486 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 123+ 8488
 124+ 8488 D0 50        	defw $50d0										; (Posicion_inicio).
 125+ 848A 04           	db 4 											; (Cuad_objeto).
 126+ 848B
 127+ 848B 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 128+ 848F
 129+ 848F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 130+ 8490
 131+ 8490 00 00        	db 0,0											; Variables_de_borrado
 132+ 8492 00 00        	defw 0											;	" " " " " " "
 133+ 8494 00 00        	defw 0											;	" " " " " " "
 134+ 8496 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 135+ 849A
 136+ 849A 00 00        	db 0,0											; Variables_de_pintado
 137+ 849C 00 00        	defw 0											;	" " " " " " "
 138+ 849E 00 00        	defw 0											;	" " " " " " "
 139+ 84A0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 140+ 84A4
 141+ 84A4 40 00 00     	db $40,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 142+ 84A7
 143+ 84A7 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 144+ 84AB 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 145+ 84AE
 146+ 84AE 00           	db 0 											; (Columnas).
 147+ 84AF 00 00        	defw 0											; (Limite_horizontal).
 148+ 84B1 00           	db 0											; (Limite_vertical).
 149+ 84B2
 150+ 84B2              ; ---------- ---------- ---------- ---------- ----------
 151+ 84B2
 152+ 84B2 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 153+ 84B4 00 00        	defw 0											; (Posicion_actual).
 154+ 84B6 00 00        	defw 0 											; (Puntero_objeto).
 155+ 84B8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 156+ 84BB
 157+ 84BB 00           	db %00000000 									; (Attr).
 158+ 84BC
 159+ 84BC 00 00        	defw 0											; (Indice_Sprite_der).
 160+ 84BE 00 00        	defw 0											; (Indice_Sprite_izq).
 161+ 84C0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 162+ 84C2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 163+ 84C4
 164+ 84C4 00 00        	defw 0											; (Posicion_inicio).
 165+ 84C6 00           	db 0											; (Cuad_objeto).
 166+ 84C7
 167+ 84C7 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 168+ 84CB
 169+ 84CB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 170+ 84CC
 171+ 84CC 00 00        	db 0,0										    ; Variables_de_borrado
 172+ 84CE 00 00        	defw 0											;	" " " " " " "
 173+ 84D0 00 00        	defw 0											;	" " " " " " "
 174+ 84D2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 84D6
 176+ 84D6 00 00        	db 0,0											; Variables_de_pintado
 177+ 84D8 00 00        	defw 0											;	" " " " " " "
 178+ 84DA 00 00        	defw 0											;	" " " " " " "
 179+ 84DC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 84E0
 181+ 84E0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 182+ 84E3
 183+ 84E3 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 184+ 84E7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 185+ 84EA
 186+ 84EA 00           	db 0 											; (Columnas).
 187+ 84EB 00 00        	defw 0											; (Limite_horizontal).
 188+ 84ED 00           	db 0											; (Limite_vertical).
 189+ 84EE
 190+ 84EE              ; ---------- ---------- ---------- ---------- ----------
 191+ 84EE
 192+ 84EE 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 193+ 84F0 00 00        	defw 0                                          ; (Posicion_actual).
 194+ 84F2 00 00        	defw 0											; (Puntero_objeto).
 195+ 84F4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 196+ 84F7
 197+ 84F7 02           	db %00000010									; (Attr).
 198+ 84F8
 199+ 84F8 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 200+ 84FA 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 201+ 84FC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 202+ 84FE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 203+ 8500
 204+ 8500 5E 48        	defw $485e                                      ; (Posicion_inicio).
 205+ 8502 02           	db 2											; (Cuad_objeto).
 206+ 8503
 207+ 8503 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 208+ 8507
 209+ 8507 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 210+ 8508
 211+ 8508 00 00        	db 0,0											; Variables_de_borrado
 212+ 850A 00 00        	defw 0										 	;	" " " " " " "
 213+ 850C 00 00        	defw 0											;	" " " " " " "
 214+ 850E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 215+ 8512
 216+ 8512 00 00        	db 0,0											; Variables_de_pintado
 217+ 8514 00 00        	defw 0											;	" " " " " " "
 218+ 8516 00 00        	defw 0											;	" " " " " " "
 219+ 8518 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 220+ 851C
 221+ 851C 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 222+ 851F
 223+ 851F 70 97 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0	; (Puntero_indice_mov) / (Puntero_mov).
 224+ 8523 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 225+ 8526
 226+ 8526 00           	db 0 											; (Columnas).
 227+ 8527 00 00        	defw 0											; (Limite_horizontal).
 228+ 8529 00           	db 0											; (Limite_vertical).
 229+ 852A
 230+ 852A              ; ---------- ---------- ---------- ---------- ----------
 231+ 852A
 232+ 852A 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 233+ 852C 00 00        	defw 0                                          ; (Posicion_actual).
 234+ 852E 00 00        	defw 0											; (Puntero_objeto).
 235+ 8530 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8533
 237+ 8533 04           	db %00000100									; (Attr).
 238+ 8534
 239+ 8534 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 240+ 8536 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 241+ 8538
 242+ 8538 00 00        	defw 0											; (Puntero_DESPLZ_der).
 243+ 853A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 244+ 853C
 245+ 853C A1 47        	defw $47a1                                      ; (Posicion_inicio).
 246+ 853E 01           	db 1											; (Cuad_objeto).
 247+ 853F
 248+ 853F 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 249+ 8543
 250+ 8543 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 251+ 8544
 252+ 8544 00 00        	db 0,0											; Variables_de_borrado
 253+ 8546 00 00        	defw 0										 	;	" " " " " " "
 254+ 8548 00 00        	defw 0											;	" " " " " " "
 255+ 854A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 256+ 854E
 257+ 854E 00 00        	db 0,0											; Variables_de_pintado
 258+ 8550 00 00        	defw 0											;	" " " " " " "
 259+ 8552 00 00        	defw 0											;	" " " " " " "
 260+ 8554 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 261+ 8558
 262+ 8558 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 263+ 855B
 264+ 855B 64 97 00 00  	defw Indice_mov_Derecha,0						; (Puntero_indice_mov) / (Puntero_mov).
 265+ 855F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 266+ 8562
 267+ 8562 00           	db 0 											; (Columnas).
 268+ 8563 00 00        	defw 0											; (Limite_horizontal).
 269+ 8565 00           	db 0											; (Limite_vertical).
 270+ 8566
 271+ 8566              ; ---------- ---------- ---------- ---------- ----------
 272+ 8566
 273+ 8566 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 274+ 8568 00 00        	defw 0                                          ; (Posicion_actual).
 275+ 856A 00 00        	defw 0 											; (Puntero_objeto).
 276+ 856C 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 856F
 278+ 856F 01           	db %00000001									; (Attr).
 279+ 8570
 280+ 8570 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 281+ 8572 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 282+ 8574
 283+ 8574 00 00        	defw 0											; (Puntero_DESPLZ_der).
 284+ 8576 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 285+ 8578
 286+ 8578 BE 47        	defw $47be                                      ; (Posicion_inicio).
 287+ 857A 00           	db 0											; (Cuad_objeto).
 288+ 857B
 289+ 857B 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 290+ 857F
 291+ 857F 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 292+ 8580
 293+ 8580 00 00        	db 0,0											; Variables_de_borrado
 294+ 8582 00 00        	defw 0										 	;	" " " " " " "
 295+ 8584 00 00        	defw 0											;	" " " " " " "
 296+ 8586 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 297+ 858A
 298+ 858A 00 00        	db 0,0											; Variables_de_pintado
 299+ 858C 00 00        	defw 0											;	" " " " " " "
 300+ 858E 00 00        	defw 0											;	" " " " " " "
 301+ 8590 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 302+ 8594
 303+ 8594 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 304+ 8597
 305+ 8597 70 97 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
 306+ 859B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 307+ 859E
 308+ 859E 00           	db 0 											; (Columnas).
 309+ 859F 00 00        	defw 0											; (Limite_horizontal).
 310+ 85A1 00           	db 0											; (Limite_vertical).
 311+ 85A2
 312+ 85A2              ; ---------- ---------- ---------- ---------- ----------
 313+ 85A2
 314+ 85A2 02 02        Entidad_5 db 2,2                                  	; (Filas) / (Columns).
 315+ 85A4 00 00        	defw 0                                          ; (Posicion_actual).
 316+ 85A6 00 00        	defw 0 											; (Puntero_objeto).
 317+ 85A8 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 85AB
 319+ 85AB 01           	db %00000001									; (Attr).
 320+ 85AC
 321+ 85AC 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 322+ 85AE 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 323+ 85B0
 324+ 85B0 00 00        	defw 0											; (Puntero_DESPLZ_der).
 325+ 85B2 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 326+ 85B4
 327+ 85B4 0A 40        	defw $400a                                      ; (Posicion_inicio).
 328+ 85B6 01           	db 1											; (Cuad_objeto).
 329+ 85B7
 330+ 85B7 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 331+ 85BB
 332+ 85BB 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 333+ 85BC
 334+ 85BC 00 00        	db 0,0											; Variables_de_borrado
 335+ 85BE 00 00        	defw 0										 	;	" " " " " " "
 336+ 85C0 00 00        	defw 0											;	" " " " " " "
 337+ 85C2 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 338+ 85C6
 339+ 85C6 00 00        	db 0,0											; Variables_de_pintado
 340+ 85C8 00 00        	defw 0											;	" " " " " " "
 341+ 85CA 00 00        	defw 0											;	" " " " " " "
 342+ 85CC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 343+ 85D0
 344+ 85D0 00 00 00     	db 0,0,0										; (Ctrl_0) / (Obj_dibujado) / (Autoriza_movimiento).
 345+ 85D3
 346+ 85D3 66 97 00 00  	defw Indice_mov_Abajo,0   		                ; (Puntero_indice_mov) / (Puntero_mov).
 347+ 85D7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 348+ 85DA
 349+ 85DA 00           	db 0 											; (Columnas).
 350+ 85DB 00 00        	defw 0											; (Limite_horizontal).
 351+ 85DD 00           	db 0											; (Limite_vertical).
# file closed: Entidades_y_disparos.asm
  21  85DE
  22  85DE              ; ******************************************************************************************************************************************************************************************
  23  85DE              ; Constantes.
  24  85DE              ; ******************************************************************************************************************************************************************************************
  25  85DE              ;
  26  85DE              ; 8/11/22
  27  85DE              ;
  28  85DE              ; Constantes generales.
  29  85DE              ;
  30  85DE
  31  85DE              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  85DE              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  85DE              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  85DE              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  85DE
  36  85DE              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  85DE              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  85DE              ;                               				        ; De momento situamos este almacén en $7000.
  39  85DE              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  85DE              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  85DE              ;                               				        ; De momento situamos este almacén en $7060.
  42  85DE
  43  85DE              ; ******************************************************************************************************************************************************************************************
  44  85DE              ; Variables.
  45  85DE              ; ******************************************************************************************************************************************************************************************
  46  85DE              ;
  47  85DE              ; 10/11/22
  48  85DE              ;
  49  85DE              ; Variables de DRAW. (Motor principal).
  50  85DE              ;
  51  85DE              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  85DE
  53  85DE 02           Filas db 2												; Filas. [DRAW]
  54  85DF 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  85E0 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  85E2 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85E4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85E5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85E6
  60  85E6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85E6
  62  85E6 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85E7              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85E7              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85E7 04           Attr db %00000100										; Atributos de la entidad:
  66  85E8
  67  85E8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85E8              ;
  69  85E8              ;	COLORES: 0 ..... NEGRO
  70  85E8              ;    		 1 ..... AZUL
  71  85E8              ; 			 2 ..... ROJO
  72  85E8              ;			 3 ..... MAGENTA
  73  85E8              ; 			 4 ..... VERDE
  74  85E8              ; 			 5 ..... CIAN
  75  85E8              ;			 6 ..... AMARILLO
  76  85E8              ; 			 7 ..... BLANCO
  77  85E8
  78  85E8 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85EA 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85EC 00 00        Puntero_DESPLZ_der defw 0
  81  85EE 00 00        Puntero_DESPLZ_izq defw 0
  82  85F0
  83  85F0 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85F2 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85F3
  86  85F3              ; Variables de objeto. (Características).
  87  85F3
  88  85F3 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85F4 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85F5 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85F6 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85F7
  93  85F7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85F8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85F8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85F8 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85FA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85FC 00 00        	defw 0
  99  85FE 00 00 00 00  	db 0,0,0,0
 100  8602
 101  8602 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  8604 00 00        	defw 0
 103  8606 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  8608 00 00 00 00  	db 0,0,0,0
 105  860C
 106  860C              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  860C
 108  860C 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  860D              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  860D              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  860D              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  860D              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  860D              ;
 114  860D              ; 														DESCRIPCIÖN:
 115  860D              ;
 116  860D              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  860D              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  860D              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  860D              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  860D              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  860D              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  860D              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  860D              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  860D              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  860D              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  860D              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  860D              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  860D              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  860D              ;
 130  860D              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  860D              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  860D              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  860D
 134  860D 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  860E
 136  860E              ; Movimiento.
 137  860E
 138  860E
 139  860E 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 140  860F 72 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 141  8611 00 00        Puntero_mov defw 0
 142  8613 00           Contador_db_mov db 0
 143  8614 00           Incrementa_puntero db 0
 144  8615 00           Repetimos_db db 0
 145  8616
 146  8616              ; Variables de funcionamiento. [DRAW].
 147  8616
 148  8616 00           Columnas db 0
 149  8617 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 150  8619              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 151  8619 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 152  861A
 153  861A              ; 60 Bytes por entidad.
 154  861A              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 155  861A              ;					         		---------;      ;---------
 156  861A
 157  861A
 158  861A              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 159  861A
 160  861A 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 161  861B
 162  861B              ;														DESCRIPCIÓN:
 163  861B              ;
 164  861B              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 165  861B              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 166  861B              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 167  861B              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 168  861B              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad, hay que confirmarlo_
 169  861B              ; 															_ comparando las coordenadas del disparo con las de la entidad almacenada en DRAW.
 170  861B
 171  861B              ; Gestión de ENTIDADES.
 172  861B
 173  861B 02           Entidades_x_frame db 2									; Nº de entidades que pintaremos en un frame, (excluye a Amadeus).
 174  861C 00 00        Puntero_store_entidades defw 0
 175  861E 00 00        Puntero_restore_entidades defw 0
 176  8620 00 00        Indice_restore defw 0
 177  8622 02           Numero_de_entidades db 2								; Nº de entidades en pantalla, (contando con Amadeus).
 178  8623 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 179  8624              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 180  8624              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 181  8624              ;														; _ (Numero_de_malotes)="0".
 182  8624 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 183  8626              ;														; _variable para almacenar lo posición del puntero_
 184  8626              ; 														; _de pila, SP.
 185  8626 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 186  8628              ;														; La utiliza la rutina [Extrae_foto_registros].
 187  8628 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 188  862A              ;														; _el snapshot de los registros de la siguiente entidad.
 189  862A              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 190  862A 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 191  862C              ;														; _el snapshot de los registros del siguiente disparo.
 192  862C              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 193  862C
 194  862C              ;---------------------------------------------------------------------------------------------------------------
 195  862C
 196  862C              ; Gestión de Disparos.
 197  862C
 198  862C 00           Numero_de_disparotes db 0
 199  862D 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 200  862F 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 201  8631 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 202  8632              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 203  8632              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 204  8632 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 205  8634              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 206  8634              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 207  8634              ;														; _produzca colisión.
 208  8634 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 209  8636              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 210  8636 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 211  8639              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 212  8639 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 213  863C              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 214  863C
 215  863C              ;---------------------------------------------------------------------------------------------------------------
 216  863C
 217  863C              ; Relojes y temporizaciones.
 218  863C
 219  863C 01           Habilita_disparo_Amadeus db 1
 220  863D 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 221  863E 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 222  863F
 223  863F 01           Habilita_disparo_entidad db 1
 224  8640 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 225  8641 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 226  8642
 227  8642              ;---------------------------------------------------------------------------------------------------------------
 228  8642
 229  8642              ; Gestión de FRAMES.
 230  8642
 231  8642 00           Switch db 0
 232  8643
 233  8643              ; Variables de Raster y localización en pantalla.
 234  8643
 235  8643 00 FF        Temp_Raster defw $ff00
 236  8645
 237  8645              ; Rutina principal *************************************************************************************************************************************************************************
 238  8645              ;
 239  8645              ;	14/11/22
 240  8645
 241  8645 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 242  8648
 243  8648 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 244  864A ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 245  864C ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 246  864E F3           	DI
 247  864F
 248  864F 3E 07        	ld a,%00000111
 249  8651 CD 86 93     	call Cls
 250  8654
 251  8654              ;	call Pinta_FILAS
 252  8654
 253  8654 CD 36 89     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 254  8657
 255  8657 21 22 86     	ld hl,Numero_de_entidades
 256  865A 46           	ld b,(hl)
 257  865B 04           	inc b
 258  865C 05           	dec b
 259  865D 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 260  865F
 261  865F CD 04 88     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 262  8662              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 263  8662
 264  8662              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 265  8662              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 266  8662              ;	Pintamos el resto de entidades:
 267  8662
 268  8662              ;	INICIA ENTIDADES !!!!!
 269  8662
 270  8662 C5           1 push bc  												; Guardo el contador de entidades.
 271  8663 CD 5E 88      	call Inicia_Puntero_objeto
 272  8666 CD D6 8D     	call Draw
 273  8669 CD A0 7F     	call Guarda_foto_registros
 274  866C CD A6 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 275  866F C1           	pop bc
 276  8670 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 277  8672
 278  8672              ; 	INICIA AMADEUS !!!!!
 279  8672
 280  8672 CD 0D 89     3 call Restore_Amadeus
 281  8675 CD 5E 88     	call Inicia_Puntero_objeto
 282  8678 CD D6 8D     	call Draw
 283  867B CD A0 7F     	call Guarda_foto_registros
 284  867E
 285  867E 11 76 84     	ld de,Amadeus_db
 286  8681 CD 1F 89     	call Store_Amadeus
 287  8684
 288  8684              ; 	INICIA DISPAROS !!!!!
 289  8684
 290  8684 CD 1A 88     	call Inicia_Puntero_Disparo_Entidades
 291  8687 CD 21 88     	call Inicia_Puntero_Disparo_Amadeus
 292  868A
 293  868A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 294  868A
 295  868A CD 04 88     	call Inicia_punteros_de_entidades
 296  868D CD E6 88     	call Restore_Primera_entidad
 297  8690
 298  8690 3A 22 86     	ld a,(Numero_de_entidades)
 299  8693 3C           	inc a
 300  8694 32 23 86     	ld (Numero_de_malotes),a
 301  8697
 302  8697 FB           2 ei
 303  8698 18 FD        	jr 2B
 304  869A
 305  869A              ; -----------------------------------------------------------------------------------
 306  869A
 307  869A              Frame
 308  869A
 309  869A              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 310  869A              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 311  869A
 312  869A              ; PINTAMOS.
 313  869A
 314  869A 3E 02            ld a,2
 315  869C D3 FE            out ($fe),a
 316  869E CD DA 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 317  86A1 CD 13 91     	call Extrae_foto_disparos
 318  86A4 3E 01            ld a,1
 319  86A6 D3 FE            out ($fe),a
 320  86A8
 321  86A8              ; ----------------------------------------------------------------------
 322  86A8
 323  86A8              ; RELOJES.
 324  86A8
 325  86A8 21 3C 86     	ld hl,Habilita_disparo_Amadeus
 326  86AB 11 3E 86     	ld de,Temporiza_disparo_Amadeus
 327  86AE CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 328  86B1
 329  86B1 21 3F 86     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 330  86B4 11 41 86     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 331  86B7 CD D5 7F     	call Habilita_disparos
 332  86BA
 333  86BA              ; COLISIONES.
 334  86BA
 335  86BA CD 78 8D     	call Selector_de_impactos
 336  86BD
 337  86BD              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 338  86BD              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 339  86BD              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 340  86BD
 341  86BD AF           	xor a
 342  86BE 32 31 86     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 343  86C1
 344  86C1 CD 04 88     	call Inicia_punteros_de_entidades
 345  86C4 CD E6 88     12 call Restore_Primera_entidad
 346  86C7
 347  86C7 3A DE 85     	ld a,(Filas)
 348  86CA A7           	and a
 349  86CB 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 350  86CD CD F8 88     	call Incrementa_punteros_entidades
 351  86D0 18 F2        	jr 12B
 352  86D2
 353  86D2              ; ---------------------------------------------------------------------------------------
 354  86D2
 355  86D2 CD F8 8B     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 356  86D5 21 00 70     	ld hl,Album_de_fotos
 357  86D8 22 28 86         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 358  86DB              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 359  86DB 3A 22 86     	ld a,(Numero_de_entidades)
 360  86DE 47               ld b,a
 361  86DF A7           	and a
 362  86E0 28 57        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 363  86E2
 364  86E2              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 365  86E2
 366  86E2              ; Código que ejecutamos con cada entidad:
 367  86E2
 368  86E2              ; Impacto ???
 369  86E2
 370  86E2 3A F7 85     2 ld a,(Impacto)
 371  86E5 A7           	and a
 372  86E6 28 0D        	jr z,8F
 373  86E8
 374  86E8              ; Hay Impacto en esta entidad.
 375  86E8
 376  86E8 C5           	push bc 											; Guardo el nº de entidades.
 377  86E9
 378  86E9 CD BB 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 379  86EC CD 28 89     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 380  86EF 21 22 86     	ld hl,Numero_de_entidades							; Una alimaña menos.
 381  86F2 35           	dec (hl)
 382  86F3
 383  86F3 18 3E        	jr 6F
 384  86F5
 385  86F5              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 386  86F5              ; _con las coordenadas de la entidad almacenada en DRAW.
 387  86F5
 388  86F5 3A 1A 86     8 ld a,(Ctrl_1)
 389  86F8 CB 57        	bit 2,a
 390  86FA 28 1D        	jr z,7F
 391  86FC
 392  86FC C5           	push bc 											; Guardo el nº de entidades.
 393  86FD
 394  86FD 2A 34 86     	ld hl,(Coordenadas_disparo_certero)
 395  8700 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 396  8701              ;														; E contiene la coordenada_X del disparo.
 397  8701 2A E4 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 398  8704              ;														; H Coordenado_y de la entidad.
 399  8704 A7           	and a
 400  8705 ED 52        	sbc hl,de
 401  8707 CD AF 8D     	call Determina_resultado_comparativa
 402  870A 04           	inc b
 403  870B 05           	dec b
 404  870C 28 0A        	jr z,11F
 405  870E
 406  870E              ; ----- ----- -----
 407  870E
 408  870E 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 409  8710 32 F7 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 410  8713 21 1A 86     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 411  8716 CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 412  8718
 413  8718 C1           11 pop bc
 414  8719 C5           7 push bc
 415  871A
 416  871A CD 6C 87     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
 417  871D
 418  871D 3A 0C 86     	ld a,(Ctrl_0)
 419  8720 CB 67        	bit 4,a
 420  8722 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 421  8724
 422  8724              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 423  8724              ; [[[
 424  8724 CD 81 89     	call Detecta_disparo_entidad
 425  8727              ; ]]]
 426  8727 CD CB 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 427  872A
 428  872A 21 0C 86     	ld hl,Ctrl_0
 429  872D CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 430  872F AF           	xor a
 431  8730 32 0D 86     	ld (Obj_dibujado),a
 432  8733
 433  8733 CD A6 88     6 call Store_Restore_entidades
 434  8736
 435  8736 C1           	pop bc
 436  8737 10 A9        	djnz 2B
 437  8739
 438  8739              ; Tras la gestión de las entidades, ... AMADEUS.
 439  8739
 440  8739 CD 0D 89     4 call Restore_Amadeus
 441  873C
 442  873C 3A F7 85     	ld a,(Impacto)
 443  873F A7           	and a
 444  8740 20 FE        	jr nz,$
 445  8742
 446  8742              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 447  8742
 448  8742 CD 9C 87     	call Mov_Amadeus
 449  8745
 450  8745 3A 0C 86     	ld a,(Ctrl_0)
 451  8748 CB 67        	bit 4,a
 452  874A 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 453  874C
 454  874C CD CB 87     	call Guarda_foto_entidad_a_pintar
 455  874F
 456  874F 21 0C 86     3 ld hl,Ctrl_0
 457  8752 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 458  8754 AF           	xor a
 459  8755 32 0D 86     	ld (Obj_dibujado),a
 460  8758
 461  8758 11 76 84     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 462  875B CD 1F 89     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 463  875E
 464  875E CD 16 8C     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 465  8761
 466  8761              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 467  8761
 468  8761 CD 40 88     	call Calcula_numero_de_disparotes
 469  8764 CD 28 88     9 call Calcula_numero_de_malotes
 470  8767
 471  8767 3E 04        	ld a,4
 472  8769 D3 FE        	out ($fe),a
 473  876B
 474  876B C9           	ret
 475  876C
 476  876C              ; --------------------------------------------------------------------------------------------------------------
 477  876C              ;
 478  876C              ;	27/03/23
 479  876C
 480  876C              Mov_obj
 481  876C
 482  876C              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 483  876C
 484  876C AF           	xor a
 485  876D 32 0D 86     	ld (Obj_dibujado),a
 486  8770 32 0C 86     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 487  8773              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 488  8773              ; 														; _de la entidad.
 489  8773 CD D5 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 490  8776              ;														; Obj_dibujado="0".
 491  8776              ; Movemos Entidades malignas.
 492  8776
 493  8776 21 0F 86     	ld hl,Puntero_indice_mov			 				; (hl)="0", objeto estático!!!.
 494  8779 34           	inc (hl)
 495  877A 35           	dec (hl)                                            ; Salimos de la rutina.
 496  877B C8           	ret z
 497  877C
 498  877C CD 74 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 499  877F
 500  877F 3A 0C 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 501  8782 CB 67        	bit 4,a
 502  8784 C8           	ret z
 503  8785
 504  8785              ; Ha habido desplazamiento de la entidad maligna.
 505  8785              ; Ha llegado a zona de AMADEUS ???
 506  8785
 507  8785 3A E5 85     	ld a,(Coordenada_y)
 508  8788 FE 14        	cp $14
 509  878A D4 47 8B     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 510  878D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 511  878D              ; ---------
 512  878D
 513  878D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 514  878F 32 0D 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 515  8792 CD D5 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 516  8795 CD EC 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 517  8798 CD BB 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 518  879B C9           	ret													; _de la misma.
 519  879C
 520  879C              ; --------------------------------------------------------------------------------------------------------------
 521  879C              ;
 522  879C              ;	29/1/23
 523  879C
 524  879C              Mov_Amadeus
 525  879C
 526  879C AF           	xor a
 527  879D 32 0D 86     	ld (Obj_dibujado),a
 528  87A0 CD D5 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 529  87A3              ;														; Obj_dibujado="0".
 530  87A3              ; Movemos Amadeus.
 531  87A3
 532  87A3 CD 4A 89     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 533  87A6 3A 0C 86     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 534  87A9 CB 67        	bit 4,a
 535  87AB C8           	ret z
 536  87AC
 537  87AC              ; ---------
 538  87AC
 539  87AC 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 540  87AE 32 0D 86     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 541  87B1 CD D5 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 542  87B4 CD EC 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 543  87B7 CD BB 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 544  87BA C9           	ret													; _de la nave.
 545  87BB
 546  87BB              ; --------------------------------------------------------------------------------------------------------------
 547  87BB              ;
 548  87BB              ;	31/01/23
 549  87BB              ;
 550  87BB              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 551  87BB
 552  87BB              Guarda_foto_entidad_a_borrar
 553  87BB
 554  87BB CD B0 90     	call Prepara_draw
 555  87BE CD EA 8F     	call calcula_CColumnass
 556  87C1 CD 21 90     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 557  87C4 CD 76 90     	call Define_rutina_de_impresion
 558  87C7 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 559  87CA C9           	ret
 560  87CB
 561  87CB              ; --------------------------------------------------------------------------------------------------------------
 562  87CB              ;
 563  87CB              ;	31/01/23
 564  87CB              ;
 565  87CB              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 566  87CB              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 567  87CB
 568  87CB              Guarda_foto_entidad_a_pintar
 569  87CB
 570  87CB CD F8 87     	call Repone_pintar
 571  87CE CD D6 8D     	call Draw
 572  87D1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 573  87D4 C9           	ret
 574  87D5
 575  87D5              ; --------------------------------------------------------------------------------------------------------------
 576  87D5              ;
 577  87D5              ;
 578  87D5
 579  87D5 21 DE 85     Prepara_var_pintado_borrado	ld hl,Filas
 580  87D8 3A 0D 86     	ld a,(Obj_dibujado)
 581  87DB A7           	and a
 582  87DC 28 05        	jr z,1F
 583  87DE 11 02 86     	ld de,Variables_de_pintado
 584  87E1 18 03        	jr 2F
 585  87E3 11 F8 85     1 ld de,Variables_de_borrado
 586  87E6 01 08 00     2 ld bc,8
 587  87E9 ED B0        	ldir
 588  87EB C9           	ret
 589  87EC
 590  87EC              ; --------------------------------------------------------------------------------------------------------------
 591  87EC
 592  87EC 21 F8 85     Repone_borrar ld hl,Variables_de_borrado
 593  87EF 11 DE 85     	ld de,Filas
 594  87F2 01 08 00     	ld bc,8
 595  87F5 ED B0        	ldir
 596  87F7 C9           	ret
 597  87F8
 598  87F8 21 02 86     Repone_pintar ld hl,Variables_de_pintado
 599  87FB 11 DE 85     	ld de,Filas
 600  87FE 01 08 00     	ld bc,8
 601  8801 ED B0        	ldir
 602  8803 C9           	ret
 603  8804
 604  8804              ; *************************************************************************************************************************************************************
 605  8804              ;
 606  8804              ; 8/1/23
 607  8804              ;
 608  8804              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 609  8804              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 610  8804              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 611  8804
 612  8804              ; Destruye HL y DE !!!!!
 613  8804
 614  8804              Inicia_punteros_de_entidades
 615  8804
 616  8804 21 68 84     	ld hl,Indice_de_entidades
 617  8807 CD 58 88         call Extrae_address
 618  880A 22 1C 86         ld (Puntero_store_entidades),hl
 619  880D 21 6A 84     	ld hl,Indice_de_entidades+2
 620  8810 22 20 86     	ld (Indice_restore),hl
 621  8813 CD 58 88     	call Extrae_address
 622  8816 22 1E 86     	ld (Puntero_restore_entidades),hl
 623  8819 C9               ret
 624  881A
 625  881A              ; *************************************************************************************************************************************************************
 626  881A              ;
 627  881A              ; 8/1/23
 628  881A              ;
 629  881A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 630  881A
 631  881A 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 632  881D 22 2D 86     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 633  8820 C9           	ret
 634  8821 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 635  8824 22 2F 86     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 636  8827 C9           	ret
 637  8828
 638  8828              ; -------------------------------------------------------------------------------------------------------------
 639  8828              ;
 640  8828              ; 28/2/23
 641  8828              ;
 642  8828
 643  8828              Calcula_numero_de_malotes
 644  8828
 645  8828 21 00 70     	ld hl,Album_de_fotos
 646  882B EB           	ex de,hl
 647  882C 2A 28 86     	ld hl,(Stack_snapshot)
 648  882F
 649  882F 06 00        	ld b,0
 650  8831 7D           	ld a,l
 651  8832 93           	sub e
 652  8833 28 07        	jr z,1F
 653  8835
 654  8835              ; Nº de malotes no es "0".
 655  8835
 656  8835 D6 06        2 sub 6
 657  8837 04           	inc b
 658  8838 A7           	and a
 659  8839 20 FA        	jr nz,2B
 660  883B 78           	ld a,b
 661  883C
 662  883C 32 23 86     1 ld (Numero_de_malotes),a
 663  883F C9           	ret
 664  8840
 665  8840              ; -------------------------------------------------------------------------------------------------------------
 666  8840              ;
 667  8840              ; 28/2/23
 668  8840              ;
 669  8840
 670  8840              Calcula_numero_de_disparotes
 671  8840
 672  8840 21 60 70     	ld hl,Album_de_fotos_disparos
 673  8843 EB           	ex de,hl
 674  8844 2A 2A 86     	ld hl,(Stack_snapshot_disparos)
 675  8847
 676  8847 06 00        	ld b,0
 677  8849 7D           	ld a,l
 678  884A 93           	sub e
 679  884B 28 07        	jr z,1F
 680  884D
 681  884D              ; Nº de malotes no es "0".
 682  884D
 683  884D D6 06        2 sub 6
 684  884F 04           	inc b
 685  8850 A7           	and a
 686  8851 20 FA        	jr nz,2B
 687  8853 78           	ld a,b
 688  8854
 689  8854 32 2C 86     1 ld (Numero_de_disparotes),a
 690  8857 C9           	ret
 691  8858              ; *************************************************************************************************************************************************************
 692  8858              ;
 693  8858              ; 20/10/22
 694  8858              ;
 695  8858              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 696  8858              ;
 697  8858              ; Destruye el puntero y DE !!!!!
 698  8858
 699  8858 5E           Extrae_address ld e,(hl)
 700  8859 23           	inc hl
 701  885A 56           	ld d,(hl)
 702  885B 2B           	dec hl
 703  885C EB           	ex de,hl
 704  885D C9           	ret
 705  885E
 706  885E              ; *************************************************************************************************************************************************************
 707  885E              ;
 708  885E              ;	7/2/23
 709  885E              ;
 710  885E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 711  885E              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 712  885E              ;
 713  885E              ;   Destruye HL y BC !!!!!,
 714  885E              ;
 715  885E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 716  885E              ;					"0" ..... Izquierda.
 717  885E
 718  885E              Inicia_Puntero_objeto
 719  885E
 720  885E 3A F2 85     	ld a,(Cuad_objeto)
 721  8861 E6 01        	and 1
 722  8863 F5           	push af
 723  8864 CC 82 88     	call z,Inicia_puntero_objeto_izq
 724  8867 F1           	pop af
 725  8868 28 2B        	jr z,1F
 726  886A CD 6F 88     	call Inicia_puntero_objeto_der
 727  886D 18 26        	jr 1F
 728  886F
 729  886F              ; Arrancamos desde la parte izquierda de la pantalla.
 730  886F              ; Iniciamos (Indice_Sprite_der).
 731  886F
 732  886F 2A E8 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 733  8872 22 EC 85     	ld (Puntero_DESPLZ_der),hl
 734  8875 CD 58 88     	call Extrae_address
 735  8878 22 E2 85     	ld (Puntero_objeto),hl
 736  887B
 737  887B 2A EA 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 738  887E 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 739  8881 C9           	ret
 740  8882
 741  8882              ; Arrancamos desde la parte derecha de la pantalla.
 742  8882              ; Iniciamos (Indice_Sprite_izq).
 743  8882
 744  8882 2A EA 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 745  8885 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 746  8888 CD 58 88     	call Extrae_address
 747  888B 22 E2 85     	ld (Puntero_objeto),hl
 748  888E
 749  888E 2A E8 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 750  8891 22 EC 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 751  8894 C9           	ret
 752  8895
 753  8895              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 754  8895
 755  8895 21 38 83     1 ld hl,Amadeus
 756  8898 ED 4B E2 85  	ld bc,(Puntero_objeto)
 757  889C B7 ED 42     	sub hl,bc
 758  889F C0           	ret nz
 759  88A0 21 0C 86     	ld hl,Ctrl_0
 760  88A3 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 761  88A5 C9           	ret 												; _de nuestra nave en los extremos.
 762  88A6
 763  88A6              ; *************************************************************************************************************************************************************
 764  88A6              ;
 765  88A6              ;	8/1/23
 766  88A6              ;
 767  88A6              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 768  88A6              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 769  88A6
 770  88A6              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 771  88A6              ;	_de la 2ª y 3ª entidad respectivamente.
 772  88A6
 773  88A6              Store_Restore_entidades
 774  88A6
 775  88A6 3A 22 86     	ld a,(Numero_de_entidades)
 776  88A9 A7           	and a
 777  88AA C8           	ret z												 ; Salimos de la rutina si no quedan entidades vivitas y coleando.
 778  88AB
 779  88AB E5           	push hl
 780  88AC D5           	push de
 781  88AD C5            	push bc
 782  88AE
 783  88AE              ;	STORE !!!!!
 784  88AE              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 785  88AE
 786  88AE 21 DE 85     	ld hl,Filas
 787  88B1 ED 5B 1C 86  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 788  88B5 01 3C 00     	ld bc,60
 789  88B8 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 790  88BA
 791  88BA              ; 	Entidad_sospechosa. 20/4/23
 792  88BA
 793  88BA 3A F7 85     	ld a,(Impacto)
 794  88BD A7           	and a
 795  88BE 28 0C        	jr z,1F
 796  88C0
 797  88C0 2A 1C 86     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 798  88C3 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 799  88C6 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 800  88C7 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 801  88C9 22 32 86     	ld (Entidad_sospechosa_de_colision),hl
 802  88CC
 803  88CC              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 804  88CC
 805  88CC 2A 1E 86     1 ld hl,(Puntero_restore_entidades)
 806  88CF 7E           	ld a,(hl)
 807  88D0 A7           	and a
 808  88D1 F5           	push af
 809  88D2 28 08        	jr z,2F
 810  88D4
 811  88D4 11 DE 85     	ld de,Filas
 812  88D7 01 3C 00     	ld bc,60
 813  88DA ED B0        	ldir
 814  88DC
 815  88DC CD F8 88     2 call Incrementa_punteros_entidades
 816  88DF F1           	pop af
 817  88E0 28 EA        	jr z,1B
 818  88E2
 819  88E2 C1           	pop bc
 820  88E3 D1           	pop de
 821  88E4 E1           	pop hl
 822  88E5
 823  88E5 C9           	ret
 824  88E6
 825  88E6              ; **************************************************************************************************
 826  88E6              ;
 827  88E6              ;	29/10/22
 828  88E6              ;
 829  88E6              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 830  88E6
 831  88E6 E5           Restore_Primera_entidad push hl
 832  88E7 D5           	push de
 833  88E8 C5            	push bc
 834  88E9 2A 1C 86     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 835  88EC 11 DE 85     	ld de,Filas
 836  88EF 01 3C 00     	ld bc,60
 837  88F2 ED B0        	ldir
 838  88F4 C1           	pop bc
 839  88F5 D1           	pop de
 840  88F6 E1           	pop hl
 841  88F7 C9           	ret
 842  88F8
 843  88F8
 844  88F8              ; **************************************************************************************************
 845  88F8              ;
 846  88F8              ;	08/05/23
 847  88F8              ;
 848  88F8              ;	Incrementamos los dos punteros de entidades. (+1).
 849  88F8
 850  88F8 2A 1E 86     Incrementa_punteros_entidades ld hl,(Puntero_restore_entidades)
 851  88FB 22 1C 86     	ld (Puntero_store_entidades),hl
 852  88FE 2A 20 86     	ld hl,(Indice_restore)
 853  8901 23           	inc hl
 854  8902 23           	inc hl
 855  8903 22 20 86     	ld (Indice_restore),hl
 856  8906 CD 58 88         call Extrae_address
 857  8909 22 1E 86         ld (Puntero_restore_entidades),hl
 858  890C C9               ret
 859  890D
 860  890D              ; **************************************************************************************************
 861  890D              ;
 862  890D              ;	25/01/23
 863  890D              ;
 864  890D              ;	Restore_Amadeus
 865  890D              ;
 866  890D              ;	Cargamos en DRAW los parámetros de Amadeus.
 867  890D              ;
 868  890D
 869  890D E5           Restore_Amadeus	push hl
 870  890E D5           	push de
 871  890F C5            	push bc
 872  8910 21 76 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 873  8913 11 DE 85     	ld de,Filas
 874  8916 01 3C 00     	ld bc,60
 875  8919 ED B0        	ldir
 876  891B C1           	pop bc
 877  891C D1           	pop de
 878  891D E1           	pop hl
 879  891E C9           	ret
 880  891F
 881  891F              ; *************************************************************************************************************************************************************
 882  891F              ;
 883  891F              ;	29/04/23
 884  891F              ;
 885  891F              ;	Store_Amadeus
 886  891F              ;
 887  891F              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
 888  891F              ;
 889  891F              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
 890  891F              ;
 891  891F              ;	DESTRUYE: HL y BC y DE.
 892  891F
 893  891F 21 DE 85     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 894  8922 01 3C 00     	ld bc,60
 895  8925 ED B0        	ldir
 896  8927 C9           	ret
 897  8928
 898  8928              ; -----------------------------------------------------------
 899  8928              ;
 900  8928              ;	27/04/23
 901  8928              ;
 902  8928              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 903  8928              ;
 904  8928              ;	Destruye: HL,BC,DE,A
 905  8928
 906  8928 21 DE 85     Borra_datos_entidad ld hl,Filas
 907  892B 01 3B 00     	ld bc,59
 908  892E AF           	xor a
 909  892F 77           	ld (hl),a
 910  8930 11 DF 85     	ld de,Filas+1
 911  8933 ED B0        	ldir
 912  8935 C9           	ret
 913  8936
 914  8936              ; -----------------------------------------------------------
 915  8936
 916  8936              ; Teclado.
 917  8936
 918  8936 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 919  8938 DB FE        	in a,($fe)
 920  893A E6 01        	and $01
 921  893C 28 02        	jr z,1f
 922  893E 18 F6        	jr Pulsa_ENTER
 923  8940 C9           1 ret
 924  8941
 925  8941              ; **************************************************************************************************
 926  8941              ;
 927  8941              ; Temporización.
 928  8941
 929  8941              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 930  8941              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 931  8941              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 932  8941              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 933  8941
 934  8941              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 935  8941              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 936  8941              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 937  8941
 938  8941              ; A partir de $4f61 no hace falta DELAY.
 939  8941
 940  8941              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 941  8941
 942  8941 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 943  8944 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 944  8945 78           	LD A,B
 945  8946 A7           	AND A
 946  8947 20 FB        	JR NZ,wait
 947  8949 C9           	RET
 948  894A
 949  894A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 950  894A              ;
 951  894A              ;	5/3/23
 952  894A              ;
 953  894A              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 954  894A
 955  894A              Movimiento_Amadeus
 956  894A
 957  894A              ; Disparo.
 958  894A
 959  894A 3A 3C 86     	ld a,(Habilita_disparo_Amadeus)
 960  894D A7           	and a
 961  894E 20 02        	jr nz,1F
 962  8950 18 15        	jr 2F
 963  8952
 964  8952 3E F7        1 ld a,$f7													; "5" para disparar.
 965  8954 DB FE        	in a,($fe)
 966  8956 E6 10        	and $10
 967  8958
 968  8958 F5           	push af
 969  8959 CC C3 89     	call z,Genera_disparo
 970  895C F1           	pop af
 971  895D 20 08        	jr nz,2F
 972  895F
 973  895F 3A 3C 86     	ld a,(Habilita_disparo_Amadeus)
 974  8962 EE 01        	xor 1
 975  8964 32 3C 86     	ld (Habilita_disparo_Amadeus),a
 976  8967
 977  8967 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 978  8969 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 979  896B E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 980  896D CC 14 95         call z,Mov_left											;			"			"			"			"			"			"			"			"
 981  8970 3E F7        	ld a,$f7
 982  8972 DB FE        	in a,($fe)
 983  8974 E6 01        	and $01
 984  8976 C8           	ret z
 985  8977
 986  8977 3E F7        	ld a,$f7
 987  8979 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 988  897B E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 989  897D CC F6 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 990  8980 C9           	ret
 991  8981
 992  8981              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 993  8981              ;
 994  8981              ;	Rutina provisional para que los malotes cagen balas.
 995  8981
 996  8981              Detecta_disparo_entidad
 997  8981
 998  8981 3A 3F 86     	ld a,(Habilita_disparo_entidad)
 999  8984 A7           	and a
1000  8985 C8           	ret z
1001  8986 3E 7F        	ld a,$7f
1002  8988 DB FE        	in a,($fe)
1003  898A E6 01        	and 1
1004  898C C0           	ret nz
1005  898D CD C3 89     	call Genera_disparo
1006  8990 C9           	ret
1007  8991
1008  8991              ; Pinta indicadores de FILAS. ------------------------------------------------------
1009  8991
1010  8991 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
1011  8994
1012  8994              ; ----------
1013  8994 06 20        	ld b,32
1014  8996 E5           2 push hl
1015  8997 C5           	push bc
1016  8998              ; ----------
1017  8998
1018  8998 06 BF        	ld b,$bf
1019  899A 36 80        1 ld (hl),%10000000
1020  899C CD BC 90     	call NextScan
1021  899F 10 F9        	djnz 1B
1022  89A1
1023  89A1              ; ----------
1024  89A1 C1           	pop bc
1025  89A2 E1           	pop hl
1026  89A3 2C           	inc l
1027  89A4 10 F0        	djnz 2B
1028  89A6              ; ----------
1029  89A6
1030  89A6 06 03        	ld b,3
1031  89A8 21 00 47         ld hl,$4700
1032  89AB CD B1 89     3 call Bucle_1
1033  89AE 10 FB            djnz 3B
1034  89B0 C9               ret
1035  89B1
1036  89B1 C5           Bucle_1 push bc
1037  89B2 E5                   push hl
1038  89B3 D1                   pop de
1039  89B4 13                   inc de
1040  89B5 01 FF 00             ld bc,255
1041  89B8 36 FF                ld (hl),255
1042  89BA ED B0                ldir
1043  89BC 23                   inc hl
1044  89BD 3E 07                ld a,7
1045  89BF 84                   add a,h
1046  89C0 67                   ld h,a
1047  89C1 C1                   pop bc
1048  89C2 C9                   ret
1049  89C3
1050  89C3              ; ---------------------------------------------------------------
1051  89C3
1052  89C3              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 89C3              ; ******************************************************************************************************************************************************************************************
   2+ 89C3              ;
   3+ 89C3              ;   17/04/23
   4+ 89C3              ;
   5+ 89C3              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 89C3              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 89C3              ;
   8+ 89C3              ;
   9+ 89C3              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 89C3              ;
  11+ 89C3              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 89C3              ;               _ hacen las entidades hacia abajo.
  13+ 89C3              ;
  14+ 89C3              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 89C3              ;
  16+ 89C3              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 89C3              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 89C3              ;
  19+ 89C3              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 89C3              ;           _ la bala.
  21+ 89C3              ;
  22+ 89C3              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 89C3              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 89C3              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 89C3              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 89C3              ;           _ en el momento de generarse la bala)).
  27+ 89C3
  28+ 89C3              Genera_disparo
  29+ 89C3
  30+ 89C3              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 89C3              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 89C3              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 89C3              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 89C3              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 89C3              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 89C3              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 89C3
  38+ 89C3              ; Exclusiones:
  39+ 89C3
  40+ 89C3 3A 16 86         ld a,(Columnas)
  41+ 89C6 47               ld b,a
  42+ 89C7 3A DF 85         ld a,(Columns)
  43+ 89CA B8               cp b
  44+ 89CB C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 89CC
  46+ 89CC              ; ----- ----- -----
  47+ 89CC
  48+ 89CC 3A 0C 86         ld a,(Ctrl_0)
  49+ 89CF CB 77            bit 6,a
  50+ 89D1 20 06            jr nz,14F
  51+ 89D3
  52+ 89D3 3A E5 85         ld a,(Coordenada_y)
  53+ 89D6 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 89D8 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 89D9
  56+ 89D9 21 00 80     14 ld hl,Indice_disparo
  57+ 89DC 3A E6 85         ld a,(CTRL_DESPLZ)
  58+ 89DF 4F               ld c,a
  59+ 89E0 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 89E2              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 89E2              ;                                            ""        ""       "f9", B="1"
  62+ 89E2              ;                                            ""        ""       "fb", B="2"
  63+ 89E2              ;                                            ""        ""       "fb", B="3"
  64+ 89E2 A7               and a
  65+ 89E3 28 10            jr z,1F
  66+ 89E5 E6 01            and 1
  67+ 89E7 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 89E8
  69+ 89E8 79               ld a,c
  70+ 89E9 16 F9            ld d,$f9
  71+ 89EB 23           2 inc hl
  72+ 89EC 23               inc hl
  73+ 89ED 04               inc b
  74+ 89EE BA               cp d
  75+ 89EF 28 04            jr z,1F
  76+ 89F1 14               inc d
  77+ 89F2 14               inc d
  78+ 89F3 18 F6            jr 2B
  79+ 89F5
  80+ 89F5 CD 58 88     1 call Extrae_address
  81+ 89F8 E5               push hl
  82+ 89F9 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 89FB DD 21 4F 93  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 89FF
  85+ 89FF              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 89FF              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 89FF
  88+ 89FF 3A 0C 86         ld a,(Ctrl_0)
  89+ 8A02 CB 77            bit 6,a
  90+ 8A04 20 04            jr nz,19F
  91+ 8A06
  92+ 8A06 AF               xor a
  93+ 8A07 32 3F 86         ld (Habilita_disparo_entidad),a
  94+ 8A0A
  95+ 8A0A 3A F2 85     19 ld a,(Cuad_objeto)
  96+ 8A0D FE 02            cp 2
  97+ 8A0F 38 66            jr c,3F
  98+ 8A11 28 64            jr z,3F
  99+ 8A13
 100+ 8A13              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8A13
 102+ 8A13 E6 01            and 1
 103+ 8A15 28 30            jr z,4F
 104+ 8A17
 105+ 8A17              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8A17              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8A17              ;
 108+ 8A17              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8A17              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8A17              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8A17
 112+ 8A17 2A E0 85     	ld hl,(Posicion_actual)
 113+ 8A1A
 114+ 8A1A              ;   Amadeus o entidad ???.
 115+ 8A1A
 116+ 8A1A 3A 0C 86         ld a,(Ctrl_0)
 117+ 8A1D CB 77            bit 6,a
 118+ 8A1F 28 0A            jr z,8F
 119+ 8A21
 120+ 8A21              ; 	Dispara Amadeus.
 121+ 8A21
 122+ 8A21 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8A23 CD CB 90         call PreviousScan
 124+ 8A26 CD CB 90         call PreviousScan
 125+ 8A29
 126+ 8A29              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8A29              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8A29              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8A29              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8A29
 131+ 8A29 18 11            jr 10F
 132+ 8A2B
 133+ 8A2B              ; 	Dispara Entidad.
 134+ 8A2B
 135+ 8A2B 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8A2E              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8A2E
 138+ 8A2E              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8A2E              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8A2E
 141+ 8A2E C5               push bc
 142+ 8A2F 06 10            ld b,16
 143+ 8A31 CD BC 90     9 call NextScan
 144+ 8A34 10 FB            djnz 9B
 145+ 8A36 C1               pop bc
 146+ 8A37 CD A1 8A         call Ajusta_disparo_parte_izquierda
 147+ 8A3A 18 06            jr 17F
 148+ 8A3C
 149+ 8A3C              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8A3C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8A3C              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8A3C              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8A3C
 154+ 8A3C CD A1 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 8A3F CD 16 8B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8A42              ;                                                      ; _al generar el disparo.
 157+ 8A42
 158+ 8A42              ; 	LLegados a este punto tendremos:
 159+ 8A42              ;
 160+ 8A42              ;       Puntero_objeto_disparo en IY.
 161+ 8A42              ;       Rutinas_de_impresion en IX.
 162+ 8A42              ;       Puntero_de_impresion en HL.
 163+ 8A42              ;       Impacto/Dirección en BC.
 164+ 8A42
 165+ 8A42 CD A9 8A     17 call Almacena_disparo
 166+ 8A45 18 52            jr 6F                                             ; RET.
 167+ 8A47
 168+ 8A47              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8A47              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8A47              ;
 171+ 8A47              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8A47              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8A47              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8A47
 175+ 8A47 2A E0 85     4 ld hl,(Posicion_actual)
 176+ 8A4A
 177+ 8A4A              ;   Amadeus o entidad ???.
 178+ 8A4A
 179+ 8A4A 3A 0C 86         ld a,(Ctrl_0)
 180+ 8A4D CB 77            bit 6,a
 181+ 8A4F 28 0A            jr z,11F
 182+ 8A51
 183+ 8A51              ; 	Dispara Amadeus.
 184+ 8A51
 185+ 8A51 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8A53 CD CB 90         call PreviousScan
 187+ 8A56 CD CB 90         call PreviousScan
 188+ 8A59
 189+ 8A59              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8A59              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8A59              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8A59              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8A59
 194+ 8A59 18 11            jr 13F
 195+ 8A5B
 196+ 8A5B              ; 	Dispara Entidad.
 197+ 8A5B
 198+ 8A5B 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A5E              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A5E
 201+ 8A5E              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A5E              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A5E
 204+ 8A5E C5               push bc
 205+ 8A5F 06 10            ld b,16
 206+ 8A61 CD BC 90     12 call NextScan
 207+ 8A64 10 FB            djnz 12B
 208+ 8A66 C1               pop bc
 209+ 8A67
 210+ 8A67 CD 9A 8A         call Ajusta_disparo_parte_derecha
 211+ 8A6A 18 06            jr 18F
 212+ 8A6C
 213+ 8A6C              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A6C              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A6C              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A6C              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A6C
 218+ 8A6C CD 9A 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A6F CD 16 8B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A72              ;                                                       ; _al generar el disparo.
 221+ 8A72
 222+ 8A72              ; LLegados a este punto tendremos:
 223+ 8A72              ;
 224+ 8A72              ;       Puntero_objeto_disparo en IY.
 225+ 8A72              ;       Rutinas_de_impresion en IX.
 226+ 8A72              ;       Puntero_de_impresion en HL.
 227+ 8A72              ;       Impacto/Dirección en BC.
 228+ 8A72
 229+ 8A72 CD A9 8A     18 call Almacena_disparo
 230+ 8A75 18 22            jr 6F                                               ; RET.
 231+ 8A77
 232+ 8A77              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A77
 234+ 8A77 28 11        3 jr z,5F
 235+ 8A79
 236+ 8A79              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A79              ;
 238+ 8A79              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A79              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A79              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A79              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A79
 243+ 8A79              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A79              ;	   ""        ""       "f9", B="1"
 245+ 8A79              ;	   ""        ""       "fb", B="2"
 246+ 8A79              ; 	   ""        ""       "fb", B="3"
 247+ 8A79
 248+ 8A79 2A E0 85     	ld hl,(Posicion_actual)
 249+ 8A7C CD BC 90     	call NextScan
 250+ 8A7F
 251+ 8A7F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A7F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A7F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A7F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A7F
 256+ 8A7F CD A1 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A82
 258+ 8A82              ; 	No se produce impacto. B="$80"
 259+ 8A82              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A82
 261+ 8A82 01 80 80         ld bc,$8080
 262+ 8A85
 263+ 8A85              ; 	LLegados a este punto tendremos:
 264+ 8A85              ;
 265+ 8A85              ;       Puntero_objeto_disparo en IY.
 266+ 8A85              ;       Rutinas_de_impresion en IX.
 267+ 8A85              ;       Puntero_de_impresion en HL.
 268+ 8A85              ;       Impacto/Dirección en BC.
 269+ 8A85
 270+ 8A85 CD A9 8A         call Almacena_disparo
 271+ 8A88 18 0F            jr 6F                                           ; RET.
 272+ 8A8A
 273+ 8A8A              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A8A              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A8A              ;
 276+ 8A8A              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A8A              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A8A              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A8A              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A8A
 281+ 8A8A 2A E0 85     5 ld hl,(Posicion_actual)
 282+ 8A8D CD BC 90     	call NextScan
 283+ 8A90
 284+ 8A90              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A90              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A90              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A90              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A90
 289+ 8A90 CD 9A 8A         call Ajusta_disparo_parte_derecha
 290+ 8A93
 291+ 8A93              ; 	No se produce impacto. B="$80"
 292+ 8A93              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A93
 294+ 8A93 01 80 80     15 ld bc,$8080
 295+ 8A96
 296+ 8A96              ; 	LLegados a este punto tendremos:
 297+ 8A96              ;
 298+ 8A96              ;       Puntero_objeto_disparo en IY.
 299+ 8A96              ;       Rutinas_de_impresion en IX.
 300+ 8A96              ;       Puntero_de_impresion en HL.
 301+ 8A96              ;       Impacto/Dirección en BC.
 302+ 8A96
 303+ 8A96 CD A9 8A         call Almacena_disparo
 304+ 8A99
 305+ 8A99 C9           6 ret
 306+ 8A9A
 307+ 8A9A              ; ----------------------------------------------------------------
 308+ 8A9A              ;
 309+ 8A9A              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A9A              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A9A              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A9A
 313+ 8A9A 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A9B FE 02            cp 2
 315+ 8A9D 38 01            jr c,1F
 316+ 8A9F 23               inc hl
 317+ 8AA0 C9           1 ret
 318+ 8AA1
 319+ 8AA1 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8AA2 FE 01        	cp 1
 321+ 8AA4 20 01        	jr nz,1F
 322+ 8AA6 2B           	dec hl
 323+ 8AA7 2B           1 dec hl
 324+ 8AA8 C9               ret
 325+ 8AA9
 326+ 8AA9              ; ----------------------------------------------------------------
 327+ 8AA9              ;
 328+ 8AA9              ;   25/02/23
 329+ 8AA9              ;
 330+ 8AA9              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8AA9              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8AA9              ;
 333+ 8AA9              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8AA9              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8AA9
 336+ 8AA9              Almacena_disparo
 337+ 8AA9
 338+ 8AA9 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8AAA F1               pop af
 340+ 8AAB 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8AAC
 342+ 8AAC 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8AAD E6 01            and 1
 344+ 8AAF 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8AB1              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8AB1              ; 	Dispara AMADEUS.
 347+ 8AB1
 348+ 8AB1              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8AB1              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8AB1              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8AB1              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8AB1
 353+ 8AB1 C5               push bc
 354+ 8AB2 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8AB5 2A 2F 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8AB8 A7               and a
 357+ 8AB9 ED 42            sbc hl,bc
 358+ 8ABB CC 21 88         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8ABE C1               pop bc
 360+ 8ABF 28 54            jr z,4F
 361+ 8AC1
 362+ 8AC1 2A 2F 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8AC4 23               inc hl
 364+ 8AC5 23               inc hl
 365+ 8AC6 22 2F 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8AC9              ;                                                   ; _ Disparo_(+1).
 367+ 8AC9 18 18            jr 2F
 368+ 8ACB
 369+ 8ACB              ; Dispara una entidad.
 370+ 8ACB
 371+ 8ACB C5           1 push bc
 372+ 8ACC 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8ACF 2A 2D 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8AD2 A7               and a
 375+ 8AD3 ED 42            sbc hl,bc
 376+ 8AD5 CC 1A 88         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8AD8 C1               pop bc
 378+ 8AD9 28 3A            jr z,4F
 379+ 8ADB
 380+ 8ADB 2A 2D 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8ADE 23               inc hl
 382+ 8ADF 23               inc hl
 383+ 8AE0 22 2D 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8AE3              ;                                                   ; _ Disparo_(+1).
 385+ 8AE3 CD 58 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8AE6              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8AE6              ;
 388+ 8AE6              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8AE6              ;                                                     Rutinas_de_impresion en IX.
 390+ 8AE6              ;                                                     Puntero_de_impresion en HL.
 391+ 8AE6              ;                                                     Impacto/Dirección en BC.
 392+ 8AE6
 393+ 8AE6 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8AE7 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8AE8 23               inc hl                                          ; _ al siguiente.
 396+ 8AE9 A7               and a
 397+ 8AEA 20 C0            jr nz,3B
 398+ 8AEC
 399+ 8AEC 08               ex af,af
 400+ 8AED ED 73 24 86      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8AF1 F9               ld sp,hl
 402+ 8AF2
 403+ 8AF2 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8AF4 F5               push af                                         ; Puntero de impresión.
 405+ 8AF5 FD E5            push iy                                         ; Puntero objeto.
 406+ 8AF7 C5               push bc                                         ; Control.
 407+ 8AF8
 408+ 8AF8 ED 7B 24 86      ld sp,(Stack)
 409+ 8AFC
 410+ 8AFC              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8AFC
 412+ 8AFC 21 1A 86     	ld hl,Ctrl_1
 413+ 8AFF CB C6        	set 0,(hl)
 414+ 8B01
 415+ 8B01 DD E5        	push ix
 416+ 8B03 E1               pop hl
 417+ 8B04 F5               push af
 418+ 8B05 DD E1            pop ix
 419+ 8B07
 420+ 8B07 CD A0 7F     	call Guarda_foto_registros
 421+ 8B0A
 422+ 8B0A 21 1A 86     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8B0D CB 86        	res 0,(hl)
 424+ 8B0F
 425+ 8B0F              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8B0F              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8B0F
 428+ 8B0F CD 21 88         call Inicia_Puntero_Disparo_Amadeus
 429+ 8B12 CD 1A 88         call Inicia_Puntero_Disparo_Entidades
 430+ 8B15
 431+ 8B15 C9           4 ret
 432+ 8B16
 433+ 8B16              ; ----------------------------------------------------------------
 434+ 8B16              ;
 435+ 8B16              ;   4/3/23
 436+ 8B16              ;
 437+ 8B16              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8B16              ;   _ al generarse el disparo.
 439+ 8B16              ;
 440+ 8B16              ;       "$80" ..... No se produce colisión.
 441+ 8B16              ;       "$81" ..... Se produce colisión.
 442+ 8B16
 443+ 8B16              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8B16              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8B16
 446+ 8B16
 447+ 8B16 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8B18 E5               push hl                                        ; Puntero de impresión.
 449+ 8B19 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8B1B CD 37 8B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8B1E
 452+ 8B1E 7B               ld a,e
 453+ 8B1F E6 01            and 1
 454+ 8B21 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8B23
 456+ 8B23 E1               pop hl
 457+ 8B24 E5               push hl
 458+ 8B25 CD BC 90         call NextScan
 459+ 8B28
 460+ 8B28 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8B29 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8B2B 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8B2D              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8B2D 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8B2F CD 37 8B         call Bucle_2
 466+ 8B32
 467+ 8B32 43           2 ld b,e
 468+ 8B33 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8B34 FD E1            pop iy
 470+ 8B36 C9               ret
 471+ 8B37
 472+ 8B37               ; ---------- ----------
 473+ 8B37
 474+ 8B37 06 02        Bucle_2 ld b,2
 475+ 8B39 FD 7E 00     2 ld a,(iy)
 476+ 8B3C A6               and (hl)
 477+ 8B3D 28 02            jr z,1F
 478+ 8B3F 1E 81            ld e,$81
 479+ 8B41 23           1 inc hl
 480+ 8B42 FD 23            inc iy
 481+ 8B44 10 F3            djnz 2B
 482+ 8B46 C9               ret
 483+ 8B47
 484+ 8B47              ; -------------------------------------------------------------------------------------------------------------
 485+ 8B47              ;
 486+ 8B47              ;   11/04/23
 487+ 8B47              ;
 488+ 8B47              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8B47              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8B47              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8B47              ;
 492+ 8B47              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8B47
 494+ 8B47              Compara_coordenadas_X
 495+ 8B47
 496+ 8B47              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8B47              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8B47
 499+ 8B47              ; Preparamos registros:
 500+ 8B47
 501+ 8B47 21 E4 85         ld hl,Filas+6
 502+ 8B4A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8B4B 23               inc hl
 504+ 8B4C 23               inc hl
 505+ 8B4D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8B4E 43               ld b,e
 507+ 8B4F 21 F2 85         ld hl,Filas+20
 508+ 8B52 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8B53 21 39 86         ld hl,Coordenadas_X_Entidad
 510+ 8B56 CD 65 8D         call Guarda_coordenadas_X
 511+ 8B59
 512+ 8B59              ; Preparamos registros:
 513+ 8B59
 514+ 8B59 21 7C 84         ld hl,Amadeus_db+6
 515+ 8B5C 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8B5D 23               inc hl
 517+ 8B5E 23               inc hl
 518+ 8B5F 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8B60 7B               ld a,e
 520+ 8B61 08               ex af,af'
 521+ 8B62 21 8A 84         ld hl,Amadeus_db+20
 522+ 8B65 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8B66 21 36 86         ld hl,Coordenadas_X_Amadeus
 524+ 8B69 CD 65 8D         call Guarda_coordenadas_X
 525+ 8B6C
 526+ 8B6C              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8B6C              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8B6C
 529+ 8B6C 04               inc b
 530+ 8B6D 05               dec b
 531+ 8B6E 28 04            jr z,1F
 532+ 8B70 06 03            ld b,3
 533+ 8B72 18 02            jr 2F
 534+ 8B74 06 02        1 ld b,2
 535+ 8B76 08           2 ex af,af'
 536+ 8B77 3C               inc a
 537+ 8B78 3D               dec a
 538+ 8B79 28 04            jr z,5F
 539+ 8B7B 0E 03            ld c,3
 540+ 8B7D 18 02            jr 6F
 541+ 8B7F 0E 02        5 ld c,2
 542+ 8B81 79           6 ld a,c
 543+ 8B82 08               ex af,af'
 544+ 8B83 11 39 86         ld de,Coordenadas_X_Entidad
 545+ 8B86 1A           4 ld a,(de)
 546+ 8B87 21 36 86         ld hl,Coordenadas_X_Amadeus
 547+ 8B8A BE           3 cp (hl)
 548+ 8B8B 28 0E            jr z,7F
 549+ 8B8D 23               inc hl
 550+ 8B8E 0D               dec c
 551+ 8B8F 20 F9            jr nz,3B
 552+ 8B91 13               inc de
 553+ 8B92 08               ex af,af'
 554+ 8B93 4F               ld c,a
 555+ 8B94 08               ex af,af'
 556+ 8B95 10 EF            djnz 4B
 557+ 8B97
 558+ 8B97              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8B97
 560+ 8B97 CD A4 8D     8 call Limpia_Coordenadas_X
 561+ 8B9A C9               ret
 562+ 8B9B
 563+ 8B9B              7
 564+ 8B9B 3E 01            ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 565+ 8B9D 32 F7 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 566+ 8BA0 21 31 86         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 567+ 8BA3 CB D6            set 2,(hl)
 568+ 8BA5 18 F0            jr 8B
 569+ 8BA7
 570+ 8BA7              ; -----------------------------------------------------------------------
 571+ 8BA7              ;
 572+ 8BA7              ;   17/04/23
 573+ 8BA7              ;
 574+ 8BA7
 575+ 8BA7              Detecta_colision_nave_entidad
 576+ 8BA7
 577+ 8BA7              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 578+ 8BA7
 579+ 8BA7 2A E0 85         ld hl,(Posicion_actual)
 580+ 8BAA CD 21 90         call Calcula_puntero_de_impresion
 581+ 8BAD
 582+ 8BAD              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 583+ 8BAD              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 584+ 8BAD
 585+ 8BAD DD E5            push ix
 586+ 8BAF E1               pop hl
 587+ 8BB0 E5               push hl
 588+ 8BB1
 589+ 8BB1              ; ----- ----- -----
 590+ 8BB1 1E 00            ld e,0                                         ; Indica impacto.
 591+ 8BB3 06 0A            ld b,10
 592+ 8BB5 CD E5 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 593+ 8BB8 7B               ld a,e
 594+ 8BB9 FE 05            cp 5
 595+ 8BBB 38 0E            jr c,3F
 596+ 8BBD
 597+ 8BBD              ; LLegados a este punto:
 598+ 8BBD              ;
 599+ 8BBD              ;   HAY COLISIÓN !!!!!.
 600+ 8BBD              ;
 601+ 8BBD              ;   .db (Impacto) de Amadeus a "1".
 602+ 8BBD              ;   SET el bit3 de (Impacto2).
 603+ 8BBD              ;
 604+ 8BBD              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 605+ 8BBD
 606+ 8BBD 21 8F 84         ld hl,Amadeus_db+25
 607+ 8BC0 36 01            ld (hl),1
 608+ 8BC2 21 31 86         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 609+ 8BC5 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 610+ 8BC7 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 611+ 8BC9 18 18            jr 1F
 612+ 8BCB
 613+ 8BCB              ; -----
 614+ 8BCB
 615+ 8BCB E1           3 pop hl
 616+ 8BCC CD BC 90         call NextScan
 617+ 8BCF E5               push hl
 618+ 8BD0 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 619+ 8BD1 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 620+ 8BD3 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 621+ 8BD5 30 0C            jr nc,1F
 622+ 8BD7              ;                                                  ; _ 2º scanline si esto es así.
 623+ 8BD7 10 DC            djnz 2B
 624+ 8BD9
 625+ 8BD9              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 626+ 8BD9
 627+ 8BD9              ; LLegados a este punto:
 628+ 8BD9              ;
 629+ 8BD9              ;   NO HAY COLISIÓN !!!!!.
 630+ 8BD9              ;
 631+ 8BD9              ;   .db (Impacto) de Amadeus a "0".
 632+ 8BD9              ;   RES el bit2 de (Impacto2).
 633+ 8BD9              ;
 634+ 8BD9              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 635+ 8BD9              ;   Lo colocamos a "0".
 636+ 8BD9
 637+ 8BD9 21 31 86         ld hl,Impacto2
 638+ 8BDC CB 96            res 2,(hl)
 639+ 8BDE 2A 32 86         ld hl,(Entidad_sospechosa_de_colision)
 640+ 8BE1 36 00            ld (hl),0
 641+ 8BE3
 642+ 8BE3 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 643+ 8BE4 C9               ret
 644+ 8BE5
 645+ 8BE5               ; ---------- ----------
 646+ 8BE5
 647+ 8BE5 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 648+ 8BE6 3A DF 85         ld a,(Columns)
 649+ 8BE9 47               ld b,a
 650+ 8BEA FD 7E 00     2 ld a,(iy)
 651+ 8BED BE               cp (hl)
 652+ 8BEE 28 01            jr z,1F
 653+ 8BF0
 654+ 8BF0 1C               inc e
 655+ 8BF1
 656+ 8BF1 23           1 inc hl
 657+ 8BF2 FD 23            inc iy
 658+ 8BF4 10 F4            djnz 2B
 659+ 8BF6 C1               pop bc
 660+ 8BF7 C9               ret
 661+ 8BF8
 662+ 8BF8              ; -------------------------------------------------------------------------------------------------------------
 663+ 8BF8              ;
 664+ 8BF8              ;   13/03/23
 665+ 8BF8              ;
 666+ 8BF8              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 667+ 8BF8              ;
 668+ 8BF8              ;   DESTRUYE: HL,BC,DE y A.
 669+ 8BF8
 670+ 8BF8 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 671+ 8BFB 7E               ld a,(hl)
 672+ 8BFC A7               and a
 673+ 8BFD C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 674+ 8BFE
 675+ 8BFE 44               ld b,h
 676+ 8BFF 4D               ld c,l
 677+ 8C00 2A 2A 86         ld hl,(Stack_snapshot_disparos)
 678+ 8C03 E5               push hl
 679+ 8C04 A7               and a
 680+ 8C05 ED 42            sbc hl,bc
 681+ 8C07 E5               push hl
 682+ 8C08 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 683+ 8C09
 684+ 8C09 E1               pop hl
 685+ 8C0A 54               ld d,h
 686+ 8C0B 5D               ld e,l
 687+ 8C0C 1B               dec de
 688+ 8C0D ED B8            lddr                                                ; Limpiamos.
 689+ 8C0F
 690+ 8C0F 21 60 70         ld hl,Album_de_fotos_disparos
 691+ 8C12 22 2A 86         ld (Stack_snapshot_disparos),hl
 692+ 8C15
 693+ 8C15 C9               ret
 694+ 8C16
 695+ 8C16              ; -------------------------------------------------------------------------------------------------------------
 696+ 8C16              ;
 697+ 8C16              ;   28/03/23
 698+ 8C16              ;
 699+ 8C16
 700+ 8C16 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 701+ 8C19 2A 2F 86         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 702+ 8C1C
 703+ 8C1C CD 58 88     2 call Extrae_address
 704+ 8C1F 7E               ld a,(hl)
 705+ 8C20 A7               and a
 706+ 8C21 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 707+ 8C23
 708+ 8C23              ; ----- ----- ----- ----- ----- -----
 709+ 8C23
 710+ 8C23 C5               push bc
 711+ 8C24 CD E0 8C         call foto_disparo_a_borrar
 712+ 8C27
 713+ 8C27              ; Existe colisión con este disparo???
 714+ 8C27
 715+ 8C27 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 716+ 8C28 7E               ld a,(hl)
 717+ 8C29 2B               dec hl
 718+ 8C2A E6 01            and 1
 719+ 8C2C 28 1D            jr z,9F
 720+ 8C2E
 721+ 8C2E              ;   En este punto:
 722+ 8C2E              ;
 723+ 8C2E              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 724+ 8C2E              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 725+ 8C2E              ;   _con la entidad).
 726+ 8C2E              ;
 727+ 8C2E              ;   Disparo_2A defw 0                                ; Control.
 728+ 8C2E              ;    defw 0                                          ; Puntero objeto.
 729+ 8C2E              ;    defw 0                                          ; Puntero de impresión.
 730+ 8C2E              ;    defw 0                                          ; Rutina de impresión.
 731+ 8C2E
 732+ 8C2E E5               push hl
 733+ 8C2F
 734+ 8C2F 06 04            ld b,4
 735+ 8C31 23           19 inc hl
 736+ 8C32 10 FD            djnz 19B
 737+ 8C34
 738+ 8C34 CD 58 88         call Extrae_address
 739+ 8C37 CD D3 96         call Genera_coordenadas_disparo
 740+ 8C3A
 741+ 8C3A              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 742+ 8C3A
 743+ 8C3A 21 34 86         ld hl,Coordenadas_disparo_certero
 744+ 8C3D 72               ld (hl),d
 745+ 8C3E 23               inc hl
 746+ 8C3F 73               ld (hl),e
 747+ 8C40
 748+ 8C40              ; Elimino el disparo de la base de datos.
 749+ 8C40
 750+ 8C40 E1               pop hl
 751+ 8C41 CD 5A 8D         call Elimina_disparo_de_base_de_datos
 752+ 8C44 21 31 86         ld hl,Impacto2
 753+ 8C47 CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 754+ 8C49
 755+ 8C49 18 06            jr 11F
 756+ 8C4B
 757+ 8C4B CD 09 8D     9 call Mueve_disparo
 758+ 8C4E CD E0 8C         call foto_disparo_a_borrar
 759+ 8C51
 760+ 8C51 C1           11 pop bc
 761+ 8C52 18 04            jr 7F
 762+ 8C54
 763+ 8C54              ; ----- ----- ----- ----- ----- -----
 764+ 8C54
 765+ 8C54 ED 42        1 sbc hl,bc
 766+ 8C56 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 767+ 8C58
 768+ 8C58 2A 2F 86     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 8C5B 23               inc hl
 770+ 8C5C 23               inc hl
 771+ 8C5D 22 2F 86         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 8C60 18 BA            jr 2B
 773+ 8C62
 774+ 8C62 CD 21 88     3 call Inicia_Puntero_Disparo_Amadeus
 775+ 8C65 01 66 84         ld bc,Disparo_11
 776+ 8C68 2A 2D 86         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 8C6B
 778+ 8C6B CD 58 88     5 call Extrae_address
 779+ 8C6E 7E               ld a,(hl)
 780+ 8C6F A7               and a
 781+ 8C70 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 8C72
 783+ 8C72              ; ----- ----- ----- ----- ----- -----
 784+ 8C72
 785+ 8C72 C5               push bc
 786+ 8C73 CD E0 8C         call foto_disparo_a_borrar
 787+ 8C76
 788+ 8C76              ; Existe colisión con este disparo???
 789+ 8C76
 790+ 8C76 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 8C77 7E               ld a,(hl)
 792+ 8C78 2B               dec hl
 793+ 8C79 E6 01            and 1
 794+ 8C7B 28 48            jr z,10F
 795+ 8C7D
 796+ 8C7D              ; La colisión se produce con Amadeus???
 797+ 8C7D              ; Amadeus siempre tiene (Coordenada_y)="$16".
 798+ 8C7D
 799+ 8C7D E5               push hl
 800+ 8C7E
 801+ 8C7E 06 04            ld b,4
 802+ 8C80 23           16 inc hl
 803+ 8C81 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 804+ 8C83 CD 58 88         call Extrae_address
 805+ 8C86 CD D3 96         call Genera_coordenadas_disparo
 806+ 8C89
 807+ 8C89 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 808+ 8C8A FE 16            cp $16
 809+ 8C8C 38 22            jr c,15F
 810+ 8C8E
 811+ 8C8E              ; (Colisiones en filas 16 y 17).
 812+ 8C8E
 813+ 8C8E D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 814+ 8C8F
 815+ 8C8F              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 816+ 8C8F
 817+ 8C8F 21 7C 84         ld hl,Amadeus_db+6
 818+ 8C92 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 819+ 8C93 23               inc hl
 820+ 8C94 23               inc hl
 821+ 8C95 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 822+ 8C96 21 8A 84         ld hl,Amadeus_db+20
 823+ 8C99 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 824+ 8C9A 21 36 86         ld hl,Coordenadas_X_Amadeus
 825+ 8C9D CD 65 8D         call Guarda_coordenadas_X
 826+ 8CA0
 827+ 8CA0 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 828+ 8CA1
 829+ 8CA1              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 830+ 8CA1
 831+ 8CA1 06 03            ld b,3
 832+ 8CA3 21 36 86         ld hl,Coordenadas_X_Amadeus
 833+ 8CA6 7E           18 ld a,(hl)
 834+ 8CA7 BA               cp d
 835+ 8CA8 20 03            jr nz,17F
 836+ 8CAA
 837+ 8CAA              ; Colisión Amadeus !!!!!!!!!!
 838+ 8CAA
 839+ 8CAA E1               pop hl
 840+ 8CAB 18 09            jr 14F
 841+ 8CAD
 842+ 8CAD 23           17 inc hl
 843+ 8CAE 10 F6            djnz 18B
 844+ 8CB0
 845+ 8CB0              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 846+ 8CB0              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 847+ 8CB0
 848+ 8CB0 E1           15 pop hl
 849+ 8CB1 23               inc hl
 850+ 8CB2 35               dec (hl)
 851+ 8CB3 2B               dec hl
 852+ 8CB4 18 0F            jr 10F
 853+ 8CB6
 854+ 8CB6              ; -----------------------debug
 855+ 8CB6
 856+ 8CB6              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 857+ 8CB6              ; _ almacén de coordenadas_X de Amadeus.
 858+ 8CB6
 859+ 8CB6 E5           14 push hl
 860+ 8CB7 CD 5A 8D         call Elimina_disparo_de_base_de_datos
 861+ 8CBA 21 31 86         ld hl,Impacto2
 862+ 8CBD CB CE            set 1,(hl)
 863+ 8CBF CD A4 8D         call Limpia_Coordenadas_X
 864+ 8CC2
 865+ 8CC2 E1               pop hl
 866+ 8CC3 18 06            jr 12F
 867+ 8CC5
 868+ 8CC5 CD 09 8D     10 call Mueve_disparo
 869+ 8CC8 CD E0 8C         call foto_disparo_a_borrar
 870+ 8CCB C1           12 pop bc
 871+ 8CCC
 872+ 8CCC 18 04            jr 8F
 873+ 8CCE
 874+ 8CCE              ; ----- ----- ----- ----- ----- -----
 875+ 8CCE
 876+ 8CCE ED 42        4 sbc hl,bc
 877+ 8CD0 28 0A            jr z,6F
 878+ 8CD2
 879+ 8CD2 2A 2D 86     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 880+ 8CD5 23               inc hl
 881+ 8CD6 23               inc hl
 882+ 8CD7 22 2D 86         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 883+ 8CDA 18 8F            jr 5B
 884+ 8CDC
 885+ 8CDC CD 1A 88     6 call Inicia_Puntero_Disparo_Entidades
 886+ 8CDF C9               ret
 887+ 8CE0
 888+ 8CE0              ; ------------------------------------------------------------------
 889+ 8CE0
 890+ 8CE0              foto_disparo_a_borrar
 891+ 8CE0
 892+ 8CE0 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 893+ 8CE1 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 894+ 8CE2 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 895+ 8CE3
 896+ 8CE3 E5               push hl
 897+ 8CE4 23               inc hl
 898+ 8CE5 23               inc hl
 899+ 8CE6 ED 73 24 86      ld (Stack),sp
 900+ 8CEA F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 901+ 8CEB FD E1            pop iy
 902+ 8CED DD E1            pop ix
 903+ 8CEF E1               pop hl
 904+ 8CF0 ED 7B 24 86      ld sp,(Stack)
 905+ 8CF4 3A 1A 86         ld a,(Ctrl_1)
 906+ 8CF7 CB C7            set 0,a
 907+ 8CF9 32 1A 86         ld (Ctrl_1),a
 908+ 8CFC CD A0 7F         call Guarda_foto_registros
 909+ 8CFF 3A 1A 86         ld a,(Ctrl_1)
 910+ 8D02 CB 87            res 0,a
 911+ 8D04 32 1A 86         ld (Ctrl_1),a
 912+ 8D07 E1               pop hl
 913+ 8D08 C9               ret
 914+ 8D09
 915+ 8D09 E5           Mueve_disparo push hl
 916+ 8D0A 7E               ld a,(hl)
 917+ 8D0B 06 04            ld b,4
 918+ 8D0D 23           1 inc hl
 919+ 8D0E 10 FD            djnz 1B
 920+ 8D10
 921+ 8D10              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 922+ 8D10
 923+ 8D10 CD 58 88         call Extrae_address
 924+ 8D13
 925+ 8D13 E6 01            and 1
 926+ 8D15 28 2A            jr z,2F
 927+ 8D17
 928+ 8D17              ; Disparo hacia arriba, (Amadeus).
 929+ 8D17
 930+ 8D17              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 931+ 8D17              ; _ de la dificultad.
 932+ 8D17
 933+ 8D17 CD CB 90         call PreviousScan
 934+ 8D1A CD CB 90         call PreviousScan
 935+ 8D1D CD CB 90         call PreviousScan
 936+ 8D20
 937+ 8D20              ; Detecta si el disparo de Amadeus sale de pantalla:
 938+ 8D20
 939+ 8D20 7C               ld a,h
 940+ 8D21 FE 40            cp $40
 941+ 8D23 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 942+ 8D25
 943+ 8D25              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 944+ 8D25
 945+ 8D25 EB               ex de,hl
 946+ 8D26 06 04            ld b,4
 947+ 8D28 2B           6 dec hl
 948+ 8D29 10 FD            djnz 6B
 949+ 8D2B
 950+ 8D2B CD 5A 8D         call Elimina_disparo_de_base_de_datos
 951+ 8D2E
 952+ 8D2E 18 0C            jr 4F
 953+ 8D30
 954+ 8D30              ; Se ha desplazado la bala, compruebo colisión.
 955+ 8D30
 956+ 8D30 D5           3 push de
 957+ 8D31 C5               push bc
 958+ 8D32 CD 16 8B         call Comprueba_Colision
 959+ 8D35 78               ld a,b
 960+ 8D36 C1               pop bc
 961+ 8D37 D1               pop de
 962+ 8D38
 963+ 8D38 EB               ex de,hl
 964+ 8D39
 965+ 8D39 73               ld (hl),e
 966+ 8D3A 23               inc hl
 967+ 8D3B 72               ld (hl),d
 968+ 8D3C
 969+ 8D3C E1           4 pop hl
 970+ 8D3D 23               inc hl
 971+ 8D3E 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 972+ 8D3F 2B               dec hl
 973+ 8D40 C9               ret
 974+ 8D41
 975+ 8D41              ; Disparo hacia abajo, (Entidad).
 976+ 8D41
 977+ 8D41              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 978+ 8D41              ; _ de la dificultad.
 979+ 8D41
 980+ 8D41 CD BC 90     2 call NextScan
 981+ 8D44 CD BC 90         call NextScan
 982+ 8D47 CD BC 90         call NextScan
 983+ 8D4A
 984+ 8D4A              ; Detecta si el disparo de la entidad sale de la pantalla.
 985+ 8D4A
 986+ 8D4A 7C               ld a,h
 987+ 8D4B FE 58            cp $58
 988+ 8D4D 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 989+ 8D4F
 990+ 8D4F EB               ex de,hl
 991+ 8D50 06 04            ld b,4
 992+ 8D52 2B           5 dec hl
 993+ 8D53 10 FD            djnz 5B
 994+ 8D55
 995+ 8D55 CD 5A 8D         call Elimina_disparo_de_base_de_datos
 996+ 8D58
 997+ 8D58 18 E2            jr 4B
 998+ 8D5A
 999+ 8D5A              ; HL apunta al primer byte de la base de datos del disparo.
1000+ 8D5A
1001+ 8D5A 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1002+ 8D5D AF               xor a
1003+ 8D5E 77               ld (hl),a
1004+ 8D5F 54               ld d,h
1005+ 8D60 5D               ld e,l
1006+ 8D61 13               inc de
1007+ 8D62 ED B0            ldir
1008+ 8D64 C9               ret
1009+ 8D65
1010+ 8D65              ; -----------------------------------------------------------------
1011+ 8D65              ;
1012+ 8D65              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1013+ 8D65              ;
1014+ 8D65              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1015+ 8D65              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1016+ 8D65              ;
1017+ 8D65              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1018+ 8D65              ;
1019+ 8D65              ;   INPUTS:
1020+ 8D65              ;
1021+ 8D65              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1022+ 8D65              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1023+ 8D65              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1024+ 8D65
1025+ 8D65              ;   MODIFICA: A, HL, DE y C
1026+ 8D65
1027+ 8D65 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1028+ 8D66 79               ld a,c
1029+ 8D67 E6 01            and 1
1030+ 8D69 20 03            jr nz,1F
1031+ 8D6B 14               inc d
1032+ 8D6C 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1033+ 8D6E
1034+ 8D6E              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8D6E              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1036+ 8D6E
1037+ 8D6E 15           1 dec d
1038+ 8D6F 23           2 inc hl
1039+ 8D70 72               ld (hl),d
1040+ 8D71
1041+ 8D71 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1042+ 8D72 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1043+ 8D73 C8               ret z
1044+ 8D74
1045+ 8D74 AF               xor a
1046+ 8D75 5F               ld e,a
1047+ 8D76 18 ED            jr Guarda_coordenadas_X
1048+ 8D78
1049+ 8D78              ; -----------------------------------------------------------------
1050+ 8D78              ;
1051+ 8D78              ;   12/04/23
1052+ 8D78              ;
1053+ 8D78
1054+ 8D78 3A 31 86     Selector_de_impactos ld a,(Impacto2)
1055+ 8D7B A7               and a
1056+ 8D7C C8               ret z
1057+ 8D7D
1058+ 8D7D FE 04            cp 4
1059+ 8D7F 20 09            jr nz,1F
1060+ 8D81
1061+ 8D81
1062+ 8D81              ; La colisión se produce por contacto entre Amadeus y una entidad.
1063+ 8D81
1064+ 8D81 CD A7 8B         call Detecta_colision_nave_entidad
1065+ 8D84
1066+ 8D84 21 31 86         ld hl,Impacto2
1067+ 8D87 CB 5E            bit 3,(hl)
1068+ 8D89 C0               ret nz                                               ; Existe colisión, RET.
1069+ 8D8A
1070+ 8D8A              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1071+ 8D8A              ; Primero analizamos si algún disparo impacta en Amadeus.
1072+ 8D8A
1073+ 8D8A 21 31 86     1 ld hl,Impacto2
1074+ 8D8D CB 4E            bit 1,(hl)
1075+ 8D8F 28 07            jr z,2F
1076+ 8D91
1077+ 8D91 21 8F 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1078+ 8D94 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1079+ 8D96 18 0B            jr 3F
1080+ 8D98
1081+ 8D98 21 31 86     2 ld hl,Impacto2
1082+ 8D9B CB 46            bit 0,(hl)
1083+ 8D9D C8               ret z
1084+ 8D9E
1085+ 8D9E              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1086+ 8D9E
1087+ 8D9E 21 1A 86         ld hl,Ctrl_1
1088+ 8DA1 CB D6            set 2,(hl)
1089+ 8DA3
1090+ 8DA3 C9           3 ret
1091+ 8DA4
1092+ 8DA4              ; -----------------------------------------------------------------
1093+ 8DA4              ;
1094+ 8DA4              ;   16/04/23
1095+ 8DA4              ;
1096+ 8DA4
1097+ 8DA4 AF           Limpia_Coordenadas_X xor a
1098+ 8DA5 06 06            ld b,6
1099+ 8DA7 21 36 86         ld hl,Coordenadas_X_Amadeus
1100+ 8DAA 77           1 ld (hl),a
1101+ 8DAB 23               inc hl
1102+ 8DAC 10 FC            djnz 1B
1103+ 8DAE C9               ret
1104+ 8DAF
1105+ 8DAF              ; -----------------------------------------------------------------
1106+ 8DAF              ;
1107+ 8DAF              ;   25/04/23
1108+ 8DAF              ;
1109+ 8DAF
1110+ 8DAF              Determina_resultado_comparativa
1111+ 8DAF
1112+ 8DAF 7C               ld a,h
1113+ 8DB0 06 00            ld b,0
1114+ 8DB2
1115+ 8DB2 CD CA 8D         call Compara_cositas
1116+ 8DB5 04               inc b
1117+ 8DB6 05               dec b
1118+ 8DB7 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1119+ 8DB8
1120+ 8DB8 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1121+ 8DB9 06 00            ld b,0
1122+ 8DBB FE 02            cp $02
1123+ 8DBD 28 09            jr z,1F
1124+ 8DBF FE FE            cp $fe
1125+ 8DC1 28 05            jr z,1F
1126+ 8DC3
1127+ 8DC3 CD CA 8D         call Compara_cositas
1128+ 8DC6 18 01            jr 2F
1129+ 8DC8
1130+ 8DC8 04           1 inc b
1131+ 8DC9 C9           2 ret
1132+ 8DCA
1133+ 8DCA A7           Compara_cositas and a
1134+ 8DCB 28 07            jr z,1F
1135+ 8DCD FE FF            cp $ff
1136+ 8DCF 28 03            jr z,1F
1137+ 8DD1 FE 01            cp $01
1138+ 8DD3 C0               ret nz
1139+ 8DD4 04           1 inc b
1140+ 8DD5 C9               ret
1141+ 8DD6
# file closed: Disparo.asm
1053  8DD6              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8DD6              ; ******************************************************************************************************************************************************************************************
   2+ 8DD6              ;
   3+ 8DD6              ; 01/23
   4+ 8DD6              ;
   5+ 8DD6              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8DD6
   7+ 8DD6 CD B0 90     Draw call Prepara_draw
   8+ 8DD9 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8DDA A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8DDB 28 05        	jr z,2F
  11+ 8DDD
  12+ 8DDD 3A F2 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8DE0 18 0C        	jr 1F
  14+ 8DE2 2A F0 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8DE5 22 E0 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8DE8 CD 77 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8DEB              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8DEB CD F6 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8DEE 3A 0C 86     1 ld a,(Ctrl_0)
  20+ 8DF1 CB 6F        	bit 5,a
  21+ 8DF3 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8DF5
  23+ 8DF5 CD 0D 8E     	call Comprueba_limite_horizontal
  24+ 8DF8 CD 9D 8E     	call Comprueba_limite_vertical
  25+ 8DFB
  26+ 8DFB              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8DFB
  28+ 8DFB CD EA 8F     3 call calcula_CColumnass
  29+ 8DFE CD 21 90     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8E01 CD 76 90     	call Define_rutina_de_impresion
  31+ 8E04
  32+ 8E04 3A 0C 86     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8E07 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8E09 32 0C 86     	ld (Ctrl_0),a
  35+ 8E0C
  36+ 8E0C C9           	ret
  37+ 8E0D
  38+ 8E0D              ; *******************************************************************************************************************************************************************************************
  39+ 8E0D              ;	21/01/23
  40+ 8E0D              ;
  41+ 8E0D              ; 	Comprueba_limite_horizontal.
  42+ 8E0D              ;
  43+ 8E0D              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8E0D              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8E0D              ;
  46+ 8E0D              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8E0D              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8E0D              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8E0D              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8E0D
  51+ 8E0D
  52+ 8E0D
  53+ 8E0D 3A 0C 86     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8E10 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8E12 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8E14 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8E16 32 0C 86     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8E19 18 09            jr 6F
  59+ 8E1B CB 5F        1 bit 3,a
  60+ 8E1D 28 0A            jr z,2F
  61+ 8E1F E6 F7            and $f7
  62+ 8E21 32 0C 86         ld (Ctrl_0),a
  63+ 8E24 CD 77 8F     6 call Inicializacion
  64+ 8E27 18 5B            jr 5F
  65+ 8E29 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8E2A
  67+ 8E2A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8E2A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8E2A
  70+ 8E2A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8E2B 2A 17 86     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8E2E CD 7C 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8E31 67           	ld h,a
  74+ 8E32 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8E33 CD 7C 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8E36 67           	ld h,a
  77+ 8E37 A7           	and a
  78+ 8E38 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8E3A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8E3B 3A F2 85     	ld a,(Cuad_objeto)
  81+ 8E3E FE 02        	cp 2
  82+ 8E40 38 1E        	jr c,3F
  83+ 8E42 28 1C        	jr z,3F
  84+ 8E44 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8E45 28 23            jr z,7F
  86+ 8E47 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8E49 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8E4B E1           	pop hl
  89+ 8E4C
  90+ 8E4C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8E4C              ; _para indicar con E="2" en caso necesario.
  92+ 8E4C
  93+ 8E4C E5               push hl
  94+ 8E4D C5               push bc
  95+ 8E4E CD 7C 93     	call calcula_tercio
  96+ 8E51 FE 01        	cp 1
  97+ 8E53 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8E55 CD 85 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8E58 28 26            jr z,9F
 100+ 8E5A 38 24            jr c,9F
 101+ 8E5C 1E 00        11 ld e,0
 102+ 8E5E 18 22            jr 8F
 103+ 8E60 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E61 28 07        	jr z, 7F
 105+ 8E63 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E65 1E 00         	ld e,0
 107+ 8E67 E1           	pop hl
 108+ 8E68 18 04        	jr 4F
 109+ 8E6A 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E6C 18 15            jr 10F
 111+ 8E6E
 112+ 8E6E              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E6E              ; _para indicar con E="2" en caso necesario.
 114+ 8E6E
 115+ 8E6E E5           4 push hl
 116+ 8E6F C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E70 CD 7C 93     	call calcula_tercio
 118+ 8E73 FE 01        	cp 1
 119+ 8E75 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E77 CD 85 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E7A 28 04            jr z,9F
 122+ 8E7C 30 02            jr nc,9F
 123+ 8E7E 18 02        	jr 8F
 124+ 8E80 1E 02        9 ld e,2
 125+ 8E82 C1           8 pop bc
 126+ 8E83 E1           10 pop hl
 127+ 8E84 C9           5 ret
 128+ 8E85
 129+ 8E85              ; --------------------
 130+ 8E85              ;
 131+ 8E85              ; 25/08/22
 132+ 8E85
 133+ 8E85 CD 7C 93     Comprueba_centro call calcula_tercio
 134+ 8E88 67               ld h,a
 135+ 8E89 08           	ex af,af
 136+ 8E8A FE 02        	cp 2
 137+ 8E8C 38 07        	jr c,1F
 138+ 8E8E 28 05        	jr z,1F
 139+ 8E90 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E93 18 03        	jr 2F
 141+ 8E95 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E98 08           2 ex af,af
 143+ 8E99 A7               and a
 144+ 8E9A ED 42            sbc hl,bc
 145+ 8E9C C9               ret
 146+ 8E9D
 147+ 8E9D              ; *********************************************************************************************************************************************************************************************
 148+ 8E9D              ;
 149+ 8E9D              ;   16/8/22
 150+ 8E9D              ;
 151+ 8E9D              ;	Comprueba_limite_vertical
 152+ 8E9D              ;
 153+ 8E9D              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E9D              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E9D              ;
 156+ 8E9D
 157+ 8E9D 2A E0 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8EA0 7D           	ld a,l
 159+ 8EA1 E6 1F        	and $1F
 160+ 8EA3 57           	ld d,a
 161+ 8EA4 3A 19 86     	ld a,(Limite_vertical)
 162+ 8EA7 BA           	cp d 											; Límite - Posición.
 163+ 8EA8 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8EA9 3A F2 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8EAC CB 47        	bit 0,a
 166+ 8EAE 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8EB0
 168+ 8EB0              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8EB0
 170+ 8EB0 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8EB1 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8EB3
 173+ 8EB3              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8EB3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8EB3
 176+ 8EB3 3A E4 85         ld a,(Coordenada_X)
 177+ 8EB6 16 0F            ld d,Centro_izquierda
 178+ 8EB8 A7               and a
 179+ 8EB9 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8EBA 28 1E            jr z,3F
 181+ 8EBC 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8EBE              ;                                                    ; _salimos sin modificar nada.
 183+ 8EBE 18 0E            jr 2F
 184+ 8EC0 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8EC1 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8EC3
 187+ 8EC3              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8EC3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8EC3
 190+ 8EC3 3A E4 85         ld a,(Coordenada_X)
 191+ 8EC6 16 10            ld d,Centro_derecha
 192+ 8EC8 A7               and a
 193+ 8EC9 92               sub d
 194+ 8ECA 28 0E            jr z,3F
 195+ 8ECC 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8ECE              ;                                                    ; _salimos sin modificar nada.
 197+ 8ECE CB 43        2 bit 0,e
 198+ 8ED0 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8ED2 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8ED3 CD 67 8F         call Modificaccionne
 201+ 8ED6 C1           	pop bc
 202+ 8ED7 CD 77 8F         call Inicializacion
 203+ 8EDA C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8EDB
 205+ 8EDB              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8EDB
 207+ 8EDB C5           4 push bc
 208+ 8EDC 01 DF 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8EDF 0A           	ld a,(bc)
 210+ 8EE0 3D           	dec a
 211+ 8EE1 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8EE2 7D           	ld a,l
 213+ 8EE3 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8EE4 CB 47        	bit 0,a
 215+ 8EE6 28 03        	jr z,5F
 216+ 8EE8 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8EE9 18 2E        	jr 7F
 218+ 8EEB
 219+ 8EEB              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8EEB
 221+ 8EEB 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8EEC F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8EED 3A 0C 86     	ld a,(Ctrl_0)
 224+ 8EF0 CB 4F        	bit 1,a
 225+ 8EF2 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8EF4 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8EF5
 228+ 8EF5              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8EF5
 230+ 8EF5 1C               inc e
 231+ 8EF6 1D               dec e
 232+ 8EF7 20 07            jr nz,12F
 233+ 8EF9 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8EFA 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8EFB 22 E0 85     	ld (Posicion_actual),hl
 236+ 8EFE 18 44        13 jr 9F
 237+ 8F00 CB 43        12 bit 0,e
 238+ 8F02 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8F04              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8F04 C1           	pop bc
 241+ 8F05 18 D3        	jr 3B
 242+ 8F07 80           14 add b
 243+ 8F08 6F               ld l,a
 244+ 8F09 22 E0 85     	ld (Posicion_actual),hl
 245+ 8F0C CD 67 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8F0F 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8F11 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8F13 32 0C 86         ld (Ctrl_0),a
 249+ 8F16 F1           	pop af
 250+ 8F17 18 2B        	jr 9F
 251+ 8F19
 252+ 8F19              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8F19
 254+ 8F19 F5           7 push af
 255+ 8F1A 3A 0C 86     	ld a,(Ctrl_0)
 256+ 8F1D CB 47        	bit 0,a
 257+ 8F1F 20 1D        	jr nz,8F
 258+ 8F21 F1           	pop af
 259+ 8F22
 260+ 8F22              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8F22
 262+ 8F22 1C           	inc e
 263+ 8F23 1D               dec e
 264+ 8F24 20 07            jr nz,10F
 265+ 8F26 90           	sub b
 266+ 8F27 6F               ld l,a
 267+ 8F28 22 E0 85     	ld (Posicion_actual),hl
 268+ 8F2B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8F2D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8F2D CB 43        10 bit 0,e
 271+ 8F2F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8F31              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8F31 C1           	pop bc
 274+ 8F32 18 A6        	jr 3B
 275+ 8F34 90           16 sub b
 276+ 8F35 6F               ld l,a
 277+ 8F36 22 E0 85     	ld (Posicion_actual),hl
 278+ 8F39 CD 67 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8F3C 18 06            jr 9F
 280+ 8F3E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8F40 32 0C 86         ld (Ctrl_0),a
 282+ 8F43 F1           	pop af
 283+ 8F44 C1           9 pop bc
 284+ 8F45 1E 00        	ld e,0
 285+ 8F47 CD 77 8F         call Inicializacion
 286+ 8F4A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8F4B 08           	ex af,af
 288+ 8F4C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8F4D 18 8B            jr 3B
 290+ 8F4F
 291+ 8F4F              ; --------------------
 292+ 8F4F
 293+ 8F4F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8F51 CD CB 90     1 call PreviousScan
 295+ 8F54 10 FB            djnz 1B
 296+ 8F56 22 E0 85     	ld (Posicion_actual),hl
 297+ 8F59 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8F5A C9           	ret
 299+ 8F5B
 300+ 8F5B              ; --------------------
 301+ 8F5B
 302+ 8F5B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F5D CD BC 90     1 call NextScan
 304+ 8F60 10 FB            djnz 1B
 305+ 8F62 22 E0 85     	ld (Posicion_actual),hl
 306+ 8F65 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F66 C9           	ret
 308+ 8F67
 309+ 8F67              ; --------------------
 310+ 8F67              ;
 311+ 8F67              ;	22/01/23
 312+ 8F67              ;
 313+ 8F67              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F67              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F67              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F67
 317+ 8F67
 318+ 8F67              Modificaccionne
 319+ 8F67
 320+ 8F67 3A F2 85     	ld a,(Cuad_objeto)
 321+ 8F6A FE 02        	cp 2
 322+ 8F6C CC 4F 8F         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F6F DC 4F 8F         call c,Modifica_Pos_actual
 324+ 8F72 C8           	ret z
 325+ 8F73 CD 5B 8F         call Modifica_Pos_actual2
 326+ 8F76 C9               ret
 327+ 8F77
 328+ 8F77              ; *************************************************************************************************************************************************************************************************
 329+ 8F77              ;
 330+ 8F77              ;	13/8/22
 331+ 8F77              ;
 332+ 8F77              ;	Inicializacion
 333+ 8F77              ;
 334+ 8F77              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F77              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F77              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F77              ;
 338+ 8F77              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F77              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F77              ;	_ desaparece/aparece.
 341+ 8F77
 342+ 8F77              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F77              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F77              ;
 345+ 8F77              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F77              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F77              ; 		   [E] ="0"
 348+ 8F77
 349+ 8F77              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F77
 351+ 8F77 CD 7C 93     Inicializacion call calcula_tercio
 352+ 8F7A 28 36        	jr z,primit
 353+ 8F7C E6 02        	and 2
 354+ 8F7E 20 07        	jr nz,segmit
 355+ 8F80 7D           	ld a,l
 356+ 8F81 FE 7F        	cp $7f
 357+ 8F83 38 2D        	jr c,primit
 358+ 8F85 28 2B        	jr z,primit
 359+ 8F87 CD E4 8F     segmit call column
 360+ 8F8A 38 13        	jr c,tercuad
 361+ 8F8C 3E 04        cuarcuad ld a,4
 362+ 8F8E 32 F2 85     	ld (Cuad_objeto),a
 363+ 8F91 21 20 48     	ld hl,$4820
 364+ 8F94 22 17 86     	ld (Limite_horizontal),hl
 365+ 8F97 21 19 86     	ld hl,Limite_vertical
 366+ 8F9A 36 0D        	ld (hl),$0d
 367+ 8F9C 08           	ex af,af
 368+ 8F9D 18 3C        	jr 1F
 369+ 8F9F              tercuad
 370+ 8F9F 3E 03        	ld a,3
 371+ 8FA1 32 F2 85     	ld (Cuad_objeto),a
 372+ 8FA4 21 20 48     	ld hl,$4820
 373+ 8FA7 22 17 86     	ld (Limite_horizontal),hl
 374+ 8FAA 21 19 86     	ld hl,Limite_vertical
 375+ 8FAD 36 12        	ld (hl),$12
 376+ 8FAF 08           	ex af,af
 377+ 8FB0 18 29        	jr 1F
 378+ 8FB2 CD E4 8F     primit call column
 379+ 8FB5 38 13        	jr c, primcuad
 380+ 8FB7              segcuad
 381+ 8FB7 3E 02        	ld a,2
 382+ 8FB9 32 F2 85     	ld (Cuad_objeto),a
 383+ 8FBC 21 C0 4F     	ld hl,$4fc0
 384+ 8FBF 22 17 86     	ld (Limite_horizontal),hl
 385+ 8FC2 21 19 86     	ld hl,Limite_vertical
 386+ 8FC5 36 0D        	ld (hl),$0d
 387+ 8FC7 08           	ex af,af
 388+ 8FC8 18 11        	jr 1F
 389+ 8FCA              primcuad
 390+ 8FCA 3E 01        	ld a,1
 391+ 8FCC 32 F2 85     	ld (Cuad_objeto),a
 392+ 8FCF 21 C0 4F     	ld hl,$4fc0
 393+ 8FD2 22 17 86     	ld (Limite_horizontal),hl
 394+ 8FD5 21 19 86     	ld hl,Limite_vertical
 395+ 8FD8 36 12        	ld (hl),$12
 396+ 8FDA 08           	ex af,af
 397+ 8FDB CD A8 96     1 call Genera_coordenadas
 398+ 8FDE 21 0C 86     	ld hl,Ctrl_0
 399+ 8FE1 CB EE        	set 5,(hl)
 400+ 8FE3 C9           	ret
 401+ 8FE4
 402+ 8FE4              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8FE4
 404+ 8FE4              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8FE4              ;
 406+ 8FE4              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8FE4
 408+ 8FE4 7D           column ld a,l
 409+ 8FE5 E6 1F        	and $1f
 410+ 8FE7 FE 10         	cp $10
 411+ 8FE9 C9            	ret
 412+ 8FEA
 413+ 8FEA              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8FEA              ;
 415+ 8FEA              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8FEA              ;
 417+ 8FEA              ; 14/12/22
 418+ 8FEA              ;
 419+ 8FEA              ;	Modifica: A y BC.
 420+ 8FEA
 421+ 8FEA 3A F2 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8FED E6 01        	and 1
 423+ 8FEF 28 17        	jr z,1F
 424+ 8FF1
 425+ 8FF1              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8FF1
 427+ 8FF1 3A E4 85     	ld a,(Coordenada_X)
 428+ 8FF4 47           	ld b,a
 429+ 8FF5 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8FF6 79           	ld a,c
 431+ 8FF7 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8FF8 38 08        	jr c,2F
 433+ 8FFA 47           	ld b,a
 434+ 8FFB 79           	ld a,c
 435+ 8FFC 90           	sub b
 436+ 8FFD 32 16 86     	ld (Columnas),a
 437+ 9000 18 1B        	jr 4F
 438+ 9002 79           2 ld a,c
 439+ 9003 32 16 86     	ld (Columnas),a
 440+ 9006 18 15        	jr 4F
 441+ 9008
 442+ 9008              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9008
 444+ 9008 3A E4 85     1 ld a,(Coordenada_X)
 445+ 900B 81           	add c
 446+ 900C 3D           	dec a
 447+ 900D D6 1F        	sub $1f
 448+ 900F 38 08        	jr c,3F
 449+ 9011 47           	ld b,a
 450+ 9012 79           	ld a,c
 451+ 9013 90           	sub b
 452+ 9014 32 16 86     	ld (Columnas),a
 453+ 9017 18 04        	jr 4F
 454+ 9019 79           3 ld a,c
 455+ 901A 32 16 86     	ld (Columnas),a
 456+ 901D D9           4 exx
 457+ 901E 4F           	ld c,a
 458+ 901F D9           	exx
 459+ 9020 C9            ret
 460+ 9021
 461+ 9021              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9021              ;
 463+ 9021              ; 7/1/23
 464+ 9021              ;
 465+ 9021              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9021              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9021              ;
 468+ 9021              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9021              ;	DESTRUYE: HL,B Y A.
 470+ 9021
 471+ 9021 3A F2 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9024 FE 02        	cp 2
 473+ 9026 38 18        	jr c,1F
 474+ 9028 28 16        	jr z,1F
 475+ 902A E6 01        	and 1
 476+ 902C 28 0D        	jr z,3F
 477+ 902E
 478+ 902E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 902E
 480+ 902E CD 6A 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9031
 482+ 9031 7D           9 ld a,l
 483+ 9032 E6 1F        	and $1f
 484+ 9034 28 2A        	jr z,7F
 485+ 9036 2B           	dec hl
 486+ 9037 10 F8        	djnz 9B
 487+ 9039 18 25        	jr 7F
 488+ 903B
 489+ 903B              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 903B
 491+ 903B 2A E0 85     3 ld hl,(Posicion_actual)
 492+ 903E 18 20        	jr 7F
 493+ 9040
 494+ 9040 28 14        1 jr z,2F
 495+ 9042
 496+ 9042              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 9042
 498+ 9042 CD 6A 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 9045 7D           4 ld a,l
 500+ 9046 E6 1F        	and $1f
 501+ 9048 28 03        	jr z,6F
 502+ 904A 2B           	dec hl
 503+ 904B 10 F8        	djnz 4B
 504+ 904D 06 0F        6 ld b,15
 505+ 904F CD CB 90     5 call PreviousScan
 506+ 9052 10 FB        	djnz 5B
 507+ 9054 18 0A        	jr 7F
 508+ 9056
 509+ 9056              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 9056
 511+ 9056 CD 6A 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 9059 06 0F        	ld b,15
 513+ 905B CD CB 90     8 call PreviousScan
 514+ 905E 10 FB        	djnz 8B
 515+ 9060
 516+ 9060 E5           7 push hl
 517+ 9061 DD E1        	pop ix
 518+ 9063
 519+ 9063 2A E2 85     	ld hl,(Puntero_objeto)
 520+ 9066 E5           	push hl
 521+ 9067 FD E1        	pop iy
 522+ 9069
 523+ 9069 C9           	ret
 524+ 906A
 525+ 906A              ; --------------------------------------------------------------------------------------------------------------------
 526+ 906A              ;
 527+ 906A              ;	2/1/23
 528+ 906A              ;
 529+ 906A              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 906A              ;
 531+ 906A              ;	Tras esta rutina tenemos:
 532+ 906A              ;
 533+ 906A              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 906A              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 906A              ;
 536+ 906A              ;	DESTRUYE!!!!! HL,B y A.
 537+ 906A
 538+ 906A 2A E0 85     Operandos ld hl,(Posicion_actual)
 539+ 906D 3A 16 86     	ld a,(Columnas)
 540+ 9070 3D           	dec a
 541+ 9071 20 01        	jr nz,1F
 542+ 9073 3C           	inc a
 543+ 9074 47           1 ld b,a
 544+ 9075 C9           	ret
 545+ 9076
 546+ 9076              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9076              ;
 548+ 9076              ;	3/1/23
 549+ 9076              ;
 550+ 9076              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 9076              ;
 552+ 9076              ;	Destruye: A,B,HL y DE.
 553+ 9076
 554+ 9076              Define_rutina_de_impresion
 555+ 9076
 556+ 9076 3A DF 85     	ld a,(Columns)
 557+ 9079 47           	ld b,a
 558+ 907A 3A 16 86     	ld a,(Columnas)
 559+ 907D B8           	cp b
 560+ 907E 20 0D        	jr nz,2f
 561+ 9080
 562+ 9080              ;	La entidad se imprime entera.
 563+ 9080
 564+ 9080 21 4C 91     	ld hl, Indice_entidades_completas
 565+ 9083 E6 01        	and 1
 566+ 9085 28 02        	jr z,1F
 567+ 9087
 568+ 9087 23           	inc hl
 569+ 9088 23           	inc hl
 570+ 9089
 571+ 9089 CD 58 88     1 call Extrae_address
 572+ 908C C9           	ret		;	ret
 573+ 908D
 574+ 908D              ;	La entidad no se imprime entera en pantalla.
 575+ 908D
 576+ 908D 3A F2 85     2 ld a,(Cuad_objeto)
 577+ 9090 E6 01        	and 1
 578+ 9092 28 17        	jr z,3F
 579+ 9094
 580+ 9094              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9094
 582+ 9094 21 50 91     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 9097 3A DF 85     4 ld a,(Columns)
 584+ 909A E6 01        	and 1
 585+ 909C 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 909E
 587+ 909E 23           	inc hl
 588+ 909F 23           	inc hl
 589+ 90A0
 590+ 90A0 3A 16 86     	ld a,(Columnas)
 591+ 90A3 E6 01        	and 1
 592+ 90A5 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 90A7
 594+ 90A7 23           	inc hl
 595+ 90A8 23           	inc hl
 596+ 90A9
 597+ 90A9 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 90AB
 599+ 90AB 21 56 91     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 90AE 18 E7        	jr 4B
 601+ 90B0
 602+ 90B0              ; --------------------------------------------------------------------------------------------------------------------
 603+ 90B0              ;
 604+ 90B0              ;	Prepara_draw
 605+ 90B0              ;
 606+ 90B0              ;	Es una rutina de carga.
 607+ 90B0              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 90B0              ;
 609+ 90B0              ;	FUNCIONAMIENTO:
 610+ 90B0              ;
 611+ 90B0              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 90B0              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 90B0              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 90B0              ;
 615+ 90B0              ;	DESTRUYE:
 616+ 90B0              ;
 617+ 90B0              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 90B0
 619+ 90B0 21 DE 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 90B3 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 90B4 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 90B5 4E           	ld c,(hl)
 623+ 90B6 2A E0 85     	ld hl,(Posicion_actual)
 624+ 90B9 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 90BB C9           	ret
 626+ 90BC
 627+ 90BC              ;----------------------------------------------------------------------------------------------------------------
 628+ 90BC              ;
 629+ 90BC              ;	5/08/22
 630+ 90BC              ;
 631+ 90BC              ;   NextScan.
 632+ 90BC              ;
 633+ 90BC              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 90BC              ;
 635+ 90BC              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 90BC              ;
 637+ 90BC              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 90BC              ;
 639+ 90BC              ;       DESTRUIDOS: AF y HL !!!
 640+ 90BC              ;
 641+ 90BC              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 90BC              ;
 643+ 90BC
 644+ 90BC 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 90BD 7C               ld a,h
 646+ 90BE E6 07            and 7
 647+ 90C0 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 90C1
 649+ 90C1 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 90C2 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 90C4 6F               ld l,a
 652+ 90C5 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 90C6
 654+ 90C6 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 90C7 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 90C9 67               ld h,a
 657+ 90CA C9               ret
 658+ 90CB
 659+ 90CB              ;----------------------------------------------------------------------------------------------------------------
 660+ 90CB              ;
 661+ 90CB              ;	5/08/22
 662+ 90CB              ;
 663+ 90CB              ;   PreviousScan.
 664+ 90CB              ;
 665+ 90CB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 90CB              ;
 667+ 90CB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 90CB              ;
 669+ 90CB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 90CB              ;
 671+ 90CB              ;       DESTRUIDOS: AF y HL !!!
 672+ 90CB              ;
 673+ 90CB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 90CB              ;
 675+ 90CB
 676+ 90CB 7C           PreviousScan ld a,h
 677+ 90CC 25               dec h               ; Dec H.
 678+ 90CD E6 07            and 7
 679+ 90CF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 90D0
 681+ 90D0 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 90D1 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 90D3 6F               ld l,a
 684+ 90D4 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 90D5
 686+ 90D5 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 90D6 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 90D8 67               ld h,a
 689+ 90D9 C9               ret
 690+ 90DA
 691+ 90DA              ; -----------------------------------------------------------------------------------
 692+ 90DA              ;
 693+ 90DA              ;	28/2/23
 694+ 90DA              ;
 695+ 90DA              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 90DA              ;	Extrae fotos de Album_de_fotos.
 697+ 90DA
 698+ 90DA              Extrae_foto_entidades
 699+ 90DA
 700+ 90DA 3A 23 86     	ld a,(Numero_de_malotes)
 701+ 90DD A7           	and a
 702+ 90DE C8           	ret z
 703+ 90DF ED 73 24 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 90E3 31 00 70     	ld sp,Album_de_fotos
 705+ 90E6
 706+ 90E6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 90E8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 90E9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 90EA
 710+ 90EA ED 73 26 86  	ld (Stack_2),sp
 711+ 90EE ED 7B 24 86  	ld sp,(Stack)
 712+ 90F2
 713+ 90F2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 90F2
 715+ 90F2 3E CD        	ld a,$cd
 716+ 90F4 32 FC 90     	ld (Imprime),a
 717+ 90F7 EB           	ex de,hl
 718+ 90F8 22 FD 90     	ld (Imprime+1),hl
 719+ 90FB EB           	ex de,hl
 720+ 90FC
 721+ 90FC              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 90FC
 723+ 90FC 00 00 00     Imprime db 0,0,0
 724+ 90FF
 725+ 90FF 3A 23 86     	ld a,(Numero_de_malotes)
 726+ 9102 3D           	dec a
 727+ 9103 28 09        	jr z,1F
 728+ 9105 32 23 86      	ld (Numero_de_malotes),a
 729+ 9108
 730+ 9108 ED 7B 26 86   	ld sp,(Stack_2)
 731+ 910C 18 D8        	jr 2B
 732+ 910E
 733+ 910E AF           1 xor a
 734+ 910F 32 26 86     	ld (Stack_2),a
 735+ 9112 C9           	ret
 736+ 9113
 737+ 9113              ; -----------------------------------------------------------------------------------
 738+ 9113              ;
 739+ 9113              ;	28/2/23
 740+ 9113              ;
 741+ 9113              ;	Pinta los disparos generados.
 742+ 9113
 743+ 9113              Extrae_foto_disparos
 744+ 9113
 745+ 9113 3A 2C 86     	ld a,(Numero_de_disparotes)
 746+ 9116 A7           	and a
 747+ 9117 C8           	ret z
 748+ 9118 ED 73 24 86  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 911C 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 911F
 751+ 911F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 9121 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 9122 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 9123
 755+ 9123 ED 73 26 86  	ld (Stack_2),sp
 756+ 9127 ED 7B 24 86  	ld sp,(Stack)
 757+ 912B
 758+ 912B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 912B
 760+ 912B 3E CD        	ld a,$cd
 761+ 912D 32 35 91     	ld (Imprime2),a
 762+ 9130 EB           	ex de,hl
 763+ 9131 22 36 91     	ld (Imprime2+1),hl
 764+ 9134 EB           	ex de,hl
 765+ 9135
 766+ 9135              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 9135
 768+ 9135 00 00 00     Imprime2 db 0,0,0
 769+ 9138
 770+ 9138 3A 2C 86     	ld a,(Numero_de_disparotes)
 771+ 913B 3D           	dec a
 772+ 913C 28 09        	jr z,1F
 773+ 913E 32 2C 86      	ld (Numero_de_disparotes),a
 774+ 9141
 775+ 9141 ED 7B 26 86  	ld sp,(Stack_2)
 776+ 9145 18 D8        	jr 2B
 777+ 9147
 778+ 9147 AF           1 xor a
 779+ 9148 32 26 86     	ld (Stack_2),a
 780+ 914B C9           	ret
 781+ 914C
# file closed: Draw_XOR.asm
1054  914C              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 914C              ;   índices de Rutinas de impresión.
   2+ 914C
   3+ 914C 5C 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 914E 89 91            defw Pinta_Amadeus_3x2
   5+ 9150
   6+ 9150 DF 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9152 7F 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9154 33 92            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9156
  10+ 9156 09 92        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9158 0D 93            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 915A C1 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 915C
  14+ 915C
  15+ 915C              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 915C              ;
  17+ 915C              ;   12/12/22
  18+ 915C              ;
  19+ 915C              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 915C              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 915C              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 915C              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 915C              ;
  24+ 915C              ;   Modifica: DE y HL.
  25+ 915C
  26+ 915C ED 73 24 86  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9160 FD F9        	ld sp,iy
  28+ 9162 06 10            ld b,16
  29+ 9164 D1           1 pop de
  30+ 9165 7B               ld a,e
  31+ 9166 AE               xor (hl)
  32+ 9167 77           	ld (hl),a
  33+ 9168 23           	inc hl
  34+ 9169 7A               ld a,d
  35+ 916A AE               xor (hl)
  36+ 916B 77           	ld (hl),a
  37+ 916C 2B           	dec hl
  38+ 916D 24           	inc h
  39+ 916E 7C               ld a,h
  40+ 916F E6 07            and 7
  41+ 9171 20 0A            jr nz,2F
  42+ 9173 7D               ld a,l
  43+ 9174 C6 20            add a,$20
  44+ 9176 6F               ld l,a
  45+ 9177 38 04            jr c,2F
  46+ 9179 7C               ld a,h
  47+ 917A D6 08            sub 8
  48+ 917C 67               ld h,a
  49+ 917D 7C           2 ld a,h
  50+ 917E FE 58            cp $58
  51+ 9180 28 02            jr z,3F
  52+ 9182 10 E0            djnz 1B
  53+ 9184 ED 7B 24 86  3 ld sp,(Stack)
  54+ 9188 C9           	ret
  55+ 9189
  56+ 9189 ED 73 24 86  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 918D FD F9        	ld sp,iy
  58+ 918F 06 08            ld b,8
  59+ 9191 D1           1 pop de
  60+ 9192 7B               ld a,e
  61+ 9193 AE               xor (hl)
  62+ 9194 77           	ld (hl),a
  63+ 9195 23           	inc hl
  64+ 9196 7A               ld a,d
  65+ 9197 AE               xor (hl)
  66+ 9198 77           	ld (hl),a
  67+ 9199 23           	inc hl
  68+ 919A D1           	pop de
  69+ 919B 7B               ld a,e
  70+ 919C AE               xor (hl)
  71+ 919D 77           	ld (hl),a
  72+ 919E 2B           	dec hl
  73+ 919F 2B           	dec hl
  74+ 91A0 24           	inc h
  75+ 91A1 7C               ld a,h
  76+ 91A2 E6 07            and 7
  77+ 91A4 20 0A            jr nz,2F
  78+ 91A6 7D               ld a,l
  79+ 91A7 C6 20            add a,$20
  80+ 91A9 6F               ld l,a
  81+ 91AA 38 04            jr c,2F
  82+ 91AC 7C               ld a,h
  83+ 91AD D6 08            sub 8
  84+ 91AF 67               ld h,a
  85+ 91B0 7C           2 ld a,h
  86+ 91B1 FE 58            cp $58
  87+ 91B3 28 25            jr z,4F
  88+ 91B5 7A               ld a,d
  89+ 91B6 AE               xor (hl)
  90+ 91B7 77               ld (hl),a
  91+ 91B8 D1           	pop de
  92+ 91B9 23           	inc hl
  93+ 91BA 7B               ld a,e
  94+ 91BB AE               xor (hl)
  95+ 91BC 77           	ld (hl),a
  96+ 91BD 23           	inc hl
  97+ 91BE 7A               ld a,d
  98+ 91BF AE               xor (hl)
  99+ 91C0 77           	ld (hl),a
 100+ 91C1 2B           	dec hl
 101+ 91C2 2B           	dec hl
 102+ 91C3 24           	inc h
 103+ 91C4 7C               ld a,h
 104+ 91C5 E6 07            and 7
 105+ 91C7 20 0A            jr nz,3F
 106+ 91C9 7D               ld a,l
 107+ 91CA C6 20            add a,$20
 108+ 91CC 6F               ld l,a
 109+ 91CD 38 04            jr c,3F
 110+ 91CF 7C               ld a,h
 111+ 91D0 D6 08            sub 8
 112+ 91D2 67               ld h,a
 113+ 91D3 7C           3 ld a,h
 114+ 91D4 FE 58            cp $58
 115+ 91D6 28 02            jr z,4F
 116+ 91D8 10 B7            djnz 1B
 117+ 91DA ED 7B 24 86  4 ld sp,(Stack)
 118+ 91DE C9           	ret
 119+ 91DF
 120+ 91DF              ; ---------------------------------------------------
 121+ 91DF
 122+ 91DF ED 73 24 86  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 91E3 FD F9        	ld sp,iy
 124+ 91E5
 125+ 91E5              ; >>>
 126+ 91E5
 127+ 91E5 06 10            ld b,16
 128+ 91E7 D1           1 pop de
 129+ 91E8 7A           	ld a,d
 130+ 91E9 AE           	xor (hl)
 131+ 91EA 77           	ld (hl),a
 132+ 91EB 24           	inc h
 133+ 91EC 7C               ld a,h
 134+ 91ED E6 07            and 7
 135+ 91EF 20 0C            jr nz,2F
 136+ 91F1 7D               ld a,l
 137+ 91F2 C6 20            add a,$20
 138+ 91F4 6F               ld l,a
 139+ 91F5 38 06            jr c,2F
 140+ 91F7 7C               ld a,h
 141+ 91F8 D6 08            sub 8
 142+ 91FA 67               ld h,a
 143+ 91FB 18 00            jr 2F
 144+ 91FD 7C           2 ld a,h
 145+ 91FE FE 58            cp $58
 146+ 9200 28 02            jr z,3F
 147+ 9202 10 E3            djnz 1B
 148+ 9204 ED 7B 24 86  3 ld sp,(Stack)
 149+ 9208 C9           	ret
 150+ 9209
 151+ 9209 ED 73 24 86  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 920D FD F9        	ld sp,iy
 153+ 920F
 154+ 920F              ; >>>
 155+ 920F
 156+ 920F 06 10            ld b,16
 157+ 9211 D1           1 pop de
 158+ 9212 7B           	ld a,e
 159+ 9213 AE           	xor (hl)
 160+ 9214 77           	ld (hl),a
 161+ 9215 24           	inc h
 162+ 9216 7C               ld a,h
 163+ 9217 E6 07            and 7
 164+ 9219 20 0C            jr nz,2F
 165+ 921B 7D               ld a,l
 166+ 921C C6 20            add a,$20
 167+ 921E 6F               ld l,a
 168+ 921F 38 06            jr c,2F
 169+ 9221 7C               ld a,h
 170+ 9222 D6 08            sub 8
 171+ 9224 67               ld h,a
 172+ 9225 18 00            jr 2F
 173+ 9227 7C           2 ld a,h
 174+ 9228 FE 58            cp $58
 175+ 922A 28 02            jr z,3F
 176+ 922C 10 E3            djnz 1B
 177+ 922E ED 7B 24 86  3 ld sp,(Stack)
 178+ 9232 C9           	ret
 179+ 9233
 180+ 9233              ; ---------------------------------------------------
 181+ 9233
 182+ 9233 ED 73 24 86  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9237 FD F9        	ld sp,iy
 184+ 9239 06 08            ld b,8
 185+ 923B D1           1 pop de
 186+ 923C 7A           	ld a,d
 187+ 923D AE           	xor (hl)
 188+ 923E 77           	ld (hl),a
 189+ 923F 23           	inc hl
 190+ 9240 D1           	pop de
 191+ 9241 7B           	ld a,e
 192+ 9242 AE           	xor (hl)
 193+ 9243 77           	ld (hl),a
 194+ 9244 2B           	dec hl
 195+ 9245 24            	inc h
 196+ 9246 7C               ld a,h
 197+ 9247 E6 07            and 7
 198+ 9249 20 0A            jr nz,2F
 199+ 924B 7D               ld a,l
 200+ 924C C6 20            add a,$20
 201+ 924E 6F               ld l,a
 202+ 924F 38 04            jr c,2F
 203+ 9251 7C               ld a,h
 204+ 9252 D6 08            sub 8
 205+ 9254 67               ld h,a
 206+ 9255 7C           2 ld a,h
 207+ 9256 FE 58            cp $58
 208+ 9258 28 20            jr z,4F
 209+ 925A D1               pop de
 210+ 925B 7B           	ld a,e
 211+ 925C AE           	xor (hl)
 212+ 925D 77           	ld (hl),a
 213+ 925E 23           	inc hl
 214+ 925F 7A           	ld a,d
 215+ 9260 AE           	xor (hl)
 216+ 9261 77           	ld (hl),a
 217+ 9262 2B           	dec hl
 218+ 9263 24           	inc h
 219+ 9264 7C               ld a,h
 220+ 9265 E6 07            and 7
 221+ 9267 20 0A            jr nz,3F
 222+ 9269 7D               ld a,l
 223+ 926A C6 20            add a,$20
 224+ 926C 6F               ld l,a
 225+ 926D 38 04            jr c,3F
 226+ 926F 7C               ld a,h
 227+ 9270 D6 08            sub 8
 228+ 9272 67               ld h,a
 229+ 9273 7C           3 ld a,h
 230+ 9274 FE 58            cp $58
 231+ 9276 28 02            jr z,4F
 232+ 9278 10 C1            djnz 1B
 233+ 927A ED 7B 24 86  4 ld sp,(Stack)
 234+ 927E C9           	ret
 235+ 927F
 236+ 927F ED 73 24 86  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9283 FD F9        	ld sp,iy
 238+ 9285 06 08            ld b,8
 239+ 9287 D1           1 pop de
 240+ 9288 D1           	pop de
 241+ 9289 7B           	ld a,e
 242+ 928A AE           	xor (hl)
 243+ 928B 77           	ld (hl),a
 244+ 928C 24            	inc h
 245+ 928D 7C               ld a,h
 246+ 928E E6 07            and 7
 247+ 9290 20 0A            jr nz,2F
 248+ 9292 7D               ld a,l
 249+ 9293 C6 20            add a,$20
 250+ 9295 6F               ld l,a
 251+ 9296 38 04            jr c,2F
 252+ 9298 7C               ld a,h
 253+ 9299 D6 08            sub 8
 254+ 929B 67               ld h,a
 255+ 929C 7C           2 ld a,h
 256+ 929D FE 58            cp $58
 257+ 929F 28 1B            jr z,4F
 258+ 92A1 D1               pop de
 259+ 92A2 7A           	ld a,d
 260+ 92A3 AE           	xor (hl)
 261+ 92A4 77           	ld (hl),a
 262+ 92A5 24           	inc h
 263+ 92A6 7C               ld a,h
 264+ 92A7 E6 07            and 7
 265+ 92A9 20 0A            jr nz,3F
 266+ 92AB 7D               ld a,l
 267+ 92AC C6 20            add a,$20
 268+ 92AE 6F               ld l,a
 269+ 92AF 38 04            jr c,3F
 270+ 92B1 7C               ld a,h
 271+ 92B2 D6 08            sub 8
 272+ 92B4 67               ld h,a
 273+ 92B5 7C           3 ld a,h
 274+ 92B6 FE 58            cp $58
 275+ 92B8 28 02            jr z,4F
 276+ 92BA 10 CB            djnz 1B
 277+ 92BC ED 7B 24 86  4 ld sp,(Stack)
 278+ 92C0 C9           	ret
 279+ 92C1
 280+ 92C1 ED 73 24 86  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 92C5 FD F9        	ld sp,iy
 282+ 92C7 06 08            ld b,8
 283+ 92C9 D1           1 pop de
 284+ 92CA 7B           	ld a,e
 285+ 92CB AE           	xor (hl)
 286+ 92CC 77           	ld (hl),a
 287+ 92CD 23           	inc hl
 288+ 92CE 7A           	ld a,d
 289+ 92CF AE           	xor (hl)
 290+ 92D0 77           	ld (hl),a
 291+ 92D1 2B           	dec hl
 292+ 92D2 24             	inc h
 293+ 92D3 7C               ld a,h
 294+ 92D4 E6 07            and 7
 295+ 92D6 20 0A            jr nz,2F
 296+ 92D8 7D               ld a,l
 297+ 92D9 C6 20            add a,$20
 298+ 92DB 6F               ld l,a
 299+ 92DC 38 04            jr c,2F
 300+ 92DE 7C               ld a,h
 301+ 92DF D6 08            sub 8
 302+ 92E1 67               ld h,a
 303+ 92E2 7C           2 ld a,h
 304+ 92E3 FE 58            cp $58
 305+ 92E5 28 21            jr z,4F
 306+ 92E7 D1               pop de
 307+ 92E8 7A           	ld a,d
 308+ 92E9 AE           	xor (hl)
 309+ 92EA 77           	ld (hl),a
 310+ 92EB 23           	inc hl
 311+ 92EC D1               pop de
 312+ 92ED 7B           	ld a,e
 313+ 92EE AE           	xor (hl)
 314+ 92EF 77           	ld (hl),a
 315+ 92F0 2B           	dec hl
 316+ 92F1 24           	inc h
 317+ 92F2 7C               ld a,h
 318+ 92F3 E6 07            and 7
 319+ 92F5 20 0A            jr nz,3F
 320+ 92F7 7D               ld a,l
 321+ 92F8 C6 20            add a,$20
 322+ 92FA 6F               ld l,a
 323+ 92FB 38 04            jr c,3F
 324+ 92FD 7C               ld a,h
 325+ 92FE D6 08            sub 8
 326+ 9300 67               ld h,a
 327+ 9301 7C           3 ld a,h
 328+ 9302 FE 58            cp $58
 329+ 9304 28 02            jr z,4F
 330+ 9306 10 C1            djnz 1B
 331+ 9308 ED 7B 24 86  4 ld sp,(Stack)
 332+ 930C C9           	ret
 333+ 930D
 334+ 930D ED 73 24 86  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9311 FD F9        	ld sp,iy
 336+ 9313 06 08            ld b,8
 337+ 9315 D1           1 pop de
 338+ 9316 7B           	ld a,e
 339+ 9317 AE           	xor (hl)
 340+ 9318 77           	ld (hl),a
 341+ 9319 24            	inc h
 342+ 931A 7C               ld a,h
 343+ 931B E6 07            and 7
 344+ 931D 20 0A            jr nz,2F
 345+ 931F 7D               ld a,l
 346+ 9320 C6 20            add a,$20
 347+ 9322 6F               ld l,a
 348+ 9323 38 04            jr c,2F
 349+ 9325 7C               ld a,h
 350+ 9326 D6 08            sub 8
 351+ 9328 67               ld h,a
 352+ 9329 7C           2 ld a,h
 353+ 932A FE 58            cp $58
 354+ 932C 28 1C            jr z,4F
 355+ 932E D1               pop de
 356+ 932F 7A           	ld a,d
 357+ 9330 AE           	xor (hl)
 358+ 9331 77           	ld (hl),a
 359+ 9332 24           	inc h
 360+ 9333 7C               ld a,h
 361+ 9334 E6 07            and 7
 362+ 9336 20 0A            jr nz,3F
 363+ 9338 7D               ld a,l
 364+ 9339 C6 20            add a,$20
 365+ 933B 6F               ld l,a
 366+ 933C 38 04            jr c,3F
 367+ 933E 7C               ld a,h
 368+ 933F D6 08            sub 8
 369+ 9341 67               ld h,a
 370+ 9342 7C           3 ld a,h
 371+ 9343 FE 58            cp $58
 372+ 9345 28 03            jr z,4F
 373+ 9347 D1               pop de
 374+ 9348 10 CB            djnz 1B
 375+ 934A ED 7B 24 86  4 ld sp,(Stack)
 376+ 934E C9           	ret
 377+ 934F
 378+ 934F              ; ---------------------------------------------------
 379+ 934F              ;
 380+ 934F              ;   27/02/23
 381+ 934F              ;
 382+ 934F              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 934F              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 934F              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 934F
 386+ 934F ED 73 24 86  Pinta_Disparo ld (Stack),sp
 387+ 9353 FD F9            ld sp,iy
 388+ 9355 06 02            ld b,2
 389+ 9357 D1           1 pop de
 390+ 9358 7B               ld a,e
 391+ 9359 AE               xor (hl)
 392+ 935A 77               ld (hl),a
 393+ 935B 23               inc hl
 394+ 935C 7A               ld a,d
 395+ 935D AE               xor (hl)
 396+ 935E 77               ld (hl),a
 397+ 935F 2B               dec hl
 398+ 9360
 399+ 9360 24               inc h
 400+ 9361 7C               ld a,h
 401+ 9362 E6 07            and 7
 402+ 9364 20 0A            jr nz,2F
 403+ 9366 7D               ld a,l
 404+ 9367 C6 20            add a,$20
 405+ 9369 6F               ld l,a
 406+ 936A 38 04            jr c,2F
 407+ 936C 7C               ld a,h
 408+ 936D D6 08            sub 8
 409+ 936F 67               ld h,a
 410+ 9370 7C           2 ld a,h
 411+ 9371 FE 58            cp $58
 412+ 9373 28 02            jr z,3F
 413+ 9375
 414+ 9375 10 E0            djnz 1B
 415+ 9377 ED 7B 24 86  3 ld sp,(Stack)
 416+ 937B C9               ret
 417+ 937C
# file closed: Rutinas_de_impresion_sprites.asm
1055  937C              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 937C              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 937C              ;
   3+ 937C              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 937C              ;
   5+ 937C              ; *****************************************************************************************************************************************************************************************
   6+ 937C              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 937C
   8+ 937C 7C           calcula_tercio ld a,h
   9+ 937D E6 18        	and $18
  10+ 937F CB 2F        	sra a
  11+ 9381 CB 2F        	sra a
  12+ 9383 CB 2F        	sra a
  13+ 9385 C9           	ret
  14+ 9386
# file closed: calcula_tercio.asm
1056  9386              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9386              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9386              ;
   3+ 9386              ;
   4+ 9386              ;	CLS.
   5+ 9386              ;
   6+ 9386              ;	Limpia la pantalla y define sus atributos.
   7+ 9386              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9386              ;
   9+ 9386              ;	COLORES: 0 ..... NEGRO
  10+ 9386              ;    		 1 ..... AZUL
  11+ 9386              ; 			 2 ..... ROJO
  12+ 9386              ;			 3 ..... MAGENTA
  13+ 9386              ; 			 4 ..... VERDE
  14+ 9386              ; 			 5 ..... CIAN
  15+ 9386              ;			 6 ..... AMARILLO
  16+ 9386              ; 			 7 ..... BLANCO
  17+ 9386              ;
  18+ 9386              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9386              ;
  20+ 9386              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9386
  22+ 9386
  23+ 9386 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9389 11 01 40     	LD DE,$4001
  25+ 938C 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 938F 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9391 ED B0        	LDIR
  28+ 9393 01 FF 02     	LD BC,767
  29+ 9396 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9397 ED B0        	LDIR
  31+ 9399 C9           	ret
  32+ 939A
# file closed: Cls.asm
1057  939A              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 939A              ; ******************************************************************************************************************************************************************************************
   2+ 939A              ;
   3+ 939A              ;   22/01/23
   4+ 939A              ;
   5+ 939A              ;	Mov_down
   6+ 939A              ;
   7+ 939A              ; 	Mueve el Sprite X px hacia abajo.
   8+ 939A              ;
   9+ 939A              ;
  10+ 939A 21 0C 86     Mov_down ld hl,Ctrl_0
  11+ 939D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 939F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 939F              ; 																	; _ en el caso de que no lo haya.
  14+ 939F 3A F6 85     	ld a,(Vel_down)
  15+ 93A2 47           	ld b,a
  16+ 93A3 2A E0 85         ld hl,(Posicion_actual)
  17+ 93A6 CD 7C 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 93A9 E6 02        	and 2
  19+ 93AB 28 0F        	jr z,1F
  20+ 93AD
  21+ 93AD              ; Nos encontramos en el último tercio de pantalla.
  22+ 93AD              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 93AD
  24+ 93AD 7C           	ld a,h
  25+ 93AE FE 57        	cp $57
  26+ 93B0 20 0A        	jr nz,1F
  27+ 93B2 7D           	ld a,l
  28+ 93B3 C6 20        	add $20
  29+ 93B5 30 05        	jr nc,1F
  30+ 93B7
  31+ 93B7              ; ------------------------------
  32+ 93B7 CD 92 96     	call Reaparece_arriba
  33+ 93BA              ;	call Reinicio
  34+ 93BA              ; ------------------------------
  35+ 93BA
  36+ 93BA 18 08        	jr 3F
  37+ 93BC CD BC 90     1 call NextScan
  38+ 93BF 22 E0 85     	ld (Posicion_actual),hl
  39+ 93C2 10 E2            djnz 2B
  40+ 93C4 CD A8 96     3 call Genera_coordenadas
  41+ 93C7 C9           	ret
  42+ 93C8
  43+ 93C8              ; ******************************************************************************************************************************************************************************************
  44+ 93C8              ;
  45+ 93C8              ;   22/01/23
  46+ 93C8              ;
  47+ 93C8              ;	Mov_up
  48+ 93C8              ;
  49+ 93C8              ; 	Mueve el Sprite hacia arriba.
  50+ 93C8              ;
  51+ 93C8              ;
  52+ 93C8 21 0C 86     Mov_up ld hl,Ctrl_0
  53+ 93CB CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 93CD              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 93CD              ; 																		; _ en el caso de que no lo haya.
  56+ 93CD 3A F5 85     	ld a,(Vel_up)
  57+ 93D0 47           	ld b,a
  58+ 93D1 2A E0 85     	ld hl,(Posicion_actual)
  59+ 93D4 CD 7C 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 93D7 A7           	and a
  61+ 93D8 20 10        	jr nz,1F
  62+ 93DA
  63+ 93DA              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 93DA              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 93DA
  66+ 93DA 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 93DB FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 93DD 20 0B            jr nz,1F
  69+ 93DF 7D               ld a,l
  70+ 93E0 D6 20            sub $20
  71+ 93E2 30 06            jr nc,1F
  72+ 93E4 25               dec h
  73+ 93E5
  74+ 93E5              ; -----------------------------
  75+ 93E5 CD 82 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 93E8              ;	call Reinicio
  77+ 93E8              ; -----------------------------
  78+ 93E8
  79+ 93E8 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 93EA CD CB 90     1 call PreviousScan
  81+ 93ED 22 E0 85     	ld (Posicion_actual),hl
  82+ 93F0 10 E2            djnz 3B
  83+ 93F2 CD A8 96     2 call Genera_coordenadas
  84+ 93F5 C9           	ret
  85+ 93F6
  86+ 93F6              ; ******************************************************************************************************************************************************************************************
  87+ 93F6              ;
  88+ 93F6              ;	19/10/22
  89+ 93F6              ;
  90+ 93F6              ;	Mov_right.
  91+ 93F6              ;
  92+ 93F6              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 93F6              ;
  94+ 93F6
  95+ 93F6 21 0C 86     Mov_right ld hl,Ctrl_0
  96+ 93F9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 93FB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 93FB              ; 																	; _ en el caso de que no lo haya.
  99+ 93FB 3A 0C 86     	ld a,(Ctrl_0)
 100+ 93FE CB 77        	bit 6,a
 101+ 9400 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 9402
 103+ 9402 CD 30 96     	call Stop_Amadeus_right
 104+ 9405 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 9406 18 4D        	jr 8F
 106+ 9408
 107+ 9408 3A E4 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 940B FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 940D 20 46        	jr nz,8F
 110+ 940F
 111+ 940F 3A E6 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 9412 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 9413 28 40        	jr z,8F
 114+ 9415
 115+ 9415              ; ---------- ---------- ----------
 116+ 9415              ;
 117+ 9415              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 9415
 119+ 9415 3A F4 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 9418 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 941A 28 11        	jr z,1F
 122+ 941C 38 06        	jr c,6F
 123+ 941E FE 04        	cp 4
 124+ 9420 28 14        	jr z,7F
 125+ 9422 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 9424
 127+ 9424              ; ---------- ---------- ----------
 128+ 9424              ;
 129+ 9424              ; Perfiles de velocidad
 130+ 9424              ;
 131+ 9424
 132+ 9424 3A E6 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 9427 FE FE        	cp $fe
 134+ 9429 20 2A        	jr nz,8F
 135+ 942B 18 10        	jr 3F
 136+ 942D 3A E6 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 9430 FE FD        	cp $fd
 138+ 9432 20 21        	jr nz,8F
 139+ 9434 18 07        	jr 3F
 140+ 9436 3A E6 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 9439 FE FB        	cp $fb
 142+ 943B 20 18        	jr nz,8F
 143+ 943D
 144+ 943D              ; ---------- ---------- ----------
 145+ 943D
 146+ 943D              3
 147+ 943D CD 70 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 9440              ;	call Reinicio
 149+ 9440
 150+ 9440              ; ---------- ---------- ----------
 151+ 9440              ;
 152+ 9440              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 9440
 154+ 9440 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 9442 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 9443 CD 5C 94     	call DESPLZ_DER
 157+ 9446 C1           	pop bc
 158+ 9447 10 F9        	djnz 5B
 159+ 9449 2A E0 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 944C 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 944D 22 E0 85     	ld (Posicion_actual),hl
 162+ 9450 CD A8 96     	call Genera_coordenadas
 163+ 9453 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 9455
 165+ 9455              ; ---------- ---------- ----------
 166+ 9455
 167+ 9455 2A E0 85     8 ld hl,(Posicion_actual)
 168+ 9458 CD 5C 94     	call DESPLZ_DER
 169+ 945B C9           2 ret
 170+ 945C
 171+ 945C              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 945C              ;
 173+ 945C              ;	22/9/22
 174+ 945C              ;
 175+ 945C
 176+ 945C CD 6B 94     DESPLZ_DER call Desplaza_derecha
 177+ 945F CD B7 94         call modifica_parametros_1er_DESPLZ_2
 178+ 9462 CD E0 94         call Ciclo_completo
 179+ 9465 21 0C 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 9468 CB FE        	set 7,(hl)
 181+ 946A C9           	ret
 182+ 946B
 183+ 946B              ; ******************************************************************************************************************************************************************************************
 184+ 946B              ;	15/02/23
 185+ 946B              ;
 186+ 946B
 187+ 946B 3A F4 85     Desplaza_derecha ld a,(Vel_right)
 188+ 946E 47           	ld b,a
 189+ 946F 2A EC 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9472 23           1 inc hl
 191+ 9473 23           	inc hl
 192+ 9474 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 9476 22 EC 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 9479 CD 58 88     	call Extrae_address
 195+ 947C 22 E2 85     	ld (Puntero_objeto),hl
 196+ 947F
 197+ 947F              ; Modifica (Puntero_DESPLZ_izq).
 198+ 947F
 199+ 947F              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 947F              ; Cuántos movimientos hemos hecho ??
 201+ 947F              ; DE contiene (Puntero_DESPLZ_der).
 202+ 947F
 203+ 947F 2A E8 85     7 ld hl,(Indice_Sprite_der)
 204+ 9482 EB           	ex de,hl
 205+ 9483 A7           	and a
 206+ 9484 ED 52        	sbc hl,de
 207+ 9486 CB 3D        	srl l
 208+ 9488 3E 08        6 ld a,8
 209+ 948A 95           	sub l
 210+ 948B 30 1E        	jr nc,3F
 211+ 948D
 212+ 948D              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 948D              ; B="0".
 214+ 948D
 215+ 948D 04           4 inc b
 216+ 948E 3C           	inc a
 217+ 948F 20 FC        	jr nz,4B
 218+ 9491 78           	ld a,b
 219+ 9492 08           	ex af,af
 220+ 9493 2A E8 85     	ld hl,(Indice_Sprite_der)
 221+ 9496 23           5 inc hl
 222+ 9497 23           	inc hl
 223+ 9498 10 FC        	djnz 5B
 224+ 949A 22 EC 85     	ld (Puntero_DESPLZ_der),hl
 225+ 949D CD 58 88     	call Extrae_address
 226+ 94A0 22 E2 85     	ld (Puntero_objeto),hl
 227+ 94A3
 228+ 94A3              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 94A3              ; _(Posicion_actual).
 230+ 94A3
 231+ 94A3 21 E0 85     	ld hl,Posicion_actual
 232+ 94A6 34           	inc (hl)
 233+ 94A7 08               ex af,af
 234+ 94A8 6F           	ld l,a
 235+ 94A9 18 DD        	jr 6B
 236+ 94AB
 237+ 94AB              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 94AB
 239+ 94AB 47           3 ld b,a
 240+ 94AC 2A EA 85     	ld hl,(Indice_Sprite_izq)
 241+ 94AF 23           2 inc hl
 242+ 94B0 23           	inc hl
 243+ 94B1 10 FC        	djnz 2B
 244+ 94B3 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 94B6 C9           8 ret
 246+ 94B7
 247+ 94B7              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 94B7              ;
 249+ 94B7              ;	24/7/22
 250+ 94B7              ;
 251+ 94B7              ;	modifica_parametros_1er_DESPLZ_2
 252+ 94B7              ;
 253+ 94B7              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 94B7              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 94B7              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 94B7
 257+ 94B7 3A E6 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 94BA A7           	and a
 259+ 94BB 20 1F        	jr nz,1F
 260+ 94BD D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 94BF 32 E6 85         ld (CTRL_DESPLZ),a
 262+ 94C2
 263+ 94C2 21 DF 85     	ld hl,Columns
 264+ 94C5 34           	inc (hl)
 265+ 94C6 3A F2 85     	ld a,(Cuad_objeto)
 266+ 94C9 E6 01        	and 1
 267+ 94CB 28 0F        	jr z,1F
 268+ 94CD 2A E0 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 94D0 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 94D1 22 E0 85     	ld (Posicion_actual),hl
 271+ 94D4 CD A8 96     	call Genera_coordenadas
 272+ 94D7 CD 3C 96     	call Inc_CTRL_DESPLZ
 273+ 94DA 18 03        	jr 2F
 274+ 94DC CD 3C 96     1 call Inc_CTRL_DESPLZ
 275+ 94DF C9           2 ret
 276+ 94E0
 277+ 94E0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 94E0              ;
 279+ 94E0              ;	24/7/22
 280+ 94E0              ;
 281+ 94E0              ;	Ciclo_completo.
 282+ 94E0              ;
 283+ 94E0              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 94E0              ;
 285+ 94E0              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 94E0              ; 	Decrementamos (Columns).
 287+ 94E0              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 94E0              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 94E0
 290+ 94E0
 291+ 94E0 3A E6 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 94E3 FE FF        	cp $ff
 293+ 94E5 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 94E7 E6 F0        	and $f0
 295+ 94E9 20 28        	jr nz,3F
 296+ 94EB
 297+ 94EB              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 94EB
 299+ 94EB 3A E6 85     	ld a,(CTRL_DESPLZ)
 300+ 94EE 47           	ld b,a
 301+ 94EF 3E F8        	ld a,$f8
 302+ 94F1 80           	add b
 303+ 94F2 32 E6 85     	ld (CTRL_DESPLZ),a
 304+ 94F5 18 1C        	jr 3F
 305+ 94F7 21 DF 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 94FA 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 94FB AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 94FC 32 E6 85     	ld (CTRL_DESPLZ),a
 309+ 94FF 3A F2 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 9502 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 9504 20 0A        	jr nz,2F
 312+ 9506 2A E0 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 9509 23           	inc hl
 314+ 950A 22 E0 85     	ld (Posicion_actual),hl
 315+ 950D CD A8 96     	call Genera_coordenadas
 316+ 9510
 317+ 9510              ; Inicia el puntero de Sprite.
 318+ 9510
 319+ 9510 CD 6F 88     2 call Inicia_puntero_objeto_der
 320+ 9513 C9           3 ret
 321+ 9514
 322+ 9514              ; ******************************************************************************************************************************************************************************************
 323+ 9514              ;
 324+ 9514              ;	15/02/23
 325+ 9514              ;
 326+ 9514              ;	Mov_left.
 327+ 9514              ;
 328+ 9514              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 9514              ;
 330+ 9514              Mov_left
 331+ 9514
 332+ 9514 21 0C 86     	ld hl,Ctrl_0
 333+ 9517 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 9519              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 9519              ; 																	; _ en el caso de que no lo haya.
 336+ 9519 3A 0C 86     	ld a,(Ctrl_0)
 337+ 951C CB 77        	bit 6,a
 338+ 951E 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 9520
 340+ 9520 CD 36 96     	call Stop_Amadeus_left
 341+ 9523 C8           	ret z
 342+ 9524 20 4A        	jr nz,8F
 343+ 9526
 344+ 9526 3A E4 85     11 ld a,(Coordenada_X)
 345+ 9529 A7           	and a
 346+ 952A 20 44        	jr nz,8F
 347+ 952C
 348+ 952C 3A E6 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 952F A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 9530 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 9532
 352+ 9532              ; ---------- ---------- ----------
 353+ 9532
 354+ 9532 3A F3 85     	ld a,(Vel_left)
 355+ 9535 FE 02        	cp 2
 356+ 9537 28 0F        	jr z,1F
 357+ 9539 38 04        	jr c,6F
 358+ 953B FE 04        	cp 4
 359+ 953D 28 12        	jr z,7F
 360+ 953F
 361+ 953F              ; ---------- ---------- ----------
 362+ 953F
 363+ 953F 3A E6 85     6 ld a,(CTRL_DESPLZ)
 364+ 9542 FE F8        	cp $f8
 365+ 9544 20 2A        	jr nz,8F
 366+ 9546 18 10        	jr 4F
 367+ 9548 3A E6 85     1 ld a,(CTRL_DESPLZ)
 368+ 954B FE F9        	cp $f9
 369+ 954D 20 21        	jr nz,8F
 370+ 954F 18 07        	jr 4F
 371+ 9551 3A E6 85     7 ld a,(CTRL_DESPLZ)
 372+ 9554 FE FB        	cp $fb
 373+ 9556 20 18        	jr nz,8F
 374+ 9558
 375+ 9558              ; ---------- ---------- ----------
 376+ 9558
 377+ 9558              4
 378+ 9558 CD 5E 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 955B              ;	call Reinicio
 380+ 955B
 381+ 955B              ; ---------- ---------- ----------
 382+ 955B
 383+ 955B 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 955D C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 955E
 386+ 955E              ;	ld hl,(Indice_Sprite_izq)
 387+ 955E              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 955E
 389+ 955E CD 77 95     	call DESPLZ_IZQ
 390+ 9561 C1           	pop bc
 391+ 9562 10 F9        	djnz 5B
 392+ 9564 2A E0 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 9567 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 9568 22 E0 85     	ld (Posicion_actual),hl
 395+ 956B CD A8 96     	call Genera_coordenadas
 396+ 956E 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9570
 398+ 9570              ; ---------- ---------- ----------
 399+ 9570
 400+ 9570              ; Movemos, no hay recolocación.
 401+ 9570
 402+ 9570 2A E0 85     8 ld hl,(Posicion_actual)
 403+ 9573 CD 77 95     	call DESPLZ_IZQ
 404+ 9576 C9           2 ret
 405+ 9577
 406+ 9577              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 9577              ;
 408+ 9577              ;	22/9/22
 409+ 9577
 410+ 9577              DESPLZ_IZQ
 411+ 9577
 412+ 9577 CD 86 95     	call Desplaza_izquierda
 413+ 957A CD D2 95         call modifica_parametros_1er_DESPLZ
 414+ 957D CD FA 95     	call Ciclo_completo_2
 415+ 9580 21 0C 86     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9583 CB BE        	res 7,(hl)
 417+ 9585 C9           	ret
 418+ 9586
 419+ 9586              Desplaza_izquierda
 420+ 9586
 421+ 9586 3A F3 85     	ld a,(Vel_left)
 422+ 9589 47           	ld b,a
 423+ 958A 2A EE 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 958D 23           1 inc hl
 425+ 958E 23           	inc hl
 426+ 958F 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9591 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9594 CD 58 88     	call Extrae_address
 429+ 9597 22 E2 85     	ld (Puntero_objeto),hl
 430+ 959A
 431+ 959A              ; Modifica (Puntero_DESPLZ_der).
 432+ 959A
 433+ 959A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 959A              ; Cuántos movimientos hemos hecho ??
 435+ 959A              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 959A
 437+ 959A 2A EA 85     7 ld hl,(Indice_Sprite_izq)
 438+ 959D EB           	ex de,hl
 439+ 959E A7           	and a
 440+ 959F ED 52        	sbc hl,de
 441+ 95A1 CB 3D        	srl l
 442+ 95A3 3E 08        6 ld a,8
 443+ 95A5 95           	sub l
 444+ 95A6 30 1E        	jr nc,3F
 445+ 95A8
 446+ 95A8              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 95A8              ; B="0".
 448+ 95A8
 449+ 95A8 04           4 inc b
 450+ 95A9 3C           	inc a
 451+ 95AA 20 FC        	jr nz,4B
 452+ 95AC 78           	ld a,b
 453+ 95AD 08           	ex af,af
 454+ 95AE 2A EA 85     	ld hl,(Indice_Sprite_izq)
 455+ 95B1 23           5 inc hl
 456+ 95B2 23           	inc hl
 457+ 95B3 10 FC        	djnz 5B
 458+ 95B5 22 EE 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 95B8 CD 58 88     	call Extrae_address
 460+ 95BB 22 E2 85     	ld (Puntero_objeto),hl
 461+ 95BE
 462+ 95BE              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 95BE              ; _(Posicion_actual).
 464+ 95BE
 465+ 95BE 21 E0 85     	ld hl,Posicion_actual
 466+ 95C1 35           	dec (hl)
 467+ 95C2 08           	ex af,af
 468+ 95C3 6F           	ld l,a
 469+ 95C4 18 DD        	jr 6B
 470+ 95C6
 471+ 95C6              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 95C6
 473+ 95C6 47           3 ld b,a
 474+ 95C7 2A E8 85     	ld hl,(Indice_Sprite_der)
 475+ 95CA 23           2 inc hl
 476+ 95CB 23           	inc hl
 477+ 95CC 10 FC        	djnz 2B
 478+ 95CE 22 EC 85     	ld (Puntero_DESPLZ_der),hl
 479+ 95D1 C9           8 ret
 480+ 95D2
 481+ 95D2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 95D2              ;
 483+ 95D2              ;	modifica_parametros_1er_DESPLZ
 484+ 95D2              ;
 485+ 95D2              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 95D2              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 95D2              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 95D2
 489+ 95D2 3A E6 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 95D5 A7           	and a
 491+ 95D6 20 1E        	jr nz,1F
 492+ 95D8 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 95D9 32 E6 85         ld (CTRL_DESPLZ),a
 494+ 95DC 21 DF 85     	ld hl,Columns
 495+ 95DF 34           	inc (hl)
 496+ 95E0 3A F2 85     	ld a,(Cuad_objeto)
 497+ 95E3 E6 01        	and 1
 498+ 95E5 20 0F        	jr nz,1F
 499+ 95E7 2A E0 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 95EA 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 95EB 22 E0 85     	ld (Posicion_actual),hl
 502+ 95EE CD A8 96     	call Genera_coordenadas
 503+ 95F1 CD 4D 96     	call Dec_CTRL_DESPLZ
 504+ 95F4 18 03        	jr 2F
 505+ 95F6 CD 4D 96     1 call Dec_CTRL_DESPLZ
 506+ 95F9 C9           2 ret
 507+ 95FA
 508+ 95FA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 95FA
 510+ 95FA 3A E6 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 95FD FE F7        	cp $f7
 512+ 95FF 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 9601 30 2C        	jr nc,3F
 514+ 9603
 515+ 9603              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 9603
 517+ 9603 06 00        	ld b,0
 518+ 9605 04           4 inc b
 519+ 9606 3C           	inc a
 520+ 9607 FE F7        	cp $f7
 521+ 9609 20 FA        	jr nz,4B
 522+ 960B 3E FF        	ld a,$ff
 523+ 960D 90           	sub b
 524+ 960E 32 E6 85     	ld (CTRL_DESPLZ),a
 525+ 9611 18 1C        	jr 3F
 526+ 9613
 527+ 9613              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 9613
 529+ 9613 21 DF 85     1 ld hl,Columns
 530+ 9616 35           	dec (hl)
 531+ 9617 AF           	xor a
 532+ 9618 32 E6 85     	ld (CTRL_DESPLZ),a
 533+ 961B 3A F2 85     	ld a,(Cuad_objeto)
 534+ 961E E6 01        	and 1
 535+ 9620 28 0A        	jr z,2F
 536+ 9622 2A E0 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 9625 2B           	dec hl
 538+ 9626 22 E0 85     	ld (Posicion_actual),hl
 539+ 9629 CD A8 96     	call Genera_coordenadas
 540+ 962C
 541+ 962C              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 962C
 543+ 962C CD 82 88     2 call Inicia_puntero_objeto_izq
 544+ 962F C9           3 ret
 545+ 9630
 546+ 9630              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 9630              ;
 548+ 9630              ;	19/10/22
 549+ 9630              ;
 550+ 9630              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 9630              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 9630
 553+ 9630 3A E4 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 9633 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 9635 C9           	ret
 556+ 9636
 557+ 9636              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 9636              ;
 559+ 9636              ;	19/10/22
 560+ 9636              ;
 561+ 9636              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 9636              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 9636
 564+ 9636 3A E4 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 9639 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 963B C9           	ret
 567+ 963C
 568+ 963C              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 963C              ;
 570+ 963C              ;	24/7/22
 571+ 963C              ;
 572+ 963C              ;	Inc_CTRL_DESPLZ
 573+ 963C              ;
 574+ 963C              ;
 575+ 963C              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 963C
 577+ 963C 21 E6 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 963F 3A F4 85     	ld a,(Vel_right)
 579+ 9642 A7           	and a
 580+ 9643 28 06        	jr z,1F
 581+ 9645 47           	ld b,a
 582+ 9646 34           3 inc (hl)
 583+ 9647 10 FD        	djnz 3B
 584+ 9649 18 01        	jr 2F
 585+ 964B 34           1 inc (hl)
 586+ 964C C9           2 ret
 587+ 964D
 588+ 964D              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 964D              ;
 590+ 964D              ;	5/2/23
 591+ 964D              ;
 592+ 964D              ;	Dec_CTRL_DESPLZ
 593+ 964D              ;
 594+ 964D              ;
 595+ 964D              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 964D
 597+ 964D 21 E6 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 9650 3A F3 85     	ld a,(Vel_left)
 599+ 9653 A7           	and a
 600+ 9654 28 06        	jr z,1F
 601+ 9656 47           	ld b,a
 602+ 9657 35           3 dec (hl)
 603+ 9658 10 FD        	djnz 3B
 604+ 965A 18 01        	jr 2F
 605+ 965C 35           1 dec (hl)
 606+ 965D C9           2 ret
 607+ 965E
 608+ 965E              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 965E
 610+ 965E 2A E0 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9661 01 1F 00     	ld bc,31
 612+ 9664 A7           	and a
 613+ 9665 ED 4A        	adc hl,bc
 614+ 9667 22 E0 85     	ld (Posicion_actual),hl
 615+ 966A 21 0C 86     	ld hl,Ctrl_0														; $xxx1
 616+ 966D CB C6        	set 0,(hl)
 617+ 966F C9           	ret
 618+ 9670
 619+ 9670              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9670
 621+ 9670 2A E0 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9673 01 1F 00     	ld bc,31
 623+ 9676 A7           	and a
 624+ 9677 ED 42        	sbc hl,bc
 625+ 9679 22 E0 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 967C 21 0C 86     	ld hl,Ctrl_0
 627+ 967F CB CE        	set 1,(hl)
 628+ 9681 C9           	ret
 629+ 9682
 630+ 9682              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9682
 632+ 9682 24           Reaparece_abajo inc h
 633+ 9683 01 E0 17     	ld bc,$17e0
 634+ 9686 A7           	and a
 635+ 9687 ED 4A        	adc hl,bc
 636+ 9689 22 E0 85     	ld (Posicion_actual),hl
 637+ 968C 21 0C 86     	ld hl,Ctrl_0
 638+ 968F CB D6        	set 2,(hl)
 639+ 9691 C9           	ret
 640+ 9692
 641+ 9692              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9692
 643+ 9692 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9695 A7           	and a
 645+ 9696 ED 42        	sbc hl,bc
 646+ 9698 22 E0 85     	ld (Posicion_actual),hl
 647+ 969B 21 0C 86     	ld hl,Ctrl_0
 648+ 969E CB DE        	set 3,(hl)
 649+ 96A0 C9           	ret
 650+ 96A1
 651+ 96A1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 96A1
 653+ 96A1 2A F0 85     Reinicio ld hl,(Posicion_inicio)
 654+ 96A4 22 E0 85     	ld (Posicion_actual),hl
 655+ 96A7 C9           	ret
# file closed: Direcciones.asm
1058  96A8              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 96A8              ; ------------------------------------------------------------------------
   2+ 96A8              ;
   3+ 96A8              ;	02/04/23
   4+ 96A8              ;
   5+ 96A8              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 96A8              ;	Fila superior "0", Columna izquierda "0".
   7+ 96A8              ;
   8+ 96A8              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 96A8              ;
  10+ 96A8              ;	Modifica: A,BC y DE.
  11+ 96A8
  12+ 96A8 C5           Genera_coordenadas push bc
  13+ 96A9 E5           	push hl
  14+ 96AA D5           	push de
  15+ 96AB
  16+ 96AB 2A E0 85     	ld hl,(Posicion_actual)
  17+ 96AE
  18+ 96AE 7D           	ld a,l
  19+ 96AF E6 1F        	and $1f
  20+ 96B1 32 E4 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 96B4
  22+ 96B4 CD 7C 93     	call calcula_tercio
  23+ 96B7 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 96B8
  25+ 96B8 1E 00        	ld e,0
  26+ 96BA 7D           	ld a,l
  27+ 96BB E6 E0        	and $e0
  28+ 96BD 28 01        	jr z,1F
  29+ 96BF 04           	inc b
  30+ 96C0
  31+ 96C0 04           1 inc b
  32+ 96C1 05           	dec b
  33+ 96C2 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 96C4              ;														; _ , salimos.
  35+ 96C4 1C           3 inc e
  36+ 96C5 D6 20        	sub 32
  37+ 96C7 20 FB        	jr nz,3B
  38+ 96C9 10 F5        	djnz 1B
  39+ 96CB
  40+ 96CB 7B           2 ld a,e
  41+ 96CC 32 E5 85     	ld (Coordenada_y),a
  42+ 96CF
  43+ 96CF D1           	pop de
  44+ 96D0 E1           	pop hl
  45+ 96D1 C1           	pop bc
  46+ 96D2
  47+ 96D2 C9           	ret
  48+ 96D3
  49+ 96D3              ; ------------------------------------------------------------------------
  50+ 96D3              ;	28/03/23
  51+ 96D3              ;
  52+ 96D3              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 96D3              ;	Fila superior "0", Columna izquierda "0".
  54+ 96D3              ;
  55+ 96D3              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 96D3              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 96D3              ;
  58+ 96D3              ;		DE="$120d"
  59+ 96D3              ;
  60+ 96D3              ;		D, (Coordenada_X), Columnas, $12
  61+ 96D3              ;		E, (Coordenada_y), Filas, $0d
  62+ 96D3              ;
  63+ 96D3              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 96D3
  65+ 96D3              ;	Modifica: A,BC y DE.
  66+ 96D3
  67+ 96D3
  68+ 96D3              Genera_coordenadas_disparo
  69+ 96D3
  70+ 96D3              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 96D3
  72+ 96D3 7D           	ld a,l
  73+ 96D4 E6 1F        	and $1f
  74+ 96D6 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 96D7 CD 7C 93     	call calcula_tercio
  76+ 96DA 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 96DB 1E 00        	ld e,0
  78+ 96DD 7D           	ld a,l
  79+ 96DE E6 E0        	and $e0
  80+ 96E0 28 01        	jr z,1F
  81+ 96E2 04           	inc b
  82+ 96E3 1C           1 inc e
  83+ 96E4 D6 20        	sub 32
  84+ 96E6 20 FB        	jr nz,1B
  85+ 96E8 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 96EA C9           	ret
  87+ 96EB
# file closed: Genera_coordenadas.asm
1059  96EB              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 96EB
   2+ 96EB
   3+ 96EB              ;   11/8/22
   4+ 96EB              ;
   5+ 96EB              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 96EB              ;
   7+ 96EB              ;   Mov_obj.asm
   8+ 96EB              ;
   9+ 96EB              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 96EB              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 96EB              ;
  12+ 96EB              ;   Codificación:
  13+ 96EB              ;
  14+ 96EB              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 96EB
  16+ 96EB              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 96EB
  18+ 96EB 02 40 00     Arriba db 2,%01000000,0
  19+ 96EE 02 80 00     Abajo db 2,%10000000,0
  20+ 96F1 02 20 00     Derecha db 2,%00100000,0
  21+ 96F4 02 10 00     Izquierda db 2,%00010000,0
  22+ 96F7 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 96FB 60 42 60 40
  22+ 96FF 63
  23+ 9700 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 9704 22 A3 80 A0
  24+ 9708 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 970C 84 A0 83 A0
  25+ 9710 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 9714 80 A3 22 A0
  26+ 9718 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 971C 40 60 42 60
  27+ 9720 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 9724
  29+ 9724 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 9728 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 972C 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 9730 84 00
  32+ 9732 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 9736 84 00
  33+ 9738 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 973C 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 9740 1F 1F 1F 1F
  35+ 9744 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 9748 1F 1F 1F 1F
  35+ 974C 1F
  36+ 974D 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 9751 2F 2F 2F 2F
  36+ 9755 2F 2F
  37+ 9757 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 975B 2F 2F 00
  38+ 975E
  39+ 975E              ; ----- ----- ----- ----- -----
  40+ 975E
  41+ 975E 3C 97        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9760 38 97        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9762 F4 96        Indice_mov_Izquierda defw Izquierda
  44+ 9764 F1 96        Indice_mov_Derecha defw Derecha
  45+ 9766 EE 96        Indice_mov_Abajo defw Abajo
  46+ 9768 EB 96        Indice_mov_Arriba defw Arriba
  47+ 976A 28 97        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 976C 2C 97        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 976E 24 97        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9770 32 97        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9772 F7 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9774              ; ----- ----- ----- ----- -----
  53+ 9774
  54+ 9774 3A 13 86     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 9777 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 9778 28 02            jr z,1F
  57+ 977A 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 977C 3A 14 86     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 977F C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9781 32 14 86         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9784              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9784 2A 11 86         ld hl,(Puntero_mov)
  63+ 9787 7E               ld a,(hl)
  64+ 9788 32 13 86         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 978B 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 978C 22 11 86         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 978F
  68+ 978F 3A 15 86     Decoder ld a,(Repetimos_db)
  69+ 9792 A7               and a
  70+ 9793 20 0C            jr nz,12F
  71+ 9795 2A 11 86         ld hl,(Puntero_mov)
  72+ 9798 7E               ld a,(hl)
  73+ 9799 A7               and a
  74+ 979A 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 979C E6 0F            and $0f
  76+ 979E 32 15 86         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 97A1              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 97A1 2A 11 86     12 ld hl,(Puntero_mov)
  79+ 97A4 CB 7E            bit 7,(hl)
  80+ 97A6 28 03            jr z,2F
  81+ 97A8 CD 9A 93         call Mov_down
  82+ 97AB 2A 11 86     2 ld hl, (Puntero_mov)
  83+ 97AE CB 76            bit 6,(hl)
  84+ 97B0 28 03            jr z,3F
  85+ 97B2 CD C8 93         call Mov_up
  86+ 97B5 2A 11 86     3 ld hl, (Puntero_mov)
  87+ 97B8 CB 6E            bit 5,(hl)
  88+ 97BA 28 03            jr z,4F
  89+ 97BC CD F6 93         call Mov_right
  90+ 97BF 2A 11 86     4 ld hl, (Puntero_mov)
  91+ 97C2 CB 66            bit 4,(hl)
  92+ 97C4 28 03            jr z,5F
  93+ 97C6 CD 14 95         call Mov_left
  94+ 97C9
  95+ 97C9              ; ---------- --------- --------- ---------- ----------
  96+ 97C9
  97+ 97C9 3A 15 86     5 ld a,(Repetimos_db)
  98+ 97CC A7               and a
  99+ 97CD 28 07            jr z,6F
 100+ 97CF 3D               dec a
 101+ 97D0 32 15 86         ld (Repetimos_db),a
 102+ 97D3 28 01            jr z,6f
 103+ 97D5 C9           11 ret
 104+ 97D6 21 13 86     6 ld hl,Contador_db_mov
 105+ 97D9 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 97DA 2A 11 86         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 97DD 23               inc hl
 108+ 97DE 22 11 86         ld (Puntero_mov),hl
 109+ 97E1 18 F2            jr 11B
 110+ 97E3 2A 0F 86     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 97E6 3A 14 86         ld a,(Incrementa_puntero)
 112+ 97E9 47               ld b,a
 113+ 97EA 23           8 inc hl
 114+ 97EB 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 97ED 5E               ld e,(hl)
 116+ 97EE 23               inc hl
 117+ 97EF 56               ld d,(hl)
 118+ 97F0 EB               ex de,hl
 119+ 97F1 22 11 86         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 97F4 18 DF            jr 11B
 121+ 97F6
 122+ 97F6              ; ---------- --------- --------- ---------- ----------
 123+ 97F6              ;
 124+ 97F6              ;   11/8/22
 125+ 97F6              ;
 126+ 97F6              ;   Prepara_Puntero_mov
 127+ 97F6
 128+ 97F6 E5           Prepara_Puntero_mov push hl
 129+ 97F7 D5               push de
 130+ 97F8 2A 0F 86         ld hl,(Puntero_indice_mov)
 131+ 97FB 5E               ld e,(hl)
 132+ 97FC 23               inc hl
 133+ 97FD 56               ld d,(hl)
 134+ 97FE EB               ex de,hl
 135+ 97FF 22 11 86         ld (Puntero_mov),hl
 136+ 9802 D1               pop de
 137+ 9803 E1               pop hl
 138+ 9804 C9               ret
 139+ 9805
 140+ 9805              ; ---------- --------- --------- ---------- ----------
 141+ 9805              ;
 142+ 9805              ;   11/8/22
 143+ 9805              ;
 144+ 9805              ;   Reinicia_el_movimiento
 145+ 9805
 146+ 9805 CD F6 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 9808 AF               xor a
 148+ 9809 32 13 86         ld (Contador_db_mov),a
 149+ 980C 32 14 86         ld (Incrementa_puntero),a
 150+ 980F C3 74 97         jp Movimiento
 151+ 9812 C9               ret
 152+ 9813              ; ---------- --------- --------- ---------- ----------
 153+ 9813
 154+ 9813
 155+ 9813
 156+ 9813
 157+ 9813
 158+ 9813
 159+ 9813
 160+ 9813
 161+ 9813
 162+ 9813
 163+ 9813
 164+ 9813
 165+ 9813
 166+ 9813
 167+ 9813
 168+ 9813
 169+ 9813
 170+ 9813
# file closed: Patrones_de_mov.asm
1060  9813              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9813              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9813              ;
   3+ 9813              ;	3/1/23
   4+ 9813              ;
   5+ 9813              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9813
   7+ 9813              ;	ADC HL,SP	LD (addr),SP
   8+ 9813              ;	ADD HL,SP	LD SP,(addr)
   9+ 9813              ;	ADD IX,SP	LD SP,nn
  10+ 9813              ; 	ADD IY,SP	LD SP,HL
  11+ 9813              ;				LD SP,IX
  12+ 9813              ;	DEC SP		LD SP,IY
  13+ 9813
  14+ 9813              ;	EX (SP),HL
  15+ 9813              ;	EX (SP),IX
  16+ 9813              ;	EX (SP),IY
  17+ 9813
  18+ 9813              ;	INC SP
  19+ 9813
  20+ 9813
  21+ 9813                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 24 86      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 1A 86         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 2A 86         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 28 86     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 2A 86         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 28 86     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 24 86  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1061  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1062  7FE6
1063  7FE6              	SAVESNA "Pruebas.sna", START
1064  7FE6
1065  7FE6
1066  7FE6
# file closed: Banco_de_pruebas.asm
