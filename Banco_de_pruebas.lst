# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 3F 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83E8              ;                  _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        	defw 0											; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0											; Rutina de impresión.
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AE 84        	defw Entidad_1
 98+  846A E8 84        	defw Entidad_2
 99+  846C 22 85        	defw Entidad_3
100+  846E 5C 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00 00        	db 0,0											; Variables_de_borrado
128+  848F 00 00        	defw 0											;	" " " " " " "
129+  8491 00 00        	defw 0											;	" " " " " " "
130+  8493 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  8497
132+  8497 00 00        	db 0,0											; Variables_de_pintado
133+  8499 00 00        	defw 0											;	" " " " " " "
134+  849B 00 00        	defw 0											;	" " " " " " "
135+  849D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A1
137+  84A1 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  84A3
139+  84A3 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84A7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84AA
142+  84AA 00           	db 0 											; (Columnas).
143+  84AB 00 00        	defw 0											; (Limite_horizontal).
144+  84AD 00           	db 0											; (Limite_vertical).
145+  84AE
146+  84AE              ; ---------- ---------- ---------- ---------- ----------
147+  84AE
148+  84AE 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B0 00 00        	defw 0											; (Posicion_actual).
150+  84B2 00 00        	defw 0 											; (Puntero_objeto).
151+  84B4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84B7
153+  84B7 00           	db %00000000 									; (Attr).
154+  84B8
155+  84B8 00 00        	defw 0											; (Indice_Sprite_der).
156+  84BA 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84BC 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84BE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C0
160+  84C0 00 00        	defw 0											; (Posicion_inicio).
161+  84C2 00           	db 0											; (Cuad_objeto).
162+  84C3
163+  84C3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84C7
165+  84C7 00 00        	db 0,0										    ; Variables_de_borrado
166+  84C9 00 00        	defw 0											;	" " " " " " "
167+  84CB 00 00        	defw 0											;	" " " " " " "
168+  84CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D1
170+  84D1 00 00        	db 0,0											; Variables_de_pintado
171+  84D3 00 00        	defw 0											;	" " " " " " "
172+  84D5 00 00        	defw 0											;	" " " " " " "
173+  84D7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84DB
175+  84DB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84DD
177+  84DD 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84E4
180+  84E4 00           	db 0 											; (Columnas).
181+  84E5 00 00        	defw 0											; (Limite_horizontal).
182+  84E7 00           	db 0											; (Limite_vertical).
183+  84E8
184+  84E8              ; ---------- ---------- ---------- ---------- ----------
185+  84E8
186+  84E8 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84EA 00 00        	defw 0                                          ; (Posicion_actual).
188+  84EC 00 00        	defw 0											; (Puntero_objeto).
189+  84EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F1
191+  84F1 02           	db %00000010									; (Attr).
192+  84F2
193+  84F2 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84F4 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84FA
198+  84FA 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  84FC 02           	db 2											; (Cuad_objeto).
200+  84FD
201+  84FD 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8501
203+  8501 00 00        	db 0,0											; Variables_de_borrado
204+  8503 00 00        	defw 0										 	;	" " " " " " "
205+  8505 00 00        	defw 0											;	" " " " " " "
206+  8507 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  850B
208+  850B 00 00        	db 0,0											; Variables_de_pintado
209+  850D 00 00        	defw 0											;	" " " " " " "
210+  850F 00 00        	defw 0											;	" " " " " " "
211+  8511 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8515
213+  8515 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8517
215+  8517 41 94 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  851B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  851E
218+  851E 00           	db 0 											; (Columnas).
219+  851F 00 00        	defw 0											; (Limite_horizontal).
220+  8521 00           	db 0											; (Limite_vertical).
221+  8522
222+  8522              ; ---------- ---------- ---------- ---------- ----------
223+  8522
224+  8522 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  8524 00 00        	defw 0                                          ; (Posicion_actual).
226+  8526 00 00        	defw 0											; (Puntero_objeto).
227+  8528 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  852B
229+  852B 04           	db %00000100									; (Attr).
230+  852C
231+  852C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  852E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  8530
234+  8530 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  8532 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  8534
237+  8534 A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  8536 01           	db 1											; (Cuad_objeto).
239+  8537
240+  8537 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  853B
242+  853B 00 00        	db 0,0											; Variables_de_borrado
243+  853D 00 00        	defw 0										 	;	" " " " " " "
244+  853F 00 00        	defw 0											;	" " " " " " "
245+  8541 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  8545
247+  8545 00 00        	db 0,0											; Variables_de_pintado
248+  8547 00 00        	defw 0											;	" " " " " " "
249+  8549 00 00        	defw 0											;	" " " " " " "
250+  854B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  854F
252+  854F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8551
254+  8551 43 94 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  8555 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8558
257+  8558 00           	db 0 											; (Columnas).
258+  8559 00 00        	defw 0											; (Limite_horizontal).
259+  855B 00           	db 0											; (Limite_vertical).
260+  855C
261+  855C              ; ---------- ---------- ---------- ---------- ----------
262+  855C
263+  855C 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  855E 00 00        	defw 0                                          ; (Posicion_actual).
265+  8560 00 00        	defw 0 											; (Puntero_objeto).
266+  8562 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  8565
268+  8565 01           	db %00000001									; (Attr).
269+  8566
270+  8566 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8568 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  856A
273+  856A 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  856C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  856E
276+  856E BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8570 00           	db 0											; (Cuad_objeto).
278+  8571
279+  8571 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  8575
281+  8575 00 00        	db 0,0											; Variables_de_borrado
282+  8577 00 00        	defw 0										 	;	" " " " " " "
283+  8579 00 00        	defw 0											;	" " " " " " "
284+  857B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  857F
286+  857F 00 00        	db 0,0											; Variables_de_pintado
287+  8581 00 00        	defw 0											;	" " " " " " "
288+  8583 00 00        	defw 0											;	" " " " " " "
289+  8585 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8589
291+  8589 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  858B
293+  858B 33 94 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  858F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  8592
296+  8592 00           	db 0 											; (Columnas).
297+  8593 00 00        	defw 0											; (Limite_horizontal).
298+  8595 00           	db 0											; (Limite_vertical).
299+  8596
# file closed: Entidades_y_disparos.asm
 21   8596
 22   8596              ; ******************************************************************************************************************************************************************************************
 23   8596              ; Constantes.
 24   8596              ; ******************************************************************************************************************************************************************************************
 25   8596              ;
 26   8596              ; 8/11/22
 27   8596              ;
 28   8596              ; Constantes generales.
 29   8596              ;
 30   8596
 31   8596              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   8596              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   8596              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   8596              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   8596
 36   8596              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   8596              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   8596              ;                               				        ; De momento situamos este almacén en $7000.
 39   8596              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   8596              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   8596              ;                               				        ; De momento situamos este almacén en $7060.
 42   8596
 43   8596              ; ******************************************************************************************************************************************************************************************
 44   8596              ; Variables.
 45   8596              ; ******************************************************************************************************************************************************************************************
 46   8596              ;
 47   8596              ; 10/11/22
 48   8596              ;
 49   8596              ; Variables de DRAW. (Motor principal).
 50   8596              ;
 51   8596              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   8596
 53   8596 02           Filas db 2												; Filas. [DRAW]
 54   8597 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8598 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   859C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   859D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   859E
 60   859E              ; ---------- ---------- ---------- ---------;      ;---------
 61   859E
 62   859E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   859F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   859F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   859F 04           Attr db %00000100										; Atributos de la entidad:
 66   85A0
 67   85A0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A0              ;
 69   85A0              ;	COLORES: 0 ..... NEGRO
 70   85A0              ;    		 1 ..... AZUL
 71   85A0              ; 			 2 ..... ROJO
 72   85A0              ;			 3 ..... MAGENTA
 73   85A0              ; 			 4 ..... VERDE
 74   85A0              ; 			 5 ..... CIAN
 75   85A0              ;			 6 ..... AMARILLO
 76   85A0              ; 			 7 ..... BLANCO
 77   85A0
 78   85A0 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A2 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A4 00 00        Puntero_DESPLZ_der defw 0
 81   85A6 00 00        Puntero_DESPLZ_izq defw 0
 82   85A8
 83   85A8 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AA 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85AB
 86   85AB              ; Variables de objeto. (Características).
 87   85AB
 88   85AB 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85AC 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85AD 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85AE 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85AF
 93   85AF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85B3 00 00        	defw 0
 96   85B5 00 00 00 00  	db 0,0,0,0
 97   85B9
 98   85B9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85BB 00 00        	defw 0
100   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85BF 00 00 00 00  	db 0,0,0,0
102   85C3
103   85C3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85C3
105   85C3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85C4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85C4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85C4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85C4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85C4              ;
111   85C4              ; 														DESCRIPCIÖN:
112   85C4              ;
113   85C4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85C4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85C4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85C4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85C4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85C4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85C4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85C4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85C4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85C4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85C4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85C4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85C4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85C4              ;
127   85C4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85C4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85C4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85C4
131   85C4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85C5
133   85C5              ; Movimiento.
134   85C5
135   85C5 2F 94        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
136   85C7 00 00        Puntero_mov defw 0
137   85C9 00           Contador_db_mov db 0
138   85CA 00           Incrementa_puntero db 0
139   85CB 00           Repetimos_db db 0
140   85CC
141   85CC              ; Variables de funcionamiento. [DRAW].
142   85CC
143   85CC 00           Columnas db 0
144   85CD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85CF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85CF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D0
148   85D0              ; 59 Bytes por entidad.
149   85D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D0              ;					         		---------;      ;---------
151   85D0
152   85D0
153   85D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D0
155   85D0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D1
157   85D1              ;														DESCRIPCIÓN:
158   85D1              ;
159   85D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D1              ; Gestión de ENTIDADES.
163   85D1
164   85D1 00 00        Puntero_store_entidades defw 0
165   85D3 00 00        Puntero_restore_entidades defw 0
166   85D5 00 00        Indice_restore defw 0
167   85D7 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
168   85D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
169   85D9              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
170   85D9              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
171   85D9              ;														; _ (Numero_de_malotes)="0".
172   85D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
173   85DB              ;														; _variable para almacenar lo posición del puntero_
174   85DB              ; 														; _de pila, SP.
175   85DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
176   85DD              ;														; La utiliza la rutina [Extrae_foto_registros].
177   85DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
178   85DF              ;														; _el snapshot de los registros de la siguiente entidad.
179   85DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
180   85DF 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
181   85E1              ;														; _el snapshot de los registros del siguiente disparo.
182   85E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
183   85E1
184   85E1              ; Gestión de Disparos.
185   85E1
186   85E1              ;Puntero_extraccion_disparo_Amadeus defw 0
187   85E1              ;Puntero_extraccion_disparo_entidades defw 0
188   85E1 00           Numero_de_disparotes db 0
189   85E2 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
190   85E4 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
191   85E6
192   85E6              ; Gestión de FRAMES.
193   85E6
194   85E6 00           Switch db 0
195   85E7
196   85E7              ; Variables de Raster y localización en pantalla.
197   85E7
198   85E7 00 FF        Temp_Raster defw $ff00
199   85E9
200   85E9              ; Rutina principal *************************************************************************************************************************************************************************
201   85E9              ;
202   85E9              ;	14/11/22
203   85E9
204   85E9 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
205   85EC
206   85EC 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
207   85EE ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
208   85F0 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
209   85F2 F3           	DI
210   85F3
211   85F3 3E 01        	ld a,1
212   85F5 D3 FE        	out ($fe),a
213   85F7
214   85F7 3E 07        	ld a,%00000111
215   85F9 CD 68 90     	call Cls
216   85FC
217   85FC              ;	call Pinta_FILAS
218   85FC
219   85FC CD 3B 88     	call Pulsa_ENTER
220   85FF
221   85FF 21 D7 85     	ld hl,Numero_de_entidades
222   8602 46           	ld b,(hl)
223   8603 04           	inc b
224   8604 05           	dec b
225   8605 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
226   8607
227   8607              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
228   8607              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
229   8607              ;	Pintamos el resto de entidades:
230   8607
231   8607 CD 34 87     	call Inicia_punteros_de_entidades
232   860A
233   860A              ;	INICIA ENTIDADES!!!!!
234   860A
235   860A C5           1 push bc  												; Guardo el contador de entidades.
236   860B CD 8E 87      	call Inicia_Puntero_objeto
237   860E CD B8 8A     	call Draw
238   8611 CD A0 7F     	call Guarda_foto_registros
239   8614 CD D6 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
240   8617 C1           	pop bc
241   8618 10 F0        	djnz 1B  											; Decremento el contador de entidades.
242   861A
243   861A              ; 	INICIA AMADEUS!!!!!
244   861A
245   861A CD 17 88     3 call Restore_Amadeus
246   861D CD 8E 87     	call Inicia_Puntero_objeto
247   8620 CD B8 8A     	call Draw
248   8623 CD A0 7F     	call Guarda_foto_registros
249   8626 CD 29 88     	call Store_Amadeus
250   8629
251   8629              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
252   8629
253   8629 CD 4A 87     	call Inicia_Puntero_Disparo_Entidades
254   862C CD 51 87     	call Inicia_Puntero_Disparo_Amadeus
255   862F
256   862F              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
257   862F
258   862F CD 34 87     	call Inicia_punteros_de_entidades
259   8632 CD 05 88     	call Restore_Primera_entidad
260   8635
261   8635 3A D7 85     	ld a,(Numero_de_entidades)
262   8638 3C           	inc a
263   8639 32 D8 85     	ld (Numero_de_malotes),a
264   863C
265   863C FB           2 ei
266   863D 18 FD        	jr 2B
267   863F
268   863F              ; -----------------------------------------------------------------------------------
269   863F
270   863F              Frame
271   863F
272   863F              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
273   863F              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
274   863F
275   863F 3E 02            ld a,2
276   8641 D3 FE            out ($fe),a
277   8643 CD BC 8D     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
278   8646 CD F5 8D     	call Extrae_foto_disparos
279   8649 3E 01            ld a,1
280   864B D3 FE            out ($fe),a
281   864D
282   864D              ; ----------------------------------------------------------------------
283   864D
284   864D CD 01 8A     	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
285   8650 CD 1F 8A     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos.
286   8653
287   8653 21 00 70     	ld hl,Album_de_fotos
288   8656 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
289   8659              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
290   8659 3A D7 85         ld a,(Numero_de_entidades)
291   865C 47               ld b,a
292   865D A7           	and a
293   865E 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
294   8660
295   8660 C5           2 push bc
296   8661 CD AD 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
297   8664 3A C3 85     	ld a,(Ctrl_0)
298   8667 CB 67        	bit 4,a
299   8669 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
300   866B
301   866B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
302   866B              ; Las entidades sólo generan disparo cuando se mueven.
303   866B              ; 16/02/23.
304   866B              ; [[[
305   866B CD 72 88     	call Detecta_disparo_entidad
306   866E              ; ]]]
307   866E CD FB 86     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
308   8671
309   8671 21 C3 85     1 ld hl,Ctrl_0
310   8674 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
311   8676 AF           	xor a
312   8677 32 C4 85     	ld (Obj_dibujado),a
313   867A CD D6 87     	call Store_Restore_entidades
314   867D C1           	pop bc
315   867E 10 E0        	djnz 2B
316   8680
317   8680              ; Tras la gestión de las entidades, ... AMADEUS.
318   8680
319   8680 CD 17 88     4 call Restore_Amadeus
320   8683 CD CC 86     	call Mov_Amadeus
321   8686 3A C3 85     	ld a,(Ctrl_0)
322   8689 CB 67        	bit 4,a
323   868B 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
324   868D CD FB 86     	call Guarda_foto_entidad_a_pintar
325   8690
326   8690 21 C3 85     3 ld hl,Ctrl_0
327   8693 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
328   8695 AF           	xor a
329   8696 32 C4 85     	ld (Obj_dibujado),a
330   8699 CD 29 88     	call Store_Amadeus
331   869C
332   869C              ; -----
333   869C
334   869C CD 34 87     	call Inicia_punteros_de_entidades
335   869F CD 05 88     	call Restore_Primera_entidad
336   86A2
337   86A2              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
338   86A2
339   86A2 CD 58 87     	call Calcula_numero_de_malotes
340   86A5 CD 70 87     	call Calcula_numero_de_disparotes
341   86A8
342   86A8 3E 04        	ld a,4
343   86AA D3 FE        	out ($fe),a
344   86AC C9           	ret
345   86AD
346   86AD              ; --------------------------------------------------------------------------------------------------------------
347   86AD              ;
348   86AD              ;	29/1/23
349   86AD
350   86AD              Mov_obj
351   86AD
352   86AD              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
353   86AD
354   86AD AF           	xor a
355   86AE 32 C4 85     	ld (Obj_dibujado),a
356   86B1 CD 05 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
357   86B4              ;														; Obj_dibujado="0".
358   86B4              ; Movemos Entidades malignas.
359   86B4
360   86B4 CD 45 94     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
361   86B7 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
362   86BA CB 67        	bit 4,a
363   86BC C8           	ret z
364   86BD
365   86BD              ; ---------
366   86BD
367   86BD 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
368   86BF 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
369   86C2 CD 05 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
370   86C5 CD 1C 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
371   86C8 CD EB 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
372   86CB C9           	ret													; _de la misma.
373   86CC
374   86CC              ; --------------------------------------------------------------------------------------------------------------
375   86CC              ;
376   86CC              ;	29/1/23
377   86CC
378   86CC              Mov_Amadeus
379   86CC
380   86CC AF           	xor a
381   86CD 32 C4 85     	ld (Obj_dibujado),a
382   86D0 CD 05 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
383   86D3              ;														; Obj_dibujado="0".
384   86D3              ; Movemos Amadeus.
385   86D3
386   86D3 CD 4F 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
387   86D6 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
388   86D9 CB 67        	bit 4,a
389   86DB C8           	ret z
390   86DC
391   86DC              ; ---------
392   86DC
393   86DC 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
394   86DE 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
395   86E1 CD 05 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
396   86E4 CD 1C 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
397   86E7 CD EB 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
398   86EA C9           	ret													; _de la nave.
399   86EB
400   86EB              ; --------------------------------------------------------------------------------------------------------------
401   86EB              ;
402   86EB              ;	31/01/23
403   86EB              ;
404   86EB              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
405   86EB
406   86EB              Guarda_foto_entidad_a_borrar
407   86EB
408   86EB CD 92 8D     	call Prepara_draw
409   86EE CD CC 8C     	call calcula_CColumnass
410   86F1 CD 03 8D     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
411   86F4 CD 58 8D     	call Define_rutina_de_impresion
412   86F7 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
413   86FA C9           	ret
414   86FB
415   86FB              ; --------------------------------------------------------------------------------------------------------------
416   86FB              ;
417   86FB              ;	31/01/23
418   86FB              ;
419   86FB              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
420   86FB              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
421   86FB
422   86FB              Guarda_foto_entidad_a_pintar
423   86FB
424   86FB CD 28 87     	call Repone_pintar
425   86FE CD B8 8A     	call Draw
426   8701 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
427   8704 C9           	ret
428   8705
429   8705              ; --------------------------------------------------------------------------------------------------------------
430   8705              ;
431   8705              ;
432   8705
433   8705 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
434   8708 3A C4 85     	ld a,(Obj_dibujado)
435   870B A7           	and a
436   870C 28 05        	jr z,1F
437   870E 11 B9 85     	ld de,Variables_de_pintado
438   8711 18 03        	jr 2F
439   8713 11 AF 85     1 ld de,Variables_de_borrado
440   8716 01 08 00     2 ld bc,8
441   8719 ED B0        	ldir
442   871B C9           	ret
443   871C
444   871C              ; --------------------------------------------------------------------------------------------------------------
445   871C
446   871C 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
447   871F 11 96 85     	ld de,Filas
448   8722 01 08 00     	ld bc,8
449   8725 ED B0        	ldir
450   8727 C9           	ret
451   8728
452   8728 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
453   872B 11 96 85     	ld de,Filas
454   872E 01 08 00     	ld bc,8
455   8731 ED B0        	ldir
456   8733 C9           	ret
457   8734
458   8734              ; *************************************************************************************************************************************************************
459   8734              ;
460   8734              ; 8/1/23
461   8734              ;
462   8734              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
463   8734              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
464   8734              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
465   8734
466   8734              ; Destruye HL y DE !!!!!
467   8734
468   8734              Inicia_punteros_de_entidades
469   8734
470   8734 21 68 84     	ld hl,Indice_de_entidades
471   8737 CD 88 87         call Extrae_address
472   873A 22 D1 85         ld (Puntero_store_entidades),hl
473   873D 21 6A 84     	ld hl,Indice_de_entidades+2
474   8740 22 D5 85     	ld (Indice_restore),hl
475   8743 CD 88 87     	call Extrae_address
476   8746 22 D3 85     	ld (Puntero_restore_entidades),hl
477   8749 C9               ret
478   874A
479   874A              ; *************************************************************************************************************************************************************
480   874A              ;
481   874A              ; 8/1/23
482   874A              ;
483   874A              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
484   874A
485   874A 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
486   874D 22 E2 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
487   8750 C9           	ret
488   8751 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
489   8754 22 E4 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
490   8757 C9           	ret
491   8758
492   8758              ; -------------------------------------------------------------------------------------------------------------
493   8758              ;
494   8758              ; 28/2/23
495   8758              ;
496   8758
497   8758              Calcula_numero_de_malotes
498   8758
499   8758 21 00 70     	ld hl,Album_de_fotos
500   875B EB           	ex de,hl
501   875C 2A DD 85     	ld hl,(Stack_snapshot)
502   875F
503   875F 06 00        	ld b,0
504   8761 7D           	ld a,l
505   8762 93           	sub e
506   8763 28 07        	jr z,1F
507   8765
508   8765              ; Nº de malotes no es "0".
509   8765
510   8765 D6 06        2 sub 6
511   8767 04           	inc b
512   8768 A7           	and a
513   8769 20 FA        	jr nz,2B
514   876B 78           	ld a,b
515   876C
516   876C 32 D8 85     1 ld (Numero_de_malotes),a
517   876F C9           	ret
518   8770
519   8770              ; -------------------------------------------------------------------------------------------------------------
520   8770              ;
521   8770              ; 28/2/23
522   8770              ;
523   8770
524   8770              Calcula_numero_de_disparotes
525   8770
526   8770 21 60 70     	ld hl,Album_de_fotos_disparos
527   8773 EB           	ex de,hl
528   8774 2A DF 85     	ld hl,(Stack_snapshot_disparos)
529   8777
530   8777 06 00        	ld b,0
531   8779 7D           	ld a,l
532   877A 93           	sub e
533   877B 28 07        	jr z,1F
534   877D
535   877D              ; Nº de malotes no es "0".
536   877D
537   877D D6 06        2 sub 6
538   877F 04           	inc b
539   8780 A7           	and a
540   8781 20 FA        	jr nz,2B
541   8783 78           	ld a,b
542   8784
543   8784 32 E1 85     1 ld (Numero_de_disparotes),a
544   8787 C9           	ret
545   8788              ; *************************************************************************************************************************************************************
546   8788              ;
547   8788              ; 20/10/22
548   8788              ;
549   8788              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
550   8788              ;
551   8788              ; Destruye el puntero y DE !!!!!
552   8788
553   8788 5E           Extrae_address ld e,(hl)
554   8789 23           	inc hl
555   878A 56           	ld d,(hl)
556   878B 2B           	dec hl
557   878C EB           	ex de,hl
558   878D C9           	ret
559   878E
560   878E              ; *************************************************************************************************************************************************************
561   878E              ;
562   878E              ;	7/2/23
563   878E              ;
564   878E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
565   878E              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
566   878E              ;
567   878E              ;   Destruye HL y BC !!!!!,
568   878E              ;
569   878E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
570   878E              ;					"0" ..... Izquierda.
571   878E
572   878E              Inicia_Puntero_objeto
573   878E
574   878E 3A AA 85     	ld a,(Cuad_objeto)
575   8791 E6 01        	and 1
576   8793 F5           	push af
577   8794 CC B2 87     	call z,Inicia_puntero_objeto_izq
578   8797 F1           	pop af
579   8798 28 2B        	jr z,1F
580   879A CD 9F 87     	call Inicia_puntero_objeto_der
581   879D 18 26        	jr 1F
582   879F
583   879F              ; Arrancamos desde la parte izquierda de la pantalla.
584   879F              ; Iniciamos (Indice_Sprite_der).
585   879F
586   879F 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
587   87A2 22 A4 85     	ld (Puntero_DESPLZ_der),hl
588   87A5 CD 88 87     	call Extrae_address
589   87A8 22 9A 85     	ld (Puntero_objeto),hl
590   87AB
591   87AB 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
592   87AE              ;	call Extrae_address
593   87AE 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
594   87B1 C9           	ret
595   87B2
596   87B2              ; Arrancamos desde la parte derecha de la pantalla.
597   87B2              ; Iniciamos (Indice_Sprite_izq).
598   87B2
599   87B2 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
600   87B5 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
601   87B8 CD 88 87     	call Extrae_address
602   87BB 22 9A 85     	ld (Puntero_objeto),hl
603   87BE
604   87BE 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
605   87C1              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
606   87C1 22 A4 85     	ld (Puntero_DESPLZ_der),hl
607   87C4 C9           	ret
608   87C5
609   87C5              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
610   87C5
611   87C5 21 38 83     1 ld hl,Amadeus
612   87C8 ED 4B 9A 85  	ld bc,(Puntero_objeto)
613   87CC B7 ED 42     	sub hl,bc
614   87CF C0           	ret nz
615   87D0 21 C3 85     	ld hl,Ctrl_0
616   87D3 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
617   87D5 C9           	ret 												; _de nuestra nave en los extremos.
618   87D6
619   87D6              ; *************************************************************************************************************************************************************
620   87D6              ;
621   87D6              ;	8/1/23
622   87D6              ;
623   87D6              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
624   87D6              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
625   87D6
626   87D6              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
627   87D6              ;	_de la 2ª y 3ª entidad respectivamente.
628   87D6
629   87D6              Store_Restore_entidades
630   87D6
631   87D6 E5           	push hl
632   87D7 D5           	push de
633   87D8 C5            	push bc
634   87D9
635   87D9              ;	STORE !!!!!
636   87D9              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
637   87D9
638   87D9 21 96 85     	ld hl,Filas
639   87DC ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
640   87E0 01 3A 00     	ld bc,58
641   87E3 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
642   87E5
643   87E5              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
644   87E5
645   87E5 2A D3 85     	ld hl,(Puntero_restore_entidades)
646   87E8 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
647   87EB 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
648   87EE 01 3A 00     	ld bc,58
649   87F1 ED B0        	ldir
650   87F3
651   87F3              ;	Incrementa RESTORE !!!!!
652   87F3
653   87F3 2A D5 85         ld hl,(Indice_restore)
654   87F6 23           	inc hl
655   87F7 23           	inc hl
656   87F8 22 D5 85     	ld (Indice_restore),hl
657   87FB CD 88 87         call Extrae_address
658   87FE 22 D3 85         ld (Puntero_restore_entidades),hl
659   8801 C1           	pop bc
660   8802 D1           	pop de
661   8803 E1           	pop hl
662   8804 C9           	ret
663   8805
664   8805              ; **************************************************************************************************
665   8805              ;
666   8805              ;	29/10/22
667   8805              ;
668   8805              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
669   8805
670   8805 E5           Restore_Primera_entidad push hl
671   8806 D5           	push de
672   8807 C5            	push bc
673   8808 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
674   880B 11 96 85     	ld de,Filas
675   880E 01 3A 00     	ld bc,58
676   8811 ED B0        	ldir
677   8813 C1           	pop bc
678   8814 D1           	pop de
679   8815 E1           	pop hl
680   8816 C9           	ret
681   8817
682   8817              ; **************************************************************************************************
683   8817              ;
684   8817              ;	25/01/23
685   8817              ;
686   8817              ;	Restore_Amadeus
687   8817              ;
688   8817              ;	Cargamos en DRAW los parámetros de Amadeus.
689   8817              ;
690   8817
691   8817 E5           Restore_Amadeus	push hl
692   8818 D5           	push de
693   8819 C5            	push bc
694   881A 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
695   881D 11 96 85     	ld de,Filas
696   8820 01 3A 00     	ld bc,58
697   8823 ED B0        	ldir
698   8825 C1           	pop bc
699   8826 D1           	pop de
700   8827 E1           	pop hl
701   8828 C9           	ret
702   8829
703   8829              ; *************************************************************************************************************************************************************
704   8829              ;
705   8829              ;	29/01/23
706   8829              ;
707   8829              ;	Store_Amadeus
708   8829              ;
709   8829              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
710   8829              ;
711   8829
712   8829 E5           Store_Amadeus push hl
713   882A D5           	push de
714   882B C5            	push bc
715   882C 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
716   882F 11 74 84     	ld de,Amadeus_db
717   8832 01 3A 00     	ld bc,58
718   8835 ED B0        	ldir
719   8837 C1           	pop bc
720   8838 D1           	pop de
721   8839 E1           	pop hl
722   883A C9           	ret
723   883B
724   883B              ; **************************************************************************************************
725   883B
726   883B              ; Teclado.
727   883B
728   883B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
729   883D DB FE        	in a,($fe)
730   883F E6 01        	and $01
731   8841 28 02        	jr z,1f
732   8843 18 F6        	jr Pulsa_ENTER
733   8845 C9           1 ret
734   8846
735   8846              ; **************************************************************************************************
736   8846              ;
737   8846              ; Temporización.
738   8846
739   8846              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
740   8846              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
741   8846              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
742   8846              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
743   8846
744   8846              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
745   8846              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
746   8846              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
747   8846
748   8846              ; A partir de $4f61 no hace falta DELAY.
749   8846
750   8846              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
751   8846
752   8846 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
753   8849 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
754   884A 78           	LD A,B
755   884B A7           	AND A
756   884C 20 FB        	JR NZ,wait
757   884E C9           	RET
758   884F
759   884F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
760   884F              ;
761   884F              ;	5/3/23
762   884F              ;
763   884F              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
764   884F
765   884F              Movimiento_Amadeus
766   884F
767   884F              ; Disparo.
768   884F
769   884F 3E F7        	ld a,$f7												; "5" para disparar.
770   8851 DB FE        	in a,($fe)
771   8853 E6 10        	and $10
772   8855 CC A6 88     	call z,Genera_disparo
773   8858
774   8858 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
775   885A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
776   885C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
777   885E CC F6 91         call z,Mov_left											;			"			"			"			"			"			"			"			"
778   8861 3E F7        	ld a,$f7
779   8863 DB FE        	in a,($fe)
780   8865 E6 01        	and $01
781   8867 C8           	ret z
782   8868
783   8868 3E F7        	ld a,$f7
784   886A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
785   886C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
786   886E CC D8 90     	call z,Mov_right										;			"			"			"			"			"			"			"			"
787   8871 C9           	ret
788   8872
789   8872              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
790   8872              ;
791   8872              ;	Rutina provisional para que los malotes cagen balas.
792   8872
793   8872 3E 7F        Detecta_disparo_entidad ld a,$7f
794   8874 DB FE        	in a,($fe)
795   8876 E6 01        	and 1
796   8878 C0           	ret nz
797   8879 CD A6 88     	call Genera_disparo
798   887C C9           	ret
799   887D
800   887D              ; Pinta indicadores de FILAS. ------------------------------------------------------
801   887D
802   887D 21 10 40     Pinta_FILAS ld hl,$4010
803   8880              ;	ld b,9
804   8880              ;2 push hl
805   8880              ;	push bc
806   8880 06 BF        	ld b,$bf
807   8882 36 80        1 ld (hl),%10000000
808   8884 CD 9E 8D     	call NextScan
809   8887 10 F9        	djnz 1B
810   8889              ;	pop bc
811   8889              ;	pop hl
812   8889              ;	inc l
813   8889              ;	djnz 2B
814   8889 06 03        	ld b,3
815   888B 21 00 47         ld hl,$4700
816   888E CD 94 88     3 call Bucle_1
817   8891 10 FB            djnz 3B
818   8893 C9               ret
819   8894
820   8894 C5           Bucle_1 push bc
821   8895 E5                   push hl
822   8896 D1                   pop de
823   8897 13                   inc de
824   8898 01 FF 00             ld bc,255
825   889B 36 FF                ld (hl),255
826   889D ED B0                ldir
827   889F 23                   inc hl
828   88A0 3E 07                ld a,7
829   88A2 84                   add a,h
830   88A3 67                   ld h,a
831   88A4 C1                   pop bc
832   88A5 C9                   ret
833   88A6
834   88A6              ; ---------------------------------------------------------------
835   88A6
836   88A6              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88A6              ; ******************************************************************************************************************************************************************************************
  2+  88A6              ;
  3+  88A6              ;   19/02/23
  4+  88A6              ;
  5+  88A6              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88A6              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88A6              ;
  8+  88A6              ;
  9+  88A6              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88A6              ;
 11+  88A6              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88A6              ;               _ hacen las entidades hacia abajo.
 13+  88A6              ;
 14+  88A6              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88A6              ;
 16+  88A6              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88A6              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88A6              ;
 19+  88A6              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88A6              ;           _ la bala.
 21+  88A6              ;
 22+  88A6              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88A6              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88A6              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88A6              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88A6              ;           _ en el momento de generarse la bala)).
 27+  88A6
 28+  88A6              Genera_disparo
 29+  88A6
 30+  88A6              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88A6              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88A6              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88A6              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88A6              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88A6              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88A6              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88A6
 38+  88A6 3A CC 85         ld a,(Columnas)
 39+  88A9 47               ld b,a
 40+  88AA 3A 97 85         ld a,(Columns)
 41+  88AD B8               cp b
 42+  88AE C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 43+  88AF
 44+  88AF              ; ----- ----- -----
 45+  88AF
 46+  88AF 21 00 80         ld hl,Indice_disparo
 47+  88B2 3A 9E 85         ld a,(CTRL_DESPLZ)
 48+  88B5 4F               ld c,a
 49+  88B6 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 50+  88B8              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 51+  88B8              ;                                            ""        ""       "f9", B="1"
 52+  88B8              ;                                            ""        ""       "fb", B="2"
 53+  88B8              ;                                            ""        ""       "fb", B="3"
 54+  88B8 A7               and a
 55+  88B9 28 10            jr z,1F
 56+  88BB E6 01            and 1
 57+  88BD C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 58+  88BE
 59+  88BE 79               ld a,c
 60+  88BF 16 F9            ld d,$f9
 61+  88C1 23           2 inc hl
 62+  88C2 23               inc hl
 63+  88C3 04               inc b
 64+  88C4 BA               cp d
 65+  88C5 28 04            jr z,1F
 66+  88C7 14               inc d
 67+  88C8 14               inc d
 68+  88C9 18 F6            jr 2B
 69+  88CB
 70+  88CB CD 88 87     1 call Extrae_address
 71+  88CE E5               push hl
 72+  88CF FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 73+  88D1 DD 21 31 90  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 74+  88D5
 75+  88D5              ;	Se cumplen las condiciones necesarias para generar un disparo.
 76+  88D5              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 77+  88D5
 78+  88D5 3A AA 85     	ld a,(Cuad_objeto)
 79+  88D8 FE 02            cp 2
 80+  88DA 38 60            jr c,3F
 81+  88DC 28 5E            jr z,3F
 82+  88DE
 83+  88DE              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 84+  88DE
 85+  88DE E6 01            and 1
 86+  88E0 28 2D            jr z,4F
 87+  88E2
 88+  88E2              ; 	Estamos en el 3er cuadrante de pantalla.
 89+  88E2              ; 	3er CUAD. ----- ----- ----- ----- -----
 90+  88E2              ;
 91+  88E2              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 92+  88E2              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 93+  88E2              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 94+  88E2
 95+  88E2 2A 98 85     	ld hl,(Posicion_actual)
 96+  88E5
 97+  88E5              ;   Amadeus o entidad ???.
 98+  88E5
 99+  88E5 3A C3 85         ld a,(Ctrl_0)
100+  88E8 CB 77            bit 6,a
101+  88EA 28 0D            jr z,8F
102+  88EC
103+  88EC              ; 	Dispara Amadeus.
104+  88EC
105+  88EC 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
106+  88EE CD AD 8D         call PreviousScan
107+  88F1 CD AD 8D         call PreviousScan
108+  88F4
109+  88F4              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
110+  88F4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
111+  88F4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
112+  88F4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
113+  88F4
114+  88F4 CD 66 89         call Ajusta_disparo_parte_izquierda
115+  88F7 18 0E            jr 10F
116+  88F9
117+  88F9              ; 	Dispara Entidad.
118+  88F9
119+  88F9 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
120+  88FB
121+  88FB              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
122+  88FB              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
123+  88FB
124+  88FB C5               push bc
125+  88FC 06 10            ld b,16
126+  88FE CD 9E 8D     9 call NextScan
127+  8901 10 FB            djnz 9B
128+  8903 C1               pop bc
129+  8904
130+  8904              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
131+  8904              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
132+  8904              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
133+  8904              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
134+  8904
135+  8904 CD 66 89         call Ajusta_disparo_parte_izquierda
136+  8907
137+  8907 CD DB 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
138+  890A              ;                                                   ; _al generar el disparo.
139+  890A
140+  890A              ; 	LLegados a este punto tendremos:
141+  890A              ;
142+  890A              ;       Puntero_objeto_disparo en IY.
143+  890A              ;       Rutinas_de_impresion en IX.
144+  890A              ;       Puntero_de_impresion en HL.
145+  890A              ;       Impacto/Dirección en BC.
146+  890A
147+  890A CD 6E 89         call Almacena_disparo
148+  890D 18 4F            jr 6F                                           ; RET.
149+  890F
150+  890F
151+  890F              ; 	Estamos en el 4º cuadrante de pantalla.
152+  890F              ; 	4º CUAD. ----- ----- ----- ----- -----
153+  890F              ;
154+  890F              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
155+  890F              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
156+  890F              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
157+  890F
158+  890F 2A 98 85     4 ld hl,(Posicion_actual)
159+  8912
160+  8912              ;   Amadeus o entidad ???.
161+  8912
162+  8912 3A C3 85         ld a,(Ctrl_0)
163+  8915 CB 77            bit 6,a
164+  8917 28 0D            jr z,11F
165+  8919
166+  8919              ; 	Dispara Amadeus.
167+  8919
168+  8919 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
169+  891B CD AD 8D         call PreviousScan
170+  891E CD AD 8D         call PreviousScan
171+  8921
172+  8921              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
173+  8921              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
174+  8921              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
175+  8921              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
176+  8921
177+  8921 CD 5F 89         call Ajusta_disparo_parte_derecha
178+  8924 18 0E            jr 13F
179+  8926
180+  8926              ; 	Dispara Entidad.
181+  8926
182+  8926 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
183+  8928
184+  8928              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
185+  8928              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
186+  8928
187+  8928 C5               push bc
188+  8929
189+  8929 06 10            ld b,16
190+  892B CD 9E 8D     12 call NextScan
191+  892E 10 FB            djnz 12B
192+  8930
193+  8930 C1               pop bc
194+  8931
195+  8931              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
196+  8931              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
197+  8931              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
198+  8931              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
199+  8931
200+  8931 CD 5F 89         call Ajusta_disparo_parte_derecha
201+  8934
202+  8934 CD DB 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
203+  8937              ;                                                     ; _al generar el disparo.
204+  8937
205+  8937              ; LLegados a este punto tendremos:
206+  8937              ;
207+  8937              ;       Puntero_objeto_disparo en IY.
208+  8937              ;       Rutinas_de_impresion en IX.
209+  8937              ;       Puntero_de_impresion en HL.
210+  8937              ;       Impacto/Dirección en BC.
211+  8937
212+  8937 CD 6E 89         call Almacena_disparo
213+  893A 18 22            jr 6F                                           ; RET.
214+  893C
215+  893C              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
216+  893C
217+  893C 28 11        3 jr z,5F
218+  893E
219+  893E              ; 	1er CUAD. ----- ----- ----- ----- -----
220+  893E              ;
221+  893E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
222+  893E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
223+  893E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
224+  893E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
225+  893E
226+  893E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
227+  893E              ;	   ""        ""       "f9", B="1"
228+  893E              ;	   ""        ""       "fb", B="2"
229+  893E              ; 	   ""        ""       "fb", B="3"
230+  893E
231+  893E 2A 98 85     	ld hl,(Posicion_actual)
232+  8941 CD 9E 8D     	call NextScan
233+  8944
234+  8944              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
235+  8944              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
236+  8944              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
237+  8944              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
238+  8944
239+  8944 CD 66 89         call Ajusta_disparo_parte_izquierda
240+  8947
241+  8947              ; 	No se produce impacto. B="$80"
242+  8947              ; 	Dirección del proyectil hacia abajo. C="$80"
243+  8947
244+  8947 01 80 80         ld bc,$8080
245+  894A
246+  894A              ; 	LLegados a este punto tendremos:
247+  894A              ;
248+  894A              ;       Puntero_objeto_disparo en IY.
249+  894A              ;       Rutinas_de_impresion en IX.
250+  894A              ;       Puntero_de_impresion en HL.
251+  894A              ;       Impacto/Dirección en BC.
252+  894A
253+  894A CD 6E 89         call Almacena_disparo
254+  894D 18 0F            jr 6F                                           ; RET.
255+  894F
256+  894F              ; 	Estamos en el 2º cuadrante de pantalla.
257+  894F              ; 	2º CUAD. ----- ----- ----- ----- -----
258+  894F              ;
259+  894F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
260+  894F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
261+  894F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
262+  894F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
263+  894F
264+  894F 2A 98 85     5 ld hl,(Posicion_actual)
265+  8952 CD 9E 8D     	call NextScan
266+  8955
267+  8955              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
268+  8955              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
269+  8955              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
270+  8955              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
271+  8955
272+  8955 CD 5F 89         call Ajusta_disparo_parte_derecha
273+  8958
274+  8958              ; 	No se produce impacto. B="$80"
275+  8958              ; 	Dirección del proyectil hacia abajo. C="80"
276+  8958
277+  8958 01 80 80     15 ld bc,$8080
278+  895B
279+  895B              ; 	LLegados a este punto tendremos:
280+  895B              ;
281+  895B              ;       Puntero_objeto_disparo en IY.
282+  895B              ;       Rutinas_de_impresion en IX.
283+  895B              ;       Puntero_de_impresion en HL.
284+  895B              ;       Impacto/Dirección en BC.
285+  895B
286+  895B CD 6E 89         call Almacena_disparo
287+  895E
288+  895E C9           6 ret
289+  895F
290+  895F              ; ----------------------------------------------------------------
291+  895F              ;
292+  895F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
293+  895F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
294+  895F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
295+  895F
296+  895F 78           Ajusta_disparo_parte_derecha ld a,b
297+  8960 FE 02            cp 2
298+  8962 38 01            jr c,1F
299+  8964 23               inc hl
300+  8965 C9           1 ret
301+  8966
302+  8966 78           Ajusta_disparo_parte_izquierda ld a,b
303+  8967 FE 01        	cp 1
304+  8969 20 01        	jr nz,1F
305+  896B 2B           	dec hl
306+  896C 2B           1 dec hl
307+  896D C9               ret
308+  896E
309+  896E              ; ----------------------------------------------------------------
310+  896E              ;
311+  896E              ;   25/02/23
312+  896E              ;
313+  896E              ;   La Rutina va almacenando disparos en sus respectiva bases de datos.
314+  896E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
315+  896E
316+  896E              Almacena_disparo
317+  896E
318+  896E E5               push hl  										; HL contiene el puntero de impresión.
319+  896F F1               pop af
320+  8970 08               ex af,af                                        ; Puntero_de_impresion en AF'.
321+  8971
322+  8971 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
323+  8972 E6 01            and 1
324+  8974 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
325+  8976              ;                                                   ; _ es Amadeus o una entidad la que dispara.
326+  8976              ; 	Dispara AMADEUS.
327+  8976
328+  8976              ;	Comprobamos que a Amadeus aún le quedan disparos.
329+  8976              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
330+  8976              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
331+  8976              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
332+  8976
333+  8976 C5               push bc
334+  8977 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A
335+  897A 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
336+  897D A7               and a
337+  897E ED 42            sbc hl,bc
338+  8980 CC 51 87         call z,Inicia_Puntero_Disparo_Amadeus
339+  8983 C1               pop bc
340+  8984 28 54            jr z,4F
341+  8986
342+  8986 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
343+  8989 23               inc hl
344+  898A 23               inc hl
345+  898B 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
346+  898E              ;                                                   ; _ Disparo_(+1).
347+  898E 18 18            jr 2F
348+  8990
349+  8990              ; Dispara una entidad.
350+  8990
351+  8990 C5           1 push bc
352+  8991 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
353+  8994 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
354+  8997 A7               and a
355+  8998 ED 42            sbc hl,bc
356+  899A CC 4A 87         call z,Inicia_Puntero_Disparo_Entidades
357+  899D C1               pop bc
358+  899E 28 3A            jr z,4F
359+  89A0
360+  89A0 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
361+  89A3 23               inc hl
362+  89A4 23               inc hl
363+  89A5 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
364+  89A8              ;                                                   ; _ Disparo_(+1).
365+  89A8 CD 88 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
366+  89AB              ;                                                   ; _ los 8 bytes que definen el disparo:
367+  89AB              ;
368+  89AB              ;                                                     Puntero_objeto_disparo en IY.
369+  89AB              ;                                                     Rutinas_de_impresion en IX.
370+  89AB              ;                                                     Puntero_de_impresion en HL.
371+  89AB              ;                                                     Impacto/Dirección en BC.
372+  89AB
373+  89AB 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
374+  89AC 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
375+  89AD 23               inc hl                                          ; _ al siguiente.
376+  89AE A7               and a
377+  89AF 20 C0            jr nz,3B
378+  89B1
379+  89B1 08               ex af,af
380+  89B2 ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
381+  89B6 F9               ld sp,hl
382+  89B7
383+  89B7 DD E5            push ix                                         ; Rutina de impresión.
384+  89B9 F5               push af                                         ; Puntero de impresión.
385+  89BA FD E5            push iy                                         ; Puntero objeto.
386+  89BC C5               push bc                                         ; Control.
387+  89BD
388+  89BD ED 7B D9 85      ld sp,(Stack)
389+  89C1
390+  89C1              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
391+  89C1
392+  89C1 21 D0 85     	ld hl,Ctrl_1
393+  89C4 CB C6        	set 0,(hl)
394+  89C6
395+  89C6 DD E5        	push ix
396+  89C8 E1               pop hl
397+  89C9 F5               push af
398+  89CA DD E1            pop ix
399+  89CC
400+  89CC CD A0 7F     	call Guarda_foto_registros
401+  89CF
402+  89CF 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
403+  89D2 CB 86        	res 0,(hl)
404+  89D4
405+  89D4              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
406+  89D4              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
407+  89D4
408+  89D4 CD 51 87         call Inicia_Puntero_Disparo_Amadeus
409+  89D7 CD 4A 87         call Inicia_Puntero_Disparo_Entidades
410+  89DA
411+  89DA C9           4 ret
412+  89DB
413+  89DB              ; ----------------------------------------------------------------
414+  89DB              ;
415+  89DB              ;   4/3/23
416+  89DB              ;
417+  89DB              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
418+  89DB              ;   _ al generarse el disparo.
419+  89DB              ;       "$80" ..... No se produce colisión.
420+  89DB              ;       "$81" ..... Se produce colisión.
421+  89DB
422+  89DB E5           Comprueba_Colision push hl
423+  89DC 1E 80            ld e,$80                                       ; E,(Impacto)="0".
424+  89DE CD F3 89         call Bucle_2                                   ; Comprobamos el 1er scanline.
425+  89E1
426+  89E1 7B               ld a,e
427+  89E2 E6 01            and 1
428+  89E4 28 03            jr z,1F                                        ; Si no se produce impacto comprobamos el 2º scanline.
429+  89E6
430+  89E6              ; Hay impacto.
431+  89E6
432+  89E6 43           2 ld b,e
433+  89E7 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
434+  89E8 C9           3 ret
435+  89E9
436+  89E9 E1           1 pop hl
437+  89EA E5               push hl
438+  89EB CD 9E 8D         call NextScan
439+  89EE CD F3 89         call Bucle_2
440+  89F1 18 F3            jr 2B
441+  89F3
442+  89F3              ; ---------- ----------
443+  89F3
444+  89F3 06 02        Bucle_2 ld b,2
445+  89F5 7E           2 ld a,(hl)
446+  89F6 A7               and a
447+  89F7 20 04            jr nz,1F
448+  89F9 23               inc hl
449+  89FA 10 F9            djnz 2B
450+  89FC C9           3 ret
451+  89FD 1E 81        1 ld e,$81
452+  89FF 18 FB            jr 3B
453+  8A01
454+  8A01              ; -------------------------------------------------------------------------------------------------------------
455+  8A01              ;
456+  8A01              ;   13/03/23
457+  8A01              ;
458+  8A01              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
459+  8A01              ;
460+  8A01              ;   DESTRUYE: HL,BC,DE y A.
461+  8A01
462+  8A01 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
463+  8A04 7E               ld a,(hl)
464+  8A05 A7               and a
465+  8A06 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
466+  8A07
467+  8A07 44               ld b,h
468+  8A08 4D               ld c,l
469+  8A09 2A DF 85         ld hl,(Stack_snapshot_disparos)
470+  8A0C E5               push hl
471+  8A0D A7               and a
472+  8A0E ED 42            sbc hl,bc
473+  8A10 E5               push hl
474+  8A11 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
475+  8A12
476+  8A12 E1               pop hl
477+  8A13 54               ld d,h
478+  8A14 5D               ld e,l
479+  8A15 1B               dec de
480+  8A16 ED B8            lddr                                                ; Limpiamos.
481+  8A18
482+  8A18 21 60 70         ld hl,Album_de_fotos_disparos
483+  8A1B 22 DF 85         ld (Stack_snapshot_disparos),hl
484+  8A1E
485+  8A1E C9               ret
486+  8A1F
487+  8A1F              ; -------------------------------------------------------------------------------------------------------------
488+  8A1F              ;
489+  8A1F              ;   14/03/23
490+  8A1F              ;
491+  8A1F
492+  8A1F 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
493+  8A22 2A E4 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
494+  8A25
495+  8A25 CD 88 87     2 call Extrae_address
496+  8A28 7E               ld a,(hl)
497+  8A29 A7               and a
498+  8A2A 28 0D            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
499+  8A2C
500+  8A2C              ; ----- ----- ----- ----- ----- -----
501+  8A2C
502+  8A2C C5               push bc
503+  8A2D
504+  8A2D CD 76 8A         call foto_disparo_a_borrar
505+  8A30 CD 9C 8A         call Mueve_disparo
506+  8A33 CD 76 8A         call foto_disparo_a_borrar
507+  8A36
508+  8A36 C1               pop bc
509+  8A37
510+  8A37 18 04            jr 7F
511+  8A39
512+  8A39              ; ----- ----- ----- ----- ----- -----
513+  8A39
514+  8A39 ED 42        1 sbc hl,bc
515+  8A3B 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
516+  8A3D
517+  8A3D 2A E4 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
518+  8A40 23               inc hl
519+  8A41 23               inc hl
520+  8A42 22 E4 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
521+  8A45 18 DE            jr 2B
522+  8A47
523+  8A47 CD 51 87     3 call Inicia_Puntero_Disparo_Amadeus
524+  8A4A
525+  8A4A 01 66 84         ld bc,Disparo_11
526+  8A4D 2A E2 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
527+  8A50
528+  8A50 CD 88 87     5 call Extrae_address
529+  8A53 7E               ld a,(hl)
530+  8A54 A7               and a
531+  8A55 28 0D            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
532+  8A57
533+  8A57              ; ----- ----- ----- ----- ----- -----
534+  8A57
535+  8A57 C5               push bc
536+  8A58
537+  8A58 CD 76 8A         call foto_disparo_a_borrar
538+  8A5B CD 9C 8A         call Mueve_disparo
539+  8A5E CD 76 8A         call foto_disparo_a_borrar
540+  8A61
541+  8A61 C1               pop bc
542+  8A62
543+  8A62 18 04            jr 8F
544+  8A64
545+  8A64              ; ----- ----- ----- ----- ----- -----
546+  8A64
547+  8A64 ED 42        4 sbc hl,bc
548+  8A66 28 0A            jr z,6F
549+  8A68
550+  8A68 2A E2 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
551+  8A6B 23               inc hl
552+  8A6C 23               inc hl
553+  8A6D 22 E2 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
554+  8A70 18 DE            jr 5B
555+  8A72
556+  8A72 CD 4A 87     6 call Inicia_Puntero_Disparo_Entidades
557+  8A75 C9               ret
558+  8A76
559+  8A76              ; ------------------------------------------------------------------
560+  8A76
561+  8A76 E5           foto_disparo_a_borrar push hl
562+  8A77 23               inc hl
563+  8A78 23               inc hl
564+  8A79 ED 73 D9 85      ld (Stack),sp
565+  8A7D F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
566+  8A7E FD E1            pop iy
567+  8A80 DD E1            pop ix
568+  8A82 E1               pop hl
569+  8A83 ED 7B D9 85      ld sp,(Stack)
570+  8A87 3A D0 85         ld a,(Ctrl_1)
571+  8A8A CB C7            set 0,a
572+  8A8C 32 D0 85         ld (Ctrl_1),a
573+  8A8F CD A0 7F         call Guarda_foto_registros
574+  8A92 3A D0 85         ld a,(Ctrl_1)
575+  8A95 CB 87            res 0,a
576+  8A97 32 D0 85         ld (Ctrl_1),a
577+  8A9A E1               pop hl
578+  8A9B C9               ret
579+  8A9C
580+  8A9C E5           Mueve_disparo push hl
581+  8A9D 7E               ld a,(hl)
582+  8A9E 06 04            ld b,4
583+  8AA0 23           1 inc hl
584+  8AA1 10 FD            djnz 1B
585+  8AA3
586+  8AA3 CD 88 87         call Extrae_address
587+  8AA6
588+  8AA6 E6 01            and 1
589+  8AA8 28 09            jr z,2F
590+  8AAA
591+  8AAA              ; Disparo hacia arriba, (Amadeus).
592+  8AAA
593+  8AAA              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
594+  8AAA              ; _ de la dificultad.
595+  8AAA
596+  8AAA CD AD 8D         call PreviousScan
597+  8AAD              ;    call PreviousScan
598+  8AAD              ;    call PreviousScan
599+  8AAD              ;    call PreviousScan
600+  8AAD
601+  8AAD              ; TRABAJAR LÍMITE SUPERIOR DEL DISPAROOOOO !!!!!!!!!!!
602+  8AAD
603+  8AAD EB           3 ex de,hl
604+  8AAE
605+  8AAE 73               ld (hl),e
606+  8AAF 23               inc hl
607+  8AB0 72               ld (hl),d
608+  8AB1
609+  8AB1 E1               pop hl
610+  8AB2 C9               ret
611+  8AB3
612+  8AB3              ; Disparo hacia abajo, (Entidad).
613+  8AB3
614+  8AB3              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
615+  8AB3              ; _ de la dificultad.
616+  8AB3
617+  8AB3 CD 9E 8D     2 call NextScan
618+  8AB6              ;    call NextScan
619+  8AB6              ;    call NextScan
620+  8AB6              ;    call NextScan
621+  8AB6
622+  8AB6              ; TRABAJAR LÍMITE SUPERIOR DEL DISPAROOOOO !!!!!!!!!!!
623+  8AB6
624+  8AB6 18 F5            jr 3B
625+  8AB8
# file closed: Disparo.asm
837   8AB8              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8AB8              ; ******************************************************************************************************************************************************************************************
  2+  8AB8              ;
  3+  8AB8              ; 01/23
  4+  8AB8              ;
  5+  8AB8              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8AB8
  7+  8AB8 CD 92 8D     Draw call Prepara_draw
  8+  8ABB 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8ABC A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8ABD 28 05        	jr z,2F
 11+  8ABF
 12+  8ABF 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8AC2 18 0C        	jr 1F
 14+  8AC4 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8AC7 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8ACA CD 59 8C     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8ACD              ;													; _la esquina superior izquierda de la pantalla.
 18+  8ACD CD C7 94     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8AD0 3A C3 85     1 ld a,(Ctrl_0)
 20+  8AD3 CB 6F        	bit 5,a
 21+  8AD5 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8AD7
 23+  8AD7 CD EF 8A     	call Comprueba_limite_horizontal
 24+  8ADA CD 7F 8B     	call Comprueba_limite_vertical
 25+  8ADD
 26+  8ADD              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8ADD
 28+  8ADD CD CC 8C     3 call calcula_CColumnass
 29+  8AE0 CD 03 8D     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8AE3 CD 58 8D     	call Define_rutina_de_impresion
 31+  8AE6
 32+  8AE6 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8AE9 CB AF        	res 5,a											; _a ser de utilidad.
 34+  8AEB 32 C3 85     	ld (Ctrl_0),a
 35+  8AEE
 36+  8AEE C9           	ret
 37+  8AEF
 38+  8AEF              ; *******************************************************************************************************************************************************************************************
 39+  8AEF              ;	21/01/23
 40+  8AEF              ;
 41+  8AEF              ; 	Comprueba_limite_horizontal.
 42+  8AEF              ;
 43+  8AEF              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8AEF              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8AEF              ;
 46+  8AEF              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8AEF              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8AEF              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8AEF              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8AEF
 51+  8AEF
 52+  8AEF
 53+  8AEF 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8AF2 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8AF4 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8AF6 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8AF8 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8AFB 18 09            jr 6F
 59+  8AFD CB 5F        1 bit 3,a
 60+  8AFF 28 0A            jr z,2F
 61+  8B01 E6 F7            and $f7
 62+  8B03 32 C3 85         ld (Ctrl_0),a
 63+  8B06 CD 59 8C     6 call Inicializacion
 64+  8B09 18 5B            jr 5F
 65+  8B0B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8B0C
 67+  8B0C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8B0C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8B0C
 70+  8B0C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8B0D 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8B10 CD 5E 90     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8B13 67           	ld h,a
 74+  8B14 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8B15 CD 5E 90     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8B18 67           	ld h,a
 77+  8B19 A7           	and a
 78+  8B1A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8B1C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8B1D 3A AA 85     	ld a,(Cuad_objeto)
 81+  8B20 FE 02        	cp 2
 82+  8B22 38 1E        	jr c,3F
 83+  8B24 28 1C        	jr z,3F
 84+  8B26 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8B27 28 23            jr z,7F
 86+  8B29 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8B2B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8B2D E1           	pop hl
 89+  8B2E
 90+  8B2E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8B2E              ; _para indicar con E="2" en caso necesario.
 92+  8B2E
 93+  8B2E E5               push hl
 94+  8B2F C5               push bc
 95+  8B30 CD 5E 90     	call calcula_tercio
 96+  8B33 FE 01        	cp 1
 97+  8B35 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8B37 CD 67 8B         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8B3A 28 26            jr z,9F
100+  8B3C 38 24            jr c,9F
101+  8B3E 1E 00        11 ld e,0
102+  8B40 18 22            jr 8F
103+  8B42 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8B43 28 07        	jr z, 7F
105+  8B45 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8B47 1E 00         	ld e,0
107+  8B49 E1           	pop hl
108+  8B4A 18 04        	jr 4F
109+  8B4C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8B4E 18 15            jr 10F
111+  8B50
112+  8B50              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8B50              ; _para indicar con E="2" en caso necesario.
114+  8B50
115+  8B50 E5           4 push hl
116+  8B51 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8B52 CD 5E 90     	call calcula_tercio
118+  8B55 FE 01        	cp 1
119+  8B57 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8B59 CD 67 8B         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8B5C 28 04            jr z,9F
122+  8B5E 30 02            jr nc,9F
123+  8B60 18 02        	jr 8F
124+  8B62 1E 02        9 ld e,2
125+  8B64 C1           8 pop bc
126+  8B65 E1           10 pop hl
127+  8B66 C9           5 ret
128+  8B67
129+  8B67              ; --------------------
130+  8B67              ;
131+  8B67              ; 25/08/22
132+  8B67
133+  8B67 CD 5E 90     Comprueba_centro call calcula_tercio
134+  8B6A 67               ld h,a
135+  8B6B 08           	ex af,af
136+  8B6C FE 02        	cp 2
137+  8B6E 38 07        	jr c,1F
138+  8B70 28 05        	jr z,1F
139+  8B72 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8B75 18 03        	jr 2F
141+  8B77 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8B7A 08           2 ex af,af
143+  8B7B A7               and a
144+  8B7C ED 42            sbc hl,bc
145+  8B7E C9               ret
146+  8B7F
147+  8B7F              ; *********************************************************************************************************************************************************************************************
148+  8B7F              ;
149+  8B7F              ;   16/8/22
150+  8B7F              ;
151+  8B7F              ;	Comprueba_limite_vertical
152+  8B7F              ;
153+  8B7F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8B7F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8B7F              ;
156+  8B7F
157+  8B7F 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8B82 7D           	ld a,l
159+  8B83 E6 1F        	and $1F
160+  8B85 57           	ld d,a
161+  8B86 3A CF 85     	ld a,(Limite_vertical)
162+  8B89 BA           	cp d 											; Límite - Posición.
163+  8B8A 08           	ex af,af 										; Resultado de CP d en F'.
164+  8B8B 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8B8E CB 47        	bit 0,a
166+  8B90 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8B92
168+  8B92              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8B92
170+  8B92 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8B93 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8B95
173+  8B95              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8B95              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8B95
176+  8B95 3A 9C 85         ld a,(Coordenada_X)
177+  8B98 16 0F            ld d,Centro_izquierda
178+  8B9A A7               and a
179+  8B9B 92               sub d 											 ; Posición - Centro_izquierda.
180+  8B9C 28 1E            jr z,3F
181+  8B9E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8BA0              ;                                                    ; _salimos sin modificar nada.
183+  8BA0 18 0E            jr 2F
184+  8BA2 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8BA3 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8BA5
187+  8BA5              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8BA5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8BA5
190+  8BA5 3A 9C 85         ld a,(Coordenada_X)
191+  8BA8 16 10            ld d,Centro_derecha
192+  8BAA A7               and a
193+  8BAB 92               sub d
194+  8BAC 28 0E            jr z,3F
195+  8BAE 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8BB0              ;                                                    ; _salimos sin modificar nada.
197+  8BB0 CB 43        2 bit 0,e
198+  8BB2 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8BB4 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8BB5 CD 49 8C         call Modificaccionne
201+  8BB8 C1           	pop bc
202+  8BB9 CD 59 8C         call Inicializacion
203+  8BBC C9           3 ret 				 								 ; Salimos de la rutina.
204+  8BBD
205+  8BBD              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8BBD
207+  8BBD C5           4 push bc
208+  8BBE 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8BC1 0A           	ld a,(bc)
210+  8BC2 3D           	dec a
211+  8BC3 47           	ld b,a 											 ; Columnas-1 en B.
212+  8BC4 7D           	ld a,l
213+  8BC5 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8BC6 CB 47        	bit 0,a
215+  8BC8 28 03        	jr z,5F
216+  8BCA 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8BCB 18 2E        	jr 7F
218+  8BCD
219+  8BCD              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8BCD
221+  8BCD 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8BCE F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8BCF 3A C3 85     	ld a,(Ctrl_0)
224+  8BD2 CB 4F        	bit 1,a
225+  8BD4 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8BD6 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8BD7
228+  8BD7              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8BD7
230+  8BD7 1C               inc e
231+  8BD8 1D               dec e
232+  8BD9 20 07            jr nz,12F
233+  8BDB 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8BDC 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8BDD 22 98 85     	ld (Posicion_actual),hl
236+  8BE0 18 44        13 jr 9F
237+  8BE2 CB 43        12 bit 0,e
238+  8BE4 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8BE6              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8BE6 C1           	pop bc
241+  8BE7 18 D3        	jr 3B
242+  8BE9 80           14 add b
243+  8BEA 6F               ld l,a
244+  8BEB 22 98 85     	ld (Posicion_actual),hl
245+  8BEE CD 49 8C         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8BF1 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8BF3 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8BF5 32 C3 85         ld (Ctrl_0),a
249+  8BF8 F1           	pop af
250+  8BF9 18 2B        	jr 9F
251+  8BFB
252+  8BFB              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8BFB
254+  8BFB F5           7 push af
255+  8BFC 3A C3 85     	ld a,(Ctrl_0)
256+  8BFF CB 47        	bit 0,a
257+  8C01 20 1D        	jr nz,8F
258+  8C03 F1           	pop af
259+  8C04
260+  8C04              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8C04
262+  8C04 1C           	inc e
263+  8C05 1D               dec e
264+  8C06 20 07            jr nz,10F
265+  8C08 90           	sub b
266+  8C09 6F               ld l,a
267+  8C0A 22 98 85     	ld (Posicion_actual),hl
268+  8C0D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8C0F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8C0F CB 43        10 bit 0,e
271+  8C11 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8C13              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8C13 C1           	pop bc
274+  8C14 18 A6        	jr 3B
275+  8C16 90           16 sub b
276+  8C17 6F               ld l,a
277+  8C18 22 98 85     	ld (Posicion_actual),hl
278+  8C1B CD 49 8C         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8C1E 18 06            jr 9F
280+  8C20 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8C22 32 C3 85         ld (Ctrl_0),a
282+  8C25 F1           	pop af
283+  8C26 C1           9 pop bc
284+  8C27 1E 00        	ld e,0
285+  8C29 CD 59 8C         call Inicializacion
286+  8C2C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8C2D 08           	ex af,af
288+  8C2E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8C2F 18 8B            jr 3B
290+  8C31
291+  8C31              ; --------------------
292+  8C31
293+  8C31 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8C33 CD AD 8D     1 call PreviousScan
295+  8C36 10 FB            djnz 1B
296+  8C38 22 98 85     	ld (Posicion_actual),hl
297+  8C3B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8C3C C9           	ret
299+  8C3D
300+  8C3D              ; --------------------
301+  8C3D
302+  8C3D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8C3F CD 9E 8D     1 call NextScan
304+  8C42 10 FB            djnz 1B
305+  8C44 22 98 85     	ld (Posicion_actual),hl
306+  8C47 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8C48 C9           	ret
308+  8C49
309+  8C49              ; --------------------
310+  8C49              ;
311+  8C49              ;	22/01/23
312+  8C49              ;
313+  8C49              ;	E="1". Hemos cambiado de cuadrante.
314+  8C49              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8C49              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8C49
317+  8C49
318+  8C49              Modificaccionne
319+  8C49
320+  8C49 3A AA 85     	ld a,(Cuad_objeto)
321+  8C4C FE 02        	cp 2
322+  8C4E CC 31 8C         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8C51 DC 31 8C         call c,Modifica_Pos_actual
324+  8C54 C8           	ret z
325+  8C55 CD 3D 8C         call Modifica_Pos_actual2
326+  8C58 C9               ret
327+  8C59
328+  8C59              ; *************************************************************************************************************************************************************************************************
329+  8C59              ;
330+  8C59              ;	13/8/22
331+  8C59              ;
332+  8C59              ;	Inicializacion
333+  8C59              ;
334+  8C59              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8C59              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8C59              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8C59              ;
338+  8C59              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8C59              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8C59              ;	_ desaparece/aparece.
341+  8C59
342+  8C59              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8C59              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8C59              ;
345+  8C59              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8C59              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8C59              ; 		   [E] ="0"
348+  8C59
349+  8C59              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8C59
351+  8C59 CD 5E 90     Inicializacion call calcula_tercio
352+  8C5C 28 36        	jr z,primit
353+  8C5E E6 02        	and 2
354+  8C60 20 07        	jr nz,segmit
355+  8C62 7D           	ld a,l
356+  8C63 FE 7F        	cp $7f
357+  8C65 38 2D        	jr c,primit
358+  8C67 28 2B        	jr z,primit
359+  8C69 CD C6 8C     segmit call column
360+  8C6C 38 13        	jr c,tercuad
361+  8C6E 3E 04        cuarcuad ld a,4
362+  8C70 32 AA 85     	ld (Cuad_objeto),a
363+  8C73 21 20 48     	ld hl,$4820
364+  8C76 22 CD 85     	ld (Limite_horizontal),hl
365+  8C79 21 CF 85     	ld hl,Limite_vertical
366+  8C7C 36 0D        	ld (hl),$0d
367+  8C7E 08           	ex af,af
368+  8C7F 18 3C        	jr 1F
369+  8C81              tercuad
370+  8C81 3E 03        	ld a,3
371+  8C83 32 AA 85     	ld (Cuad_objeto),a
372+  8C86 21 20 48     	ld hl,$4820
373+  8C89 22 CD 85     	ld (Limite_horizontal),hl
374+  8C8C 21 CF 85     	ld hl,Limite_vertical
375+  8C8F 36 12        	ld (hl),$12
376+  8C91 08           	ex af,af
377+  8C92 18 29        	jr 1F
378+  8C94 CD C6 8C     primit call column
379+  8C97 38 13        	jr c, primcuad
380+  8C99              segcuad
381+  8C99 3E 02        	ld a,2
382+  8C9B 32 AA 85     	ld (Cuad_objeto),a
383+  8C9E 21 C0 4F     	ld hl,$4fc0
384+  8CA1 22 CD 85     	ld (Limite_horizontal),hl
385+  8CA4 21 CF 85     	ld hl,Limite_vertical
386+  8CA7 36 0D        	ld (hl),$0d
387+  8CA9 08           	ex af,af
388+  8CAA 18 11        	jr 1F
389+  8CAC              primcuad
390+  8CAC 3E 01        	ld a,1
391+  8CAE 32 AA 85     	ld (Cuad_objeto),a
392+  8CB1 21 C0 4F     	ld hl,$4fc0
393+  8CB4 22 CD 85     	ld (Limite_horizontal),hl
394+  8CB7 21 CF 85     	ld hl,Limite_vertical
395+  8CBA 36 12        	ld (hl),$12
396+  8CBC 08           	ex af,af
397+  8CBD CD 90 93     1 call Genera_coordenadas
398+  8CC0 21 C3 85     	ld hl,Ctrl_0
399+  8CC3 CB EE        	set 5,(hl)
400+  8CC5 C9           	ret
401+  8CC6
402+  8CC6              ; ------------------------------------------------------------------------------------------------------------------
403+  8CC6
404+  8CC6              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8CC6              ;
406+  8CC6              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8CC6
408+  8CC6 7D           column ld a,l
409+  8CC7 E6 1F        	and $1f
410+  8CC9 FE 10         	cp $10
411+  8CCB C9            	ret
412+  8CCC
413+  8CCC              ; --------------------------------------------------------------------------------------------------------------------
414+  8CCC              ;
415+  8CCC              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8CCC              ;
417+  8CCC              ; 14/12/22
418+  8CCC              ;
419+  8CCC              ;	Modifica: A y BC.
420+  8CCC
421+  8CCC 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8CCF E6 01        	and 1
423+  8CD1 28 17        	jr z,1F
424+  8CD3
425+  8CD3              ; Nos encontramos en la parte izquierda de la pantalla
426+  8CD3
427+  8CD3 3A 9C 85     	ld a,(Coordenada_X)
428+  8CD6 47           	ld b,a
429+  8CD7 04           	inc b											; (Coordenada_X)+1 en B.
430+  8CD8 79           	ld a,c
431+  8CD9 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8CDA 38 08        	jr c,2F
433+  8CDC 47           	ld b,a
434+  8CDD 79           	ld a,c
435+  8CDE 90           	sub b
436+  8CDF 32 CC 85     	ld (Columnas),a
437+  8CE2 18 1B        	jr 4F
438+  8CE4 79           2 ld a,c
439+  8CE5 32 CC 85     	ld (Columnas),a
440+  8CE8 18 15        	jr 4F
441+  8CEA
442+  8CEA              ; Nos encontramos en la parte derecha de la pantalla.
443+  8CEA
444+  8CEA 3A 9C 85     1 ld a,(Coordenada_X)
445+  8CED 81           	add c
446+  8CEE 3D           	dec a
447+  8CEF D6 1F        	sub $1f
448+  8CF1 38 08        	jr c,3F
449+  8CF3 47           	ld b,a
450+  8CF4 79           	ld a,c
451+  8CF5 90           	sub b
452+  8CF6 32 CC 85     	ld (Columnas),a
453+  8CF9 18 04        	jr 4F
454+  8CFB 79           3 ld a,c
455+  8CFC 32 CC 85     	ld (Columnas),a
456+  8CFF D9           4 exx
457+  8D00 4F           	ld c,a
458+  8D01 D9           	exx
459+  8D02 C9            ret
460+  8D03
461+  8D03              ; --------------------------------------------------------------------------------------------------------------------
462+  8D03              ;
463+  8D03              ; 7/1/23
464+  8D03              ;
465+  8D03              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8D03              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8D03              ;
468+  8D03              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8D03              ;	DESTRUYE: HL,B Y A.
470+  8D03
471+  8D03 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8D06 FE 02        	cp 2
473+  8D08 38 18        	jr c,1F
474+  8D0A 28 16        	jr z,1F
475+  8D0C E6 01        	and 1
476+  8D0E 28 0D        	jr z,3F
477+  8D10
478+  8D10              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8D10
480+  8D10 CD 4C 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8D13
482+  8D13 7D           9 ld a,l
483+  8D14 E6 1F        	and $1f
484+  8D16 28 2A        	jr z,7F
485+  8D18 2B           	dec hl
486+  8D19 10 F8        	djnz 9B
487+  8D1B 18 25        	jr 7F
488+  8D1D
489+  8D1D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8D1D
491+  8D1D 2A 98 85     3 ld hl,(Posicion_actual)
492+  8D20 18 20        	jr 7F
493+  8D22
494+  8D22 28 14        1 jr z,2F
495+  8D24
496+  8D24              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8D24
498+  8D24 CD 4C 8D     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8D27 7D           4 ld a,l
500+  8D28 E6 1F        	and $1f
501+  8D2A 28 03        	jr z,6F
502+  8D2C 2B           	dec hl
503+  8D2D 10 F8        	djnz 4B
504+  8D2F 06 0F        6 ld b,15
505+  8D31 CD AD 8D     5 call PreviousScan
506+  8D34 10 FB        	djnz 5B
507+  8D36 18 0A        	jr 7F
508+  8D38
509+  8D38              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8D38
511+  8D38 CD 4C 8D     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8D3B 06 0F        	ld b,15
513+  8D3D CD AD 8D     8 call PreviousScan
514+  8D40 10 FB        	djnz 8B
515+  8D42
516+  8D42 E5           7 push hl
517+  8D43 DD E1        	pop ix
518+  8D45
519+  8D45 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8D48 E5           	push hl
521+  8D49 FD E1        	pop iy
522+  8D4B
523+  8D4B C9           	ret
524+  8D4C
525+  8D4C              ; --------------------------------------------------------------------------------------------------------------------
526+  8D4C              ;
527+  8D4C              ;	2/1/23
528+  8D4C              ;
529+  8D4C              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8D4C              ;
531+  8D4C              ;	Tras esta rutina tenemos:
532+  8D4C              ;
533+  8D4C              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8D4C              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8D4C              ;
536+  8D4C              ;	DESTRUYE!!!!! HL,B y A.
537+  8D4C
538+  8D4C 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8D4F 3A CC 85     	ld a,(Columnas)
540+  8D52 3D           	dec a
541+  8D53 20 01        	jr nz,1F
542+  8D55 3C           	inc a
543+  8D56 47           1 ld b,a
544+  8D57 C9           	ret
545+  8D58
546+  8D58              ; --------------------------------------------------------------------------------------------------------------------
547+  8D58              ;
548+  8D58              ;	3/1/23
549+  8D58              ;
550+  8D58              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8D58              ;
552+  8D58              ;	Destruye: A,B,HL y DE.
553+  8D58
554+  8D58              Define_rutina_de_impresion
555+  8D58
556+  8D58 3A 97 85     	ld a,(Columns)
557+  8D5B 47           	ld b,a
558+  8D5C 3A CC 85     	ld a,(Columnas)
559+  8D5F B8           	cp b
560+  8D60 20 0D        	jr nz,2f
561+  8D62
562+  8D62              ;	La entidad se imprime entera.
563+  8D62
564+  8D62 21 2E 8E     	ld hl, Indice_entidades_completas
565+  8D65 E6 01        	and 1
566+  8D67 28 02        	jr z,1F
567+  8D69
568+  8D69 23           	inc hl
569+  8D6A 23           	inc hl
570+  8D6B
571+  8D6B CD 88 87     1 call Extrae_address
572+  8D6E C9           	ret		;	ret
573+  8D6F
574+  8D6F              ;	La entidad no se imprime entera en pantalla.
575+  8D6F
576+  8D6F 3A AA 85     2 ld a,(Cuad_objeto)
577+  8D72 E6 01        	and 1
578+  8D74 28 17        	jr z,3F
579+  8D76
580+  8D76              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8D76
582+  8D76 21 32 8E     	ld hl, Indice_entidades_incompletas_izquierda
583+  8D79 3A 97 85     4 ld a,(Columns)
584+  8D7C E6 01        	and 1
585+  8D7E 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8D80
587+  8D80 23           	inc hl
588+  8D81 23           	inc hl
589+  8D82
590+  8D82 3A CC 85     	ld a,(Columnas)
591+  8D85 E6 01        	and 1
592+  8D87 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8D89
594+  8D89 23           	inc hl
595+  8D8A 23           	inc hl
596+  8D8B
597+  8D8B 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8D8D
599+  8D8D 21 38 8E     3 ld hl, Indice_entidades_incompletas_derecha
600+  8D90 18 E7        	jr 4B
601+  8D92
602+  8D92              ; --------------------------------------------------------------------------------------------------------------------
603+  8D92              ;
604+  8D92              ;	Prepara_draw
605+  8D92              ;
606+  8D92              ;	Es una rutina de carga.
607+  8D92              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8D92              ;
609+  8D92              ;	FUNCIONAMIENTO:
610+  8D92              ;
611+  8D92              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8D92              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8D92              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8D92              ;
615+  8D92              ;	DESTRUYE:
616+  8D92              ;
617+  8D92              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8D92
619+  8D92 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8D95 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8D96 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8D97 4E           	ld c,(hl)
623+  8D98 2A 98 85     	ld hl,(Posicion_actual)
624+  8D9B 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8D9D C9           	ret
626+  8D9E
627+  8D9E              ;----------------------------------------------------------------------------------------------------------------
628+  8D9E              ;
629+  8D9E              ;	5/08/22
630+  8D9E              ;
631+  8D9E              ;   NextScan.
632+  8D9E              ;
633+  8D9E              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8D9E              ;
635+  8D9E              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8D9E              ;
637+  8D9E              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8D9E              ;
639+  8D9E              ;       DESTRUIDOS: AF y HL !!!
640+  8D9E              ;
641+  8D9E              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8D9E              ;
643+  8D9E
644+  8D9E 24           NextScan inc h          ; Incrementamos el scanline.
645+  8D9F 7C               ld a,h
646+  8DA0 E6 07            and 7
647+  8DA2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8DA3
649+  8DA3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8DA4 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8DA6 6F               ld l,a
652+  8DA7 D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8DA8
654+  8DA8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8DA9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8DAB 67               ld h,a
657+  8DAC C9               ret
658+  8DAD
659+  8DAD              ;----------------------------------------------------------------------------------------------------------------
660+  8DAD              ;
661+  8DAD              ;	5/08/22
662+  8DAD              ;
663+  8DAD              ;   PreviousScan.
664+  8DAD              ;
665+  8DAD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8DAD              ;
667+  8DAD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8DAD              ;
669+  8DAD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8DAD              ;
671+  8DAD              ;       DESTRUIDOS: AF y HL !!!
672+  8DAD              ;
673+  8DAD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8DAD              ;
675+  8DAD
676+  8DAD 7C           PreviousScan ld a,h
677+  8DAE 25               dec h               ; Dec H.
678+  8DAF E6 07            and 7
679+  8DB1 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8DB2
681+  8DB2 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8DB3 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8DB5 6F               ld l,a
684+  8DB6 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8DB7
686+  8DB7 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8DB8 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8DBA 67               ld h,a
689+  8DBB C9               ret
690+  8DBC
691+  8DBC              ; -----------------------------------------------------------------------------------
692+  8DBC              ;
693+  8DBC              ;	28/2/23
694+  8DBC              ;
695+  8DBC              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8DBC              ;	Extrae fotos de Album_de_fotos.
697+  8DBC
698+  8DBC 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8DBF A7           	and a
700+  8DC0 C8           	ret z
701+  8DC1 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8DC5 31 00 70     	ld sp,Album_de_fotos
703+  8DC8
704+  8DC8 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8DCA E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8DCB D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8DCC
708+  8DCC ED 73 DB 85  	ld (Stack_2),sp
709+  8DD0 ED 7B D9 85  	ld sp,(Stack)
710+  8DD4
711+  8DD4              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8DD4
713+  8DD4 3E CD        	ld a,$cd
714+  8DD6 32 DE 8D     	ld (Imprime),a
715+  8DD9 EB           	ex de,hl
716+  8DDA 22 DF 8D     	ld (Imprime+1),hl
717+  8DDD EB           	ex de,hl
718+  8DDE
719+  8DDE              ; Ejecuta la llamada:	CALL $xx,xx
720+  8DDE
721+  8DDE 00 00 00     Imprime db 0,0,0
722+  8DE1
723+  8DE1 3A D8 85     	ld a,(Numero_de_malotes)
724+  8DE4 3D           	dec a
725+  8DE5 28 09        	jr z,1F
726+  8DE7 32 D8 85      	ld (Numero_de_malotes),a
727+  8DEA
728+  8DEA ED 7B DB 85   	ld sp,(Stack_2)
729+  8DEE 18 D8        	jr 2B
730+  8DF0
731+  8DF0 AF           1 xor a
732+  8DF1 32 DB 85     	ld (Stack_2),a
733+  8DF4 C9           	ret
734+  8DF5
735+  8DF5              ; -----------------------------------------------------------------------------------
736+  8DF5              ;
737+  8DF5              ;	28/2/23
738+  8DF5              ;
739+  8DF5              ;	Pinta los disparos generados.
740+  8DF5
741+  8DF5              Extrae_foto_disparos
742+  8DF5
743+  8DF5 3A E1 85     	ld a,(Numero_de_disparotes)
744+  8DF8 A7           	and a
745+  8DF9 C8           	ret z
746+  8DFA ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8DFE 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8E01
749+  8E01 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8E03 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8E04 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8E05
753+  8E05 ED 73 DB 85  	ld (Stack_2),sp
754+  8E09 ED 7B D9 85  	ld sp,(Stack)
755+  8E0D
756+  8E0D              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8E0D
758+  8E0D 3E CD        	ld a,$cd
759+  8E0F 32 17 8E     	ld (Imprime2),a
760+  8E12 EB           	ex de,hl
761+  8E13 22 18 8E     	ld (Imprime2+1),hl
762+  8E16 EB           	ex de,hl
763+  8E17
764+  8E17              ; Ejecuta la llamada:	CALL $xx,xx
765+  8E17
766+  8E17 00 00 00     Imprime2 db 0,0,0
767+  8E1A
768+  8E1A 3A E1 85     	ld a,(Numero_de_disparotes)
769+  8E1D 3D           	dec a
770+  8E1E 28 09        	jr z,1F
771+  8E20 32 E1 85      	ld (Numero_de_disparotes),a
772+  8E23
773+  8E23 ED 7B DB 85  	ld sp,(Stack_2)
774+  8E27 18 D8        	jr 2B
775+  8E29
776+  8E29 AF           1 xor a
777+  8E2A 32 DB 85     	ld (Stack_2),a
778+  8E2D C9           	ret
779+  8E2E
# file closed: Draw_XOR.asm
838   8E2E              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8E2E              ;   índices de Rutinas de impresión.
  2+  8E2E
  3+  8E2E 3E 8E        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8E30 6B 8E            defw Pinta_Amadeus_3x2
  5+  8E32
  6+  8E32 C1 8E        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8E34 61 8F            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8E36 15 8F            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8E38
 10+  8E38 EB 8E        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8E3A EF 8F            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8E3C A3 8F            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8E3E
 14+  8E3E
 15+  8E3E              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8E3E              ;
 17+  8E3E              ;   12/12/22
 18+  8E3E              ;
 19+  8E3E              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8E3E              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8E3E              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8E3E              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8E3E              ;
 24+  8E3E              ;   Modifica: DE y HL.
 25+  8E3E
 26+  8E3E ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8E42 FD F9        	ld sp,iy
 28+  8E44 06 10            ld b,16
 29+  8E46 D1           1 pop de
 30+  8E47 7B               ld a,e
 31+  8E48 AE               xor (hl)
 32+  8E49 77           	ld (hl),a
 33+  8E4A 23           	inc hl
 34+  8E4B 7A               ld a,d
 35+  8E4C AE               xor (hl)
 36+  8E4D 77           	ld (hl),a
 37+  8E4E 2B           	dec hl
 38+  8E4F 24           	inc h
 39+  8E50 7C               ld a,h
 40+  8E51 E6 07            and 7
 41+  8E53 20 0A            jr nz,2F
 42+  8E55 7D               ld a,l
 43+  8E56 C6 20            add a,$20
 44+  8E58 6F               ld l,a
 45+  8E59 38 04            jr c,2F
 46+  8E5B 7C               ld a,h
 47+  8E5C D6 08            sub 8
 48+  8E5E 67               ld h,a
 49+  8E5F 7C           2 ld a,h
 50+  8E60 FE 58            cp $58
 51+  8E62 28 02            jr z,3F
 52+  8E64 10 E0            djnz 1B
 53+  8E66 ED 7B D9 85  3 ld sp,(Stack)
 54+  8E6A C9           	ret
 55+  8E6B
 56+  8E6B ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8E6F FD F9        	ld sp,iy
 58+  8E71 06 08            ld b,8
 59+  8E73 D1           1 pop de
 60+  8E74 7B               ld a,e
 61+  8E75 AE               xor (hl)
 62+  8E76 77           	ld (hl),a
 63+  8E77 23           	inc hl
 64+  8E78 7A               ld a,d
 65+  8E79 AE               xor (hl)
 66+  8E7A 77           	ld (hl),a
 67+  8E7B 23           	inc hl
 68+  8E7C D1           	pop de
 69+  8E7D 7B               ld a,e
 70+  8E7E AE               xor (hl)
 71+  8E7F 77           	ld (hl),a
 72+  8E80 2B           	dec hl
 73+  8E81 2B           	dec hl
 74+  8E82 24           	inc h
 75+  8E83 7C               ld a,h
 76+  8E84 E6 07            and 7
 77+  8E86 20 0A            jr nz,2F
 78+  8E88 7D               ld a,l
 79+  8E89 C6 20            add a,$20
 80+  8E8B 6F               ld l,a
 81+  8E8C 38 04            jr c,2F
 82+  8E8E 7C               ld a,h
 83+  8E8F D6 08            sub 8
 84+  8E91 67               ld h,a
 85+  8E92 7C           2 ld a,h
 86+  8E93 FE 58            cp $58
 87+  8E95 28 25            jr z,4F
 88+  8E97 7A               ld a,d
 89+  8E98 AE               xor (hl)
 90+  8E99 77               ld (hl),a
 91+  8E9A D1           	pop de
 92+  8E9B 23           	inc hl
 93+  8E9C 7B               ld a,e
 94+  8E9D AE               xor (hl)
 95+  8E9E 77           	ld (hl),a
 96+  8E9F 23           	inc hl
 97+  8EA0 7A               ld a,d
 98+  8EA1 AE               xor (hl)
 99+  8EA2 77           	ld (hl),a
100+  8EA3 2B           	dec hl
101+  8EA4 2B           	dec hl
102+  8EA5 24           	inc h
103+  8EA6 7C               ld a,h
104+  8EA7 E6 07            and 7
105+  8EA9 20 0A            jr nz,3F
106+  8EAB 7D               ld a,l
107+  8EAC C6 20            add a,$20
108+  8EAE 6F               ld l,a
109+  8EAF 38 04            jr c,3F
110+  8EB1 7C               ld a,h
111+  8EB2 D6 08            sub 8
112+  8EB4 67               ld h,a
113+  8EB5 7C           3 ld a,h
114+  8EB6 FE 58            cp $58
115+  8EB8 28 02            jr z,4F
116+  8EBA 10 B7            djnz 1B
117+  8EBC ED 7B D9 85  4 ld sp,(Stack)
118+  8EC0 C9           	ret
119+  8EC1
120+  8EC1              ; ---------------------------------------------------
121+  8EC1
122+  8EC1 ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8EC5 FD F9        	ld sp,iy
124+  8EC7
125+  8EC7              ; >>>
126+  8EC7
127+  8EC7 06 10            ld b,16
128+  8EC9 D1           1 pop de
129+  8ECA 7A           	ld a,d
130+  8ECB AE           	xor (hl)
131+  8ECC 77           	ld (hl),a
132+  8ECD 24           	inc h
133+  8ECE 7C               ld a,h
134+  8ECF E6 07            and 7
135+  8ED1 20 0C            jr nz,2F
136+  8ED3 7D               ld a,l
137+  8ED4 C6 20            add a,$20
138+  8ED6 6F               ld l,a
139+  8ED7 38 06            jr c,2F
140+  8ED9 7C               ld a,h
141+  8EDA D6 08            sub 8
142+  8EDC 67               ld h,a
143+  8EDD 18 00            jr 2F
144+  8EDF 7C           2 ld a,h
145+  8EE0 FE 58            cp $58
146+  8EE2 28 02            jr z,3F
147+  8EE4 10 E3            djnz 1B
148+  8EE6 ED 7B D9 85  3 ld sp,(Stack)
149+  8EEA C9           	ret
150+  8EEB
151+  8EEB ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8EEF FD F9        	ld sp,iy
153+  8EF1
154+  8EF1              ; >>>
155+  8EF1
156+  8EF1 06 10            ld b,16
157+  8EF3 D1           1 pop de
158+  8EF4 7B           	ld a,e
159+  8EF5 AE           	xor (hl)
160+  8EF6 77           	ld (hl),a
161+  8EF7 24           	inc h
162+  8EF8 7C               ld a,h
163+  8EF9 E6 07            and 7
164+  8EFB 20 0C            jr nz,2F
165+  8EFD 7D               ld a,l
166+  8EFE C6 20            add a,$20
167+  8F00 6F               ld l,a
168+  8F01 38 06            jr c,2F
169+  8F03 7C               ld a,h
170+  8F04 D6 08            sub 8
171+  8F06 67               ld h,a
172+  8F07 18 00            jr 2F
173+  8F09 7C           2 ld a,h
174+  8F0A FE 58            cp $58
175+  8F0C 28 02            jr z,3F
176+  8F0E 10 E3            djnz 1B
177+  8F10 ED 7B D9 85  3 ld sp,(Stack)
178+  8F14 C9           	ret
179+  8F15
180+  8F15              ; ---------------------------------------------------
181+  8F15
182+  8F15 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8F19 FD F9        	ld sp,iy
184+  8F1B 06 08            ld b,8
185+  8F1D D1           1 pop de
186+  8F1E 7A           	ld a,d
187+  8F1F AE           	xor (hl)
188+  8F20 77           	ld (hl),a
189+  8F21 23           	inc hl
190+  8F22 D1           	pop de
191+  8F23 7B           	ld a,e
192+  8F24 AE           	xor (hl)
193+  8F25 77           	ld (hl),a
194+  8F26 2B           	dec hl
195+  8F27 24            	inc h
196+  8F28 7C               ld a,h
197+  8F29 E6 07            and 7
198+  8F2B 20 0A            jr nz,2F
199+  8F2D 7D               ld a,l
200+  8F2E C6 20            add a,$20
201+  8F30 6F               ld l,a
202+  8F31 38 04            jr c,2F
203+  8F33 7C               ld a,h
204+  8F34 D6 08            sub 8
205+  8F36 67               ld h,a
206+  8F37 7C           2 ld a,h
207+  8F38 FE 58            cp $58
208+  8F3A 28 20            jr z,4F
209+  8F3C D1               pop de
210+  8F3D 7B           	ld a,e
211+  8F3E AE           	xor (hl)
212+  8F3F 77           	ld (hl),a
213+  8F40 23           	inc hl
214+  8F41 7A           	ld a,d
215+  8F42 AE           	xor (hl)
216+  8F43 77           	ld (hl),a
217+  8F44 2B           	dec hl
218+  8F45 24           	inc h
219+  8F46 7C               ld a,h
220+  8F47 E6 07            and 7
221+  8F49 20 0A            jr nz,3F
222+  8F4B 7D               ld a,l
223+  8F4C C6 20            add a,$20
224+  8F4E 6F               ld l,a
225+  8F4F 38 04            jr c,3F
226+  8F51 7C               ld a,h
227+  8F52 D6 08            sub 8
228+  8F54 67               ld h,a
229+  8F55 7C           3 ld a,h
230+  8F56 FE 58            cp $58
231+  8F58 28 02            jr z,4F
232+  8F5A 10 C1            djnz 1B
233+  8F5C ED 7B D9 85  4 ld sp,(Stack)
234+  8F60 C9           	ret
235+  8F61
236+  8F61 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8F65 FD F9        	ld sp,iy
238+  8F67 06 08            ld b,8
239+  8F69 D1           1 pop de
240+  8F6A D1           	pop de
241+  8F6B 7B           	ld a,e
242+  8F6C AE           	xor (hl)
243+  8F6D 77           	ld (hl),a
244+  8F6E 24            	inc h
245+  8F6F 7C               ld a,h
246+  8F70 E6 07            and 7
247+  8F72 20 0A            jr nz,2F
248+  8F74 7D               ld a,l
249+  8F75 C6 20            add a,$20
250+  8F77 6F               ld l,a
251+  8F78 38 04            jr c,2F
252+  8F7A 7C               ld a,h
253+  8F7B D6 08            sub 8
254+  8F7D 67               ld h,a
255+  8F7E 7C           2 ld a,h
256+  8F7F FE 58            cp $58
257+  8F81 28 1B            jr z,4F
258+  8F83 D1               pop de
259+  8F84 7A           	ld a,d
260+  8F85 AE           	xor (hl)
261+  8F86 77           	ld (hl),a
262+  8F87 24           	inc h
263+  8F88 7C               ld a,h
264+  8F89 E6 07            and 7
265+  8F8B 20 0A            jr nz,3F
266+  8F8D 7D               ld a,l
267+  8F8E C6 20            add a,$20
268+  8F90 6F               ld l,a
269+  8F91 38 04            jr c,3F
270+  8F93 7C               ld a,h
271+  8F94 D6 08            sub 8
272+  8F96 67               ld h,a
273+  8F97 7C           3 ld a,h
274+  8F98 FE 58            cp $58
275+  8F9A 28 02            jr z,4F
276+  8F9C 10 CB            djnz 1B
277+  8F9E ED 7B D9 85  4 ld sp,(Stack)
278+  8FA2 C9           	ret
279+  8FA3
280+  8FA3 ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  8FA7 FD F9        	ld sp,iy
282+  8FA9 06 08            ld b,8
283+  8FAB D1           1 pop de
284+  8FAC 7B           	ld a,e
285+  8FAD AE           	xor (hl)
286+  8FAE 77           	ld (hl),a
287+  8FAF 23           	inc hl
288+  8FB0 7A           	ld a,d
289+  8FB1 AE           	xor (hl)
290+  8FB2 77           	ld (hl),a
291+  8FB3 2B           	dec hl
292+  8FB4 24             	inc h
293+  8FB5 7C               ld a,h
294+  8FB6 E6 07            and 7
295+  8FB8 20 0A            jr nz,2F
296+  8FBA 7D               ld a,l
297+  8FBB C6 20            add a,$20
298+  8FBD 6F               ld l,a
299+  8FBE 38 04            jr c,2F
300+  8FC0 7C               ld a,h
301+  8FC1 D6 08            sub 8
302+  8FC3 67               ld h,a
303+  8FC4 7C           2 ld a,h
304+  8FC5 FE 58            cp $58
305+  8FC7 28 21            jr z,4F
306+  8FC9 D1               pop de
307+  8FCA 7A           	ld a,d
308+  8FCB AE           	xor (hl)
309+  8FCC 77           	ld (hl),a
310+  8FCD 23           	inc hl
311+  8FCE D1               pop de
312+  8FCF 7B           	ld a,e
313+  8FD0 AE           	xor (hl)
314+  8FD1 77           	ld (hl),a
315+  8FD2 2B           	dec hl
316+  8FD3 24           	inc h
317+  8FD4 7C               ld a,h
318+  8FD5 E6 07            and 7
319+  8FD7 20 0A            jr nz,3F
320+  8FD9 7D               ld a,l
321+  8FDA C6 20            add a,$20
322+  8FDC 6F               ld l,a
323+  8FDD 38 04            jr c,3F
324+  8FDF 7C               ld a,h
325+  8FE0 D6 08            sub 8
326+  8FE2 67               ld h,a
327+  8FE3 7C           3 ld a,h
328+  8FE4 FE 58            cp $58
329+  8FE6 28 02            jr z,4F
330+  8FE8 10 C1            djnz 1B
331+  8FEA ED 7B D9 85  4 ld sp,(Stack)
332+  8FEE C9           	ret
333+  8FEF
334+  8FEF ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  8FF3 FD F9        	ld sp,iy
336+  8FF5 06 08            ld b,8
337+  8FF7 D1           1 pop de
338+  8FF8 7B           	ld a,e
339+  8FF9 AE           	xor (hl)
340+  8FFA 77           	ld (hl),a
341+  8FFB 24            	inc h
342+  8FFC 7C               ld a,h
343+  8FFD E6 07            and 7
344+  8FFF 20 0A            jr nz,2F
345+  9001 7D               ld a,l
346+  9002 C6 20            add a,$20
347+  9004 6F               ld l,a
348+  9005 38 04            jr c,2F
349+  9007 7C               ld a,h
350+  9008 D6 08            sub 8
351+  900A 67               ld h,a
352+  900B 7C           2 ld a,h
353+  900C FE 58            cp $58
354+  900E 28 1C            jr z,4F
355+  9010 D1               pop de
356+  9011 7A           	ld a,d
357+  9012 AE           	xor (hl)
358+  9013 77           	ld (hl),a
359+  9014 24           	inc h
360+  9015 7C               ld a,h
361+  9016 E6 07            and 7
362+  9018 20 0A            jr nz,3F
363+  901A 7D               ld a,l
364+  901B C6 20            add a,$20
365+  901D 6F               ld l,a
366+  901E 38 04            jr c,3F
367+  9020 7C               ld a,h
368+  9021 D6 08            sub 8
369+  9023 67               ld h,a
370+  9024 7C           3 ld a,h
371+  9025 FE 58            cp $58
372+  9027 28 03            jr z,4F
373+  9029 D1               pop de
374+  902A 10 CB            djnz 1B
375+  902C ED 7B D9 85  4 ld sp,(Stack)
376+  9030 C9           	ret
377+  9031
378+  9031              ; ---------------------------------------------------
379+  9031              ;
380+  9031              ;   27/02/23
381+  9031              ;
382+  9031              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  9031              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  9031              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  9031
386+  9031 ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  9035 FD F9            ld sp,iy
388+  9037 06 02            ld b,2
389+  9039 D1           1 pop de
390+  903A 7B               ld a,e
391+  903B AE               xor (hl)
392+  903C 77               ld (hl),a
393+  903D 23               inc hl
394+  903E 7A               ld a,d
395+  903F AE               xor (hl)
396+  9040 77               ld (hl),a
397+  9041 2B               dec hl
398+  9042
399+  9042 24               inc h
400+  9043 7C               ld a,h
401+  9044 E6 07            and 7
402+  9046 20 0A            jr nz,2F
403+  9048 7D               ld a,l
404+  9049 C6 20            add a,$20
405+  904B 6F               ld l,a
406+  904C 38 04            jr c,2F
407+  904E 7C               ld a,h
408+  904F D6 08            sub 8
409+  9051 67               ld h,a
410+  9052 7C           2 ld a,h
411+  9053 FE 58            cp $58
412+  9055 28 02            jr z,3F
413+  9057
414+  9057 10 E0            djnz 1B
415+  9059 ED 7B D9 85  3 ld sp,(Stack)
416+  905D C9               ret
417+  905E
# file closed: Rutinas_de_impresion_sprites.asm
839   905E              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  905E              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  905E              ;
  3+  905E              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  905E              ;
  5+  905E              ; *****************************************************************************************************************************************************************************************
  6+  905E              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  905E
  8+  905E 7C           calcula_tercio ld a,h
  9+  905F E6 18        	and $18
 10+  9061 CB 2F        	sra a
 11+  9063 CB 2F        	sra a
 12+  9065 CB 2F        	sra a
 13+  9067 C9           	ret
 14+  9068
# file closed: calcula_tercio.asm
840   9068              	include "Cls.asm"
# file opened: Cls.asm
  1+  9068              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  9068              ;
  3+  9068              ;
  4+  9068              ;	CLS.
  5+  9068              ;
  6+  9068              ;	Limpia la pantalla y define sus atributos.
  7+  9068              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  9068              ;
  9+  9068              ;	COLORES: 0 ..... NEGRO
 10+  9068              ;    		 1 ..... AZUL
 11+  9068              ; 			 2 ..... ROJO
 12+  9068              ;			 3 ..... MAGENTA
 13+  9068              ; 			 4 ..... VERDE
 14+  9068              ; 			 5 ..... CIAN
 15+  9068              ;			 6 ..... AMARILLO
 16+  9068              ; 			 7 ..... BLANCO
 17+  9068              ;
 18+  9068              ;	INPUT: A contiene los atributos de pantalla.
 19+  9068              ;
 20+  9068              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  9068
 22+  9068
 23+  9068 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  906B 11 01 40     	LD DE,$4001
 25+  906E 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  9071 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  9073 ED B0        	LDIR
 28+  9075 01 FF 02     	LD BC,767
 29+  9078 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  9079 ED B0        	LDIR
 31+  907B C9           	ret
 32+  907C
# file closed: Cls.asm
841   907C              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  907C              ; ******************************************************************************************************************************************************************************************
  2+  907C              ;
  3+  907C              ;   22/01/23
  4+  907C              ;
  5+  907C              ;	Mov_down
  6+  907C              ;
  7+  907C              ; 	Mueve el Sprite X px hacia abajo.
  8+  907C              ;
  9+  907C              ;
 10+  907C 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  907F CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  9081              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  9081              ; 																	; _ en el caso de que no lo haya.
 14+  9081 3A AE 85     	ld a,(Vel_down)
 15+  9084 47           	ld b,a
 16+  9085 2A 98 85         ld hl,(Posicion_actual)
 17+  9088 CD 5E 90     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  908B E6 02        	and 2
 19+  908D 28 0F        	jr z,1F
 20+  908F
 21+  908F              ; Nos encontramos en el último tercio de pantalla.
 22+  908F              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  908F
 24+  908F 7C           	ld a,h
 25+  9090 FE 57        	cp $57
 26+  9092 20 0A        	jr nz,1F
 27+  9094 7D           	ld a,l
 28+  9095 C6 20        	add $20
 29+  9097 30 05        	jr nc,1F
 30+  9099
 31+  9099              ; ------------------------------
 32+  9099 CD 7A 93     	call Reaparece_arriba
 33+  909C              ;	call Reinicio
 34+  909C              ; ------------------------------
 35+  909C 18 08        	jr 3F
 36+  909E CD 9E 8D     1 call NextScan
 37+  90A1 22 98 85     	ld (Posicion_actual),hl
 38+  90A4 10 E2            djnz 2B
 39+  90A6 CD 90 93     3 call Genera_coordenadas
 40+  90A9 C9           	ret
 41+  90AA
 42+  90AA
 43+  90AA              ; ******************************************************************************************************************************************************************************************
 44+  90AA              ;
 45+  90AA              ;   22/01/23
 46+  90AA              ;
 47+  90AA              ;	Mov_up
 48+  90AA              ;
 49+  90AA              ; 	Mueve el Sprite hacia arriba.
 50+  90AA              ;
 51+  90AA              ;
 52+  90AA 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  90AD CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  90AF              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  90AF              ; 																		; _ en el caso de que no lo haya.
 56+  90AF 3A AD 85     	ld a,(Vel_up)
 57+  90B2 47           	ld b,a
 58+  90B3 2A 98 85     	ld hl,(Posicion_actual)
 59+  90B6 CD 5E 90     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  90B9 A7           	and a
 61+  90BA 20 10        	jr nz,1F
 62+  90BC
 63+  90BC              ; Nos encontramos en el 1er tercio de pantalla.
 64+  90BC              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  90BC
 66+  90BC 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  90BD FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  90BF 20 0B            jr nz,1F
 69+  90C1 7D               ld a,l
 70+  90C2 D6 20            sub $20
 71+  90C4 30 06            jr nc,1F
 72+  90C6 25               dec h
 73+  90C7
 74+  90C7              ; -----------------------------
 75+  90C7 CD 6A 93         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  90CA              ;	call Reinicio
 77+  90CA              ; -----------------------------
 78+  90CA
 79+  90CA 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  90CC CD AD 8D     1 call PreviousScan
 81+  90CF 22 98 85     	ld (Posicion_actual),hl
 82+  90D2 10 E2            djnz 3B
 83+  90D4 CD 90 93     2 call Genera_coordenadas
 84+  90D7 C9           	ret
 85+  90D8
 86+  90D8              ; ******************************************************************************************************************************************************************************************
 87+  90D8              ;
 88+  90D8              ;	19/10/22
 89+  90D8              ;
 90+  90D8              ;	Mov_right.
 91+  90D8              ;
 92+  90D8              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  90D8              ;
 94+  90D8
 95+  90D8 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  90DB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  90DD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  90DD              ; 																	; _ en el caso de que no lo haya.
 99+  90DD 3A C3 85     	ld a,(Ctrl_0)
100+  90E0 CB 77        	bit 6,a
101+  90E2 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  90E4
103+  90E4 CD 18 93     	call Stop_Amadeus_right
104+  90E7 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  90E8 18 4D        	jr 8F
106+  90EA
107+  90EA 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  90ED FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  90EF 20 46        	jr nz,8F
110+  90F1
111+  90F1 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  90F4 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  90F5 28 40        	jr z,8F
114+  90F7
115+  90F7              ; ---------- ---------- ----------
116+  90F7              ;
117+  90F7              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  90F7
119+  90F7 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  90FA FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  90FC 28 11        	jr z,1F
122+  90FE 38 06        	jr c,6F
123+  9100 FE 04        	cp 4
124+  9102 28 14        	jr z,7F
125+  9104 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9106
127+  9106              ; ---------- ---------- ----------
128+  9106              ;
129+  9106              ; Perfiles de velocidad
130+  9106              ;
131+  9106
132+  9106 3A 9E 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  9109 FE FE        	cp $fe
134+  910B 20 2A        	jr nz,8F
135+  910D 18 10        	jr 3F
136+  910F 3A 9E 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  9112 FE FD        	cp $fd
138+  9114 20 21        	jr nz,8F
139+  9116 18 07        	jr 3F
140+  9118 3A 9E 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  911B FE FB        	cp $fb
142+  911D 20 18        	jr nz,8F
143+  911F
144+  911F              ; ---------- ---------- ----------
145+  911F
146+  911F              3
147+  911F CD 58 93     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  9122              ;	call Reinicio
149+  9122
150+  9122              ; ---------- ---------- ----------
151+  9122              ;
152+  9122              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  9122
154+  9122 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  9124 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  9125 CD 3E 91     	call DESPLZ_DER
157+  9128 C1           	pop bc
158+  9129 10 F9        	djnz 5B
159+  912B 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  912E 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  912F 22 98 85     	ld (Posicion_actual),hl
162+  9132 CD 90 93     	call Genera_coordenadas
163+  9135 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  9137
165+  9137              ; ---------- ---------- ----------
166+  9137
167+  9137 2A 98 85     8 ld hl,(Posicion_actual)
168+  913A CD 3E 91     	call DESPLZ_DER
169+  913D C9           2 ret
170+  913E
171+  913E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  913E              ;
173+  913E              ;	22/9/22
174+  913E              ;
175+  913E
176+  913E CD 4D 91     DESPLZ_DER call Desplaza_derecha
177+  9141 CD 99 91         call modifica_parametros_1er_DESPLZ_2
178+  9144 CD C2 91         call Ciclo_completo
179+  9147 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  914A CB FE        	set 7,(hl)
181+  914C C9           	ret
182+  914D
183+  914D              ; ******************************************************************************************************************************************************************************************
184+  914D              ;	15/02/23
185+  914D              ;
186+  914D
187+  914D 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  9150 47           	ld b,a
189+  9151 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  9154 23           1 inc hl
191+  9155 23           	inc hl
192+  9156 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  9158 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  915B CD 88 87     	call Extrae_address
195+  915E 22 9A 85     	ld (Puntero_objeto),hl
196+  9161
197+  9161              ; Modifica (Puntero_DESPLZ_izq).
198+  9161
199+  9161              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  9161              ; Cuántos movimientos hemos hecho ??
201+  9161              ; DE contiene (Puntero_DESPLZ_der).
202+  9161
203+  9161 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  9164 EB           	ex de,hl
205+  9165 A7           	and a
206+  9166 ED 52        	sbc hl,de
207+  9168 CB 3D        	srl l
208+  916A 3E 08        6 ld a,8
209+  916C 95           	sub l
210+  916D 30 1E        	jr nc,3F
211+  916F
212+  916F              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  916F              ; B="0".
214+  916F
215+  916F 04           4 inc b
216+  9170 3C           	inc a
217+  9171 20 FC        	jr nz,4B
218+  9173 78           	ld a,b
219+  9174 08           	ex af,af
220+  9175 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  9178 23           5 inc hl
222+  9179 23           	inc hl
223+  917A 10 FC        	djnz 5B
224+  917C 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  917F CD 88 87     	call Extrae_address
226+  9182 22 9A 85     	ld (Puntero_objeto),hl
227+  9185
228+  9185              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  9185              ; _(Posicion_actual).
230+  9185
231+  9185 21 98 85     	ld hl,Posicion_actual
232+  9188 34           	inc (hl)
233+  9189 08               ex af,af
234+  918A 6F           	ld l,a
235+  918B 18 DD        	jr 6B
236+  918D
237+  918D              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  918D
239+  918D 47           3 ld b,a
240+  918E 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  9191 23           2 inc hl
242+  9192 23           	inc hl
243+  9193 10 FC        	djnz 2B
244+  9195 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  9198 C9           8 ret
246+  9199
247+  9199              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  9199              ;
249+  9199              ;	24/7/22
250+  9199              ;
251+  9199              ;	modifica_parametros_1er_DESPLZ_2
252+  9199              ;
253+  9199              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  9199              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  9199              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  9199
257+  9199 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  919C A7           	and a
259+  919D 20 1F        	jr nz,1F
260+  919F D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  91A1 32 9E 85         ld (CTRL_DESPLZ),a
262+  91A4
263+  91A4 21 97 85     	ld hl,Columns
264+  91A7 34           	inc (hl)
265+  91A8 3A AA 85     	ld a,(Cuad_objeto)
266+  91AB E6 01        	and 1
267+  91AD 28 0F        	jr z,1F
268+  91AF 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  91B2 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  91B3 22 98 85     	ld (Posicion_actual),hl
271+  91B6 CD 90 93     	call Genera_coordenadas
272+  91B9 CD 24 93     	call Inc_CTRL_DESPLZ
273+  91BC 18 03        	jr 2F
274+  91BE CD 24 93     1 call Inc_CTRL_DESPLZ
275+  91C1 C9           2 ret
276+  91C2
277+  91C2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  91C2              ;
279+  91C2              ;	24/7/22
280+  91C2              ;
281+  91C2              ;	Ciclo_completo.
282+  91C2              ;
283+  91C2              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  91C2              ;
285+  91C2              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  91C2              ; 	Decrementamos (Columns).
287+  91C2              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  91C2              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  91C2
290+  91C2
291+  91C2 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  91C5 FE FF        	cp $ff
293+  91C7 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  91C9 E6 F0        	and $f0
295+  91CB 20 28        	jr nz,3F
296+  91CD
297+  91CD              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  91CD
299+  91CD 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  91D0 47           	ld b,a
301+  91D1 3E F8        	ld a,$f8
302+  91D3 80           	add b
303+  91D4 32 9E 85     	ld (CTRL_DESPLZ),a
304+  91D7 18 1C        	jr 3F
305+  91D9 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  91DC 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  91DD AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  91DE 32 9E 85     	ld (CTRL_DESPLZ),a
309+  91E1 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  91E4 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  91E6 20 0A        	jr nz,2F
312+  91E8 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  91EB 23           	inc hl
314+  91EC 22 98 85     	ld (Posicion_actual),hl
315+  91EF CD 90 93     	call Genera_coordenadas
316+  91F2
317+  91F2              ; Inicia el puntero de Sprite.
318+  91F2
319+  91F2 CD 9F 87     2 call Inicia_puntero_objeto_der
320+  91F5 C9           3 ret
321+  91F6
322+  91F6              ; ******************************************************************************************************************************************************************************************
323+  91F6              ;
324+  91F6              ;	15/02/23
325+  91F6              ;
326+  91F6              ;	Mov_left.
327+  91F6              ;
328+  91F6              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  91F6              ;
330+  91F6              Mov_left
331+  91F6
332+  91F6 21 C3 85     	ld hl,Ctrl_0
333+  91F9 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  91FB              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  91FB              ; 																	; _ en el caso de que no lo haya.
336+  91FB 3A C3 85     	ld a,(Ctrl_0)
337+  91FE CB 77        	bit 6,a
338+  9200 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  9202
340+  9202 CD 1E 93     	call Stop_Amadeus_left
341+  9205 C8           	ret z
342+  9206 20 50        	jr nz,8F
343+  9208
344+  9208 3A 9C 85     11 ld a,(Coordenada_X)
345+  920B A7           	and a
346+  920C 20 4A        	jr nz,8F
347+  920E
348+  920E 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  9211 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  9212 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  9214
352+  9214              ; ---------- ---------- ----------
353+  9214
354+  9214 3A AB 85     	ld a,(Vel_left)
355+  9217 FE 02        	cp 2
356+  9219 28 0F        	jr z,1F
357+  921B 38 04        	jr c,6F
358+  921D FE 04        	cp 4
359+  921F 28 12        	jr z,7F
360+  9221
361+  9221              ; ---------- ---------- ----------
362+  9221
363+  9221 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  9224 FE F9        	cp $f9
365+  9226 20 30        	jr nz,8F
366+  9228 18 10        	jr 4F
367+  922A 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  922D FE FA        	cp $fa
369+  922F 20 27        	jr nz,8F
370+  9231 18 07        	jr 4F
371+  9233 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  9236 FE FC        	cp $fc
373+  9238 20 1E        	jr nz,8F
374+  923A
375+  923A              ; ---------- ---------- ----------
376+  923A
377+  923A              4
378+  923A CD 46 93     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  923D              ;	call Reinicio
380+  923D
381+  923D              ; ---------- ---------- ----------
382+  923D
383+  923D 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  923F C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  9240
386+  9240 2A A2 85     	ld hl,(Indice_Sprite_izq)
387+  9243 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
388+  9246
389+  9246 CD 5F 92     	call DESPLZ_IZQ
390+  9249 C1           	pop bc
391+  924A 10 F3        	djnz 5B
392+  924C 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  924F 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  9250 22 98 85     	ld (Posicion_actual),hl
395+  9253 CD 90 93     	call Genera_coordenadas
396+  9256 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  9258
398+  9258              ; ---------- ---------- ----------
399+  9258              ; Movemos, no hay recolocación.
400+  9258
401+  9258 2A 98 85     8 ld hl,(Posicion_actual)
402+  925B CD 5F 92     	call DESPLZ_IZQ
403+  925E C9           2 ret
404+  925F
405+  925F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  925F              ;
407+  925F              ;	22/9/22
408+  925F
409+  925F              DESPLZ_IZQ
410+  925F
411+  925F CD 6E 92     	call Desplaza_izquierda
412+  9262 CD BA 92         call modifica_parametros_1er_DESPLZ
413+  9265 CD E2 92     	call Ciclo_completo_2
414+  9268 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  926B CB BE        	res 7,(hl)
416+  926D C9           	ret
417+  926E
418+  926E              Desplaza_izquierda
419+  926E
420+  926E 3A AB 85     	ld a,(Vel_left)
421+  9271 47           	ld b,a
422+  9272 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
423+  9275 23           1 inc hl
424+  9276 23           	inc hl
425+  9277 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  9279 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
427+  927C CD 88 87     	call Extrae_address
428+  927F 22 9A 85     	ld (Puntero_objeto),hl
429+  9282
430+  9282              ; Modifica (Puntero_DESPLZ_der).
431+  9282
432+  9282              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  9282              ; Cuántos movimientos hemos hecho ??
434+  9282              ; DE contiene (Puntero_DESPLZ_izq).
435+  9282
436+  9282 2A A2 85     7 ld hl,(Indice_Sprite_izq)
437+  9285 EB           	ex de,hl
438+  9286 A7           	and a
439+  9287 ED 52        	sbc hl,de
440+  9289 CB 3D        	srl l
441+  928B 3E 08        6 ld a,8
442+  928D 95           	sub l
443+  928E 30 1E        	jr nc,3F
444+  9290
445+  9290              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  9290              ; B="0".
447+  9290
448+  9290 04           4 inc b
449+  9291 3C           	inc a
450+  9292 20 FC        	jr nz,4B
451+  9294 78           	ld a,b
452+  9295 08           	ex af,af
453+  9296 2A A2 85     	ld hl,(Indice_Sprite_izq)
454+  9299 23           5 inc hl
455+  929A 23           	inc hl
456+  929B 10 FC        	djnz 5B
457+  929D 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
458+  92A0 CD 88 87     	call Extrae_address
459+  92A3 22 9A 85     	ld (Puntero_objeto),hl
460+  92A6
461+  92A6              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  92A6              ; _(Posicion_actual).
463+  92A6
464+  92A6 21 98 85     	ld hl,Posicion_actual
465+  92A9 35           	dec (hl)
466+  92AA 08           	ex af,af
467+  92AB 6F           	ld l,a
468+  92AC 18 DD        	jr 6B
469+  92AE
470+  92AE              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  92AE
472+  92AE 47           3 ld b,a
473+  92AF 2A A0 85     	ld hl,(Indice_Sprite_der)
474+  92B2 23           2 inc hl
475+  92B3 23           	inc hl
476+  92B4 10 FC        	djnz 2B
477+  92B6 22 A4 85     	ld (Puntero_DESPLZ_der),hl
478+  92B9 C9           8 ret
479+  92BA
480+  92BA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  92BA              ;
482+  92BA              ;	modifica_parametros_1er_DESPLZ
483+  92BA              ;
484+  92BA              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  92BA              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  92BA              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  92BA
488+  92BA 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  92BD A7           	and a
490+  92BE 20 1E        	jr nz,1F
491+  92C0 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  92C1 32 9E 85         ld (CTRL_DESPLZ),a
493+  92C4 21 97 85     	ld hl,Columns
494+  92C7 34           	inc (hl)
495+  92C8 3A AA 85     	ld a,(Cuad_objeto)
496+  92CB E6 01        	and 1
497+  92CD 20 0F        	jr nz,1F
498+  92CF 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  92D2 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  92D3 22 98 85     	ld (Posicion_actual),hl
501+  92D6 CD 90 93     	call Genera_coordenadas
502+  92D9 CD 35 93     	call Dec_CTRL_DESPLZ
503+  92DC 18 03        	jr 2F
504+  92DE CD 35 93     1 call Dec_CTRL_DESPLZ
505+  92E1 C9           2 ret
506+  92E2
507+  92E2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  92E2
509+  92E2 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  92E5 FE F7        	cp $f7
511+  92E7 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  92E9 30 2C        	jr nc,3F
513+  92EB
514+  92EB              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  92EB
516+  92EB 06 00        	ld b,0
517+  92ED 04           4 inc b
518+  92EE 3C           	inc a
519+  92EF FE F7        	cp $f7
520+  92F1 20 FA        	jr nz,4B
521+  92F3 3E FF        	ld a,$ff
522+  92F5 90           	sub b
523+  92F6 32 9E 85     	ld (CTRL_DESPLZ),a
524+  92F9 18 1C        	jr 3F
525+  92FB
526+  92FB              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  92FB
528+  92FB 21 97 85     1 ld hl,Columns
529+  92FE 35           	dec (hl)
530+  92FF AF           	xor a
531+  9300 32 9E 85     	ld (CTRL_DESPLZ),a
532+  9303 3A AA 85     	ld a,(Cuad_objeto)
533+  9306 E6 01        	and 1
534+  9308 28 0A        	jr z,2F
535+  930A 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  930D 2B           	dec hl
537+  930E 22 98 85     	ld (Posicion_actual),hl
538+  9311 CD 90 93     	call Genera_coordenadas
539+  9314
540+  9314              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  9314
542+  9314 CD B2 87     2 call Inicia_puntero_objeto_izq
543+  9317 C9           3 ret
544+  9318
545+  9318              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  9318              ;
547+  9318              ;	19/10/22
548+  9318              ;
549+  9318              ;	(cp 29) para un Amadeus de 3 Columns.
550+  9318              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  9318
552+  9318 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  931B FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  931D C9           	ret
555+  931E
556+  931E              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  931E              ;
558+  931E              ;	19/10/22
559+  931E              ;
560+  931E              ;	(cp 2) para un Amadeus de 3 Columns.
561+  931E              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  931E
563+  931E 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  9321 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  9323 C9           	ret
566+  9324
567+  9324              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  9324              ;
569+  9324              ;	24/7/22
570+  9324              ;
571+  9324              ;	Inc_CTRL_DESPLZ
572+  9324              ;
573+  9324              ;
574+  9324              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  9324
576+  9324 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  9327 3A AC 85     	ld a,(Vel_right)
578+  932A A7           	and a
579+  932B 28 06        	jr z,1F
580+  932D 47           	ld b,a
581+  932E 34           3 inc (hl)
582+  932F 10 FD        	djnz 3B
583+  9331 18 01        	jr 2F
584+  9333 34           1 inc (hl)
585+  9334 C9           2 ret
586+  9335
587+  9335              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  9335              ;
589+  9335              ;	5/2/23
590+  9335              ;
591+  9335              ;	Dec_CTRL_DESPLZ
592+  9335              ;
593+  9335              ;
594+  9335              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  9335
596+  9335 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  9338 3A AB 85     	ld a,(Vel_left)
598+  933B A7           	and a
599+  933C 28 06        	jr z,1F
600+  933E 47           	ld b,a
601+  933F 35           3 dec (hl)
602+  9340 10 FD        	djnz 3B
603+  9342 18 01        	jr 2F
604+  9344 35           1 dec (hl)
605+  9345 C9           2 ret
606+  9346
607+  9346              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  9346
609+  9346 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  9349 01 1F 00     	ld bc,31
611+  934C A7           	and a
612+  934D ED 4A        	adc hl,bc
613+  934F 22 98 85     	ld (Posicion_actual),hl
614+  9352 21 C3 85     	ld hl,Ctrl_0														; $xxx1
615+  9355 CB C6        	set 0,(hl)
616+  9357 C9           	ret
617+  9358
618+  9358              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  9358
620+  9358 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  935B 01 1F 00     	ld bc,31
622+  935E A7           	and a
623+  935F ED 42        	sbc hl,bc
624+  9361 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
625+  9364 21 C3 85     	ld hl,Ctrl_0
626+  9367 CB CE        	set 1,(hl)
627+  9369 C9           	ret
628+  936A
629+  936A              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  936A
631+  936A 24           Reaparece_abajo inc h
632+  936B 01 E0 17     	ld bc,$17e0
633+  936E A7           	and a
634+  936F ED 4A        	adc hl,bc
635+  9371 22 98 85     	ld (Posicion_actual),hl
636+  9374 21 C3 85     	ld hl,Ctrl_0
637+  9377 CB D6        	set 2,(hl)
638+  9379 C9           	ret
639+  937A
640+  937A              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  937A
642+  937A 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  937D A7           	and a
644+  937E ED 42        	sbc hl,bc
645+  9380 22 98 85     	ld (Posicion_actual),hl
646+  9383 21 C3 85     	ld hl,Ctrl_0
647+  9386 CB DE        	set 3,(hl)
648+  9388 C9           	ret
649+  9389
650+  9389              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  9389
652+  9389 2A A8 85     Reinicio ld hl,(Posicion_inicio)
653+  938C 22 98 85     	ld (Posicion_actual),hl
654+  938F C9           	ret
# file closed: Direcciones.asm
842   9390              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  9390              ;	12/12/22
  2+  9390              ;
  3+  9390              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  9390              ;	Fila superior "0", Columna izquierda "0".
  5+  9390              ;
  6+  9390              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  9390              ;
  8+  9390              ;	Modifica: A
  9+  9390
 10+  9390 C5           Genera_coordenadas push bc
 11+  9391 E5           	push hl
 12+  9392 2A 98 85     	ld hl,(Posicion_actual)
 13+  9395 7D           	ld a,l
 14+  9396 E6 1F        	and $1f
 15+  9398 32 9C 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  939B CD 5E 90     	call calcula_tercio
 17+  939E 47           	ld b,a
 18+  939F 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  93A0 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  93A2 7D           	ld a,l
 21+  93A3 E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  93A5 28 05        	jr z,2F
 23+  93A7 0C           1 inc c
 24+  93A8 D6 20        	sub 32
 25+  93AA 20 FB        	jr nz,1B
 26+  93AC 0C           2 inc c
 27+  93AD 04           	inc b
 28+  93AE 05           	dec b
 29+  93AF 28 04        	jr z,3F
 30+  93B1 3E E0        	ld a,$e0
 31+  93B3 10 F2        	djnz 1B
 32+  93B5 79           3 ld a,c
 33+  93B6 3D           	dec a
 34+  93B7 32 9D 85     	ld (Coordenada_y),a
 35+  93BA E1           	pop hl
 36+  93BB C1           	pop bc
 37+  93BC C9           	ret
# file closed: Genera_coordenadas.asm
843   93BD              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  93BD
  2+  93BD
  3+  93BD              ;   11/8/22
  4+  93BD              ;
  5+  93BD              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  93BD              ;
  7+  93BD              ;   Mov_obj.asm
  8+  93BD              ;
  9+  93BD              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  93BD              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  93BD              ;
 12+  93BD              ;   Codificación:
 13+  93BD              ;
 14+  93BD              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  93BD
 16+  93BD              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  93BD
 18+  93BD 02 40 00     Arriba db 2,%01000000,0
 19+  93C0 02 80 00     Abajo db 2,%10000000,0
 20+  93C3 02 20 00     Derecha db 2,%00100000,0
 21+  93C6 02 10 00     Izquierda db 2,%00010000,0
 22+  93C9 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  93CD 60 42 60 40
 22+  93D1 63
 23+  93D2 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  93D6 22 A3 80 A0
 24+  93DA 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  93DE 84 A0 83 A0
 25+  93E2 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  93E6 80 A3 22 A0
 26+  93EA 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  93EE 40 60 42 60
 27+  93F2 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  93F6 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  93FA 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  93FE 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  9402 84
 31+  9403 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  9407 84 00
 32+  9409 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  940D 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  9411 1F 1F 1F 1F
 34+  9415 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  9419 1F 1F 1F 1F
 34+  941D 1F
 35+  941E 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  9422 2F 2F 2F 2F
 35+  9426 2F 2F
 36+  9428 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  942C 2F 2F 00
 37+  942F
 38+  942F
 39+  942F              ; ----- ----- ----- ----- -----
 40+  942F
 41+  942F 0D 94        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  9431 09 94        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  9433 C6 93        Indice_mov_Izquierda defw Izquierda
 44+  9435 C3 93        Indice_mov_Derecha defw Derecha
 45+  9437 C0 93        Indice_mov_Abajo defw Abajo
 46+  9439 BD 93        Indice_mov_Arriba defw Arriba
 47+  943B FA 93        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  943D FE 93        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  943F F6 93        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  9441 03 94        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  9443 C9 93        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  9445              ; ----- ----- ----- ----- -----
 53+  9445
 54+  9445 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  9448 A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  9449 28 02            jr z,1F
 57+  944B 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  944D 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  9450 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  9452 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  9455              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  9455 2A C7 85         ld hl,(Puntero_mov)
 63+  9458 7E               ld a,(hl)
 64+  9459 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  945C 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  945D 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  9460
 68+  9460 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  9463 A7               and a
 70+  9464 20 0C            jr nz,12F
 71+  9466 2A C7 85         ld hl,(Puntero_mov)
 72+  9469 7E               ld a,(hl)
 73+  946A A7               and a
 74+  946B 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  946D E6 0F            and $0f
 76+  946F 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  9472              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  9472 2A C7 85     12 ld hl,(Puntero_mov)
 79+  9475 CB 7E            bit 7,(hl)
 80+  9477 28 03            jr z,2F
 81+  9479 CD 7C 90         call Mov_down
 82+  947C 2A C7 85     2 ld hl, (Puntero_mov)
 83+  947F CB 76            bit 6,(hl)
 84+  9481 28 03            jr z,3F
 85+  9483 CD AA 90         call Mov_up
 86+  9486 2A C7 85     3 ld hl, (Puntero_mov)
 87+  9489 CB 6E            bit 5,(hl)
 88+  948B 28 03            jr z,4F
 89+  948D CD D8 90         call Mov_right
 90+  9490 2A C7 85     4 ld hl, (Puntero_mov)
 91+  9493 CB 66            bit 4,(hl)
 92+  9495 28 03            jr z,5F
 93+  9497 CD F6 91         call Mov_left
 94+  949A
 95+  949A              ; ---------- --------- --------- ---------- ----------
 96+  949A
 97+  949A 3A CB 85     5 ld a,(Repetimos_db)
 98+  949D A7               and a
 99+  949E 28 07            jr z,6F
100+  94A0 3D               dec a
101+  94A1 32 CB 85         ld (Repetimos_db),a
102+  94A4 28 01            jr z,6f
103+  94A6 C9           11 ret
104+  94A7 21 C9 85     6 ld hl,Contador_db_mov
105+  94AA 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  94AB 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  94AE 23               inc hl
108+  94AF 22 C7 85         ld (Puntero_mov),hl
109+  94B2 18 F2            jr 11B
110+  94B4 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  94B7 3A CA 85         ld a,(Incrementa_puntero)
112+  94BA 47               ld b,a
113+  94BB 23           8 inc hl
114+  94BC 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  94BE 5E               ld e,(hl)
116+  94BF 23               inc hl
117+  94C0 56               ld d,(hl)
118+  94C1 EB               ex de,hl
119+  94C2 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  94C5 18 DF            jr 11B
121+  94C7
122+  94C7              ; ---------- --------- --------- ---------- ----------
123+  94C7              ;
124+  94C7              ;   11/8/22
125+  94C7              ;
126+  94C7              ;   Prepara_Puntero_mov
127+  94C7
128+  94C7 E5           Prepara_Puntero_mov push hl
129+  94C8 D5               push de
130+  94C9 2A C5 85         ld hl,(Puntero_indice_mov)
131+  94CC 5E               ld e,(hl)
132+  94CD 23               inc hl
133+  94CE 56               ld d,(hl)
134+  94CF EB               ex de,hl
135+  94D0 22 C7 85         ld (Puntero_mov),hl
136+  94D3 D1               pop de
137+  94D4 E1               pop hl
138+  94D5 C9               ret
139+  94D6
140+  94D6              ; ---------- --------- --------- ---------- ----------
141+  94D6              ;
142+  94D6              ;   11/8/22
143+  94D6              ;
144+  94D6              ;   Reinicia_el_movimiento
145+  94D6
146+  94D6 CD C7 94     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  94D9 AF               xor a
148+  94DA 32 C9 85         ld (Contador_db_mov),a
149+  94DD 32 CA 85         ld (Incrementa_puntero),a
150+  94E0
151+  94E0              ;    jr $
152+  94E0
153+  94E0 C3 45 94         jp Movimiento
154+  94E3 C9               ret
155+  94E4              ; ---------- --------- --------- ---------- ----------
156+  94E4
157+  94E4
158+  94E4
159+  94E4
160+  94E4
161+  94E4
162+  94E4
163+  94E4
164+  94E4
165+  94E4
166+  94E4
167+  94E4
168+  94E4
169+  94E4
170+  94E4
171+  94E4
172+  94E4
173+  94E4
# file closed: Patrones_de_mov.asm
844   94E4              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  94E4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  94E4              ;
  3+  94E4              ;	3/1/23
  4+  94E4              ;
  5+  94E4              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  94E4
  7+  94E4              ;	ADC HL,SP	LD (addr),SP
  8+  94E4              ;	ADD HL,SP	LD SP,(addr)
  9+  94E4              ;	ADD IX,SP	LD SP,nn
 10+  94E4              ; 	ADD IY,SP	LD SP,HL
 11+  94E4              ;				LD SP,IX
 12+  94E4              ;	DEC SP		LD SP,IY
 13+  94E4
 14+  94E4              ;	EX (SP),HL
 15+  94E4              ;	EX (SP),IX
 16+  94E4              ;	EX (SP),IY
 17+  94E4
 18+  94E4              ;	INC SP
 19+  94E4
 20+  94E4
 21+  94E4                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 D9 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D0 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A DF 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A DD 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 DF 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 DD 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B D9 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
845   7FD4
846   7FD4              	SAVESNA "Pruebas.sna", START
847   7FD4
848   7FD4
849   7FD4
# file closed: Banco_de_pruebas.asm
