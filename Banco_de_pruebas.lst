# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD E1 8A     	call Frame
  15  A104
  16  A104 3A 06 8A     	ld a,(Ctrl_2)
  17  A107 CB 67        	bit 4,a
  18  A109 20 FE        	jr nz,$
  19  A10B
  20  A10B 3A 08 8A     	ld a,(Ctrl_1) 										; Existe Loop?
  21  A10E CB 5F        	bit 3,a
  22  A110 ED 4D        	reti
  23  A112
  24  A112              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  25  A112
  26  A112              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A112              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A112              ;
   3+ A112              ;	17/02/23
   4+ A112              ;
   5+ A112              ;	Sprites e índices.
   6+ A112
   7+ A112              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 10 80        	defw Disparo_f9
  13+ 8004 18 80        	defw Disparo_fb
  14+ 8006 20 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80,$01,$80
  17+ 800C 01 80 01 80
  18+ 8010              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8010 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60,$00,$60
  19+ 8014 00 60 00 60
  20+ 8018              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8018 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00,$18,$00
  21+ 801C 18 00 18 00
  22+ 8020              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8020 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00,$06,$00
  23+ 8024 06 00 06 00
  24+ 8028
  25+ 8028              ; ----------------------------------------------------------------------------------------
  26+ 8028
  27+ 8028              ; Badsat_izq. 2x2.
  28+ 8028
  29+ 8028 38 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 802A 78 81        	defw Badsat_izq_fe
  31+ 802C 48 81        	defw Badsat_izq_fd
  32+ 802E 18 81        	defw Badsat_izq_fc
  33+ 8030 E8 80        	defw Badsat_izq_fb
  34+ 8032 B8 80        	defw Badsat_izq_fa
  35+ 8034 88 80        	defw Badsat_izq_f9
  36+ 8036 58 80        	defw Badsat_izq_f8
  37+ 8038
  38+ 8038 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 803C 02 2A 02 55
  39+ 8040 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8044 7F E8 03 60
  40+ 8048 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 804C 2B E8 54 40
  41+ 8050 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8054 28 00 10 00
  42+ 8058
  43+ 8058 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 805C 0A 00 01 15
  44+ 8060 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8064 01 55 00 01
  45+ 8068 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 806C 00 01 B0 00
  46+ 8070 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8074 FC 00 15 F4
  47+ 8078 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 807C 55 30 00 2A
  48+ 8080 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8084 00 08 00 00
  49+ 8088
  50+ 8088 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 808C 85 00 00 8A
  51+ 8090 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8094 00 AA 80 00
  52+ 8098 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 809C 00 00 D8 00
  53+ 80A0 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 80A4 FE 00 0A FA
  54+ 80A8 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80AC 2A 98 00 15
  55+ 80B0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80B4 00 04 00 00
  56+ 80B8
  57+ 80B8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80BC 42 80 00 45
  58+ 80C0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80C4 00 55 40 00
  59+ 80C8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80CC 00 00 6C 00
  60+ 80D0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80D4 FF 00 05 7D
  61+ 80D8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80DC 15 4C 00 0A
  62+ 80E0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80E4 00 02 00 00
  63+ 80E8
  64+ 80E8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80EC 21 40 00 22
  65+ 80F0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80F4 00 2A A0 00
  66+ 80F8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80FC 80 00 36 00
  67+ 8100 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 8104 7F 80 02 BE
  68+ 8108 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 810C 0A A6 00 05
  69+ 8110 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8114 00 01 00 00
  70+ 8118
  71+ 8118 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 811C 10 A0 00 11
  72+ 8120 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8124 00 15 50 00
  73+ 8128 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 812C 40 00 1B 00
  74+ 8130 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8134 BF C0 01 5F
  75+ 8138 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 813C 05 53 00 02
  76+ 8140 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8144 00 00 80 00
  77+ 8148
  78+ 8148 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 814C 08 50 00 08
  79+ 8150 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8154 00 0A A8 00
  80+ 8158 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 815C A0 00 0D 80
  81+ 8160 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8164 5F F8 00 AF
  82+ 8168 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 816C 02 A9 00 01
  83+ 8170 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8174 00 00 40 00
  84+ 8178
  85+ 8178 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 817C 04 28 00 04
  86+ 8180 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8184 00 05 54 00
  87+ 8188 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 818C D0 00 06 C0
  88+ 8190 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8194 2F FC 00 57
  89+ 8198 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 819C 01 54 80 00
  90+ 81A0 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 81A4 00 00 20 00
  91+ 81A8
  92+ 81A8
  93+ 81A8 B8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81AA D8 81        	defw Badsat_der_f8
  95+ 81AC 08 82        	defw Badsat_der_f9
  96+ 81AE 38 82        	defw Badsat_der_fa
  97+ 81B0 68 82        	defw Badsat_der_fb
  98+ 81B2 98 82        	defw Badsat_der_fc
  99+ 81B4 C8 82        	defw Badsat_der_fd
 100+ 81B6 F8 82        	defw Badsat_der_fe
 101+ 81B8
 102+ 81B8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81BC 54 40 AA 40
 103+ 81C0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81C4 17 FE 06 C0
 104+ 81C8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81CC 17 D4 02 2A
 105+ 81D0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81D4 00 14 00 08
 106+ 81D8
 107+ 81D8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81DC 20 00 2A 20
 108+ 81E0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81E4 2A A0 00 15
 109+ 81E8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81EC 00 03 60 00
 110+ 81F0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81F4 F4 00 0B EA
 111+ 81F8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81FC 03 2A 80 00
 112+ 8200 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 8204 00 00 04 00
 113+ 8208
 114+ 8208 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 820C 10 00 15 10
 115+ 8210 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8214 15 50 00 0A
 116+ 8218 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 821C 80 01 B0 00
 117+ 8220 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8224 FA 00 05 F5
 118+ 8228 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 822C 01 95 40 00
 119+ 8230 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8234 00 00 02 00
 120+ 8238
 121+ 8238 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 823C 08 00 0A 88
 122+ 8240 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8244 0A A8 00 05
 123+ 8248 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 824C C0 00 D8 00
 124+ 8250 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8254 FD 00 02 FA
 125+ 8258 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 825C 00 CA A0 00
 126+ 8260 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8264 80 00 01 00
 127+ 8268
 128+ 8268 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 826C 84 00 05 44
 129+ 8270 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8274 05 54 00 02
 130+ 8278 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 827C E0 00 6C 00
 131+ 8280 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8284 FE 80 01 7D
 132+ 8288 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 828C 00 65 50 00
 133+ 8290 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8294 40 00 00 80
 134+ 8298
 135+ 8298 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 829C 42 00 02 A2
 136+ 82A0 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 82A4 02 AA 00 01
 137+ 82A8 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82AC F0 00 36 00
 138+ 82B0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82B4 FF 40 00 BE
 139+ 82B8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82BC 00 32 A8 00
 140+ 82C0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82C4 A0 00 00 40
 141+ 82C8
 142+ 82C8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82CC A1 00 01 51
 143+ 82D0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82D4 01 55 00 00
 144+ 82D8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82DC F8 00 1B 00
 145+ 82E0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82E4 FF A0 00 1F
 146+ 82E8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82EC 00 09 54 00
 147+ 82F0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82F4 50 00 00 20
 148+ 82F8
 149+ 82F8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82FC 50 80 00 A8
 150+ 8300 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 8304 00 AA 80 00
 151+ 8308 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 830C FC 00 0D 80
 152+ 8310 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8314 FF D0 00 0F
 153+ 8318 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 831C 00 04 AA 00
 154+ 8320 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8324 28 00 00 10
 155+ 8328
 156+ 8328              ; ----------------------------------------------------------------------------------------
 157+ 8328
 158+ 8328              ; Amadeus. 2x2.
 159+ 8328
 160+ 8328 48 83        Indice_Amadeus_der defw Amadeus
 161+ 832A 00 00        	defw 0
 162+ 832C 68 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 832E 00 00        	defw 0
 164+ 8330 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8332 00 00        	defw 0
 166+ 8334 C8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8336 00 00        	defw 0	 								; (Fín de índice).
 168+ 8338
 169+ 8338 48 83        Indice_Amadeus_izq defw Amadeus
 170+ 833A 00 00        	defw 0
 171+ 833C C8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 833E 00 00        	defw 0
 173+ 8340 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8342 00 00        	defw 0
 175+ 8344 68 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8346 00 00        	defw 0	 								; (Fín de índice).
 177+ 8348
 178+ 8348 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 834C 26 64 24 24
 179+ 8350 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8354 6F F6 67 E6
 180+ 8358 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 835C F7 EF FF FF
 181+ 8360 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8364 8B D1 71 8E
 182+ 8368
 183+ 8368 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 836C F1 00 09 99
 184+ 8370 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8374 0B 0D 00 1B
 185+ 8378 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 837C 80 19 F9 80
 186+ 8380 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8384 F3 C0 3D FB
 187+ 8388 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 838C 3E F7 C0 3E
 188+ 8390 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8394 40 1C 63 80
 189+ 8398
 190+ 8398 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 839C 3C 40 02 66
 191+ 83A0 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 83A4 02 C3 40 06
 192+ 83A8 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83AC 60 06 7E 60
 193+ 83B0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83B4 3C F0 0F 7E
 194+ 83B8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83BC 0F BD F0 0F
 195+ 83C0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83C4 10 07 18 E0
 196+ 83C8
 197+ 83C8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83CC 8F 10 00 99
 198+ 83D0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83D4 00 B0 D0 01
 199+ 83D8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83DC D8 01 9F 98
 200+ 83E0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83E4 CF 3C 03 DF
 201+ 83E8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83EC 03 EF 7C 03
 202+ 83F0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83F4 44 01 C6 38
 203+ 83F8
 204+ 83F8              ; ----------------------------------------------------------------------------------------
 205+ 83F8
 206+ 83F8 FE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83FA 2E 84        	defw Explosion_2x3_2
 208+ 83FC 5E 84        	defw Explosion_2x3_3
 209+ 83FE
 210+ 83FE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 8402 10 00 04 38
 211+ 8406 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 840A 02 E6 80 01
 212+ 840E B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8412 00 03 DD 80
 213+ 8416 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 841A 3B 80 01 9D
 214+ 841E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8422 02 FD 80 03
 215+ 8426 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 842A 00 08 00 00
 216+ 842E
 217+ 842E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8432 38 10 03 BC
 218+ 8436 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 843A 04 06 C0 00
 219+ 843E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8442 00 03 DD 80
 220+ 8446 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 844A 3A 70 01 9C
 221+ 844E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8452 04 F8 80 06
 222+ 8456 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 845A 00 00 00 00
 223+ 845E
 224+ 845E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8462 00 20 08 00
 225+ 8466 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 846A 00 06 00 00
 226+ 846E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8472 00 00 14 30
 227+ 8476 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 847A 38 00 01 08
 228+ 847E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8482 00 80 00 04
 229+ 8486 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 848A 10 08 00 20
 230+ 848E
 231+ 848E              ; ------------------------------------------
 232+ 848E
 233+ 848E 94 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8490 B4 84        	defw Explosion_2x2_2
 235+ 8492 D4 84        	defw Explosion_2x2_3
 236+ 8494
 237+ 8494 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8498 43 84 37 D8
 238+ 849C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 84A0 17 F0 3D D8
 239+ 84A4 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A8 19 D0 1F 60
 240+ 84AC 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84B0 40 00 80 00
 241+ 84B4
 242+ 84B4
 243+ 84B4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B8 3B C2 60 0C
 244+ 84BC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84C0 07 F0 3D D8
 245+ 84C4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C8 19 C6 1F 64
 246+ 84CC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84D0 80 00 00 00
 247+ 84D4
 248+ 84D4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D8 88 04 10 0C
 249+ 84DC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84E0 81 E0 01 43
 250+ 84E4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E8 10 80 18 00
 251+ 84EC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84F0 60 01 80 02
 252+ 84F4
# file closed: Sprites_e_indices.asm
  27  84F4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84F4
   2+ 84F4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84F4
   4+ 84F4              ; 13/05/23
   5+ 84F4
   6+ 84F4              ; Control. %00000001 00000001
   7+ 84F4              ;
   8+ 84F4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84F4              ;                    _ hacen las entidades hacia abajo.
  10+ 84F4              ;
  11+ 84F4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84F4
  13+ 84F4 FA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84F6 02 85        	defw Disparo_2A
  15+ 84F8 0A 85        	defw Disparo_3A
  16+ 84FA
  17+ 84FA 00 00        Disparo_1A defw 0									; Control.
  18+ 84FC 00 00        	defw 0											; Puntero objeto.
  19+ 84FE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8500 00 00        	defw 0											; Rutina de impresión.
  21+ 8502
  22+ 8502 00 00        Disparo_2A defw 0									; Control.
  23+ 8504 00 00        	defw 0											; Puntero objeto.
  24+ 8506 00 00        	defw 0											; Puntero de impresión.
  25+ 8508 00 00        	defw 0											; Rutina de impresión.
  26+ 850A
  27+ 850A 00 00        Disparo_3A defw 0
  28+ 850C
  29+ 850C 22 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 850E 2A 85        	defw Disparo_2
  31+ 8510 32 85        	defw Disparo_3
  32+ 8512 3A 85        	defw Disparo_4
  33+ 8514 42 85        	defw Disparo_5
  34+ 8516 4A 85        	defw Disparo_6
  35+ 8518 52 85        	defw Disparo_7
  36+ 851A 5A 85        	defw Disparo_8
  37+ 851C 62 85        	defw Disparo_9
  38+ 851E 6A 85        	defw Disparo_10
  39+ 8520 72 85        	defw Disparo_11
  40+ 8522
  41+ 8522 00 00        Disparo_1 defw 0									; Control.
  42+ 8524 00 00        	defw 0											; Puntero objeto.
  43+ 8526 00 00        	defw 0											; Puntero de impresión.
  44+ 8528 00 00        	defw 0											; Rutina de impresión.
  45+ 852A
  46+ 852A 00 00        Disparo_2 defw 0									; Control.
  47+ 852C 00 00        	defw 0											; Puntero objeto.
  48+ 852E 00 00        	defw 0											; Puntero de impresión.
  49+ 8530 00 00        	defw 0											; Rutina de impresión.
  50+ 8532
  51+ 8532 00 00        Disparo_3 defw 0									; Control.
  52+ 8534 00 00        	defw 0											; Puntero objeto.
  53+ 8536 00 00        	defw 0											; Puntero de impresión.
  54+ 8538 00 00        	defw 0											; Rutina de impresión.
  55+ 853A
  56+ 853A 00 00        Disparo_4 defw 0									; Control.
  57+ 853C 00 00        	defw 0											; Puntero objeto.
  58+ 853E 00 00        	defw 0											; Puntero de impresión.
  59+ 8540 00 00        	defw 0											; Rutina de impresión.
  60+ 8542
  61+ 8542 00 00        Disparo_5 defw 0									; Control.
  62+ 8544 00 00        	defw 0											; Puntero objeto.
  63+ 8546 00 00        	defw 0											; Puntero de impresión.
  64+ 8548 00 00        	defw 0											; Rutina de impresión.
  65+ 854A
  66+ 854A 00 00        Disparo_6 defw 0									; Control.
  67+ 854C 00 00        	defw 0											; Puntero objeto.
  68+ 854E 00 00        	defw 0											; Puntero de impresión.
  69+ 8550 00 00        	defw 0											; Rutina de impresión.
  70+ 8552
  71+ 8552 00 00        Disparo_7 defw 0									; Control.
  72+ 8554 00 00        	defw 0											; Puntero objeto.
  73+ 8556 00 00        	defw 0											; Puntero de impresión.
  74+ 8558 00 00        	defw 0											; Rutina de impresión.
  75+ 855A
  76+ 855A 00 00        Disparo_8 defw 0									; Control.
  77+ 855C 00 00        	defw 0											; Puntero objeto.
  78+ 855E 00 00        	defw 0											; Puntero de impresión.
  79+ 8560 00 00        	defw 0											; Rutina de impresión.
  80+ 8562
  81+ 8562 00 00        Disparo_9 defw 0									; Control.
  82+ 8564 00 00        	defw 0											; Puntero objeto.
  83+ 8566 00 00        	defw 0											; Puntero de impresión.
  84+ 8568 00 00        	defw 0											; Rutina de impresión.
  85+ 856A
  86+ 856A 00 00        Disparo_10 defw 0									; Control.
  87+ 856C 00 00        	defw 0											; Puntero objeto.
  88+ 856E 00 00        	defw 0											; Puntero de impresión.
  89+ 8570 00 00        	defw 0											; Rutina de impresión.
  90+ 8572
  91+ 8572 00 00        Disparo_11 defw 0
  92+ 8574
  93+ 8574              ; -------------------------------------------------------------------------------------
  94+ 8574
  95+ 8574              Indice_de_cajas										 ;! 66 Bytes por entidad.
  96+ 8574
  97+ 8574 CE 85        	defw Caja_1
  98+ 8576 10 86        	defw Caja_2
  99+ 8578 52 86        	defw Caja_3
 100+ 857A 94 86        	defw Caja_4
 101+ 857C D6 86        	defw Caja_5
 102+ 857E 18 87        	defw Caja_6
 103+ 8580 5A 87        	defw Caja_7
 104+ 8582 9C 87        	defw Caja_8
 105+ 8584 DE 87        	defw Caja_9
 106+ 8586 20 88        	defw Caja_10
 107+ 8588              ;	...
 108+ 8588              ;	...
 109+ 8588              ;	+ entidades ...
 110+ 8588 00 00        	defw 0
 111+ 858A 00 00        	defw 0
 112+ 858C
 113+ 858C              ; ---------- ---------- ---------- ---------- ----------
 114+ 858C
 115+ 858C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 858E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8590 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8592 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8595
 120+ 8595 05           	db %00000101									; (Attr).
 121+ 8596 28 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8598 38 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 859A
 124+ 859A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 859C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 859E
 127+ 859E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A0 04           	db 4 											; (Cuad_objeto).
 129+ 85A1 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85A5
 131+ 85A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85A6
 133+ 85A6 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A8 00 00        	defw 0											;	" " " " " " "
 135+ 85AA 00 00        	defw 0											;	" " " " " " "
 136+ 85AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B0
 138+ 85B0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85B2 00 00        	defw 0											;	" " " " " " "
 140+ 85B4 00 00        	defw 0											;	" " " " " " "
 141+ 85B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85BA
 143+ 85BA 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85BC
 145+ 85BC 00           	db 0											; (Autoriza_movimiento).
 146+ 85BD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85C1 00 00
 147+ 85C3 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 148+ 85C5 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 149+ 85C7 00           	db 0											; (Cola_de_desplazamiento).
 150+ 85C8
 151+ 85C8 00           	db 0 											; (Columnas).
 152+ 85C9 00 00        	defw 0											; (Limite_horizontal).
 153+ 85CB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 154+ 85CE
 155+ 85CE              ; ---------- ---------- ---------- ---------- ----------
 156+ 85CE
 157+ 85CE 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 158+ 85D0 00 00        	defw 0											; (Posicion_actual).
 159+ 85D2 00 00        	defw 0 											; (Puntero_objeto).
 160+ 85D4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 161+ 85D7
 162+ 85D7 00           	db %00000000 									; (Attr).
 163+ 85D8
 164+ 85D8 00 00        	defw 0											; (Indice_Sprite_der).
 165+ 85DA 00 00        	defw 0											; (Indice_Sprite_izq).
 166+ 85DC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 167+ 85DE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 168+ 85E0
 169+ 85E0 00 00        	defw 0											; (Posicion_inicio).
 170+ 85E2 00           	db 0											; (Cuad_objeto).
 171+ 85E3
 172+ 85E3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 173+ 85E7
 174+ 85E7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 175+ 85E8
 176+ 85E8 00 00        	db 0,0										    ; Variables_de_borrado
 177+ 85EA 00 00        	defw 0											;	" " " " " " "
 178+ 85EC 00 00        	defw 0											;	" " " " " " "
 179+ 85EE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 85F2
 181+ 85F2 00 00        	db 0,0											; Variables_de_pintado
 182+ 85F4 00 00        	defw 0											;	" " " " " " "
 183+ 85F6 00 00        	defw 0											;	" " " " " " "
 184+ 85F8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 185+ 85FC
 186+ 85FC 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 187+ 85FE
 188+ 85FE 00           	db 0											; (Autoriza_movimiento).
 189+ 85FF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 189+ 8603 00 00
 190+ 8605 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 191+ 8607 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 192+ 8609 00           	db 0											; (Cola_de_desplazamiento).
 193+ 860A
 194+ 860A 00           	db 0 											; (Columnas).
 195+ 860B 00 00        	defw 0											; (Limite_horizontal).
 196+ 860D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 197+ 8610
 198+ 8610              ; ---------- ---------- ---------- ---------- ----------
 199+ 8610
 200+ 8610 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 201+ 8612 00 00        	defw 0											; (Posicion_actual).
 202+ 8614 00 00        	defw 0 											; (Puntero_objeto).
 203+ 8616 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 204+ 8619
 205+ 8619 00           	db %00000000 									; (Attr).
 206+ 861A
 207+ 861A 00 00        	defw 0											; (Indice_Sprite_der).
 208+ 861C 00 00        	defw 0											; (Indice_Sprite_izq).
 209+ 861E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 210+ 8620 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 211+ 8622
 212+ 8622 00 00        	defw 0											; (Posicion_inicio).
 213+ 8624 00           	db 0											; (Cuad_objeto).
 214+ 8625
 215+ 8625 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 216+ 8629
 217+ 8629 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 218+ 862A
 219+ 862A 00 00        	db 0,0										    ; Variables_de_borrado
 220+ 862C 00 00        	defw 0											;	" " " " " " "
 221+ 862E 00 00        	defw 0											;	" " " " " " "
 222+ 8630 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 8634
 224+ 8634 00 00        	db 0,0											; Variables_de_pintado
 225+ 8636 00 00        	defw 0											;	" " " " " " "
 226+ 8638 00 00        	defw 0											;	" " " " " " "
 227+ 863A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 228+ 863E
 229+ 863E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 230+ 8640
 231+ 8640 00           	db 0											; (Autoriza_movimiento).
 232+ 8641 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 232+ 8645 00 00
 233+ 8647 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 234+ 8649 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 235+ 864B 00           	db 0											; (Cola_de_desplazamiento).
 236+ 864C
 237+ 864C 00           	db 0 											; (Columnas).
 238+ 864D 00 00        	defw 0											; (Limite_horizontal).
 239+ 864F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 240+ 8652
 241+ 8652              ; ---------- ---------- ---------- ---------- ----------
 242+ 8652
 243+ 8652 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 244+ 8654 00 00        	defw 0											; (Posicion_actual).
 245+ 8656 00 00        	defw 0 											; (Puntero_objeto).
 246+ 8658 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 247+ 865B
 248+ 865B 00           	db %00000000 									; (Attr).
 249+ 865C
 250+ 865C 00 00        	defw 0											; (Indice_Sprite_der).
 251+ 865E 00 00        	defw 0											; (Indice_Sprite_izq).
 252+ 8660 00 00        	defw 0											; (Puntero_DESPLZ_der).
 253+ 8662 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 254+ 8664
 255+ 8664 00 00        	defw 0											; (Posicion_inicio).
 256+ 8666 00           	db 0											; (Cuad_objeto).
 257+ 8667
 258+ 8667 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 259+ 866B
 260+ 866B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 261+ 866C
 262+ 866C 00 00        	db 0,0										    ; Variables_de_borrado
 263+ 866E 00 00        	defw 0											;	" " " " " " "
 264+ 8670 00 00        	defw 0											;	" " " " " " "
 265+ 8672 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 266+ 8676
 267+ 8676 00 00        	db 0,0											; Variables_de_pintado
 268+ 8678 00 00        	defw 0											;	" " " " " " "
 269+ 867A 00 00        	defw 0											;	" " " " " " "
 270+ 867C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 271+ 8680
 272+ 8680 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 273+ 8682
 274+ 8682 00           	db 0											; (Autoriza_movimiento).
 275+ 8683 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 275+ 8687 00 00
 276+ 8689 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 277+ 868B 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 278+ 868D 00           	db 0											; (Cola_de_desplazamiento).
 279+ 868E
 280+ 868E 00           	db 0 											; (Columnas).
 281+ 868F 00 00        	defw 0											; (Limite_horizontal).
 282+ 8691 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 283+ 8694
 284+ 8694              ; ---------- ---------- ---------- ---------- ----------
 285+ 8694
 286+ 8694 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 287+ 8696 00 00        	defw 0											; (Posicion_actual).
 288+ 8698 00 00        	defw 0 											; (Puntero_objeto).
 289+ 869A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 290+ 869D
 291+ 869D 00           	db %00000000 									; (Attr).
 292+ 869E
 293+ 869E 00 00        	defw 0											; (Indice_Sprite_der).
 294+ 86A0 00 00        	defw 0											; (Indice_Sprite_izq).
 295+ 86A2 00 00        	defw 0											; (Puntero_DESPLZ_der).
 296+ 86A4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 297+ 86A6
 298+ 86A6 00 00        	defw 0											; (Posicion_inicio).
 299+ 86A8 00           	db 0											; (Cuad_objeto).
 300+ 86A9
 301+ 86A9 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 302+ 86AD
 303+ 86AD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 304+ 86AE
 305+ 86AE 00 00        	db 0,0										    ; Variables_de_borrado
 306+ 86B0 00 00        	defw 0											;	" " " " " " "
 307+ 86B2 00 00        	defw 0											;	" " " " " " "
 308+ 86B4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 309+ 86B8
 310+ 86B8 00 00        	db 0,0											; Variables_de_pintado
 311+ 86BA 00 00        	defw 0											;	" " " " " " "
 312+ 86BC 00 00        	defw 0											;	" " " " " " "
 313+ 86BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 314+ 86C2
 315+ 86C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 316+ 86C4
 317+ 86C4 00           	db 0											; (Autoriza_movimiento).
 318+ 86C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 318+ 86C9 00 00
 319+ 86CB 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 320+ 86CD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 321+ 86CF 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86D0
 323+ 86D0 00           	db 0 											; (Columnas).
 324+ 86D1 00 00        	defw 0											; (Limite_horizontal).
 325+ 86D3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86D6
 327+ 86D6              ; ---------- ---------- ---------- ---------- ----------
 328+ 86D6
 329+ 86D6 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86D8 00 00        	defw 0											; (Posicion_actual).
 331+ 86DA 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86DC 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86DF
 334+ 86DF 00           	db %00000000 									; (Attr).
 335+ 86E0
 336+ 86E0 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86E2 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86E4 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86E6 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86E8
 341+ 86E8 00 00        	defw 0											; (Posicion_inicio).
 342+ 86EA 00           	db 0											; (Cuad_objeto).
 343+ 86EB
 344+ 86EB 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 86EF
 346+ 86EF 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 86F0
 348+ 86F0 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 86F2 00 00        	defw 0											;	" " " " " " "
 350+ 86F4 00 00        	defw 0											;	" " " " " " "
 351+ 86F6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 86FA
 353+ 86FA 00 00        	db 0,0											; Variables_de_pintado
 354+ 86FC 00 00        	defw 0											;	" " " " " " "
 355+ 86FE 00 00        	defw 0											;	" " " " " " "
 356+ 8700 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8704
 358+ 8704 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 8706
 360+ 8706 00           	db 0											; (Autoriza_movimiento).
 361+ 8707 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 361+ 870B 00 00
 362+ 870D 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 363+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 364+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 365+ 8712
 366+ 8712 00           	db 0 											; (Columnas).
 367+ 8713 00 00        	defw 0											; (Limite_horizontal).
 368+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 369+ 8718
 370+ 8718              ; ---------- ---------- ---------- ---------- ----------
 371+ 8718
 372+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 373+ 871A 00 00        	defw 0											; (Posicion_actual).
 374+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 375+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 376+ 8721
 377+ 8721 00           	db %00000000 									; (Attr).
 378+ 8722
 379+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 380+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 381+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 382+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 383+ 872A
 384+ 872A 00 00        	defw 0											; (Posicion_inicio).
 385+ 872C 00           	db 0											; (Cuad_objeto).
 386+ 872D
 387+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 388+ 8731
 389+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 390+ 8732
 391+ 8732 00 00        	db 0,0										    ; Variables_de_borrado
 392+ 8734 00 00        	defw 0											;	" " " " " " "
 393+ 8736 00 00        	defw 0											;	" " " " " " "
 394+ 8738 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 395+ 873C
 396+ 873C 00 00        	db 0,0											; Variables_de_pintado
 397+ 873E 00 00        	defw 0											;	" " " " " " "
 398+ 8740 00 00        	defw 0											;	" " " " " " "
 399+ 8742 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 400+ 8746
 401+ 8746 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 402+ 8748
 403+ 8748 00           	db 0											; (Autoriza_movimiento).
 404+ 8749 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 404+ 874D 00 00
 405+ 874F 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 406+ 8751 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 407+ 8753 00           	db 0											; (Cola_de_desplazamiento).
 408+ 8754
 409+ 8754 00           	db 0 											; (Columnas).
 410+ 8755 00 00        	defw 0											; (Limite_horizontal).
 411+ 8757 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 412+ 875A
 413+ 875A              ; ---------- ---------- ---------- ---------- ----------
 414+ 875A
 415+ 875A 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 416+ 875C 00 00        	defw 0											; (Posicion_actual).
 417+ 875E 00 00        	defw 0 											; (Puntero_objeto).
 418+ 8760 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 419+ 8763
 420+ 8763 00           	db %00000000 									; (Attr).
 421+ 8764
 422+ 8764 00 00        	defw 0											; (Indice_Sprite_der).
 423+ 8766 00 00        	defw 0											; (Indice_Sprite_izq).
 424+ 8768 00 00        	defw 0											; (Puntero_DESPLZ_der).
 425+ 876A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 426+ 876C
 427+ 876C 00 00        	defw 0											; (Posicion_inicio).
 428+ 876E 00           	db 0											; (Cuad_objeto).
 429+ 876F
 430+ 876F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 431+ 8773
 432+ 8773 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 433+ 8774
 434+ 8774 00 00        	db 0,0										    ; Variables_de_borrado
 435+ 8776 00 00        	defw 0											;	" " " " " " "
 436+ 8778 00 00        	defw 0											;	" " " " " " "
 437+ 877A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 438+ 877E
 439+ 877E 00 00        	db 0,0											; Variables_de_pintado
 440+ 8780 00 00        	defw 0											;	" " " " " " "
 441+ 8782 00 00        	defw 0											;	" " " " " " "
 442+ 8784 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 443+ 8788
 444+ 8788 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 445+ 878A
 446+ 878A 00           	db 0											; (Autoriza_movimiento).
 447+ 878B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 447+ 878F 00 00
 448+ 8791 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 449+ 8793 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 450+ 8795 00           	db 0											; (Cola_de_desplazamiento).
 451+ 8796
 452+ 8796 00           	db 0 											; (Columnas).
 453+ 8797 00 00        	defw 0											; (Limite_horizontal).
 454+ 8799 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 455+ 879C
 456+ 879C              ; ---------- ---------- ---------- ---------- ----------
 457+ 879C
 458+ 879C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 459+ 879E 00 00        	defw 0											; (Posicion_actual).
 460+ 87A0 00 00        	defw 0 											; (Puntero_objeto).
 461+ 87A2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 462+ 87A5
 463+ 87A5 00           	db %00000000 									; (Attr).
 464+ 87A6
 465+ 87A6 00 00        	defw 0											; (Indice_Sprite_der).
 466+ 87A8 00 00        	defw 0											; (Indice_Sprite_izq).
 467+ 87AA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 468+ 87AC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 469+ 87AE
 470+ 87AE 00 00        	defw 0											; (Posicion_inicio).
 471+ 87B0 00           	db 0											; (Cuad_objeto).
 472+ 87B1
 473+ 87B1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 474+ 87B5
 475+ 87B5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 476+ 87B6
 477+ 87B6 00 00        	db 0,0										    ; Variables_de_borrado
 478+ 87B8 00 00        	defw 0											;	" " " " " " "
 479+ 87BA 00 00        	defw 0											;	" " " " " " "
 480+ 87BC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 481+ 87C0
 482+ 87C0 00 00        	db 0,0											; Variables_de_pintado
 483+ 87C2 00 00        	defw 0											;	" " " " " " "
 484+ 87C4 00 00        	defw 0											;	" " " " " " "
 485+ 87C6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 486+ 87CA
 487+ 87CA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 488+ 87CC
 489+ 87CC 00           	db 0											; (Autoriza_movimiento).
 490+ 87CD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 490+ 87D1 00 00
 491+ 87D3 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 492+ 87D5 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 493+ 87D7 00           	db 0											; (Cola_de_desplazamiento).
 494+ 87D8
 495+ 87D8 00           	db 0 											; (Columnas).
 496+ 87D9 00 00        	defw 0											; (Limite_horizontal).
 497+ 87DB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 498+ 87DE
 499+ 87DE              ; ---------- ---------- ---------- ---------- ----------
 500+ 87DE
 501+ 87DE 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 502+ 87E0 00 00        	defw 0											; (Posicion_actual).
 503+ 87E2 00 00        	defw 0 											; (Puntero_objeto).
 504+ 87E4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 505+ 87E7
 506+ 87E7 00           	db %00000000 									; (Attr).
 507+ 87E8
 508+ 87E8 00 00        	defw 0											; (Indice_Sprite_der).
 509+ 87EA 00 00        	defw 0											; (Indice_Sprite_izq).
 510+ 87EC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 511+ 87EE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 512+ 87F0
 513+ 87F0 00 00        	defw 0											; (Posicion_inicio).
 514+ 87F2 00           	db 0											; (Cuad_objeto).
 515+ 87F3
 516+ 87F3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 517+ 87F7
 518+ 87F7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 519+ 87F8
 520+ 87F8 00 00        	db 0,0										    ; Variables_de_borrado
 521+ 87FA 00 00        	defw 0											;	" " " " " " "
 522+ 87FC 00 00        	defw 0											;	" " " " " " "
 523+ 87FE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 524+ 8802
 525+ 8802 00 00        	db 0,0											; Variables_de_pintado
 526+ 8804 00 00        	defw 0											;	" " " " " " "
 527+ 8806 00 00        	defw 0											;	" " " " " " "
 528+ 8808 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 529+ 880C
 530+ 880C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 531+ 880E
 532+ 880E 00           	db 0											; (Autoriza_movimiento).
 533+ 880F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 533+ 8813 00 00
 534+ 8815 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 535+ 8817 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 536+ 8819 00           	db 0											; (Cola_de_desplazamiento).
 537+ 881A
 538+ 881A 00           	db 0 											; (Columnas).
 539+ 881B 00 00        	defw 0											; (Limite_horizontal).
 540+ 881D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 541+ 8820
 542+ 8820              ; ---------- ---------- ---------- ---------- ----------
 543+ 8820
 544+ 8820 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 545+ 8822 00 00        	defw 0											; (Posicion_actual).
 546+ 8824 00 00        	defw 0 											; (Puntero_objeto).
 547+ 8826 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 548+ 8829
 549+ 8829 00           	db %00000000 									; (Attr).
 550+ 882A
 551+ 882A 00 00        	defw 0											; (Indice_Sprite_der).
 552+ 882C 00 00        	defw 0											; (Indice_Sprite_izq).
 553+ 882E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 554+ 8830 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 555+ 8832
 556+ 8832 00 00        	defw 0											; (Posicion_inicio).
 557+ 8834 00           	db 0											; (Cuad_objeto).
 558+ 8835
 559+ 8835 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 560+ 8839
 561+ 8839 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 562+ 883A
 563+ 883A 00 00        	db 0,0										    ; Variables_de_borrado
 564+ 883C 00 00        	defw 0											;	" " " " " " "
 565+ 883E 00 00        	defw 0											;	" " " " " " "
 566+ 8840 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 567+ 8844
 568+ 8844 00 00        	db 0,0											; Variables_de_pintado
 569+ 8846 00 00        	defw 0											;	" " " " " " "
 570+ 8848 00 00        	defw 0											;	" " " " " " "
 571+ 884A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 572+ 884E
 573+ 884E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 574+ 8850
 575+ 8850 00           	db 0											; (Autoriza_movimiento).
 576+ 8851 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 576+ 8855 00 00
 577+ 8857 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 578+ 8859 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 579+ 885B 00           	db 0											; (Cola_de_desplazamiento).
 580+ 885C
 581+ 885C 00           	db 0 											; (Columnas).
 582+ 885D 00 00        	defw 0											; (Limite_horizontal).
 583+ 885F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 584+ 8862
 585+ 8862              ; -------------------------------------------------------------------------------------
 586+ 8862              ;
 587+ 8862              ;	20/05/23
 588+ 8862              ;
 589+ 8862              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 590+ 8862              ;
 591+ 8862              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 592+ 8862              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 593+ 8862              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 594+ 8862              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 595+ 8862
 596+ 8862              Indice_de_entidades
 597+ 8862
 598+ 8862 6C 88        	defw Entidad_1
 599+ 8864 7C 88        	defw Entidad_2
 600+ 8866 8C 88        	defw Entidad_3
 601+ 8868 9C 88        	defw Entidad_4
 602+ 886A AC 88        	defw Entidad_5
 603+ 886C
 604+ 886C              ;	BADSAT, (Satélite malvado).
 605+ 886C
 606+ 886C 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 607+ 886E 04           	db %00000100									; (Attr).
 608+ 886F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 609+ 8871 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 610+ 8873 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 611+ 8875 01           	db 1											; (Cuad_objeto).
 612+ 8876 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 613+ 887A A7 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 614+ 887C
 615+ 887C 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 616+ 887E 02           	db %00000010									; (Attr).
 617+ 887F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 618+ 8881 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 619+ 8883 40 50        	defw $5040                                      ; (Posicion_inicio).
 620+ 8885 01           	db 1											; (Cuad_objeto).
 621+ 8886 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 622+ 888A A7 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 623+ 888C
 624+ 888C 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 625+ 888E 04           	db %00000100									; (Attr).
 626+ 888F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 627+ 8891 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 628+ 8893 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 629+ 8895 01           	db 1											; (Cuad_objeto).
 630+ 8896 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 631+ 889A A7 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 632+ 889C
 633+ 889C 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 634+ 889E 01           	db %00000001									; (Attr).
 635+ 889F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 636+ 88A1 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 637+ 88A3 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 638+ 88A5 01           	db 1											; (Cuad_objeto).
 639+ 88A6 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 640+ 88AA A7 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 641+ 88AC
 642+ 88AC 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 643+ 88AE 01           	db %00000001									; (Attr).
 644+ 88AF A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 645+ 88B1 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 646+ 88B3 07 40        	defw $4007                                      ; (Posicion_inicio).
 647+ 88B5 01           	db 1											; (Cuad_objeto).
 648+ 88B6 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 649+ 88BA A7 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 650+ 88BC
# file closed: Cajas_y_disparos.asm
  28  88BC              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88BC              ; 13/05/23
   2+ 88BC
   3+ 88BC              Indice_de_niveles
   4+ 88BC
   5+ 88BC CA 88        	defw Nivel_1
   6+ 88BE CC 88        	defw Nivel_2
   7+ 88C0 D9 88        	defw Nivel_3
   8+ 88C2 E9 88        	defw Nivel_4
   9+ 88C4 FB 88        	defw Nivel_5
  10+ 88C6
  11+ 88C6              ;	...
  12+ 88C6              ;	...
  13+ 88C6              ;	+ Niveles ...
  14+ 88C6
  15+ 88C6 00 00        	defw 0
  16+ 88C8 00 00        	defw 0
  17+ 88CA
  18+ 88CA 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88CB 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88CC 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88D1 01 02
  22+ 88D3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88D7 01 02
  23+ 88D9 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88DE 01
  25+ 88DF 03 01 01 01  	db 3,1,1,1,1
  25+ 88E3 01
  26+ 88E4 03 01 01 01  	db 3,1,1,1,1
  26+ 88E8 01
  27+ 88E9 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88EE 01
  29+ 88EF 04 01 01 01  	db 4,1,1,1,1
  29+ 88F3 01
  30+ 88F4 04 01 01 01  	db 4,1,1,1,1
  30+ 88F8 01
  31+ 88F9 02 03        	db 2,3
  32+ 88FB 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 8900 01
  34+ 8901 05 01 01 01  	db 5,1,1,1,1
  34+ 8905 01
  35+ 8906 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 890A 01
  36+ 890B 05 01 01 01  	db 5,1,1,1,1
  36+ 890F 01
  37+ 8910
  38+ 8910              ;---------------------------------------------------------------------------------------------------------------
  39+ 8910              ;
  40+ 8910              ;   21/5/23
  41+ 8910              ;
  42+ 8910              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8910              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8910              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8910              ;	_en la caja DRAW correspondiente.
  46+ 8910              ;
  47+ 8910              ;	MODIFICA: HL,DE y A.
  48+ 8910              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8910
  50+ 8910              Inicializa_Punteros_de_nivel
  51+ 8910
  52+ 8910 21 BC 88     	ld hl,Indice_de_niveles
  53+ 8913 22 3C 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8916 CD 2E 8D     	call Extrae_address
  55+ 8919 7E           	ld a,(hl)
  56+ 891A 32 11 8A     	ld (Numero_de_entidades),a
  57+ 891D 23           	inc hl
  58+ 891E 22 3E 8A     	ld (Datos_de_nivel),hl
  59+ 8921 C9           	ret
  60+ 8922
  61+ 8922              ;---------------------------------------------------------------------------------------------------------------
  62+ 8922              ;
  63+ 8922              ;   13/5/23
  64+ 8922              ;
  65+ 8922              ;	Destruye A,BC,HL,DE
  66+ 8922
  67+ 8922              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8922              ;	_del juego.
  69+ 8922
  70+ 8922              Prepara_cajas
  71+ 8922
  72+ 8922              ; Preparamos los punteros de las cajas.
  73+ 8922
  74+ 8922 21 74 85     	ld hl,Indice_de_cajas
  75+ 8925 CD 2E 8D     	call Extrae_address
  76+ 8928 CD 65 89     	call Avanza_caja
  77+ 892B
  78+ 892B CD A9 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 892E
  80+ 892E 2A 3E 8A     	ld hl,(Datos_de_nivel)
  81+ 8931
  82+ 8931              ; HL está en los datos del nivel correspondiente.
  83+ 8931              ; B actuará como contador de cajas.
  84+ 8931
  85+ 8931 C5           1 push bc
  86+ 8932
  87+ 8932 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8933 CD 56 89     	call PreparaBC
  89+ 8936
  90+ 8936 21 62 88     	ld hl,Indice_de_entidades
  91+ 8939 CD 5E 89     	call SBC_HL_con_BC_y_Extrae
  92+ 893C 22 17 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 893F
  94+ 893F CD 6F 89     	call Datos_de_entidad_a_caja
  95+ 8942
  96+ 8942 2A 0F 8A     	ld hl,(Indice_restore_caja)
  97+ 8945 CD 2E 8D     	call Extrae_address
  98+ 8948 CD 65 89     	call Avanza_caja
  99+ 894B
 100+ 894B 2A 3E 8A     	ld hl,(Datos_de_nivel)
 101+ 894E 23           	inc hl
 102+ 894F 22 3E 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8952
 104+ 8952 C1           	pop bc
 105+ 8953 10 DC        	djnz 1B
 106+ 8955 C9           	ret
 107+ 8956
 108+ 8956 CB 27        PreparaBC sla a
 109+ 8958 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 895A 4F           	ld c,a
 111+ 895B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 895D C9           	ret
 113+ 895E
 114+ 895E A7           SBC_HL_con_BC_y_Extrae and a
 115+ 895F ED 4A        	adc hl,bc
 116+ 8961 CD 2E 8D     	call Extrae_address
 117+ 8964 C9           	ret
 118+ 8965
 119+ 8965 22 0B 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8968 13           	inc de
 121+ 8969 13           	inc de
 122+ 896A EB           	ex de,hl
 123+ 896B 22 0F 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 896E C9           	ret
 125+ 896F
 126+ 896F              Datos_de_entidad_a_caja
 127+ 896F
 128+ 896F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 896F
 130+ 896F
 131+ 896F ED 5B 0B 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8973
 133+ 8973 01 02 00     	ld bc,2
 134+ 8976 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8978
 136+ 8978 01 07 00     	ld bc,7
 137+ 897B CD A3 89     	call Situa_DE
 138+ 897E
 139+ 897E 01 05 00     	ld bc,5
 140+ 8981 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8983
 142+ 8983 01 04 00     	ld bc,4
 143+ 8986 CD A3 89     	call Situa_DE
 144+ 8989
 145+ 8989 01 07 00     	ld bc,7
 146+ 898C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 898E
 148+ 898E 01 18 00     	ld bc,24
 149+ 8991 CD A3 89     	call Situa_DE
 150+ 8994
 151+ 8994 01 02 00     	ld bc,2
 152+ 8997 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8999
 154+ 8999              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8999              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8999
 157+ 8999 01 0E 00     	ld bc,14									; *****
 158+ 899C CD A3 89     	call Situa_DE
 159+ 899F
 160+ 899F 3E 03        	ld a,3
 161+ 89A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 89A2
 163+ 89A2 C9           	ret
 164+ 89A3
 165+ 89A3 EB           Situa_DE ex de,hl
 166+ 89A4 A7           	and a
 167+ 89A5 ED 4A        	adc hl,bc
 168+ 89A7 EB           	ex de,hl
 169+ 89A8 C9           	ret
 170+ 89A9
 171+ 89A9              ;---------------------------------------------------------------------------------------------------------------
 172+ 89A9              ;
 173+ 89A9              ;	21/5/23
 174+ 89A9              ;
 175+ 89A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89A9              ;
 178+ 89A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89A9              ;
 182+ 89A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89A9              ;	MODIFICA: A y B.
 184+ 89A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89A9
 186+ 89A9              Admin_num_entidades
 187+ 89A9
 188+ 89A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89A9
 190+ 89A9 3A 11 8A     	ld a,(Numero_de_entidades)
 191+ 89AC A7           	and a
 192+ 89AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89AD              ;	jr z,$
 194+ 89AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89AD
 196+ 89AD 20 03        	jr nz,3F
 197+ 89AF
 198+ 89AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89AF
 200+ 89AF CD 10 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89B2
 202+ 89B2
 203+ 89B2 3A 11 8A     3 ld a,(Numero_de_entidades)
 204+ 89B5 FE 0A        	cp 10
 205+ 89B7 38 08        	jr c,1F
 206+ 89B9
 207+ 89B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89B9              ; Actualizamos variables.
 209+ 89B9
 210+ 89B9 3E 0A        	ld a,10
 211+ 89BB 32 12 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89BE 47           	ld b,a
 213+ 89BF 18 04        	jr 2F
 214+ 89C1
 215+ 89C1              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89C1              ; (Numero_de_entidades)="0".
 217+ 89C1
 218+ 89C1 32 12 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89C4 47           	ld b,a
 220+ 89C5 C9           2 ret
# file closed: Niveles.asm
  29  89C6
  30  89C6              ; ******************************************************************************************************************************************************************************************
  31  89C6              ; Constantes.
  32  89C6              ; ******************************************************************************************************************************************************************************************
  33  89C6              ;
  34  89C6              ; 25/05/23
  35  89C6              ;
  36  89C6              ; Constantes generales.
  37  89C6              ;
  38  89C6
  39  89C6              Sprite_vacio equ $f000
  40  89C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  41  89C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  42  89C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  43  89C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  44  89C6
  45  89C6              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  46  89C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  47  89C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  48  89C6              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  49  89C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  50  89C6              ;                               				        ; De momento situamos este almacén en $7060.
  51  89C6
  52  89C6              ; ******************************************************************************************************************************************************************************************
  53  89C6              ; Variables.
  54  89C6              ; ******************************************************************************************************************************************************************************************
  55  89C6              ;
  56  89C6              ; 01/07/23
  57  89C6              ;
  58  89C6              ; Variables de DRAW. (Motor principal).
  59  89C6              ;
  60  89C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  61  89C6
  62  89C6 00           Filas db 0												; Filas. [DRAW]
  63  89C7 00           Columns db 0  											; Nº de columnas. [DRAW]
  64  89C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  65  89CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  66  89CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  67  89CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  68  89CE
  69  89CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  70  89CE
  71  89CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  72  89CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  73  89CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  74  89CF 00           Attr db 0												; Atributos de la entidad:
  75  89D0
  76  89D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  77  89D0              ;
  78  89D0              ;	COLORES: 0 ..... NEGRO
  79  89D0              ;    		 1 ..... AZUL
  80  89D0              ; 			 2 ..... ROJO
  81  89D0              ;			 3 ..... MAGENTA
  82  89D0              ; 			 4 ..... VERDE
  83  89D0              ; 			 5 ..... CIAN
  84  89D0              ;			 6 ..... AMARILLO
  85  89D0              ; 			 7 ..... BLANCO
  86  89D0
  87  89D0 00 00        Indice_Sprite_der defw 0
  88  89D2 00 00        Indice_Sprite_izq defw 0
  89  89D4 00 00        Puntero_DESPLZ_der defw 0
  90  89D6 00 00        Puntero_DESPLZ_izq defw 0
  91  89D8
  92  89D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  93  89DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  94  89DB
  95  89DB              ; Variables de objeto. (Características).
  96  89DB
  97  89DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  98  89DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  99  89DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 100  89DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 101  89DF
 102  89DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 103  89E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 104  89E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 105  89E0
 106  89E0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 107  89E2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  89E4 00 00        	defw 0
 109  89E6 00 00 00 00  	db 0,0,0,0
 110  89EA
 111  89EA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 112  89EC 00 00        	defw 0
 113  89EE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 114  89F0 00 00 00 00  	db 0,0,0,0
 115  89F4
 116  89F4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 117  89F4
 118  89F4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 119  89F5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 120  89F5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 121  89F5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 122  89F5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 123  89F5              ;
 124  89F5              ; 														DESCRIPCIÖN:
 125  89F5              ;
 126  89F5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 127  89F5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 128  89F5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 129  89F5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 130  89F5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 131  89F5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 132  89F5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 133  89F5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 134  89F5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 135  89F5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 136  89F5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 137  89F5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 138  89F5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 139  89F5              ;
 140  89F5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 141  89F5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 142  89F5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 143  89F5
 144  89F5 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 145  89F6
 146  89F6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 147  89F6
 148  89F6 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 149  89F7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 150  89F9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 151  89FB 00 00        Puntero_indice_mov_bucle defw 0							;
 152  89FD              ;
 153  89FD              ;
 154  89FD 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 155  89FE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 156  89FE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 157  89FE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 158  89FF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 159  89FF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 160  8A00 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 161  8A01 00           Cola_de_desplazamiento db 0								; Este byte indica:
 162  8A02              ;
 163  8A02              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 164  8A02              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 165  8A02              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 166  8A02              ;
 167  8A02              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 168  8A02              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 169  8A02              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 170  8A02              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 171  8A02              ;
 172  8A02              ;														;	"$ff" ..... Bucle infinito de repetición.
 173  8A02              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 174  8A02              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 175  8A02
 176  8A02
 177  8A02              ; Variables de funcionamiento. [DRAW].
 178  8A02
 179  8A02 00           Columnas db 0
 180  8A03 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 181  8A05              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 182  8A05 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 183  8A06
 184  8A06              ; variables de control general.
 185  8A06
 186  8A06 00           Ctrl_2 db 0
 187  8A07              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 188  8A07              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 189  8A07              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 190  8A07              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 191  8A07              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 192  8A07              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 193  8A07              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 194  8A07              ;
 195  8A07              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 196  8A07              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 197  8A07              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 198  8A07              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 199  8A07              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 200  8A07
 201  8A07 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 202  8A08
 203  8A08              ;! 66 Bytes por entidad.
 204  8A08
 205  8A08              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 206  8A08              ;					         		---------;      ;---------
 207  8A08
 208  8A08
 209  8A08              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 210  8A08
 211  8A08 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 212  8A09
 213  8A09              ;														DESCRIPCIÓN:
 214  8A09              ;
 215  8A09              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 216  8A09              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 217  8A09              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 218  8A09              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 219  8A09              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 220  8A09              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 221  8A09              ;														BIT 3, Recarga de nueva oleada.
 222  8A09              ;														BIT 4, Recarga de nueva oleada.
 223  8A09
 224  8A09 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 225  8A0B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 226  8A0B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 227  8A0B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 228  8A0B
 229  8A0B
 230  8A0B
 231  8A0B              ; Gestión de ENTIDADES y CAJAS.
 232  8A0B
 233  8A0B 00 00        Puntero_store_caja defw 0
 234  8A0D 00 00        Puntero_restore_caja defw 0
 235  8A0F 00 00        Indice_restore_caja defw 0
 236  8A11 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 237  8A12 00           Numero_parcial_de_entidades db 0
 238  8A13 00           Entidades_en_curso db 0									; ..... ..... .....
 239  8A14 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 240  8A15              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 241  8A15              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 242  8A15              ;														; _ (Numero_de_malotes)="0".
 243  8A15 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 244  8A17 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 245  8A19              ;														; _ puntero (Indice_entidades).
 246  8A19
 247  8A19
 248  8A19              ;---------------------------------------------------------------------------------------------------------------
 249  8A19              ;
 250  8A19              ; Sirven para PINTAR.
 251  8A19
 252  8A19 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 253  8A1B              ;														; _variable para almacenar lo posición del puntero_
 254  8A1B              ; 														; _de pila, SP.
 255  8A1B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 256  8A1D              ;														; La utiliza la rutina [Extrae_foto_registros].
 257  8A1D 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 258  8A1F              ;														; _el snapshot de los registros de la siguiente entidad.
 259  8A1F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 260  8A1F 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 261  8A21              ;														; _el snapshot de los registros del siguiente disparo.
 262  8A21              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 263  8A21
 264  8A21              ;---------------------------------------------------------------------------------------------------------------
 265  8A21
 266  8A21              ; Gestión de Disparos.
 267  8A21
 268  8A21 00           Numero_de_disparotes db 0
 269  8A22 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 270  8A24 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 271  8A26 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 272  8A27              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 273  8A27              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 274  8A27 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 275  8A29              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 276  8A29              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 277  8A29              ;														; _produzca colisión.
 278  8A29 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 279  8A2B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 280  8A2B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 281  8A2E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 282  8A2E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 283  8A31              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 284  8A31              ;---------------------------------------------------------------------------------------------------------------
 285  8A31
 286  8A31              ; Relojes y temporizaciones.
 287  8A31
 288  8A31 00           Contador_de_frames db 0
 289  8A32 04           Clock_explosion db 4
 290  8A33 1E           Clock_Entidades_en_curso db 30
 291  8A34 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 292  8A35              ;														; Repite la oleada de entidades.
 293  8A35 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 294  8A36 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 295  8A37 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 296  8A38
 297  8A38 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 298  8A39 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 299  8A3A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 300  8A3B
 301  8A3B              ;---------------------------------------------------------------------------------------------------------------
 302  8A3B
 303  8A3B              ; Gestión de NIVELES.
 304  8A3B
 305  8A3B 00           Nivel db 0												; Nivel actual del juego.
 306  8A3C 00 00        Puntero_indice_NIVELES defw 0
 307  8A3E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 308  8A40              ; 														; _ que definen el NIVEL.
 309  8A40              ; Y todo comienza aquí .....
 310  8A40              ;
 311  8A40              ; Rutina principal *************************************************************************************************************************************************************************
 312  8A40              ;
 313  8A40              ;	14/11/22
 314  8A40
 315  8A40              START
 316  8A40
 317  8A40 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 318  8A43 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 319  8A45 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 320  8A47 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 321  8A49 F3           	DI
 322  8A4A
 323  8A4A 3E 07        	ld a,%00000111
 324  8A4C CD E3 98     	call Cls
 325  8A4F
 326  8A4F              ;	call Pinta_marco
 327  8A4F
 328  8A4F CD 10 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 329  8A52
 330  8A52 CD 07 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 331  8A55
 332  8A55 CD 22 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 333  8A58
 334  8A58 CD DA 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 335  8A5B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 336  8A5B CD B7 8D     	call Restore_entidad
 337  8A5E
 338  8A5E 21 12 8A     	ld hl,Numero_parcial_de_entidades
 339  8A61 46           	ld b,(hl)
 340  8A62 04           	inc b
 341  8A63 05           	dec b
 342  8A64 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 343  8A66
 344  8A66              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 345  8A66              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 346  8A66              ;	Pintamos el resto de entidades:
 347  8A66
 348  8A66              ;	INICIA ENTIDADES !!!!!
 349  8A66
 350  8A66 C5           1 push bc  												; Guardo el contador de entidades.
 351  8A67
 352  8A67 CD D1 8A     	call Inicia_entidad
 353  8A6A
 354  8A6A C1           	pop bc
 355  8A6B 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 356  8A6D
 357  8A6D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 358  8A6D              ; (Esto se dá cuando se inicia una nueva oleada).
 359  8A6D
 360  8A6D 3A 08 8A     	ld a,(Ctrl_1)
 361  8A70 CB 5F        	bit 3,a
 362  8A72 20 18        	jr nz,5F											; Loop
 363  8A74
 364  8A74              ; 	INICIA AMADEUS !!!!!
 365  8A74
 366  8A74 CD DE 8D     3 call Restore_Amadeus
 367  8A77 CD 34 8D     	call Inicia_Puntero_objeto
 368  8A7A CD 33 93     	call Draw
 369  8A7D CD A0 7F     	call Guarda_foto_registros
 370  8A80 11 8C 85     	ld de,Amadeus_db
 371  8A83 CD F0 8D     	call Store_Amadeus
 372  8A86
 373  8A86              ; 	INICIA DISPAROS !!!!!
 374  8A86
 375  8A86 CD F0 8C     	call Inicia_Puntero_Disparo_Entidades
 376  8A89 CD F7 8C     	call Inicia_Puntero_Disparo_Amadeus
 377  8A8C
 378  8A8C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 379  8A8C
 380  8A8C CD DA 8C     5 call Inicia_punteros_de_cajas
 381  8A8F CD B7 8D     	call Restore_entidad
 382  8A92
 383  8A92 3A 08 8A     	ld a,(Ctrl_1)
 384  8A95 CB 5F        	bit 3,a
 385  8A97 28 0A        	jr z,6F
 386  8A99
 387  8A99              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 388  8A99
 389  8A99 21 08 8A     	ld hl,Ctrl_1
 390  8A9C CB 9E        	res 3,(hl)
 391  8A9E CD FE 8C     	call Calcula_numero_de_malotes
 392  8AA1 18 07        	jr 7F
 393  8AA3
 394  8AA3              ; ----------
 395  8AA3
 396  8AA3 3A 12 8A     6 ld a,(Numero_parcial_de_entidades)
 397  8AA6 3C           	inc a
 398  8AA7 32 14 8A     	ld (Numero_de_malotes),a
 399  8AAA
 400  8AAA AF           7 xor a
 401  8AAB FB           2 ei
 402  8AAC 28 FD        	jr z,2B
 403  8AAE
 404  8AAE 3A 31 8A     	ld a,(Contador_de_frames)
 405  8AB1 47           	ld b,a
 406  8AB2 3A 34 8A     	ld a,(Activa_recarga_cajas)
 407  8AB5 B8           	cp b
 408  8AB6 28 08        	jr z,8F
 409  8AB8
 410  8AB8 21 08 8A     	ld hl,Ctrl_1
 411  8ABB CB E6        	set 4,(hl)
 412  8ABD AF           	xor a
 413  8ABE 18 EB        	jr 2B
 414  8AC0
 415  8AC0 21 08 8A     8 ld hl,Ctrl_1
 416  8AC3 CB A6        	res 4,(hl)
 417  8AC5 F3           	di
 418  8AC6
 419  8AC6 3A 31 8A     	ld a,(Contador_de_frames)
 420  8AC9
 421  8AC9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 422  8AC9              ;! _ IMPREDECIBLE !!!!
 423  8AC9
 424  8AC9 C6 0A        	add 10
 425  8ACB 32 33 8A     	ld (Clock_Entidades_en_curso),a
 426  8ACE
 427  8ACE C3 55 8A     	jp 4B
 428  8AD1
 429  8AD1              ; -----------------------------------------------------------------------------------
 430  8AD1
 431  8AD1 CD 34 8D     Inicia_entidad	call Inicia_Puntero_objeto
 432  8AD4 CD F7 98     	call Recompone_posicion_inicio
 433  8AD7 CD 33 93     	call Draw
 434  8ADA CD A0 7F     	call Guarda_foto_registros
 435  8ADD CD 7C 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 436  8AE0 C9           	ret
 437  8AE1
 438  8AE1              ; -----------------------------------------------------------------------------------
 439  8AE1
 440  8AE1              Frame
 441  8AE1
 442  8AE1              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 443  8AE1              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 444  8AE1
 445  8AE1              ; PINTAMOS.
 446  8AE1
 447  8AE1 3E 02            ld a,2
 448  8AE3 D3 FE            out ($fe),a
 449  8AE5 CD 37 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 450  8AE8 CD 70 96     	call Extrae_foto_disparos
 451  8AEB 3E 01            ld a,1
 452  8AED D3 FE            out ($fe),a
 453  8AEF
 454  8AEF              ; ----------------------------------------------------------------------
 455  8AEF
 456  8AEF              ; RELOJES.
 457  8AEF
 458  8AEF 21 31 8A     	ld hl,Contador_de_frames
 459  8AF2 34           	inc (hl)											; 0 - 255
 460  8AF3
 461  8AF3 3A 33 8A     	ld a,(Clock_Entidades_en_curso)
 462  8AF6 47           	ld b,a
 463  8AF7 3A 31 8A     	ld a,(Contador_de_frames)
 464  8AFA B8           	cp b
 465  8AFB 20 18        	jr nz,13F
 466  8AFD
 467  8AFD 3A 12 8A     	ld a,(Numero_parcial_de_entidades)
 468  8B00 47           	ld b,a
 469  8B01 3A 13 8A     	ld a,(Entidades_en_curso)
 470  8B04 B8           	cp b
 471  8B05 28 0E        	jr z,13F
 472  8B07 30 0C        	jr nc,13F
 473  8B09
 474  8B09 3C           	inc a
 475  8B0A 32 13 8A     	ld (Entidades_en_curso),a
 476  8B0D
 477  8B0D 3A 33 8A     	ld a,(Clock_Entidades_en_curso)
 478  8B10
 479  8B10              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 480  8B10              ;! _ IMPREDECIBLE !!!!
 481  8B10
 482  8B10 C6 64        	add 100
 483  8B12 32 33 8A     	ld (Clock_Entidades_en_curso),a
 484  8B15
 485  8B15              ; Habilita disparos.
 486  8B15
 487  8B15 21 35 8A     13 ld hl,Disparo_Amadeus
 488  8B18 11 37 8A     	ld de,CLOCK_repone_disparo_Amadeus
 489  8B1B CD 09 9F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 490  8B1E
 491  8B1E              ; Disparos de entidades.
 492  8B1E
 493  8B1E              ; Habilita_disparo_entidad db 1
 494  8B1E              ; CLOCK_repone_disparo_entidad_BACKUP db 15							; Restaura (CLOCK_repone_disparo_entidad).
 495  8B1E              ; CLOCK_repone_disparo_entidad db 127						; Reloj, decreciente.
 496  8B1E
 497  8B1E 21 38 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 498  8B21 11 3A 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 499  8B24 CD 09 9F     	call Habilita_disparos
 500  8B27
 501  8B27              ; COLISIONES.
 502  8B27
 503  8B27 CD 15 92     	call Selector_de_impactos
 504  8B2A
 505  8B2A              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 506  8B2A              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 507  8B2A              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 508  8B2A
 509  8B2A AF           	xor a
 510  8B2B 32 26 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 511  8B2E
 512  8B2E CD DA 8C     	call Inicia_punteros_de_cajas
 513  8B31 CD B7 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 514  8B34              ; 														; _ en DRAW.
 515  8B34 3A C6 89     	ld a,(Filas)
 516  8B37 A7           	and a
 517  8B38 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 518  8B3A CD C9 8D     	call Incrementa_punteros_de_cajas
 519  8B3D 18 F2        	jr 12B
 520  8B3F
 521  8B3F              ; ---------------------------------------------------------------------------------------
 522  8B3F
 523  8B3F CD 90 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 524  8B42 21 00 70     	ld hl,Album_de_fotos
 525  8B45 22 1D 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 526  8B48              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 527  8B48 3A 12 8A     	ld a,(Numero_parcial_de_entidades)
 528  8B4B 47               ld b,a
 529  8B4C A7           	and a
 530  8B4D 20 14        	jr nz,2F
 531  8B4F
 532  8B4F 21 08 8A     	ld hl,Ctrl_1
 533  8B52 CB 66        	bit 4,(hl)
 534  8B54 C2 E0 8B     	jp nz,4F
 535  8B57
 536  8B57 21 08 8A     	ld hl,Ctrl_1
 537  8B5A CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 538  8B5C
 539  8B5C 3A 31 8A     	ld a,(Contador_de_frames)
 540  8B5F 3C           	inc a
 541  8B60 32 34 8A     	ld (Activa_recarga_cajas),a
 542  8B63
 543  8B63              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 544  8B63
 545  8B63 3A 13 8A     2 ld a,(Entidades_en_curso)
 546  8B66 A7           	and a
 547  8B67 CA E0 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 548  8B6A 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 549  8B6B
 550  8B6B              ; Código que ejecutamos con cada entidad:
 551  8B6B              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 552  8B6B
 553  8B6B C5           15 push bc 												; Nº de entidades en curso.
 554  8B6C
 555  8B6C              ; Impacto ???
 556  8B6C
 557  8B6C 3A DF 89     33 ld a,(Impacto)
 558  8B6F A7           	and a
 559  8B70 28 2D        	jr z,8F
 560  8B72
 561  8B72              ; Hay Impacto en esta entidad.
 562  8B72
 563  8B72 21 32 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 564  8B75 35           	dec (hl)
 565  8B76 20 62        	jr nz,6F
 566  8B78
 567  8B78              ;! Velocidad de la animación de la explosión.
 568  8B78
 569  8B78 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 570  8B7A              ;														; _,(velocidad de la explosión).
 571  8B7A CD 91 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 572  8B7D
 573  8B7D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 574  8B7D
 575  8B7D 3A 06 8A     	ld a,(Ctrl_2)
 576  8B80 CB 4F        	bit 1,a
 577  8B82 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 578  8B84
 579  8B84              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 580  8B84
 581  8B84 3A CE 89     	ld a,(CTRL_DESPLZ)
 582  8B87 A7           	and a
 583  8B88 20 08        	jr nz,21F
 584  8B8A
 585  8B8A 21 8C 84     	ld hl,Indice_Explosion_2x2-2
 586  8B8D 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 587  8B90 18 06        	jr 22F
 588  8B92
 589  8B92 21 F6 83     21 ld hl,Indice_Explosion_2x3-2
 590  8B95 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 591  8B98
 592  8B98 21 06 8A     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 593  8B9B CB CE        	set 1,(hl)
 594  8B9D 18 22        	jr 7F
 595  8B9F
 596  8B9F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 597  8B9F              ; _con las coordenadas de la entidad almacenada en DRAW.
 598  8B9F
 599  8B9F 3A 08 8A     8 ld a,(Ctrl_1)
 600  8BA2 CB 57        	bit 2,a
 601  8BA4 28 1B        	jr z,7F
 602  8BA6
 603  8BA6 2A 29 8A     	ld hl,(Coordenadas_disparo_certero)
 604  8BA9 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 605  8BAA              ;														; E contiene la coordenada_X del disparo.
 606  8BAA 2A CC 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 607  8BAD              ;														; H FILA, (Coordenada_y de la entidad).
 608  8BAD A7           	and a
 609  8BAE ED 52        	sbc hl,de
 610  8BB0
 611  8BB0 CD 4C 92     	call Determina_resultado_comparativa
 612  8BB3
 613  8BB3              ;! Debug colisiones
 614  8BB3 78           	ld a,b
 615  8BB4 A7           	and a
 616  8BB5              ;	ld a,(Cuad_objeto)
 617  8BB5              ;	inc b
 618  8BB5              ;	dec b
 619  8BB5 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 620  8BB7              ;	jr z,$
 621  8BB7
 622  8BB7              ;! Debug colisiones
 623  8BB7
 624  8BB7              ; ----- ----- -----
 625  8BB7
 626  8BB7 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 627  8BB9 32 DF 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 628  8BBC
 629  8BBC 21 08 8A     	ld hl,Ctrl_1
 630  8BBF CB 96        	res 2,(hl)
 631  8BC1
 632  8BC1 CD 13 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 633  8BC4
 634  8BC4 3A F4 89     	ld a,(Ctrl_0)
 635  8BC7 CB 67        	bit 4,a
 636  8BC9 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 637  8BCB
 638  8BCB              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 639  8BCB              ; [[[
 640  8BCB CD 52 8E     	call Detecta_disparo_entidad
 641  8BCE              ; ]]]
 642  8BCE CD A1 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 643  8BD1
 644  8BD1 21 F4 89     	ld hl,Ctrl_0
 645  8BD4 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 646  8BD6 AF           	xor a
 647  8BD7 32 F5 89     	ld (Obj_dibujado),a
 648  8BDA
 649  8BDA
 650  8BDA
 651  8BDA CD 7C 8D     6 call Store_Restore_cajas
 652  8BDD
 653  8BDD C1           	pop bc
 654  8BDE 10 8B        	djnz 15B
 655  8BE0
 656  8BE0              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 657  8BE0
 658  8BE0              ;	ld a,2
 659  8BE0              ;	ld (Limitador_de_entidades_x_frame),a
 660  8BE0
 661  8BE0              ; ------------------------------------
 662  8BE0              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 663  8BE0              ; Hemos gestionado todas las unidades.
 664  8BE0              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 665  8BE0
 666  8BE0              ;	ld hl,Ctrl_1
 667  8BE0              ;	res 2,(hl)
 668  8BE0
 669  8BE0              ; ------------------------------------
 670  8BE0
 671  8BE0              ; Tras la gestión de las entidades, ... AMADEUS.
 672  8BE0
 673  8BE0 CD DE 8D     4 call Restore_Amadeus
 674  8BE3
 675  8BE3 3A DF 89     	ld a,(Impacto)
 676  8BE6 A7           	and a
 677  8BE7 20 FE        	jr nz,$
 678  8BE9
 679  8BE9 CD 72 8C     	call Mov_Amadeus
 680  8BEC
 681  8BEC 3A F4 89     	ld a,(Ctrl_0)
 682  8BEF CB 67        	bit 4,a
 683  8BF1 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 684  8BF3
 685  8BF3 CD A1 8C     	call Guarda_foto_entidad_a_pintar
 686  8BF6
 687  8BF6 21 F4 89     3 ld hl,Ctrl_0
 688  8BF9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 689  8BFB AF           	xor a
 690  8BFC 32 F5 89     	ld (Obj_dibujado),a
 691  8BFF
 692  8BFF 11 8C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 693  8C02 CD F0 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 694  8C05
 695  8C05 CD AE 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 696  8C08
 697  8C08              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 698  8C08
 699  8C08 CD 16 8D     	call Calcula_numero_de_disparotes
 700  8C0B CD FE 8C     9 call Calcula_numero_de_malotes
 701  8C0E
 702  8C0E 3E 04        	ld a,4
 703  8C10 D3 FE        	out ($fe),a
 704  8C12
 705  8C12 C9           	ret
 706  8C13
 707  8C13              ; --------------------------------------------------------------------------------------------------------------
 708  8C13              ;
 709  8C13              ;	27/05/23
 710  8C13
 711  8C13              Mov_obj
 712  8C13
 713  8C13              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 714  8C13
 715  8C13 3A 06 8A     	ld a,(Ctrl_2)
 716  8C16 CB 4F        	bit 1,a
 717  8C18 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 718  8C1A
 719  8C1A              ; Explosión:
 720  8C1A
 721  8C1A 3A 07 8A     	ld a,(Frames_explosion)
 722  8C1D A7           	and a
 723  8C1E 20 11        	jr nz,4F
 724  8C20
 725  8C20              ; Una alimaña menos!!!!!!!!!1
 726  8C20
 727  8C20 CD F9 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 728  8C23 21 12 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 729  8C26 35           	dec (hl)
 730  8C27 21 13 8A     	ld hl,Entidades_en_curso
 731  8C2A 35           	dec (hl)
 732  8C2B 21 11 8A     	ld hl,Numero_de_entidades
 733  8C2E 35           	dec (hl)
 734  8C2F 18 40        	jr 3F
 735  8C31
 736  8C31              ; -----
 737  8C31
 738  8C31              ;	`Movemos´ la explosión.
 739  8C31
 740  8C31 2A D4 89     4 ld hl,(Puntero_DESPLZ_der)
 741  8C34 23           	inc hl
 742  8C35 23           	inc hl
 743  8C36 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 744  8C39 CD 2E 8D     	call Extrae_address
 745  8C3C 22 CA 89     	ld (Puntero_objeto),hl
 746  8C3F
 747  8C3F 21 07 8A     	ld hl,Frames_explosion
 748  8C42 35           	dec (hl)
 749  8C43
 750  8C43 CD 91 8C     	call Guarda_foto_entidad_a_borrar
 751  8C46 18 29        	jr 3F
 752  8C48
 753  8C48 AF           2 xor a
 754  8C49 32 F5 89     	ld (Obj_dibujado),a
 755  8C4C 32 F4 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 756  8C4F              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 757  8C4F              ; 														; _de la entidad.
 758  8C4F CD AB 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 759  8C52              ;														; Obj_dibujado="0".
 760  8C52              ; Movemos Entidades malignas.
 761  8C52
 762  8C52              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 763  8C52              ;	and a 												; _a movernos. (Limitador_de_entidades).
 764  8C52              ;	ret z
 765  8C52
 766  8C52 CD B7 9D     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 767  8C55
 768  8C55 3A F4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 769  8C58 CB 67        	bit 4,a
 770  8C5A C8           	ret z
 771  8C5B
 772  8C5B              ; Ha habido desplazamiento de la entidad maligna.
 773  8C5B              ; Ha llegado a zona de AMADEUS ???
 774  8C5B
 775  8C5B 3A CD 89     	ld a,(Coordenada_y)
 776  8C5E FE 14        	cp $14
 777  8C60 D4 DF 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 778  8C63              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 779  8C63              ; ---------
 780  8C63
 781  8C63 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 782  8C65 32 F5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 783  8C68 CD AB 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 784  8C6B CD C2 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 785  8C6E CD 91 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 786  8C71 C9           3 ret													; _de la misma.
 787  8C72
 788  8C72              ; --------------------------------------------------------------------------------------------------------------
 789  8C72              ;
 790  8C72              ;	29/1/23
 791  8C72
 792  8C72              Mov_Amadeus
 793  8C72
 794  8C72 AF           	xor a
 795  8C73 32 F5 89     	ld (Obj_dibujado),a
 796  8C76 CD AB 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 797  8C79              ;														; Obj_dibujado="0".
 798  8C79              ; Movemos Amadeus.
 799  8C79
 800  8C79 CD 1B 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 801  8C7C 3A F4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 802  8C7F CB 67        	bit 4,a
 803  8C81 C8           	ret z
 804  8C82
 805  8C82              ; ---------
 806  8C82
 807  8C82 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 808  8C84 32 F5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 809  8C87 CD AB 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 810  8C8A CD C2 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 811  8C8D CD 91 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 812  8C90 C9           	ret													; _de la nave.
 813  8C91
 814  8C91              ; --------------------------------------------------------------------------------------------------------------
 815  8C91              ;
 816  8C91              ;	31/01/23
 817  8C91              ;
 818  8C91              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 819  8C91
 820  8C91              Guarda_foto_entidad_a_borrar
 821  8C91
 822  8C91 CD 0D 96     	call Prepara_draw
 823  8C94 CD 47 95     	call calcula_CColumnass
 824  8C97 CD 7E 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 825  8C9A CD D3 95     	call Define_rutina_de_impresion
 826  8C9D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 827  8CA0 C9           	ret
 828  8CA1
 829  8CA1              ; --------------------------------------------------------------------------------------------------------------
 830  8CA1              ;
 831  8CA1              ;	31/01/23
 832  8CA1              ;
 833  8CA1              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 834  8CA1              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 835  8CA1
 836  8CA1              Guarda_foto_entidad_a_pintar
 837  8CA1
 838  8CA1 CD CE 8C     	call Repone_pintar
 839  8CA4 CD 33 93     	call Draw
 840  8CA7 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 841  8CAA C9           	ret
 842  8CAB
 843  8CAB              ; --------------------------------------------------------------------------------------------------------------
 844  8CAB              ;
 845  8CAB              ;
 846  8CAB
 847  8CAB 21 C6 89     Prepara_var_pintado_borrado	ld hl,Filas
 848  8CAE 3A F5 89     	ld a,(Obj_dibujado)
 849  8CB1 A7           	and a
 850  8CB2 28 05        	jr z,1F
 851  8CB4 11 EA 89     	ld de,Variables_de_pintado
 852  8CB7 18 03        	jr 2F
 853  8CB9 11 E0 89     1 ld de,Variables_de_borrado
 854  8CBC 01 08 00     2 ld bc,8
 855  8CBF ED B0        	ldir
 856  8CC1 C9           	ret
 857  8CC2
 858  8CC2              ; --------------------------------------------------------------------------------------------------------------
 859  8CC2
 860  8CC2 21 E0 89     Repone_borrar ld hl,Variables_de_borrado
 861  8CC5 11 C6 89     	ld de,Filas
 862  8CC8 01 08 00     	ld bc,8
 863  8CCB ED B0        	ldir
 864  8CCD C9           	ret
 865  8CCE
 866  8CCE 21 EA 89     Repone_pintar ld hl,Variables_de_pintado
 867  8CD1 11 C6 89     	ld de,Filas
 868  8CD4 01 08 00     	ld bc,8
 869  8CD7 ED B0        	ldir
 870  8CD9 C9           	ret
 871  8CDA
 872  8CDA              ; *************************************************************************************************************************************************************
 873  8CDA              ;
 874  8CDA              ; 8/1/23
 875  8CDA              ;
 876  8CDA              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 877  8CDA              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 878  8CDA              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 879  8CDA
 880  8CDA              ; Destruye HL y DE !!!!!
 881  8CDA
 882  8CDA              Inicia_punteros_de_cajas
 883  8CDA
 884  8CDA 21 74 85     	ld hl,Indice_de_cajas
 885  8CDD CD 2E 8D         call Extrae_address
 886  8CE0 22 0B 8A         ld (Puntero_store_caja),hl
 887  8CE3 21 76 85     	ld hl,Indice_de_cajas+2
 888  8CE6 22 0F 8A     	ld (Indice_restore_caja),hl
 889  8CE9 CD 2E 8D     	call Extrae_address
 890  8CEC 22 0D 8A     	ld (Puntero_restore_caja),hl
 891  8CEF C9               ret
 892  8CF0
 893  8CF0              ; *************************************************************************************************************************************************************
 894  8CF0              ;
 895  8CF0              ; 8/1/23
 896  8CF0              ;
 897  8CF0              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 898  8CF0
 899  8CF0 21 0C 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 900  8CF3 22 22 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 901  8CF6 C9           	ret
 902  8CF7 21 F4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 903  8CFA 22 24 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 904  8CFD C9           	ret
 905  8CFE
 906  8CFE              ; -------------------------------------------------------------------------------------------------------------
 907  8CFE              ;
 908  8CFE              ; 28/2/23
 909  8CFE              ;
 910  8CFE
 911  8CFE              Calcula_numero_de_malotes
 912  8CFE
 913  8CFE 21 00 70     	ld hl,Album_de_fotos
 914  8D01 EB           	ex de,hl
 915  8D02 2A 1D 8A     	ld hl,(Stack_snapshot)
 916  8D05
 917  8D05 06 00        	ld b,0
 918  8D07 7D           	ld a,l
 919  8D08 93           	sub e
 920  8D09 28 07        	jr z,1F
 921  8D0B
 922  8D0B              ; Nº de malotes no es "0".
 923  8D0B
 924  8D0B D6 06        2 sub 6
 925  8D0D 04           	inc b
 926  8D0E A7           	and a
 927  8D0F 20 FA        	jr nz,2B
 928  8D11 78           	ld a,b
 929  8D12
 930  8D12 32 14 8A     1 ld (Numero_de_malotes),a
 931  8D15 C9           	ret
 932  8D16
 933  8D16              ; -------------------------------------------------------------------------------------------------------------
 934  8D16              ;
 935  8D16              ; 28/2/23
 936  8D16              ;
 937  8D16
 938  8D16              Calcula_numero_de_disparotes
 939  8D16
 940  8D16 21 85 70     	ld hl,Album_de_fotos_disparos
 941  8D19 EB           	ex de,hl
 942  8D1A 2A 1F 8A     	ld hl,(Stack_snapshot_disparos)
 943  8D1D
 944  8D1D 06 00        	ld b,0
 945  8D1F 7D           	ld a,l
 946  8D20 93           	sub e
 947  8D21 28 07        	jr z,1F
 948  8D23
 949  8D23              ; Nº de malotes no es "0".
 950  8D23
 951  8D23 D6 06        2 sub 6
 952  8D25 04           	inc b
 953  8D26 A7           	and a
 954  8D27 20 FA        	jr nz,2B
 955  8D29 78           	ld a,b
 956  8D2A
 957  8D2A 32 21 8A     1 ld (Numero_de_disparotes),a
 958  8D2D C9           	ret
 959  8D2E              ; *************************************************************************************************************************************************************
 960  8D2E              ;
 961  8D2E              ; 20/10/22
 962  8D2E              ;
 963  8D2E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 964  8D2E              ;
 965  8D2E              ; Destruye el puntero y DE !!!!!
 966  8D2E
 967  8D2E 5E           Extrae_address ld e,(hl)
 968  8D2F 23           	inc hl
 969  8D30 56           	ld d,(hl)
 970  8D31 2B           	dec hl
 971  8D32 EB           	ex de,hl
 972  8D33 C9           	ret
 973  8D34
 974  8D34              ; *************************************************************************************************************************************************************
 975  8D34              ;
 976  8D34              ;	7/2/23
 977  8D34              ;
 978  8D34              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 979  8D34              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 980  8D34              ;
 981  8D34              ;   Destruye HL y BC !!!!!,
 982  8D34              ;
 983  8D34              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 984  8D34              ;					"0" ..... Izquierda.
 985  8D34
 986  8D34              Inicia_Puntero_objeto
 987  8D34
 988  8D34 3A DA 89     	ld a,(Cuad_objeto)
 989  8D37 E6 01        	and 1
 990  8D39 F5           	push af
 991  8D3A CC 58 8D     	call z,Inicia_puntero_objeto_izq
 992  8D3D F1           	pop af
 993  8D3E 28 2B        	jr z,1F
 994  8D40 CD 45 8D     	call Inicia_puntero_objeto_der
 995  8D43 18 26        	jr 1F
 996  8D45
 997  8D45              ; Arrancamos desde la parte izquierda de la pantalla.
 998  8D45              ; Iniciamos (Indice_Sprite_der).
 999  8D45
1000  8D45 2A D0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1001  8D48 22 D4 89     	ld (Puntero_DESPLZ_der),hl
1002  8D4B CD 2E 8D     	call Extrae_address
1003  8D4E 22 CA 89     	ld (Puntero_objeto),hl
1004  8D51
1005  8D51 2A D2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1006  8D54 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
1007  8D57 C9           	ret
1008  8D58
1009  8D58              ; Arrancamos desde la parte derecha de la pantalla.
1010  8D58              ; Iniciamos (Indice_Sprite_izq).
1011  8D58
1012  8D58 2A D2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1013  8D5B 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
1014  8D5E CD 2E 8D     	call Extrae_address
1015  8D61 22 CA 89     	ld (Puntero_objeto),hl
1016  8D64
1017  8D64 2A D0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1018  8D67 22 D4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1019  8D6A C9           	ret
1020  8D6B
1021  8D6B              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1022  8D6B
1023  8D6B 21 48 83     1 ld hl,Amadeus
1024  8D6E ED 4B CA 89  	ld bc,(Puntero_objeto)
1025  8D72 B7 ED 42     	sub hl,bc
1026  8D75 C0           	ret nz
1027  8D76 21 F4 89     	ld hl,Ctrl_0
1028  8D79 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1029  8D7B C9           	ret 												; _de nuestra nave en los extremos.
1030  8D7C
1031  8D7C              ; *************************************************************************************************************************************************************
1032  8D7C              ;
1033  8D7C              ;	14/5/23
1034  8D7C              ;
1035  8D7C              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1036  8D7C              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1037  8D7C
1038  8D7C              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1039  8D7C              ;	_de la 2ª y 3ª entidad respectivamente.
1040  8D7C
1041  8D7C              Store_Restore_cajas
1042  8D7C
1043  8D7C E5           	push hl
1044  8D7D D5           	push de
1045  8D7E C5            	push bc
1046  8D7F
1047  8D7F              ;	STORE !!!!!
1048  8D7F              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1049  8D7F
1050  8D7F 21 C6 89     	ld hl,Filas
1051  8D82 ED 5B 0B 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1052  8D86 01 42 00     	ld bc,66
1053  8D89 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1054  8D8B
1055  8D8B              ; 	Entidad_sospechosa. 20/4/23
1056  8D8B
1057  8D8B 3A DF 89     	ld a,(Impacto)
1058  8D8E A7           	and a
1059  8D8F 28 0C        	jr z,1F
1060  8D91
1061  8D91 2A 0B 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1062  8D94 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1063  8D97 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1064  8D98 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1065  8D9A 22 27 8A     	ld (Entidad_sospechosa_de_colision),hl
1066  8D9D
1067  8D9D              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1068  8D9D
1069  8D9D 2A 0D 8A     1 ld hl,(Puntero_restore_caja)
1070  8DA0 7E           	ld a,(hl)
1071  8DA1 A7           	and a
1072  8DA2 F5           	push af
1073  8DA3 28 08        	jr z,2F
1074  8DA5
1075  8DA5 11 C6 89     	ld de,Filas
1076  8DA8 01 42 00     	ld bc,66
1077  8DAB ED B0        	ldir
1078  8DAD
1079  8DAD CD C9 8D     2 call Incrementa_punteros_de_cajas
1080  8DB0 F1           	pop af
1081  8DB1 28 EA        	jr z,1B
1082  8DB3
1083  8DB3 C1           	pop bc
1084  8DB4 D1           	pop de
1085  8DB5 E1           	pop hl
1086  8DB6
1087  8DB6 C9           	ret
1088  8DB7
1089  8DB7              ; **************************************************************************************************
1090  8DB7              ;
1091  8DB7              ;	12/05/23
1092  8DB7              ;
1093  8DB7              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1094  8DB7
1095  8DB7 E5           Restore_entidad push hl
1096  8DB8 D5           	push de
1097  8DB9 C5            	push bc
1098  8DBA
1099  8DBA 2A 0B 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1100  8DBD 11 C6 89     	ld de,Filas
1101  8DC0 01 42 00     	ld bc,66
1102  8DC3 ED B0        	ldir
1103  8DC5
1104  8DC5 C1           	pop bc
1105  8DC6 D1           	pop de
1106  8DC7 E1           	pop hl
1107  8DC8 C9           	ret
1108  8DC9
1109  8DC9
1110  8DC9              ; **************************************************************************************************
1111  8DC9              ;
1112  8DC9              ;	08/05/23
1113  8DC9              ;
1114  8DC9              ;	Incrementamos los dos punteros de entidades. (+1).
1115  8DC9
1116  8DC9 2A 0D 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1117  8DCC 22 0B 8A     	ld (Puntero_store_caja),hl
1118  8DCF 2A 0F 8A     	ld hl,(Indice_restore_caja)
1119  8DD2 23           	inc hl
1120  8DD3 23           	inc hl
1121  8DD4 22 0F 8A     	ld (Indice_restore_caja),hl
1122  8DD7 CD 2E 8D         call Extrae_address
1123  8DDA 22 0D 8A         ld (Puntero_restore_caja),hl
1124  8DDD C9               ret
1125  8DDE
1126  8DDE              ; **************************************************************************************************
1127  8DDE              ;
1128  8DDE              ;	25/01/23
1129  8DDE              ;
1130  8DDE              ;	Restore_Amadeus
1131  8DDE              ;
1132  8DDE              ;	Cargamos en DRAW los parámetros de Amadeus.
1133  8DDE              ;
1134  8DDE
1135  8DDE E5           Restore_Amadeus	push hl
1136  8DDF D5           	push de
1137  8DE0 C5            	push bc
1138  8DE1 21 8C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1139  8DE4 11 C6 89     	ld de,Filas
1140  8DE7 01 42 00     	ld bc,66
1141  8DEA ED B0        	ldir
1142  8DEC C1           	pop bc
1143  8DED D1           	pop de
1144  8DEE E1           	pop hl
1145  8DEF C9           	ret
1146  8DF0
1147  8DF0              ; *************************************************************************************************************************************************************
1148  8DF0              ;
1149  8DF0              ;	29/04/23
1150  8DF0              ;
1151  8DF0              ;	Store_Amadeus
1152  8DF0              ;
1153  8DF0              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1154  8DF0              ;
1155  8DF0              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1156  8DF0              ;
1157  8DF0              ;	DESTRUYE: HL y BC y DE.
1158  8DF0
1159  8DF0 21 C6 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1160  8DF3 01 42 00     	ld bc,66
1161  8DF6 ED B0        	ldir
1162  8DF8 C9           	ret
1163  8DF9
1164  8DF9              ; -----------------------------------------------------------
1165  8DF9              ;
1166  8DF9              ;	27/04/23
1167  8DF9              ;
1168  8DF9              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1169  8DF9              ;
1170  8DF9              ;	Destruye: HL,BC,DE,A
1171  8DF9
1172  8DF9 21 C6 89     Borra_datos_entidad ld hl,Filas
1173  8DFC 01 41 00     	ld bc,65
1174  8DFF AF           	xor a
1175  8E00 77           	ld (hl),a
1176  8E01 11 C7 89     	ld de,Filas+1
1177  8E04 ED B0        	ldir
1178  8E06 C9           	ret
1179  8E07
1180  8E07              ; -----------------------------------------------------------
1181  8E07
1182  8E07              ; Teclado.
1183  8E07
1184  8E07 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1185  8E09 DB FE        	in a,($fe)
1186  8E0B E6 01        	and $01
1187  8E0D 28 02        	jr z,1f
1188  8E0F 18 F6        	jr Pulsa_ENTER
1189  8E11 C9           1 ret
1190  8E12
1191  8E12              ; **************************************************************************************************
1192  8E12              ;
1193  8E12              ; Temporización.
1194  8E12
1195  8E12              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1196  8E12              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1197  8E12              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1198  8E12              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1199  8E12
1200  8E12              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1201  8E12              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1202  8E12              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1203  8E12
1204  8E12              ; A partir de $4f61 no hace falta DELAY.
1205  8E12
1206  8E12              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1207  8E12
1208  8E12 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1209  8E15 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1210  8E16 78           	LD A,B
1211  8E17 A7           	AND A
1212  8E18 20 FB        	JR NZ,wait
1213  8E1A C9           	RET
1214  8E1B
1215  8E1B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1216  8E1B              ;
1217  8E1B              ;	5/3/23
1218  8E1B              ;
1219  8E1B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1220  8E1B
1221  8E1B              Movimiento_Amadeus
1222  8E1B
1223  8E1B              ; Disparo.
1224  8E1B
1225  8E1B 3A 35 8A     	ld a,(Disparo_Amadeus)
1226  8E1E A7           	and a
1227  8E1F 20 02        	jr nz,1F
1228  8E21 18 15        	jr 2F
1229  8E23
1230  8E23 3E F7        1 ld a,$f7													; "5" para disparar.
1231  8E25 DB FE        	in a,($fe)
1232  8E27 E6 10        	and $10
1233  8E29
1234  8E29 F5           	push af
1235  8E2A CC 5B 8E     	call z,Genera_disparo
1236  8E2D F1           	pop af
1237  8E2E 20 08        	jr nz,2F
1238  8E30
1239  8E30 3A 35 8A     	ld a,(Disparo_Amadeus)
1240  8E33 EE 01        	xor 1
1241  8E35 32 35 8A     	ld (Disparo_Amadeus),a
1242  8E38
1243  8E38 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1244  8E3A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1245  8E3C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1246  8E3E CC B1 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1247  8E41 3E F7        	ld a,$f7
1248  8E43 DB FE        	in a,($fe)
1249  8E45 E6 01        	and $01
1250  8E47 C8           	ret z
1251  8E48
1252  8E48 3E F7        	ld a,$f7
1253  8E4A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1254  8E4C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1255  8E4E CC 93 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1256  8E51 C9           	ret
1257  8E52
1258  8E52              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1259  8E52              ;
1260  8E52              ;	Rutina provisional para que los malotes cagen balas.
1261  8E52
1262  8E52              Detecta_disparo_entidad
1263  8E52
1264  8E52 3A 38 8A     	ld a,(Disparo_entidad)
1265  8E55 A7           	and a
1266  8E56 C8           	ret z
1267  8E57
1268  8E57              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1269  8E57
1270  8E57              ;	ld a,$7f
1271  8E57              ;	in a,($fe)
1272  8E57              ;	and 1
1273  8E57              ;	ret nz
1274  8E57
1275  8E57 CD 5B 8E     	call Genera_disparo
1276  8E5A C9           	ret
1277  8E5B
1278  8E5B              ; ---------------------------------------------------------------
1279  8E5B
1280  8E5B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E5B              ; ******************************************************************************************************************************************************************************************
   2+ 8E5B              ;
   3+ 8E5B              ;   16/07/23
   4+ 8E5B              ;
   5+ 8E5B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E5B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E5B              ;
   8+ 8E5B              ;
   9+ 8E5B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E5B              ;
  11+ 8E5B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E5B              ;               _ hacen las entidades hacia abajo.
  13+ 8E5B              ;
  14+ 8E5B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E5B              ;
  16+ 8E5B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E5B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E5B              ;
  19+ 8E5B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E5B              ;           _ la bala.
  21+ 8E5B              ;
  22+ 8E5B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E5B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E5B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E5B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E5B              ;           _ en el momento de generarse la bala)).
  27+ 8E5B
  28+ 8E5B              Genera_disparo
  29+ 8E5B
  30+ 8E5B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E5B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E5B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E5B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E5B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E5B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E5B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E5B
  38+ 8E5B              ; Exclusiones:
  39+ 8E5B
  40+ 8E5B 3A 02 8A         ld a,(Columnas)
  41+ 8E5E 47               ld b,a
  42+ 8E5F 3A C7 89         ld a,(Columns)
  43+ 8E62 B8               cp b
  44+ 8E63 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E64
  46+ 8E64              ; ----- ----- -----
  47+ 8E64
  48+ 8E64 3A F4 89         ld a,(Ctrl_0)
  49+ 8E67 CB 77            bit 6,a
  50+ 8E69 20 06            jr nz,14F
  51+ 8E6B
  52+ 8E6B 3A CD 89         ld a,(Coordenada_y)
  53+ 8E6E FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E70 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E71
  56+ 8E71 21 00 80     14 ld hl,Indice_disparo
  57+ 8E74 3A CE 89         ld a,(CTRL_DESPLZ)
  58+ 8E77 4F               ld c,a
  59+ 8E78 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E7A              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E7A              ;                                            ""        ""       "f9", B="1"
  62+ 8E7A              ;                                            ""        ""       "fb", B="2"
  63+ 8E7A              ;                                            ""        ""       "fb", B="3"
  64+ 8E7A A7               and a
  65+ 8E7B 28 10            jr z,1F
  66+ 8E7D E6 01            and 1
  67+ 8E7F C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E80
  69+ 8E80 79               ld a,c
  70+ 8E81 16 F9            ld d,$f9
  71+ 8E83 23           2 inc hl
  72+ 8E84 23               inc hl
  73+ 8E85 04               inc b
  74+ 8E86 BA               cp d
  75+ 8E87 28 04            jr z,1F
  76+ 8E89 14               inc d
  77+ 8E8A 14               inc d
  78+ 8E8B 18 F6            jr 2B
  79+ 8E8D
  80+ 8E8D CD 2E 8D     1 call Extrae_address
  81+ 8E90 E5               push hl
  82+ 8E91 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E93 DD 21 AC 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E97
  85+ 8E97              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E97              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E97
  88+ 8E97 3A F4 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  89+ 8E9A CB 77            bit 6,a
  90+ 8E9C 20 04            jr nz,19F
  91+ 8E9E
  92+ 8E9E AF               xor a
  93+ 8E9F 32 38 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  94+ 8EA2
  95+ 8EA2 3A DA 89     19 ld a,(Cuad_objeto)
  96+ 8EA5 FE 02            cp 2
  97+ 8EA7 38 66            jr c,3F
  98+ 8EA9 28 64            jr z,3F
  99+ 8EAB
 100+ 8EAB              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8EAB
 102+ 8EAB E6 01            and 1
 103+ 8EAD 28 30            jr z,4F
 104+ 8EAF
 105+ 8EAF              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8EAF              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8EAF              ;
 108+ 8EAF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8EAF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8EAF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8EAF
 112+ 8EAF 2A C8 89     	ld hl,(Posicion_actual)
 113+ 8EB2
 114+ 8EB2              ;   Amadeus o entidad ???.
 115+ 8EB2
 116+ 8EB2 3A F4 89         ld a,(Ctrl_0)
 117+ 8EB5 CB 77            bit 6,a
 118+ 8EB7 28 0A            jr z,8F
 119+ 8EB9
 120+ 8EB9              ; 	Dispara Amadeus.
 121+ 8EB9
 122+ 8EB9 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8EBB CD 28 96         call PreviousScan
 124+ 8EBE CD 28 96         call PreviousScan
 125+ 8EC1
 126+ 8EC1              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8EC1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8EC1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8EC1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8EC1
 131+ 8EC1 18 11            jr 10F
 132+ 8EC3
 133+ 8EC3              ; 	Dispara Entidad.
 134+ 8EC3
 135+ 8EC3 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8EC6              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8EC6
 138+ 8EC6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8EC6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8EC6
 141+ 8EC6 C5               push bc
 142+ 8EC7 06 10            ld b,16
 143+ 8EC9 CD 19 96     9 call NextScan
 144+ 8ECC 10 FB            djnz 9B
 145+ 8ECE C1               pop bc
 146+ 8ECF CD 39 8F         call Ajusta_disparo_parte_izquierda
 147+ 8ED2 18 06            jr 17F
 148+ 8ED4
 149+ 8ED4              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8ED4              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8ED4              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8ED4              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8ED4
 154+ 8ED4 CD 39 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8ED7 CD AE 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EDA              ;                                                      ; _al generar el disparo.
 157+ 8EDA
 158+ 8EDA              ; 	LLegados a este punto tendremos:
 159+ 8EDA              ;
 160+ 8EDA              ;       Puntero_objeto_disparo en IY.
 161+ 8EDA              ;       Rutinas_de_impresion en IX.
 162+ 8EDA              ;       Puntero_de_impresion en HL.
 163+ 8EDA              ;       Impacto/Dirección en BC.
 164+ 8EDA
 165+ 8EDA CD 41 8F     17 call Almacena_disparo
 166+ 8EDD 18 52            jr 6F                                             ; RET.
 167+ 8EDF
 168+ 8EDF              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EDF              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EDF              ;
 171+ 8EDF              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EDF              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EDF              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EDF
 175+ 8EDF 2A C8 89     4 ld hl,(Posicion_actual)
 176+ 8EE2
 177+ 8EE2              ;   Amadeus o entidad ???.
 178+ 8EE2
 179+ 8EE2 3A F4 89         ld a,(Ctrl_0)
 180+ 8EE5 CB 77            bit 6,a
 181+ 8EE7 28 0A            jr z,11F
 182+ 8EE9
 183+ 8EE9              ; 	Dispara Amadeus.
 184+ 8EE9
 185+ 8EE9 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EEB CD 28 96         call PreviousScan
 187+ 8EEE CD 28 96         call PreviousScan
 188+ 8EF1
 189+ 8EF1              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EF1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EF1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EF1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EF1
 194+ 8EF1 18 11            jr 13F
 195+ 8EF3
 196+ 8EF3              ; 	Dispara Entidad.
 197+ 8EF3
 198+ 8EF3 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EF6              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EF6
 201+ 8EF6              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EF6              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EF6
 204+ 8EF6 C5               push bc
 205+ 8EF7 06 10            ld b,16
 206+ 8EF9 CD 19 96     12 call NextScan
 207+ 8EFC 10 FB            djnz 12B
 208+ 8EFE C1               pop bc
 209+ 8EFF
 210+ 8EFF CD 32 8F         call Ajusta_disparo_parte_derecha
 211+ 8F02 18 06            jr 18F
 212+ 8F04
 213+ 8F04              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8F04              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8F04              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8F04              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8F04
 218+ 8F04 CD 32 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8F07 CD AE 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8F0A              ;                                                       ; _al generar el disparo.
 221+ 8F0A
 222+ 8F0A              ; LLegados a este punto tendremos:
 223+ 8F0A              ;
 224+ 8F0A              ;       Puntero_objeto_disparo en IY.
 225+ 8F0A              ;       Rutinas_de_impresion en IX.
 226+ 8F0A              ;       Puntero_de_impresion en HL.
 227+ 8F0A              ;       Impacto/Dirección en BC.
 228+ 8F0A
 229+ 8F0A CD 41 8F     18 call Almacena_disparo
 230+ 8F0D 18 22            jr 6F                                               ; RET.
 231+ 8F0F
 232+ 8F0F              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8F0F
 234+ 8F0F 28 11        3 jr z,5F
 235+ 8F11
 236+ 8F11              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8F11              ;
 238+ 8F11              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8F11              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8F11              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8F11              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8F11
 243+ 8F11              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8F11              ;	   ""        ""       "f9", B="1"
 245+ 8F11              ;	   ""        ""       "fb", B="2"
 246+ 8F11              ; 	   ""        ""       "fb", B="3"
 247+ 8F11
 248+ 8F11 2A C8 89     	ld hl,(Posicion_actual)
 249+ 8F14 CD 19 96     	call NextScan
 250+ 8F17
 251+ 8F17              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8F17              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8F17              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8F17              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8F17
 256+ 8F17 CD 39 8F         call Ajusta_disparo_parte_izquierda
 257+ 8F1A
 258+ 8F1A              ; 	No se produce impacto. B="$80"
 259+ 8F1A              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8F1A
 261+ 8F1A 01 80 80         ld bc,$8080
 262+ 8F1D
 263+ 8F1D              ; 	LLegados a este punto tendremos:
 264+ 8F1D              ;
 265+ 8F1D              ;       Puntero_objeto_disparo en IY.
 266+ 8F1D              ;       Rutinas_de_impresion en IX.
 267+ 8F1D              ;       Puntero_de_impresion en HL.
 268+ 8F1D              ;       Impacto/Dirección en BC.
 269+ 8F1D
 270+ 8F1D CD 41 8F         call Almacena_disparo
 271+ 8F20 18 0F            jr 6F                                           ; RET.
 272+ 8F22
 273+ 8F22              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8F22              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8F22              ;
 276+ 8F22              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8F22              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8F22              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8F22              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8F22
 281+ 8F22 2A C8 89     5 ld hl,(Posicion_actual)
 282+ 8F25 CD 19 96     	call NextScan
 283+ 8F28
 284+ 8F28              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F28              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F28              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F28              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F28
 289+ 8F28 CD 32 8F         call Ajusta_disparo_parte_derecha
 290+ 8F2B
 291+ 8F2B              ; 	No se produce impacto. B="$80"
 292+ 8F2B              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F2B
 294+ 8F2B 01 80 80     15 ld bc,$8080
 295+ 8F2E
 296+ 8F2E              ; 	LLegados a este punto tendremos:
 297+ 8F2E              ;
 298+ 8F2E              ;       Puntero_objeto_disparo en IY.
 299+ 8F2E              ;       Rutinas_de_impresion en IX.
 300+ 8F2E              ;       Puntero_de_impresion en HL.
 301+ 8F2E              ;       Impacto/Dirección en BC.
 302+ 8F2E
 303+ 8F2E CD 41 8F         call Almacena_disparo
 304+ 8F31
 305+ 8F31 C9           6 ret
 306+ 8F32
 307+ 8F32              ; ----------------------------------------------------------------
 308+ 8F32              ;
 309+ 8F32              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F32              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F32              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F32
 313+ 8F32 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F33 FE 02            cp 2
 315+ 8F35 38 01            jr c,1F
 316+ 8F37 23               inc hl
 317+ 8F38 C9           1 ret
 318+ 8F39
 319+ 8F39 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F3A FE 01        	cp 1
 321+ 8F3C 20 01        	jr nz,1F
 322+ 8F3E 2B           	dec hl
 323+ 8F3F 2B           1 dec hl
 324+ 8F40 C9               ret
 325+ 8F41
 326+ 8F41              ; ----------------------------------------------------------------
 327+ 8F41              ;
 328+ 8F41              ;   25/02/23
 329+ 8F41              ;
 330+ 8F41              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F41              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F41              ;
 333+ 8F41              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F41              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F41
 336+ 8F41              Almacena_disparo
 337+ 8F41
 338+ 8F41 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F42 F1               pop af
 340+ 8F43 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F44
 342+ 8F44 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F45 E6 01            and 1
 344+ 8F47 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F49              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F49              ; 	Dispara AMADEUS.
 347+ 8F49
 348+ 8F49              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F49              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F49              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F49              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F49
 353+ 8F49 C5               push bc
 354+ 8F4A 01 F8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F4D 2A 24 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F50 A7               and a
 357+ 8F51 ED 42            sbc hl,bc
 358+ 8F53 CC F7 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F56 C1               pop bc
 360+ 8F57 28 54            jr z,4F
 361+ 8F59
 362+ 8F59 2A 24 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F5C 23               inc hl
 364+ 8F5D 23               inc hl
 365+ 8F5E 22 24 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F61              ;                                                   ; _ Disparo_(+1).
 367+ 8F61 18 18            jr 2F
 368+ 8F63
 369+ 8F63              ; Dispara una entidad.
 370+ 8F63
 371+ 8F63 C5           1 push bc
 372+ 8F64 01 20 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F67 2A 22 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F6A A7               and a
 375+ 8F6B ED 42            sbc hl,bc
 376+ 8F6D CC F0 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F70 C1               pop bc
 378+ 8F71 28 3A            jr z,4F
 379+ 8F73
 380+ 8F73 2A 22 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F76 23               inc hl
 382+ 8F77 23               inc hl
 383+ 8F78 22 22 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F7B              ;                                                   ; _ Disparo_(+1).
 385+ 8F7B CD 2E 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F7E              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F7E              ;
 388+ 8F7E              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F7E              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F7E              ;                                                     Puntero_de_impresion en HL.
 391+ 8F7E              ;                                                     Impacto/Dirección en BC.
 392+ 8F7E
 393+ 8F7E 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F7F 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F80 23               inc hl                                          ; _ al siguiente.
 396+ 8F81 A7               and a
 397+ 8F82 20 C0            jr nz,3B
 398+ 8F84
 399+ 8F84 08               ex af,af
 400+ 8F85 ED 73 19 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F89 F9               ld sp,hl
 402+ 8F8A
 403+ 8F8A DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F8C F5               push af                                         ; Puntero de impresión.
 405+ 8F8D FD E5            push iy                                         ; Puntero objeto.
 406+ 8F8F C5               push bc                                         ; Control.
 407+ 8F90
 408+ 8F90 ED 7B 19 8A      ld sp,(Stack)
 409+ 8F94
 410+ 8F94              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F94
 412+ 8F94 21 08 8A     	ld hl,Ctrl_1
 413+ 8F97 CB C6        	set 0,(hl)
 414+ 8F99
 415+ 8F99 DD E5        	push ix
 416+ 8F9B E1               pop hl
 417+ 8F9C F5               push af
 418+ 8F9D DD E1            pop ix
 419+ 8F9F
 420+ 8F9F CD A0 7F     	call Guarda_foto_registros
 421+ 8FA2
 422+ 8FA2 21 08 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8FA5 CB 86        	res 0,(hl)
 424+ 8FA7
 425+ 8FA7              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8FA7              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8FA7
 428+ 8FA7 CD F7 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8FAA CD F0 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8FAD
 431+ 8FAD C9           4 ret
 432+ 8FAE
 433+ 8FAE              ; ----------------------------------------------------------------
 434+ 8FAE              ;
 435+ 8FAE              ;   4/3/23
 436+ 8FAE              ;
 437+ 8FAE              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8FAE              ;   _ al generarse el disparo.
 439+ 8FAE              ;
 440+ 8FAE              ;       "$80" ..... No se produce colisión.
 441+ 8FAE              ;       "$81" ..... Se produce colisión.
 442+ 8FAE
 443+ 8FAE              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8FAE              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8FAE
 446+ 8FAE
 447+ 8FAE FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8FB0 E5               push hl                                        ; Puntero de impresión.
 449+ 8FB1
 450+ 8FB1 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8FB3 CD CF 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8FB6
 453+ 8FB6 7B               ld a,e
 454+ 8FB7 E6 01            and 1
 455+ 8FB9 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8FBB
 457+ 8FBB E1               pop hl
 458+ 8FBC E5               push hl
 459+ 8FBD CD 19 96         call NextScan
 460+ 8FC0
 461+ 8FC0 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8FC1 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8FC3 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8FC5              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8FC5 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FC7 CD CF 8F         call Bucle_2
 467+ 8FCA
 468+ 8FCA 43           2 ld b,e
 469+ 8FCB E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FCC FD E1            pop iy
 471+ 8FCE C9               ret
 472+ 8FCF
 473+ 8FCF               ; ---------- ----------
 474+ 8FCF
 475+ 8FCF 06 02        Bucle_2 ld b,2
 476+ 8FD1 FD 7E 00     2 ld a,(iy)
 477+ 8FD4 A6               and (hl)
 478+ 8FD5 28 02            jr z,1F
 479+ 8FD7 1E 81            ld e,$81
 480+ 8FD9 23           1 inc hl
 481+ 8FDA FD 23            inc iy
 482+ 8FDC 10 F3            djnz 2B
 483+ 8FDE C9               ret
 484+ 8FDF
 485+ 8FDF              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FDF              ;
 487+ 8FDF              ;   11/04/23
 488+ 8FDF              ;
 489+ 8FDF              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FDF              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FDF              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FDF              ;
 493+ 8FDF              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FDF
 495+ 8FDF              Compara_coordenadas_X
 496+ 8FDF
 497+ 8FDF              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FDF              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FDF
 500+ 8FDF              ; Preparamos registros:
 501+ 8FDF
 502+ 8FDF 21 CC 89         ld hl,Filas+6
 503+ 8FE2 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FE3 23               inc hl
 505+ 8FE4 23               inc hl
 506+ 8FE5 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FE6 43               ld b,e
 508+ 8FE7
 509+ 8FE7 21 DA 89         ld hl,Filas+20
 510+ 8FEA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 511+ 8FEB 21 2E 8A         ld hl,Coordenadas_X_Entidad
 512+ 8FEE CD 02 92         call Guarda_coordenadas_X
 513+ 8FF1
 514+ 8FF1              ; Preparamos registros:
 515+ 8FF1
 516+ 8FF1 21 92 85         ld hl,Amadeus_db+6
 517+ 8FF4 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 518+ 8FF5 23               inc hl
 519+ 8FF6 23               inc hl
 520+ 8FF7 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 521+ 8FF8 7B               ld a,e
 522+ 8FF9 08               ex af,af'
 523+ 8FFA 21 A0 85         ld hl,Amadeus_db+20
 524+ 8FFD 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 525+ 8FFE 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 526+ 9001 CD 02 92         call Guarda_coordenadas_X
 527+ 9004
 528+ 9004              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 529+ 9004              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 530+ 9004
 531+ 9004 04               inc b
 532+ 9005 05               dec b
 533+ 9006 28 04            jr z,1F
 534+ 9008 06 03            ld b,3
 535+ 900A 18 02            jr 2F
 536+ 900C 06 02        1 ld b,2
 537+ 900E 08           2 ex af,af'
 538+ 900F 3C               inc a
 539+ 9010 3D               dec a
 540+ 9011 28 04            jr z,5F
 541+ 9013 0E 03            ld c,3
 542+ 9015 18 02            jr 6F
 543+ 9017 0E 02        5 ld c,2
 544+ 9019 79           6 ld a,c
 545+ 901A 08               ex af,af'
 546+ 901B 11 2E 8A         ld de,Coordenadas_X_Entidad
 547+ 901E 1A           4 ld a,(de)
 548+ 901F 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 549+ 9022 BE           3 cp (hl)
 550+ 9023 28 0E            jr z,7F
 551+ 9025 23               inc hl
 552+ 9026 0D               dec c
 553+ 9027 20 F9            jr nz,3B
 554+ 9029 13               inc de
 555+ 902A 08               ex af,af'
 556+ 902B 4F               ld c,a
 557+ 902C 08               ex af,af'
 558+ 902D 10 EF            djnz 4B
 559+ 902F
 560+ 902F              ; Limpiamos los almacenes de coordenadas y salimos.
 561+ 902F
 562+ 902F CD 41 92     8 call Limpia_Coordenadas_X
 563+ 9032 C9               ret
 564+ 9033
 565+ 9033 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 9035 32 DF 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 9038 21 26 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 903B CB D6            set 2,(hl)
 569+ 903D 18 F0            jr 8B
 570+ 903F
 571+ 903F              ; -----------------------------------------------------------------------
 572+ 903F              ;
 573+ 903F              ;   17/04/23
 574+ 903F              ;
 575+ 903F
 576+ 903F              Detecta_colision_nave_entidad
 577+ 903F
 578+ 903F              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 903F
 580+ 903F 2A C8 89         ld hl,(Posicion_actual)
 581+ 9042 CD 7E 95         call Calcula_puntero_de_impresion
 582+ 9045
 583+ 9045              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 9045              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 9045
 586+ 9045 DD E5            push ix
 587+ 9047 E1               pop hl
 588+ 9048 E5               push hl
 589+ 9049
 590+ 9049              ; ----- ----- -----
 591+ 9049 1E 00            ld e,0                                         ; Indica impacto.
 592+ 904B 06 0A            ld b,10
 593+ 904D CD 7D 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9050 7B               ld a,e
 595+ 9051 FE 05            cp 5
 596+ 9053 38 0E            jr c,3F
 597+ 9055
 598+ 9055              ; LLegados a este punto:
 599+ 9055              ;
 600+ 9055              ;   HAY COLISIÓN !!!!!.
 601+ 9055              ;
 602+ 9055              ;   .db (Impacto) de Amadeus a "1".
 603+ 9055              ;   SET el bit3 de (Impacto2).
 604+ 9055              ;
 605+ 9055              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 9055
 607+ 9055 21 A5 85         ld hl,Amadeus_db+25
 608+ 9058 36 01            ld (hl),1
 609+ 905A 21 26 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 905D CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 905F CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9061 18 18            jr 1F
 613+ 9063
 614+ 9063              ; -----
 615+ 9063
 616+ 9063 E1           3 pop hl
 617+ 9064 CD 19 96         call NextScan
 618+ 9067 E5               push hl
 619+ 9068 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9069 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 906B 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 906D 30 0C            jr nc,1F
 623+ 906F              ;                                                  ; _ 2º scanline si esto es así.
 624+ 906F 10 DC            djnz 2B
 625+ 9071
 626+ 9071              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9071
 628+ 9071              ; LLegados a este punto:
 629+ 9071              ;
 630+ 9071              ;   NO HAY COLISIÓN !!!!!.
 631+ 9071              ;
 632+ 9071              ;   .db (Impacto) de Amadeus a "0".
 633+ 9071              ;   RES el bit2 de (Impacto2).
 634+ 9071              ;
 635+ 9071              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9071              ;   Lo colocamos a "0".
 637+ 9071
 638+ 9071 21 26 8A         ld hl,Impacto2
 639+ 9074 CB 96            res 2,(hl)
 640+ 9076 2A 27 8A         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9079 36 00            ld (hl),0
 642+ 907B
 643+ 907B E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 907C C9               ret
 645+ 907D
 646+ 907D               ; ---------- ----------
 647+ 907D
 648+ 907D C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 907E 3A C7 89         ld a,(Columns)
 650+ 9081 47               ld b,a
 651+ 9082 FD 7E 00     2 ld a,(iy)
 652+ 9085 BE               cp (hl)
 653+ 9086 28 01            jr z,1F
 654+ 9088
 655+ 9088 1C               inc e
 656+ 9089
 657+ 9089 23           1 inc hl
 658+ 908A FD 23            inc iy
 659+ 908C 10 F4            djnz 2B
 660+ 908E C1               pop bc
 661+ 908F C9               ret
 662+ 9090
 663+ 9090              ; -------------------------------------------------------------------------------------------------------------
 664+ 9090              ;
 665+ 9090              ;   13/03/23
 666+ 9090              ;
 667+ 9090              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9090              ;
 669+ 9090              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9090
 671+ 9090 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 9093 7E               ld a,(hl)
 673+ 9094 A7               and a
 674+ 9095 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 9096
 676+ 9096 44               ld b,h
 677+ 9097 4D               ld c,l
 678+ 9098 2A 1F 8A         ld hl,(Stack_snapshot_disparos)
 679+ 909B E5               push hl
 680+ 909C A7               and a
 681+ 909D ED 42            sbc hl,bc
 682+ 909F E5               push hl
 683+ 90A0 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 90A1
 685+ 90A1 E1               pop hl
 686+ 90A2 54               ld d,h
 687+ 90A3 5D               ld e,l
 688+ 90A4 1B               dec de
 689+ 90A5 ED B8            lddr                                                ; Limpiamos.
 690+ 90A7
 691+ 90A7 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 90AA 22 1F 8A         ld (Stack_snapshot_disparos),hl
 693+ 90AD
 694+ 90AD C9               ret
 695+ 90AE
 696+ 90AE              ; -------------------------------------------------------------------------------------------------------------
 697+ 90AE              ;
 698+ 90AE              ;   28/03/23
 699+ 90AE              ;
 700+ 90AE
 701+ 90AE 01 0A 85     Motor_de_disparos ld bc,Disparo_3A
 702+ 90B1 2A 24 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 90B4
 704+ 90B4 CD 2E 8D     2 call Extrae_address
 705+ 90B7 7E               ld a,(hl)
 706+ 90B8 A7               and a
 707+ 90B9 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 90BB
 709+ 90BB              ; ----- ----- ----- ----- ----- -----
 710+ 90BB
 711+ 90BB C5               push bc
 712+ 90BC CD 78 91         call foto_disparo_a_borrar
 713+ 90BF
 714+ 90BF              ; Existe colisión con este disparo???
 715+ 90BF
 716+ 90BF 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 90C0 7E               ld a,(hl)
 718+ 90C1 2B               dec hl
 719+ 90C2 E6 01            and 1
 720+ 90C4 28 1D            jr z,9F
 721+ 90C6
 722+ 90C6              ;   En este punto:
 723+ 90C6              ;
 724+ 90C6              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 90C6              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 90C6              ;   _con la entidad).
 727+ 90C6              ;
 728+ 90C6              ;   Disparo_2A defw 0                                ; Control.
 729+ 90C6              ;    defw 0                                          ; Puntero objeto.
 730+ 90C6              ;    defw 0                                          ; Puntero de impresión.
 731+ 90C6              ;    defw 0                                          ; Rutina de impresión.
 732+ 90C6
 733+ 90C6 E5               push hl
 734+ 90C7
 735+ 90C7 06 04            ld b,4
 736+ 90C9 23           19 inc hl
 737+ 90CA 10 FD            djnz 19B
 738+ 90CC
 739+ 90CC CD 2E 8D         call Extrae_address
 740+ 90CF CD 8F 9C         call Genera_coordenadas_disparo
 741+ 90D2
 742+ 90D2              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90D2
 744+ 90D2 21 29 8A         ld hl,Coordenadas_disparo_certero
 745+ 90D5 72               ld (hl),d
 746+ 90D6 23               inc hl
 747+ 90D7 73               ld (hl),e
 748+ 90D8
 749+ 90D8              ; Elimino el disparo de la base de datos.
 750+ 90D8
 751+ 90D8 E1               pop hl
 752+ 90D9 CD F7 91         call Elimina_disparo_de_base_de_datos
 753+ 90DC 21 26 8A         ld hl,Impacto2
 754+ 90DF CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90E1
 756+ 90E1 18 06            jr 11F
 757+ 90E3
 758+ 90E3 CD A1 91     9 call Mueve_disparo
 759+ 90E6 CD 78 91         call foto_disparo_a_borrar
 760+ 90E9
 761+ 90E9 C1           11 pop bc
 762+ 90EA 18 04            jr 7F
 763+ 90EC
 764+ 90EC              ; ----- ----- ----- ----- ----- -----
 765+ 90EC
 766+ 90EC ED 42        1 sbc hl,bc
 767+ 90EE 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90F0 2A 24 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90F3 23               inc hl
 770+ 90F4 23               inc hl
 771+ 90F5 22 24 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90F8 18 BA            jr 2B
 773+ 90FA CD F7 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 90FD
 775+ 90FD 01 72 85         ld bc,Disparo_11
 776+ 9100 2A 22 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 9103
 778+ 9103 CD 2E 8D     5 call Extrae_address
 779+ 9106 7E               ld a,(hl)
 780+ 9107 A7               and a
 781+ 9108 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 910A
 783+ 910A              ; ----- ----- ----- ----- ----- -----
 784+ 910A
 785+ 910A C5               push bc
 786+ 910B CD 78 91         call foto_disparo_a_borrar
 787+ 910E
 788+ 910E              ; Existe colisión con este disparo???
 789+ 910E
 790+ 910E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 910F 7E               ld a,(hl)
 792+ 9110 2B               dec hl
 793+ 9111 E6 01            and 1
 794+ 9113 28 48            jr z,10F
 795+ 9115
 796+ 9115              ;!    jr $ ;! STOP si el disparo tiene colisión.
 797+ 9115
 798+ 9115              ;! La colisión se produce con Amadeus???
 799+ 9115              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 800+ 9115
 801+ 9115 E5               push hl
 802+ 9116
 803+ 9116 06 04            ld b,4
 804+ 9118 23           16 inc hl
 805+ 9119 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 806+ 911B CD 2E 8D         call Extrae_address
 807+ 911E CD 8F 9C         call Genera_coordenadas_disparo
 808+ 9121
 809+ 9121 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 810+ 9122 FE 16            cp $16
 811+ 9124 38 22            jr c,15F
 812+ 9126
 813+ 9126              ; (Colisiones en filas 16 y 17).
 814+ 9126
 815+ 9126 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 816+ 9127
 817+ 9127              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 818+ 9127
 819+ 9127 21 92 85         ld hl,Amadeus_db+6
 820+ 912A 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 821+ 912B 23               inc hl
 822+ 912C 23               inc hl
 823+ 912D 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 824+ 912E 21 A0 85         ld hl,Amadeus_db+20
 825+ 9131 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 826+ 9132 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 827+ 9135 CD 02 92         call Guarda_coordenadas_X
 828+ 9138
 829+ 9138 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 830+ 9139
 831+ 9139              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 832+ 9139
 833+ 9139 06 03            ld b,3
 834+ 913B 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 835+ 913E 7E           18 ld a,(hl)
 836+ 913F BA               cp d
 837+ 9140 20 03            jr nz,17F
 838+ 9142
 839+ 9142              ; Colisión Amadeus !!!!!!!!!!
 840+ 9142
 841+ 9142 E1               pop hl
 842+ 9143 18 09            jr 14F
 843+ 9145
 844+ 9145 23           17 inc hl
 845+ 9146 10 F6            djnz 18B
 846+ 9148
 847+ 9148              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 848+ 9148              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 849+ 9148
 850+ 9148 E1           15 pop hl
 851+ 9149 23               inc hl
 852+ 914A 35               dec (hl)
 853+ 914B 2B               dec hl
 854+ 914C 18 0F            jr 10F
 855+ 914E
 856+ 914E              ; -----------------------debug
 857+ 914E
 858+ 914E              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 859+ 914E              ; _ almacén de coordenadas_X de Amadeus.
 860+ 914E
 861+ 914E E5           14 push hl
 862+ 914F CD F7 91         call Elimina_disparo_de_base_de_datos
 863+ 9152 21 26 8A         ld hl,Impacto2
 864+ 9155 CB CE            set 1,(hl)
 865+ 9157 CD 41 92         call Limpia_Coordenadas_X
 866+ 915A
 867+ 915A E1               pop hl
 868+ 915B 18 06            jr 12F
 869+ 915D
 870+ 915D CD A1 91     10 call Mueve_disparo
 871+ 9160 CD 78 91         call foto_disparo_a_borrar
 872+ 9163 C1           12 pop bc
 873+ 9164
 874+ 9164 18 04            jr 8F
 875+ 9166
 876+ 9166              ; ----- ----- ----- ----- ----- -----
 877+ 9166
 878+ 9166 ED 42        4 sbc hl,bc
 879+ 9168 28 0A            jr z,6F
 880+ 916A
 881+ 916A 2A 22 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 882+ 916D 23               inc hl
 883+ 916E 23               inc hl
 884+ 916F 22 22 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 885+ 9172 18 8F            jr 5B
 886+ 9174
 887+ 9174 CD F0 8C     6 call Inicia_Puntero_Disparo_Entidades
 888+ 9177 C9               ret
 889+ 9178
 890+ 9178              ; ------------------------------------------------------------------
 891+ 9178
 892+ 9178              foto_disparo_a_borrar
 893+ 9178
 894+ 9178 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 895+ 9179 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 896+ 917A C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 897+ 917B
 898+ 917B E5               push hl
 899+ 917C 23               inc hl
 900+ 917D 23               inc hl
 901+ 917E ED 73 19 8A      ld (Stack),sp
 902+ 9182 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 903+ 9183 FD E1            pop iy
 904+ 9185 DD E1            pop ix
 905+ 9187 E1               pop hl
 906+ 9188 ED 7B 19 8A      ld sp,(Stack)
 907+ 918C 3A 08 8A         ld a,(Ctrl_1)
 908+ 918F CB C7            set 0,a
 909+ 9191 32 08 8A         ld (Ctrl_1),a
 910+ 9194 CD A0 7F         call Guarda_foto_registros
 911+ 9197 3A 08 8A         ld a,(Ctrl_1)
 912+ 919A CB 87            res 0,a
 913+ 919C 32 08 8A         ld (Ctrl_1),a
 914+ 919F E1               pop hl
 915+ 91A0 C9               ret
 916+ 91A1
 917+ 91A1 E5           Mueve_disparo push hl
 918+ 91A2 7E               ld a,(hl)
 919+ 91A3 06 04            ld b,4
 920+ 91A5 23           1 inc hl
 921+ 91A6 10 FD            djnz 1B
 922+ 91A8
 923+ 91A8              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 924+ 91A8
 925+ 91A8 CD 2E 8D         call Extrae_address
 926+ 91AB
 927+ 91AB E6 01            and 1
 928+ 91AD 28 2E            jr z,2F
 929+ 91AF
 930+ 91AF              ; Disparo hacia arriba, (Amadeus).
 931+ 91AF
 932+ 91AF              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 933+ 91AF              ; _ de la dificultad.
 934+ 91AF
 935+ 91AF CD 28 96         call PreviousScan
 936+ 91B2 CD 28 96         call PreviousScan
 937+ 91B5 CD 28 96         call PreviousScan
 938+ 91B8 CD 28 96         call PreviousScan
 939+ 91BB
 940+ 91BB              ; Detecta si el disparo de Amadeus sale de pantalla:
 941+ 91BB
 942+ 91BB 7C               ld a,h
 943+ 91BC FE 40            cp $40
 944+ 91BE 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 945+ 91C0
 946+ 91C0              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 947+ 91C0
 948+ 91C0 EB               ex de,hl
 949+ 91C1 06 04            ld b,4
 950+ 91C3 2B           6 dec hl
 951+ 91C4 10 FD            djnz 6B
 952+ 91C6
 953+ 91C6 CD F7 91         call Elimina_disparo_de_base_de_datos
 954+ 91C9 E1               pop hl
 955+ 91CA 18 10            jr 7F
 956+ 91CC
 957+ 91CC              ; Se ha desplazado la bala, compruebo colisión.
 958+ 91CC
 959+ 91CC D5           3 push de
 960+ 91CD C5               push bc
 961+ 91CE
 962+ 91CE CD AE 8F         call Comprueba_Colision
 963+ 91D1
 964+ 91D1              ; B="$80", no hay colisión. B="$81", existe colisión.
 965+ 91D1
 966+ 91D1 78               ld a,b
 967+ 91D2
 968+ 91D2 C1               pop bc
 969+ 91D3 D1               pop de
 970+ 91D4
 971+ 91D4 EB               ex de,hl
 972+ 91D5
 973+ 91D5 73               ld (hl),e
 974+ 91D6 23               inc hl
 975+ 91D7 72               ld (hl),d
 976+ 91D8
 977+ 91D8 E1           4 pop hl
 978+ 91D9 23               inc hl
 979+ 91DA 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 980+ 91DB 2B               dec hl
 981+ 91DC C9           7 ret
 982+ 91DD
 983+ 91DD              ; Disparo hacia abajo, (Entidad).
 984+ 91DD
 985+ 91DD              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 986+ 91DD              ;! _ de la dificultad.
 987+ 91DD
 988+ 91DD CD 19 96     2 call NextScan
 989+ 91E0 CD 19 96         call NextScan
 990+ 91E3 CD 19 96         call NextScan
 991+ 91E6              ;    call NextScan
 992+ 91E6
 993+ 91E6              ; Detecta si el disparo de la entidad sale de la pantalla.
 994+ 91E6
 995+ 91E6 7C               ld a,h
 996+ 91E7 FE 58            cp $58
 997+ 91E9 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 998+ 91EB
 999+ 91EB EB               ex de,hl
1000+ 91EC 06 04            ld b,4
1001+ 91EE 2B           5 dec hl
1002+ 91EF 10 FD            djnz 5B
1003+ 91F1
1004+ 91F1 CD F7 91         call Elimina_disparo_de_base_de_datos
1005+ 91F4 E1               pop hl
1006+ 91F5 18 E5            jr 7B
1007+ 91F7
1008+ 91F7              ; HL apunta al primer byte de la base de datos del disparo.
1009+ 91F7
1010+ 91F7 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1011+ 91FA AF               xor a
1012+ 91FB 77               ld (hl),a
1013+ 91FC 54               ld d,h
1014+ 91FD 5D               ld e,l
1015+ 91FE 13               inc de
1016+ 91FF ED B0            ldir
1017+ 9201 C9               ret
1018+ 9202
1019+ 9202              ; -----------------------------------------------------------------
1020+ 9202              ;
1021+ 9202              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1022+ 9202              ;
1023+ 9202              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1024+ 9202              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1025+ 9202              ;
1026+ 9202              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1027+ 9202              ;
1028+ 9202              ;   INPUTS:
1029+ 9202              ;
1030+ 9202              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1031+ 9202              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1032+ 9202              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1033+ 9202
1034+ 9202              ;   MODIFICA: A, HL, DE y C
1035+ 9202
1036+ 9202 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1037+ 9203 79               ld a,c
1038+ 9204 E6 01            and 1
1039+ 9206 20 03            jr nz,1F
1040+ 9208 14               inc d
1041+ 9209 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1042+ 920B
1043+ 920B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1044+ 920B              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1045+ 920B
1046+ 920B 15           1 dec d
1047+ 920C 23           2 inc hl
1048+ 920D 72               ld (hl),d
1049+ 920E
1050+ 920E 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1051+ 920F A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1052+ 9210 C8               ret z
1053+ 9211
1054+ 9211 AF               xor a
1055+ 9212 5F               ld e,a
1056+ 9213 18 ED            jr Guarda_coordenadas_X
1057+ 9215
1058+ 9215              ; -----------------------------------------------------------------
1059+ 9215              ;
1060+ 9215              ;   12/04/23
1061+ 9215              ;
1062+ 9215
1063+ 9215 3A 26 8A     Selector_de_impactos ld a,(Impacto2)
1064+ 9218 A7               and a
1065+ 9219 C8               ret z
1066+ 921A
1067+ 921A FE 04            cp 4
1068+ 921C 20 09            jr nz,1F
1069+ 921E
1070+ 921E
1071+ 921E              ; La colisión se produce por contacto entre Amadeus y una entidad.
1072+ 921E
1073+ 921E CD 3F 90         call Detecta_colision_nave_entidad
1074+ 9221
1075+ 9221 21 26 8A         ld hl,Impacto2
1076+ 9224 CB 5E            bit 3,(hl)
1077+ 9226 C0               ret nz                                               ; Existe colisión, RET.
1078+ 9227
1079+ 9227              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1080+ 9227              ; Primero analizamos si algún disparo impacta en Amadeus.
1081+ 9227
1082+ 9227 21 26 8A     1 ld hl,Impacto2
1083+ 922A CB 4E            bit 1,(hl)
1084+ 922C 28 07            jr z,2F
1085+ 922E
1086+ 922E 21 A5 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1087+ 9231 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1088+ 9233 18 0B            jr 3F
1089+ 9235
1090+ 9235 21 26 8A     2 ld hl,Impacto2
1091+ 9238 CB 46            bit 0,(hl)
1092+ 923A C8               ret z
1093+ 923B
1094+ 923B              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1095+ 923B
1096+ 923B 21 08 8A         ld hl,Ctrl_1
1097+ 923E CB D6            set 2,(hl)
1098+ 9240
1099+ 9240 C9           3 ret
1100+ 9241
1101+ 9241              ; -----------------------------------------------------------------
1102+ 9241              ;
1103+ 9241              ;   16/04/23
1104+ 9241              ;
1105+ 9241
1106+ 9241 AF           Limpia_Coordenadas_X xor a
1107+ 9242 06 06            ld b,6
1108+ 9244 21 2B 8A         ld hl,Coordenadas_X_Amadeus
1109+ 9247 77           1 ld (hl),a
1110+ 9248 23               inc hl
1111+ 9249 10 FC            djnz 1B
1112+ 924B C9               ret
1113+ 924C
1114+ 924C              ; -----------------------------------------------------------------
1115+ 924C              ;
1116+ 924C              ;   25/04/23
1117+ 924C              ;
1118+ 924C
1119+ 924C              Determina_resultado_comparativa
1120+ 924C
1121+ 924C              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1122+ 924C              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1123+ 924C              ;
1124+ 924C              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1125+ 924C              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1126+ 924C              ;
1127+ 924C              ;   SBC HL,DE
1128+ 924C
1129+ 924C              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1130+ 924C              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1131+ 924C
1132+ 924C              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1133+ 924C              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1134+ 924C
1135+ 924C
1136+ 924C 3A DA 89         ld a,(Cuad_objeto)
1137+ 924F FE 02            cp 2
1138+ 9251 28 26            jr z,2F
1139+ 9253 38 24            jr c,2F
1140+ 9255
1141+ 9255              ; Cuadrantes 3º y 4º
1142+ 9255
1143+ 9255 E6 01            and 1
1144+ 9257 28 10            jr z,4F
1145+ 9259
1146+ 9259              ; Cuadrante 3º
1147+ 9259
1148+ 9259 7C               ld a,h
1149+ 925A 06 00            ld b,0
1150+ 925C
1151+ 925C CD E7 92         call Compara_cositas_H3
1152+ 925F
1153+ 925F 04               inc b
1154+ 9260 05               dec b
1155+ 9261 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1156+ 9262
1157+ 9262 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1158+ 9263 06 00            ld b,0
1159+ 9265
1160+ 9265 CD F9 92         call Compara_cositas_L3
1161+ 9268 C9               ret
1162+ 9269
1163+ 9269              ; Cuadrante 4º
1164+ 9269
1165+ 9269 7C           4 ld a,h
1166+ 926A 06 00            ld b,0
1167+ 926C
1168+ 926C CD 0B 93         call Compara_cositas_H4
1169+ 926F
1170+ 926F 04               inc b
1171+ 9270 05               dec b
1172+ 9271 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1173+ 9272
1174+ 9272 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1175+ 9273 06 00            ld b,0
1176+ 9275
1177+ 9275 CD 21 93         call Compara_cositas_L4
1178+ 9278 C9               ret
1179+ 9279
1180+ 9279              ; Cuadrantes 1º y 2º.
1181+ 9279
1182+ 9279 28 10        2 jr z,3F
1183+ 927B
1184+ 927B              ; 1er Cuadrante
1185+ 927B
1186+ 927B 7C               ld a,h
1187+ 927C 06 00            ld b,0
1188+ 927E
1189+ 927E CD BF 92         call Compara_cositas_H1
1190+ 9281
1191+ 9281 04               inc b
1192+ 9282 05               dec b
1193+ 9283 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1194+ 9284
1195+ 9284 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1196+ 9285 06 00            ld b,0
1197+ 9287
1198+ 9287 CD D5 92         call Compara_cositas_L1
1199+ 928A C9               ret
1200+ 928B
1201+ 928B
1202+ 928B              ; 2º Cuadrante
1203+ 928B
1204+ 928B 7C           3 ld a,h
1205+ 928C 06 00            ld b,0
1206+ 928E
1207+ 928E CD 9B 92         call Compara_cositas_H2
1208+ 9291
1209+ 9291 04               inc b
1210+ 9292 05               dec b
1211+ 9293 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1212+ 9294
1213+ 9294 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1214+ 9295 06 00            ld b,0
1215+ 9297
1216+ 9297 CD AD 92         call Compara_cositas_L2
1217+ 929A C9               ret
1218+ 929B
1219+ 929B A7           Compara_cositas_H2 and a
1220+ 929C 28 0D            jr z,1F
1221+ 929E              ;    cp $fd
1222+ 929E              ;    jr z,1F
1223+ 929E              ;    cp $fe
1224+ 929E              ;    jr z,1F
1225+ 929E FE FF            cp $ff
1226+ 92A0 28 09            jr z,1F
1227+ 92A2 FE 01            cp $01
1228+ 92A4 28 05            jr z,1F
1229+ 92A6 FE 02            cp $02
1230+ 92A8 28 01            jr z,1F
1231+ 92AA C0               ret nz
1232+ 92AB 04           1 inc b
1233+ 92AC C9               ret
1234+ 92AD
1235+ 92AD A7           Compara_cositas_L2 and a
1236+ 92AE 28 0D            jr z,1F
1237+ 92B0              ;    cp $fd
1238+ 92B0              ;    jr z,1F
1239+ 92B0 FE FE            cp $fe
1240+ 92B2 28 09            jr z,1F
1241+ 92B4 FE FF            cp $ff
1242+ 92B6 28 05            jr z,1F
1243+ 92B8 FE 01            cp $01
1244+ 92BA 28 01            jr z,1F
1245+ 92BC              ;    cp $02
1246+ 92BC              ;    jr z,1F
1247+ 92BC C0               ret nz
1248+ 92BD 04           1 inc b
1249+ 92BE C9               ret
1250+ 92BF
1251+ 92BF A7           Compara_cositas_H1 and a
1252+ 92C0 28 11            jr z,1F
1253+ 92C2              ;    cp $fd
1254+ 92C2              ;    jr z,1F
1255+ 92C2              ;    cp $fe
1256+ 92C2              ;    jr z,1F
1257+ 92C2 FE FF            cp $ff
1258+ 92C4 28 0D            jr z,1F
1259+ 92C6 FE 01            cp $01
1260+ 92C8 28 09            jr z,1F
1261+ 92CA FE 02            cp $02
1262+ 92CC 28 05            jr z,1F
1263+ 92CE FE 03            cp $03
1264+ 92D0 28 01            jr z,1F
1265+ 92D2 C0               ret nz
1266+ 92D3 04           1 inc b
1267+ 92D4 C9               ret
1268+ 92D5
1269+ 92D5 A7           Compara_cositas_L1 and a
1270+ 92D6 28 0D            jr z,1F
1271+ 92D8              ;    cp $fd
1272+ 92D8              ;    jr z,1F
1273+ 92D8              ;    cp $fe
1274+ 92D8              ;    jr z,1F
1275+ 92D8              ;    cp $ff
1276+ 92D8              ;    jr z,1F
1277+ 92D8 FE 01            cp $01
1278+ 92DA 28 09            jr z,1F
1279+ 92DC FE 02            cp $02
1280+ 92DE 28 05            jr z,1F
1281+ 92E0 FE 03            cp $03
1282+ 92E2 28 01            jr z,1F
1283+ 92E4 C0               ret nz
1284+ 92E5 04           1 inc b
1285+ 92E6 C9               ret
1286+ 92E7
1287+ 92E7 A7           Compara_cositas_H3 and a
1288+ 92E8 28 0D            jr z,1F
1289+ 92EA              ;    cp $fd
1290+ 92EA              ;    jr z,1F
1291+ 92EA FE FE            cp $fe
1292+ 92EC 28 09            jr z,1F
1293+ 92EE FE FF            cp $ff
1294+ 92F0 28 05            jr z,1F
1295+ 92F2 FE 01            cp $01
1296+ 92F4 28 01            jr z,1F
1297+ 92F6              ;    cp $02
1298+ 92F6              ;    jr z,1F
1299+ 92F6              ;    cp $03
1300+ 92F6              ;    jr z,1F
1301+ 92F6 C0               ret nz
1302+ 92F7 04           1 inc b
1303+ 92F8 C9               ret
1304+ 92F9
1305+ 92F9 A7           Compara_cositas_L3 and a
1306+ 92FA 28 0D            jr z,1F
1307+ 92FC              ;    cp $fd
1308+ 92FC              ;    jr z,1F
1309+ 92FC              ;    cp $fe
1310+ 92FC              ;    jr z,1F
1311+ 92FC              ;    cp $ff
1312+ 92FC              ;    jr z,1F
1313+ 92FC FE 01            cp $01
1314+ 92FE 28 09            jr z,1F
1315+ 9300 FE 02            cp $02
1316+ 9302 28 05            jr z,1F
1317+ 9304 FE 03            cp $03
1318+ 9306 28 01            jr z,1F
1319+ 9308 C0               ret nz
1320+ 9309 04           1 inc b
1321+ 930A C9               ret
1322+ 930B
1323+ 930B A7           Compara_cositas_H4 and a
1324+ 930C 28 11            jr z,1F
1325+ 930E FE FD            cp $fd
1326+ 9310 28 0D            jr z,1F
1327+ 9312 FE FE            cp $fe
1328+ 9314 28 09            jr z,1F
1329+ 9316 FE FF            cp $ff
1330+ 9318 28 05            jr z,1F
1331+ 931A FE 01            cp $01
1332+ 931C 28 01            jr z,1F
1333+ 931E              ;    cp $02
1334+ 931E              ;    jr z,1F
1335+ 931E              ;    cp $03
1336+ 931E              ;    jr z,1F
1337+ 931E C0               ret nz
1338+ 931F 04           1 inc b
1339+ 9320 C9               ret
1340+ 9321
1341+ 9321 A7           Compara_cositas_L4 and a
1342+ 9322 28 0D            jr z,1F
1343+ 9324              ;    cp $fd
1344+ 9324              ;    jr z,1F
1345+ 9324 FE FE            cp $fe
1346+ 9326 28 09            jr z,1F
1347+ 9328 FE FF            cp $ff
1348+ 932A 28 05            jr z,1F
1349+ 932C FE 01            cp $01
1350+ 932E 28 01            jr z,1F
1351+ 9330              ;    cp $02
1352+ 9330              ;    jr z,1F
1353+ 9330              ;    cp $03
1354+ 9330              ;    jr z,1F
1355+ 9330 C0               ret nz
1356+ 9331 04           1 inc b
1357+ 9332 C9               ret
# file closed: Disparo.asm
1281  9333              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9333              ; ******************************************************************************************************************************************************************************************
   2+ 9333              ;
   3+ 9333              ; 26/06/23
   4+ 9333              ;
   5+ 9333              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9333
   7+ 9333 CD 0D 96     Draw call Prepara_draw
   8+ 9336 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9337 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 9338 28 05        	jr z,2F
  11+ 933A
  12+ 933A 3A DA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 933D 18 0C        	jr 1F
  14+ 933F 2A D8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9342 22 C8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9345 CD D4 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 9348              ;													; _la esquina superior izquierda de la pantalla.
  18+ 9348 CD 78 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  19+ 934B 3A F4 89     1 ld a,(Ctrl_0)
  20+ 934E CB 6F        	bit 5,a
  21+ 9350 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9352
  23+ 9352 CD 6A 93     	call Comprueba_limite_horizontal
  24+ 9355 CD FA 93     	call Comprueba_limite_vertical
  25+ 9358
  26+ 9358              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 9358
  28+ 9358 CD 47 95     3 call calcula_CColumnass
  29+ 935B CD 7E 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 935E CD D3 95     	call Define_rutina_de_impresion
  31+ 9361
  32+ 9361 3A F4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9364 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 9366 32 F4 89     	ld (Ctrl_0),a
  35+ 9369
  36+ 9369 C9           	ret
  37+ 936A
  38+ 936A              ; *******************************************************************************************************************************************************************************************
  39+ 936A              ;	21/01/23
  40+ 936A              ;
  41+ 936A              ; 	Comprueba_limite_horizontal.
  42+ 936A              ;
  43+ 936A              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 936A              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 936A              ;
  46+ 936A              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 936A              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 936A              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 936A              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 936A
  51+ 936A
  52+ 936A
  53+ 936A 3A F4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 936D CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 936F 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9371 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9373 32 F4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 9376 18 09            jr 6F
  59+ 9378 CB 5F        1 bit 3,a
  60+ 937A 28 0A            jr z,2F
  61+ 937C E6 F7            and $f7
  62+ 937E 32 F4 89         ld (Ctrl_0),a
  63+ 9381 CD D4 94     6 call Inicializacion
  64+ 9384 18 5B            jr 5F
  65+ 9386 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 9387
  67+ 9387              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 9387              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 9387
  70+ 9387 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 9388 2A 03 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 938B CD D9 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 938E 67           	ld h,a
  74+ 938F EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9390 CD D9 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9393 67           	ld h,a
  77+ 9394 A7           	and a
  78+ 9395 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 9397 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 9398 3A DA 89     	ld a,(Cuad_objeto)
  81+ 939B FE 02        	cp 2
  82+ 939D 38 1E        	jr c,3F
  83+ 939F 28 1C        	jr z,3F
  84+ 93A1 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 93A2 28 23            jr z,7F
  86+ 93A4 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 93A6 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 93A8 E1           	pop hl
  89+ 93A9
  90+ 93A9              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 93A9              ; _para indicar con E="2" en caso necesario.
  92+ 93A9
  93+ 93A9 E5               push hl
  94+ 93AA C5               push bc
  95+ 93AB CD D9 98     	call calcula_tercio
  96+ 93AE FE 01        	cp 1
  97+ 93B0 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 93B2 CD E2 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 93B5 28 26            jr z,9F
 100+ 93B7 38 24            jr c,9F
 101+ 93B9 1E 00        11 ld e,0
 102+ 93BB 18 22            jr 8F
 103+ 93BD 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 93BE 28 07        	jr z, 7F
 105+ 93C0 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 93C2 1E 00         	ld e,0
 107+ 93C4 E1           	pop hl
 108+ 93C5 18 04        	jr 4F
 109+ 93C7 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93C9 18 15            jr 10F
 111+ 93CB
 112+ 93CB              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93CB              ; _para indicar con E="2" en caso necesario.
 114+ 93CB
 115+ 93CB E5           4 push hl
 116+ 93CC C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93CD CD D9 98     	call calcula_tercio
 118+ 93D0 FE 01        	cp 1
 119+ 93D2 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93D4 CD E2 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93D7 28 04            jr z,9F
 122+ 93D9 30 02            jr nc,9F
 123+ 93DB 18 02        	jr 8F
 124+ 93DD 1E 02        9 ld e,2
 125+ 93DF C1           8 pop bc
 126+ 93E0 E1           10 pop hl
 127+ 93E1 C9           5 ret
 128+ 93E2
 129+ 93E2              ; --------------------
 130+ 93E2              ;
 131+ 93E2              ; 25/08/22
 132+ 93E2
 133+ 93E2 CD D9 98     Comprueba_centro call calcula_tercio
 134+ 93E5 67               ld h,a
 135+ 93E6 08           	ex af,af
 136+ 93E7 FE 02        	cp 2
 137+ 93E9 38 07        	jr c,1F
 138+ 93EB 28 05        	jr z,1F
 139+ 93ED 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93F0 18 03        	jr 2F
 141+ 93F2 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93F5 08           2 ex af,af
 143+ 93F6 A7               and a
 144+ 93F7 ED 42            sbc hl,bc
 145+ 93F9 C9               ret
 146+ 93FA
 147+ 93FA              ; *********************************************************************************************************************************************************************************************
 148+ 93FA              ;
 149+ 93FA              ;   16/8/22
 150+ 93FA              ;
 151+ 93FA              ;	Comprueba_limite_vertical
 152+ 93FA              ;
 153+ 93FA              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93FA              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93FA              ;
 156+ 93FA
 157+ 93FA 2A C8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 93FD 7D           	ld a,l
 159+ 93FE E6 1F        	and $1F
 160+ 9400 57           	ld d,a
 161+ 9401 3A 05 8A     	ld a,(Limite_vertical)
 162+ 9404 BA           	cp d 											; Límite - Posición.
 163+ 9405 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 9406 3A DA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 9409 CB 47        	bit 0,a
 166+ 940B 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 940D
 168+ 940D              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 940D
 170+ 940D 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 940E 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9410
 173+ 9410              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9410              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9410
 176+ 9410 3A CC 89         ld a,(Coordenada_X)
 177+ 9413 16 0F            ld d,Centro_izquierda
 178+ 9415 A7               and a
 179+ 9416 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 9417 28 1E            jr z,3F
 181+ 9419 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 941B              ;                                                    ; _salimos sin modificar nada.
 183+ 941B 18 0E            jr 2F
 184+ 941D 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 941E 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9420
 187+ 9420              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9420              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9420
 190+ 9420 3A CC 89         ld a,(Coordenada_X)
 191+ 9423 16 10            ld d,Centro_derecha
 192+ 9425 A7               and a
 193+ 9426 92               sub d
 194+ 9427 28 0E            jr z,3F
 195+ 9429 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 942B              ;                                                    ; _salimos sin modificar nada.
 197+ 942B CB 43        2 bit 0,e
 198+ 942D 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 942F C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9430 CD C4 94         call Modificaccionne
 201+ 9433 C1           	pop bc
 202+ 9434 CD D4 94         call Inicializacion
 203+ 9437 C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 9438
 205+ 9438              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 9438
 207+ 9438 C5           4 push bc
 208+ 9439 01 C7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 943C 0A           	ld a,(bc)
 210+ 943D 3D           	dec a
 211+ 943E 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 943F 7D           	ld a,l
 213+ 9440 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9441 CB 47        	bit 0,a
 215+ 9443 28 03        	jr z,5F
 216+ 9445 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 9446 18 2E        	jr 7F
 218+ 9448
 219+ 9448              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 9448
 221+ 9448 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9449 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 944A 3A F4 89     	ld a,(Ctrl_0)
 224+ 944D CB 4F        	bit 1,a
 225+ 944F 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9451 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9452
 228+ 9452              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9452
 230+ 9452 1C               inc e
 231+ 9453 1D               dec e
 232+ 9454 20 07            jr nz,12F
 233+ 9456 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 9457 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 9458 22 C8 89     	ld (Posicion_actual),hl
 236+ 945B 18 44        13 jr 9F
 237+ 945D CB 43        12 bit 0,e
 238+ 945F 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9461              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9461 C1           	pop bc
 241+ 9462 18 D3        	jr 3B
 242+ 9464 80           14 add b
 243+ 9465 6F               ld l,a
 244+ 9466 22 C8 89     	ld (Posicion_actual),hl
 245+ 9469 CD C4 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 946C 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 946E E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9470 32 F4 89         ld (Ctrl_0),a
 249+ 9473 F1           	pop af
 250+ 9474 18 2B        	jr 9F
 251+ 9476
 252+ 9476              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 9476
 254+ 9476 F5           7 push af
 255+ 9477 3A F4 89     	ld a,(Ctrl_0)
 256+ 947A CB 47        	bit 0,a
 257+ 947C 20 1D        	jr nz,8F
 258+ 947E F1           	pop af
 259+ 947F
 260+ 947F              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 947F
 262+ 947F 1C           	inc e
 263+ 9480 1D               dec e
 264+ 9481 20 07            jr nz,10F
 265+ 9483 90           	sub b
 266+ 9484 6F               ld l,a
 267+ 9485 22 C8 89     	ld (Posicion_actual),hl
 268+ 9488 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 948A              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 948A CB 43        10 bit 0,e
 271+ 948C 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 948E              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 948E C1           	pop bc
 274+ 948F 18 A6        	jr 3B
 275+ 9491 90           16 sub b
 276+ 9492 6F               ld l,a
 277+ 9493 22 C8 89     	ld (Posicion_actual),hl
 278+ 9496 CD C4 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 9499 18 06            jr 9F
 280+ 949B E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 949D 32 F4 89         ld (Ctrl_0),a
 282+ 94A0 F1           	pop af
 283+ 94A1 C1           9 pop bc
 284+ 94A2 1E 00        	ld e,0
 285+ 94A4 CD D4 94         call Inicializacion
 286+ 94A7 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 94A8 08           	ex af,af
 288+ 94A9 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 94AA 18 8B            jr 3B
 290+ 94AC
 291+ 94AC              ; --------------------
 292+ 94AC
 293+ 94AC 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 94AE CD 28 96     1 call PreviousScan
 295+ 94B1 10 FB            djnz 1B
 296+ 94B3 22 C8 89     	ld (Posicion_actual),hl
 297+ 94B6 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 94B7 C9           	ret
 299+ 94B8
 300+ 94B8              ; --------------------
 301+ 94B8
 302+ 94B8 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 94BA CD 19 96     1 call NextScan
 304+ 94BD 10 FB            djnz 1B
 305+ 94BF 22 C8 89     	ld (Posicion_actual),hl
 306+ 94C2 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94C3 C9           	ret
 308+ 94C4
 309+ 94C4              ; --------------------
 310+ 94C4              ;
 311+ 94C4              ;	22/01/23
 312+ 94C4              ;
 313+ 94C4              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94C4              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94C4              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94C4
 317+ 94C4
 318+ 94C4              Modificaccionne
 319+ 94C4
 320+ 94C4 3A DA 89     	ld a,(Cuad_objeto)
 321+ 94C7 FE 02        	cp 2
 322+ 94C9 CC AC 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94CC DC AC 94         call c,Modifica_Pos_actual
 324+ 94CF C8           	ret z
 325+ 94D0 CD B8 94         call Modifica_Pos_actual2
 326+ 94D3 C9               ret
 327+ 94D4
 328+ 94D4              ; *************************************************************************************************************************************************************************************************
 329+ 94D4              ;
 330+ 94D4              ;	13/8/22
 331+ 94D4              ;
 332+ 94D4              ;	Inicializacion
 333+ 94D4              ;
 334+ 94D4              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94D4              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94D4              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94D4              ;
 338+ 94D4              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94D4              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94D4              ;	_ desaparece/aparece.
 341+ 94D4
 342+ 94D4              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94D4              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94D4              ;
 345+ 94D4              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94D4              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94D4              ; 		   [E] ="0"
 348+ 94D4
 349+ 94D4              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94D4
 351+ 94D4 CD D9 98     Inicializacion call calcula_tercio
 352+ 94D7 28 36        	jr z,primit
 353+ 94D9 E6 02        	and 2
 354+ 94DB 20 07        	jr nz,segmit
 355+ 94DD 7D           	ld a,l
 356+ 94DE FE 7F        	cp $7f
 357+ 94E0 38 2D        	jr c,primit
 358+ 94E2 28 2B        	jr z,primit
 359+ 94E4 CD 41 95     segmit call column
 360+ 94E7 38 13        	jr c,tercuad
 361+ 94E9 3E 04        cuarcuad ld a,4
 362+ 94EB 32 DA 89     	ld (Cuad_objeto),a
 363+ 94EE 21 20 48     	ld hl,$4820
 364+ 94F1 22 03 8A     	ld (Limite_horizontal),hl
 365+ 94F4 21 05 8A     	ld hl,Limite_vertical
 366+ 94F7 36 0D        	ld (hl),$0d
 367+ 94F9 08           	ex af,af
 368+ 94FA 18 3C        	jr 1F
 369+ 94FC              tercuad
 370+ 94FC 3E 03        	ld a,3
 371+ 94FE 32 DA 89     	ld (Cuad_objeto),a
 372+ 9501 21 20 48     	ld hl,$4820
 373+ 9504 22 03 8A     	ld (Limite_horizontal),hl
 374+ 9507 21 05 8A     	ld hl,Limite_vertical
 375+ 950A 36 12        	ld (hl),$12
 376+ 950C 08           	ex af,af
 377+ 950D 18 29        	jr 1F
 378+ 950F CD 41 95     primit call column
 379+ 9512 38 13        	jr c, primcuad
 380+ 9514              segcuad
 381+ 9514 3E 02        	ld a,2
 382+ 9516 32 DA 89     	ld (Cuad_objeto),a
 383+ 9519 21 C0 4F     	ld hl,$4fc0
 384+ 951C 22 03 8A     	ld (Limite_horizontal),hl
 385+ 951F 21 05 8A     	ld hl,Limite_vertical
 386+ 9522 36 0D        	ld (hl),$0d
 387+ 9524 08           	ex af,af
 388+ 9525 18 11        	jr 1F
 389+ 9527              primcuad
 390+ 9527 3E 01        	ld a,1
 391+ 9529 32 DA 89     	ld (Cuad_objeto),a
 392+ 952C 21 C0 4F     	ld hl,$4fc0
 393+ 952F 22 03 8A     	ld (Limite_horizontal),hl
 394+ 9532 21 05 8A     	ld hl,Limite_vertical
 395+ 9535 36 12        	ld (hl),$12
 396+ 9537 08           	ex af,af
 397+ 9538 CD 64 9C     1 call Genera_coordenadas
 398+ 953B 21 F4 89     	ld hl,Ctrl_0
 399+ 953E CB EE        	set 5,(hl)
 400+ 9540 C9           	ret
 401+ 9541
 402+ 9541              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9541
 404+ 9541              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9541              ;
 406+ 9541              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9541
 408+ 9541 7D           column ld a,l
 409+ 9542 E6 1F        	and $1f
 410+ 9544 FE 10         	cp $10
 411+ 9546 C9            	ret
 412+ 9547
 413+ 9547              ; --------------------------------------------------------------------------------------------------------------------
 414+ 9547              ;
 415+ 9547              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 9547              ;
 417+ 9547              ; 14/12/22
 418+ 9547              ;
 419+ 9547              ;	Modifica: A y BC.
 420+ 9547
 421+ 9547 3A DA 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 954A E6 01        	and 1
 423+ 954C 28 17        	jr z,1F
 424+ 954E
 425+ 954E              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 954E
 427+ 954E 3A CC 89     	ld a,(Coordenada_X)
 428+ 9551 47           	ld b,a
 429+ 9552 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9553 79           	ld a,c
 431+ 9554 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9555 38 08        	jr c,2F
 433+ 9557 47           	ld b,a
 434+ 9558 79           	ld a,c
 435+ 9559 90           	sub b
 436+ 955A 32 02 8A     	ld (Columnas),a
 437+ 955D 18 1B        	jr 4F
 438+ 955F 79           2 ld a,c
 439+ 9560 32 02 8A     	ld (Columnas),a
 440+ 9563 18 15        	jr 4F
 441+ 9565
 442+ 9565              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9565
 444+ 9565 3A CC 89     1 ld a,(Coordenada_X)
 445+ 9568 81           	add c
 446+ 9569 3D           	dec a
 447+ 956A D6 1F        	sub $1f
 448+ 956C 38 08        	jr c,3F
 449+ 956E 47           	ld b,a
 450+ 956F 79           	ld a,c
 451+ 9570 90           	sub b
 452+ 9571 32 02 8A     	ld (Columnas),a
 453+ 9574 18 04        	jr 4F
 454+ 9576 79           3 ld a,c
 455+ 9577 32 02 8A     	ld (Columnas),a
 456+ 957A D9           4 exx
 457+ 957B 4F           	ld c,a
 458+ 957C D9           	exx
 459+ 957D C9            ret
 460+ 957E
 461+ 957E              ; --------------------------------------------------------------------------------------------------------------------
 462+ 957E              ;
 463+ 957E              ; 7/1/23
 464+ 957E              ;
 465+ 957E              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 957E              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 957E              ;
 468+ 957E              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 957E              ;	DESTRUYE: HL,B Y A.
 470+ 957E
 471+ 957E 3A DA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9581 FE 02        	cp 2
 473+ 9583 38 18        	jr c,1F
 474+ 9585 28 16        	jr z,1F
 475+ 9587 E6 01        	and 1
 476+ 9589 28 0D        	jr z,3F
 477+ 958B
 478+ 958B              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 958B
 480+ 958B CD C7 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 958E
 482+ 958E 7D           9 ld a,l
 483+ 958F E6 1F        	and $1f
 484+ 9591 28 2A        	jr z,7F
 485+ 9593 2B           	dec hl
 486+ 9594 10 F8        	djnz 9B
 487+ 9596 18 25        	jr 7F
 488+ 9598
 489+ 9598              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 9598
 491+ 9598 2A C8 89     3 ld hl,(Posicion_actual)
 492+ 959B 18 20        	jr 7F
 493+ 959D
 494+ 959D 28 14        1 jr z,2F
 495+ 959F
 496+ 959F              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 959F
 498+ 959F CD C7 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 95A2
 500+ 95A2 7D           4 ld a,l
 501+ 95A3 E6 1F        	and $1f
 502+ 95A5 28 03        	jr z,6F
 503+ 95A7 2B           	dec hl
 504+ 95A8 10 F8        	djnz 4B
 505+ 95AA 06 0F        6 ld b,15
 506+ 95AC CD 28 96     5 call PreviousScan
 507+ 95AF 10 FB        	djnz 5B
 508+ 95B1 18 0A        	jr 7F
 509+ 95B3
 510+ 95B3              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 95B3
 512+ 95B3 CD C7 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 95B6 06 0F        	ld b,15
 514+ 95B8 CD 28 96     8 call PreviousScan
 515+ 95BB 10 FB        	djnz 8B
 516+ 95BD
 517+ 95BD E5           7 push hl
 518+ 95BE DD E1        	pop ix
 519+ 95C0
 520+ 95C0 2A CA 89     	ld hl,(Puntero_objeto)
 521+ 95C3 E5           	push hl
 522+ 95C4 FD E1        	pop iy
 523+ 95C6
 524+ 95C6 C9           	ret
 525+ 95C7
 526+ 95C7              ; --------------------------------------------------------------------------------------------------------------------
 527+ 95C7              ;
 528+ 95C7              ;	2/1/23
 529+ 95C7              ;
 530+ 95C7              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 95C7              ;
 532+ 95C7              ;	Tras esta rutina tenemos:
 533+ 95C7              ;
 534+ 95C7              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 95C7              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 95C7              ;
 537+ 95C7              ;	DESTRUYE!!!!! HL,B y A.
 538+ 95C7
 539+ 95C7 2A C8 89     Operandos ld hl,(Posicion_actual)
 540+ 95CA 3A 02 8A     	ld a,(Columnas)
 541+ 95CD 3D           	dec a
 542+ 95CE 20 01        	jr nz,1F
 543+ 95D0 3C           	inc a
 544+ 95D1 47           1 ld b,a
 545+ 95D2 C9           	ret
 546+ 95D3
 547+ 95D3              ; --------------------------------------------------------------------------------------------------------------------
 548+ 95D3              ;
 549+ 95D3              ;	3/1/23
 550+ 95D3              ;
 551+ 95D3              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 95D3              ;
 553+ 95D3              ;	Destruye: A,B,HL y DE.
 554+ 95D3
 555+ 95D3              Define_rutina_de_impresion
 556+ 95D3
 557+ 95D3 3A C7 89     	ld a,(Columns)
 558+ 95D6 47           	ld b,a
 559+ 95D7 3A 02 8A     	ld a,(Columnas)
 560+ 95DA B8           	cp b
 561+ 95DB 20 0D        	jr nz,2f
 562+ 95DD
 563+ 95DD              ;	La entidad se imprime entera.
 564+ 95DD
 565+ 95DD 21 A9 96     	ld hl, Indice_entidades_completas
 566+ 95E0 E6 01        	and 1
 567+ 95E2 28 02        	jr z,1F
 568+ 95E4
 569+ 95E4 23           	inc hl
 570+ 95E5 23           	inc hl
 571+ 95E6
 572+ 95E6 CD 2E 8D     1 call Extrae_address
 573+ 95E9 C9           	ret		;	ret
 574+ 95EA
 575+ 95EA              ;	La entidad no se imprime entera en pantalla.
 576+ 95EA
 577+ 95EA 3A DA 89     2 ld a,(Cuad_objeto)
 578+ 95ED E6 01        	and 1
 579+ 95EF 28 17        	jr z,3F
 580+ 95F1
 581+ 95F1              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95F1
 583+ 95F1 21 AD 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95F4 3A C7 89     4 ld a,(Columns)
 585+ 95F7 E6 01        	and 1
 586+ 95F9 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 95FB
 588+ 95FB 23           	inc hl
 589+ 95FC 23           	inc hl
 590+ 95FD
 591+ 95FD 3A 02 8A     	ld a,(Columnas)
 592+ 9600 E6 01        	and 1
 593+ 9602 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 9604
 595+ 9604 23           	inc hl
 596+ 9605 23           	inc hl
 597+ 9606
 598+ 9606 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 9608
 600+ 9608 21 B3 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 960B 18 E7        	jr 4B
 602+ 960D
 603+ 960D              ; --------------------------------------------------------------------------------------------------------------------
 604+ 960D              ;
 605+ 960D              ;	Prepara_draw
 606+ 960D              ;
 607+ 960D              ;	Es una rutina de carga.
 608+ 960D              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 960D              ;
 610+ 960D              ;	FUNCIONAMIENTO:
 611+ 960D              ;
 612+ 960D              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 960D              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 960D              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 960D              ;
 616+ 960D              ;	DESTRUYE:
 617+ 960D              ;
 618+ 960D              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 960D
 620+ 960D 21 C6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 9610 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 9611 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 9612 4E           	ld c,(hl)
 624+ 9613 2A C8 89     	ld hl,(Posicion_actual)
 625+ 9616 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 9618 C9           	ret
 627+ 9619
 628+ 9619              ;----------------------------------------------------------------------------------------------------------------
 629+ 9619              ;
 630+ 9619              ;	5/08/22
 631+ 9619              ;
 632+ 9619              ;   NextScan.
 633+ 9619              ;
 634+ 9619              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 9619              ;
 636+ 9619              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 9619              ;
 638+ 9619              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 9619              ;
 640+ 9619              ;       DESTRUIDOS: AF y HL !!!
 641+ 9619              ;
 642+ 9619              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 9619              ;
 644+ 9619
 645+ 9619 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 961A 7C               ld a,h
 647+ 961B E6 07            and 7
 648+ 961D C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 961E
 650+ 961E 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 961F C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 9621 6F               ld l,a
 653+ 9622 D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 9623
 655+ 9623 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 9624 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 9626 67               ld h,a
 658+ 9627 C9               ret
 659+ 9628
 660+ 9628              ;----------------------------------------------------------------------------------------------------------------
 661+ 9628              ;
 662+ 9628              ;	5/08/22
 663+ 9628              ;
 664+ 9628              ;   PreviousScan.
 665+ 9628              ;
 666+ 9628              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 9628              ;
 668+ 9628              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 9628              ;
 670+ 9628              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9628              ;
 672+ 9628              ;       DESTRUIDOS: AF y HL !!!
 673+ 9628              ;
 674+ 9628              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9628              ;
 676+ 9628
 677+ 9628 7C           PreviousScan ld a,h
 678+ 9629 25               dec h               ; Dec H.
 679+ 962A E6 07            and 7
 680+ 962C C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 962D
 682+ 962D 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 962E D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 9630 6F               ld l,a
 685+ 9631 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 9632
 687+ 9632 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 9633 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 9635 67               ld h,a
 690+ 9636 C9               ret
 691+ 9637
 692+ 9637              ; -----------------------------------------------------------------------------------
 693+ 9637              ;
 694+ 9637              ;	28/2/23
 695+ 9637              ;
 696+ 9637              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 9637              ;	Extrae fotos de Album_de_fotos.
 698+ 9637
 699+ 9637 3A 14 8A     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 963A A7           	and a
 701+ 963B C8           	ret z
 702+ 963C ED 73 19 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9640 31 00 70     	ld sp,Album_de_fotos
 704+ 9643
 705+ 9643 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 9645 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 9646 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 9647
 709+ 9647 ED 73 1B 8A  	ld (Stack_2),sp
 710+ 964B ED 7B 19 8A  	ld sp,(Stack)
 711+ 964F
 712+ 964F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 964F
 714+ 964F 3E CD        	ld a,$cd
 715+ 9651 32 59 96     	ld (Imprime),a
 716+ 9654 EB           	ex de,hl
 717+ 9655 22 5A 96     	ld (Imprime+1),hl
 718+ 9658 EB           	ex de,hl
 719+ 9659
 720+ 9659              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9659
 722+ 9659 00 00 00     Imprime db 0,0,0
 723+ 965C
 724+ 965C 3A 14 8A     	ld a,(Numero_de_malotes)
 725+ 965F 3D           	dec a
 726+ 9660 28 09        	jr z,1F
 727+ 9662 32 14 8A      	ld (Numero_de_malotes),a
 728+ 9665
 729+ 9665 ED 7B 1B 8A   	ld sp,(Stack_2)
 730+ 9669 18 D8        	jr 2B
 731+ 966B
 732+ 966B AF           1 xor a
 733+ 966C 32 1B 8A     	ld (Stack_2),a
 734+ 966F C9           	ret
 735+ 9670
 736+ 9670              ; -----------------------------------------------------------------------------------
 737+ 9670              ;
 738+ 9670              ;	28/2/23
 739+ 9670              ;
 740+ 9670              ;	Pinta los disparos generados.
 741+ 9670
 742+ 9670              Extrae_foto_disparos
 743+ 9670
 744+ 9670 3A 21 8A     	ld a,(Numero_de_disparotes)
 745+ 9673 A7           	and a
 746+ 9674 C8           	ret z
 747+ 9675 ED 73 19 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9679 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 967C
 750+ 967C FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 967E E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 967F D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9680
 754+ 9680 ED 73 1B 8A  	ld (Stack_2),sp
 755+ 9684 ED 7B 19 8A  	ld sp,(Stack)
 756+ 9688
 757+ 9688              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 9688
 759+ 9688 3E CD        	ld a,$cd
 760+ 968A 32 92 96     	ld (Imprime2),a
 761+ 968D EB           	ex de,hl
 762+ 968E 22 93 96     	ld (Imprime2+1),hl
 763+ 9691 EB           	ex de,hl
 764+ 9692
 765+ 9692              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 9692
 767+ 9692 00 00 00     Imprime2 db 0,0,0
 768+ 9695
 769+ 9695 3A 21 8A     	ld a,(Numero_de_disparotes)
 770+ 9698 3D           	dec a
 771+ 9699 28 09        	jr z,1F
 772+ 969B 32 21 8A      	ld (Numero_de_disparotes),a
 773+ 969E
 774+ 969E ED 7B 1B 8A  	ld sp,(Stack_2)
 775+ 96A2 18 D8        	jr 2B
 776+ 96A4
 777+ 96A4 AF           1 xor a
 778+ 96A5 32 1B 8A     	ld (Stack_2),a
 779+ 96A8 C9           	ret
 780+ 96A9
# file closed: Draw_XOR.asm
1282  96A9              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96A9              ;   índices de Rutinas de impresión.
   2+ 96A9
   3+ 96A9 B9 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96AB E6 96            defw Pinta_Amadeus_3x2
   5+ 96AD
   6+ 96AD 3C 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96AF DC 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96B1 90 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96B3
  10+ 96B3 66 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96B5 6A 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96B7 1E 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96B9
  14+ 96B9
  15+ 96B9              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96B9              ;
  17+ 96B9              ;   12/12/22
  18+ 96B9              ;
  19+ 96B9              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96B9              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96B9              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96B9              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96B9              ;
  24+ 96B9              ;   Modifica: DE y HL.
  25+ 96B9
  26+ 96B9 ED 73 19 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96BD FD F9        	ld sp,iy
  28+ 96BF 06 10            ld b,16
  29+ 96C1 D1           1 pop de
  30+ 96C2 7B               ld a,e
  31+ 96C3 AE               xor (hl)
  32+ 96C4 77           	ld (hl),a
  33+ 96C5 23           	inc hl
  34+ 96C6 7A               ld a,d
  35+ 96C7 AE               xor (hl)
  36+ 96C8 77           	ld (hl),a
  37+ 96C9 2B           	dec hl
  38+ 96CA 24           	inc h
  39+ 96CB 7C               ld a,h
  40+ 96CC E6 07            and 7
  41+ 96CE 20 0A            jr nz,2F
  42+ 96D0 7D               ld a,l
  43+ 96D1 C6 20            add a,$20
  44+ 96D3 6F               ld l,a
  45+ 96D4 38 04            jr c,2F
  46+ 96D6 7C               ld a,h
  47+ 96D7 D6 08            sub 8
  48+ 96D9 67               ld h,a
  49+ 96DA 7C           2 ld a,h
  50+ 96DB FE 58            cp $58
  51+ 96DD 28 02            jr z,3F
  52+ 96DF 10 E0            djnz 1B
  53+ 96E1 ED 7B 19 8A  3 ld sp,(Stack)
  54+ 96E5 C9           	ret
  55+ 96E6
  56+ 96E6 ED 73 19 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96EA FD F9        	ld sp,iy
  58+ 96EC 06 08            ld b,8
  59+ 96EE D1           1 pop de
  60+ 96EF 7B               ld a,e
  61+ 96F0 AE               xor (hl)
  62+ 96F1 77           	ld (hl),a
  63+ 96F2 23           	inc hl
  64+ 96F3 7A               ld a,d
  65+ 96F4 AE               xor (hl)
  66+ 96F5 77           	ld (hl),a
  67+ 96F6 23           	inc hl
  68+ 96F7 D1           	pop de
  69+ 96F8 7B               ld a,e
  70+ 96F9 AE               xor (hl)
  71+ 96FA 77           	ld (hl),a
  72+ 96FB 2B           	dec hl
  73+ 96FC 2B           	dec hl
  74+ 96FD 24           	inc h
  75+ 96FE 7C               ld a,h
  76+ 96FF E6 07            and 7
  77+ 9701 20 0A            jr nz,2F
  78+ 9703 7D               ld a,l
  79+ 9704 C6 20            add a,$20
  80+ 9706 6F               ld l,a
  81+ 9707 38 04            jr c,2F
  82+ 9709 7C               ld a,h
  83+ 970A D6 08            sub 8
  84+ 970C 67               ld h,a
  85+ 970D 7C           2 ld a,h
  86+ 970E FE 58            cp $58
  87+ 9710 28 25            jr z,4F
  88+ 9712 7A               ld a,d
  89+ 9713 AE               xor (hl)
  90+ 9714 77               ld (hl),a
  91+ 9715 D1           	pop de
  92+ 9716 23           	inc hl
  93+ 9717 7B               ld a,e
  94+ 9718 AE               xor (hl)
  95+ 9719 77           	ld (hl),a
  96+ 971A 23           	inc hl
  97+ 971B 7A               ld a,d
  98+ 971C AE               xor (hl)
  99+ 971D 77           	ld (hl),a
 100+ 971E 2B           	dec hl
 101+ 971F 2B           	dec hl
 102+ 9720 24           	inc h
 103+ 9721 7C               ld a,h
 104+ 9722 E6 07            and 7
 105+ 9724 20 0A            jr nz,3F
 106+ 9726 7D               ld a,l
 107+ 9727 C6 20            add a,$20
 108+ 9729 6F               ld l,a
 109+ 972A 38 04            jr c,3F
 110+ 972C 7C               ld a,h
 111+ 972D D6 08            sub 8
 112+ 972F 67               ld h,a
 113+ 9730 7C           3 ld a,h
 114+ 9731 FE 58            cp $58
 115+ 9733 28 02            jr z,4F
 116+ 9735 10 B7            djnz 1B
 117+ 9737 ED 7B 19 8A  4 ld sp,(Stack)
 118+ 973B C9           	ret
 119+ 973C
 120+ 973C              ; ---------------------------------------------------
 121+ 973C
 122+ 973C ED 73 19 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9740 FD F9        	ld sp,iy
 124+ 9742
 125+ 9742              ; >>>
 126+ 9742
 127+ 9742 06 10            ld b,16
 128+ 9744 D1           1 pop de
 129+ 9745 7A           	ld a,d
 130+ 9746 AE           	xor (hl)
 131+ 9747 77           	ld (hl),a
 132+ 9748 24           	inc h
 133+ 9749 7C               ld a,h
 134+ 974A E6 07            and 7
 135+ 974C 20 0C            jr nz,2F
 136+ 974E 7D               ld a,l
 137+ 974F C6 20            add a,$20
 138+ 9751 6F               ld l,a
 139+ 9752 38 06            jr c,2F
 140+ 9754 7C               ld a,h
 141+ 9755 D6 08            sub 8
 142+ 9757 67               ld h,a
 143+ 9758 18 00            jr 2F
 144+ 975A 7C           2 ld a,h
 145+ 975B FE 58            cp $58
 146+ 975D 28 02            jr z,3F
 147+ 975F 10 E3            djnz 1B
 148+ 9761 ED 7B 19 8A  3 ld sp,(Stack)
 149+ 9765 C9           	ret
 150+ 9766
 151+ 9766 ED 73 19 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 976A FD F9        	ld sp,iy
 153+ 976C
 154+ 976C              ; >>>
 155+ 976C
 156+ 976C 06 10            ld b,16
 157+ 976E D1           1 pop de
 158+ 976F 7B           	ld a,e
 159+ 9770 AE           	xor (hl)
 160+ 9771 77           	ld (hl),a
 161+ 9772 24           	inc h
 162+ 9773 7C               ld a,h
 163+ 9774 E6 07            and 7
 164+ 9776 20 0C            jr nz,2F
 165+ 9778 7D               ld a,l
 166+ 9779 C6 20            add a,$20
 167+ 977B 6F               ld l,a
 168+ 977C 38 06            jr c,2F
 169+ 977E 7C               ld a,h
 170+ 977F D6 08            sub 8
 171+ 9781 67               ld h,a
 172+ 9782 18 00            jr 2F
 173+ 9784 7C           2 ld a,h
 174+ 9785 FE 58            cp $58
 175+ 9787 28 02            jr z,3F
 176+ 9789 10 E3            djnz 1B
 177+ 978B ED 7B 19 8A  3 ld sp,(Stack)
 178+ 978F C9           	ret
 179+ 9790
 180+ 9790              ; ---------------------------------------------------
 181+ 9790
 182+ 9790 ED 73 19 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9794 FD F9        	ld sp,iy
 184+ 9796 06 08            ld b,8
 185+ 9798 D1           1 pop de
 186+ 9799 7A           	ld a,d
 187+ 979A AE           	xor (hl)
 188+ 979B 77           	ld (hl),a
 189+ 979C 23           	inc hl
 190+ 979D D1           	pop de
 191+ 979E 7B           	ld a,e
 192+ 979F AE           	xor (hl)
 193+ 97A0 77           	ld (hl),a
 194+ 97A1 2B           	dec hl
 195+ 97A2 24            	inc h
 196+ 97A3 7C               ld a,h
 197+ 97A4 E6 07            and 7
 198+ 97A6 20 0A            jr nz,2F
 199+ 97A8 7D               ld a,l
 200+ 97A9 C6 20            add a,$20
 201+ 97AB 6F               ld l,a
 202+ 97AC 38 04            jr c,2F
 203+ 97AE 7C               ld a,h
 204+ 97AF D6 08            sub 8
 205+ 97B1 67               ld h,a
 206+ 97B2 7C           2 ld a,h
 207+ 97B3 FE 58            cp $58
 208+ 97B5 28 20            jr z,4F
 209+ 97B7 D1               pop de
 210+ 97B8 7B           	ld a,e
 211+ 97B9 AE           	xor (hl)
 212+ 97BA 77           	ld (hl),a
 213+ 97BB 23           	inc hl
 214+ 97BC 7A           	ld a,d
 215+ 97BD AE           	xor (hl)
 216+ 97BE 77           	ld (hl),a
 217+ 97BF 2B           	dec hl
 218+ 97C0 24           	inc h
 219+ 97C1 7C               ld a,h
 220+ 97C2 E6 07            and 7
 221+ 97C4 20 0A            jr nz,3F
 222+ 97C6 7D               ld a,l
 223+ 97C7 C6 20            add a,$20
 224+ 97C9 6F               ld l,a
 225+ 97CA 38 04            jr c,3F
 226+ 97CC 7C               ld a,h
 227+ 97CD D6 08            sub 8
 228+ 97CF 67               ld h,a
 229+ 97D0 7C           3 ld a,h
 230+ 97D1 FE 58            cp $58
 231+ 97D3 28 02            jr z,4F
 232+ 97D5 10 C1            djnz 1B
 233+ 97D7 ED 7B 19 8A  4 ld sp,(Stack)
 234+ 97DB C9           	ret
 235+ 97DC
 236+ 97DC ED 73 19 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97E0 FD F9        	ld sp,iy
 238+ 97E2 06 08            ld b,8
 239+ 97E4 D1           1 pop de
 240+ 97E5 D1           	pop de
 241+ 97E6 7B           	ld a,e
 242+ 97E7 AE           	xor (hl)
 243+ 97E8 77           	ld (hl),a
 244+ 97E9 24            	inc h
 245+ 97EA 7C               ld a,h
 246+ 97EB E6 07            and 7
 247+ 97ED 20 0A            jr nz,2F
 248+ 97EF 7D               ld a,l
 249+ 97F0 C6 20            add a,$20
 250+ 97F2 6F               ld l,a
 251+ 97F3 38 04            jr c,2F
 252+ 97F5 7C               ld a,h
 253+ 97F6 D6 08            sub 8
 254+ 97F8 67               ld h,a
 255+ 97F9 7C           2 ld a,h
 256+ 97FA FE 58            cp $58
 257+ 97FC 28 1B            jr z,4F
 258+ 97FE D1               pop de
 259+ 97FF 7A           	ld a,d
 260+ 9800 AE           	xor (hl)
 261+ 9801 77           	ld (hl),a
 262+ 9802 24           	inc h
 263+ 9803 7C               ld a,h
 264+ 9804 E6 07            and 7
 265+ 9806 20 0A            jr nz,3F
 266+ 9808 7D               ld a,l
 267+ 9809 C6 20            add a,$20
 268+ 980B 6F               ld l,a
 269+ 980C 38 04            jr c,3F
 270+ 980E 7C               ld a,h
 271+ 980F D6 08            sub 8
 272+ 9811 67               ld h,a
 273+ 9812 7C           3 ld a,h
 274+ 9813 FE 58            cp $58
 275+ 9815 28 02            jr z,4F
 276+ 9817 10 CB            djnz 1B
 277+ 9819 ED 7B 19 8A  4 ld sp,(Stack)
 278+ 981D C9           	ret
 279+ 981E
 280+ 981E ED 73 19 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9822 FD F9        	ld sp,iy
 282+ 9824 06 08            ld b,8
 283+ 9826 D1           1 pop de
 284+ 9827 7B           	ld a,e
 285+ 9828 AE           	xor (hl)
 286+ 9829 77           	ld (hl),a
 287+ 982A 23           	inc hl
 288+ 982B 7A           	ld a,d
 289+ 982C AE           	xor (hl)
 290+ 982D 77           	ld (hl),a
 291+ 982E 2B           	dec hl
 292+ 982F 24             	inc h
 293+ 9830 7C               ld a,h
 294+ 9831 E6 07            and 7
 295+ 9833 20 0A            jr nz,2F
 296+ 9835 7D               ld a,l
 297+ 9836 C6 20            add a,$20
 298+ 9838 6F               ld l,a
 299+ 9839 38 04            jr c,2F
 300+ 983B 7C               ld a,h
 301+ 983C D6 08            sub 8
 302+ 983E 67               ld h,a
 303+ 983F 7C           2 ld a,h
 304+ 9840 FE 58            cp $58
 305+ 9842 28 21            jr z,4F
 306+ 9844 D1               pop de
 307+ 9845 7A           	ld a,d
 308+ 9846 AE           	xor (hl)
 309+ 9847 77           	ld (hl),a
 310+ 9848 23           	inc hl
 311+ 9849 D1               pop de
 312+ 984A 7B           	ld a,e
 313+ 984B AE           	xor (hl)
 314+ 984C 77           	ld (hl),a
 315+ 984D 2B           	dec hl
 316+ 984E 24           	inc h
 317+ 984F 7C               ld a,h
 318+ 9850 E6 07            and 7
 319+ 9852 20 0A            jr nz,3F
 320+ 9854 7D               ld a,l
 321+ 9855 C6 20            add a,$20
 322+ 9857 6F               ld l,a
 323+ 9858 38 04            jr c,3F
 324+ 985A 7C               ld a,h
 325+ 985B D6 08            sub 8
 326+ 985D 67               ld h,a
 327+ 985E 7C           3 ld a,h
 328+ 985F FE 58            cp $58
 329+ 9861 28 02            jr z,4F
 330+ 9863 10 C1            djnz 1B
 331+ 9865 ED 7B 19 8A  4 ld sp,(Stack)
 332+ 9869 C9           	ret
 333+ 986A
 334+ 986A ED 73 19 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 986E FD F9        	ld sp,iy
 336+ 9870 06 08            ld b,8
 337+ 9872 D1           1 pop de
 338+ 9873 7B           	ld a,e
 339+ 9874 AE           	xor (hl)
 340+ 9875 77           	ld (hl),a
 341+ 9876 24            	inc h
 342+ 9877 7C               ld a,h
 343+ 9878 E6 07            and 7
 344+ 987A 20 0A            jr nz,2F
 345+ 987C 7D               ld a,l
 346+ 987D C6 20            add a,$20
 347+ 987F 6F               ld l,a
 348+ 9880 38 04            jr c,2F
 349+ 9882 7C               ld a,h
 350+ 9883 D6 08            sub 8
 351+ 9885 67               ld h,a
 352+ 9886 7C           2 ld a,h
 353+ 9887 FE 58            cp $58
 354+ 9889 28 1C            jr z,4F
 355+ 988B D1               pop de
 356+ 988C 7A           	ld a,d
 357+ 988D AE           	xor (hl)
 358+ 988E 77           	ld (hl),a
 359+ 988F 24           	inc h
 360+ 9890 7C               ld a,h
 361+ 9891 E6 07            and 7
 362+ 9893 20 0A            jr nz,3F
 363+ 9895 7D               ld a,l
 364+ 9896 C6 20            add a,$20
 365+ 9898 6F               ld l,a
 366+ 9899 38 04            jr c,3F
 367+ 989B 7C               ld a,h
 368+ 989C D6 08            sub 8
 369+ 989E 67               ld h,a
 370+ 989F 7C           3 ld a,h
 371+ 98A0 FE 58            cp $58
 372+ 98A2 28 03            jr z,4F
 373+ 98A4 D1               pop de
 374+ 98A5 10 CB            djnz 1B
 375+ 98A7 ED 7B 19 8A  4 ld sp,(Stack)
 376+ 98AB C9           	ret
 377+ 98AC
 378+ 98AC              ; ---------------------------------------------------
 379+ 98AC              ;
 380+ 98AC              ;   27/02/23
 381+ 98AC              ;
 382+ 98AC              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98AC              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98AC              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98AC
 386+ 98AC ED 73 19 8A  Pinta_Disparo ld (Stack),sp
 387+ 98B0 FD F9            ld sp,iy
 388+ 98B2 06 04            ld b,4
 389+ 98B4 D1           1 pop de
 390+ 98B5 7B               ld a,e
 391+ 98B6 AE               xor (hl)
 392+ 98B7 77               ld (hl),a
 393+ 98B8 23               inc hl
 394+ 98B9 7A               ld a,d
 395+ 98BA AE               xor (hl)
 396+ 98BB 77               ld (hl),a
 397+ 98BC 2B               dec hl
 398+ 98BD
 399+ 98BD 24               inc h
 400+ 98BE 7C               ld a,h
 401+ 98BF E6 07            and 7
 402+ 98C1 20 0A            jr nz,2F
 403+ 98C3 7D               ld a,l
 404+ 98C4 C6 20            add a,$20
 405+ 98C6 6F               ld l,a
 406+ 98C7 38 04            jr c,2F
 407+ 98C9 7C               ld a,h
 408+ 98CA D6 08            sub 8
 409+ 98CC 67               ld h,a
 410+ 98CD 7C           2 ld a,h
 411+ 98CE FE 58            cp $58
 412+ 98D0 28 02            jr z,3F
 413+ 98D2
 414+ 98D2 10 E0            djnz 1B
 415+ 98D4 ED 7B 19 8A  3 ld sp,(Stack)
 416+ 98D8 C9               ret
 417+ 98D9
# file closed: Rutinas_de_impresion_sprites.asm
1283  98D9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98D9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98D9              ;
   3+ 98D9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98D9              ;
   5+ 98D9              ; *****************************************************************************************************************************************************************************************
   6+ 98D9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98D9
   8+ 98D9 7C           calcula_tercio ld a,h
   9+ 98DA E6 18        	and $18
  10+ 98DC CB 2F        	sra a
  11+ 98DE CB 2F        	sra a
  12+ 98E0 CB 2F        	sra a
  13+ 98E2 C9           	ret
  14+ 98E3
# file closed: calcula_tercio.asm
1284  98E3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98E3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98E3              ;
   3+ 98E3              ;
   4+ 98E3              ;	CLS.
   5+ 98E3              ;
   6+ 98E3              ;	Limpia la pantalla y define sus atributos.
   7+ 98E3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98E3              ;
   9+ 98E3              ;	COLORES: 0 ..... NEGRO
  10+ 98E3              ;    		 1 ..... AZUL
  11+ 98E3              ; 			 2 ..... ROJO
  12+ 98E3              ;			 3 ..... MAGENTA
  13+ 98E3              ; 			 4 ..... VERDE
  14+ 98E3              ; 			 5 ..... CIAN
  15+ 98E3              ;			 6 ..... AMARILLO
  16+ 98E3              ; 			 7 ..... BLANCO
  17+ 98E3              ;
  18+ 98E3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98E3              ;
  20+ 98E3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98E3
  22+ 98E3
  23+ 98E3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98E6 11 01 40     	LD DE,$4001
  25+ 98E9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98EC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98EE ED B0        	LDIR
  28+ 98F0 01 FF 02     	LD BC,767
  29+ 98F3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98F4 ED B0        	LDIR
  31+ 98F6 C9           	ret
  32+ 98F7
# file closed: Cls.asm
1285  98F7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98F7              ; ******************************************************************************************************************************************************************************************
   2+ 98F7              ;
   3+ 98F7              ;   20/05/23
   4+ 98F7              ;
   5+ 98F7              ;	Recompone_posicion_inicio
   6+ 98F7              ;
   7+ 98F7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98F7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98F7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98F7              ;	_ a una u otra rutina.
  11+ 98F7
  12+ 98F7              Recompone_posicion_inicio
  13+ 98F7
  14+ 98F7 2A D8 89     	ld hl,(Posicion_inicio)
  15+ 98FA 7D           	ld a,l
  16+ 98FB E6 1F        	and $1f
  17+ 98FD 28 16        	jr z,1F
  18+ 98FF
  19+ 98FF FE 1F        	cp $1f
  20+ 9901 28 0D        	jr z,3F
  21+ 9903
  22+ 9903 21 06 8A     	ld hl,Ctrl_2
  23+ 9906 CB C6        	set 0,(hl)
  24+ 9908 2A CA 89     	ld hl,(Puntero_objeto)
  25+ 990B 22 09 8A     	ld (Repone_puntero_objeto),hl
  26+ 990E 18 08        	jr 2F
  27+ 9910
  28+ 9910 CD B1 9A     3 call Mov_left
  29+ 9913 18 03        	jr 2F
  30+ 9915
  31+ 9915 CD 93 99     1 call Mov_right
  32+ 9918 21 00 F0     2 ld hl,Sprite_vacio
  33+ 991B 22 CA 89     	ld (Puntero_objeto),hl
  34+ 991E C9           	ret
  35+ 991F
  36+ 991F              ; ******************************************************************************************************************************************************************************************
  37+ 991F              ;
  38+ 991F              ;   27/05/23
  39+ 991F              ;
  40+ 991F              ;	Mov_down
  41+ 991F              ;
  42+ 991F              ; 	Mueve el Sprite X px hacia abajo.
  43+ 991F              ;
  44+ 991F              ;
  45+ 991F              Mov_down
  46+ 991F
  47+ 991F CD 81 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9922              ;																	; _ repone (Puntero_objeto).
  49+ 9922 21 F4 89     	ld hl,Ctrl_0
  50+ 9925 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9927              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9927              ; 																	; _ en el caso de que no lo haya.
  53+ 9927 3A DE 89     	ld a,(Vel_down)
  54+ 992A 47           	ld b,a
  55+ 992B 2A C8 89         ld hl,(Posicion_actual)
  56+ 992E CD D9 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9931 E6 02        	and 2
  58+ 9933 28 0F        	jr z,1F
  59+ 9935
  60+ 9935              ; Nos encontramos en el último tercio de pantalla.
  61+ 9935              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9935
  63+ 9935 7C           	ld a,h
  64+ 9936 FE 57        	cp $57
  65+ 9938 20 0A        	jr nz,1F
  66+ 993A 7D           	ld a,l
  67+ 993B C6 20        	add $20
  68+ 993D 30 05        	jr nc,1F
  69+ 993F
  70+ 993F              ; ------------------------------
  71+ 993F              ;	call Reaparece_arriba
  72+ 993F CD 3E 9C     	call Reinicio
  73+ 9942              ; ------------------------------
  74+ 9942
  75+ 9942 18 08        	jr 3F
  76+ 9944 CD 19 96     1 call NextScan
  77+ 9947 22 C8 89     	ld (Posicion_actual),hl
  78+ 994A 10 E2            djnz 2B
  79+ 994C CD 64 9C     3 call Genera_coordenadas
  80+ 994F C9           	ret
  81+ 9950
  82+ 9950              ; ******************************************************************************************************************************************************************************************
  83+ 9950              ;
  84+ 9950              ;   27/05/23
  85+ 9950              ;
  86+ 9950              ;	Mov_up
  87+ 9950              ;
  88+ 9950              ; 	Mueve el Sprite hacia arriba.
  89+ 9950              ;
  90+ 9950              ;
  91+ 9950              Mov_up
  92+ 9950
  93+ 9950 CD 81 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9953              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9953 21 F4 89     	ld hl,Ctrl_0
  96+ 9956 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9958              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9958              ; 																		; _ en el caso de que no lo haya.
  99+ 9958 3A DD 89     	ld a,(Vel_up)
 100+ 995B 47           	ld b,a
 101+ 995C 2A C8 89     	ld hl,(Posicion_actual)
 102+ 995F CD D9 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9962 A7           	and a
 104+ 9963 20 10        	jr nz,1F
 105+ 9965
 106+ 9965              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9965              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9965
 109+ 9965 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9966 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9968 20 0B            jr nz,1F
 112+ 996A 7D               ld a,l
 113+ 996B D6 20            sub $20
 114+ 996D 30 06            jr nc,1F
 115+ 996F 25               dec h
 116+ 9970
 117+ 9970              ; -----------------------------
 118+ 9970 CD 1F 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9973              ;	call Reinicio
 120+ 9973              ; -----------------------------
 121+ 9973
 122+ 9973 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9975 CD 28 96     1 call PreviousScan
 124+ 9978 22 C8 89     	ld (Posicion_actual),hl
 125+ 997B 10 E2            djnz 3B
 126+ 997D CD 64 9C     2 call Genera_coordenadas
 127+ 9980 C9           	ret
 128+ 9981
 129+ 9981              ; -----------------------------
 130+ 9981              ;
 131+ 9981              ;	27/5/23
 132+ 9981              ;
 133+ 9981              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9981              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9981              ;
 136+ 9981              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9981              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9981              ;
 139+ 9981              ;	Modifica: A y (Puntero_objeto).
 140+ 9981
 141+ 9981 3A 06 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9984 CB 47        	bit 0,a
 143+ 9986 C8           	ret z
 144+ 9987 CB 87        	res 0,a
 145+ 9989 32 06 8A     	ld (Ctrl_2),a
 146+ 998C 2A 09 8A     	ld hl,(Repone_puntero_objeto)
 147+ 998F 22 CA 89     	ld (Puntero_objeto),hl
 148+ 9992 C9           	ret
 149+ 9993
 150+ 9993              ; ******************************************************************************************************************************************************************************************
 151+ 9993              ;
 152+ 9993              ;	19/10/22
 153+ 9993              ;
 154+ 9993              ;	Mov_right.
 155+ 9993              ;
 156+ 9993              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 9993              ;
 158+ 9993
 159+ 9993 21 F4 89     Mov_right ld hl,Ctrl_0
 160+ 9996 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 9998              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 9998              ; 																	; _ en el caso de que no lo haya.
 163+ 9998 3A F4 89     	ld a,(Ctrl_0)
 164+ 999B CB 77        	bit 6,a
 165+ 999D 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 999F
 167+ 999F CD CD 9B     	call Stop_Amadeus_right
 168+ 99A2 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 99A3 18 4D        	jr 8F
 170+ 99A5
 171+ 99A5 3A CC 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 99A8 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 99AA 20 46        	jr nz,8F
 174+ 99AC
 175+ 99AC 3A CE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 99AF A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 99B0 28 40        	jr z,8F
 178+ 99B2
 179+ 99B2              ; ---------- ---------- ----------
 180+ 99B2              ;
 181+ 99B2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 99B2
 183+ 99B2 3A DC 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 99B5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 99B7 28 11        	jr z,1F
 186+ 99B9 38 06        	jr c,6F
 187+ 99BB FE 04        	cp 4
 188+ 99BD 28 14        	jr z,7F
 189+ 99BF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 99C1
 191+ 99C1              ; ---------- ---------- ----------
 192+ 99C1              ;
 193+ 99C1              ; Perfiles de velocidad
 194+ 99C1              ;
 195+ 99C1
 196+ 99C1 3A CE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 99C4 FE FE        	cp $fe
 198+ 99C6 20 2A        	jr nz,8F
 199+ 99C8 18 10        	jr 3F
 200+ 99CA 3A CE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99CD FE FD        	cp $fd
 202+ 99CF 20 21        	jr nz,8F
 203+ 99D1 18 07        	jr 3F
 204+ 99D3 3A CE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99D6 FE FB        	cp $fb
 206+ 99D8 20 18        	jr nz,8F
 207+ 99DA
 208+ 99DA              ; ---------- ---------- ----------
 209+ 99DA
 210+ 99DA              3
 211+ 99DA CD 0D 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99DD              ;	call Reinicio
 213+ 99DD
 214+ 99DD              ; ---------- ---------- ----------
 215+ 99DD              ;
 216+ 99DD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99DD
 218+ 99DD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99DF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99E0 CD F9 99     	call DESPLZ_DER
 221+ 99E3 C1           	pop bc
 222+ 99E4 10 F9        	djnz 5B
 223+ 99E6 2A C8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99E9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99EA 22 C8 89     	ld (Posicion_actual),hl
 226+ 99ED CD 64 9C     	call Genera_coordenadas
 227+ 99F0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99F2
 229+ 99F2              ; ---------- ---------- ----------
 230+ 99F2
 231+ 99F2 2A C8 89     8 ld hl,(Posicion_actual)
 232+ 99F5 CD F9 99     	call DESPLZ_DER
 233+ 99F8 C9           2 ret
 234+ 99F9
 235+ 99F9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 99F9              ;
 237+ 99F9              ;	22/9/22
 238+ 99F9              ;
 239+ 99F9
 240+ 99F9 CD 08 9A     DESPLZ_DER call Desplaza_derecha
 241+ 99FC CD 54 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 99FF CD 7D 9A         call Ciclo_completo
 243+ 9A02 21 F4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 9A05 CB FE        	set 7,(hl)
 245+ 9A07 C9           	ret
 246+ 9A08
 247+ 9A08              ; ******************************************************************************************************************************************************************************************
 248+ 9A08              ;	15/02/23
 249+ 9A08              ;
 250+ 9A08
 251+ 9A08 3A DC 89     Desplaza_derecha ld a,(Vel_right)
 252+ 9A0B 47           	ld b,a
 253+ 9A0C 2A D4 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 9A0F 23           1 inc hl
 255+ 9A10 23           	inc hl
 256+ 9A11 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 9A13 22 D4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 9A16 CD 2E 8D     	call Extrae_address
 259+ 9A19 22 CA 89     	ld (Puntero_objeto),hl
 260+ 9A1C
 261+ 9A1C              ; Modifica (Puntero_DESPLZ_izq).
 262+ 9A1C
 263+ 9A1C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 9A1C              ; Cuántos movimientos hemos hecho ??
 265+ 9A1C              ; DE contiene (Puntero_DESPLZ_der).
 266+ 9A1C
 267+ 9A1C 2A D0 89     7 ld hl,(Indice_Sprite_der)
 268+ 9A1F EB           	ex de,hl
 269+ 9A20 A7           	and a
 270+ 9A21 ED 52        	sbc hl,de
 271+ 9A23 CB 3D        	srl l
 272+ 9A25 3E 08        6 ld a,8
 273+ 9A27 95           	sub l
 274+ 9A28 30 1E        	jr nc,3F
 275+ 9A2A
 276+ 9A2A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A2A              ; B="0".
 278+ 9A2A
 279+ 9A2A 04           4 inc b
 280+ 9A2B 3C           	inc a
 281+ 9A2C 20 FC        	jr nz,4B
 282+ 9A2E 78           	ld a,b
 283+ 9A2F 08           	ex af,af
 284+ 9A30 2A D0 89     	ld hl,(Indice_Sprite_der)
 285+ 9A33 23           5 inc hl
 286+ 9A34 23           	inc hl
 287+ 9A35 10 FC        	djnz 5B
 288+ 9A37 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A3A CD 2E 8D     	call Extrae_address
 290+ 9A3D 22 CA 89     	ld (Puntero_objeto),hl
 291+ 9A40
 292+ 9A40              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A40              ; _(Posicion_actual).
 294+ 9A40
 295+ 9A40 21 C8 89     	ld hl,Posicion_actual
 296+ 9A43 34           	inc (hl)
 297+ 9A44 08               ex af,af
 298+ 9A45 6F           	ld l,a
 299+ 9A46 18 DD        	jr 6B
 300+ 9A48
 301+ 9A48              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A48
 303+ 9A48 47           3 ld b,a
 304+ 9A49 2A D2 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A4C 23           2 inc hl
 306+ 9A4D 23           	inc hl
 307+ 9A4E 10 FC        	djnz 2B
 308+ 9A50 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A53 C9           8 ret
 310+ 9A54
 311+ 9A54              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A54              ;
 313+ 9A54              ;	24/7/22
 314+ 9A54              ;
 315+ 9A54              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A54              ;
 317+ 9A54              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A54              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A54              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A54
 321+ 9A54 3A CE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A57 A7           	and a
 323+ 9A58 20 1F        	jr nz,1F
 324+ 9A5A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A5C 32 CE 89         ld (CTRL_DESPLZ),a
 326+ 9A5F
 327+ 9A5F 21 C7 89     	ld hl,Columns
 328+ 9A62 34           	inc (hl)
 329+ 9A63 3A DA 89     	ld a,(Cuad_objeto)
 330+ 9A66 E6 01        	and 1
 331+ 9A68 28 0F        	jr z,1F
 332+ 9A6A 2A C8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A6D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A6E 22 C8 89     	ld (Posicion_actual),hl
 335+ 9A71 CD 64 9C     	call Genera_coordenadas
 336+ 9A74 CD D9 9B     	call Inc_CTRL_DESPLZ
 337+ 9A77 18 03        	jr 2F
 338+ 9A79 CD D9 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A7C C9           2 ret
 340+ 9A7D
 341+ 9A7D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A7D              ;
 343+ 9A7D              ;	24/7/22
 344+ 9A7D              ;
 345+ 9A7D              ;	Ciclo_completo.
 346+ 9A7D              ;
 347+ 9A7D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A7D              ;
 349+ 9A7D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A7D              ; 	Decrementamos (Columns).
 351+ 9A7D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A7D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A7D
 354+ 9A7D
 355+ 9A7D 3A CE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A80 FE FF        	cp $ff
 357+ 9A82 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A84 E6 F0        	and $f0
 359+ 9A86 20 28        	jr nz,3F
 360+ 9A88
 361+ 9A88              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A88
 363+ 9A88 3A CE 89     	ld a,(CTRL_DESPLZ)
 364+ 9A8B 47           	ld b,a
 365+ 9A8C 3E F8        	ld a,$f8
 366+ 9A8E 80           	add b
 367+ 9A8F 32 CE 89     	ld (CTRL_DESPLZ),a
 368+ 9A92 18 1C        	jr 3F
 369+ 9A94 21 C7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A97 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A98 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9A99 32 CE 89     	ld (CTRL_DESPLZ),a
 373+ 9A9C 3A DA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9A9F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9AA1 20 0A        	jr nz,2F
 376+ 9AA3 2A C8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9AA6 23           	inc hl
 378+ 9AA7 22 C8 89     	ld (Posicion_actual),hl
 379+ 9AAA CD 64 9C     	call Genera_coordenadas
 380+ 9AAD
 381+ 9AAD              ; Inicia el puntero de Sprite.
 382+ 9AAD
 383+ 9AAD CD 45 8D     2 call Inicia_puntero_objeto_der
 384+ 9AB0 C9           3 ret
 385+ 9AB1
 386+ 9AB1              ; ******************************************************************************************************************************************************************************************
 387+ 9AB1              ;
 388+ 9AB1              ;	15/02/23
 389+ 9AB1              ;
 390+ 9AB1              ;	Mov_left.
 391+ 9AB1              ;
 392+ 9AB1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9AB1              ;
 394+ 9AB1 21 F4 89     Mov_left ld hl,Ctrl_0
 395+ 9AB4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9AB6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9AB6              ; 																	; _ en el caso de que no lo haya.
 398+ 9AB6 3A F4 89     	ld a,(Ctrl_0)
 399+ 9AB9 CB 77        	bit 6,a
 400+ 9ABB 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9ABD
 402+ 9ABD CD D3 9B     	call Stop_Amadeus_left
 403+ 9AC0 C8           	ret z
 404+ 9AC1 20 4A        	jr nz,8F
 405+ 9AC3
 406+ 9AC3 3A CC 89     11 ld a,(Coordenada_X)
 407+ 9AC6 A7           	and a
 408+ 9AC7 20 44        	jr nz,8F
 409+ 9AC9
 410+ 9AC9 3A CE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9ACC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9ACD 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9ACF
 414+ 9ACF              ; ---------- ---------- ----------
 415+ 9ACF
 416+ 9ACF 3A DB 89     	ld a,(Vel_left)
 417+ 9AD2 FE 02        	cp 2
 418+ 9AD4 28 0F        	jr z,1F
 419+ 9AD6 38 04        	jr c,6F
 420+ 9AD8 FE 04        	cp 4
 421+ 9ADA 28 12        	jr z,7F
 422+ 9ADC
 423+ 9ADC              ; ---------- ---------- ----------
 424+ 9ADC
 425+ 9ADC 3A CE 89     6 ld a,(CTRL_DESPLZ)
 426+ 9ADF FE F8        	cp $f8
 427+ 9AE1 20 2A        	jr nz,8F
 428+ 9AE3 18 10        	jr 4F
 429+ 9AE5 3A CE 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AE8 FE F9        	cp $f9
 431+ 9AEA 20 21        	jr nz,8F
 432+ 9AEC 18 07        	jr 4F
 433+ 9AEE 3A CE 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AF1 FE FB        	cp $fb
 435+ 9AF3 20 18        	jr nz,8F
 436+ 9AF5
 437+ 9AF5              ; ---------- ---------- ----------
 438+ 9AF5
 439+ 9AF5              4
 440+ 9AF5 CD FB 9B     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9AF8              ;	call Reinicio
 442+ 9AF8
 443+ 9AF8              ; ---------- ---------- ----------
 444+ 9AF8
 445+ 9AF8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9AFA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9AFB
 448+ 9AFB              ;	ld hl,(Indice_Sprite_izq)
 449+ 9AFB              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9AFB
 451+ 9AFB CD 14 9B     	call DESPLZ_IZQ
 452+ 9AFE C1           	pop bc
 453+ 9AFF 10 F9        	djnz 5B
 454+ 9B01 2A C8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9B04 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9B05 22 C8 89     	ld (Posicion_actual),hl
 457+ 9B08 CD 64 9C     	call Genera_coordenadas
 458+ 9B0B 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9B0D
 460+ 9B0D              ; ---------- ---------- ----------
 461+ 9B0D
 462+ 9B0D              ; Movemos, no hay recolocación.
 463+ 9B0D
 464+ 9B0D 2A C8 89     8 ld hl,(Posicion_actual)
 465+ 9B10 CD 14 9B     	call DESPLZ_IZQ
 466+ 9B13 C9           2 ret
 467+ 9B14
 468+ 9B14              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9B14              ;
 470+ 9B14              ;	22/9/22
 471+ 9B14
 472+ 9B14              DESPLZ_IZQ
 473+ 9B14
 474+ 9B14 CD 23 9B     	call Desplaza_izquierda
 475+ 9B17 CD 6F 9B         call modifica_parametros_1er_DESPLZ
 476+ 9B1A CD 97 9B     	call Ciclo_completo_2
 477+ 9B1D 21 F4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9B20 CB BE        	res 7,(hl)
 479+ 9B22 C9           	ret
 480+ 9B23
 481+ 9B23              Desplaza_izquierda
 482+ 9B23
 483+ 9B23 3A DB 89     	ld a,(Vel_left)
 484+ 9B26 47           	ld b,a
 485+ 9B27 2A D6 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B2A 23           1 inc hl
 487+ 9B2B 23           	inc hl
 488+ 9B2C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B2E 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B31 CD 2E 8D     	call Extrae_address
 491+ 9B34 22 CA 89     	ld (Puntero_objeto),hl
 492+ 9B37
 493+ 9B37              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B37
 495+ 9B37              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B37              ; Cuántos movimientos hemos hecho ??
 497+ 9B37              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B37
 499+ 9B37 2A D2 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B3A EB           	ex de,hl
 501+ 9B3B A7           	and a
 502+ 9B3C ED 52        	sbc hl,de
 503+ 9B3E CB 3D        	srl l
 504+ 9B40 3E 08        6 ld a,8
 505+ 9B42 95           	sub l
 506+ 9B43 30 1E        	jr nc,3F
 507+ 9B45
 508+ 9B45              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B45              ; B="0".
 510+ 9B45
 511+ 9B45 04           4 inc b
 512+ 9B46 3C           	inc a
 513+ 9B47 20 FC        	jr nz,4B
 514+ 9B49 78           	ld a,b
 515+ 9B4A 08           	ex af,af
 516+ 9B4B 2A D2 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B4E 23           5 inc hl
 518+ 9B4F 23           	inc hl
 519+ 9B50 10 FC        	djnz 5B
 520+ 9B52 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B55 CD 2E 8D     	call Extrae_address
 522+ 9B58 22 CA 89     	ld (Puntero_objeto),hl
 523+ 9B5B
 524+ 9B5B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B5B              ; _(Posicion_actual).
 526+ 9B5B
 527+ 9B5B 21 C8 89     	ld hl,Posicion_actual
 528+ 9B5E 35           	dec (hl)
 529+ 9B5F 08           	ex af,af
 530+ 9B60 6F           	ld l,a
 531+ 9B61 18 DD        	jr 6B
 532+ 9B63
 533+ 9B63              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B63
 535+ 9B63 47           3 ld b,a
 536+ 9B64 2A D0 89     	ld hl,(Indice_Sprite_der)
 537+ 9B67 23           2 inc hl
 538+ 9B68 23           	inc hl
 539+ 9B69 10 FC        	djnz 2B
 540+ 9B6B 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B6E C9           8 ret
 542+ 9B6F
 543+ 9B6F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B6F              ;
 545+ 9B6F              ;	modifica_parametros_1er_DESPLZ
 546+ 9B6F              ;
 547+ 9B6F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B6F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B6F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B6F
 551+ 9B6F 3A CE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B72 A7           	and a
 553+ 9B73 20 1E        	jr nz,1F
 554+ 9B75 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B76 32 CE 89         ld (CTRL_DESPLZ),a
 556+ 9B79 21 C7 89     	ld hl,Columns
 557+ 9B7C 34           	inc (hl)
 558+ 9B7D 3A DA 89     	ld a,(Cuad_objeto)
 559+ 9B80 E6 01        	and 1
 560+ 9B82 20 0F        	jr nz,1F
 561+ 9B84 2A C8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B87 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B88 22 C8 89     	ld (Posicion_actual),hl
 564+ 9B8B CD 64 9C     	call Genera_coordenadas
 565+ 9B8E CD EA 9B     	call Dec_CTRL_DESPLZ
 566+ 9B91 18 03        	jr 2F
 567+ 9B93 CD EA 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B96 C9           2 ret
 569+ 9B97
 570+ 9B97              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B97
 572+ 9B97 3A CE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9B9A FE F7        	cp $f7
 574+ 9B9C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9B9E 30 2C        	jr nc,3F
 576+ 9BA0
 577+ 9BA0              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9BA0
 579+ 9BA0 06 00        	ld b,0
 580+ 9BA2 04           4 inc b
 581+ 9BA3 3C           	inc a
 582+ 9BA4 FE F7        	cp $f7
 583+ 9BA6 20 FA        	jr nz,4B
 584+ 9BA8 3E FF        	ld a,$ff
 585+ 9BAA 90           	sub b
 586+ 9BAB 32 CE 89     	ld (CTRL_DESPLZ),a
 587+ 9BAE 18 1C        	jr 3F
 588+ 9BB0
 589+ 9BB0              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9BB0
 591+ 9BB0 21 C7 89     1 ld hl,Columns
 592+ 9BB3 35           	dec (hl)
 593+ 9BB4 AF           	xor a
 594+ 9BB5 32 CE 89     	ld (CTRL_DESPLZ),a
 595+ 9BB8 3A DA 89     	ld a,(Cuad_objeto)
 596+ 9BBB E6 01        	and 1
 597+ 9BBD 28 0A        	jr z,2F
 598+ 9BBF 2A C8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9BC2 2B           	dec hl
 600+ 9BC3 22 C8 89     	ld (Posicion_actual),hl
 601+ 9BC6 CD 64 9C     	call Genera_coordenadas
 602+ 9BC9
 603+ 9BC9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BC9
 605+ 9BC9 CD 58 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BCC C9           3 ret
 607+ 9BCD
 608+ 9BCD              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BCD              ;
 610+ 9BCD              ;	19/10/22
 611+ 9BCD              ;
 612+ 9BCD              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BCD              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BCD
 615+ 9BCD 3A CC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BD0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BD2 C9           	ret
 618+ 9BD3
 619+ 9BD3              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BD3              ;
 621+ 9BD3              ;	19/10/22
 622+ 9BD3              ;
 623+ 9BD3              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BD3              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BD3
 626+ 9BD3 3A CC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BD6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BD8 C9           	ret
 629+ 9BD9
 630+ 9BD9              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BD9              ;
 632+ 9BD9              ;	24/7/22
 633+ 9BD9              ;
 634+ 9BD9              ;	Inc_CTRL_DESPLZ
 635+ 9BD9              ;
 636+ 9BD9              ;
 637+ 9BD9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BD9
 639+ 9BD9 21 CE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BDC 3A DC 89     	ld a,(Vel_right)
 641+ 9BDF A7           	and a
 642+ 9BE0 28 06        	jr z,1F
 643+ 9BE2 47           	ld b,a
 644+ 9BE3 34           3 inc (hl)
 645+ 9BE4 10 FD        	djnz 3B
 646+ 9BE6 18 01        	jr 2F
 647+ 9BE8 34           1 inc (hl)
 648+ 9BE9 C9           2 ret
 649+ 9BEA
 650+ 9BEA              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BEA              ;
 652+ 9BEA              ;	5/2/23
 653+ 9BEA              ;
 654+ 9BEA              ;	Dec_CTRL_DESPLZ
 655+ 9BEA              ;
 656+ 9BEA              ;
 657+ 9BEA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BEA
 659+ 9BEA 21 CE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BED 3A DB 89     	ld a,(Vel_left)
 661+ 9BF0 A7           	and a
 662+ 9BF1 28 06        	jr z,1F
 663+ 9BF3 47           	ld b,a
 664+ 9BF4 35           3 dec (hl)
 665+ 9BF5 10 FD        	djnz 3B
 666+ 9BF7 18 01        	jr 2F
 667+ 9BF9 35           1 dec (hl)
 668+ 9BFA C9           2 ret
 669+ 9BFB
 670+ 9BFB              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9BFB
 672+ 9BFB 2A C8 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9BFE 01 1F 00     	ld bc,31
 674+ 9C01 A7           	and a
 675+ 9C02 ED 4A        	adc hl,bc
 676+ 9C04 22 C8 89     	ld (Posicion_actual),hl
 677+ 9C07 21 F4 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9C0A CB C6        	set 0,(hl)
 679+ 9C0C C9           	ret
 680+ 9C0D
 681+ 9C0D              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9C0D
 683+ 9C0D 2A C8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9C10 01 1F 00     	ld bc,31
 685+ 9C13 A7           	and a
 686+ 9C14 ED 42        	sbc hl,bc
 687+ 9C16 22 C8 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9C19 21 F4 89     	ld hl,Ctrl_0
 689+ 9C1C CB CE        	set 1,(hl)
 690+ 9C1E C9           	ret
 691+ 9C1F
 692+ 9C1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9C1F
 694+ 9C1F 24           Reaparece_abajo inc h
 695+ 9C20 01 E0 17     	ld bc,$17e0
 696+ 9C23 A7           	and a
 697+ 9C24 ED 4A        	adc hl,bc
 698+ 9C26 22 C8 89     	ld (Posicion_actual),hl
 699+ 9C29 21 F4 89     	ld hl,Ctrl_0
 700+ 9C2C CB D6        	set 2,(hl)
 701+ 9C2E C9           	ret
 702+ 9C2F
 703+ 9C2F              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C2F
 705+ 9C2F 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C32 A7           	and a
 707+ 9C33 ED 42        	sbc hl,bc
 708+ 9C35 22 C8 89     	ld (Posicion_actual),hl
 709+ 9C38 21 F4 89     	ld hl,Ctrl_0
 710+ 9C3B CB DE        	set 3,(hl)
 711+ 9C3D C9           	ret
 712+ 9C3E
 713+ 9C3E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C3E              ;
 715+ 9C3E              ;	15/07/23
 716+ 9C3E
 717+ 9C3E              Reinicio
 718+ 9C3E
 719+ 9C3E              ; Vamos a reiniciar los punteros y variables de movimiento.
 720+ 9C3E
 721+ 9C3E AF           	xor a
 722+ 9C3F 21 FB 89     	ld hl,Puntero_indice_mov_bucle
 723+ 9C42 CD 60 9C     	call Limpia_contenido_hl
 724+ 9C45
 725+ 9C45 21 C8 89     	ld hl,Posicion_actual
 726+ 9C48 CD 60 9C     	call Limpia_contenido_hl
 727+ 9C4B
 728+ 9C4B CD EA 9E     	call Inicializa_Puntero_indice_mov
 729+ 9C4E CD 78 9E     	call Inicia_Puntero_mov
 730+ 9C51
 731+ 9C51 21 FD 89     	ld hl,Incrementa_puntero
 732+ 9C54 06 05        	ld b,5
 733+ 9C56 77           1 ld (hl),a
 734+ 9C57 23           	inc hl
 735+ 9C58 10 FC        	djnz 1B
 736+ 9C5A
 737+ 9C5A 21 06 8A     	ld hl,Ctrl_2
 738+ 9C5D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 739+ 9C5F
 740+ 9C5F C9           	ret
 741+ 9C60
 742+ 9C60 77           Limpia_contenido_hl	ld (hl),a
 743+ 9C61 23           	inc hl
 744+ 9C62 77           	ld (hl),a
 745+ 9C63 C9           	ret
 746+ 9C64
 747+ 9C64
# file closed: Direcciones.asm
1286  9C64              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C64              ; ------------------------------------------------------------------------
   2+ 9C64              ;
   3+ 9C64              ;	02/04/23
   4+ 9C64              ;
   5+ 9C64              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C64              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C64              ;
   8+ 9C64              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C64              ;
  10+ 9C64              ;	Modifica: A,BC y DE.
  11+ 9C64
  12+ 9C64 C5           Genera_coordenadas push bc
  13+ 9C65 E5           	push hl
  14+ 9C66 D5           	push de
  15+ 9C67
  16+ 9C67 2A C8 89     	ld hl,(Posicion_actual)
  17+ 9C6A
  18+ 9C6A 7D           	ld a,l
  19+ 9C6B E6 1F        	and $1f
  20+ 9C6D 32 CC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C70
  22+ 9C70 CD D9 98     	call calcula_tercio
  23+ 9C73 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C74
  25+ 9C74 1E 00        	ld e,0
  26+ 9C76 7D           	ld a,l
  27+ 9C77 E6 E0        	and $e0
  28+ 9C79 28 01        	jr z,1F
  29+ 9C7B 04           	inc b
  30+ 9C7C
  31+ 9C7C 04           1 inc b
  32+ 9C7D 05           	dec b
  33+ 9C7E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C80              ;														; _ , salimos.
  35+ 9C80 1C           3 inc e
  36+ 9C81 D6 20        	sub 32
  37+ 9C83 20 FB        	jr nz,3B
  38+ 9C85 10 F5        	djnz 1B
  39+ 9C87
  40+ 9C87 7B           2 ld a,e
  41+ 9C88 32 CD 89     	ld (Coordenada_y),a
  42+ 9C8B
  43+ 9C8B D1           	pop de
  44+ 9C8C E1           	pop hl
  45+ 9C8D C1           	pop bc
  46+ 9C8E
  47+ 9C8E C9           	ret
  48+ 9C8F
  49+ 9C8F              ; ------------------------------------------------------------------------
  50+ 9C8F              ;	28/05/23
  51+ 9C8F              ;
  52+ 9C8F              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C8F              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C8F              ;
  55+ 9C8F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C8F              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C8F              ;
  58+ 9C8F              ;		DE="$120d"
  59+ 9C8F              ;
  60+ 9C8F              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C8F              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C8F              ;
  63+ 9C8F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C8F
  65+ 9C8F              ;	Modifica: A,BC y DE.
  66+ 9C8F
  67+ 9C8F
  68+ 9C8F              Genera_coordenadas_disparo
  69+ 9C8F
  70+ 9C8F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C8F
  72+ 9C8F 7D           	ld a,l
  73+ 9C90 E6 1F        	and $1f
  74+ 9C92 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C93 CD D9 98     	call calcula_tercio
  76+ 9C96 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C97 1E 00        	ld e,0
  78+ 9C99 7D           	ld a,l
  79+ 9C9A E6 E0        	and $e0
  80+ 9C9C 28 01        	jr z,1F
  81+ 9C9E 04           	inc b
  82+ 9C9F 1C           1 inc e
  83+ 9CA0 D6 20        	sub 32
  84+ 9CA2 20 FB        	jr nz,1B
  85+ 9CA4 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CA6 C9           	ret
  87+ 9CA7
# file closed: Genera_coordenadas.asm
1287  9CA7              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CA7
   2+ 9CA7
   3+ 9CA7              ;   07/07/23
   4+ 9CA7              ;
   5+ 9CA7              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CA7              ;
   7+ 9CA7              ;   Codificación:
   8+ 9CA7              ;
   9+ 9CA7              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CA7              ;
  11+ 9CA7              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CA7              ;
  13+ 9CA7              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CA7              ;
  15+ 9CA7              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CA7              ;
  17+ 9CA7              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CA7              ;                               ..... %01000010 Vel_up 4
  19+ 9CA7              ;                                               Vel_down 2
  20+ 9CA7              ;                               ..... $42
  21+ 9CA7              ;
  22+ 9CA7              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CA7              ;
  24+ 9CA7              ;                               ..... %01000010 Vel_left 4
  25+ 9CA7              ;                                               Vel_right 2
  26+ 9CA7              ;                               ..... $42
  27+ 9CA7              ;
  28+ 9CA7              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CA7              ;
  30+ 9CA7              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CA7              ;
  32+ 9CA7              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CA7              ;
  34+ 9CA7              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CA7              ;                                     $53
  36+ 9CA7              ;
  37+ 9CA7              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CA7              ;
  39+ 9CA7              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CA7              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CA7              ;
  42+ 9CA7              ;                       Arriba ..... $81
  43+ 9CA7              ;                       Arriba - izquierda ..... $a1
  44+ 9CA7              ;                       Arriba - derecha ..... $91
  45+ 9CA7              ;
  46+ 9CA7              ;                       Abajo ..... $41
  47+ 9CA7              ;                       Abajo - izquierda ..... $61
  48+ 9CA7              ;                       Abajo - derecha ..... $51
  49+ 9CA7              ;
  50+ 9CA7              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CA7              ;
  52+ 9CA7              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CA7              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CA7              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CA7              ;
  56+ 9CA7              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CA7              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CA7              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CA7              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CA7              ;
  61+ 9CA7              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del DESPLAZAMIENTO.
  62+ 9CA7              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CA7              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CA7              ;
  65+ 9CA7              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CA7              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CA7              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CA7              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CA7
  70+ 9CA7              ; ----- ----- ----- ----- -----
  71+ 9CA7
  72+ 9CA7 BB 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CA9
  74+ 9CA9 C7 9C            defw Codo_abajo_derecha
  75+ 9CAB
  76+ 9CAB FB 9C            defw Derecha_y_subiendo
  77+ 9CAD 05 9D            defw Derecha_y_subiendo_1
  78+ 9CAF
  79+ 9CAF 0F 9D            defw Codo_derecha_abajo
  80+ 9CB1 3F 9D            defw Codo_abajo_izq.
  81+ 9CB3
  82+ 9CB3 73 9D            defw Izquierda_y_subiendo
  83+ 9CB5 7D 9D            defw Izquierda_y_subiendo_1
  84+ 9CB7
  85+ 9CB7 87 9D            defw Codo_izquierda_abajo
  86+ 9CB9
  87+ 9CB9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  88+ 9CBB
  89+ 9CBB 14 11 45 01  Bajo_decelerando db $14,$11,$45,1           ; Abajo. 5rep. vel.4
  90+ 9CBF 12 11 47 01      db $12,$11,$47,1                        ; Abajo. 7rep. vel.2
  91+ 9CC3 11 11 47 FE      db $11,$11,$47,254                      ; Abajo  7rep. --- Termina movimiento.
  92+ 9CC7
  93+ 9CC7 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
  94+ 9CCB 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
  95+ 9CCF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
  96+ 9CD3 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
  97+ 9CD7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
  98+ 9CDB 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
  99+ 9CDF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 100+ 9CE3 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 101+ 9CE7 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 102+ 9CEB 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 103+ 9CEF 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 104+ 9CF3 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 105+ 9CF7 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 106+ 9CFB
 107+ 9CFB
 108+ 9CFB 11 12 14 01  Derecha_y_subiendo db $11,$12,$14,1         ; Derecha. 4rep. vel.2
 109+ 9CFF 11 11 91 FD      db $11,$11,$91,253,12,0                 ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 109+ 9D03 0C 00
 110+ 9D05 11 11 1A 01  Derecha_y_subiendo_1 db $11,$11,$1a,1       ; Derecha. 8rep.
 111+ 9D09 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 7rep. --- Termina movimiento.
 111+ 9D0D 06 00
 112+ 9D0F
 113+ 9D0F              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 114+ 9D0F
 115+ 9D0F
 116+ 9D0F 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 117+ 9D13 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 118+ 9D17 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 119+ 9D1B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 120+ 9D1F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 121+ 9D23 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 122+ 9D27 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 123+ 9D2B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 124+ 9D2F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 125+ 9D33 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 126+ 9D37 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 127+ 9D3B 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 128+ 9D3F
 129+ 9D3F 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 130+ 9D43 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 131+ 9D47 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 132+ 9D4B 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 133+ 9D4F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 134+ 9D53 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 135+ 9D57 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 136+ 9D5B 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 137+ 9D5F 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 138+ 9D63 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 139+ 9D67 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 140+ 9D6B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 141+ 9D6F 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 142+ 9D73
 143+ 9D73 11 21 24 01  Izquierda_y_subiendo db $11,$21,$24,1          ; Izq. 4rep.
 144+ 9D77 11 11 A1 FD      db $11,$11,$a1,253,12,0                    ; Arriba/Izq. 1rep. --- Repite Mov 18rep. --- Termina movimiento.
 144+ 9D7B 0C 00
 145+ 9D7D 11 11 2A 01  Izquierda_y_subiendo_1 db $11,$11,$2a,1        ; Izq. 6rep.
 146+ 9D81 11 11 A1 FD      db $11,$11,$a1,253,6,0                     ; Arriba/Izq. 1rep. --- Repite Mov 18rep. --- Termina movimiento.
 146+ 9D85 06 00
 147+ 9D87
 148+ 9D87 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 149+ 9D8B 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 150+ 9D8F 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 151+ 9D93 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 152+ 9D97 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 153+ 9D9B 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 154+ 9D9F 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 155+ 9DA3 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 156+ 9DA7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 157+ 9DAB 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 158+ 9DAF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 159+ 9DB3 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 160+ 9DB7
 161+ 9DB7              ; ----- ----- ----- ----- -----
 162+ 9DB7              ;
 163+ 9DB7              ;   27/06/23
 164+ 9DB7
 165+ 9DB7              Movimiento
 166+ 9DB7
 167+ 9DB7              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 168+ 9DB7
 169+ 9DB7 3A 06 8A         ld a,(Ctrl_2)
 170+ 9DBA CB 57            bit 2,a
 171+ 9DBC 20 1B            jr nz, Desplazamiento_iniciado
 172+ 9DBE
 173+ 9DBE 2A F9 89         ld hl,(Puntero_mov)
 174+ 9DC1 7E               ld a,(hl)
 175+ 9DC2
 176+ 9DC2              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 177+ 9DC2
 178+ 9DC2              Inicia_desplazamiento.
 179+ 9DC2
 180+ 9DC2              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 181+ 9DC2
 182+ 9DC2 CD AB 9E         call Ajusta_velocidad_desplazamiento
 183+ 9DC5
 184+ 9DC5              ; Iniciamos (Repetimos_mov).
 185+ 9DC5
 186+ 9DC5 7E               ld a,(hl)
 187+ 9DC6 E6 0F            and $0f
 188+ 9DC8 32 FE 89         ld (Repetimos_desplazamiento),a
 189+ 9DCB 32 FF 89         ld (Repetimos_desplazamiento_backup),a
 190+ 9DCE
 191+ 9DCE              ; Iniciamos (Cola_de_desplazamiento).
 192+ 9DCE
 193+ 9DCE 23               inc hl
 194+ 9DCF 7E               ld a,(hl)
 195+ 9DD0 32 01 8A         ld (Cola_de_desplazamiento),a
 196+ 9DD3 2B               dec hl
 197+ 9DD4
 198+ 9DD4 21 06 8A         ld hl,Ctrl_2
 199+ 9DD7 CB D6            set 2,(hl)
 200+ 9DD9
 201+ 9DD9              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 202+ 9DD9              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 203+ 9DD9
 204+ 9DD9              Desplazamiento_iniciado
 205+ 9DD9
 206+ 9DD9 CD 83 9E         call Aplica_desplazamiento
 207+ 9DDC
 208+ 9DDC 3A 06 8A         ld a,(Ctrl_2)
 209+ 9DDF CB 67            bit 4,a
 210+ 9DE1 C0               ret nz                              ; Salimos si se ha producido reinicio.
 211+ 9DE2
 212+ 9DE2 21 FE 89     3 ld hl,Repetimos_desplazamiento
 213+ 9DE5 35               dec (hl)
 214+ 9DE6 C0               ret nz
 215+ 9DE7
 216+ 9DE7              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 217+ 9DE7              ; Hay que volver a ejecutar este desplazamiento ???.
 218+ 9DE7              ; Analiza (Cola_de_desplazamiento).
 219+ 9DE7
 220+ 9DE7 3A 01 8A     Cola ld a,(Cola_de_desplazamiento)
 221+ 9DEA A7               and a
 222+ 9DEB CC D4 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 223+ 9DEE 28 30            jr z,Reinicia_el_movimiento
 224+ 9DF0
 225+ 9DF0 FE FF            cp $ff
 226+ 9DF2 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 227+ 9DF4
 228+ 9DF4 FE FE            cp $fe
 229+ 9DF6 CC 63 9E         call z,Fijamos_bucle
 230+ 9DF9 28 25            jr z,Reinicia_el_movimiento
 231+ 9DFB
 232+ 9DFB FE FD            cp $fd
 233+ 9DFD 20 11            jr nz,1F
 234+ 9DFF
 235+ 9DFF              ; ---
 236+ 9DFF              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 237+ 9DFF
 238+ 9DFF 3A 06 8A         ld a,(Ctrl_2)
 239+ 9E02 CB 5F            bit 3,a
 240+ 9E04 20 1A            jr nz,Reinicia_el_movimiento
 241+ 9E06
 242+ 9E06              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 243+ 9E06
 244+ 9E06 21 06 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 245+ 9E09 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 246+ 9E0B
 247+ 9E0B CD 6D 9E         call Inicia_Repetimos_movimiento
 248+ 9E0E 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 249+ 9E10              ; ---
 250+ 9E10
 251+ 9E10 FE 01        1 cp 1
 252+ 9E12 CA 4D 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 253+ 9E15
 254+ 9E15 3D               dec a
 255+ 9E16 32 01 8A         ld (Cola_de_desplazamiento),a
 256+ 9E19
 257+ 9E19 3A FF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 258+ 9E1C 32 FE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 259+ 9E1F              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 260+ 9E1F C9               ret
 261+ 9E20
 262+ 9E20              Reinicia_el_movimiento
 263+ 9E20
 264+ 9E20 3A 06 8A         ld a,(Ctrl_2)
 265+ 9E23 CB 5F            bit 3,a
 266+ 9E25 28 1B            jr z,2F
 267+ 9E27
 268+ 9E27              ; (Cola_de_desplazamiento)="254".
 269+ 9E27
 270+ 9E27 21 00 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 271+ 9E2A 35               dec (hl)
 272+ 9E2B 20 15            jr nz,2F
 273+ 9E2D
 274+ 9E2D              ; Fin de las repeticiones del último movimiento.
 275+ 9E2D
 276+ 9E2D 21 06 8A         ld hl,Ctrl_2
 277+ 9E30 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 278+ 9E32
 279+ 9E32 2A F9 89         ld hl,(Puntero_mov)
 280+ 9E35 23               inc hl
 281+ 9E36 23               inc hl
 282+ 9E37 23               inc hl
 283+ 9E38 22 F9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 284+ 9E3B              ;                                                               ; _ para ejecutar su mandato. :)
 285+ 9E3B 7E               ld a,(hl)
 286+ 9E3C 32 01 8A         ld (Cola_de_desplazamiento),a
 287+ 9E3F
 288+ 9E3F C3 E7 9D         jp Cola
 289+ 9E42
 290+ 9E42
 291+ 9E42 CD 78 9E     2 call Inicia_Puntero_mov
 292+ 9E45
 293+ 9E45 21 06 8A         ld hl,Ctrl_2
 294+ 9E48 CB 96            res 2,(hl)
 295+ 9E4A
 296+ 9E4A C3 B7 9D         jp Movimiento
 297+ 9E4D
 298+ 9E4D              Siguiente_desplazamiento
 299+ 9E4D
 300+ 9E4D              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 301+ 9E4D              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 302+ 9E4D
 303+ 9E4D 21 06 8A         ld hl,Ctrl_2
 304+ 9E50 CB 96            res 2,(hl)
 305+ 9E52
 306+ 9E52 2A F9 89         ld hl,(Puntero_mov)
 307+ 9E55 23               inc hl
 308+ 9E56 23               inc hl
 309+ 9E57 22 F9 89         ld (Puntero_mov),hl
 310+ 9E5A
 311+ 9E5A 7E               ld a,(hl)
 312+ 9E5B A7               and a
 313+ 9E5C CC D4 9E         call z,Incrementa_Puntero_indice_mov
 314+ 9E5F CA 20 9E         jp z,Reinicia_el_movimiento
 315+ 9E62
 316+ 9E62 C9               ret
 317+ 9E63              ; Subrutinas -----------------------------------------
 318+ 9E63              ; ---------- --------- --------- ---------- ----------
 319+ 9E63              ;
 320+ 9E63              ;   12/07/23
 321+ 9E63              ;
 322+ 9E63              ;   Fijamos_bucle
 323+ 9E63              ;
 324+ 9E63              ;
 325+ 9E63
 326+ 9E63 CD D4 9E     Fijamos_bucle call Incrementa_Puntero_indice_mov
 327+ 9E66 2A F7 89         ld hl,(Puntero_indice_mov)
 328+ 9E69 22 FB 89         ld (Puntero_indice_mov_bucle),hl
 329+ 9E6C C9               ret
 330+ 9E6D
 331+ 9E6D              ; ---------- --------- --------- ---------- ----------
 332+ 9E6D              ;
 333+ 9E6D              ;   07/7/23
 334+ 9E6D              ;
 335+ 9E6D              ;   Inicia_Repetimos_movimiento
 336+ 9E6D              ;
 337+ 9E6D              ;
 338+ 9E6D
 339+ 9E6D              Inicia_Repetimos_movimiento
 340+ 9E6D
 341+ 9E6D              ; Iniciamos (Repetimos_movimiento).
 342+ 9E6D
 343+ 9E6D DD 2A F9 89      ld ix,(Puntero_mov)
 344+ 9E71 DD 7E 02         ld a,(ix+2)
 345+ 9E74 32 00 8A         ld (Repetimos_movimiento),a
 346+ 9E77
 347+ 9E77 C9               ret
 348+ 9E78
 349+ 9E78              ; ---------- --------- --------- ---------- ----------
 350+ 9E78              ;
 351+ 9E78              ;   26/6/23
 352+ 9E78              ;
 353+ 9E78              ;   Inicia_Puntero_mov
 354+ 9E78              ;
 355+ 9E78              ;
 356+ 9E78
 357+ 9E78 2A F7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 358+ 9E7B 5E               ld e,(hl)
 359+ 9E7C 23               inc hl
 360+ 9E7D 56               ld d,(hl)
 361+ 9E7E EB               ex de,hl
 362+ 9E7F 22 F9 89         ld (Puntero_mov),hl
 363+ 9E82 C9               ret
 364+ 9E83
 365+ 9E83              ; ---------- --------- --------- ---------- ----------
 366+ 9E83              ;
 367+ 9E83              ;   27/06/23
 368+ 9E83              ;
 369+ 9E83              ;   Aplica_movimiento.
 370+ 9E83
 371+ 9E83              Aplica_desplazamiento
 372+ 9E83
 373+ 9E83              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 374+ 9E83
 375+ 9E83 2A F9 89         ld hl, (Puntero_mov)
 376+ 9E86 CB 7E            bit 7,(hl)
 377+ 9E88 28 03            jr z,1F
 378+ 9E8A CD 50 99         call Mov_up
 379+ 9E8D 2A F9 89     1 ld hl, (Puntero_mov)
 380+ 9E90 CB 76            bit 6,(hl)
 381+ 9E92 28 03            jr z,2F
 382+ 9E94 CD 1F 99         call Mov_down
 383+ 9E97 2A F9 89     2 ld hl, (Puntero_mov)
 384+ 9E9A CB 6E            bit 5,(hl)
 385+ 9E9C 28 03            jr z,3F
 386+ 9E9E CD B1 9A         call Mov_left
 387+ 9EA1 2A F9 89     3 ld hl, (Puntero_mov)
 388+ 9EA4 CB 66            bit 4,(hl)
 389+ 9EA6 C8               ret z
 390+ 9EA7 CD 93 99         call Mov_right
 391+ 9EAA C9               ret
 392+ 9EAB
 393+ 9EAB              ; ---------- --------- --------- ---------- ----------
 394+ 9EAB              ;
 395+ 9EAB              ;   26/06/23
 396+ 9EAB              ;
 397+ 9EAB              ;   Ajusta_velocidad_desplazamiento.
 398+ 9EAB
 399+ 9EAB              Ajusta_velocidad_desplazamiento
 400+ 9EAB
 401+ 9EAB              ; 1er byte de la cadena de movimiento.
 402+ 9EAB              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 403+ 9EAB
 404+ 9EAB CD C9 9E         call Extrae_nibble_alto
 405+ 9EAE
 406+ 9EAE 32 DD 89         ld (Vel_up),a
 407+ 9EB1 79               ld a,c
 408+ 9EB2 E6 0F            and $0f
 409+ 9EB4 32 DE 89         ld (Vel_down),a
 410+ 9EB7
 411+ 9EB7              ; Saltamos al 2º byte de la cadena de movimiento.
 412+ 9EB7              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 413+ 9EB7
 414+ 9EB7 23               inc hl
 415+ 9EB8 CD C9 9E         call Extrae_nibble_alto
 416+ 9EBB
 417+ 9EBB 32 DB 89         ld (Vel_left),a
 418+ 9EBE 79               ld a,c
 419+ 9EBF E6 0F            and $0f
 420+ 9EC1 32 DC 89         ld (Vel_right),a
 421+ 9EC4
 422+ 9EC4              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 423+ 9EC4
 424+ 9EC4 23               inc hl
 425+ 9EC5 22 F9 89         ld (Puntero_mov),hl
 426+ 9EC8 C9               ret
 427+ 9EC9
 428+ 9EC9 06 04        Extrae_nibble_alto ld b,4
 429+ 9ECB 7E               ld a,(hl)
 430+ 9ECC 4F               ld c,a
 431+ 9ECD E6 F0            and $f0
 432+ 9ECF CB 3F        1 srl a
 433+ 9ED1 10 FC            djnz 1B
 434+ 9ED3 C9               ret
 435+ 9ED4
 436+ 9ED4              ; ---------- --------- --------- ---------- ----------
 437+ 9ED4              ;
 438+ 9ED4              ;   5/7/23
 439+ 9ED4              ;
 440+ 9ED4              ;   Incrementa_Puntero_indice_mov
 441+ 9ED4
 442+ 9ED4              Incrementa_Puntero_indice_mov
 443+ 9ED4
 444+ 9ED4 21 FD 89         ld hl,Incrementa_puntero
 445+ 9ED7 34               inc (hl)
 446+ 9ED8
 447+ 9ED8 2A F7 89         ld hl,(Puntero_indice_mov)
 448+ 9EDB 01 02 00         ld bc,2
 449+ 9EDE A7               and a
 450+ 9EDF 09               add hl,bc
 451+ 9EE0 22 F7 89         ld (Puntero_indice_mov),hl
 452+ 9EE3
 453+ 9EE3 7E               ld a,(hl)
 454+ 9EE4 A7               and a
 455+ 9EE5
 456+ 9EE5              ;! STOP. Fin del patrón de movimiento de la entidad.
 457+ 9EE5
 458+ 9EE5              ;    jr z,$
 459+ 9EE5
 460+ 9EE5              ;! Reinicia el Patrón de movimiento.
 461+ 9EE5
 462+ 9EE5 CC EA 9E         call z,Inicializa_Puntero_indice_mov
 463+ 9EE8
 464+ 9EE8 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 465+ 9EE9
 466+ 9EE9 C9               ret
 467+ 9EEA
 468+ 9EEA
 469+ 9EEA              ; ---------- --------- --------- ---------- ----------
 470+ 9EEA              ;
 471+ 9EEA              ;   12/07/23
 472+ 9EEA              ;
 473+ 9EEA              ;   Inicializa_Puntero_indice_mov
 474+ 9EEA
 475+ 9EEA              Inicializa_Puntero_indice_mov
 476+ 9EEA
 477+ 9EEA              ; Existe etiqueta de bucle principal???
 478+ 9EEA
 479+ 9EEA              ;    jr $
 480+ 9EEA
 481+ 9EEA              ;    ld hl,Ctrl_2
 482+ 9EEA              ;    res 4,(hl)
 483+ 9EEA
 484+ 9EEA 2A FB 89         ld hl,(Puntero_indice_mov_bucle)
 485+ 9EED 24               inc h
 486+ 9EEE 25               dec h
 487+ 9EEF 28 05            jr z,2F
 488+ 9EF1
 489+ 9EF1 22 F7 89         ld (Puntero_indice_mov),hl
 490+ 9EF4 18 0E            jr 3F
 491+ 9EF6
 492+ 9EF6
 493+ 9EF6
 494+ 9EF6              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 495+ 9EF6
 496+ 9EF6 3A FD 89     2 ld a,(Incrementa_puntero)
 497+ 9EF9 47               ld b,a
 498+ 9EFA
 499+ 9EFA 2A F7 89         ld hl,(Puntero_indice_mov)
 500+ 9EFD 2B           1 dec hl
 501+ 9EFE 2B               dec hl
 502+ 9EFF 10 FC            djnz 1B
 503+ 9F01
 504+ 9F01 22 F7 89         ld (Puntero_indice_mov),hl
 505+ 9F04
 506+ 9F04 AF           3 xor a
 507+ 9F05 32 FD 89         ld (Incrementa_puntero),a
 508+ 9F08
 509+ 9F08 C9               ret
 510+ 9F09
 511+ 9F09
 512+ 9F09
# file closed: Patrones_de_mov.asm
1288  9F09              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9F09              ; Relojes y temporizaciones.
   2+ 9F09
   3+ 9F09              ; ------------------------------------------------------
   4+ 9F09              ;
   5+ 9F09              ;	16/7/23
   6+ 9F09              ;
   7+ 9F09              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9F09              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9F09              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9F09              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9F09              ;
  12+ 9F09              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9F09              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9F09
  15+ 9F09              ; Disparo_entidad db 1
  16+ 9F09              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9F09              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9F09
  19+ 9F09              Habilita_disparos
  20+ 9F09
  21+ 9F09 7E           	ld a,(hl)
  22+ 9F0A A7           	and a
  23+ 9F0B C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9F0C
  25+ 9F0C EB           	ex de,hl
  26+ 9F0D
  27+ 9F0D 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9F0E C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9F0F
  30+ 9F0F              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9F0F
  32+ 9F0F 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9F10 7E           	ld a,(hl)
  34+ 9F11 23           	inc hl
  35+ 9F12 77           	ld (hl),a
  36+ 9F13
  37+ 9F13 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9F14 3E 01        	ld a,1
  39+ 9F16 77           	ld (hl),a
  40+ 9F17 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1289  9F18              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F18              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F18              ;
   3+ 9F18              ;	3/1/23
   4+ 9F18              ;
   5+ 9F18              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F18
   7+ 9F18              ;	ADC HL,SP	LD (addr),SP
   8+ 9F18              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F18              ;	ADD IX,SP	LD SP,nn
  10+ 9F18              ; 	ADD IY,SP	LD SP,HL
  11+ 9F18              ;				LD SP,IX
  12+ 9F18              ;	DEC SP		LD SP,IY
  13+ 9F18
  14+ 9F18              ;	EX (SP),HL
  15+ 9F18              ;	EX (SP),IX
  16+ 9F18              ;	EX (SP),IY
  17+ 9F18
  18+ 9F18              ;	INC SP
  19+ 9F18
  20+ 9F18
  21+ 9F18                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 19 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 08 8A         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 1F 8A         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 1D 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 1F 8A         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 1D 8A     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 19 8A  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1290  7FD5
1291  7FD5              	SAVESNA "Pruebas.sna", START
1292  7FD5
1293  7FD5
1294  7FD5
1295  7FD5
# file closed: Banco_de_pruebas.asm
