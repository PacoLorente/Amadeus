# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 EF 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 3A F9 89     	ld a,(Ctrl_3)
  40  AA1C CB 47        	bit 0,a
  41  AA1E 28 06        	jr z,1F
  42  AA20
  43  AA20 CD BE 93     	call Borra_sprites
  44  AA23 CD F9 92     	call Extrae_Album_de_fotos
  45  AA26
  46  AA26              ;	ld a,6
  47  AA26              ;	out ($fe),a
  48  AA26              ;	call Pinta_Amadeus										; Borde amarillo.
  49  AA26
  50  AA26              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  51  AA26              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  52  AA26
  53  AA26              ;	ld a,7
  54  AA26              ;	out ($fe),a												; Borde blanco.
  55  AA26              ;	call Guarda_parametros_DRAW
  56  AA26              ;	call Restore_Amadeus
  57  AA26
  58  AA26              ; Posible colisión Entidad-Amadeus ???
  59  AA26
  60  AA26              ;	ld a,(Impacto2)
  61  AA26              ;	bit 2,a
  62  AA26              ;	jr z,1F
  63  AA26
  64  AA26              ;	call Detecta_colision_nave_entidad
  65  AA26
  66  AA26              ;1 ld a,4
  67  AA26              ;	out ($fe),a
  68  AA26              ;	call Gestiona_Amadeus
  69  AA26
  70  AA26              ;	ld a,7
  71  AA26              ;	out ($fe),a											; Borde blanco.
  72  AA26              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  73  AA26              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  74  AA26
  75  AA26              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  76  AA26
  77  AA26              ;	call Recupera_parametros_DRAW
  78  AA26
  79  AA26 CD DA 8D     1 call Actualiza_relojes
  80  AA29
  81  AA29 21 F9 89     	ld hl,Ctrl_3
  82  AA2C CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  83  AA2E
  84  AA2E FD E1        	pop iy
  85  AA30 DD E1        	pop ix
  86  AA32 F1           	pop af
  87  AA33 C1           	pop bc
  88  AA34 D1           	pop de
  89  AA35 E1           	pop hl
  90  AA36 D9           	exx
  91  AA37 C1           	pop bc
  92  AA38 D1           	pop de
  93  AA39 E1           	pop hl
  94  AA3A 08           	ex af,af'
  95  AA3B F1           	pop af
  96  AA3C 08           	ex af,af'
  97  AA3D D9           	exx
  98  AA3E
  99  AA3E ED 7B EF 89  	ld sp,(Stack_3)
 100  AA42
 101  AA42 FB           	ei
 102  AA43
 103  AA43 3E 01        	ld a,1												; Borde azul.
 104  AA45 D3 FE        	out ($fe),a
 105  AA47
 106  AA47 C9           	ret
 107  AA48
 108  AA48              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 109  AA48
 110  AA48              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA48              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA48              ;
   3+ AA48              ;	17/02/23
   4+ AA48              ;
   5+ AA48              ;	Sprites e índices.
   6+ AA48
   7+ AA48              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 C0 82        	defw Badsat_izq_fe
  31+ 8155 90 82        	defw Badsat_izq_fd
  32+ 8157 60 82        	defw Badsat_izq_fc
  33+ 8159 30 82        	defw Badsat_izq_fb
  34+ 815B 00 82        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1              	org $8200
  58+ 8200
  59+ 8200 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  59+ 8204 42 80 00 45
  60+ 8208 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  60+ 820C 00 55 40 00
  61+ 8210 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  61+ 8214 00 00 6C 00
  62+ 8218 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  62+ 821C FF 00 05 7D
  63+ 8220 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  63+ 8224 15 4C 00 0A
  64+ 8228 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  64+ 822C 00 02 00 00
  65+ 8230
  66+ 8230 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  66+ 8234 21 40 00 22
  67+ 8238 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  67+ 823C 00 2A A0 00
  68+ 8240 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  68+ 8244 80 00 36 00
  69+ 8248 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  69+ 824C 7F 80 02 BE
  70+ 8250 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  70+ 8254 0A A6 00 05
  71+ 8258 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  71+ 825C 00 01 00 00
  72+ 8260
  73+ 8260 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  73+ 8264 10 A0 00 11
  74+ 8268 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  74+ 826C 00 15 50 00
  75+ 8270 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  75+ 8274 40 00 1B 00
  76+ 8278 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  76+ 827C BF C0 01 5F
  77+ 8280 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  77+ 8284 05 53 00 02
  78+ 8288 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  78+ 828C 00 00 80 00
  79+ 8290
  80+ 8290 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  80+ 8294 08 50 00 08
  81+ 8298 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  81+ 829C 00 0A A8 00
  82+ 82A0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  82+ 82A4 A0 00 0D 80
  83+ 82A8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  83+ 82AC 5F F8 00 AF
  84+ 82B0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  84+ 82B4 02 A9 00 01
  85+ 82B8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  85+ 82BC 00 00 40 00
  86+ 82C0
  87+ 82C0 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  87+ 82C4 04 28 00 04
  88+ 82C8 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  88+ 82CC 00 05 54 00
  89+ 82D0 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  89+ 82D4 D0 00 06 C0
  90+ 82D8 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  90+ 82DC 2F FC 00 57
  91+ 82E0 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  91+ 82E4 01 54 80 00
  92+ 82E8 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  92+ 82EC 00 00 20 00
  93+ 82F0
  94+ 82F0
  95+ 82F0 00 83        Indice_Badsat_der defw Badsat_derecha
  96+ 82F2 20 83        	defw Badsat_der_f8
  97+ 82F4 50 83        	defw Badsat_der_f9
  98+ 82F6 80 83        	defw Badsat_der_fa
  99+ 82F8 B0 83        	defw Badsat_der_fb
 100+ 82FA 00 84        	defw Badsat_der_fc
 101+ 82FC 30 84        	defw Badsat_der_fd
 102+ 82FE 60 84        	defw Badsat_der_fe
 103+ 8300
 104+ 8300 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 104+ 8304 54 40 AA 40
 105+ 8308 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 105+ 830C 17 FE 06 C0
 106+ 8310 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 106+ 8314 17 D4 02 2A
 107+ 8318 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 107+ 831C 00 14 00 08
 108+ 8320
 109+ 8320 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 109+ 8324 20 00 2A 20
 110+ 8328 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 110+ 832C 2A A0 00 15
 111+ 8330 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 111+ 8334 00 03 60 00
 112+ 8338 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 112+ 833C F4 00 0B EA
 113+ 8340 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 113+ 8344 03 2A 80 00
 114+ 8348 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 114+ 834C 00 00 04 00
 115+ 8350
 116+ 8350 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 116+ 8354 10 00 15 10
 117+ 8358 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 117+ 835C 15 50 00 0A
 118+ 8360 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 118+ 8364 80 01 B0 00
 119+ 8368 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 119+ 836C FA 00 05 F5
 120+ 8370 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 120+ 8374 01 95 40 00
 121+ 8378 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 121+ 837C 00 00 02 00
 122+ 8380
 123+ 8380 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 123+ 8384 08 00 0A 88
 124+ 8388 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 124+ 838C 0A A8 00 05
 125+ 8390 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 125+ 8394 C0 00 D8 00
 126+ 8398 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 126+ 839C FD 00 02 FA
 127+ 83A0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 127+ 83A4 00 CA A0 00
 128+ 83A8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 128+ 83AC 80 00 01 00
 129+ 83B0
 130+ 83B0 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 130+ 83B4 84 00 05 44
 131+ 83B8 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 131+ 83BC 05 54 00 02
 132+ 83C0 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 132+ 83C4 E0 00 6C 00
 133+ 83C8 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 133+ 83CC FE 80 01 7D
 134+ 83D0 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 134+ 83D4 00 65 50 00
 135+ 83D8 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 135+ 83DC 40 00 00 80
 136+ 83E0
 137+ 83E0              	org $8400
 138+ 8400
 139+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 139+ 8404 42 00 02 A2
 140+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 140+ 840C 02 AA 00 01
 141+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 141+ 8414 F0 00 36 00
 142+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 142+ 841C FF 40 00 BE
 143+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 143+ 8424 00 32 A8 00
 144+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 144+ 842C A0 00 00 40
 145+ 8430
 146+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 146+ 8434 A1 00 01 51
 147+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 147+ 843C 01 55 00 00
 148+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 148+ 8444 F8 00 1B 00
 149+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 149+ 844C FF A0 00 1F
 150+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 150+ 8454 00 09 54 00
 151+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 151+ 845C 50 00 00 20
 152+ 8460
 153+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 153+ 8464 50 80 00 A8
 154+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 154+ 846C 00 AA 80 00
 155+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 155+ 8474 FC 00 0D 80
 156+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 156+ 847C FF D0 00 0F
 157+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 157+ 8484 00 04 AA 00
 158+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 158+ 848C 28 00 00 10
 159+ 8490
 160+ 8490              ; ----------------------------------------------------------------------------------------
 161+ 8490
 162+ 8490              ; Amadeus. 2x2.
 163+ 8490
 164+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 165+ 8492 00 00        	defw 0
 166+ 8494 D0 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 167+ 8496 00 00        	defw 0
 168+ 8498 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 169+ 849A 00 00        	defw 0
 170+ 849C 30 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 171+ 849E 00 00        	defw 0	 								; (Fín de índice).
 172+ 84A0
 173+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 174+ 84A2 00 00        	defw 0
 175+ 84A4 30 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 176+ 84A6 00 00        	defw 0
 177+ 84A8 00 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 178+ 84AA 00 00        	defw 0
 179+ 84AC D0 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 180+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 181+ 84B0
 182+ 84B0 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 182+ 84B4 26 64 24 24
 183+ 84B8 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 183+ 84BC 6F F6 67 E6
 184+ 84C0 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 184+ 84C4 F7 EF FF FF
 185+ 84C8 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 185+ 84CC 8B D1 71 8E
 186+ 84D0
 187+ 84D0 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 187+ 84D4 F1 00 09 99
 188+ 84D8 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 188+ 84DC 0B 0D 00 1B
 189+ 84E0 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 189+ 84E4 80 19 F9 80
 190+ 84E8 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 190+ 84EC F3 C0 3D FB
 191+ 84F0 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 191+ 84F4 3E F7 C0 3E
 192+ 84F8 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 192+ 84FC 40 1C 63 80
 193+ 8500
 194+ 8500 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 194+ 8504 3C 40 02 66
 195+ 8508 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 195+ 850C 02 C3 40 06
 196+ 8510 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 196+ 8514 60 06 7E 60
 197+ 8518 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 197+ 851C 3C F0 0F 7E
 198+ 8520 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 198+ 8524 0F BD F0 0F
 199+ 8528 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 199+ 852C 10 07 18 E0
 200+ 8530
 201+ 8530 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 201+ 8534 8F 10 00 99
 202+ 8538 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 202+ 853C 00 B0 D0 01
 203+ 8540 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 203+ 8544 D8 01 9F 98
 204+ 8548 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 204+ 854C CF 3C 03 DF
 205+ 8550 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 205+ 8554 03 EF 7C 03
 206+ 8558 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 206+ 855C 44 01 C6 38
 207+ 8560
 208+ 8560              ; ----------------------------------------------------------------------------------------
 209+ 8560
 210+ 8560 66 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 211+ 8562 96 85        	defw Explosion_2x3_2
 212+ 8564 C6 85        	defw Explosion_2x3_3
 213+ 8566
 214+ 8566 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 214+ 856A 10 00 04 38
 215+ 856E 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 215+ 8572 02 E6 80 01
 216+ 8576 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 216+ 857A 00 03 DD 80
 217+ 857E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 217+ 8582 3B 80 01 9D
 218+ 8586 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 218+ 858A 02 FD 80 03
 219+ 858E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 219+ 8592 00 08 00 00
 220+ 8596
 221+ 8596 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 221+ 859A 38 10 03 BC
 222+ 859E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 222+ 85A2 04 06 C0 00
 223+ 85A6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 223+ 85AA 00 03 DD 80
 224+ 85AE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 224+ 85B2 3A 70 01 9C
 225+ 85B6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 225+ 85BA 04 F8 80 06
 226+ 85BE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 226+ 85C2 00 00 00 00
 227+ 85C6
 228+ 85C6 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 228+ 85CA 00 20 08 00
 229+ 85CE 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 229+ 85D2 00 06 00 00
 230+ 85D6 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 230+ 85DA 00 00 14 30
 231+ 85DE 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 231+ 85E2 38 00 01 08
 232+ 85E6 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 232+ 85EA 00 80 00 04
 233+ 85EE 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 233+ 85F2 10 08 00 20
 234+ 85F6
 235+ 85F6              ; ------------------------------------------
 236+ 85F6
 237+ 85F6 00 86        Indice_Explosion_2x2 defw Explosion_2x2_1
 238+ 85F8 20 86        	defw Explosion_2x2_2
 239+ 85FA 40 86        	defw Explosion_2x2_3
 240+ 85FC
 241+ 85FC              	org $8600
 242+ 8600
 243+ 8600 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 243+ 8604 43 84 37 D8
 244+ 8608 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 244+ 860C 17 F0 3D D8
 245+ 8610 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 245+ 8614 19 D0 1F 60
 246+ 8618 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 246+ 861C 40 00 80 00
 247+ 8620
 248+ 8620
 249+ 8620 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 249+ 8624 3B C2 60 0C
 250+ 8628 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 250+ 862C 07 F0 3D D8
 251+ 8630 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 251+ 8634 19 C6 1F 64
 252+ 8638 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 252+ 863C 80 00 00 00
 253+ 8640
 254+ 8640 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 254+ 8644 88 04 10 0C
 255+ 8648 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 255+ 864C 81 E0 01 43
 256+ 8650 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 256+ 8654 10 80 18 00
 257+ 8658 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 257+ 865C 60 01 80 02
 258+ 8660
 259+ 8660
 260+ 8660
 261+ 8660
 262+ 8660
# file closed: Sprites_e_indices.asm
 111  8660              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 8660
   2+ 8660              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 8660              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 8660
   5+ 8660              ; 19/01/24
   6+ 8660
   7+ 8660 CF 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 8662              ;	defw ...
   9+ 8662              ; 	defw ...
  10+ 8662 00 00        	defw 0
  11+ 8664
  12+ 8664              ; Control. %00000001 00000001
  13+ 8664              ;
  14+ 8664              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8664              ;                    _ hacen las entidades hacia abajo.
  16+ 8664              ;
  17+ 8664              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8664
  19+ 8664 6A 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8666 72 86        	defw Disparo_2A
  21+ 8668 7A 86        	defw Disparo_3A
  22+ 866A
  23+ 866A 00 00        Disparo_1A defw 0									; Control.
  24+ 866C 00 00        	defw 0											; Puntero objeto.
  25+ 866E 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 8670 00 00        	defw 0											; Rutina de impresión.
  27+ 8672
  28+ 8672 00 00        Disparo_2A defw 0									; Control.
  29+ 8674 00 00        	defw 0											; Puntero objeto.
  30+ 8676 00 00        	defw 0											; Puntero de impresión.
  31+ 8678 00 00        	defw 0											; Rutina de impresión.
  32+ 867A
  33+ 867A 00 00        Disparo_3A defw 0
  34+ 867C
  35+ 867C 92 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 867E 9A 86        	defw Disparo_2
  37+ 8680 A2 86        	defw Disparo_3
  38+ 8682 AA 86        	defw Disparo_4
  39+ 8684 B2 86        	defw Disparo_5
  40+ 8686 BA 86        	defw Disparo_6
  41+ 8688 C2 86        	defw Disparo_7
  42+ 868A CA 86        	defw Disparo_8
  43+ 868C D2 86        	defw Disparo_9
  44+ 868E DA 86        	defw Disparo_10
  45+ 8690 E2 86        	defw Disparo_11
  46+ 8692
  47+ 8692 00 00        Disparo_1 defw 0									; Control.
  48+ 8694 00 00        	defw 0											; Puntero objeto.
  49+ 8696 00 00        	defw 0											; Puntero de impresión.
  50+ 8698 00 00        	defw 0											; Rutina de impresión.
  51+ 869A
  52+ 869A 00 00        Disparo_2 defw 0									; Control.
  53+ 869C 00 00        	defw 0											; Puntero objeto.
  54+ 869E 00 00        	defw 0											; Puntero de impresión.
  55+ 86A0 00 00        	defw 0											; Rutina de impresión.
  56+ 86A2
  57+ 86A2 00 00        Disparo_3 defw 0									; Control.
  58+ 86A4 00 00        	defw 0											; Puntero objeto.
  59+ 86A6 00 00        	defw 0											; Puntero de impresión.
  60+ 86A8 00 00        	defw 0											; Rutina de impresión.
  61+ 86AA
  62+ 86AA 00 00        Disparo_4 defw 0									; Control.
  63+ 86AC 00 00        	defw 0											; Puntero objeto.
  64+ 86AE 00 00        	defw 0											; Puntero de impresión.
  65+ 86B0 00 00        	defw 0											; Rutina de impresión.
  66+ 86B2
  67+ 86B2 00 00        Disparo_5 defw 0									; Control.
  68+ 86B4 00 00        	defw 0											; Puntero objeto.
  69+ 86B6 00 00        	defw 0											; Puntero de impresión.
  70+ 86B8 00 00        	defw 0											; Rutina de impresión.
  71+ 86BA
  72+ 86BA 00 00        Disparo_6 defw 0									; Control.
  73+ 86BC 00 00        	defw 0											; Puntero objeto.
  74+ 86BE 00 00        	defw 0											; Puntero de impresión.
  75+ 86C0 00 00        	defw 0											; Rutina de impresión.
  76+ 86C2
  77+ 86C2 00 00        Disparo_7 defw 0									; Control.
  78+ 86C4 00 00        	defw 0											; Puntero objeto.
  79+ 86C6 00 00        	defw 0											; Puntero de impresión.
  80+ 86C8 00 00        	defw 0											; Rutina de impresión.
  81+ 86CA
  82+ 86CA 00 00        Disparo_8 defw 0									; Control.
  83+ 86CC 00 00        	defw 0											; Puntero objeto.
  84+ 86CE 00 00        	defw 0											; Puntero de impresión.
  85+ 86D0 00 00        	defw 0											; Rutina de impresión.
  86+ 86D2
  87+ 86D2 00 00        Disparo_9 defw 0									; Control.
  88+ 86D4 00 00        	defw 0											; Puntero objeto.
  89+ 86D6 00 00        	defw 0											; Puntero de impresión.
  90+ 86D8 00 00        	defw 0											; Rutina de impresión.
  91+ 86DA
  92+ 86DA 00 00        Disparo_10 defw 0									; Control.
  93+ 86DC 00 00        	defw 0											; Puntero objeto.
  94+ 86DE 00 00        	defw 0											; Puntero de impresión.
  95+ 86E0 00 00        	defw 0											; Rutina de impresión.
  96+ 86E2
  97+ 86E2 00 00        Disparo_11 defw 0
  98+ 86E4
  99+ 86E4              ; -------------------------------------------------------------------------------------
 100+ 86E4              ;
 101+ 86E4              ;	Índice de cajas de entidades.
 102+ 86E4              ;
 103+ 86E4              ;	18/1/24
 104+ 86E4              ;
 105+ 86E4
 106+ 86E4              Indice_de_cajas_de_entidades
 107+ 86E4
 108+ 86E4 2C 87        	defw Caja_1
 109+ 86E6 3F 87        	defw Caja_2
 110+ 86E8 52 87        	defw Caja_3
 111+ 86EA 65 87        	defw Caja_4
 112+ 86EC 78 87        	defw Caja_5
 113+ 86EE 8B 87        	defw Caja_6
 114+ 86F0 9E 87        	defw Caja_7
 115+ 86F2
 116+ 86F2 00 00        	defw 0
 117+ 86F4 00 00        	defw 0
 118+ 86F6
 119+ 86F6              ; ---------- ---------- ---------- ---------- ----------
 120+ 86F6
 121+ 86F6 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86F9 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86FB 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86FD 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86FF
 126+ 86FF 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 8700 05           	db %00000101										; (Attr).
 128+ 8701 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 8703 A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8705 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8707 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8709 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 870B 04           	db 4 												; (Cuad_objeto).
 134+ 870C 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 870D 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 8713
 137+ 8713 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 8715
 139+ 8715 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 8717 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 8719 40           	db $40												; (Ctrl_0).
 142+ 871A 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 871E 00 00
 143+ 8720 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 8723 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 8725 00           	db 0												; (Cola_de_desplazamiento).
 146+ 8726 00           	db 0 												; (Columnas).
 147+ 8727 00 00        	defw 0												; (Limite_horizontal).
 148+ 8729 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 872C
 150+ 872C              ; ---------- ---------- ---------- ---------- ----------
 151+ 872C              ;
 152+ 872C              ;	22/01/24
 153+ 872C              ;
 154+ 872C              ; 	Cada caja tiene 19 bytes !!!
 155+ 872C
 156+ 872C 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 872F 00           	db %00000000										; (Attr).
 158+ 8730              ;	db 0												; (Cuad_objeto).
 159+ 8730 00           	db 0												; (Impacto).
 160+ 8731 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 8737 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 8739 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 873B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 873D 00           	db 0												; (Ctrl_0).
 165+ 873E 00           	db 0												; (Ctrl_2).
 166+ 873F
 167+ 873F              ; ---------- ---------- ---------- ---------- ----------
 168+ 873F
 169+ 873F 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 8742 00           	db %00000000										; (Attr).
 171+ 8743              ;	db 0												; (Cuad_objeto).
 172+ 8743 00           	db 0												; (Impacto).
 173+ 8744 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 874A 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 874C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 874E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 8750 00           	db 0												; (Ctrl_0).
 178+ 8751 00           	db 0												; (Ctrl_2).
 179+ 8752
 180+ 8752              ; ---------- ---------- ---------- ---------- ----------
 181+ 8752
 182+ 8752 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8755 00           	db %00000000										; (Attr).
 184+ 8756              ;	db 0												; (Cuad_objeto).
 185+ 8756 00           	db 0												; (Impacto).
 186+ 8757 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 875D 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 875F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 8761 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8763 00           	db 0												; (Ctrl_0).
 191+ 8764 00           	db 0												; (Ctrl_2).
 192+ 8765
 193+ 8765              ; ---------- ---------- ---------- ---------- ----------
 194+ 8765
 195+ 8765 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8768 00           	db %00000000										; (Attr).
 197+ 8769              ;	db 0												; (Cuad_objeto).
 198+ 8769 00           	db 0												; (Impacto).
 199+ 876A 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 8770 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 8772 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8774 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8776 00           	db 0												; (Ctrl_0).
 204+ 8777 00           	db 0												; (Ctrl_2).
 205+ 8778
 206+ 8778              ; ---------- ---------- ---------- ---------- ----------
 207+ 8778
 208+ 8778 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 877B 00           	db %00000000										; (Attr).
 210+ 877C              ;	db 0												; (Cuad_objeto).
 211+ 877C 00           	db 0												; (Impacto).
 212+ 877D 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8789 00           	db 0												; (Ctrl_0).
 217+ 878A 00           	db 0												; (Ctrl_2).
 218+ 878B
 219+ 878B              ; ---------- ---------- ---------- ---------- ----------
 220+ 878B
 221+ 878B 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 878E 00           	db %00000000										; (Attr).
 223+ 878F              ;	db 0												; (Cuad_objeto).
 224+ 878F 00           	db 0												; (Impacto).
 225+ 8790 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8796 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8798 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 879A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 879C 00           	db 0												; (Ctrl_0).
 230+ 879D 00           	db 0												; (Ctrl_2).
 231+ 879E
 232+ 879E              ; ---------- ---------- ---------- ---------- ----------
 233+ 879E
 234+ 879E 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 87A1 00           	db %00000000										; (Attr).
 236+ 87A2              ;	db 0												; (Cuad_objeto).
 237+ 87A2 00           	db 0												; (Impacto).
 238+ 87A3 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 87A9 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 87AB 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 87AD 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 87AF 00           	db 0												; (Ctrl_0).
 243+ 87B0 00           	db 0												; (Ctrl_2).
 244+ 87B1
 245+ 87B1              ; -------------------------------------------------------------------------------------
 246+ 87B1              ;
 247+ 87B1              ;	11/1/24
 248+ 87B1              ;
 249+ 87B1              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 87B1              ;
 251+ 87B1              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 87B1              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 87B1              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 87B1              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 87B1
 256+ 87B1              Indice_de_definiciones_de_entidades
 257+ 87B1
 258+ 87B1 B5 87        	defw Entidad_1
 259+ 87B3 C2 87        	defw Entidad_2
 260+ 87B5
 261+ 87B5              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 87B5
 263+ 87B5              ;	BADSAT, (Satélite malvado).
 264+ 87B5
 265+ 87B5 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 87B8 04           	db %00000100										; (Attr).
 267+ 87B9 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 87BB 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 87BD 03 40        	defw $4003	                                     	; (Posicion_inicio).
 270+ 87BF 01           	db 1												; (Cuad_objeto).
 271+ 87C0 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 272+ 87C2
 273+ 87C2 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 87C5 02           	db %00000010										; (Attr).
 275+ 87C6 F0 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 87C8 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 87CA 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 87CC 01           	db 1												; (Cuad_objeto).
 279+ 87CD 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 87CF
# file closed: Cajas_y_disparos.asm
 112  87CF              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87CF
   2+ 87CF
   3+ 87CF              ;   07/07/23
   4+ 87CF              ;
   5+ 87CF              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87CF              ;
   7+ 87CF              ;   Codificación:
   8+ 87CF              ;
   9+ 87CF              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87CF              ;
  11+ 87CF              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87CF              ;
  13+ 87CF              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87CF              ;
  15+ 87CF              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87CF              ;
  17+ 87CF              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87CF              ;                               ..... %01000010 Vel_up 4
  19+ 87CF              ;                                               Vel_down 2
  20+ 87CF              ;                               ..... $42
  21+ 87CF              ;
  22+ 87CF              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87CF              ;
  24+ 87CF              ;                               ..... %01000010 Vel_left 4
  25+ 87CF              ;                                               Vel_right 2
  26+ 87CF              ;                               ..... $42
  27+ 87CF              ;
  28+ 87CF              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87CF              ;
  30+ 87CF              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87CF              ;
  32+ 87CF              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87CF              ;
  34+ 87CF              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87CF              ;                                     $53
  36+ 87CF              ;
  37+ 87CF              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87CF              ;
  39+ 87CF              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87CF              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87CF              ;
  42+ 87CF              ;                       Arriba ..... $81
  43+ 87CF              ;                       Arriba - izquierda ..... $a1
  44+ 87CF              ;                       Arriba - derecha ..... $91
  45+ 87CF              ;
  46+ 87CF              ;                       Abajo ..... $41
  47+ 87CF              ;                       Abajo - izquierda ..... $61
  48+ 87CF              ;                       Abajo - derecha ..... $51
  49+ 87CF              ;
  50+ 87CF              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87CF              ;
  52+ 87CF              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87CF              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87CF              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87CF              ;
  56+ 87CF              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87CF              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87CF              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87CF              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87CF              ;
  61+ 87CF              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87CF              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87CF              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87CF              ;
  65+ 87CF              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87CF              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87CF              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87CF              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87CF
  70+ 87CF              ; ----- ----- ----- ----- -----
  71+ 87CF
  72+ 87CF FB 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87D1 03 88            defw F_1
  74+ 87D3 0D 88            defw F_2
  75+ 87D5 17 88            defw Codo_abajo_derecha
  76+ 87D7 4B 88            defw Derecha_y_subiendo
  77+ 87D9 55 88            defw Derecha_y_subiendo_1
  78+ 87DB 5F 88            defw F_3
  79+ 87DD 69 88            defw F_4
  80+ 87DF 73 88            defw Derecha_y_bajando
  81+ 87E1 7D 88            defw Derecha_y_bajando_1
  82+ 87E3 87 88            defw Derecha_y_bajando_2
  83+ 87E5 91 88            defw Codo_derecha_abajo
  84+ 87E7 C1 88            defw Codo_abajo_izq.
  85+ 87E9 F5 88            defw Izquierda_y_subiendo
  86+ 87EB FF 88            defw Izquierda_y_subiendo_1
  87+ 87ED 09 89            defw F_5
  88+ 87EF 13 89            defw F_6
  89+ 87F1 1D 89            defw Izquierda_y_bajando
  90+ 87F3 27 89            defw Izquierda_y_bajando_1
  91+ 87F5 31 89            defw Izquierda_y_bajando_2
  92+ 87F7 3B 89            defw Codo_izquierda_abajo
  93+ 87F9 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87FB
  95+ 87FB 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87FF 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8803
  98+ 8803 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8807 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 880B 08 00
 100+ 880D
 101+ 880D 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8811 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8815 0F FE
 103+ 8817
 104+ 8817 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 881B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 881F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8823 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8827 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 882B 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 882F 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8833 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8837 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 883B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 883F 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8843 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8847 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 884B
 118+ 884B 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 884F 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8853 06 00
 120+ 8855
 121+ 8855 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8859 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 885D 02 00
 123+ 885F
 124+ 885F 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8863 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8867 04 00
 126+ 8869
 127+ 8869 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 886D 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8871 08 00
 129+ 8873
 130+ 8873 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8877 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 887B 02 00
 132+ 887D
 133+ 887D 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 8881 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8885 06 00
 135+ 8887
 136+ 8887 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 888B 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 888F 06 00
 138+ 8891
 139+ 8891              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 8891
 141+ 8891 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8895 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8899 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 889D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88A1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88A5 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88A9 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88AD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88B1 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88B5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88B9 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88BD 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88C1
 154+ 88C1 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88C5 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88C9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88CD 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88D1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88D5 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88D9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88DD 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 88E1 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88E5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88E9 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88ED 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88F1 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88F5
 168+ 88F5 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88F9 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88FD 06 00
 170+ 88FF
 171+ 88FF 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8903 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8907 02 00
 173+ 8909
 174+ 8909 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 890D 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8911 04 00
 176+ 8913
 177+ 8913 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8917 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 891B 08 00
 179+ 891D
 180+ 891D 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8921 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8925 02 00
 182+ 8927
 183+ 8927 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 892B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 892F 06 00
 185+ 8931
 186+ 8931 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8935 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 8939 06 00
 188+ 893B
 189+ 893B 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 893F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8943 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8947 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 894B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 894F 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8953 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8957 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 895B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 895F 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8963 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8967 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 896B
 202+ 896B
 203+ 896B
 204+ 896B
 205+ 896B
 206+ 896B
 207+ 896B
 208+ 896B
 209+ 896B
 210+ 896B
# file closed: Patrones_de_mov.asm
 113  896B              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 896B              ; 19/1/24
   2+ 896B
   3+ 896B              Indice_de_niveles
   4+ 896B
   5+ 896B 73 89        	defw Nivel_1
   6+ 896D 79 89        	defw Nivel_2
   7+ 896F
   8+ 896F              ;	...
   9+ 896F              ;	...
  10+ 896F              ;	+ Niveles ...
  11+ 896F
  12+ 896F 00 00        	defw 0
  13+ 8971 00 00        	defw 0
  14+ 8973
  15+ 8973 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8974 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8978 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8979
  19+ 8979 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 897A 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 897E 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8982 01 02
  22+ 8984 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8988 01 02
  23+ 898A
# file closed: Niveles.asm
 114  898A
 115  898A              ; ******************************************************************************************************************************************************************************************
 116  898A              ; Constantes.
 117  898A              ; ******************************************************************************************************************************************************************************************
 118  898A              ;
 119  898A              ; 25/12/23
 120  898A
 121  898A              ;
 122  898A              ; Constantes.
 123  898A              ;
 124  898A
 125  898A              Sprite_vacio equ $eae0
 126  898A              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 127  898A              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 128  898A              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 129  898A              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 130  898A
 131  898A              Almacen_de_scanlines_masticados_a_borrar equ $e800
 132  898A              Almacen_de_scanlines_masticados equ $e900
 133  898A              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 134  898A              Almacen_de_movimientos_masticados_Amadeus equ $e700
 135  898A              ;
 136  898A              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 137  898A              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 138  898A              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 139  898A              Album_de_fotos_disparos equ $8056 ;  (8056h - 80abh).	; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 140  898A              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 141  898A              ;														; 55 Bytes.
 142  898A
 143  898A              Album_de_fotos_Amadeus equ $80ac	 ;  (80ach - 810eh) ; 12 bytes.
 144  898A
 145  898A              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 146  898A
 147  898A              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 148  898A
 149  898A              ; ******************************************************************************************************************************************************************************************
 150  898A              ; Variables.
 151  898A              ; ******************************************************************************************************************************************************************************************
 152  898A              ;
 153  898A              ; 18/01/24
 154  898A              ;
 155  898A              ; Variables de DRAW. (Motor principal).	42 Bytes.
 156  898A              ;
 157  898A
 158  898A              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 159  898A
 160  898A 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 161  898B              ;															- Patrón de movimiento.
 162  898B              ;															- Aspecto
 163  898B 00           Filas db 0												; Filas. [DRAW]
 164  898C 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 165  898D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 166  898F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 167  8991 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 168  8992 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 169  8993
 170  8993              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 171  8993
 172  8993 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 173  8994              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 174  8994              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 175  8994 00           Attr db 0												; Atributos de la entidad:
 176  8995
 177  8995              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 178  8995              ;
 179  8995              ;	COLORES: 0 ..... NEGRO
 180  8995              ;    		 1 ..... AZUL
 181  8995              ; 			 2 ..... ROJO
 182  8995              ;			 3 ..... MAGENTA
 183  8995              ; 			 4 ..... VERDE
 184  8995              ; 			 5 ..... CIAN
 185  8995              ;			 6 ..... AMARILLO
 186  8995              ; 			 7 ..... BLANCO
 187  8995
 188  8995 00 00        Indice_Sprite_der defw 0
 189  8997 00 00        Indice_Sprite_izq defw 0
 190  8999 00 00        Puntero_DESPLZ_der defw 0
 191  899B 00 00        Puntero_DESPLZ_izq defw 0
 192  899D
 193  899D 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 194  899F 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 195  89A0
 196  89A0              ; Variables de objeto. (Características).
 197  89A0
 198  89A0 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 199  89A1              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 200  89A1              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 201  89A1 00 00 00...  Variables_de_borrado ds 6
 202  89A7
 203  89A7 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 204  89A9              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 205  89A9
 206  89A9 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 207  89AB
 208  89AB              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 209  89AB              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 210  89AB
 211  89AB 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 212  89AD              ;														; _palabras que componen el "movimiento_masticado".
 213  89AD
 214  89AD              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 215  89AD
 216  89AD 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  89AE              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  89AE              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  89AE              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  89AE              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  89AE              ;
 222  89AE              ; 														DESCRIPCIÖN:
 223  89AE              ;
 224  89AE              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  89AE              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  89AE              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  89AE              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  89AE              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  89AE              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  89AE              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  89AE              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  89AE              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  89AE              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  89AE              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  89AE              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  89AE              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  89AE              ;
 238  89AE              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  89AE              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  89AE              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  89AE
 242  89AE              ; Variables de funcionamiento. [DRAW].
 243  89AE
 244  89AE 00           Columnas db 0
 245  89AF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 246  89B1              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 247  89B1 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 248  89B2
 249  89B2              ; variables de control general.
 250  89B2
 251  89B2 00           Ctrl_2 db 0
 252  89B3              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 253  89B3              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 254  89B3              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 255  89B3              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 256  89B3              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 257  89B3              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 258  89B3              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 259  89B3              ;
 260  89B3              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 261  89B3              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 262  89B3              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 263  89B3              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 264  89B3              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 265  89B3              ;														BIT 4, ???
 266  89B3              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 267  89B3
 268  89B3 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 269  89B4
 270  89B4              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 271  89B4
 272  89B4              ;					         		---------;      ;---------
 273  89B4
 274  89B4              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 275  89B4
 276  89B4              Perfiles_de_velocidad
 277  89B4
 278  89B4 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 279  89B5 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 280  89B6 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 281  89B7 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 282  89B8
 283  89B8              ; Contadores de 16 bits.
 284  89B8
 285  89B8 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 286  89BA 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 287  89BC 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 288  89BE 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 289  89C0
 290  89C0              ; Movimiento. ------------------------------------------------------------------------------------------------------
 291  89C0
 292  89C0 00 E9        Puntero_de_scanlines_masticados defw Almacen_de_scanlines_masticados
 293  89C2 00 E8        Puntero_de_scanlines_masticados_a_borrar defw Almacen_de_scanlines_masticados_a_borrar
 294  89C4 02 80        Puntero_de_scanlines_en_album defw Album_de_fotos+2
 295  89C6
 296  89C6 00 00 00...  Semaforo_de_rutinas_de_impresion_utilizadas ds 8	;! Para acelerar la rutina de borrado de sprites, hemos de poder desplazarnos por este almacén con 1 byte.!!
 297  89CE
 298  89CE 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 299  89D0 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 300  89D2 00 00        Puntero_indice_mov_bucle defw 0							;
 301  89D4              ;
 302  89D4              ;
 303  89D4 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 304  89D5              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 305  89D5              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 306  89D5 00           Incrementa_puntero_backup db 0
 307  89D6 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 308  89D7              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 309  89D7 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 310  89D8 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 311  89D9 00           Cola_de_desplazamiento db 0								; Este byte indica:
 312  89DA              ;
 313  89DA              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 314  89DA              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 315  89DA              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 316  89DA              ;
 317  89DA              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 318  89DA              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 319  89DA              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 320  89DA              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 321  89DA              ;
 322  89DA              ;														;	"$ff" ..... Bucle infinito de repetición.
 323  89DA              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 324  89DA              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 325  89DA              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 326  89DA
 327  89DA 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 328  89DB
 329  89DB              ;														DESCRIPCIÓN:
 330  89DB              ;
 331  89DB              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 332  89DB              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 333  89DB              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 334  89DB              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 335  89DB              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 336  89DB              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 337  89DB
 338  89DB              ;														BIT 3, Recarga de nueva oleada.
 339  89DB              ;														BIT 4, Recarga de nueva oleada.
 340  89DB              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 341  89DB              ;														BIT 6, **** Frame completo.
 342  89DB              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 343  89DB
 344  89DB 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 345  89DD              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 346  89DD              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 347  89DD              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 348  89DD
 349  89DD              ; Gestión de ENTIDADES y CAJAS.
 350  89DD
 351  89DD 00 00        Puntero_store_caja defw 0
 352  89DF 00 00        Puntero_restore_caja defw 0
 353  89E1 00 00        Indice_restore_caja defw 0
 354  89E3 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 355  89E4 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 356  89E5 00           Entidades_en_curso db 0									; ..... ..... .....
 357  89E6 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 358  89E7              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 359  89E7              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 360  89E7              ;														; _ (Numero_de_malotes)="0".
 361  89E7 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 362  89E9 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 363  89EB              ;														; _ puntero (Indice_entidades).
 364  89EB
 365  89EB              ;---------------------------------------------------------------------------------------------------------------
 366  89EB              ;
 367  89EB              ;	11/01/24
 368  89EB              ;
 369  89EB              ;	Álbumes.
 370  89EB
 371  89EB 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 372  89ED              ;														; _variable para almacenar lo posición del puntero_
 373  89ED              ; 														; _de pila, SP.
 374  89ED 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 375  89EF              ;														; La utiliza la rutina [Extrae_foto_registros].
 376  89EF 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 377  89F1 00 80        Stack_snapshot defw Album_de_fotos
 378  89F3
 379  89F3 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 380  89F5
 381  89F5              ;End_Snapshot defw Album_de_fotos
 382  89F5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 383  89F5 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 384  89F7              ;														; _el snapshot de los registros del siguiente disparo.
 385  89F7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 386  89F7 AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 387  89F9
 388  89F9 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 389  89FA              ;
 390  89FA              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 391  89FA              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 392  89FA              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 393  89FA
 394  89FA 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 395  89FB              ;
 396  89FB              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 397  89FB              ;
 398  89FB              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 399  89FB              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 400  89FB              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 401  89FB              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 402  89FB              ;
 403  89FB              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 404  89FB              ;															_ masticados ya generados.
 405  89FB              ;
 406  89FB              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 407  89FB              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 408  89FB              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 409  89FB              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 410  89FB
 411  89FB
 412  89FB              ; Gestión de Disparos.
 413  89FB
 414  89FB 00           Numero_de_disparotes db 0
 415  89FC 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 416  89FE 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 417  8A00 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 418  8A01              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 419  8A01              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 420  8A01 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 421  8A03              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 422  8A03              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 423  8A03              ;														; _produzca colisión.
 424  8A03 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 425  8A05              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 426  8A05 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 427  8A08              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 428  8A08 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 429  8A0B              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 430  8A0B 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 431  8A0C
 432  8A0C              ;---------------------------------------------------------------------------------------------------------------
 433  8A0C
 434  8A0C              ; Relojes y temporizaciones.
 435  8A0C
 436  8A0C 00           Contador_de_frames db 0
 437  8A0D 00           Contador_de_frames_2 db 0
 438  8A0E
 439  8A0E 04           Clock_explosion db 4
 440  8A0F 14           Clock_Entidades_en_curso db 20
 441  8A10 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 442  8A11              ;														; Repite la oleada de entidades.
 443  8A11 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 444  8A12 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 445  8A13 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 446  8A14
 447  8A14 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 448  8A15 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 449  8A16 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 450  8A17
 451  8A17              ;---------------------------------------------------------------------------------------------------------------
 452  8A17
 453  8A17              ; Gestión de NIVELES.
 454  8A17
 455  8A17 00           Nivel db 0												; Nivel actual del juego.
 456  8A18 00 00        Puntero_indice_NIVELES defw 0
 457  8A1A 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 458  8A1C              ; 														; _ que definen el NIVEL.
 459  8A1C              ; Y todo comienza aquí .....
 460  8A1C              ;
 461  8A1C              ; 	INICIO  *************************************************************************************************************************************************************************
 462  8A1C              ;
 463  8A1C              ;	5/1/24
 464  8A1C
 465  8A1C              START
 466  8A1C
 467  8A1C 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 468  8A1F 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 469  8A21 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 470  8A23 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 471  8A25 F3           	DI
 472  8A26
 473  8A26              ;	ld a,%00000111
 474  8A26              ;	call Cls
 475  8A26 CD 4B 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 476  8A29
 477  8A29              ; INICIALIZACIÓN.
 478  8A29
 479  8A29              ;	Inicializa 1er Nivel.
 480  8A29
 481  8A29 21 6B 89     	ld hl,Indice_de_niveles
 482  8A2C 22 18 8A     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 483  8A2F CD EC 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 484  8A32              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 485  8A32              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 486  8A32              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 487  8A32
 488  8A32              ;	Provisional, (para desarrollo).
 489  8A32
 490  8A32              	;-
 491  8A32              ;	ld hl,Numero_parcial_de_entidades
 492  8A32              ;	ld b,(hl)
 493  8A32              ;	inc b
 494  8A32              ;	dec b
 495  8A32              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 496  8A32
 497  8A32 CD 31 8E     4 call Inicia_Entidades
 498  8A35
 499  8A35 CD 0E 8C     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 500  8A38
 501  8A38              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 502  8A38              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 503  8A38              ; (Esto se dá cuando se inicia una nueva oleada).
 504  8A38
 505  8A38              ;	ld a,(Ctrl_1)
 506  8A38              ;	bit 3,a
 507  8A38              ;	jr nz,5F											; Loop
 508  8A38
 509  8A38              ; 	INICIA AMADEUS !!!!!
 510  8A38
 511  8A38              ;3 call Restore_Amadeus
 512  8A38              ;	call Inicia_Puntero_objeto
 513  8A38              ;	call Draw
 514  8A38
 515  8A38              ;	call Guarda_movimiento_masticado	;! Provisional
 516  8A38
 517  8A38              ;	call Guarda_foto_registros
 518  8A38              ;	call Guarda_datos_de_borrado_Amadeus
 519  8A38
 520  8A38              ;	ld de,Amadeus_db
 521  8A38              ;	call Store_Amadeus
 522  8A38
 523  8A38              ; 	INICIA DISPAROS !!!!!
 524  8A38
 525  8A38              ;	call Inicia_Puntero_Disparo_Entidades
 526  8A38              ;	call Inicia_Puntero_Disparo_Amadeus
 527  8A38
 528  8A38              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 529  8A38
 530  8A38              ;5 call Inicia_punteros_de_cajas
 531  8A38              ;	call Restore_entidad
 532  8A38
 533  8A38              ;	ld a,(Ctrl_1)
 534  8A38              ;	bit 3,a
 535  8A38              ;	jr z,6F
 536  8A38
 537  8A38              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 538  8A38
 539  8A38              ;	ld hl,Ctrl_1
 540  8A38              ;	res 3,(hl)
 541  8A38              ;	jr Main
 542  8A38
 543  8A38              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 544  8A38
 545  8A38 CD 5A 8C     6 call Calcula_numero_de_malotes
 546  8A3B CD 49 8B     	call Genera_scanlines_masticados
 547  8A3E
 548  8A3E D9           	exx
 549  8A3F 21 C6 89     	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 550  8A42 D9           	exx
 551  8A43
 552  8A43 21 F9 89     	ld hl,Ctrl_3
 553  8A46 CB C6        	set 0,(hl)											; Frame completo.
 554  8A48 FB           	ei
 555  8A49 76           	halt
 556  8A4A
 557  8A4A              ; ------------------------------------
 558  8A4A
 559  8A4A              Main
 560  8A4A              ;
 561  8A4A              ;	11/12/23
 562  8A4A
 563  8A4A              ; Aparece nueva entidad ???
 564  8A4A
 565  8A4A              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 566  8A4A              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 567  8A4A              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 568  8A4A              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _;
 569  8A4A              ;														; _un 2º bloque.
 570  8A4A
 571  8A4A CD 30 8B     	call Genera_scanlines_masticados_a_borrar
 572  8A4D CD 0D 8B     	call Limpia_Almacen_de_scanlines_masticados
 573  8A50
 574  8A50 CD 17 81     	call Limpia_y_reinicia_Stack_Snapshot 				; Lo 1º que hacemos después de pintar es limpiar el álbum de fotos e inicializar
 575  8A53              ; 													 	; _(Stack_snapshot).
 576  8A53
 577  8A53 3A 0F 8A     	ld a,(Clock_Entidades_en_curso)
 578  8A56 47           	ld b,a
 579  8A57 3A 0C 8A     	ld a,(Contador_de_frames)
 580  8A5A B8           	cp b
 581  8A5B 20 18        	jr nz,13F
 582  8A5D
 583  8A5D              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 584  8A5D              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 585  8A5D
 586  8A5D 3A E4 89     21 ld a,(Numero_parcial_de_entidades)
 587  8A60 47           	ld b,a
 588  8A61 3A E5 89     	ld a,(Entidades_en_curso)
 589  8A64 B8           	cp b
 590  8A65 28 0E        	jr z,13F
 591  8A67 30 0C        	jr nc,13F
 592  8A69
 593  8A69 3C           	inc a
 594  8A6A 32 E5 89     	ld (Entidades_en_curso),a
 595  8A6D
 596  8A6D              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 597  8A6D
 598  8A6D 3A 0F 8A     	ld a,(Clock_Entidades_en_curso)
 599  8A70              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 600  8A70              ;! _ IMPREDECIBLE !!!!
 601  8A70 C6 64        	add 100
 602  8A72 32 0F 8A     	ld (Clock_Entidades_en_curso),a
 603  8A75
 604  8A75              ; -------------------------------------------------------------------------------------------------------------
 605  8A75
 606  8A75              ; Habilita disparos.
 607  8A75
 608  8A75              13
 609  8A75
 610  8A75              ;	ld hl,Disparo_Amadeus
 611  8A75              ;	ld de,CLOCK_repone_disparo_Amadeus
 612  8A75              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 613  8A75
 614  8A75              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 615  8A75              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 616  8A75              ;	call Habilita_disparos
 617  8A75
 618  8A75              ; COLISIONES.
 619  8A75
 620  8A75              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 621  8A75
 622  8A75              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 623  8A75              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 624  8A75              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 625  8A75
 626  8A75              ;	xor a
 627  8A75              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 628  8A75
 629  8A75              ;	call Inicia_punteros_de_cajas
 630  8A75              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 631  8A75              ; 														; _ en DRAW.
 632  8A75
 633  8A75              ;	ld a,(Filas)
 634  8A75              ;	and a
 635  8A75              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 636  8A75              ;	call Incrementa_punteros_de_cajas
 637  8A75              ;	jr 12B
 638  8A75
 639  8A75              ; ---------------------------------------------------------------------------------------
 640  8A75
 641  8A75 3A E4 89     10 ld a,(Numero_parcial_de_entidades)
 642  8A78 47               ld b,a
 643  8A79 A7           	and a
 644  8A7A 20 00        	jr nz,11F
 645  8A7C
 646  8A7C              ;	ld hl,Ctrl_1;
 647  8A7C              ;	bit 4,(hl)
 648  8A7C              ;	jp nz,16F
 649  8A7C
 650  8A7C              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 651  8A7C
 652  8A7C              ;	ld hl,Ctrl_1
 653  8A7C              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 654  8A7C
 655  8A7C              ;	ld a,(Contador_de_frames)
 656  8A7C              ;	inc a
 657  8A7C              ;	ld (Activa_recarga_cajas),a
 658  8A7C
 659  8A7C              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 660  8A7C
 661  8A7C 3A E5 89     11 ld a,(Entidades_en_curso)
 662  8A7F A7           	and a
 663  8A80 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 664  8A82 47           	ld b,a												; No hay entidades que gestionar.
 665  8A83
 666  8A83              ; ( Código que ejecutamos con cada entidad: ).
 667  8A83
 668  8A83              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 669  8A83
 670  8A83 C5           15 push bc 												; Nº de entidades en curso.
 671  8A84
 672  8A84 CD E1 8C     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 673  8A87
 674  8A87 3A F9 89     	ld a,(Ctrl_3)
 675  8A8A CB 57        	bit 2,a
 676  8A8C F3           	di
 677  8A8D 20 FE        	jr nz,$
 678  8A8F FB           	ei
 679  8A90
 680  8A90              ; Existe "Entidad_guía" ???.
 681  8A90              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 682  8A90
 683  8A90              ;	ld a,(Ctrl_3)
 684  8A90              ;	bit 1,a
 685  8A90              ;	jr nz,22F
 686  8A90
 687  8A90              ; Almacén de "Movimientos_masticados" lleno ???
 688  8A90              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 689  8A90              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 690  8A90
 691  8A90              ;;	ld a,(Ctrl_3)
 692  8A90              ;;	bit 3,a
 693  8A90              ;;	jr nz,22F
 694  8A90
 695  8A90              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 696  8A90
 697  8A90              ;	ld hl,Ctrl_2
 698  8A90              ;	set 5,(hl)
 699  8A90              ;	ld hl,Ctrl_3
 700  8A90              ;	set 1,(hl)
 701  8A90
 702  8A90              ; Impacto ???
 703  8A90
 704  8A90              ;22 ld a,(Impacto)
 705  8A90              ;	and a
 706  8A90              ;	jr z,8F
 707  8A90
 708  8A90              ; Hay Impacto en esta entidad.
 709  8A90
 710  8A90              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 711  8A90              ;	dec (hl)
 712  8A90              ;	jp nz,17F
 713  8A90
 714  8A90              ;! Velocidad de la animación de la explosión.
 715  8A90
 716  8A90              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 717  8A90              ;														; _,(velocidad de la explosión).
 718  8A90              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 719  8A90
 720  8A90              ;	call Repone_datos_de_borrado
 721  8A90              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 722  8A90
 723  8A90              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 724  8A90
 725  8A90              ;	ld a,(Ctrl_2)
 726  8A90              ;	bit 1,a
 727  8A90              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 728  8A90
 729  8A90              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 730  8A90
 731  8A90              ;	ld a,(CTRL_DESPLZ)
 732  8A90              ;	and a
 733  8A90              ;	jr nz,18F
 734  8A90
 735  8A90              ;	ld hl,Indice_Explosion_2x2-2
 736  8A90              ;	ld (Puntero_DESPLZ_der),hl
 737  8A90              ;	jr 19F
 738  8A90
 739  8A90              ;18 ld hl,Indice_Explosion_2x3-2
 740  8A90              ;	ld (Puntero_DESPLZ_der),hl
 741  8A90
 742  8A90              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 743  8A90              ;	set 1,(hl)
 744  8A90              ;	jr 7F
 745  8A90
 746  8A90              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 747  8A90              ; _con las coordenadas de la entidad almacenada en DRAW.
 748  8A90
 749  8A90              ;8 ld a,(Ctrl_1)
 750  8A90              ;	bit 2,a
 751  8A90              ;	jr z,7F
 752  8A90
 753  8A90              ;	ld hl,(Coordenadas_disparo_certero)
 754  8A90              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 755  8A90              ;														; E contiene la coordenada_X del disparo.
 756  8A90              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 757  8A90              ;														; H FILA, (Coordenada_y de la entidad).
 758  8A90              ;	and a
 759  8A90              ;	sbc hl,de
 760  8A90
 761  8A90              ;	call Determina_resultado_comparativa
 762  8A90
 763  8A90              ;	ld a,b
 764  8A90              ;	and a
 765  8A90              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 766  8A90
 767  8A90              ; ----- ----- -----
 768  8A90
 769  8A90              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 770  8A90              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 771  8A90
 772  8A90              ;	ld hl,Ctrl_1
 773  8A90              ;	res 2,(hl)
 774  8A90
 775  8A90 CD D0 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 776  8A93
 777  8A93              ;	ld a,(Ctrl_0)
 778  8A93              ;	bit 4,a
 779  8A93              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 780  8A93
 781  8A93              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 782  8A93              ; [[[
 783  8A93              ;	call Detecta_disparo_entidad
 784  8A93              ; ]]]
 785  8A93
 786  8A93 CD 9B 8E     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 787  8A96
 788  8A96              ;	ld hl,Ctrl_0
 789  8A96              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 790  8A96
 791  8A96 CD 8B 8E     17 call Store_Restore_cajas
 792  8A99
 793  8A99 C1           	pop bc
 794  8A9A
 795  8A9A 10 E7        	djnz 15B
 796  8A9C
 797  8A9C CD 0E 8C     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 798  8A9F
 799  8A9F              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 800  8A9F              ; Hemos gestionado todas las unidades.
 801  8A9F              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 802  8A9F
 803  8A9F              ;	ld hl,Ctrl_1
 804  8A9F              ;	res 2,(hl)
 805  8A9F
 806  8A9F
 807  8A9F              16
 808  8A9F CD 5A 8C     	call Calcula_numero_de_malotes 						; Si el nº de malotes es "0" no generamos scanlines masticados. No ha habido movimiento.
 809  8AA2 CD 49 8B     	call Genera_scanlines_masticados
 810  8AA5 CD B5 8A     	call Prepara_Borra_sprites
 811  8AA8
 812  8AA8 21 F9 89     	ld hl,Ctrl_3
 813  8AAB CB C6        	set 0,(hl)											; Frame completo.
 814  8AAD
 815  8AAD AF           	xor a
 816  8AAE D3 FE        	out ($fe),a
 817  8AB0 76           	halt
 818  8AB1
 819  8AB1              ; ----------------------------------------
 820  8AB1
 821  8AB1              ;	ld a,(Ctrl_1) 										; Existe Loop?
 822  8AB1              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 823  8AB1 CA 4A 8A     	jp z,Main
 824  8AB4
 825  8AB4              ; RECARGA DE NUEVA OLEADA.
 826  8AB4
 827  8AB4              ;	ld a,(Contador_de_frames)
 828  8AB4              ;	ld b,a
 829  8AB4              ;	ld a,(Activa_recarga_cajas)
 830  8AB4              ;	cp b
 831  8AB4              ;	jr z,20F
 832  8AB4
 833  8AB4              ;	ld hl,Ctrl_1
 834  8AB4              ;	set 4,(hl)
 835  8AB4              ;	jp Main
 836  8AB4
 837  8AB4              ;20 ld hl,Ctrl_1
 838  8AB4              ;	res 4,(hl)
 839  8AB4
 840  8AB4              ;	ld a,(Contador_de_frames)
 841  8AB4
 842  8AB4              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 843  8AB4              ;! _ IMPREDECIBLE !!!!
 844  8AB4
 845  8AB4              ;	add 10
 846  8AB4              ;	ld (Clock_Entidades_en_curso),a
 847  8AB4
 848  8AB4              ;	jp 4B
 849  8AB4
 850  8AB4 C9           	ret
 851  8AB5
 852  8AB5              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 853  8AB5              ;
 854  8AB5              ;	16/11/23
 855  8AB5
 856  8AB5              ;;Gestiona_Amadeus
 857  8AB5
 858  8AB5              ;! Activa/desactiva impacto con Amadeus.
 859  8AB5
 860  8AB5              ;	ld a,(Impacto)
 861  8AB5              ;	and a
 862  8AB5              ;	jr nz,2F
 863  8AB5
 864  8AB5              ;;	call Mov_Amadeus
 865  8AB5
 866  8AB5              ;;2 ld a,(Ctrl_0)
 867  8AB5              ;;	bit 4,a
 868  8AB5              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 869  8AB5
 870  8AB5              ;;	call Guarda_foto_entidad_a_pintar
 871  8AB5              ;;	call Guarda_datos_de_borrado_Amadeus
 872  8AB5
 873  8AB5              ;;1 ld hl,Ctrl_0
 874  8AB5              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 875  8AB5
 876  8AB5              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 877  8AB5
 878  8AB5              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 879  8AB5
 880  8AB5              ;	call Calcula_numero_de_disparotes
 881  8AB5
 882  8AB5              ;;	ret
 883  8AB5
 884  8AB5              ; -----------------------------
 885  8AB5              ;
 886  8AB5              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
 887  8AB5              ;
 888  8AB5              ;	INPUTS: B a de estar a "0".
 889  8AB5
 890  8AB5              Prepara_Borra_sprites
 891  8AB5
 892  8AB5 2A C2 89     	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
 893  8AB8 7D           	ld a,l
 894  8AB9 C8           	ret z
 895  8ABA
 896  8ABA CB 3F        	srl a
 897  8ABC
 898  8ABC D6 10        2 sub 16
 899  8ABE 28 03        	jr z,1F
 900  8AC0 04           	inc b
 901  8AC1 18 F9        	jr 2B
 902  8AC3
 903  8AC3 04           1 inc b
 904  8AC4
 905  8AC4 D9           	exx
 906  8AC5 21 C6 89     	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
 907  8AC8 D9           	exx
 908  8AC9
 909  8AC9 21 00 E8     	ld hl,Almacen_de_scanlines_masticados_a_borrar
 910  8ACC 22 C2 89     	ld (Puntero_de_scanlines_masticados_a_borrar),hl
 911  8ACF
 912  8ACF C9           	ret
 913  8AD0
 914  8AD0              ; --------------------------------------------------------------------------------------------------------------
 915  8AD0              ;
 916  8AD0              ;	15/12/23
 917  8AD0
 918  8AD0              Mov_obj
 919  8AD0
 920  8AD0              ;	ld a,(Ctrl_2)
 921  8AD0              ;	bit 1,a
 922  8AD0              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 923  8AD0
 924  8AD0              ; Explosión:
 925  8AD0
 926  8AD0              ;	ld a,(Frames_explosion)
 927  8AD0              ;	and a
 928  8AD0              ;	jr nz,4F
 929  8AD0
 930  8AD0              ;!  Una alimaña menos!!!!!!!!!1
 931  8AD0
 932  8AD0              ; Se trataba de una Entidad_guía ???
 933  8AD0
 934  8AD0              ;	ld a,(Ctrl_2)
 935  8AD0              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 936  8AD0              ;	jr z,5F
 937  8AD0
 938  8AD0              ;	ld hl,Ctrl_3
 939  8AD0              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 940  8AD0
 941  8AD0              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 942  8AD0              ;!! _generado puede ser distinto, (aletoriedad).
 943  8AD0
 944  8AD0              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 945  8AD0              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 946  8AD0              ;	dec (hl)
 947  8AD0              ;	ld hl,Entidades_en_curso
 948  8AD0              ;	dec (hl)
 949  8AD0              ;	ld hl,Numero_de_entidades
 950  8AD0              ;	dec (hl)
 951  8AD0              ;	jr 3F
 952  8AD0
 953  8AD0              ; -----
 954  8AD0
 955  8AD0              ;	`Movemos´ la explosión.
 956  8AD0
 957  8AD0              ;4 ld hl,(Puntero_DESPLZ_der)
 958  8AD0              ;	inc hl
 959  8AD0              ;	inc hl
 960  8AD0              ;	call Extrae_address
 961  8AD0              ;;	ld (Puntero_objeto),hl
 962  8AD0
 963  8AD0              ;;	ld hl,Frames_explosion
 964  8AD0              ;;	dec (hl)
 965  8AD0
 966  8AD0              ;;	ld hl,Ctrl_0
 967  8AD0              ;;	set 4,(hl);;
 968  8AD0
 969  8AD0              ;;	jr 3F
 970  8AD0
 971  8AD0              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 972  8AD0
 973  8AD0              ;2 xor a
 974  8AD0              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 975  8AD0
 976  8AD0              ; Movemos Entidades malignas.
 977  8AD0              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 978  8AD0
 979  8AD0              ;	ld a,(Ctrl_2)
 980  8AD0              ;	bit 5,a
 981  8AD0              ;	jr nz,8F
 982  8AD0
 983  8AD0              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 984  8AD0              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 985  8AD0              ;	jr 7F
 986  8AD0
 987  8AD0              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 988  8AD0
 989  8AD0              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 990  8AD0              ;	bit 4,a
 991  8AD0              ;	ret z
 992  8AD0
 993  8AD0              ; Ha habido desplazamiento de la entidad maligna.
 994  8AD0              ; Ha llegado a zona de AMADEUS ???
 995  8AD0
 996  8AD0              ;7 ld a,(Coordenada_y)
 997  8AD0              ;	cp $14
 998  8AD0              ;	jr c,1F
 999  8AD0
1000  8AD0              ; ---------
1001  8AD0
1002  8AD0              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1003  8AD0              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1004  8AD0
1005  8AD0              ;	di
1006  8AD0              ;	call Genera_coordenadas_X
1007  8AD0              ;	call Compara_coordenadas_X
1008  8AD0              ;	ei
1009  8AD0
1010  8AD0              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1011  8AD0
1012  8AD0              ; ---------
1013  8AD0
1014  8AD0              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1015  8AD0              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
1016  8AD0              ;	call Limpia_Variables_de_borrado
1017  8AD0
1018  8AD0 C9           3 ret
1019  8AD1
1020  8AD1              ; --------------------------------------------------------------------------------------------------------------
1021  8AD1              ;
1022  8AD1              ;	29/1/23
1023  8AD1
1024  8AD1              Mov_Amadeus
1025  8AD1
1026  8AD1              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
1027  8AD1
1028  8AD1 CD 65 97     	call Mov_right
1029  8AD4
1030  8AD4 3A AD 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1031  8AD7 CB 67        	bit 4,a
1032  8AD9 C8           	ret z
1033  8ADA
1034  8ADA              ; ---------
1035  8ADA
1036  8ADA              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
1037  8ADA CD AF 8D     	call Repone_datos_de_borrado_Amadeus
1038  8ADD CD 4C 8C     	call Limpia_Variables_de_borrado
1039  8AE0
1040  8AE0 C9           	ret
1041  8AE1
1042  8AE1              ; -----------------------------------------------------------------------------------
1043  8AE1              ;
1044  8AE1              ;	20/01/24
1045  8AE1              ;
1046  8AE1              ;
1047  8AE1
1048  8AE1              Construye_movimientos_masticados_entidad
1049  8AE1
1050  8AE1 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1051  8AE4 E5           	push hl
1052  8AE5 CD B0 8B     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1053  8AE8              ;															; _ el (Contador_de_mov_masticados).
1054  8AE8 CD AC 8C     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1055  8AEB              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1056  8AEB CD C1 96     	call Recompone_posicion_inicio
1057  8AEE
1058  8AEE CD E2 8F     1 call Draw
1059  8AF1 CD 94 8B     	call Guarda_movimiento_masticado
1060  8AF4
1061  8AF4 CD 3B 9A     	call Movimiento
1062  8AF7
1063  8AF7 3A F9 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1064  8AFA CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1065  8AFC 28 F0        	jr z,1B
1066  8AFE
1067  8AFE              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1068  8AFE              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1069  8AFE
1070  8AFE E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1071  8AFF 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1072  8B02
1073  8B02              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1074  8B02
1075  8B02 CD 9F 9B     	call Situa_en_contador_general_de_mov_masticados
1076  8B05
1077  8B05              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1078  8B05              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1079  8B05
1080  8B05 ED 4B AB 89  	ld bc,(Contador_de_mov_masticados)
1081  8B09 71           	ld (hl),c
1082  8B0A 23           	inc hl
1083  8B0B 70           	ld (hl),b
1084  8B0C
1085  8B0C C9           	ret
1086  8B0D
1087  8B0D              ; -----------------------------------------------------------------------------------
1088  8B0D              ;
1089  8B0D              ;	28/02/24
1090  8B0D              ;
1091  8B0D
1092  8B0D              Limpia_Almacen_de_scanlines_masticados
1093  8B0D
1094  8B0D 2A C0 89     	ld hl,(Puntero_de_scanlines_masticados)
1095  8B10 01 00 E9     	ld bc,Almacen_de_scanlines_masticados
1096  8B13 A7           	and a
1097  8B14 ED 42        	sbc hl,bc
1098  8B16 C8           	ret z 												; Salimos. No hay scanlines masticados que copiar.
1099  8B17
1100  8B17 E5           	push hl
1101  8B18 C1           	pop bc
1102  8B19
1103  8B19 21 00 E9     	ld hl,Almacen_de_scanlines_masticados
1104  8B1C 11 01 E9     	ld de,Almacen_de_scanlines_masticados+1
1105  8B1F
1106  8B1F AF           	xor a
1107  8B20 77           	ld (hl),a
1108  8B21
1109  8B21 ED B0        	ldir
1110  8B23
1111  8B23 21 00 E9     	ld hl,Almacen_de_scanlines_masticados
1112  8B26 22 C0 89     	ld (Puntero_de_scanlines_masticados),hl
1113  8B29
1114  8B29 21 02 80     	ld hl,Album_de_fotos+2
1115  8B2C 22 C4 89     	ld (Puntero_de_scanlines_en_album),hl
1116  8B2F
1117  8B2F C9           	ret
1118  8B30
1119  8B30              ; -----------------------------------------------------------------------------------
1120  8B30              ;
1121  8B30              ;	28/02/24
1122  8B30              ;
1123  8B30
1124  8B30              Genera_scanlines_masticados_a_borrar
1125  8B30
1126  8B30 2A C0 89     	ld hl,(Puntero_de_scanlines_masticados)
1127  8B33 01 00 E9     	ld bc,Almacen_de_scanlines_masticados
1128  8B36 A7           	and a
1129  8B37 ED 42        	sbc hl,bc
1130  8B39 C8           	ret z 												; Salimos. No hay scanlines masticados que copiar.
1131  8B3A
1132  8B3A E5           	push hl
1133  8B3B C1           	pop bc
1134  8B3C
1135  8B3C 21 00 E9     	ld hl,Almacen_de_scanlines_masticados
1136  8B3F 11 00 E8     	ld de,Almacen_de_scanlines_masticados_a_borrar
1137  8B42 ED B0        	ldir
1138  8B44
1139  8B44 ED 53 C2 89  	ld (Puntero_de_scanlines_masticados_a_borrar),de	; Situamos el puntero al principio del almacén.
1140  8B48
1141  8B48 C9           	ret
1142  8B49
1143  8B49              ; -----------------------------------------------------------------------------------
1144  8B49              ;
1145  8B49              ;	24/02/24
1146  8B49              ;
1147  8B49              ;	INPUTS: A Y B contienen (Numero_de_malotes).
1148  8B49
1149  8B49              Genera_scanlines_masticados
1150  8B49
1151  8B49 A7           	and a
1152  8B4A C8           	ret z 												; Salimos si no hay malotes que pintar.
1153  8B4B
1154  8B4B 2A C4 89     	ld hl,(Puntero_de_scanlines_en_album) 				; Dirección donde se encuentra el puntero de impresión.
1155  8B4E ED 5B C0 89  	ld de,(Puntero_de_scanlines_masticados)
1156  8B52
1157  8B52 C5           1 push bc
1158  8B53
1159  8B53 7E           	ld a,(hl)
1160  8B54 12           	ld (de),a
1161  8B55 73           	ld (hl),e
1162  8B56
1163  8B56 23           	inc hl
1164  8B57
1165  8B57 7E           	ld a,(hl)
1166  8B58 72           	ld (hl),d
1167  8B59 1C           	inc e
1168  8B5A 12           	ld (de),a 											; 1er scanline, (Puntero_de_impresion) en el Almacén de scanlines masticados.
1169  8B5B              ;				                                        ; La dirección donde se encuentra el (Puntero_de_impresion) dentro del almacén de scanlines_masticados_
1170  8B5B              ; 														; _sustituye al (Puntero_de_impresion) dentro del Album_de_fotos.
1171  8B5B CD 6B 8B     	call Construimos_scanlines
1172  8B5E
1173  8B5E              ; Actualizamos (Puntero_de_scanlines_en_album). Nos situamos en el Puntero_de_impresion de la siguiente entidad.
1174  8B5E
1175  8B5E 01 05 00     	ld bc,5
1176  8B61 A7           	and a
1177  8B62 ED 4A        	adc hl,bc
1178  8B64 22 C4 89     	ld (Puntero_de_scanlines_en_album),hl
1179  8B67
1180  8B67 C1           	pop bc
1181  8B68
1182  8B68 10 E8        	djnz 1B
1183  8B6A
1184  8B6A C9           	ret
1185  8B6B
1186  8B6B              ; --------------------------------------------------------
1187  8B6B
1188  8B6B E5           Construimos_scanlines push hl
1189  8B6C C5           	push bc
1190  8B6D
1191  8B6D 06 0F        	ld b,15
1192  8B6F 1B           	dec de
1193  8B70
1194  8B70 1A           	ld a,(de)
1195  8B71 6F           	ld l,a
1196  8B72 13           	inc de
1197  8B73 1A           	ld a,(de)
1198  8B74 67           	ld h,a 												; Puntero_de_impresión en HL.
1199  8B75
1200  8B75 13           	inc de
1201  8B76
1202  8B76 CD DB 92     1 call NextScan
1203  8B79
1204  8B79              ; Entramos en memoria de attr.???
1205  8B79
1206  8B79              ; Si es así, decrementamos H. (Repetimos el último scancline).
1207  8B79
1208  8B79 7C           	ld a,h
1209  8B7A FE 58        	cp $58
1210  8B7C 20 03        	jr nz,2F
1211  8B7E
1212  8B7E 21 00 00     	ld hl,0 											; Scanline NO IMPRIMIBLE, "0".
1213  8B81
1214  8B81 7D           2 ld a,l
1215  8B82 12           	ld (de),a
1216  8B83 13           	inc de
1217  8B84 7C           	ld a,h
1218  8B85 12           	ld (de),a
1219  8B86
1220  8B86 13           	inc de
1221  8B87
1222  8B87 24           	inc h
1223  8B88 25           	dec h
1224  8B89 28 02        	jr z,3F  											; No generamos más escanlines si hemos entrado en memoria de attr.
1225  8B8B
1226  8B8B 10 E9        	djnz 1B 											; 16 scanlines generados.
1227  8B8D
1228  8B8D ED 53 C0 89  3 ld (Puntero_de_scanlines_masticados),de 				; Actualizamos puntero.
1229  8B91
1230  8B91 C1           	pop bc
1231  8B92 E1           	pop hl
1232  8B93
1233  8B93 C9           	ret
1234  8B94
1235  8B94              ; -----------------------------------------------------------------------------------
1236  8B94              ;
1237  8B94              ;	28/12/23
1238  8B94              ;
1239  8B94              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1240  8B94              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1241  8B94
1242  8B94              Guarda_movimiento_masticado
1243  8B94
1244  8B94 ED 73 EB 89  	ld (Stack),sp
1245  8B98 ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1246  8B9C
1247  8B9C E5           	push hl
1248  8B9D DD E5            push ix
1249  8B9F FD E5            push iy
1250  8BA1
1251  8BA1 ED 7B EB 89      ld sp,(Stack)
1252  8BA5
1253  8BA5 2A AB 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1254  8BA8 23           	inc hl
1255  8BA9 22 AB 89     	ld (Contador_de_mov_masticados),hl
1256  8BAC
1257  8BAC CD B0 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1258  8BAF              ;															; _ el (Contador_de_mov_masticados).
1259  8BAF C9               ret
1260  8BB0
1261  8BB0              ; --------------------------------------------------------------------------------------------------------------
1262  8BB0              ;
1263  8BB0              ;	12/1/24
1264  8BB0              ;
1265  8BB0              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1266  8BB0
1267  8BB0              Actualiza_Puntero_de_almacen_de_mov_masticados
1268  8BB0
1269  8BB0 2A A9 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1270  8BB3 01 06 00     	ld bc,6
1271  8BB6 A7           	and a
1272  8BB7 ED 4A        	adc hl,bc
1273  8BB9 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1274  8BBC C9           	ret
1275  8BBD
1276  8BBD              ; --------------------------------------------------------------------------------------------------------------
1277  8BBD              ;
1278  8BBD              ;	15/01/24
1279  8BBD              ;
1280  8BBD              ;	Cargamos los registros_
1281  8BBD              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1282  8BBD              ;
1283  8BBD              ;	HL contiene la dirección de la rutina de impresión.
1284  8BBD              ;	IX contiene el puntero de impresión.
1285  8BBD              ;	IY contiene (Puntero_objeto).
1286  8BBD
1287  8BBD
1288  8BBD ED 73 EB 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1289  8BC1 ED 7B A9 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1290  8BC5
1291  8BC5 FD E1        	pop iy
1292  8BC7 DD E1        	pop ix
1293  8BC9 E1           	pop hl
1294  8BCA
1295  8BCA ED 73 A9 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1296  8BCE
1297  8BCE ED 7B EB 89  	ld sp,(Stack)
1298  8BD2
1299  8BD2 C9           	ret
1300  8BD3
1301  8BD3              ; --------------------------------------------------------------------------------------------------------------
1302  8BD3              ;
1303  8BD3              ;	28/12/23
1304  8BD3              ;
1305  8BD3              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1306  8BD3              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1307  8BD3
1308  8BD3              Guarda_foto_entidad_a_pintar
1309  8BD3
1310  8BD3 3A AD 89     	ld a,(Ctrl_0)
1311  8BD6 CB 77        	bit 6,a
1312  8BD8 28 04        	jr z,5F
1313  8BDA
1314  8BDA              ;	Guarda la foto de Amadeus.
1315  8BDA
1316  8BDA              ;	call Draw
1317  8BDA              ;	call Guarda_movimiento_masticado	;! Provisional
1318  8BDA CD BF 80     	call Guarda_foto_registros
1319  8BDD C9           	ret
1320  8BDE
1321  8BDE              ; ENTIDADES!
1322  8BDE              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1323  8BDE
1324  8BDE 3A F9 89     5 ld a,(Ctrl_3)
1325  8BE1 CB 5F        	bit 3,a
1326  8BE3 28 01        	jr z,1F
1327  8BE5
1328  8BE5              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1329  8BE5
1330  8BE5              4
1331  8BE5              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1332  8BE5 C9           	ret
1333  8BE6
1334  8BE6              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1335  8BE6
1336  8BE6 3A F9 89     1 ld a,(Ctrl_3)
1337  8BE9 CB 57        	bit 2,a
1338  8BEB 20 10        	jr nz,6F
1339  8BED
1340  8BED              ; Entidad guía o fantasma ???
1341  8BED
1342  8BED 3A B2 89     	ld a,(Ctrl_2)
1343  8BF0 CB 6F        	bit 5,a
1344  8BF2 20 10        	jr nz,3F
1345  8BF4
1346  8BF4              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1347  8BF4
1348  8BF4 18 EF        	jr 4B
1349  8BF6
1350  8BF6              ; ENTIDAD_GUÍA:
1351  8BF6              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1352  8BF6              ; _guardando "movimientos_masticados".
1353  8BF6
1354  8BF6 3A F9 89     2 ld a,(Ctrl_3)
1355  8BF9 CB 57        	bit 2,a
1356  8BFB 28 07        	jr z,3F
1357  8BFD
1358  8BFD              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1359  8BFD              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1360  8BFD
1361  8BFD CB 97        6 res 2,a
1362  8BFF CB DF        	set 3,a
1363  8C01 32 F9 89     	ld (Ctrl_3),a
1364  8C04
1365  8C04
1366  8C04              ;	Esto sólo lo ejecuta una entidad guía.
1367  8C04
1368  8C04 CD E2 8F     3 	call Draw
1369  8C07 CD 94 8B     	call Guarda_movimiento_masticado
1370  8C0A CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1371  8C0D
1372  8C0D              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1373  8C0D              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1374  8C0D
1375  8C0D              ;	call Convierte_guia_en_fantasma
1376  8C0D C9           	ret
1377  8C0E
1378  8C0E              ; *************************************************************************************************************************************************************
1379  8C0E              ;
1380  8C0E              ; 8/1/23
1381  8C0E              ;
1382  8C0E              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1383  8C0E              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1384  8C0E              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1385  8C0E
1386  8C0E              ; Destruye HL y DE !!!!!
1387  8C0E
1388  8C0E              Inicia_punteros_de_cajas
1389  8C0E
1390  8C0E 21 E4 86     	ld hl,Indice_de_cajas_de_entidades
1391  8C11 CD A6 8C         call Extrae_address
1392  8C14 22 DD 89         ld (Puntero_store_caja),hl
1393  8C17 21 E6 86     	ld hl,Indice_de_cajas_de_entidades+2
1394  8C1A 22 E1 89     	ld (Indice_restore_caja),hl
1395  8C1D CD A6 8C     	call Extrae_address
1396  8C20 22 DF 89     	ld (Puntero_restore_caja),hl
1397  8C23 C9               ret
1398  8C24
1399  8C24              ; *************************************************************************************************************************************************************
1400  8C24              ;
1401  8C24              ; 8/1/23
1402  8C24              ;
1403  8C24              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1404  8C24
1405  8C24 21 7C 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1406  8C27 22 FC 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1407  8C2A C9           	ret
1408  8C2B 21 64 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1409  8C2E 22 FE 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1410  8C31 C9           	ret
1411  8C32
1412  8C32              ; -------------------------------------------------------------------------------------------------------------
1413  8C32              ;
1414  8C32              ; 21/9/23
1415  8C32              ;
1416  8C32
1417  8C32              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1418  8C32
1419  8C32              Limpia_album_Amadeus
1420  8C32
1421  8C32 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1422  8C35 7E           	ld a,(hl)
1423  8C36 A7           	and a
1424  8C37 C8           	ret z
1425  8C38
1426  8C38 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1427  8C3B 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1428  8C3E 01 0B 00     	ld bc,11
1429  8C41 AF           	xor a
1430  8C42 77           	ld (hl),a
1431  8C43 ED B0        	ldir
1432  8C45
1433  8C45 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1434  8C48 22 F7 89     	ld (End_Snapshot_Amadeus),hl
1435  8C4B
1436  8C4B C9           	ret
1437  8C4C
1438  8C4C 21 A1 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1439  8C4F 11 A2 89     	ld de,Variables_de_borrado+1
1440  8C52 01 05 00     	ld bc,5
1441  8C55 AF           	xor a
1442  8C56 77           	ld (hl),a
1443  8C57 ED B0        	ldir
1444  8C59 C9           	ret
1445  8C5A
1446  8C5A              ; -------------------------------------------------------------------------------------------------------------
1447  8C5A              ;
1448  8C5A              ; 	21/02/24
1449  8C5A              ;
1450  8C5A              ;	MODIFICA: AF,HL,BC,DE
1451  8C5A              ;
1452  8C5A              ; 	(Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1453  8C5A              ; 	Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1454  8C5A
1455  8C5A              Calcula_numero_de_malotes
1456  8C5A
1457  8C5A 21 00 80     	ld hl,Album_de_fotos
1458  8C5D EB           	ex de,hl
1459  8C5E 2A F1 89     	ld hl,(Stack_snapshot)
1460  8C61
1461  8C61 06 00        	ld b,0
1462  8C63 7D           	ld a,l
1463  8C64 93           	sub e
1464  8C65 28 07        	jr z,1F
1465  8C67
1466  8C67              ; Nº de malotes no es "0".
1467  8C67
1468  8C67 D6 06        2 sub 6
1469  8C69 04           	inc b
1470  8C6A A7           	and a
1471  8C6B 20 FA        	jr nz,2B
1472  8C6D 78           	ld a,b
1473  8C6E
1474  8C6E 32 E6 89     1 ld (Numero_de_malotes),a
1475  8C71 C9           	ret
1476  8C72
1477  8C72              ; -------------------------------------------------------------------------------------------------------------
1478  8C72              ;
1479  8C72              ; 8/9/23
1480  8C72              ;
1481  8C72
1482  8C72              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1483  8C72              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1484  8C72
1485  8C72              Calcula_malotes_Amadeus
1486  8C72
1487  8C72 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1488  8C75 EB           	ex de,hl
1489  8C76 2A F7 89     	ld hl,(End_Snapshot_Amadeus)
1490  8C79
1491  8C79 7C           	ld a,h
1492  8C7A A7           	and a
1493  8C7B 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1494  8C7D
1495  8C7D 06 00        	ld b,0
1496  8C7F 7D           	ld a,l
1497  8C80 93           	sub e
1498  8C81 28 07        	jr z,1F
1499  8C83
1500  8C83              ; Nº de malotes no es "0".
1501  8C83
1502  8C83 D6 06        2 sub 6
1503  8C85 04           	inc b
1504  8C86 A7           	and a
1505  8C87 20 FA        	jr nz,2B
1506  8C89 78           	ld a,b
1507  8C8A
1508  8C8A 32 E6 89     1 ld (Numero_de_malotes),a
1509  8C8D C9           	ret
1510  8C8E
1511  8C8E              ; -------------------------------------------------------------------------------------------------------------
1512  8C8E              ;
1513  8C8E              ; 28/2/23
1514  8C8E              ;
1515  8C8E
1516  8C8E              Calcula_numero_de_disparotes
1517  8C8E
1518  8C8E 21 56 80     	ld hl,Album_de_fotos_disparos
1519  8C91 EB           	ex de,hl
1520  8C92 2A F5 89     	ld hl,(End_Snapshot_disparos)
1521  8C95
1522  8C95 06 00        	ld b,0
1523  8C97 7D           	ld a,l
1524  8C98 93           	sub e
1525  8C99 28 07        	jr z,1F
1526  8C9B
1527  8C9B              ; Nº de malotes no es "0".
1528  8C9B
1529  8C9B D6 06        2 sub 6
1530  8C9D 04           	inc b
1531  8C9E A7           	and a
1532  8C9F 20 FA        	jr nz,2B
1533  8CA1 78           	ld a,b
1534  8CA2
1535  8CA2 32 FB 89     1 ld (Numero_de_disparotes),a
1536  8CA5 C9           	ret
1537  8CA6
1538  8CA6              ; *************************************************************************************************************************************************************
1539  8CA6              ;
1540  8CA6              ; 20/10/22
1541  8CA6              ;
1542  8CA6              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1543  8CA6              ;
1544  8CA6              ; Destruye el puntero y DE !!!!!
1545  8CA6
1546  8CA6 5E           Extrae_address ld e,(hl)
1547  8CA7 23           	inc hl
1548  8CA8 56           	ld d,(hl)
1549  8CA9 2B           	dec hl
1550  8CAA EB           	ex de,hl
1551  8CAB C9           	ret
1552  8CAC
1553  8CAC              ; *************************************************************************************************************************************************************
1554  8CAC              ;
1555  8CAC              ;	20/1/24
1556  8CAC              ;
1557  8CAC              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1558  8CAC              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1559  8CAC              ;
1560  8CAC              ;   Destruye HL y BC !!!!!,
1561  8CAC              ;
1562  8CAC              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1563  8CAC              ;					"0" ..... Izquierda.
1564  8CAC
1565  8CAC              Inicia_Puntero_objeto
1566  8CAC
1567  8CAC 3A 9F 89     	ld a,(Cuad_objeto)
1568  8CAF E6 01        	and 1
1569  8CB1 F5           	push af
1570  8CB2 CC CE 8C     	call z,Inicia_puntero_objeto_izq
1571  8CB5 F1           	pop af
1572  8CB6 C8           	ret z
1573  8CB7 CD BB 8C     	call Inicia_puntero_objeto_der
1574  8CBA C9           	ret
1575  8CBB
1576  8CBB              ; Arrancamos desde la parte izquierda de la pantalla.
1577  8CBB              ; Iniciamos (Indice_Sprite_der).
1578  8CBB
1579  8CBB 2A 95 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1580  8CBE 22 99 89     	ld (Puntero_DESPLZ_der),hl
1581  8CC1 CD A6 8C     	call Extrae_address
1582  8CC4 22 8F 89     	ld (Puntero_objeto),hl
1583  8CC7
1584  8CC7 2A 97 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1585  8CCA 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1586  8CCD C9           	ret
1587  8CCE
1588  8CCE              ; Arrancamos desde la parte derecha de la pantalla.
1589  8CCE              ; Iniciamos (Indice_Sprite_izq).
1590  8CCE
1591  8CCE 2A 97 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1592  8CD1 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
1593  8CD4 CD A6 8C     	call Extrae_address
1594  8CD7 22 8F 89     	ld (Puntero_objeto),hl
1595  8CDA
1596  8CDA 2A 95 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1597  8CDD 22 99 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1598  8CE0 C9           	ret
1599  8CE1
1600  8CE1              ; **************************************************************************************************
1601  8CE1              ;
1602  8CE1              ;	31/01/24
1603  8CE1              ;
1604  8CE1              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1605  8CE1
1606  8CE1              Restore_entidad
1607  8CE1
1608  8CE1 2A DD 89     	ld hl,(Puntero_store_caja)
1609  8CE4 11 8A 89     	ld de,Bandeja_DRAW
1610  8CE7 7E           	ld a,(hl)
1611  8CE8 12           	ld (de),a
1612  8CE9 23           	inc hl 											; (Tipo).
1613  8CEA
1614  8CEA 11 91 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1615  8CED 01 02 00     	ld bc,2
1616  8CF0 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1617  8CF2
1618  8CF2 13           	inc de
1619  8CF3 7E           	ld a,(hl)
1620  8CF4 12           	ld (de),a 										; Transferimos (Attr).
1621  8CF5 23           	inc hl
1622  8CF6
1623  8CF6 11 A0 89     	ld de,Impacto
1624  8CF9
1625  8CF9 7E           	ld a,(hl)
1626  8CFA 12           	ld (de),a 										; Transferimos (Impacto).
1627  8CFB 23           	inc hl
1628  8CFC
1629  8CFC 13           	inc de
1630  8CFD
1631  8CFD 01 06 00     	ld bc,6
1632  8D00 ED B0        	ldir
1633  8D02
1634  8D02 01 07 00     	ld bc,7
1635  8D05 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1636  8D07              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1637  8D07 11 B2 89     	ld de,Ctrl_2
1638  8D0A
1639  8D0A 7E           	ld a,(hl)
1640  8D0B 12           	ld (de),a 										; Transferimos (Ctrl_2).
1641  8D0C
1642  8D0C C9           	ret
1643  8D0D
1644  8D0D              ; **************************************************************************************************
1645  8D0D              ;
1646  8D0D              ;	08/05/23
1647  8D0D              ;
1648  8D0D              ;	Incrementamos los dos punteros de entidades. (+1).
1649  8D0D
1650  8D0D              Incrementa_punteros_de_cajas
1651  8D0D
1652  8D0D 2A DF 89     	ld hl,(Puntero_restore_caja)
1653  8D10 22 DD 89     	ld (Puntero_store_caja),hl
1654  8D13 2A E1 89     	ld hl,(Indice_restore_caja)
1655  8D16 23           	inc hl
1656  8D17 23           	inc hl
1657  8D18 22 E1 89     	ld (Indice_restore_caja),hl
1658  8D1B CD A6 8C         call Extrae_address
1659  8D1E 22 DF 89         ld (Puntero_restore_caja),hl
1660  8D21 C9               ret
1661  8D22
1662  8D22              ; **************************************************************************************************
1663  8D22              ;
1664  8D22              ;	21/12/23
1665  8D22              ;
1666  8D22              ;	Restore_Amadeus
1667  8D22              ;
1668  8D22              ;	Cargamos en DRAW los parámetros de Amadeus.
1669  8D22              ;
1670  8D22
1671  8D22 E5           Restore_Amadeus	push hl
1672  8D23 D5           	push de
1673  8D24 C5            	push bc
1674  8D25 21 F6 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1675  8D28 11 8A 89     	ld de,Bandeja_DRAW
1676  8D2B 01 2A 00     	ld bc,42
1677  8D2E ED B0        	ldir
1678  8D30 C1           	pop bc
1679  8D31 D1           	pop de
1680  8D32 E1           	pop hl
1681  8D33 C9           	ret
1682  8D34
1683  8D34              ; *************************************************************************************************************************************************************
1684  8D34              ;
1685  8D34              ;	21/12/23
1686  8D34              ;
1687  8D34              ;	Store_Amadeus
1688  8D34              ;
1689  8D34              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1690  8D34              ;
1691  8D34              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1692  8D34              ;
1693  8D34              ;	DESTRUYE: HL y BC y DE.
1694  8D34
1695  8D34 21 8A 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1696  8D37 01 2A 00     	ld bc,42
1697  8D3A ED B0        	ldir
1698  8D3C C9           	ret
1699  8D3D
1700  8D3D              ; -----------------------------------------------------------
1701  8D3D              ;
1702  8D3D              ;	21/12/23
1703  8D3D              ;
1704  8D3D              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1705  8D3D              ;
1706  8D3D              ;	Destruye: HL,BC,DE,A
1707  8D3D
1708  8D3D 21 8A 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1709  8D40 01 29 00     	ld bc,41
1710  8D43 AF           	xor a
1711  8D44 77           	ld (hl),a
1712  8D45 11 8B 89     	ld de,Bandeja_DRAW+1
1713  8D48 ED B0        	ldir
1714  8D4A C9           	ret
1715  8D4B
1716  8D4B              ; -----------------------------------------------------------
1717  8D4B
1718  8D4B              ; Teclado.
1719  8D4B
1720  8D4B 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1721  8D4D DB FE        	in a,($fe)
1722  8D4F E6 01        	and $01
1723  8D51 28 02        	jr z,1f
1724  8D53 18 F6        	jr Pulsa_ENTER
1725  8D55 C9           1 ret
1726  8D56
1727  8D56              ; **************************************************************************************************
1728  8D56              ;
1729  8D56              ; Temporización.
1730  8D56
1731  8D56              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1732  8D56              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1733  8D56              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1734  8D56              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1735  8D56
1736  8D56              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1737  8D56              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1738  8D56              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1739  8D56
1740  8D56              ; A partir de $4f61 no hace falta DELAY.
1741  8D56
1742  8D56              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1743  8D56
1744  8D56 01 00 09     DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1745  8D59 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1746  8D5A 78           	LD A,B
1747  8D5B A7           	AND A
1748  8D5C 20 FB        	JR NZ,wait
1749  8D5E C9           	RET
1750  8D5F
1751  8D5F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1752  8D5F              ;
1753  8D5F              ;	5/3/23
1754  8D5F              ;
1755  8D5F              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1756  8D5F
1757  8D5F              Movimiento_Amadeus
1758  8D5F
1759  8D5F              ; Disparo.
1760  8D5F
1761  8D5F 3A 11 8A     	ld a,(Disparo_Amadeus)
1762  8D62 A7           	and a
1763  8D63 20 02        	jr nz,1F
1764  8D65 18 15        	jr 2F
1765  8D67
1766  8D67 3E F7        1 ld a,$f7													; "5" para disparar.
1767  8D69 DB FE        	in a,($fe)
1768  8D6B E6 10        	and $10
1769  8D6D
1770  8D6D F5           	push af
1771  8D6E CC B5 9B     	call z,Genera_disparo
1772  8D71 F1           	pop af
1773  8D72 20 08        	jr nz,2F
1774  8D74
1775  8D74 3A 11 8A     	ld a,(Disparo_Amadeus)
1776  8D77 EE 01        	xor 1
1777  8D79 32 11 8A     	ld (Disparo_Amadeus),a
1778  8D7C 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1779  8D7E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1780  8D80 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1781  8D82 CC 88 98         call z,Mov_left											;			"			"			"			"			"			"			"			"
1782  8D85
1783  8D85 3E F7        	ld a,$f7
1784  8D87 DB FE        	in a,($fe)
1785  8D89 E6 01        	and $01
1786  8D8B C8           	ret z
1787  8D8C
1788  8D8C 3E F7        	ld a,$f7
1789  8D8E DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1790  8D90 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1791  8D92 CC 65 97     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1792  8D95 C9           	ret
1793  8D96
1794  8D96              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1795  8D96              ;
1796  8D96              ;	Rutina provisional para que los malotes cagen balas.
1797  8D96
1798  8D96              Detecta_disparo_entidad
1799  8D96
1800  8D96 3A 14 8A     	ld a,(Disparo_entidad)
1801  8D99 A7           	and a
1802  8D9A C8           	ret z
1803  8D9B
1804  8D9B              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1805  8D9B
1806  8D9B              ;	ld a,$7f				; Detecta SPACE.
1807  8D9B              ;	in a,($fe)
1808  8D9B              ;	and 1
1809  8D9B              ;	ret nz
1810  8D9B
1811  8D9B CD B5 9B     	call Genera_disparo
1812  8D9E C9           	ret
1813  8D9F
1814  8D9F              ; ----------------------------------------------------------------------
1815  8D9F              ;
1816  8D9F              ;	8/9/23
1817  8D9F
1818  8D9F 2A F7 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1819  8DA2 2B            	dec hl
1820  8DA3 7E           	ld a,(hl)
1821  8DA4 A7           	and a
1822  8DA5 C8           	ret z										; Salimos si es álbum está vacío.
1823  8DA6
1824  8DA6 11 A6 89     	ld de,Variables_de_borrado+5
1825  8DA9 01 06 00     	ld bc,6
1826  8DAC ED B8        	lddr
1827  8DAE C9           	ret
1828  8DAF
1829  8DAF              ; ----------------------------------------------------------------------
1830  8DAF              ;
1831  8DAF              ;	9/9/23
1832  8DAF
1833  8DAF              Repone_datos_de_borrado_Amadeus
1834  8DAF
1835  8DAF 21 A1 89     	ld hl,Variables_de_borrado
1836  8DB2 11 AC 80     	ld de,Album_de_fotos_Amadeus
1837  8DB5 01 06 00     	ld bc,6
1838  8DB8 ED B0        	ldir
1839  8DBA
1840  8DBA EB           	ex de,hl
1841  8DBB 22 F7 89     	ld (End_Snapshot_Amadeus),hl
1842  8DBE
1843  8DBE C9           	ret
1844  8DBF
1845  8DBF              ; ----------------------------------------------------------------------
1846  8DBF              ;
1847  8DBF              ;	27/10/23
1848  8DBF              ;
1849  8DBF
1850  8DBF              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1851  8DBF              ;	_ Album_de_fotos correspondiente.
1852  8DBF
1853  8DBF              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1854  8DBF              ;	_ durante el proceso de escritura.
1855  8DBF
1856  8DBF              Repone_datos_de_borrado
1857  8DBF
1858  8DBF ED 5B F1 89  	ld de,(Stack_snapshot)
1859  8DC3 21 A1 89     	ld hl,Variables_de_borrado
1860  8DC6 01 06 00     	ld bc,6
1861  8DC9 ED B0        	ldir
1862  8DCB
1863  8DCB EB           	ex de,hl
1864  8DCC 22 F1 89     	ld (Stack_snapshot),hl
1865  8DCF
1866  8DCF C9           	ret
1867  8DD0
1868  8DD0              ; --------------------------------------------------------------------------------------
1869  8DD0
1870  8DD0              Pinta_Amadeus
1871  8DD0
1872  8DD0 CD 72 8C        	call Calcula_malotes_Amadeus
1873  8DD3 CD 7B 93     	call Extrae_foto_Amadeus
1874  8DD6 CD 32 8C     	call Limpia_album_Amadeus
1875  8DD9
1876  8DD9 C9           	ret
1877  8DDA
1878  8DDA              ; -----------------------------------------------------------------------------------
1879  8DDA              ;
1880  8DDA              ;	10/12/23
1881  8DDA              ;
1882  8DDA              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1883  8DDA
1884  8DDA              Actualiza_relojes
1885  8DDA
1886  8DDA 3A F9 89     	ld a,(Ctrl_3)
1887  8DDD CB 47        	bit 0,a
1888  8DDF C8           	ret z 						;	Salimos si no hemos pintado unidades.
1889  8DE0
1890  8DE0 21 0C 8A     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1891  8DE3 34           	inc (hl)
1892  8DE4
1893  8DE4 34           	inc (hl)
1894  8DE5 35           	dec (hl)
1895  8DE6 C0           	ret nz
1896  8DE7
1897  8DE7 21 0D 8A     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1898  8DEA 34           	inc (hl)
1899  8DEB C9           	ret
1900  8DEC
1901  8DEC              ; ---------------------------------------------------------------
1902  8DEC
1903  8DEC              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8DEC              ;---------------------------------------------------------------------------------------------------------------
   2+ 8DEC              ;
   3+ 8DEC              ;   19/1/24
   4+ 8DEC              ;
   5+ 8DEC              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8DEC              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8DEC              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8DEC              ;	_ de la 1ª entidad del Nivel.
   9+ 8DEC              ;
  10+ 8DEC              ;	MODIFICA: HL,DE y A.
  11+ 8DEC              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8DEC
  13+ 8DEC              Inicializa_Nivel
  14+ 8DEC
  15+ 8DEC 2A 18 8A     	ld hl,(Puntero_indice_NIVELES)
  16+ 8DEF CD A6 8C     	call Extrae_address
  17+ 8DF2 7E           	ld a,(hl)
  18+ 8DF3 32 E3 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8DF6 23           	inc hl
  20+ 8DF7 CD 04 8E     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8DFA 22 1A 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8DFD CD 0D 8E     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8E00              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8E00 CD 1E 8E     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8E03 C9           	ret
  26+ 8E04
  27+ 8E04              ; ----------------------
  28+ 8E04
  29+ 8E04 11 B4 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8E07 01 04 00     	ld bc,4
  31+ 8E0A ED B0        	ldir
  32+ 8E0C C9           	ret
  33+ 8E0D
  34+ 8E0D 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8E0E CD 5E 8F         call Calcula_salto_en_BC
  36+ 8E11 21 60 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8E14 A7               and a
  38+ 8E15 ED 4A            adc hl,bc
  39+ 8E17 CD A6 8C         call Extrae_address
  40+ 8E1A 22 CE 89         ld (Puntero_indice_mov),hl
  41+ 8E1D C9               ret
  42+ 8E1E
  43+ 8E1E 3A 8A 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8E21 CD 5E 8F     	call Calcula_salto_en_BC
  45+ 8E24 21 00 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8E27 A7               and a
  47+ 8E28 ED 4A            adc hl,bc
  48+ 8E2A CD A6 8C         call Extrae_address
  49+ 8E2D 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8E30 C9           	ret
  51+ 8E31
  52+ 8E31              ;---------------------------------------------------------------------------------------------------------------
  53+ 8E31              ;
  54+ 8E31              ;   5/1/24
  55+ 8E31              ;
  56+ 8E31              ;	Destruye A,BC,HL,DE
  57+ 8E31
  58+ 8E31              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8E31              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8E31
  61+ 8E31              Inicia_Entidades
  62+ 8E31
  63+ 8E31              ; Preparamos los punteros de las cajas de entidades:
  64+ 8E31
  65+ 8E31 CD 0E 8C     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8E34              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8E34 CD C5 8F     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8E37
  69+ 8E37 2A 1A 8A     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8E3A
  71+ 8E3A 22 1A 8A     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8E3D
  73+ 8E3D CD 0C 8F     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8E40
  75+ 8E40 2A 1A 8A     	ld hl,(Datos_de_nivel)
  76+ 8E43
  77+ 8E43              ; En este punto:
  78+ 8E43              ;
  79+ 8E43              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8E43              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8E43
  82+ 8E43 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8E44
  84+ 8E44 7E           	ld a,(hl)
  85+ 8E45 CD 81 8E     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8E48
  87+ 8E48 CD 70 8F     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8E4B
  89+ 8E4B              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8E4B
  91+ 8E4B CD 2E 8F     	call Busca_mov_masticados_segun_tipo
  92+ 8E4E
  93+ 8E4E A7           	and a
  94+ 8E4F 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8E51
  96+ 8E51              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8E51
  98+ 8E51              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8E51              ;	_ de este tipo de entidad.
 100+ 8E51
 101+ 8E51 CD 9F 9B     	call Situa_en_contador_general_de_mov_masticados
 102+ 8E54 CD AC 9B     	call Transfiere_datos_de_contadores
 103+ 8E57
 104+ 8E57 18 06        	jr 4F
 105+ 8E59
 106+ 8E59 CD E1 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8E5C
 108+ 8E5C              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8E5C              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8E5C              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8E5C              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8E5C              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8E5C
 114+ 8E5C CD EC 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8E5F              ;																; _ Mov_masticados ya generados.
 116+ 8E5F CD 9B 8E     4 call Guarda_foto_de_mov_masticado
 117+ 8E62
 118+ 8E62              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8E62
 120+ 8E62 2A A7 89     	ld hl,(Puntero_de_impresion)
 121+ 8E65 CD B6 A0     	call Genera_coordenadas
 122+ 8E68 CD 97 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 123+ 8E6B CD A5 8E     	call Limpiamos_bandeja_DRAW
 124+ 8E6E CD 0D 8D     	call Incrementa_punteros_de_cajas
 125+ 8E71
 126+ 8E71              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 127+ 8E71              ; _ entidad del Nivel.
 128+ 8E71
 129+ 8E71 3A FA 89     	ld a,(Ctrl_4)
 130+ 8E74 E6 F0        	and $f0
 131+ 8E76 32 FA 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 132+ 8E79
 133+ 8E79              ; Siguiente entidad del Nivel.
 134+ 8E79
 135+ 8E79 2A 1A 8A     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 136+ 8E7C 23           	inc hl 														; _ entidad del Nivel.
 137+ 8E7D
 138+ 8E7D C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 139+ 8E7E
 140+ 8E7E 10 BA        	djnz 2B
 141+ 8E80
 142+ 8E80 C9           	ret
 143+ 8E81
 144+ 8E81              ; ---------------------------------------------------------------------
 145+ 8E81              ;
 146+ 8E81              ;	10/02/24
 147+ 8E81              ;
 148+ 8E81              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 149+ 8E81              ;
 150+ 8E81              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 151+ 8E81
 152+ 8E81              Definicion_segun_tipo
 153+ 8E81
 154+ 8E81 CD 5E 8F     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 155+ 8E84 21 B1 87     	ld hl,Indice_de_definiciones_de_entidades
 156+ 8E87 CD 66 8F     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 157+ 8E8A C9           	ret
 158+ 8E8B
 159+ 8E8B              ; ---------------------------------------------------------------------
 160+ 8E8B              ;
 161+ 8E8B              ;	30/01/24
 162+ 8E8B
 163+ 8E8B
 164+ 8E8B              Store_Restore_cajas
 165+ 8E8B
 166+ 8E8B              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8E8B
 168+ 8E8B 2A A7 89     	ld hl,(Puntero_de_impresion)
 169+ 8E8E CD B6 A0     	call Genera_coordenadas
 170+ 8E91
 171+ 8E91 CD 97 8F     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 172+ 8E94 CD A5 8E     	call Limpiamos_bandeja_DRAW
 173+ 8E97
 174+ 8E97              ; 	Entidad_sospechosa. 20/4/23
 175+ 8E97
 176+ 8E97              ;	ld a,(Impacto)
 177+ 8E97              ;	and a
 178+ 8E97              ;	jr z,1F
 179+ 8E97
 180+ 8E97              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 181+ 8E97              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 182+ 8E97              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 183+ 8E97              ;	adc hl,bc 											; _ "0" más adelante.
 184+ 8E97              ;	ld (Entidad_sospechosa_de_colision),hl
 185+ 8E97
 186+ 8E97
 187+ 8E97              ;1 ld hl,(Puntero_restore_caja)
 188+ 8E97              ;	ld a,(hl)
 189+ 8E97              ;	and a
 190+ 8E97              ;	push af
 191+ 8E97              ;	jr z,2F
 192+ 8E97
 193+ 8E97              ;	di
 194+ 8E97              ;	ld de,Bandeja_DRAW
 195+ 8E97              ;	ld bc,42
 196+ 8E97              ;	ldir
 197+ 8E97              ;	ei
 198+ 8E97
 199+ 8E97 CD 0D 8D     2 call Incrementa_punteros_de_cajas
 200+ 8E9A C9           	ret
 201+ 8E9B
 202+ 8E9B
 203+ 8E9B              ; ---------------------------------------------------------------------
 204+ 8E9B              ;
 205+ 8E9B              ;	29/01/24
 206+ 8E9B
 207+ 8E9B              Guarda_foto_de_mov_masticado
 208+ 8E9B
 209+ 8E9B CD BD 8B     	call Cargamos_registros_con_mov_masticado
 210+ 8E9E CD BF 80     	call Guarda_foto_registros
 211+ 8EA1              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 212+ 8EA1              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 213+ 8EA1              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 214+ 8EA1              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 215+ 8EA1
 216+ 8EA1 CD B0 8E     	call Decrementa_Contador_de_mov_masticados
 217+ 8EA4 C9           	ret
 218+ 8EA5
 219+ 8EA5              ; ---------------------------------------------------------------------
 220+ 8EA5              ;
 221+ 8EA5              ;	25/01/24
 222+ 8EA5
 223+ 8EA5 21 8A 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 224+ 8EA8 06 2A        	ld b,42
 225+ 8EAA AF           	xor a
 226+ 8EAB
 227+ 8EAB 77           1 ld (hl),a
 228+ 8EAC 23           	inc hl
 229+ 8EAD 10 FC        	djnz 1B
 230+ 8EAF
 231+ 8EAF C9           	ret
 232+ 8EB0
 233+ 8EB0              ; ---------------------------------------------------------------------
 234+ 8EB0              ;
 235+ 8EB0              ;	22/01/24
 236+ 8EB0
 237+ 8EB0 2A AB 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 238+ 8EB3 2B           	dec hl
 239+ 8EB4
 240+ 8EB4 24           	inc h
 241+ 8EB5 25           	dec h
 242+ 8EB6
 243+ 8EB6 FC BD 8E     	call m,Reinicia_entidad_maliciosa
 244+ 8EB9
 245+ 8EB9              ;	jr nz,1F
 246+ 8EB9
 247+ 8EB9              ;	inc l
 248+ 8EB9              ;	dec l
 249+ 8EB9
 250+ 8EB9              ;	di
 251+ 8EB9              ;	jr z,$
 252+ 8EB9              ;	ei
 253+ 8EB9
 254+ 8EB9 22 AB 89     1 ld (Contador_de_mov_masticados),hl
 255+ 8EBC C9           	ret
 256+ 8EBD
 257+ 8EBD              ; ---------------------------------------------------------------------
 258+ 8EBD              ;
 259+ 8EBD              ;	10/2/24
 260+ 8EBD
 261+ 8EBD              Reinicia_entidad_maliciosa
 262+ 8EBD
 263+ 8EBD              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 264+ 8EBD
 265+ 8EBD CD 9F 9B     	call Situa_en_contador_general_de_mov_masticados
 266+ 8EC0 CD AC 9B     	call Transfiere_datos_de_contadores
 267+ 8EC3
 268+ 8EC3              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 269+ 8EC3
 270+ 8EC3 3A 8A 89     	ld a,(Tipo)
 271+ 8EC6 CD 81 8E     	call Definicion_segun_tipo
 272+ 8EC9
 273+ 8EC9 E5           	push hl
 274+ 8ECA DD E1        	pop ix
 275+ 8ECC
 276+ 8ECC DD 6E 0B     	ld l,(ix+11)
 277+ 8ECF DD 66 0C     	ld h,(ix+12)
 278+ 8ED2
 279+ 8ED2 22 A9 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 280+ 8ED5
 281+ 8ED5              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 282+ 8ED5              ;	Queremos pintar la entidad en su posición de inicio.
 283+ 8ED5
 284+ 8ED5 2A F1 89     	ld hl,(Stack_snapshot)
 285+ 8ED8 01 06 00     	ld bc,6
 286+ 8EDB A7           	and a
 287+ 8EDC ED 42        	sbc hl,bc
 288+ 8EDE 22 F1 89     	ld (Stack_snapshot),hl
 289+ 8EE1
 290+ 8EE1 CD BD 8B     	call Cargamos_registros_con_mov_masticado
 291+ 8EE4 CD BF 80     	call Guarda_foto_registros
 292+ 8EE7
 293+ 8EE7 2A AB 89     	ld hl,(Contador_de_mov_masticados)
 294+ 8EEA 2B           	dec hl
 295+ 8EEB
 296+ 8EEB C9           	ret
 297+ 8EEC
 298+ 8EEC
 299+ 8EEC
 300+ 8EEC
 301+ 8EEC              ; ---------------------------------------------------------------------
 302+ 8EEC              ;
 303+ 8EEC              ;	22/01/24
 304+ 8EEC
 305+ 8EEC 21 FA 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 306+ 8EEF CB 46        	bit 0,(hl)
 307+ 8EF1 20 0D        	jr nz,1F
 308+ 8EF3 CB 4E        	bit 1,(hl)
 309+ 8EF5 20 0C        	jr nz,2F
 310+ 8EF7 CB 56        	bit 2,(hl)
 311+ 8EF9 20 0B        	jr nz,3F
 312+ 8EFB CB 5E        	bit 3,(hl)
 313+ 8EFD 20 0A        	jr nz,4F
 314+ 8EFF C9           	ret
 315+ 8F00
 316+ 8F00 CB E6        1 set 4,(hl)
 317+ 8F02 C9           	ret
 318+ 8F03 CB EE        2 set 5,(hl)
 319+ 8F05 C9           	ret
 320+ 8F06 CB F6        3 set 6,(hl)
 321+ 8F08 C9           	ret
 322+ 8F09 CB FE        4 set 7,(hl)
 323+ 8F0B C9           	ret
 324+ 8F0C
 325+ 8F0C              ; ---------------------------------------------------------------------
 326+ 8F0C              ;
 327+ 8F0C              ;	23/01/24
 328+ 8F0C              ;
 329+ 8F0C              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 330+ 8F0C              ;
 331+ 8F0C              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 332+ 8F0C              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 333+ 8F0C              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 334+ 8F0C              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 335+ 8F0C
 336+ 8F0C              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 337+ 8F0C
 338+ 8F0C 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 339+ 8F0D 3D           	dec a
 340+ 8F0E 20 06        	jr nz,1F
 341+ 8F10
 342+ 8F10              ; --- Tipo_1
 343+ 8F10
 344+ 8F10 21 FA 89     	ld hl,Ctrl_4
 345+ 8F13 CB C6        	set 0,(hl)
 346+ 8F15 C9           	ret
 347+ 8F16
 348+ 8F16 3D           1 dec a
 349+ 8F17 20 06        	jr nz,2F
 350+ 8F19
 351+ 8F19              ; --- Tipo_2
 352+ 8F19
 353+ 8F19 21 FA 89     	ld hl,Ctrl_4
 354+ 8F1C CB CE        	set 1,(hl)
 355+ 8F1E C9           	ret
 356+ 8F1F
 357+ 8F1F 3D           2 dec a
 358+ 8F20 20 06        	jr nz,3F
 359+ 8F22
 360+ 8F22              ; --- Tipo_3
 361+ 8F22
 362+ 8F22 21 FA 89     	ld hl,Ctrl_4
 363+ 8F25 CB D6        	set 2,(hl)
 364+ 8F27 C9           	ret
 365+ 8F28
 366+ 8F28              ; --- Tipo_3
 367+ 8F28
 368+ 8F28 21 FA 89     3 ld hl,Ctrl_4
 369+ 8F2B CB D6        	set 2,(hl)
 370+ 8F2D C9           	ret
 371+ 8F2E
 372+ 8F2E              ; ---------------------------------------------------------------------
 373+ 8F2E              ;
 374+ 8F2E              ;	22/01/24
 375+ 8F2E
 376+ 8F2E 21 FA 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 377+ 8F31 CB 46        	bit 0,(hl)
 378+ 8F33 20 0E        	jr nz,1F
 379+ 8F35
 380+ 8F35 CB 4E        	bit 1,(hl)
 381+ 8F37 20 10        	jr nz,2F
 382+ 8F39
 383+ 8F39 CB 56        	bit 2,(hl)
 384+ 8F3B 20 12        	jr nz,3F
 385+ 8F3D
 386+ 8F3D CB 5E        	bit 3,(hl)
 387+ 8F3F 20 14        	jr nz,4F
 388+ 8F41 18 19        	jr 6F
 389+ 8F43
 390+ 8F43              ; Entidad_de_Tipo_1.
 391+ 8F43
 392+ 8F43 CB 66        1 bit 4,(hl)
 393+ 8F45 28 15        	jr z,6F
 394+ 8F47 18 10        	jr 5F
 395+ 8F49
 396+ 8F49              ; Entidad_de_Tipo_2.
 397+ 8F49
 398+ 8F49 CB 6E        2 bit 5,(hl)
 399+ 8F4B 28 0F        	jr z,6F
 400+ 8F4D 18 0A        	jr 5F
 401+ 8F4F
 402+ 8F4F              ; Entidad_de_Tipo_3.
 403+ 8F4F
 404+ 8F4F CB 76        3 bit 6,(hl)
 405+ 8F51 28 09        	jr z,6F
 406+ 8F53 18 04        	jr 5F
 407+ 8F55
 408+ 8F55              ; Entidad_de_Tipo_4.
 409+ 8F55
 410+ 8F55 CB 7E        4 bit 7,(hl)
 411+ 8F57 28 03        	jr z,6F
 412+ 8F59
 413+ 8F59              ; Esta entidad TIENE MOV_MASTICADOS.
 414+ 8F59
 415+ 8F59 AF           5 xor a
 416+ 8F5A 3C           	inc a
 417+ 8F5B C9           	ret
 418+ 8F5C
 419+ 8F5C              ; Esta entidad NO TIENE MOV_MASTICADOS.
 420+ 8F5C
 421+ 8F5C AF           6 xor a
 422+ 8F5D C9           	ret
 423+ 8F5E
 424+ 8F5E              ;	------------------------------------------------------------------------------------
 425+ 8F5E              ;
 426+ 8F5E              ;	12/01/24
 427+ 8F5E              ;
 428+ 8F5E              ;	INPUTS:	A contiene el (Tipo) de entidad.
 429+ 8F5E              ;
 430+ 8F5E              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 431+ 8F5E              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 432+ 8F5E
 433+ 8F5E CB 27        Calcula_salto_en_BC sla a
 434+ 8F60 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 435+ 8F62 4F           	ld c,a
 436+ 8F63 06 00        	ld b,0
 437+ 8F65 C9           	ret
 438+ 8F66
 439+ 8F66              ; ------------------------------------------------------------------
 440+ 8F66              ;
 441+ 8F66              ;	19/1/24
 442+ 8F66              ;
 443+ 8F66              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 444+ 8F66              ;	Actualiza (Datos_de_entidad) con esa dirección.
 445+ 8F66
 446+ 8F66 A7           Situa_en_datos_de_definicion and a
 447+ 8F67 ED 4A        	adc hl,bc
 448+ 8F69 CD A6 8C     	call Extrae_address
 449+ 8F6C 22 E9 89         ld (Datos_de_entidad),hl
 450+ 8F6F C9           	ret
 451+ 8F70
 452+ 8F70              ; ------------------------------------------------------------------
 453+ 8F70
 454+ 8F70              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 455+ 8F70              ; 	inc de
 456+ 8F70              ; 	inc de
 457+ 8F70              ; 	ex de,hl
 458+ 8F70              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 459+ 8F70              ; 	ret
 460+ 8F70
 461+ 8F70              ; ----------------------------------------------------------------------------------------------------------
 462+ 8F70              ;
 463+ 8F70              ;	31/1/24
 464+ 8F70              ;
 465+ 8F70              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 466+ 8F70              ;	_ de entidad.
 467+ 8F70              ;
 468+ 8F70              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 469+ 8F70              ;
 470+ 8F70              ;
 471+ 8F70              ;	MODIFICA: HL,DE y BC
 472+ 8F70
 473+ 8F70
 474+ 8F70              Definicion_de_entidad_a_bandeja_DRAW
 475+ 8F70
 476+ 8F70 11 8A 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 477+ 8F73 01 03 00     	ld bc,3
 478+ 8F76 ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 479+ 8F78              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 480+ 8F78 11 94 89     	ld de,Attr									; DE en (Attr).
 481+ 8F7B 01 05 00     	ld bc,5
 482+ 8F7E ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 483+ 8F80              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 484+ 8F80 11 9D 89     	ld de,Posicion_inicio
 485+ 8F83 01 03 00     	ld bc,3
 486+ 8F86 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 487+ 8F88              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 488+ 8F88 11 A9 89     	ld de,Puntero_de_almacen_de_mov_masticados
 489+ 8F8B 01 02 00     	ld bc,2
 490+ 8F8E ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 491+ 8F90
 492+ 8F90 11 B3 89     	ld de,Frames_explosion
 493+ 8F93 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 494+ 8F95 12           	ld (de),a 									; Vuelco (Frames_explosion).
 495+ 8F96
 496+ 8F96 C9           	ret
 497+ 8F97
 498+ 8F97              ; ----------------------------------------------------------------------------------------------------------
 499+ 8F97              ;
 500+ 8F97              ;	22/01/24
 501+ 8F97              ;
 502+ 8F97              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 503+ 8F97              ;
 504+ 8F97              ;	Las cajas contienen entidades iniciadas:
 505+ 8F97              ;
 506+ 8F97              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 507+ 8F97              ;
 508+ 8F97              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 509+ 8F97              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 510+ 8F97              ;
 511+ 8F97              ;	MODIFICA: HL,DE y BC
 512+ 8F97
 513+ 8F97 21 8A 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 514+ 8F9A ED 5B DD 89  	ld de,(Puntero_store_caja)
 515+ 8F9E 7E           	ld a,(hl)
 516+ 8F9F 12           	ld (de),a
 517+ 8FA0 13           	inc de 													; (Tipo).
 518+ 8FA1
 519+ 8FA1 21 91 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 520+ 8FA4 01 02 00     	ld bc,2
 521+ 8FA7 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 522+ 8FA9              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 523+ 8FA9 23           	inc hl
 524+ 8FAA 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 525+ 8FAB 12           	ld (de),a
 526+ 8FAC 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 527+ 8FAD
 528+ 8FAD 21 A0 89     	ld hl,Impacto
 529+ 8FB0 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 530+ 8FB1 12           	ld (de),a
 531+ 8FB2 13           	inc de 													; (Impacto), volcado a la caja.
 532+ 8FB3              ;															; DE situado ahora en (Variables_de_borrado).
 533+ 8FB3 23           	inc hl
 534+ 8FB4 01 06 00     	ld bc,6
 535+ 8FB7 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 536+ 8FB9              ; 															; DE situado ahora en (Puntero_de_impresión).
 537+ 8FB9 01 07 00     	ld bc,7
 538+ 8FBC ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 539+ 8FBE              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 540+ 8FBE              ;															; HL apunta ahora a (Columnas).
 541+ 8FBE 21 B2 89     	ld hl,Ctrl_2
 542+ 8FC1 7E           	ld a,(hl)
 543+ 8FC2 12           	ld (de),a 												; Volcamos (Ctrl_2).
 544+ 8FC3 13           	inc de
 545+ 8FC4
 546+ 8FC4 C9           	ret
 547+ 8FC5
 548+ 8FC5              ;---------------------------------------------------------------------------------------------------------------
 549+ 8FC5              ;
 550+ 8FC5              ;	5/1/24
 551+ 8FC5              ;
 552+ 8FC5              ;	INICIALIZA (Numero_parcial_de_entidades).
 553+ 8FC5              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 554+ 8FC5              ;
 555+ 8FC5              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 556+ 8FC5              ;
 557+ 8FC5              ;	(Numero_parcial_de_entidades)="7".
 558+ 8FC5              ;
 559+ 8FC5              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 560+ 8FC5              ;
 561+ 8FC5              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 562+ 8FC5              ;
 563+ 8FC5              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 564+ 8FC5              ;	MODIFICA: A y B.
 565+ 8FC5              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 566+ 8FC5
 567+ 8FC5              Inicializa_Numero_parcial_de_entidades
 568+ 8FC5
 569+ 8FC5              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 570+ 8FC5
 571+ 8FC5 3A E3 89     	ld a,(Numero_de_entidades)
 572+ 8FC8 A7           	and a
 573+ 8FC9
 574+ 8FC9              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 575+ 8FC9              ;	jr z,$
 576+ 8FC9              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 577+ 8FC9
 578+ 8FC9 20 03        	jr nz,3F
 579+ 8FCB
 580+ 8FCB              ; ---------- ---------- ----------
 581+ 8FCB
 582+ 8FCB              ;! RESET para pruebas. Omitir esta línea en modo normal.
 583+ 8FCB              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 584+ 8FCB
 585+ 8FCB CD EC 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 586+ 8FCE
 587+ 8FCE              ; ---------- ---------- ----------
 588+ 8FCE
 589+ 8FCE 3A E3 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 590+ 8FD1 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 591+ 8FD3 38 08        	jr c,1F
 592+ 8FD5
 593+ 8FD5              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 594+ 8FD5              ; Actualizamos variables.
 595+ 8FD5
 596+ 8FD5 3E 07        	ld a,7
 597+ 8FD7 32 E4 89     	ld (Numero_parcial_de_entidades),a
 598+ 8FDA 47           	ld b,a
 599+ 8FDB 18 04        	jr 2F
 600+ 8FDD
 601+ 8FDD              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 602+ 8FDD              ; (Numero_de_entidades)="0".
 603+ 8FDD
 604+ 8FDD 32 E4 89     1 ld (Numero_parcial_de_entidades),a
 605+ 8FE0 47           	ld b,a
 606+ 8FE1 C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1904  8FE2              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8FE2              ; ******************************************************************************************************************************************************************************************
   2+ 8FE2              ;
   3+ 8FE2              ; 26/06/23
   4+ 8FE2              ;
   5+ 8FE2              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8FE2
   7+ 8FE2              Draw
   8+ 8FE2
   9+ 8FE2 CD CF 92     	call Prepara_draw
  10+ 8FE5 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8FE6 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8FE7 28 05        	jr z,2F
  13+ 8FE9
  14+ 8FE9 3A 9F 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8FEC 18 0C        	jr 1F
  16+ 8FEE
  17+ 8FEE 2A 9D 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8FF1 22 8D 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8FF4 CD 83 91     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8FF7              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8FF7
  22+ 8FF7 CD 03 9B     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8FFA
  24+ 8FFA 3A AD 89     1 ld a,(Ctrl_0)
  25+ 8FFD CB 6F        	bit 5,a
  26+ 8FFF 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9001
  28+ 9001 CD 19 90     	call Comprueba_limite_horizontal
  29+ 9004 CD A9 90     	call Comprueba_limite_vertical
  30+ 9007
  31+ 9007              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9007              ; -----------------------
  33+ 9007              ; -----------------------
  34+ 9007              ; -----------------------
  35+ 9007
  36+ 9007 CD FF 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 900A CD 36 92     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 900D CD 95 92     	call Define_rutina_de_impresion
  39+ 9010
  40+ 9010 3A AD 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 9013 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 9015 32 AD 89     	ld (Ctrl_0),a
  43+ 9018
  44+ 9018 C9           	ret
  45+ 9019
  46+ 9019              ; *******************************************************************************************************************************************************************************************
  47+ 9019              ;	21/01/23
  48+ 9019              ;
  49+ 9019              ; 	Comprueba_limite_horizontal.
  50+ 9019              ;
  51+ 9019              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 9019              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 9019              ;
  54+ 9019              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 9019              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 9019              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 9019              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 9019
  59+ 9019
  60+ 9019
  61+ 9019 3A AD 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 901C CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 901E 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 9020 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 9022 32 AD 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 9025 18 09            jr 6F
  67+ 9027 CB 5F        1 bit 3,a
  68+ 9029 28 0A            jr z,2F
  69+ 902B E6 F7            and $f7
  70+ 902D 32 AD 89         ld (Ctrl_0),a
  71+ 9030 CD 83 91     6 call Inicializacion
  72+ 9033 18 5B            jr 5F
  73+ 9035 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 9036
  75+ 9036              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 9036              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 9036
  78+ 9036 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 9037 2A AF 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 903A CD 98 A0     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 903D 67           	ld h,a
  82+ 903E EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 903F CD 98 A0     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 9042 67           	ld h,a
  85+ 9043 A7           	and a
  86+ 9044 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 9046 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 9047 3A 9F 89     	ld a,(Cuad_objeto)
  89+ 904A FE 02        	cp 2
  90+ 904C 38 1E        	jr c,3F
  91+ 904E 28 1C        	jr z,3F
  92+ 9050 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 9051 28 23            jr z,7F
  94+ 9053 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 9055 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 9057 E1           	pop hl
  97+ 9058
  98+ 9058              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 9058              ; _para indicar con E="2" en caso necesario.
 100+ 9058
 101+ 9058 E5               push hl
 102+ 9059 C5               push bc
 103+ 905A CD 98 A0     	call calcula_tercio
 104+ 905D FE 01        	cp 1
 105+ 905F 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 9061 CD 91 90         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 9064 28 26            jr z,9F
 108+ 9066 38 24            jr c,9F
 109+ 9068 1E 00        11 ld e,0
 110+ 906A 18 22            jr 8F
 111+ 906C 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 906D 28 07        	jr z, 7F
 113+ 906F 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 9071 1E 00         	ld e,0
 115+ 9073 E1           	pop hl
 116+ 9074 18 04        	jr 4F
 117+ 9076 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 9078 18 15            jr 10F
 119+ 907A
 120+ 907A              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 907A              ; _para indicar con E="2" en caso necesario.
 122+ 907A
 123+ 907A E5           4 push hl
 124+ 907B C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 907C CD 98 A0     	call calcula_tercio
 126+ 907F FE 01        	cp 1
 127+ 9081 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9083 CD 91 90         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9086 28 04            jr z,9F
 130+ 9088 30 02            jr nc,9F
 131+ 908A 18 02        	jr 8F
 132+ 908C 1E 02        9 ld e,2
 133+ 908E C1           8 pop bc
 134+ 908F E1           10 pop hl
 135+ 9090 C9           5 ret
 136+ 9091
 137+ 9091              ; --------------------
 138+ 9091              ;
 139+ 9091              ; 25/08/22
 140+ 9091
 141+ 9091 CD 98 A0     Comprueba_centro call calcula_tercio
 142+ 9094 67               ld h,a
 143+ 9095 08           	ex af,af
 144+ 9096 FE 02        	cp 2
 145+ 9098 38 07        	jr c,1F
 146+ 909A 28 05        	jr z,1F
 147+ 909C 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 909F 18 03        	jr 2F
 149+ 90A1 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 90A4 08           2 ex af,af
 151+ 90A5 A7               and a
 152+ 90A6 ED 42            sbc hl,bc
 153+ 90A8 C9               ret
 154+ 90A9
 155+ 90A9              ; *********************************************************************************************************************************************************************************************
 156+ 90A9              ;
 157+ 90A9              ;   16/8/22
 158+ 90A9              ;
 159+ 90A9              ;	Comprueba_limite_vertical
 160+ 90A9              ;
 161+ 90A9              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 90A9              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 90A9              ;
 164+ 90A9
 165+ 90A9 2A 8D 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 90AC 7D           	ld a,l
 167+ 90AD E6 1F        	and $1F
 168+ 90AF 57           	ld d,a
 169+ 90B0 3A B1 89     	ld a,(Limite_vertical)
 170+ 90B3 BA           	cp d 											; Límite - Posición.
 171+ 90B4 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 90B5 3A 9F 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 90B8 CB 47        	bit 0,a
 174+ 90BA 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 90BC
 176+ 90BC              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 90BC
 178+ 90BC 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 90BD 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 90BF
 181+ 90BF              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 90BF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 90BF
 184+ 90BF 3A 91 89         ld a,(Coordenada_X)
 185+ 90C2 16 0F            ld d,Centro_izquierda
 186+ 90C4 A7               and a
 187+ 90C5 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 90C6 28 1E            jr z,3F
 189+ 90C8 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 90CA              ;                                                    ; _salimos sin modificar nada.
 191+ 90CA 18 0E            jr 2F
 192+ 90CC 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 90CD 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 90CF
 195+ 90CF              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 90CF              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 90CF
 198+ 90CF 3A 91 89         ld a,(Coordenada_X)
 199+ 90D2 16 10            ld d,Centro_derecha
 200+ 90D4 A7               and a
 201+ 90D5 92               sub d
 202+ 90D6 28 0E            jr z,3F
 203+ 90D8 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 90DA              ;                                                    ; _salimos sin modificar nada.
 205+ 90DA CB 43        2 bit 0,e
 206+ 90DC 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 90DE C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 90DF CD 73 91         call Modificaccionne
 209+ 90E2 C1           	pop bc
 210+ 90E3 CD 83 91         call Inicializacion
 211+ 90E6 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 90E7
 213+ 90E7              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 90E7
 215+ 90E7 C5           4 push bc
 216+ 90E8 01 8C 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 90EB 0A           	ld a,(bc)
 218+ 90EC 3D           	dec a
 219+ 90ED 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 90EE 7D           	ld a,l
 221+ 90EF 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 90F0 CB 47        	bit 0,a
 223+ 90F2 28 03        	jr z,5F
 224+ 90F4 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 90F5 18 2E        	jr 7F
 226+ 90F7
 227+ 90F7              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 90F7
 229+ 90F7 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 90F8 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 90F9 3A AD 89     	ld a,(Ctrl_0)
 232+ 90FC CB 4F        	bit 1,a
 233+ 90FE 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9100 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9101
 236+ 9101              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9101
 238+ 9101 1C               inc e
 239+ 9102 1D               dec e
 240+ 9103 20 07            jr nz,12F
 241+ 9105 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9106 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9107 22 8D 89     	ld (Posicion_actual),hl
 244+ 910A 18 44        13 jr 9F
 245+ 910C CB 43        12 bit 0,e
 246+ 910E 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9110              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9110 C1           	pop bc
 249+ 9111 18 D3        	jr 3B
 250+ 9113 80           14 add b
 251+ 9114 6F               ld l,a
 252+ 9115 22 8D 89     	ld (Posicion_actual),hl
 253+ 9118 CD 73 91         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 911B 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 911D E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 911F 32 AD 89         ld (Ctrl_0),a
 257+ 9122 F1           	pop af
 258+ 9123 18 2B        	jr 9F
 259+ 9125
 260+ 9125              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 9125
 262+ 9125 F5           7 push af
 263+ 9126 3A AD 89     	ld a,(Ctrl_0)
 264+ 9129 CB 47        	bit 0,a
 265+ 912B 20 1D        	jr nz,8F
 266+ 912D F1           	pop af
 267+ 912E
 268+ 912E              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 912E
 270+ 912E 1C           	inc e
 271+ 912F 1D               dec e
 272+ 9130 20 07            jr nz,10F
 273+ 9132 90           	sub b
 274+ 9133 6F               ld l,a
 275+ 9134 22 8D 89     	ld (Posicion_actual),hl
 276+ 9137 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9139              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9139 CB 43        10 bit 0,e
 279+ 913B 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 913D              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 913D C1           	pop bc
 282+ 913E 18 A6        	jr 3B
 283+ 9140 90           16 sub b
 284+ 9141 6F               ld l,a
 285+ 9142 22 8D 89     	ld (Posicion_actual),hl
 286+ 9145 CD 73 91         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9148 18 06            jr 9F
 288+ 914A E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 914C 32 AD 89         ld (Ctrl_0),a
 290+ 914F F1           	pop af
 291+ 9150 C1           9 pop bc
 292+ 9151 1E 00        	ld e,0
 293+ 9153 CD 83 91         call Inicializacion
 294+ 9156 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9157 08           	ex af,af
 296+ 9158 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9159 18 8B            jr 3B
 298+ 915B
 299+ 915B              ; --------------------
 300+ 915B
 301+ 915B 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 915D CD EA 92     1 call PreviousScan
 303+ 9160 10 FB            djnz 1B
 304+ 9162 22 8D 89     	ld (Posicion_actual),hl
 305+ 9165 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 9166 C9           	ret
 307+ 9167
 308+ 9167              ; --------------------
 309+ 9167
 310+ 9167 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9169 CD DB 92     1 call NextScan
 312+ 916C 10 FB            djnz 1B
 313+ 916E 22 8D 89     	ld (Posicion_actual),hl
 314+ 9171 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 9172 C9           	ret
 316+ 9173
 317+ 9173              ; --------------------
 318+ 9173              ;
 319+ 9173              ;	22/01/23
 320+ 9173              ;
 321+ 9173              ;	E="1". Hemos cambiado de cuadrante.
 322+ 9173              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 9173              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 9173
 325+ 9173
 326+ 9173              Modificaccionne
 327+ 9173
 328+ 9173 3A 9F 89     	ld a,(Cuad_objeto)
 329+ 9176 FE 02        	cp 2
 330+ 9178 CC 5B 91         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 917B DC 5B 91         call c,Modifica_Pos_actual
 332+ 917E C8           	ret z
 333+ 917F CD 67 91         call Modifica_Pos_actual2
 334+ 9182 C9               ret
 335+ 9183
 336+ 9183              ; *************************************************************************************************************************************************************************************************
 337+ 9183              ;
 338+ 9183              ;	13/8/22
 339+ 9183              ;
 340+ 9183              ;	Inicializacion
 341+ 9183              ;
 342+ 9183              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9183              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9183              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9183              ;
 346+ 9183              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9183              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9183              ;	_ desaparece/aparece.
 349+ 9183
 350+ 9183              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9183              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9183              ;
 353+ 9183              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9183              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9183              ; 		   [E] ="0"
 356+ 9183
 357+ 9183              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9183
 359+ 9183 CD 98 A0     Inicializacion call calcula_tercio
 360+ 9186 28 36        	jr z,primit
 361+ 9188 E6 02        	and 2
 362+ 918A 20 07        	jr nz,segmit
 363+ 918C 7D           	ld a,l
 364+ 918D FE 7F        	cp $7f
 365+ 918F 38 2D        	jr c,primit
 366+ 9191 28 2B        	jr z,primit
 367+ 9193 CD F9 91     segmit call column
 368+ 9196 38 13        	jr c,tercuad
 369+ 9198 3E 04        cuarcuad ld a,4
 370+ 919A 32 9F 89     	ld (Cuad_objeto),a
 371+ 919D 21 20 48     	ld hl,$4820
 372+ 91A0 22 AF 89     	ld (Limite_horizontal),hl
 373+ 91A3 21 B1 89     	ld hl,Limite_vertical
 374+ 91A6 36 0D        	ld (hl),$0d
 375+ 91A8 08           	ex af,af
 376+ 91A9 18 3C        	jr 1F
 377+ 91AB              tercuad
 378+ 91AB 3E 03        	ld a,3
 379+ 91AD 32 9F 89     	ld (Cuad_objeto),a
 380+ 91B0 21 20 48     	ld hl,$4820
 381+ 91B3 22 AF 89     	ld (Limite_horizontal),hl
 382+ 91B6 21 B1 89     	ld hl,Limite_vertical
 383+ 91B9 36 12        	ld (hl),$12
 384+ 91BB 08           	ex af,af
 385+ 91BC 18 29        	jr 1F
 386+ 91BE CD F9 91     primit call column
 387+ 91C1 38 13        	jr c, primcuad
 388+ 91C3              segcuad
 389+ 91C3 3E 02        	ld a,2
 390+ 91C5 32 9F 89     	ld (Cuad_objeto),a
 391+ 91C8 21 C0 4F     	ld hl,$4fc0
 392+ 91CB 22 AF 89     	ld (Limite_horizontal),hl
 393+ 91CE 21 B1 89     	ld hl,Limite_vertical
 394+ 91D1 36 0D        	ld (hl),$0d
 395+ 91D3 08           	ex af,af
 396+ 91D4 18 11        	jr 1F
 397+ 91D6              primcuad
 398+ 91D6 3E 01        	ld a,1
 399+ 91D8 32 9F 89     	ld (Cuad_objeto),a
 400+ 91DB 21 C0 4F     	ld hl,$4fc0
 401+ 91DE 22 AF 89     	ld (Limite_horizontal),hl
 402+ 91E1 21 B1 89     	ld hl,Limite_vertical
 403+ 91E4 36 12        	ld (hl),$12
 404+ 91E6 08           	ex af,af
 405+ 91E7
 406+ 91E7 C5           1 push bc
 407+ 91E8 E5           	push hl
 408+ 91E9 D5           	push de
 409+ 91EA
 410+ 91EA 2A 8D 89     	ld hl,(Posicion_actual)
 411+ 91ED CD B6 A0     	call Genera_coordenadas
 412+ 91F0
 413+ 91F0 D1           	pop de
 414+ 91F1 E1           	pop hl
 415+ 91F2 C1           	pop bc
 416+ 91F3
 417+ 91F3 21 AD 89     	ld hl,Ctrl_0
 418+ 91F6 CB EE        	set 5,(hl)
 419+ 91F8 C9           	ret
 420+ 91F9
 421+ 91F9              ; ------------------------------------------------------------------------------------------------------------------
 422+ 91F9
 423+ 91F9              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 91F9              ;
 425+ 91F9              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 91F9
 427+ 91F9 7D           column ld a,l
 428+ 91FA E6 1F        	and $1f
 429+ 91FC FE 10         	cp $10
 430+ 91FE C9            	ret
 431+ 91FF
 432+ 91FF              ; --------------------------------------------------------------------------------------------------------------------
 433+ 91FF              ;
 434+ 91FF              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 91FF              ;
 436+ 91FF              ; 14/12/22
 437+ 91FF              ;
 438+ 91FF              ;	Modifica: A y BC.
 439+ 91FF
 440+ 91FF 3A 9F 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9202 E6 01        	and 1
 442+ 9204 28 17        	jr z,1F
 443+ 9206
 444+ 9206              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9206
 446+ 9206 3A 91 89     	ld a,(Coordenada_X)
 447+ 9209 47           	ld b,a
 448+ 920A 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 920B 79           	ld a,c
 450+ 920C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 920D 38 08        	jr c,2F
 452+ 920F 47           	ld b,a
 453+ 9210 79           	ld a,c
 454+ 9211 90           	sub b
 455+ 9212 32 AE 89     	ld (Columnas),a
 456+ 9215 18 1B        	jr 4F
 457+ 9217 79           2 ld a,c
 458+ 9218 32 AE 89     	ld (Columnas),a
 459+ 921B 18 15        	jr 4F
 460+ 921D
 461+ 921D              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 921D
 463+ 921D 3A 91 89     1 ld a,(Coordenada_X)
 464+ 9220 81           	add c
 465+ 9221 3D           	dec a
 466+ 9222 D6 1F        	sub $1f
 467+ 9224 38 08        	jr c,3F
 468+ 9226 47           	ld b,a
 469+ 9227 79           	ld a,c
 470+ 9228 90           	sub b
 471+ 9229 32 AE 89     	ld (Columnas),a
 472+ 922C 18 04        	jr 4F
 473+ 922E 79           3 ld a,c
 474+ 922F 32 AE 89     	ld (Columnas),a
 475+ 9232 D9           4 exx
 476+ 9233 4F           	ld c,a
 477+ 9234 D9           	exx
 478+ 9235 C9            ret
 479+ 9236
 480+ 9236              ; --------------------------------------------------------------------------------------------------------------------
 481+ 9236              ;
 482+ 9236              ;   19/7/23
 483+ 9236              ;
 484+ 9236              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 9236              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 9236              ;
 487+ 9236              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 9236              ;			HL e IY Contienen (Puntero_objeto).
 489+ 9236              ;
 490+ 9236              ;	DESTRUYE: HL,B Y A.
 491+ 9236
 492+ 9236 3A 9F 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9239 FE 02        	cp 2
 494+ 923B 38 18        	jr c,1F
 495+ 923D 28 16        	jr z,1F
 496+ 923F E6 01        	and 1
 497+ 9241 28 0D        	jr z,3F
 498+ 9243
 499+ 9243              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 9243
 501+ 9243 CD 89 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 9246
 503+ 9246 7D           9 ld a,l
 504+ 9247 E6 1F        	and $1f
 505+ 9249 28 2A        	jr z,7F
 506+ 924B 2B           	dec hl
 507+ 924C 10 F8        	djnz 9B
 508+ 924E 18 25        	jr 7F
 509+ 9250
 510+ 9250              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9250
 512+ 9250 2A 8D 89     3 ld hl,(Posicion_actual)
 513+ 9253 18 20        	jr 7F
 514+ 9255
 515+ 9255 28 14        1 jr z,2F
 516+ 9257
 517+ 9257              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9257
 519+ 9257 CD 89 92     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 925A
 521+ 925A 7D           4 ld a,l
 522+ 925B E6 1F        	and $1f
 523+ 925D 28 03        	jr z,6F
 524+ 925F 2B           	dec hl
 525+ 9260 10 F8        	djnz 4B
 526+ 9262 06 0F        6 ld b,15
 527+ 9264 CD EA 92     5 call PreviousScan
 528+ 9267 10 FB        	djnz 5B
 529+ 9269 18 0A        	jr 7F
 530+ 926B
 531+ 926B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 926B
 533+ 926B CD 89 92     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 926E 06 0F        	ld b,15
 535+ 9270 CD EA 92     8 call PreviousScan
 536+ 9273 10 FB        	djnz 8B
 537+ 9275
 538+ 9275 E5           7 push hl
 539+ 9276 DD E1        	pop ix
 540+ 9278
 541+ 9278 2A 8F 89     	ld hl,(Puntero_objeto)
 542+ 927B E5           	push hl
 543+ 927C FD E1        	pop iy
 544+ 927E
 545+ 927E              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 927E
 547+ 927E 3A AD 89     	ld a,(Ctrl_0)
 548+ 9281 CB 77        	bit 6,a
 549+ 9283 C8           	ret z
 550+ 9284
 551+ 9284              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9284              ; _ entidad / Amadeus´.
 553+ 9284
 554+ 9284 DD 22 13 87  	ld (p.imp.amadeus),ix
 555+ 9288
 556+ 9288 C9           	ret
 557+ 9289
 558+ 9289              ; --------------------------------------------------------------------------------------------------------------------
 559+ 9289              ;
 560+ 9289              ;	2/1/23
 561+ 9289              ;
 562+ 9289              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 9289              ;
 564+ 9289              ;	Tras esta rutina tenemos:
 565+ 9289              ;
 566+ 9289              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 9289              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 9289              ;
 569+ 9289              ;	DESTRUYE!!!!! HL,B y A.
 570+ 9289
 571+ 9289 2A 8D 89     Operandos ld hl,(Posicion_actual)
 572+ 928C 3A AE 89     	ld a,(Columnas)
 573+ 928F 3D           	dec a
 574+ 9290 20 01        	jr nz,1F
 575+ 9292 3C           	inc a
 576+ 9293 47           1 ld b,a
 577+ 9294 C9           	ret
 578+ 9295
 579+ 9295              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9295              ;
 581+ 9295              ;	3/1/23
 582+ 9295              ;
 583+ 9295              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9295              ;
 585+ 9295              ;	Destruye: A,B,HL y DE.
 586+ 9295
 587+ 9295              Define_rutina_de_impresion
 588+ 9295
 589+ 9295 3A 8C 89     	ld a,(Columns)
 590+ 9298 47           	ld b,a
 591+ 9299 3A AE 89     	ld a,(Columnas)
 592+ 929C B8           	cp b
 593+ 929D 20 0D        	jr nz,2f
 594+ 929F
 595+ 929F              ;	La entidad se imprime entera.
 596+ 929F
 597+ 929F 21 28 94     	ld hl, Indice_entidades_completas
 598+ 92A2 E6 01        	and 1
 599+ 92A4 28 02        	jr z,1F
 600+ 92A6
 601+ 92A6 23           	inc hl
 602+ 92A7 23           	inc hl
 603+ 92A8
 604+ 92A8 CD A6 8C     1 call Extrae_address
 605+ 92AB C9           	ret		;	ret
 606+ 92AC
 607+ 92AC              ;	La entidad no se imprime entera en pantalla.
 608+ 92AC
 609+ 92AC 3A 9F 89     2 ld a,(Cuad_objeto)
 610+ 92AF E6 01        	and 1
 611+ 92B1 28 17        	jr z,3F
 612+ 92B3
 613+ 92B3              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 92B3
 615+ 92B3 21 2C 94     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 92B6 3A 8C 89     4 ld a,(Columns)
 617+ 92B9 E6 01        	and 1
 618+ 92BB 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 92BD
 620+ 92BD 23           	inc hl
 621+ 92BE 23           	inc hl
 622+ 92BF
 623+ 92BF 3A AE 89     	ld a,(Columnas)
 624+ 92C2 E6 01        	and 1
 625+ 92C4 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 92C6
 627+ 92C6 23           	inc hl
 628+ 92C7 23           	inc hl
 629+ 92C8
 630+ 92C8 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 92CA
 632+ 92CA 21 32 94     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 92CD 18 E7        	jr 4B
 634+ 92CF
 635+ 92CF              ; --------------------------------------------------------------------------------------------------------------------
 636+ 92CF              ;
 637+ 92CF              ;	Prepara_draw
 638+ 92CF              ;
 639+ 92CF              ;	Es una rutina de carga.
 640+ 92CF              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 92CF              ;
 642+ 92CF              ;	FUNCIONAMIENTO:
 643+ 92CF              ;
 644+ 92CF              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 92CF              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 92CF              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 92CF              ;
 648+ 92CF              ;	DESTRUYE:
 649+ 92CF              ;
 650+ 92CF              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 92CF
 652+ 92CF 21 8B 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 92D2 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 92D3 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 92D4 4E           	ld c,(hl)
 656+ 92D5 2A 8D 89     	ld hl,(Posicion_actual)
 657+ 92D8 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 92DA C9           	ret
 659+ 92DB
 660+ 92DB              ;----------------------------------------------------------------------------------------------------------------
 661+ 92DB              ;
 662+ 92DB              ;	5/08/22
 663+ 92DB              ;
 664+ 92DB              ;   NextScan.
 665+ 92DB              ;
 666+ 92DB              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 92DB              ;
 668+ 92DB              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 92DB              ;
 670+ 92DB              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 92DB              ;
 672+ 92DB              ;       DESTRUIDOS: AF y HL !!!
 673+ 92DB              ;
 674+ 92DB              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 92DB              ;
 676+ 92DB
 677+ 92DB 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 92DC 7C               ld a,h
 679+ 92DD E6 07            and 7
 680+ 92DF C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 92E0
 682+ 92E0 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 92E1 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 92E3 6F               ld l,a
 685+ 92E4 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 92E5
 687+ 92E5 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 92E6 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 92E8 67               ld h,a
 690+ 92E9 C9               ret
 691+ 92EA
 692+ 92EA              ;----------------------------------------------------------------------------------------------------------------
 693+ 92EA              ;
 694+ 92EA              ;	5/08/22
 695+ 92EA              ;
 696+ 92EA              ;   PreviousScan.
 697+ 92EA              ;
 698+ 92EA              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 92EA              ;
 700+ 92EA              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 92EA              ;
 702+ 92EA              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 92EA              ;
 704+ 92EA              ;       DESTRUIDOS: AF y HL !!!
 705+ 92EA              ;
 706+ 92EA              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 92EA              ;
 708+ 92EA
 709+ 92EA 7C           PreviousScan ld a,h
 710+ 92EB 25               dec h               ; Dec H.
 711+ 92EC E6 07            and 7
 712+ 92EE C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 92EF
 714+ 92EF 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 92F0 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 92F2 6F               ld l,a
 717+ 92F3 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 92F4
 719+ 92F4 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 92F5 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 92F7 67               ld h,a
 722+ 92F8 C9               ret
 723+ 92F9
 724+ 92F9              ; -----------------------------------------------------------------------------------
 725+ 92F9              ;
 726+ 92F9              ;	31/7/23
 727+ 92F9              ;
 728+ 92F9              ;	Rutina principal de pintado de entidades.
 729+ 92F9              ;	Extrae la foto del frame, (entidades).
 730+ 92F9
 731+ 92F9              Extrae_Album_de_fotos
 732+ 92F9
 733+ 92F9 21 01 80     	ld hl,Album_de_fotos+1
 734+ 92FC 7E           	ld a,(hl)
 735+ 92FD A7           	and a
 736+ 92FE C8           	ret z 																	; Salimos si el álbum está vacío.
 737+ 92FF
 738+ 92FF              ;	No hay datos, (entidades para pintar en este frame).
 739+ 92FF
 740+ 92FF 3A E6 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9302 A7           	and a
 742+ 9303 C8           	ret z
 743+ 9304
 744+ 9304              ; -----------------------------------
 745+ 9304
 746+ 9304 ED 73 EB 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9308 31 00 80     	ld sp,Album_de_fotos
 748+ 930B
 749+ 930B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 930D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 930E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 930F
 753+ 930F ED 73 ED 89  	ld (Stack_2),sp
 754+ 9313 ED 7B EB 89  	ld sp,(Stack)
 755+ 9317
 756+ 9317              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9317
 758+ 9317 3E CD        	ld a,$cd
 759+ 9319 32 21 93     	ld (Imprime),a
 760+ 931C EB           	ex de,hl
 761+ 931D 22 22 93     	ld (Imprime+1),hl
 762+ 9320 EB           	ex de,hl
 763+ 9321
 764+ 9321              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 9321
 766+ 9321 00 00 00     Imprime db 0,0,0
 767+ 9324
 768+ 9324 ED 73 EB 89  	ld (Stack),sp
 769+ 9328
 770+ 9328 3A E6 89     	ld a,(Numero_de_malotes)
 771+ 932B 3D           	dec a
 772+ 932C 28 09        	jr z,1F
 773+ 932E 32 E6 89      	ld (Numero_de_malotes),a
 774+ 9331
 775+ 9331 ED 7B ED 89  	ld sp,(Stack_2)
 776+ 9335 18 D4        	jr 2B
 777+ 9337
 778+ 9337 AF           1 xor a
 779+ 9338 32 ED 89     	ld (Stack_2),a
 780+ 933B
 781+ 933B C9           	ret
 782+ 933C
 783+ 933C              ; -----------------------------------------------------------------------------------
 784+ 933C              ;
 785+ 933C              ;	28/2/23
 786+ 933C              ;
 787+ 933C              ;	Pinta los disparos generados.
 788+ 933C
 789+ 933C              Extrae_foto_disparos
 790+ 933C
 791+ 933C 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 933F 7E               ld a,(hl)
 793+ 9340 A7               and a
 794+ 9341 C8               ret z
 795+ 9342
 796+ 9342 3A FB 89     	ld a,(Numero_de_disparotes)
 797+ 9345 A7           	and a
 798+ 9346 C8           	ret z
 799+ 9347 ED 73 EB 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 934B 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 934E
 802+ 934E FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9350 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 9351 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 9352
 806+ 9352 ED 73 ED 89  	ld (Stack_2),sp
 807+ 9356 ED 7B EB 89  	ld sp,(Stack)
 808+ 935A
 809+ 935A              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 935A
 811+ 935A 3E CD        	ld a,$cd
 812+ 935C 32 64 93     	ld (Imprime2),a
 813+ 935F EB           	ex de,hl
 814+ 9360 22 65 93     	ld (Imprime2+1),hl
 815+ 9363 EB           	ex de,hl
 816+ 9364
 817+ 9364              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 9364
 819+ 9364 00 00 00     Imprime2 db 0,0,0
 820+ 9367
 821+ 9367 3A FB 89     	ld a,(Numero_de_disparotes)
 822+ 936A 3D           	dec a
 823+ 936B 28 09        	jr z,1F
 824+ 936D 32 FB 89      	ld (Numero_de_disparotes),a
 825+ 9370
 826+ 9370 ED 7B ED 89  	ld sp,(Stack_2)
 827+ 9374 18 D8        	jr 2B
 828+ 9376
 829+ 9376 AF           1 xor a
 830+ 9377 32 ED 89     	ld (Stack_2),a
 831+ 937A C9           	ret
 832+ 937B
 833+ 937B              ; -----------------------------------------------------------------------------------
 834+ 937B              ;
 835+ 937B              ;	4/9/23
 836+ 937B              ;
 837+ 937B              ;	Rutina principal de pintado de Amadeus.
 838+ 937B              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 937B
 840+ 937B 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 937E 7E           	ld a,(hl)
 842+ 937F A7           	and a
 843+ 9380 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9381
 845+ 9381 3A E6 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9384 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9385 C8           	ret z
 848+ 9386
 849+ 9386              ; -----------------------------------
 850+ 9386
 851+ 9386 ED 73 EB 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 938A 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 938D
 854+ 938D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 938F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9390 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9391
 858+ 9391 ED 73 ED 89  	ld (Stack_2),sp
 859+ 9395 ED 7B EB 89  	ld sp,(Stack)
 860+ 9399
 861+ 9399              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 9399
 863+ 9399 3E CD        	ld a,$cd
 864+ 939B 32 A3 93     	ld (Imprime_Amadeus),a
 865+ 939E EB           	ex de,hl
 866+ 939F 22 A4 93     	ld (Imprime_Amadeus+1),hl
 867+ 93A2 EB           	ex de,hl
 868+ 93A3
 869+ 93A3              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 93A3
 871+ 93A3 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 93A6
 873+ 93A6 ED 73 EB 89  	ld (Stack),sp
 874+ 93AA
 875+ 93AA 3A E6 89     	ld a,(Numero_de_malotes)
 876+ 93AD 3D           	dec a
 877+ 93AE 28 09        	jr z,1F
 878+ 93B0 32 E6 89      	ld (Numero_de_malotes),a
 879+ 93B3
 880+ 93B3 ED 7B ED 89  	ld sp,(Stack_2)
 881+ 93B7 18 D4        	jr 2B
 882+ 93B9
 883+ 93B9 AF           1 xor a
 884+ 93BA 32 ED 89     	ld (Stack_2),a
 885+ 93BD
 886+ 93BD C9           	ret
 887+ 93BE
 888+ 93BE              ; -----------------------------------------------------------------------------------
 889+ 93BE              ;
 890+ 93BE              ;	01/03/24
 891+ 93BE              ;
 892+ 93BE              ;	Borra los sprites impresos en pantalla.
 893+ 93BE              ;
 894+ 93BE
 895+ 93BE              Borra_sprites
 896+ 93BE
 897+ 93BE 21 00 E8     	ld hl,Almacen_de_scanlines_masticados_a_borrar
 898+ 93C1 7E           	ld a,(hl)
 899+ 93C2 A7           	and a
 900+ 93C3 C8           	ret z 																	; Salimos si no hay scanlines en el álbum.
 901+ 93C4
 902+ 93C4              ;	No hay datos, (entidades para pintar en este frame).
 903+ 93C4
 904+ 93C4 3A E6 89     	ld a,(Numero_de_malotes)												; No se ha producido movimiento.
 905+ 93C7 A7           	and a																	; NO BORRAMOS !!!
 906+ 93C8 C8           	ret z
 907+ 93C9
 908+ 93C9              ; - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
 909+ 93C9
 910+ 93C9 D9           Retorno	exx
 911+ 93CA 7E           	ld a,(hl)
 912+ 93CB 2C           	inc l
 913+ 93CC D9           	exx
 914+ 93CD 3D           	dec a
 915+ 93CE
 916+ 93CE 28 03        	jr z,Borra_2x2
 917+ 93D0 C3 26 94     	jp Borra_3x2
 918+ 93D3
 919+ 93D3 ED 73 EB 89  Borra_2x2 ld (Stack),sp														; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 920+ 93D7 ED 7B C2 89  	ld sp,(Puntero_de_scanlines_masticados_a_borrar)
 921+ 93DB
 922+ 93DB E1           	pop hl
 923+ 93DC
 924+ 93DC 77           	ld (hl),a
 925+ 93DD 2C           	inc l
 926+ 93DE 77           	ld (hl),a
 927+ 93DF
 928+ 93DF E1           	pop hl
 929+ 93E0
 930+ 93E0 77           	ld (hl),a
 931+ 93E1 2C           	inc l
 932+ 93E2 77           	ld (hl),a
 933+ 93E3
 934+ 93E3 E1           	pop hl
 935+ 93E4
 936+ 93E4 77           	ld (hl),a
 937+ 93E5 2C           	inc l
 938+ 93E6 77           	ld (hl),a
 939+ 93E7
 940+ 93E7 E1           	pop hl
 941+ 93E8
 942+ 93E8 77           	ld (hl),a
 943+ 93E9 2C           	inc l
 944+ 93EA 77           	ld (hl),a
 945+ 93EB
 946+ 93EB E1           	pop hl
 947+ 93EC
 948+ 93EC 77           	ld (hl),a
 949+ 93ED 2C           	inc l
 950+ 93EE 77           	ld (hl),a
 951+ 93EF
 952+ 93EF E1           	pop hl
 953+ 93F0
 954+ 93F0 77           	ld (hl),a
 955+ 93F1 2C           	inc l
 956+ 93F2 77           	ld (hl),a
 957+ 93F3
 958+ 93F3 E1           	pop hl
 959+ 93F4
 960+ 93F4 77           	ld (hl),a
 961+ 93F5 2C           	inc l
 962+ 93F6 77           	ld (hl),a
 963+ 93F7
 964+ 93F7 E1           	pop hl
 965+ 93F8
 966+ 93F8 77           	ld (hl),a
 967+ 93F9 2C           	inc l
 968+ 93FA 77           	ld (hl),a
 969+ 93FB
 970+ 93FB E1           	pop hl
 971+ 93FC
 972+ 93FC 77           	ld (hl),a
 973+ 93FD 2C           	inc l
 974+ 93FE 77           	ld (hl),a
 975+ 93FF
 976+ 93FF E1           	pop hl
 977+ 9400
 978+ 9400 77           	ld (hl),a
 979+ 9401 2C           	inc l
 980+ 9402 77           	ld (hl),a
 981+ 9403
 982+ 9403 E1           	pop hl
 983+ 9404
 984+ 9404 77           	ld (hl),a
 985+ 9405 2C           	inc l
 986+ 9406 77           	ld (hl),a
 987+ 9407
 988+ 9407 E1           	pop hl
 989+ 9408
 990+ 9408 77           	ld (hl),a
 991+ 9409 2C           	inc l
 992+ 940A 77           	ld (hl),a
 993+ 940B
 994+ 940B E1           	pop hl
 995+ 940C
 996+ 940C 77           	ld (hl),a
 997+ 940D 2C           	inc l
 998+ 940E 77           	ld (hl),a
 999+ 940F
1000+ 940F E1           	pop hl
1001+ 9410
1002+ 9410 77           	ld (hl),a
1003+ 9411 2C           	inc l
1004+ 9412 77           	ld (hl),a
1005+ 9413
1006+ 9413 E1           	pop hl
1007+ 9414
1008+ 9414 77           	ld (hl),a
1009+ 9415 2C           	inc l
1010+ 9416 77           	ld (hl),a
1011+ 9417
1012+ 9417 E1           	pop hl
1013+ 9418
1014+ 9418 77           	ld (hl),a
1015+ 9419 2C           	inc l
1016+ 941A 77           	ld (hl),a
1017+ 941B
1018+ 941B ED 73 C2 89  	ld (Puntero_de_scanlines_masticados_a_borrar),sp
1019+ 941F
1020+ 941F ED 7B EB 89  	ld sp,(Stack)
1021+ 9423
1022+ 9423 10 A4        	djnz Retorno
1023+ 9425
1024+ 9425 C9           	ret
1025+ 9426
1026+ 9426 18 FE        Borra_3x2 jr $
# file closed: Draw_XOR.asm
1905  9428              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9428              ;   índices de Rutinas de impresión.
   2+ 9428
   3+ 9428 38 94        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 942A CC 94            defw Pinta_Amadeus_3x2
   5+ 942C
   6+ 942C 24 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 942E C4 95            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9430 78 95            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9432
  10+ 9432 4E 95        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9434 52 96            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9436 06 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9438
  14+ 9438
  15+ 9438              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9438              ;
  17+ 9438              ;   28/2/24
  18+ 9438              ;
  19+ 9438              ;   Inputs: HL contiene la dirección donde se encuentra el 1er scanline.
  20+ 9438              ;           B contendrá: el nº de scanlines que vamos a imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9438              ;           IY contiene los .db que forman el sprite, (Puntero_objeto).
  22+ 9438              ;
  23+ 9438              ;   Modifica: AF,HL,BC y DE.
  24+ 9438
  25+ 9438              Pinta_Amadeus_2x2 ; 1081 t/states
  26+ 9438
  27+ 9438 D9               exx
  28+ 9439 36 01            ld (hl),1
  29+ 943B 2C               inc l
  30+ 943C D9               exx
  31+ 943D
  32+ 943D FD E5            push iy
  33+ 943F D1               pop de
  34+ 9440
  35+ 9440 ED 73 EB 89      ld (Stack),sp
  36+ 9444 F9           	ld sp,hl
  37+ 9445 06 10            ld b,16
  38+ 9447
  39+ 9447 E1               pop hl
  40+ 9448 1A               ld a,(de)
  41+ 9449 77               ld (hl),a
  42+ 944A 1C           	inc e
  43+ 944B 2C               inc l
  44+ 944C 1A               ld a,(de)
  45+ 944D 77               ld (hl),a
  46+ 944E 1C               inc e
  47+ 944F
  48+ 944F E1               pop hl
  49+ 9450 1A               ld a,(de)
  50+ 9451 77               ld (hl),a
  51+ 9452 1C           	inc e
  52+ 9453 2C               inc l
  53+ 9454 1A               ld a,(de)
  54+ 9455 77               ld (hl),a
  55+ 9456 1C               inc e
  56+ 9457
  57+ 9457 E1               pop hl
  58+ 9458 1A               ld a,(de)
  59+ 9459 77               ld (hl),a
  60+ 945A 1C           	inc e
  61+ 945B 2C               inc l
  62+ 945C 1A               ld a,(de)
  63+ 945D 77               ld (hl),a
  64+ 945E 1C               inc e
  65+ 945F
  66+ 945F E1               pop hl
  67+ 9460 1A               ld a,(de)
  68+ 9461 77               ld (hl),a
  69+ 9462 1C           	inc e
  70+ 9463 2C               inc l
  71+ 9464 1A               ld a,(de)
  72+ 9465 77               ld (hl),a
  73+ 9466 1C               inc e
  74+ 9467
  75+ 9467 E1               pop hl
  76+ 9468 1A               ld a,(de)
  77+ 9469 77               ld (hl),a
  78+ 946A 1C           	inc e
  79+ 946B 2C               inc l
  80+ 946C 1A               ld a,(de)
  81+ 946D 77               ld (hl),a
  82+ 946E 1C               inc e
  83+ 946F
  84+ 946F E1               pop hl
  85+ 9470 1A               ld a,(de)
  86+ 9471 77               ld (hl),a
  87+ 9472 1C           	inc e
  88+ 9473 2C               inc l
  89+ 9474 1A               ld a,(de)
  90+ 9475 77               ld (hl),a
  91+ 9476 1C               inc e
  92+ 9477
  93+ 9477 E1               pop hl
  94+ 9478 1A               ld a,(de)
  95+ 9479 77               ld (hl),a
  96+ 947A 1C           	inc e
  97+ 947B 2C               inc l
  98+ 947C 1A               ld a,(de)
  99+ 947D 77               ld (hl),a
 100+ 947E 1C               inc e
 101+ 947F
 102+ 947F E1               pop hl
 103+ 9480 1A               ld a,(de)
 104+ 9481 77               ld (hl),a
 105+ 9482 1C           	inc e
 106+ 9483 2C               inc l
 107+ 9484 1A               ld a,(de)
 108+ 9485 77               ld (hl),a
 109+ 9486 1C               inc e
 110+ 9487
 111+ 9487 E1               pop hl
 112+ 9488 1A               ld a,(de)
 113+ 9489 77               ld (hl),a
 114+ 948A 1C           	inc e
 115+ 948B 2C               inc l
 116+ 948C 1A               ld a,(de)
 117+ 948D 77               ld (hl),a
 118+ 948E 1C               inc e
 119+ 948F
 120+ 948F E1               pop hl
 121+ 9490 1A               ld a,(de)
 122+ 9491 77               ld (hl),a
 123+ 9492 1C           	inc e
 124+ 9493 2C               inc l
 125+ 9494 1A               ld a,(de)
 126+ 9495 77               ld (hl),a
 127+ 9496 1C               inc e
 128+ 9497
 129+ 9497 E1               pop hl
 130+ 9498 1A               ld a,(de)
 131+ 9499 77               ld (hl),a
 132+ 949A 1C           	inc e
 133+ 949B 2C               inc l
 134+ 949C 1A               ld a,(de)
 135+ 949D 77               ld (hl),a
 136+ 949E 1C               inc e
 137+ 949F
 138+ 949F E1               pop hl
 139+ 94A0 1A               ld a,(de)
 140+ 94A1 77               ld (hl),a
 141+ 94A2 1C           	inc e
 142+ 94A3 2C               inc l
 143+ 94A4 1A               ld a,(de)
 144+ 94A5 77               ld (hl),a
 145+ 94A6 1C               inc e
 146+ 94A7
 147+ 94A7 E1               pop hl
 148+ 94A8 1A               ld a,(de)
 149+ 94A9 77               ld (hl),a
 150+ 94AA 1C           	inc e
 151+ 94AB 2C               inc l
 152+ 94AC 1A               ld a,(de)
 153+ 94AD 77               ld (hl),a
 154+ 94AE 1C               inc e
 155+ 94AF
 156+ 94AF E1               pop hl
 157+ 94B0 1A               ld a,(de)
 158+ 94B1 77               ld (hl),a
 159+ 94B2 1C           	inc e
 160+ 94B3 2C               inc l
 161+ 94B4 1A               ld a,(de)
 162+ 94B5 77               ld (hl),a
 163+ 94B6 1C               inc e
 164+ 94B7
 165+ 94B7 E1               pop hl
 166+ 94B8 1A               ld a,(de)
 167+ 94B9 77               ld (hl),a
 168+ 94BA 1C           	inc e
 169+ 94BB 2C               inc l
 170+ 94BC 1A               ld a,(de)
 171+ 94BD 77               ld (hl),a
 172+ 94BE 1C               inc e
 173+ 94BF
 174+ 94BF E1               pop hl
 175+ 94C0 1A               ld a,(de)
 176+ 94C1 77               ld (hl),a
 177+ 94C2 1C           	inc e
 178+ 94C3 2C               inc l
 179+ 94C4 1A               ld a,(de)
 180+ 94C5 77               ld (hl),a
 181+ 94C6 1C               inc e
 182+ 94C7
 183+ 94C7 ED 7B EB 89      ld sp,(Stack)
 184+ 94CB
 185+ 94CB C9           	ret
 186+ 94CC
 187+ 94CC              Pinta_Amadeus_3x2
 188+ 94CC
 189+ 94CC 18 FE            jr $
 190+ 94CE
 191+ 94CE ED 73 EB 89      ld (Stack),sp
 192+ 94D2 FD F9        	ld sp,iy
 193+ 94D4 06 08            ld b,8
 194+ 94D6 D1           1 pop de
 195+ 94D7 7B               ld a,e
 196+ 94D8 AE               xor (hl)
 197+ 94D9 77           	ld (hl),a
 198+ 94DA 23           	inc hl
 199+ 94DB 7A               ld a,d
 200+ 94DC AE               xor (hl)
 201+ 94DD 77           	ld (hl),a
 202+ 94DE 23           	inc hl
 203+ 94DF D1           	pop de
 204+ 94E0 7B               ld a,e
 205+ 94E1 AE               xor (hl)
 206+ 94E2 77           	ld (hl),a
 207+ 94E3 2B           	dec hl
 208+ 94E4 2B           	dec hl
 209+ 94E5 24           	inc h
 210+ 94E6 7C               ld a,h
 211+ 94E7 E6 07            and 7
 212+ 94E9 20 0A            jr nz,2F
 213+ 94EB 7D               ld a,l
 214+ 94EC C6 20            add a,$20
 215+ 94EE 6F               ld l,a
 216+ 94EF 38 04            jr c,2F
 217+ 94F1 7C               ld a,h
 218+ 94F2 D6 08            sub 8
 219+ 94F4 67               ld h,a
 220+ 94F5 7C           2 ld a,h
 221+ 94F6 FE 58            cp $58
 222+ 94F8 28 25            jr z,4F
 223+ 94FA 7A               ld a,d
 224+ 94FB AE               xor (hl)
 225+ 94FC 77               ld (hl),a
 226+ 94FD D1           	pop de
 227+ 94FE 23           	inc hl
 228+ 94FF 7B               ld a,e
 229+ 9500 AE               xor (hl)
 230+ 9501 77           	ld (hl),a
 231+ 9502 23           	inc hl
 232+ 9503 7A               ld a,d
 233+ 9504 AE               xor (hl)
 234+ 9505 77           	ld (hl),a
 235+ 9506 2B           	dec hl
 236+ 9507 2B           	dec hl
 237+ 9508 24           	inc h
 238+ 9509 7C               ld a,h
 239+ 950A E6 07            and 7
 240+ 950C 20 0A            jr nz,3F
 241+ 950E 7D               ld a,l
 242+ 950F C6 20            add a,$20
 243+ 9511 6F               ld l,a
 244+ 9512 38 04            jr c,3F
 245+ 9514 7C               ld a,h
 246+ 9515 D6 08            sub 8
 247+ 9517 67               ld h,a
 248+ 9518 7C           3 ld a,h
 249+ 9519 FE 58            cp $58
 250+ 951B 28 02            jr z,4F
 251+ 951D 10 B7            djnz 1B
 252+ 951F ED 7B EB 89  4 ld sp,(Stack)
 253+ 9523 C9           	ret
 254+ 9524
 255+ 9524              ; ---------------------------------------------------
 256+ 9524
 257+ 9524 ED 73 EB 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 258+ 9528 FD F9        	ld sp,iy
 259+ 952A
 260+ 952A              ; >>>
 261+ 952A
 262+ 952A 06 10            ld b,16
 263+ 952C D1           1 pop de
 264+ 952D 7A           	ld a,d
 265+ 952E AE           	xor (hl)
 266+ 952F 77           	ld (hl),a
 267+ 9530 24           	inc h
 268+ 9531 7C               ld a,h
 269+ 9532 E6 07            and 7
 270+ 9534 20 0C            jr nz,2F
 271+ 9536 7D               ld a,l
 272+ 9537 C6 20            add a,$20
 273+ 9539 6F               ld l,a
 274+ 953A 38 06            jr c,2F
 275+ 953C 7C               ld a,h
 276+ 953D D6 08            sub 8
 277+ 953F 67               ld h,a
 278+ 9540 18 00            jr 2F
 279+ 9542 7C           2 ld a,h
 280+ 9543 FE 58            cp $58
 281+ 9545 28 02            jr z,3F
 282+ 9547 10 E3            djnz 1B
 283+ 9549 ED 7B EB 89  3 ld sp,(Stack)
 284+ 954D C9           	ret
 285+ 954E
 286+ 954E ED 73 EB 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 287+ 9552 FD F9        	ld sp,iy
 288+ 9554
 289+ 9554              ; >>>
 290+ 9554
 291+ 9554 06 10            ld b,16
 292+ 9556 D1           1 pop de
 293+ 9557 7B           	ld a,e
 294+ 9558 AE           	xor (hl)
 295+ 9559 77           	ld (hl),a
 296+ 955A 24           	inc h
 297+ 955B 7C               ld a,h
 298+ 955C E6 07            and 7
 299+ 955E 20 0C            jr nz,2F
 300+ 9560 7D               ld a,l
 301+ 9561 C6 20            add a,$20
 302+ 9563 6F               ld l,a
 303+ 9564 38 06            jr c,2F
 304+ 9566 7C               ld a,h
 305+ 9567 D6 08            sub 8
 306+ 9569 67               ld h,a
 307+ 956A 18 00            jr 2F
 308+ 956C 7C           2 ld a,h
 309+ 956D FE 58            cp $58
 310+ 956F 28 02            jr z,3F
 311+ 9571 10 E3            djnz 1B
 312+ 9573 ED 7B EB 89  3 ld sp,(Stack)
 313+ 9577 C9           	ret
 314+ 9578
 315+ 9578              ; ---------------------------------------------------
 316+ 9578
 317+ 9578 ED 73 EB 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 318+ 957C FD F9        	ld sp,iy
 319+ 957E 06 08            ld b,8
 320+ 9580 D1           1 pop de
 321+ 9581 7A           	ld a,d
 322+ 9582 AE           	xor (hl)
 323+ 9583 77           	ld (hl),a
 324+ 9584 23           	inc hl
 325+ 9585 D1           	pop de
 326+ 9586 7B           	ld a,e
 327+ 9587 AE           	xor (hl)
 328+ 9588 77           	ld (hl),a
 329+ 9589 2B           	dec hl
 330+ 958A 24            	inc h
 331+ 958B 7C               ld a,h
 332+ 958C E6 07            and 7
 333+ 958E 20 0A            jr nz,2F
 334+ 9590 7D               ld a,l
 335+ 9591 C6 20            add a,$20
 336+ 9593 6F               ld l,a
 337+ 9594 38 04            jr c,2F
 338+ 9596 7C               ld a,h
 339+ 9597 D6 08            sub 8
 340+ 9599 67               ld h,a
 341+ 959A 7C           2 ld a,h
 342+ 959B FE 58            cp $58
 343+ 959D 28 20            jr z,4F
 344+ 959F D1               pop de
 345+ 95A0 7B           	ld a,e
 346+ 95A1 AE           	xor (hl)
 347+ 95A2 77           	ld (hl),a
 348+ 95A3 23           	inc hl
 349+ 95A4 7A           	ld a,d
 350+ 95A5 AE           	xor (hl)
 351+ 95A6 77           	ld (hl),a
 352+ 95A7 2B           	dec hl
 353+ 95A8 24           	inc h
 354+ 95A9 7C               ld a,h
 355+ 95AA E6 07            and 7
 356+ 95AC 20 0A            jr nz,3F
 357+ 95AE 7D               ld a,l
 358+ 95AF C6 20            add a,$20
 359+ 95B1 6F               ld l,a
 360+ 95B2 38 04            jr c,3F
 361+ 95B4 7C               ld a,h
 362+ 95B5 D6 08            sub 8
 363+ 95B7 67               ld h,a
 364+ 95B8 7C           3 ld a,h
 365+ 95B9 FE 58            cp $58
 366+ 95BB 28 02            jr z,4F
 367+ 95BD 10 C1            djnz 1B
 368+ 95BF ED 7B EB 89  4 ld sp,(Stack)
 369+ 95C3 C9           	ret
 370+ 95C4
 371+ 95C4 ED 73 EB 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 372+ 95C8 FD F9        	ld sp,iy
 373+ 95CA 06 08            ld b,8
 374+ 95CC D1           1 pop de
 375+ 95CD D1           	pop de
 376+ 95CE 7B           	ld a,e
 377+ 95CF AE           	xor (hl)
 378+ 95D0 77           	ld (hl),a
 379+ 95D1 24            	inc h
 380+ 95D2 7C               ld a,h
 381+ 95D3 E6 07            and 7
 382+ 95D5 20 0A            jr nz,2F
 383+ 95D7 7D               ld a,l
 384+ 95D8 C6 20            add a,$20
 385+ 95DA 6F               ld l,a
 386+ 95DB 38 04            jr c,2F
 387+ 95DD 7C               ld a,h
 388+ 95DE D6 08            sub 8
 389+ 95E0 67               ld h,a
 390+ 95E1 7C           2 ld a,h
 391+ 95E2 FE 58            cp $58
 392+ 95E4 28 1B            jr z,4F
 393+ 95E6 D1               pop de
 394+ 95E7 7A           	ld a,d
 395+ 95E8 AE           	xor (hl)
 396+ 95E9 77           	ld (hl),a
 397+ 95EA 24           	inc h
 398+ 95EB 7C               ld a,h
 399+ 95EC E6 07            and 7
 400+ 95EE 20 0A            jr nz,3F
 401+ 95F0 7D               ld a,l
 402+ 95F1 C6 20            add a,$20
 403+ 95F3 6F               ld l,a
 404+ 95F4 38 04            jr c,3F
 405+ 95F6 7C               ld a,h
 406+ 95F7 D6 08            sub 8
 407+ 95F9 67               ld h,a
 408+ 95FA 7C           3 ld a,h
 409+ 95FB FE 58            cp $58
 410+ 95FD 28 02            jr z,4F
 411+ 95FF 10 CB            djnz 1B
 412+ 9601 ED 7B EB 89  4 ld sp,(Stack)
 413+ 9605 C9           	ret
 414+ 9606
 415+ 9606 ED 73 EB 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 416+ 960A FD F9        	ld sp,iy
 417+ 960C 06 08            ld b,8
 418+ 960E D1           1 pop de
 419+ 960F 7B           	ld a,e
 420+ 9610 AE           	xor (hl)
 421+ 9611 77           	ld (hl),a
 422+ 9612 23           	inc hl
 423+ 9613 7A           	ld a,d
 424+ 9614 AE           	xor (hl)
 425+ 9615 77           	ld (hl),a
 426+ 9616 2B           	dec hl
 427+ 9617 24             	inc h
 428+ 9618 7C               ld a,h
 429+ 9619 E6 07            and 7
 430+ 961B 20 0A            jr nz,2F
 431+ 961D 7D               ld a,l
 432+ 961E C6 20            add a,$20
 433+ 9620 6F               ld l,a
 434+ 9621 38 04            jr c,2F
 435+ 9623 7C               ld a,h
 436+ 9624 D6 08            sub 8
 437+ 9626 67               ld h,a
 438+ 9627 7C           2 ld a,h
 439+ 9628 FE 58            cp $58
 440+ 962A 28 21            jr z,4F
 441+ 962C D1               pop de
 442+ 962D 7A           	ld a,d
 443+ 962E AE           	xor (hl)
 444+ 962F 77           	ld (hl),a
 445+ 9630 23           	inc hl
 446+ 9631 D1               pop de
 447+ 9632 7B           	ld a,e
 448+ 9633 AE           	xor (hl)
 449+ 9634 77           	ld (hl),a
 450+ 9635 2B           	dec hl
 451+ 9636 24           	inc h
 452+ 9637 7C               ld a,h
 453+ 9638 E6 07            and 7
 454+ 963A 20 0A            jr nz,3F
 455+ 963C 7D               ld a,l
 456+ 963D C6 20            add a,$20
 457+ 963F 6F               ld l,a
 458+ 9640 38 04            jr c,3F
 459+ 9642 7C               ld a,h
 460+ 9643 D6 08            sub 8
 461+ 9645 67               ld h,a
 462+ 9646 7C           3 ld a,h
 463+ 9647 FE 58            cp $58
 464+ 9649 28 02            jr z,4F
 465+ 964B 10 C1            djnz 1B
 466+ 964D ED 7B EB 89  4 ld sp,(Stack)
 467+ 9651 C9           	ret
 468+ 9652
 469+ 9652 ED 73 EB 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 470+ 9656 FD F9        	ld sp,iy
 471+ 9658 06 08            ld b,8
 472+ 965A D1           1 pop de
 473+ 965B 7B           	ld a,e
 474+ 965C AE           	xor (hl)
 475+ 965D 77           	ld (hl),a
 476+ 965E 24            	inc h
 477+ 965F 7C               ld a,h
 478+ 9660 E6 07            and 7
 479+ 9662 20 0A            jr nz,2F
 480+ 9664 7D               ld a,l
 481+ 9665 C6 20            add a,$20
 482+ 9667 6F               ld l,a
 483+ 9668 38 04            jr c,2F
 484+ 966A 7C               ld a,h
 485+ 966B D6 08            sub 8
 486+ 966D 67               ld h,a
 487+ 966E 7C           2 ld a,h
 488+ 966F FE 58            cp $58
 489+ 9671 28 1C            jr z,4F
 490+ 9673 D1               pop de
 491+ 9674 7A           	ld a,d
 492+ 9675 AE           	xor (hl)
 493+ 9676 77           	ld (hl),a
 494+ 9677 24           	inc h
 495+ 9678 7C               ld a,h
 496+ 9679 E6 07            and 7
 497+ 967B 20 0A            jr nz,3F
 498+ 967D 7D               ld a,l
 499+ 967E C6 20            add a,$20
 500+ 9680 6F               ld l,a
 501+ 9681 38 04            jr c,3F
 502+ 9683 7C               ld a,h
 503+ 9684 D6 08            sub 8
 504+ 9686 67               ld h,a
 505+ 9687 7C           3 ld a,h
 506+ 9688 FE 58            cp $58
 507+ 968A 28 03            jr z,4F
 508+ 968C D1               pop de
 509+ 968D 10 CB            djnz 1B
 510+ 968F ED 7B EB 89  4 ld sp,(Stack)
 511+ 9693 C9           	ret
 512+ 9694
 513+ 9694              ; ---------------------------------------------------
 514+ 9694              ;
 515+ 9694              ;   27/02/23
 516+ 9694              ;
 517+ 9694              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 518+ 9694              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 519+ 9694              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 520+ 9694
 521+ 9694 ED 73 EB 89  Pinta_Disparo ld (Stack),sp
 522+ 9698 FD F9            ld sp,iy
 523+ 969A 06 03            ld b,3
 524+ 969C D1           1 pop de
 525+ 969D 7B               ld a,e
 526+ 969E AE               xor (hl)
 527+ 969F 77               ld (hl),a
 528+ 96A0 23               inc hl
 529+ 96A1 7A               ld a,d
 530+ 96A2 AE               xor (hl)
 531+ 96A3 77               ld (hl),a
 532+ 96A4 2B               dec hl
 533+ 96A5
 534+ 96A5 24               inc h
 535+ 96A6 7C               ld a,h
 536+ 96A7 E6 07            and 7
 537+ 96A9 20 0A            jr nz,2F
 538+ 96AB 7D               ld a,l
 539+ 96AC C6 20            add a,$20
 540+ 96AE 6F               ld l,a
 541+ 96AF 38 04            jr c,2F
 542+ 96B1 7C               ld a,h
 543+ 96B2 D6 08            sub 8
 544+ 96B4 67               ld h,a
 545+ 96B5 7C           2 ld a,h
 546+ 96B6 FE 58            cp $58
 547+ 96B8 28 02            jr z,3F
 548+ 96BA
 549+ 96BA 10 E0            djnz 1B
 550+ 96BC ED 7B EB 89  3 ld sp,(Stack)
 551+ 96C0 C9               ret
 552+ 96C1
# file closed: Rutinas_de_impresion_sprites.asm
1906  96C1              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 96C1
   2+ 96C1              ; ******************************************************************************************************************************************************************************************
   3+ 96C1              ;
   4+ 96C1              ;   20/05/23
   5+ 96C1              ;
   6+ 96C1              ;	Recompone_posicion_inicio
   7+ 96C1              ;
   8+ 96C1              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 96C1              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 96C1              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 96C1              ;	_ a una u otra rutina.
  12+ 96C1
  13+ 96C1              Recompone_posicion_inicio
  14+ 96C1
  15+ 96C1 2A 9D 89     	ld hl,(Posicion_inicio)
  16+ 96C4 7D           	ld a,l
  17+ 96C5 E6 1F        	and $1f
  18+ 96C7 28 16        	jr z,1F
  19+ 96C9
  20+ 96C9 FE 1F        	cp $1f
  21+ 96CB 28 0D        	jr z,3F
  22+ 96CD
  23+ 96CD 21 B2 89     	ld hl,Ctrl_2
  24+ 96D0 CB C6        	set 0,(hl)
  25+ 96D2 2A 8F 89     	ld hl,(Puntero_objeto)
  26+ 96D5 22 DB 89     	ld (Repone_puntero_objeto),hl
  27+ 96D8 18 08        	jr 2F
  28+ 96DA
  29+ 96DA CD 88 98     3 call Mov_left
  30+ 96DD 18 03        	jr 2F
  31+ 96DF
  32+ 96DF CD 65 97     1 call Mov_right
  33+ 96E2 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 96E5 22 8F 89     	ld (Puntero_objeto),hl
  35+ 96E8 C9           	ret
  36+ 96E9
  37+ 96E9              ; ******************************************************************************************************************************************************************************************
  38+ 96E9              ;
  39+ 96E9              ;   27/05/23
  40+ 96E9              ;
  41+ 96E9              ;	Mov_down
  42+ 96E9              ;
  43+ 96E9              ; 	Mueve el Sprite X px hacia abajo.
  44+ 96E9              ;
  45+ 96E9              ;
  46+ 96E9              Mov_down
  47+ 96E9
  48+ 96E9 CD 53 97     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 96EC              ;																	; _ repone (Puntero_objeto).
  50+ 96EC 21 AD 89     	ld hl,Ctrl_0
  51+ 96EF CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 96F1              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 96F1              ; 																	; _ en el caso de que no lo haya.
  54+ 96F1 3A B7 89     	ld a,(Vel_down)
  55+ 96F4 47           	ld b,a
  56+ 96F5 2A 8D 89         ld hl,(Posicion_actual)
  57+ 96F8 CD 98 A0     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 96FB E6 02        	and 2
  59+ 96FD 28 17        	jr z,1F
  60+ 96FF
  61+ 96FF              ; Nos encontramos en el último tercio de pantalla.
  62+ 96FF              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 96FF
  64+ 96FF 7C           	ld a,h
  65+ 9700 FE 57        	cp $57
  66+ 9702 20 12        	jr nz,1F
  67+ 9704
  68+ 9704 7D           	ld a,l
  69+ 9705 C6 20        	add $20
  70+ 9707 30 0D        	jr nc,1F
  71+ 9709
  72+ 9709              ; ------------------------------
  73+ 9709              ;
  74+ 9709              ;	12/01/24
  75+ 9709
  76+ 9709              ;	call Reaparece_arriba
  77+ 9709 CD 15 9A     	call Reinicio
  78+ 970C
  79+ 970C              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 970C
  81+ 970C 3A F9 89     	ld a,(Ctrl_3)
  82+ 970F CB CF        	set 1,a
  83+ 9711 32 F9 89     	ld (Ctrl_3),a
  84+ 9714
  85+ 9714 18 08        	jr 3F
  86+ 9716              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9716              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9716              ; ------------------------------
  89+ 9716
  90+ 9716 CD DB 92     1 call NextScan
  91+ 9719 22 8D 89     	ld (Posicion_actual),hl
  92+ 971C 10 DA            djnz 2B
  93+ 971E CD B6 A0     3 call Genera_coordenadas
  94+ 9721 C9           	ret
  95+ 9722
  96+ 9722              ; ******************************************************************************************************************************************************************************************
  97+ 9722              ;
  98+ 9722              ;   27/05/23
  99+ 9722              ;
 100+ 9722              ;	Mov_up
 101+ 9722              ;
 102+ 9722              ; 	Mueve el Sprite hacia arriba.
 103+ 9722              ;
 104+ 9722              ;
 105+ 9722              Mov_up
 106+ 9722
 107+ 9722 CD 53 97     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9725              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9725 21 AD 89     	ld hl,Ctrl_0
 110+ 9728 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 972A              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 972A              ; 																		; _ en el caso de que no lo haya.
 113+ 972A 3A B6 89     	ld a,(Vel_up)
 114+ 972D 47           	ld b,a
 115+ 972E 2A 8D 89     	ld hl,(Posicion_actual)
 116+ 9731 CD 98 A0     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9734 A7           	and a
 118+ 9735 20 10        	jr nz,1F
 119+ 9737
 120+ 9737              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9737              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9737
 123+ 9737 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9738 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 973A 20 0B            jr nz,1F
 126+ 973C 7D               ld a,l
 127+ 973D D6 20            sub $20
 128+ 973F 30 06            jr nc,1F
 129+ 9741 25               dec h
 130+ 9742
 131+ 9742              ; -----------------------------
 132+ 9742 CD F6 99         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9745              ;	call Reinicio
 134+ 9745              ; -----------------------------
 135+ 9745
 136+ 9745 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9747 CD EA 92     1 call PreviousScan
 138+ 974A 22 8D 89     	ld (Posicion_actual),hl
 139+ 974D 10 E2            djnz 3B
 140+ 974F CD B6 A0     2 call Genera_coordenadas
 141+ 9752 C9           	ret
 142+ 9753
 143+ 9753              ; -----------------------------
 144+ 9753              ;
 145+ 9753              ;	27/5/23
 146+ 9753              ;
 147+ 9753              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9753              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9753              ;
 150+ 9753              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9753              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9753              ;
 153+ 9753              ;	Modifica: A y (Puntero_objeto).
 154+ 9753
 155+ 9753 3A B2 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9756 CB 47        	bit 0,a
 157+ 9758 C8           	ret z
 158+ 9759 CB 87        	res 0,a
 159+ 975B 32 B2 89     	ld (Ctrl_2),a
 160+ 975E 2A DB 89     	ld hl,(Repone_puntero_objeto)
 161+ 9761 22 8F 89     	ld (Puntero_objeto),hl
 162+ 9764 C9           	ret
 163+ 9765
 164+ 9765              ; ******************************************************************************************************************************************************************************************
 165+ 9765              ;
 166+ 9765              ;	19/10/22
 167+ 9765              ;
 168+ 9765              ;	Mov_right.
 169+ 9765              ;
 170+ 9765              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9765              ;
 172+ 9765
 173+ 9765 3A AD 89     Mov_right ld a,(Ctrl_0)
 174+ 9768 CB 77        	bit 6,a
 175+ 976A 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 976C
 177+ 976C CD A4 99     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 976F C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 9770
 180+ 9770 21 AD 89     	ld hl,Ctrl_0
 181+ 9773 CB E6        	set 4,(hl)
 182+ 9775 18 52        	jr 8F
 183+ 9777
 184+ 9777 21 AD 89     10 ld hl,Ctrl_0
 185+ 977A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 977C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 977C              ; 																	; _ en el caso de que no lo haya.
 188+ 977C 3A 91 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 977F FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 9781 20 46        	jr nz,8F
 191+ 9783
 192+ 9783 3A 93 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9786 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9787 28 40        	jr z,8F
 195+ 9789
 196+ 9789              ; ---------- ---------- ----------
 197+ 9789              ;
 198+ 9789              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9789
 200+ 9789 3A B5 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 978C FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 978E 28 11        	jr z,1F
 203+ 9790 38 06        	jr c,6F
 204+ 9792 FE 04        	cp 4
 205+ 9794 28 14        	jr z,7F
 206+ 9796 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9798
 208+ 9798              ; ---------- ---------- ----------
 209+ 9798              ;
 210+ 9798              ; Perfiles de velocidad
 211+ 9798              ;
 212+ 9798
 213+ 9798 3A 93 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 979B FE FE        	cp $fe
 215+ 979D 20 2A        	jr nz,8F
 216+ 979F 18 10        	jr 3F
 217+ 97A1 3A 93 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 97A4 FE FD        	cp $fd
 219+ 97A6 20 21        	jr nz,8F
 220+ 97A8 18 07        	jr 3F
 221+ 97AA 3A 93 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 97AD FE FB        	cp $fb
 223+ 97AF 20 18        	jr nz,8F
 224+ 97B1
 225+ 97B1              ; ---------- ---------- ----------
 226+ 97B1
 227+ 97B1              3
 228+ 97B1 CD E4 99     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 97B4              ;	call Reinicio
 230+ 97B4
 231+ 97B4              ; ---------- ---------- ----------
 232+ 97B4              ;
 233+ 97B4              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 97B4
 235+ 97B4 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 97B6 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 97B7 CD D0 97     	call DESPLZ_DER
 238+ 97BA C1           	pop bc
 239+ 97BB 10 F9        	djnz 5B
 240+ 97BD 2A 8D 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 97C0 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 97C1 22 8D 89     	ld (Posicion_actual),hl
 243+ 97C4 CD B6 A0     	call Genera_coordenadas
 244+ 97C7 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 97C9
 246+ 97C9              ; ---------- ---------- ----------
 247+ 97C9
 248+ 97C9 2A 8D 89     8 ld hl,(Posicion_actual)
 249+ 97CC CD D0 97     	call DESPLZ_DER
 250+ 97CF C9           2 ret
 251+ 97D0
 252+ 97D0              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 97D0              ;
 254+ 97D0              ;	22/9/22
 255+ 97D0              ;
 256+ 97D0
 257+ 97D0 CD DF 97     DESPLZ_DER call Desplaza_derecha
 258+ 97D3 CD 2B 98         call modifica_parametros_1er_DESPLZ_2
 259+ 97D6 CD 54 98         call Ciclo_completo
 260+ 97D9 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 97DC CB FE        	set 7,(hl)
 262+ 97DE C9           	ret
 263+ 97DF
 264+ 97DF              ; ******************************************************************************************************************************************************************************************
 265+ 97DF              ;	15/02/23
 266+ 97DF              ;
 267+ 97DF
 268+ 97DF 3A B5 89     Desplaza_derecha ld a,(Vel_right)
 269+ 97E2 47           	ld b,a
 270+ 97E3 2A 99 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 97E6 23           1 inc hl
 272+ 97E7 23           	inc hl
 273+ 97E8 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 97EA 22 99 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 97ED CD A6 8C     	call Extrae_address
 276+ 97F0 22 8F 89     	ld (Puntero_objeto),hl
 277+ 97F3
 278+ 97F3              ; Modifica (Puntero_DESPLZ_izq).
 279+ 97F3
 280+ 97F3              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 97F3              ; Cuántos movimientos hemos hecho ??
 282+ 97F3              ; DE contiene (Puntero_DESPLZ_der).
 283+ 97F3
 284+ 97F3 2A 95 89     7 ld hl,(Indice_Sprite_der)
 285+ 97F6 EB           	ex de,hl
 286+ 97F7 A7           	and a
 287+ 97F8 ED 52        	sbc hl,de
 288+ 97FA CB 3D        	srl l
 289+ 97FC 3E 08        6 ld a,8
 290+ 97FE 95           	sub l
 291+ 97FF 30 1E        	jr nc,3F
 292+ 9801
 293+ 9801              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9801              ; B="0".
 295+ 9801
 296+ 9801 04           4 inc b
 297+ 9802 3C           	inc a
 298+ 9803 20 FC        	jr nz,4B
 299+ 9805 78           	ld a,b
 300+ 9806 08           	ex af,af
 301+ 9807 2A 95 89     	ld hl,(Indice_Sprite_der)
 302+ 980A 23           5 inc hl
 303+ 980B 23           	inc hl
 304+ 980C 10 FC        	djnz 5B
 305+ 980E 22 99 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9811 CD A6 8C     	call Extrae_address
 307+ 9814 22 8F 89     	ld (Puntero_objeto),hl
 308+ 9817
 309+ 9817              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9817              ; _(Posicion_actual).
 311+ 9817
 312+ 9817 21 8D 89     	ld hl,Posicion_actual
 313+ 981A 34           	inc (hl)
 314+ 981B 08               ex af,af
 315+ 981C 6F           	ld l,a
 316+ 981D 18 DD        	jr 6B
 317+ 981F
 318+ 981F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 981F
 320+ 981F 47           3 ld b,a
 321+ 9820 2A 97 89     	ld hl,(Indice_Sprite_izq)
 322+ 9823 23           2 inc hl
 323+ 9824 23           	inc hl
 324+ 9825 10 FC        	djnz 2B
 325+ 9827 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 982A C9           8 ret
 327+ 982B
 328+ 982B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 982B              ;
 330+ 982B              ;	24/7/22
 331+ 982B              ;
 332+ 982B              ;	modifica_parametros_1er_DESPLZ_2
 333+ 982B              ;
 334+ 982B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 982B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 982B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 982B
 338+ 982B 3A 93 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 982E A7           	and a
 340+ 982F 20 1F        	jr nz,1F
 341+ 9831 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9833 32 93 89         ld (CTRL_DESPLZ),a
 343+ 9836
 344+ 9836 21 8C 89     	ld hl,Columns
 345+ 9839 34           	inc (hl)
 346+ 983A 3A 9F 89     	ld a,(Cuad_objeto)
 347+ 983D E6 01        	and 1
 348+ 983F 28 0F        	jr z,1F
 349+ 9841 2A 8D 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9844 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9845 22 8D 89     	ld (Posicion_actual),hl
 352+ 9848 CD B6 A0     	call Genera_coordenadas
 353+ 984B CD B0 99     	call Inc_CTRL_DESPLZ
 354+ 984E 18 03        	jr 2F
 355+ 9850 CD B0 99     1 call Inc_CTRL_DESPLZ
 356+ 9853 C9           2 ret
 357+ 9854
 358+ 9854              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9854              ;
 360+ 9854              ;	24/7/22
 361+ 9854              ;
 362+ 9854              ;	Ciclo_completo.
 363+ 9854              ;
 364+ 9854              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9854              ;
 366+ 9854              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9854              ; 	Decrementamos (Columns).
 368+ 9854              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9854              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9854
 371+ 9854
 372+ 9854 3A 93 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9857 FE FF        	cp $ff
 374+ 9859 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 985B E6 F0        	and $f0
 376+ 985D 20 28        	jr nz,3F
 377+ 985F
 378+ 985F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 985F
 380+ 985F 3A 93 89     	ld a,(CTRL_DESPLZ)
 381+ 9862 47           	ld b,a
 382+ 9863 3E F8        	ld a,$f8
 383+ 9865 80           	add b
 384+ 9866 32 93 89     	ld (CTRL_DESPLZ),a
 385+ 9869 18 1C        	jr 3F
 386+ 986B 21 8C 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 986E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 986F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 9870 32 93 89     	ld (CTRL_DESPLZ),a
 390+ 9873 3A 9F 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9876 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9878 20 0A        	jr nz,2F
 393+ 987A 2A 8D 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 987D 23           	inc hl
 395+ 987E 22 8D 89     	ld (Posicion_actual),hl
 396+ 9881 CD B6 A0     	call Genera_coordenadas
 397+ 9884
 398+ 9884              ; Inicia el puntero de Sprite.
 399+ 9884
 400+ 9884 CD BB 8C     2 call Inicia_puntero_objeto_der
 401+ 9887 C9           3 ret
 402+ 9888
 403+ 9888              ; ******************************************************************************************************************************************************************************************
 404+ 9888              ;
 405+ 9888              ;	15/02/23
 406+ 9888              ;
 407+ 9888              ;	Mov_left.
 408+ 9888              ;
 409+ 9888              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9888              ;
 411+ 9888              Mov_left
 412+ 9888
 413+ 9888 21 AD 89     	ld hl,Ctrl_0
 414+ 988B CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 988D              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 988D              ; 																	; _ en el caso de que no lo haya.
 417+ 988D 3A AD 89     	ld a,(Ctrl_0)
 418+ 9890 CB 77        	bit 6,a
 419+ 9892 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9894
 421+ 9894 CD AA 99     	call Stop_Amadeus_left
 422+ 9897 C8           	ret z
 423+ 9898 20 4A        	jr nz,8F
 424+ 989A
 425+ 989A 3A 91 89     11 ld a,(Coordenada_X)
 426+ 989D A7           	and a
 427+ 989E 20 44        	jr nz,8F
 428+ 98A0
 429+ 98A0 3A 93 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 98A3 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 98A4 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 98A6
 433+ 98A6              ; ---------- ---------- ----------
 434+ 98A6
 435+ 98A6 3A B4 89     	ld a,(Vel_left)
 436+ 98A9 FE 02        	cp 2
 437+ 98AB 28 0F        	jr z,1F
 438+ 98AD 38 04        	jr c,6F
 439+ 98AF FE 04        	cp 4
 440+ 98B1 28 12        	jr z,7F
 441+ 98B3
 442+ 98B3              ; ---------- ---------- ----------
 443+ 98B3
 444+ 98B3 3A 93 89     6 ld a,(CTRL_DESPLZ)
 445+ 98B6 FE F8        	cp $f8
 446+ 98B8 20 2A        	jr nz,8F
 447+ 98BA 18 10        	jr 4F
 448+ 98BC 3A 93 89     1 ld a,(CTRL_DESPLZ)
 449+ 98BF FE F9        	cp $f9
 450+ 98C1 20 21        	jr nz,8F
 451+ 98C3 18 07        	jr 4F
 452+ 98C5 3A 93 89     7 ld a,(CTRL_DESPLZ)
 453+ 98C8 FE FB        	cp $fb
 454+ 98CA 20 18        	jr nz,8F
 455+ 98CC
 456+ 98CC              ; ---------- ---------- ----------
 457+ 98CC
 458+ 98CC              4
 459+ 98CC CD D2 99     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 98CF              ;	call Reinicio
 461+ 98CF
 462+ 98CF              ; ---------- ---------- ----------
 463+ 98CF
 464+ 98CF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 98D1 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 98D2
 467+ 98D2              ;	ld hl,(Indice_Sprite_izq)
 468+ 98D2              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 98D2
 470+ 98D2 CD EB 98     	call DESPLZ_IZQ
 471+ 98D5 C1           	pop bc
 472+ 98D6 10 F9        	djnz 5B
 473+ 98D8 2A 8D 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 98DB 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 98DC 22 8D 89     	ld (Posicion_actual),hl
 476+ 98DF CD B6 A0     	call Genera_coordenadas
 477+ 98E2 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 98E4
 479+ 98E4              ; ---------- ---------- ----------
 480+ 98E4
 481+ 98E4              ; Movemos, no hay recolocación.
 482+ 98E4
 483+ 98E4 2A 8D 89     8 ld hl,(Posicion_actual)
 484+ 98E7 CD EB 98     	call DESPLZ_IZQ
 485+ 98EA C9           2 ret
 486+ 98EB
 487+ 98EB              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 98EB              ;
 489+ 98EB              ;	22/9/22
 490+ 98EB
 491+ 98EB              DESPLZ_IZQ
 492+ 98EB
 493+ 98EB CD FA 98     	call Desplaza_izquierda
 494+ 98EE CD 46 99         call modifica_parametros_1er_DESPLZ
 495+ 98F1 CD 6E 99     	call Ciclo_completo_2
 496+ 98F4 21 AD 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 98F7 CB BE        	res 7,(hl)
 498+ 98F9 C9           	ret
 499+ 98FA
 500+ 98FA              Desplaza_izquierda
 501+ 98FA
 502+ 98FA 3A B4 89     	ld a,(Vel_left)
 503+ 98FD 47           	ld b,a
 504+ 98FE 2A 9B 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9901 23           1 inc hl
 506+ 9902 23           	inc hl
 507+ 9903 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9905 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9908 CD A6 8C     	call Extrae_address
 510+ 990B 22 8F 89     	ld (Puntero_objeto),hl
 511+ 990E
 512+ 990E              ; Modifica (Puntero_DESPLZ_der).
 513+ 990E
 514+ 990E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 990E              ; Cuántos movimientos hemos hecho ??
 516+ 990E              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 990E
 518+ 990E 2A 97 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9911 EB           	ex de,hl
 520+ 9912 A7           	and a
 521+ 9913 ED 52        	sbc hl,de
 522+ 9915 CB 3D        	srl l
 523+ 9917 3E 08        6 ld a,8
 524+ 9919 95           	sub l
 525+ 991A 30 1E        	jr nc,3F
 526+ 991C
 527+ 991C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 991C              ; B="0".
 529+ 991C
 530+ 991C 04           4 inc b
 531+ 991D 3C           	inc a
 532+ 991E 20 FC        	jr nz,4B
 533+ 9920 78           	ld a,b
 534+ 9921 08           	ex af,af
 535+ 9922 2A 97 89     	ld hl,(Indice_Sprite_izq)
 536+ 9925 23           5 inc hl
 537+ 9926 23           	inc hl
 538+ 9927 10 FC        	djnz 5B
 539+ 9929 22 9B 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 992C CD A6 8C     	call Extrae_address
 541+ 992F 22 8F 89     	ld (Puntero_objeto),hl
 542+ 9932
 543+ 9932              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9932              ; _(Posicion_actual).
 545+ 9932
 546+ 9932 21 8D 89     	ld hl,Posicion_actual
 547+ 9935 35           	dec (hl)
 548+ 9936 08           	ex af,af
 549+ 9937 6F           	ld l,a
 550+ 9938 18 DD        	jr 6B
 551+ 993A
 552+ 993A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 993A
 554+ 993A 47           3 ld b,a
 555+ 993B 2A 95 89     	ld hl,(Indice_Sprite_der)
 556+ 993E 23           2 inc hl
 557+ 993F 23           	inc hl
 558+ 9940 10 FC        	djnz 2B
 559+ 9942 22 99 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9945 C9           8 ret
 561+ 9946
 562+ 9946              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9946              ;
 564+ 9946              ;	modifica_parametros_1er_DESPLZ
 565+ 9946              ;
 566+ 9946              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9946              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9946              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9946
 570+ 9946 3A 93 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9949 A7           	and a
 572+ 994A 20 1E        	jr nz,1F
 573+ 994C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 994D 32 93 89         ld (CTRL_DESPLZ),a
 575+ 9950 21 8C 89     	ld hl,Columns
 576+ 9953 34           	inc (hl)
 577+ 9954 3A 9F 89     	ld a,(Cuad_objeto)
 578+ 9957 E6 01        	and 1
 579+ 9959 20 0F        	jr nz,1F
 580+ 995B 2A 8D 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 995E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 995F 22 8D 89     	ld (Posicion_actual),hl
 583+ 9962 CD B6 A0     	call Genera_coordenadas
 584+ 9965 CD C1 99     	call Dec_CTRL_DESPLZ
 585+ 9968 18 03        	jr 2F
 586+ 996A CD C1 99     1 call Dec_CTRL_DESPLZ
 587+ 996D C9           2 ret
 588+ 996E
 589+ 996E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 996E
 591+ 996E 3A 93 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9971 FE F7        	cp $f7
 593+ 9973 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9975 30 2C        	jr nc,3F
 595+ 9977
 596+ 9977              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9977
 598+ 9977 06 00        	ld b,0
 599+ 9979 04           4 inc b
 600+ 997A 3C           	inc a
 601+ 997B FE F7        	cp $f7
 602+ 997D 20 FA        	jr nz,4B
 603+ 997F 3E FF        	ld a,$ff
 604+ 9981 90           	sub b
 605+ 9982 32 93 89     	ld (CTRL_DESPLZ),a
 606+ 9985 18 1C        	jr 3F
 607+ 9987
 608+ 9987              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9987
 610+ 9987 21 8C 89     1 ld hl,Columns
 611+ 998A 35           	dec (hl)
 612+ 998B AF           	xor a
 613+ 998C 32 93 89     	ld (CTRL_DESPLZ),a
 614+ 998F 3A 9F 89     	ld a,(Cuad_objeto)
 615+ 9992 E6 01        	and 1
 616+ 9994 28 0A        	jr z,2F
 617+ 9996 2A 8D 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9999 2B           	dec hl
 619+ 999A 22 8D 89     	ld (Posicion_actual),hl
 620+ 999D CD B6 A0     	call Genera_coordenadas
 621+ 99A0
 622+ 99A0              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 99A0
 624+ 99A0 CD CE 8C     2 call Inicia_puntero_objeto_izq
 625+ 99A3 C9           3 ret
 626+ 99A4
 627+ 99A4              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 99A4              ;
 629+ 99A4              ;	19/10/22
 630+ 99A4              ;
 631+ 99A4              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 99A4              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 99A4
 634+ 99A4 3A 91 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 99A7 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 99A9 C9           	ret
 637+ 99AA
 638+ 99AA              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 99AA              ;
 640+ 99AA              ;	19/10/22
 641+ 99AA              ;
 642+ 99AA              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 99AA              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 99AA
 645+ 99AA 3A 91 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 99AD FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 99AF C9           	ret
 648+ 99B0
 649+ 99B0              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 99B0              ;
 651+ 99B0              ;	24/7/22
 652+ 99B0              ;
 653+ 99B0              ;	Inc_CTRL_DESPLZ
 654+ 99B0              ;
 655+ 99B0              ;
 656+ 99B0              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 99B0
 658+ 99B0 21 93 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 99B3 3A B5 89     	ld a,(Vel_right)
 660+ 99B6 A7           	and a
 661+ 99B7 28 06        	jr z,1F
 662+ 99B9 47           	ld b,a
 663+ 99BA 34           3 inc (hl)
 664+ 99BB 10 FD        	djnz 3B
 665+ 99BD 18 01        	jr 2F
 666+ 99BF 34           1 inc (hl)
 667+ 99C0 C9           2 ret
 668+ 99C1
 669+ 99C1              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 99C1              ;
 671+ 99C1              ;	5/2/23
 672+ 99C1              ;
 673+ 99C1              ;	Dec_CTRL_DESPLZ
 674+ 99C1              ;
 675+ 99C1              ;
 676+ 99C1              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 99C1
 678+ 99C1 21 93 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 99C4 3A B4 89     	ld a,(Vel_left)
 680+ 99C7 A7           	and a
 681+ 99C8 28 06        	jr z,1F
 682+ 99CA 47           	ld b,a
 683+ 99CB 35           3 dec (hl)
 684+ 99CC 10 FD        	djnz 3B
 685+ 99CE 18 01        	jr 2F
 686+ 99D0 35           1 dec (hl)
 687+ 99D1 C9           2 ret
 688+ 99D2
 689+ 99D2              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 99D2
 691+ 99D2 2A 8D 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 99D5 01 1F 00     	ld bc,31
 693+ 99D8 A7           	and a
 694+ 99D9 ED 4A        	adc hl,bc
 695+ 99DB 22 8D 89     	ld (Posicion_actual),hl
 696+ 99DE 21 AD 89     	ld hl,Ctrl_0														; $xxx1
 697+ 99E1 CB C6        	set 0,(hl)
 698+ 99E3 C9           	ret
 699+ 99E4
 700+ 99E4              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 99E4
 702+ 99E4 2A 8D 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 99E7 01 1F 00     	ld bc,31
 704+ 99EA A7           	and a
 705+ 99EB ED 42        	sbc hl,bc
 706+ 99ED 22 8D 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 99F0 21 AD 89     	ld hl,Ctrl_0
 708+ 99F3 CB CE        	set 1,(hl)
 709+ 99F5 C9           	ret
 710+ 99F6
 711+ 99F6              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 99F6
 713+ 99F6 24           Reaparece_abajo inc h
 714+ 99F7 01 E0 17     	ld bc,$17e0
 715+ 99FA A7           	and a
 716+ 99FB ED 4A        	adc hl,bc
 717+ 99FD 22 8D 89     	ld (Posicion_actual),hl
 718+ 9A00 21 AD 89     	ld hl,Ctrl_0
 719+ 9A03 CB D6        	set 2,(hl)
 720+ 9A05 C9           	ret
 721+ 9A06
 722+ 9A06              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9A06
 724+ 9A06 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9A09 A7           	and a
 726+ 9A0A ED 42        	sbc hl,bc
 727+ 9A0C 22 8D 89     	ld (Posicion_actual),hl
 728+ 9A0F 21 AD 89     	ld hl,Ctrl_0
 729+ 9A12 CB DE        	set 3,(hl)
 730+ 9A14 C9           	ret
 731+ 9A15
 732+ 9A15              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9A15              ;
 734+ 9A15              ;	15/07/23
 735+ 9A15
 736+ 9A15              Reinicio
 737+ 9A15
 738+ 9A15              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9A15
 740+ 9A15 AF           	xor a
 741+ 9A16 21 D2 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9A19 CD 37 9A     	call Limpia_contenido_hl
 743+ 9A1C
 744+ 9A1C 21 8D 89     	ld hl,Posicion_actual
 745+ 9A1F CD 37 9A     	call Limpia_contenido_hl
 746+ 9A22
 747+ 9A22 CD 0D 8E     	call Inicializa_Puntero_indice_mov
 748+ 9A25 CD 03 9B     	call Inicia_Puntero_mov
 749+ 9A28
 750+ 9A28 21 D4 89     	ld hl,Incrementa_puntero
 751+ 9A2B 06 05        	ld b,5
 752+ 9A2D 77           1 ld (hl),a
 753+ 9A2E 23           	inc hl
 754+ 9A2F 10 FC        	djnz 1B
 755+ 9A31
 756+ 9A31 21 B2 89     	ld hl,Ctrl_2
 757+ 9A34 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9A36
 759+ 9A36 C9           	ret
 760+ 9A37
 761+ 9A37 77           Limpia_contenido_hl	ld (hl),a
 762+ 9A38 23           	inc hl
 763+ 9A39 77           	ld (hl),a
 764+ 9A3A C9           	ret
 765+ 9A3B
 766+ 9A3B
# file closed: Direcciones.asm
1907  9A3B              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9A3B              ; ----- ----- ----- ----- -----
   2+ 9A3B              ;
   3+ 9A3B              ;   28/12/23
   4+ 9A3B
   5+ 9A3B              Movimiento
   6+ 9A3B
   7+ 9A3B              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9A3B
   9+ 9A3B 3A B2 89         ld a,(Ctrl_2)
  10+ 9A3E CB 57            bit 2,a
  11+ 9A40 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9A42
  13+ 9A42 2A D0 89         ld hl,(Puntero_mov)
  14+ 9A45 7E               ld a,(hl)
  15+ 9A46
  16+ 9A46              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 9A46
  18+ 9A46              Inicia_desplazamiento.
  19+ 9A46
  20+ 9A46              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 9A46
  22+ 9A46 CD 39 9B         call Ajusta_velocidad_desplazamiento
  23+ 9A49
  24+ 9A49              ; Iniciamos (Repetimos_mov).
  25+ 9A49
  26+ 9A49 7E               ld a,(hl)
  27+ 9A4A E6 0F            and $0f
  28+ 9A4C 32 D6 89         ld (Repetimos_desplazamiento),a
  29+ 9A4F 32 D7 89         ld (Repetimos_desplazamiento_backup),a
  30+ 9A52
  31+ 9A52              ; Iniciamos (Cola_de_desplazamiento).
  32+ 9A52
  33+ 9A52 23               inc hl
  34+ 9A53 7E               ld a,(hl)
  35+ 9A54 32 D9 89         ld (Cola_de_desplazamiento),a
  36+ 9A57 2B               dec hl
  37+ 9A58
  38+ 9A58 21 B2 89         ld hl,Ctrl_2
  39+ 9A5B CB D6            set 2,(hl)
  40+ 9A5D
  41+ 9A5D              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 9A5D              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 9A5D
  44+ 9A5D              Desplazamiento_iniciado
  45+ 9A5D
  46+ 9A5D CD 0D 9B         call Aplica_desplazamiento
  47+ 9A60
  48+ 9A60              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 9A60
  50+ 9A60 3A F9 89         ld a,(Ctrl_3)
  51+ 9A63 CB 4F            bit 1,a
  52+ 9A65 C0               ret nz
  53+ 9A66
  54+ 9A66 21 D6 89     3 ld hl,Repetimos_desplazamiento
  55+ 9A69 35               dec (hl)
  56+ 9A6A C0               ret nz
  57+ 9A6B
  58+ 9A6B              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 9A6B              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 9A6B              ; Analiza (Cola_de_desplazamiento).
  61+ 9A6B
  62+ 9A6B 3A D9 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 9A6E A7               and a
  64+ 9A6F CC 62 9B         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 9A72 28 30            jr z,Reinicia_el_movimiento
  66+ 9A74
  67+ 9A74 FE FF            cp $ff
  68+ 9A76 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 9A78
  70+ 9A78 FE FE            cp $fe
  71+ 9A7A CC E7 9A         call z,Fijamos_bucle
  72+ 9A7D 28 25            jr z,Reinicia_el_movimiento
  73+ 9A7F
  74+ 9A7F FE FD            cp $fd
  75+ 9A81 20 11            jr nz,1F
  76+ 9A83
  77+ 9A83              ; ---
  78+ 9A83              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9A83
  80+ 9A83 3A B2 89         ld a,(Ctrl_2)
  81+ 9A86 CB 5F            bit 3,a
  82+ 9A88 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9A8A
  84+ 9A8A              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9A8A
  86+ 9A8A 21 B2 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 9A8D CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 9A8F
  89+ 9A8F CD F8 9A         call Inicia_Repetimos_movimiento
  90+ 9A92 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9A94              ; ---
  92+ 9A94
  93+ 9A94 FE 01        1 cp 1
  94+ 9A96 CA D1 9A         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9A99
  96+ 9A99 3D               dec a
  97+ 9A9A 32 D9 89         ld (Cola_de_desplazamiento),a
  98+ 9A9D
  99+ 9A9D 3A D7 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 9AA0 32 D6 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9AA3              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9AA3 C9               ret
 103+ 9AA4
 104+ 9AA4              Reinicia_el_movimiento
 105+ 9AA4
 106+ 9AA4 3A B2 89         ld a,(Ctrl_2)
 107+ 9AA7 CB 5F            bit 3,a
 108+ 9AA9 28 1B            jr z,2F
 109+ 9AAB
 110+ 9AAB              ; (Cola_de_desplazamiento)="254".
 111+ 9AAB
 112+ 9AAB 21 D8 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9AAE 35               dec (hl)
 114+ 9AAF 20 15            jr nz,2F
 115+ 9AB1
 116+ 9AB1              ; Fin de las repeticiones del último movimiento.
 117+ 9AB1
 118+ 9AB1 21 B2 89         ld hl,Ctrl_2
 119+ 9AB4 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9AB6
 121+ 9AB6 2A D0 89         ld hl,(Puntero_mov)
 122+ 9AB9 23               inc hl
 123+ 9ABA 23               inc hl
 124+ 9ABB 23               inc hl
 125+ 9ABC 22 D0 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9ABF              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9ABF 7E               ld a,(hl)
 128+ 9AC0 32 D9 89         ld (Cola_de_desplazamiento),a
 129+ 9AC3
 130+ 9AC3 C3 6B 9A         jp Cola
 131+ 9AC6
 132+ 9AC6 CD 03 9B     2 call Inicia_Puntero_mov
 133+ 9AC9
 134+ 9AC9 21 B2 89         ld hl,Ctrl_2
 135+ 9ACC CB 96            res 2,(hl)
 136+ 9ACE
 137+ 9ACE C3 3B 9A         jp Movimiento
 138+ 9AD1
 139+ 9AD1              Siguiente_desplazamiento
 140+ 9AD1
 141+ 9AD1              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9AD1              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9AD1
 144+ 9AD1 21 B2 89         ld hl,Ctrl_2
 145+ 9AD4 CB 96            res 2,(hl)
 146+ 9AD6
 147+ 9AD6 2A D0 89         ld hl,(Puntero_mov)
 148+ 9AD9 23               inc hl
 149+ 9ADA 23               inc hl
 150+ 9ADB 22 D0 89         ld (Puntero_mov),hl
 151+ 9ADE
 152+ 9ADE 7E               ld a,(hl)
 153+ 9ADF A7               and a
 154+ 9AE0 CC 62 9B         call z,Incrementa_Puntero_indice_mov
 155+ 9AE3 CA A4 9A         jp z,Reinicia_el_movimiento
 156+ 9AE6
 157+ 9AE6 C9               ret
 158+ 9AE7
 159+ 9AE7              ; Subrutinas -----------------------------------------
 160+ 9AE7              ; ---------- --------- --------- ---------- ----------
 161+ 9AE7              ;
 162+ 9AE7              ;   24/07/23
 163+ 9AE7              ;
 164+ 9AE7              ;   Fijamos_bucle
 165+ 9AE7              ;
 166+ 9AE7              ;
 167+ 9AE7
 168+ 9AE7              Fijamos_bucle
 169+ 9AE7
 170+ 9AE7 3A D4 89         ld a,(Incrementa_puntero)
 171+ 9AEA 3C               inc a
 172+ 9AEB 32 D5 89         ld (Incrementa_puntero_backup),a
 173+ 9AEE
 174+ 9AEE CD 62 9B         call Incrementa_Puntero_indice_mov
 175+ 9AF1 2A CE 89         ld hl,(Puntero_indice_mov)
 176+ 9AF4 22 D2 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9AF7 C9               ret
 178+ 9AF8
 179+ 9AF8              ; ---------- --------- --------- ---------- ----------
 180+ 9AF8              ;
 181+ 9AF8              ;   07/7/23
 182+ 9AF8              ;
 183+ 9AF8              ;   Inicia_Repetimos_movimiento
 184+ 9AF8              ;
 185+ 9AF8              ;
 186+ 9AF8
 187+ 9AF8              Inicia_Repetimos_movimiento
 188+ 9AF8
 189+ 9AF8              ; Iniciamos (Repetimos_movimiento).
 190+ 9AF8
 191+ 9AF8 DD 2A D0 89      ld ix,(Puntero_mov)
 192+ 9AFC DD 7E 02         ld a,(ix+2)
 193+ 9AFF 32 D8 89         ld (Repetimos_movimiento),a
 194+ 9B02
 195+ 9B02 C9               ret
 196+ 9B03
 197+ 9B03              ; ---------- --------- --------- ---------- ----------
 198+ 9B03              ;
 199+ 9B03              ;   26/6/23
 200+ 9B03              ;
 201+ 9B03              ;   Inicia_Puntero_mov
 202+ 9B03              ;
 203+ 9B03              ;
 204+ 9B03
 205+ 9B03 2A CE 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9B06 CD A6 8C         call Extrae_address
 207+ 9B09 22 D0 89         ld (Puntero_mov),hl
 208+ 9B0C C9               ret
 209+ 9B0D
 210+ 9B0D              ; ---------- --------- --------- ---------- ----------
 211+ 9B0D              ;
 212+ 9B0D              ;   27/06/23
 213+ 9B0D              ;
 214+ 9B0D              ;   Aplica_movimiento.
 215+ 9B0D
 216+ 9B0D              Aplica_desplazamiento
 217+ 9B0D
 218+ 9B0D              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9B0D
 220+ 9B0D 2A D0 89         ld hl, (Puntero_mov)
 221+ 9B10
 222+ 9B10 7E               ld a,(hl)
 223+ 9B11 E6 F0            and $f0
 224+ 9B13 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9B14
 226+ 9B14 CB 7E            bit 7,(hl)
 227+ 9B16 28 03            jr z,1F
 228+ 9B18 CD 22 97         call Mov_up
 229+ 9B1B 2A D0 89     1 ld hl, (Puntero_mov)
 230+ 9B1E CB 76            bit 6,(hl)
 231+ 9B20 28 03            jr z,2F
 232+ 9B22 CD E9 96         call Mov_down
 233+ 9B25
 234+ 9B25              ; Se ha aplicado reinicio ???
 235+ 9B25              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 9B25
 237+ 9B25              ;    ld a,(Ctrl_3)
 238+ 9B25              ;    bit 1,a
 239+ 9B25              ;    ret nz
 240+ 9B25
 241+ 9B25 2A D0 89     2 ld hl, (Puntero_mov)
 242+ 9B28 CB 6E            bit 5,(hl)
 243+ 9B2A 28 03            jr z,3F
 244+ 9B2C CD 88 98         call Mov_left
 245+ 9B2F 2A D0 89     3 ld hl, (Puntero_mov)
 246+ 9B32 CB 66            bit 4,(hl)
 247+ 9B34 C8               ret z
 248+ 9B35 CD 65 97         call Mov_right
 249+ 9B38 C9               ret
 250+ 9B39
 251+ 9B39              ; ---------- --------- --------- ---------- ----------
 252+ 9B39              ;
 253+ 9B39              ;   26/06/23
 254+ 9B39              ;
 255+ 9B39              ;   Ajusta_velocidad_desplazamiento.
 256+ 9B39
 257+ 9B39              Ajusta_velocidad_desplazamiento
 258+ 9B39
 259+ 9B39              ; 1er byte de la cadena de movimiento.
 260+ 9B39              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 9B39
 262+ 9B39 CD 57 9B         call Extrae_nibble_alto
 263+ 9B3C
 264+ 9B3C 32 B6 89         ld (Vel_up),a
 265+ 9B3F 79               ld a,c
 266+ 9B40 E6 0F            and $0f
 267+ 9B42 32 B7 89         ld (Vel_down),a
 268+ 9B45
 269+ 9B45              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 9B45              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 9B45
 272+ 9B45 23               inc hl
 273+ 9B46 CD 57 9B         call Extrae_nibble_alto
 274+ 9B49
 275+ 9B49 32 B4 89         ld (Vel_left),a
 276+ 9B4C 79               ld a,c
 277+ 9B4D E6 0F            and $0f
 278+ 9B4F 32 B5 89         ld (Vel_right),a
 279+ 9B52
 280+ 9B52              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 9B52
 282+ 9B52 23               inc hl
 283+ 9B53 22 D0 89         ld (Puntero_mov),hl
 284+ 9B56 C9               ret
 285+ 9B57
 286+ 9B57 06 04        Extrae_nibble_alto ld b,4
 287+ 9B59 7E               ld a,(hl)
 288+ 9B5A 4F               ld c,a
 289+ 9B5B E6 F0            and $f0
 290+ 9B5D CB 3F        1 srl a
 291+ 9B5F 10 FC            djnz 1B
 292+ 9B61 C9               ret
 293+ 9B62
 294+ 9B62              ; ---------- --------- --------- ---------- ----------
 295+ 9B62              ;
 296+ 9B62              ;   5/7/23
 297+ 9B62              ;
 298+ 9B62              ;   Incrementa_Puntero_indice_mov
 299+ 9B62
 300+ 9B62              Incrementa_Puntero_indice_mov
 301+ 9B62
 302+ 9B62 21 D4 89         ld hl,Incrementa_puntero
 303+ 9B65 34               inc (hl)
 304+ 9B66
 305+ 9B66 2A CE 89         ld hl,(Puntero_indice_mov)
 306+ 9B69 01 02 00         ld bc,2
 307+ 9B6C A7               and a
 308+ 9B6D 09               add hl,bc
 309+ 9B6E 22 CE 89         ld (Puntero_indice_mov),hl
 310+ 9B71
 311+ 9B71 7E               ld a,(hl)
 312+ 9B72 A7               and a
 313+ 9B73
 314+ 9B73              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 9B73
 316+ 9B73              ;    jr z,$
 317+ 9B73
 318+ 9B73              ;! Reinicia el Patrón de movimiento.
 319+ 9B73
 320+ 9B73 CC 78 9B         call z,Inicializa_Puntero_indice_mov_2
 321+ 9B76
 322+ 9B76 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 9B77
 324+ 9B77 C9               ret
 325+ 9B78
 326+ 9B78              ; ---------- --------- --------- ---------- ----------
 327+ 9B78              ;
 328+ 9B78              ;   15/01/24
 329+ 9B78              ;
 330+ 9B78              ;   Inicializa_Puntero_indice_mov
 331+ 9B78
 332+ 9B78              Inicializa_Puntero_indice_mov_2
 333+ 9B78
 334+ 9B78              ; Existe etiqueta de bucle principal???
 335+ 9B78
 336+ 9B78 2A D2 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 9B7B 24               inc h
 338+ 9B7C 25               dec h
 339+ 9B7D 28 05            jr z,2F
 340+ 9B7F
 341+ 9B7F 22 CE 89         ld (Puntero_indice_mov),hl
 342+ 9B82 18 14            jr 3F
 343+ 9B84
 344+ 9B84              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9B84
 346+ 9B84 3A D4 89     2 ld a,(Incrementa_puntero)
 347+ 9B87 47               ld b,a
 348+ 9B88
 349+ 9B88 2A CE 89         ld hl,(Puntero_indice_mov)
 350+ 9B8B 2B           1 dec hl
 351+ 9B8C 2B               dec hl
 352+ 9B8D 10 FC            djnz 1B
 353+ 9B8F 22 CE 89         ld (Puntero_indice_mov),hl
 354+ 9B92
 355+ 9B92 AF               xor a
 356+ 9B93 32 D4 89         ld (Incrementa_puntero),a
 357+ 9B96 18 06            jr 4F
 358+ 9B98
 359+ 9B98 3A D5 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9B9B 32 D4 89         ld (Incrementa_puntero),a
 361+ 9B9E C9           4 ret
 362+ 9B9F
 363+ 9B9F              ; ----------------------------------------------------------------------
 364+ 9B9F              ;
 365+ 9B9F              ;   30/01/24
 366+ 9B9F              ;
 367+ 9B9F              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9B9F
 369+ 9B9F 3A 8A 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9BA2 CD 5E 8F         call Calcula_salto_en_BC
 371+ 9BA5 21 B8 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9BA8 A7               and a
 373+ 9BA9 ED 4A            adc hl,bc
 374+ 9BAB C9               ret
 375+ 9BAC
 376+ 9BAC              ; ----------------------------------------------------------------------
 377+ 9BAC              ;
 378+ 9BAC              ;   30/01/24
 379+ 9BAC              ;
 380+ 9BAC              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9BAC              ;
 382+ 9BAC              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9BAC
 384+ 9BAC 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9BAD 23               inc hl
 386+ 9BAE 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9BAF 69               ld l,c
 388+ 9BB0 60               ld h,b
 389+ 9BB1 22 AB 89         ld (Contador_de_mov_masticados),hl
 390+ 9BB4 C9               ret
 391+ 9BB5
# file closed: Movimiento.asm
1908  9BB5              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9BB5              ; ******************************************************************************************************************************************************************************************
   2+ 9BB5              ;
   3+ 9BB5              ;   21/07/23
   4+ 9BB5              ;
   5+ 9BB5              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9BB5              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9BB5              ;
   8+ 9BB5              ;
   9+ 9BB5              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9BB5              ;
  11+ 9BB5              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9BB5              ;               _ hacen las entidades hacia abajo.
  13+ 9BB5              ;
  14+ 9BB5              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9BB5              ;
  16+ 9BB5              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9BB5              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9BB5              ;
  19+ 9BB5              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9BB5              ;           _ la bala.
  21+ 9BB5              ;
  22+ 9BB5              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9BB5              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9BB5              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9BB5              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9BB5              ;           _ en el momento de generarse la bala)).
  27+ 9BB5
  28+ 9BB5              Genera_disparo
  29+ 9BB5
  30+ 9BB5              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9BB5              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9BB5              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9BB5              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9BB5              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9BB5              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9BB5              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9BB5
  38+ 9BB5              ; Exclusiones:
  39+ 9BB5
  40+ 9BB5 3A B7 89         ld a,(Vel_down)
  41+ 9BB8 47               ld b,a
  42+ 9BB9 3A 0B 8A         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9BBC B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9BBD D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9BBE 3A AE 89         ld a,(Columnas)
  46+ 9BC1 47               ld b,a
  47+ 9BC2 3A 8C 89         ld a,(Columns)
  48+ 9BC5 B8               cp b
  49+ 9BC6 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9BC7
  51+ 9BC7              ; ----- ----- -----
  52+ 9BC7
  53+ 9BC7 3A AD 89         ld a,(Ctrl_0)
  54+ 9BCA CB 77            bit 6,a
  55+ 9BCC 20 06            jr nz,14F
  56+ 9BCE
  57+ 9BCE 3A 92 89         ld a,(Coordenada_y)
  58+ 9BD1 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9BD3 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9BD4
  61+ 9BD4 21 31 81     14 ld hl,Indice_disparo
  62+ 9BD7 3A 93 89         ld a,(CTRL_DESPLZ)
  63+ 9BDA 4F               ld c,a
  64+ 9BDB 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9BDD              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9BDD              ;                                            ""        ""       "f9", B="1"
  67+ 9BDD              ;                                            ""        ""       "fb", B="2"
  68+ 9BDD              ;                                            ""        ""       "fb", B="3"
  69+ 9BDD A7               and a
  70+ 9BDE 28 10            jr z,1F
  71+ 9BE0 E6 01            and 1
  72+ 9BE2 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9BE3
  74+ 9BE3 79               ld a,c
  75+ 9BE4 16 F9            ld d,$f9
  76+ 9BE6 23           2 inc hl
  77+ 9BE7 23               inc hl
  78+ 9BE8 04               inc b
  79+ 9BE9 BA               cp d
  80+ 9BEA 28 04            jr z,1F
  81+ 9BEC 14               inc d
  82+ 9BED 14               inc d
  83+ 9BEE 18 F6            jr 2B
  84+ 9BF0
  85+ 9BF0 CD A6 8C     1 call Extrae_address
  86+ 9BF3 E5               push hl
  87+ 9BF4 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9BF6 DD 21 94 96  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9BFA
  90+ 9BFA              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9BFA              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9BFA
  93+ 9BFA 3A AD 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9BFD CB 77            bit 6,a
  95+ 9BFF 20 04            jr nz,19F
  96+ 9C01
  97+ 9C01 AF               xor a
  98+ 9C02 32 14 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9C05
 100+ 9C05 3A 9F 89     19 ld a,(Cuad_objeto)
 101+ 9C08 FE 02            cp 2
 102+ 9C0A 38 66            jr c,3F
 103+ 9C0C 28 64            jr z,3F
 104+ 9C0E
 105+ 9C0E              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9C0E
 107+ 9C0E E6 01            and 1
 108+ 9C10 28 30            jr z,4F
 109+ 9C12
 110+ 9C12              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9C12              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9C12              ;
 113+ 9C12              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9C12              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9C12              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9C12
 117+ 9C12 2A 8D 89     	ld hl,(Posicion_actual)
 118+ 9C15
 119+ 9C15              ;   Amadeus o entidad ???.
 120+ 9C15
 121+ 9C15 3A AD 89         ld a,(Ctrl_0)
 122+ 9C18 CB 77            bit 6,a
 123+ 9C1A 28 0A            jr z,8F
 124+ 9C1C
 125+ 9C1C              ; 	Dispara Amadeus.
 126+ 9C1C
 127+ 9C1C 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9C1E CD EA 92         call PreviousScan
 129+ 9C21 CD EA 92         call PreviousScan
 130+ 9C24
 131+ 9C24              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9C24              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9C24              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9C24              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9C24
 136+ 9C24 18 11            jr 10F
 137+ 9C26
 138+ 9C26              ; 	Dispara Entidad.
 139+ 9C26
 140+ 9C26 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9C29              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9C29
 143+ 9C29              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9C29              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9C29
 146+ 9C29 C5               push bc
 147+ 9C2A 06 10            ld b,16
 148+ 9C2C CD DB 92     9 call NextScan
 149+ 9C2F 10 FB            djnz 9B
 150+ 9C31 C1               pop bc
 151+ 9C32 CD 9C 9C         call Ajusta_disparo_parte_izquierda
 152+ 9C35 18 06            jr 17F
 153+ 9C37
 154+ 9C37              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9C37              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9C37              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9C37              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9C37
 159+ 9C37 CD 9C 9C     10 call Ajusta_disparo_parte_izquierda
 160+ 9C3A CD 11 9D         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9C3D              ;                                                      ; _al generar el disparo.
 162+ 9C3D
 163+ 9C3D              ; 	LLegados a este punto tendremos:
 164+ 9C3D              ;
 165+ 9C3D              ;       Puntero_objeto_disparo en IY.
 166+ 9C3D              ;       Rutinas_de_impresion en IX.
 167+ 9C3D              ;       Puntero_de_impresion en HL.
 168+ 9C3D              ;       Impacto/Dirección en BC.
 169+ 9C3D
 170+ 9C3D CD A4 9C     17 call Almacena_disparo
 171+ 9C40 18 52            jr 6F                                             ; RET.
 172+ 9C42
 173+ 9C42              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9C42              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9C42              ;
 176+ 9C42              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9C42              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9C42              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9C42
 180+ 9C42 2A 8D 89     4 ld hl,(Posicion_actual)
 181+ 9C45
 182+ 9C45              ;   Amadeus o entidad ???.
 183+ 9C45
 184+ 9C45 3A AD 89         ld a,(Ctrl_0)
 185+ 9C48 CB 77            bit 6,a
 186+ 9C4A 28 0A            jr z,11F
 187+ 9C4C
 188+ 9C4C              ; 	Dispara Amadeus.
 189+ 9C4C
 190+ 9C4C 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9C4E CD EA 92         call PreviousScan
 192+ 9C51 CD EA 92         call PreviousScan
 193+ 9C54
 194+ 9C54              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9C54              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9C54              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9C54              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9C54
 199+ 9C54 18 11            jr 13F
 200+ 9C56
 201+ 9C56              ; 	Dispara Entidad.
 202+ 9C56
 203+ 9C56 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9C59              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9C59
 206+ 9C59              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9C59              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9C59
 209+ 9C59 C5               push bc
 210+ 9C5A 06 10            ld b,16
 211+ 9C5C CD DB 92     12 call NextScan
 212+ 9C5F 10 FB            djnz 12B
 213+ 9C61 C1               pop bc
 214+ 9C62
 215+ 9C62 CD 95 9C         call Ajusta_disparo_parte_derecha
 216+ 9C65 18 06            jr 18F
 217+ 9C67
 218+ 9C67              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9C67              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9C67              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9C67              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9C67
 223+ 9C67 CD 95 9C     13 call Ajusta_disparo_parte_derecha
 224+ 9C6A CD 11 9D         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9C6D              ;                                                       ; _al generar el disparo.
 226+ 9C6D
 227+ 9C6D              ; LLegados a este punto tendremos:
 228+ 9C6D              ;
 229+ 9C6D              ;       Puntero_objeto_disparo en IY.
 230+ 9C6D              ;       Rutinas_de_impresion en IX.
 231+ 9C6D              ;       Puntero_de_impresion en HL.
 232+ 9C6D              ;       Impacto/Dirección en BC.
 233+ 9C6D
 234+ 9C6D CD A4 9C     18 call Almacena_disparo
 235+ 9C70 18 22            jr 6F                                               ; RET.
 236+ 9C72
 237+ 9C72              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9C72
 239+ 9C72 28 11        3 jr z,5F
 240+ 9C74
 241+ 9C74              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9C74              ;
 243+ 9C74              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9C74              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9C74              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9C74              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9C74
 248+ 9C74              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9C74              ;	   ""        ""       "f9", B="1"
 250+ 9C74              ;	   ""        ""       "fb", B="2"
 251+ 9C74              ; 	   ""        ""       "fb", B="3"
 252+ 9C74
 253+ 9C74 2A 8D 89     	ld hl,(Posicion_actual)
 254+ 9C77 CD DB 92     	call NextScan
 255+ 9C7A
 256+ 9C7A              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9C7A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9C7A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9C7A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9C7A
 261+ 9C7A CD 9C 9C         call Ajusta_disparo_parte_izquierda
 262+ 9C7D
 263+ 9C7D              ; 	No se produce impacto. B="$80"
 264+ 9C7D              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9C7D
 266+ 9C7D 01 80 80         ld bc,$8080
 267+ 9C80
 268+ 9C80              ; 	LLegados a este punto tendremos:
 269+ 9C80              ;
 270+ 9C80              ;       Puntero_objeto_disparo en IY.
 271+ 9C80              ;       Rutinas_de_impresion en IX.
 272+ 9C80              ;       Puntero_de_impresion en HL.
 273+ 9C80              ;       Impacto/Dirección en BC.
 274+ 9C80
 275+ 9C80 CD A4 9C         call Almacena_disparo
 276+ 9C83 18 0F            jr 6F                                           ; RET.
 277+ 9C85
 278+ 9C85              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9C85              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9C85              ;
 281+ 9C85              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9C85              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9C85              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9C85              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9C85
 286+ 9C85 2A 8D 89     5 ld hl,(Posicion_actual)
 287+ 9C88 CD DB 92     	call NextScan
 288+ 9C8B
 289+ 9C8B              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9C8B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9C8B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9C8B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9C8B
 294+ 9C8B CD 95 9C         call Ajusta_disparo_parte_derecha
 295+ 9C8E
 296+ 9C8E              ; 	No se produce impacto. B="$80"
 297+ 9C8E              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9C8E
 299+ 9C8E 01 80 80     15 ld bc,$8080
 300+ 9C91
 301+ 9C91              ; 	LLegados a este punto tendremos:
 302+ 9C91              ;
 303+ 9C91              ;       Puntero_objeto_disparo en IY.
 304+ 9C91              ;       Rutinas_de_impresion en IX.
 305+ 9C91              ;       Puntero_de_impresion en HL.
 306+ 9C91              ;       Impacto/Dirección en BC.
 307+ 9C91
 308+ 9C91 CD A4 9C         call Almacena_disparo
 309+ 9C94
 310+ 9C94 C9           6 ret
 311+ 9C95
 312+ 9C95              ; ----------------------------------------------------------------
 313+ 9C95              ;
 314+ 9C95              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9C95              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9C95              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9C95
 318+ 9C95 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9C96 FE 02            cp 2
 320+ 9C98 38 01            jr c,1F
 321+ 9C9A 23               inc hl
 322+ 9C9B C9           1 ret
 323+ 9C9C
 324+ 9C9C 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9C9D FE 01        	cp 1
 326+ 9C9F 20 01        	jr nz,1F
 327+ 9CA1 2B           	dec hl
 328+ 9CA2 2B           1 dec hl
 329+ 9CA3 C9               ret
 330+ 9CA4
 331+ 9CA4              ; ----------------------------------------------------------------
 332+ 9CA4              ;
 333+ 9CA4              ;   25/02/23
 334+ 9CA4              ;
 335+ 9CA4              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9CA4              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9CA4              ;
 338+ 9CA4              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9CA4              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9CA4
 341+ 9CA4              Almacena_disparo
 342+ 9CA4
 343+ 9CA4 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9CA5 F1               pop af
 345+ 9CA6 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9CA7
 347+ 9CA7 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9CA8 E6 01            and 1
 349+ 9CAA 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9CAC              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9CAC              ; 	Dispara AMADEUS.
 352+ 9CAC
 353+ 9CAC              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9CAC              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9CAC              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9CAC              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9CAC
 358+ 9CAC C5               push bc
 359+ 9CAD 01 68 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9CB0 2A FE 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9CB3 A7               and a
 362+ 9CB4 ED 42            sbc hl,bc
 363+ 9CB6 CC 2B 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9CB9 C1               pop bc
 365+ 9CBA 28 54            jr z,4F
 366+ 9CBC
 367+ 9CBC 2A FE 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9CBF 23               inc hl
 369+ 9CC0 23               inc hl
 370+ 9CC1 22 FE 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9CC4              ;                                                   ; _ Disparo_(+1).
 372+ 9CC4 18 18            jr 2F
 373+ 9CC6
 374+ 9CC6              ; Dispara una entidad.
 375+ 9CC6
 376+ 9CC6 C5           1 push bc
 377+ 9CC7 01 90 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9CCA 2A FC 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9CCD A7               and a
 380+ 9CCE ED 42            sbc hl,bc
 381+ 9CD0 CC 24 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9CD3 C1               pop bc
 383+ 9CD4 28 3A            jr z,4F
 384+ 9CD6
 385+ 9CD6 2A FC 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9CD9 23               inc hl
 387+ 9CDA 23               inc hl
 388+ 9CDB 22 FC 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9CDE              ;                                                   ; _ Disparo_(+1).
 390+ 9CDE CD A6 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9CE1              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9CE1              ;
 393+ 9CE1              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9CE1              ;                                                     Rutinas_de_impresion en IX.
 395+ 9CE1              ;                                                     Puntero_de_impresion en HL.
 396+ 9CE1              ;                                                     Impacto/Dirección en BC.
 397+ 9CE1
 398+ 9CE1 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9CE2 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9CE3 23               inc hl                                          ; _ al siguiente.
 401+ 9CE4 A7               and a
 402+ 9CE5 20 C0            jr nz,3B
 403+ 9CE7
 404+ 9CE7 08               ex af,af
 405+ 9CE8 ED 73 EB 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9CEC F9               ld sp,hl
 407+ 9CED
 408+ 9CED DD E5            push ix                                         ; Rutina de impresión.
 409+ 9CEF F5               push af                                         ; Puntero de impresión.
 410+ 9CF0 FD E5            push iy                                         ; Puntero objeto.
 411+ 9CF2 C5               push bc                                         ; Control.
 412+ 9CF3
 413+ 9CF3 ED 7B EB 89      ld sp,(Stack)
 414+ 9CF7
 415+ 9CF7              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9CF7
 417+ 9CF7 21 DA 89     	ld hl,Ctrl_1
 418+ 9CFA CB C6        	set 0,(hl)
 419+ 9CFC
 420+ 9CFC DD E5        	push ix
 421+ 9CFE E1               pop hl
 422+ 9CFF F5               push af
 423+ 9D00 DD E1            pop ix
 424+ 9D02
 425+ 9D02 CD BF 80     	call Guarda_foto_registros
 426+ 9D05
 427+ 9D05 21 DA 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9D08 CB 86        	res 0,(hl)
 429+ 9D0A
 430+ 9D0A              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9D0A              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9D0A
 433+ 9D0A CD 2B 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9D0D CD 24 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 9D10
 436+ 9D10 C9           4 ret
 437+ 9D11
 438+ 9D11              ; ----------------------------------------------------------------
 439+ 9D11              ;
 440+ 9D11              ;   4/3/23
 441+ 9D11              ;
 442+ 9D11              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9D11              ;   _ al generarse el disparo.
 444+ 9D11              ;
 445+ 9D11              ;       "$80" ..... No se produce colisión.
 446+ 9D11              ;       "$81" ..... Se produce colisión.
 447+ 9D11              ;
 448+ 9D11              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9D11              ;         _ que forman el disparo.
 450+ 9D11
 451+ 9D11
 452+ 9D11              Comprueba_Colision
 453+ 9D11
 454+ 9D11              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9D11
 456+ 9D11 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9D13 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9D14
 459+ 9D14 CD 4A 9D         call Modifica_H_Velocidad_disparo
 460+ 9D17
 461+ 9D17 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9D18 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9D1A 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9D1C
 465+ 9D1C 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9D1E CD 3A 9D         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9D21
 468+ 9D21 7B               ld a,e
 469+ 9D22 E6 01            and 1
 470+ 9D24 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9D26              ;                                                  ; _ para activar IMPACTO.
 472+ 9D26 E1               pop hl
 473+ 9D27 E5               push hl
 474+ 9D28 CD DB 92         call NextScan
 475+ 9D2B
 476+ 9D2B 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9D2C FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9D2E 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9D30              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9D30 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9D32 CD 3A 9D         call Bucle_2
 482+ 9D35
 483+ 9D35 43           1 ld b,e
 484+ 9D36 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9D37 FD E1            pop iy
 486+ 9D39 C9               ret
 487+ 9D3A
 488+ 9D3A              ; ---------- ----------
 489+ 9D3A
 490+ 9D3A 06 02        Bucle_2 ld b,2
 491+ 9D3C FD 7E 00     2 ld a,(iy)
 492+ 9D3F A6               and (hl)
 493+ 9D40 28 02            jr z,1F
 494+ 9D42 1E 81            ld e,$81
 495+ 9D44 23           1 inc hl
 496+ 9D45 FD 23            inc iy
 497+ 9D47 10 F3            djnz 2B
 498+ 9D49 C9               ret
 499+ 9D4A
 500+ 9D4A              ; ---------- ----------
 501+ 9D4A              ;
 502+ 9D4A              ;   21/7/23
 503+ 9D4A
 504+ 9D4A              Modifica_H_Velocidad_disparo
 505+ 9D4A
 506+ 9D4A 3A 0B 8A         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9D4D FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9D4F D0               ret nc                                         ; _ incrementamos H.
 509+ 9D50 24               inc h
 510+ 9D51
 511+ 9D51 C9               ret
 512+ 9D52
 513+ 9D52              ; -------------------------------------------------------------------------------------------------------------
 514+ 9D52              ;
 515+ 9D52              ;   04/12/23
 516+ 9D52              ;
 517+ 9D52              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9D52              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9D52              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9D52              ;
 521+ 9D52              ;   MODIFICA: HL,DE,B y A.
 522+ 9D52
 523+ 9D52              Genera_coordenadas_X
 524+ 9D52
 525+ 9D52              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9D52              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9D52
 528+ 9D52              ;   Limpiamos almacenes.
 529+ 9D52
 530+ 9D52 CD 83 9D         call Limpia_Coordenadas_X
 531+ 9D55
 532+ 9D55              ;   Almacenamos coordenadas X.
 533+ 9D55
 534+ 9D55              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9D55
 536+ 9D55 2A A7 89         ld hl,(Puntero_de_impresion)
 537+ 9D58 11 08 8A         ld de,Coordenadas_X_Entidad
 538+ 9D5B 06 02            ld b,2
 539+ 9D5D
 540+ 9D5D 3A 93 89         ld a,(CTRL_DESPLZ)
 541+ 9D60 A7               and a
 542+ 9D61 28 01            jr z,1F
 543+ 9D63 04               inc b
 544+ 9D64
 545+ 9D64 CD 7A 9D     1 call Guarda_coordenadas_X
 546+ 9D67
 547+ 9D67              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9D67
 549+ 9D67 2A 13 87         ld hl,(p.imp.amadeus)
 550+ 9D6A 11 05 8A         ld de,Coordenadas_X_Amadeus
 551+ 9D6D 06 02            ld b,2
 552+ 9D6F
 553+ 9D6F 3A FF 86         ld a,(ctrl_desplz_amadeus)
 554+ 9D72 A7               and a
 555+ 9D73 28 01            jr z,2F
 556+ 9D75 04               inc b
 557+ 9D76
 558+ 9D76 CD 7A 9D     2 call Guarda_coordenadas_X
 559+ 9D79
 560+ 9D79              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9D79
 562+ 9D79 C9               ret
 563+ 9D7A
 564+ 9D7A              ; ----- ----- ----- ----- -----
 565+ 9D7A
 566+ 9D7A 7D           Guarda_coordenadas_X  ld a,l
 567+ 9D7B E6 1F            and $1f
 568+ 9D7D 12           1 ld (de),a
 569+ 9D7E 3C               inc a
 570+ 9D7F 13               inc de
 571+ 9D80 10 FB            djnz 1B
 572+ 9D82 C9               ret
 573+ 9D83
 574+ 9D83 AF           Limpia_Coordenadas_X xor a
 575+ 9D84 06 06            ld b,6
 576+ 9D86 21 05 8A         ld hl,Coordenadas_X_Amadeus
 577+ 9D89 77           1 ld (hl),a
 578+ 9D8A 23               inc hl
 579+ 9D8B 10 FC            djnz 1B
 580+ 9D8D C9               ret
 581+ 9D8E
 582+ 9D8E              ; ----- ----- ----- ----- -----
 583+ 9D8E
 584+ 9D8E              Compara_coordenadas_X
 585+ 9D8E
 586+ 9D8E 06 03            ld b,3
 587+ 9D90 11 0A 8A         ld de,Coordenadas_X_Entidad+2
 588+ 9D93
 589+ 9D93 1A               ld a,(de)
 590+ 9D94 A7               and a
 591+ 9D95 20 01            jr nz,2F
 592+ 9D97 05               dec b
 593+ 9D98
 594+ 9D98 1B           2 dec de
 595+ 9D99 1B               dec de
 596+ 9D9A 21 05 8A         ld hl,Coordenadas_X_Amadeus
 597+ 9D9D
 598+ 9D9D D5           1 push de
 599+ 9D9E E5               push hl
 600+ 9D9F C5               push bc
 601+ 9DA0
 602+ 9DA0 CD AA 9D         call Comparando
 603+ 9DA3
 604+ 9DA3 C1               pop bc
 605+ 9DA4 E1               pop hl
 606+ 9DA5 D1               pop de
 607+ 9DA6
 608+ 9DA6 13               inc de
 609+ 9DA7 10 F4            djnz 1B
 610+ 9DA9
 611+ 9DA9 C9               ret
 612+ 9DAA
 613+ 9DAA              ; ----- ----- ----- ----- -----
 614+ 9DAA              ;
 615+ 9DAA              ;   4/12/23
 616+ 9DAA              ;
 617+ 9DAA              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9DAA
 619+ 9DAA 06 03        Comparando ld b,3
 620+ 9DAC 1A               ld a,(de)
 621+ 9DAD 4E           2 ld c,(hl)
 622+ 9DAE B9               cp c
 623+ 9DAF 28 04            jr z,1F
 624+ 9DB1 23               inc hl
 625+ 9DB2 10 F9            djnz 2B
 626+ 9DB4 C9               ret
 627+ 9DB5
 628+ 9DB5 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9DB7 32 A0 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9DBA 21 00 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9DBD CB D6            set 2,(hl)
 632+ 9DBF C9               ret
 633+ 9DC0
 634+ 9DC0              ; -----------------------------------------------------------------------
 635+ 9DC0              ;
 636+ 9DC0              ;   7/12/23
 637+ 9DC0              ;
 638+ 9DC0
 639+ 9DC0              Detecta_colision_nave_entidad
 640+ 9DC0
 641+ 9DC0              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9DC0
 643+ 9DC0 FD 2A 8F 89      ld iy,(Puntero_objeto)
 644+ 9DC4 2A A7 89         ld hl,(Puntero_de_impresion)
 645+ 9DC7
 646+ 9DC7 E5               push hl
 647+ 9DC8
 648+ 9DC8              ; ----- ----- -----
 649+ 9DC8 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9DCA 06 0A            ld b,10
 651+ 9DCC CD FC 9D     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9DCF 7B               ld a,e
 653+ 9DD0 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9DD2 38 0E            jr c,3F
 655+ 9DD4
 656+ 9DD4              ; LLegados a este punto:
 657+ 9DD4              ;
 658+ 9DD4              ;   HAY COLISIÓN !!!!!.
 659+ 9DD4              ;
 660+ 9DD4              ;   .db (Impacto) de Amadeus a "1".
 661+ 9DD4              ;   SET el bit3 de (Impacto2).
 662+ 9DD4              ;
 663+ 9DD4              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9DD4
 665+ 9DD4 21 A0 89         ld hl,Impacto
 666+ 9DD7 36 01            ld (hl),1
 667+ 9DD9 21 00 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9DDC CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9DDE CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9DE0
 671+ 9DE0 18 18            jr 1F
 672+ 9DE2
 673+ 9DE2              ; -----
 674+ 9DE2
 675+ 9DE2 E1           3 pop hl
 676+ 9DE3 CD DB 92         call NextScan
 677+ 9DE6 E5               push hl
 678+ 9DE7 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9DE8 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9DEA 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9DEC 30 0C            jr nc,1F
 682+ 9DEE              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9DEE 10 DC            djnz 2B
 684+ 9DF0
 685+ 9DF0              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9DF0
 687+ 9DF0              ; LLegados a este punto:
 688+ 9DF0              ;
 689+ 9DF0              ;   NO HAY COLISIÓN !!!!!.
 690+ 9DF0              ;
 691+ 9DF0              ;   .db (Impacto) de Amadeus a "0".
 692+ 9DF0              ;   RES el bit2 de (Impacto2).
 693+ 9DF0              ;
 694+ 9DF0              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9DF0              ;   Lo colocamos a "0".
 696+ 9DF0
 697+ 9DF0 21 00 8A         ld hl,Impacto2
 698+ 9DF3 CB 96            res 2,(hl)
 699+ 9DF5 2A 01 8A         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9DF8 36 00            ld (hl),0
 701+ 9DFA
 702+ 9DFA E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9DFB C9               ret
 704+ 9DFC
 705+ 9DFC               ; ---------- ----------
 706+ 9DFC
 707+ 9DFC C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9DFD 3A 8C 89         ld a,(Columns)
 709+ 9E00 47               ld b,a
 710+ 9E01 FD 7E 00     2 ld a,(iy)
 711+ 9E04 BE               cp (hl)
 712+ 9E05 28 01            jr z,1F
 713+ 9E07
 714+ 9E07 1C               inc e
 715+ 9E08
 716+ 9E08 23           1 inc hl
 717+ 9E09 FD 23            inc iy
 718+ 9E0B 10 F4            djnz 2B
 719+ 9E0D C1               pop bc
 720+ 9E0E C9               ret
 721+ 9E0F
 722+ 9E0F              ; -------------------------------------------------------------------------------------------------------------
 723+ 9E0F              ;
 724+ 9E0F              ;   13/03/23
 725+ 9E0F              ;
 726+ 9E0F              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9E0F              ;
 728+ 9E0F              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9E0F
 730+ 9E0F 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9E12 7E               ld a,(hl)
 732+ 9E13 A7               and a
 733+ 9E14 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9E15
 735+ 9E15 44               ld b,h
 736+ 9E16 4D               ld c,l
 737+ 9E17 2A F3 89         ld hl,(Stack_snapshot_disparos)
 738+ 9E1A E5               push hl
 739+ 9E1B A7               and a
 740+ 9E1C ED 42            sbc hl,bc
 741+ 9E1E E5               push hl
 742+ 9E1F C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9E20
 744+ 9E20 E1               pop hl
 745+ 9E21 54               ld d,h
 746+ 9E22 5D               ld e,l
 747+ 9E23 1B               dec de
 748+ 9E24 ED B8            lddr                                                ; Limpiamos.
 749+ 9E26
 750+ 9E26 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9E29 22 F3 89         ld (Stack_snapshot_disparos),hl
 752+ 9E2C
 753+ 9E2C C9               ret
 754+ 9E2D
 755+ 9E2D              ; -------------------------------------------------------------------------------------------------------------
 756+ 9E2D              ;
 757+ 9E2D              ;   18/07/23
 758+ 9E2D              ;
 759+ 9E2D
 760+ 9E2D              Motor_de_disparos
 761+ 9E2D
 762+ 9E2D              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9E2D
 764+ 9E2D 01 7A 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9E30 2A FE 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9E33
 767+ 9E33 CD A6 8C     2 call Extrae_address
 768+ 9E36 7E               ld a,(hl)
 769+ 9E37 A7               and a
 770+ 9E38 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9E3A
 772+ 9E3A              ; ----- ----- ----- ----- ----- -----
 773+ 9E3A
 774+ 9E3A C5               push bc
 775+ 9E3B CD FF 9E         call foto_disparo_a_borrar
 776+ 9E3E
 777+ 9E3E              ; Existe colisión con este disparo???
 778+ 9E3E
 779+ 9E3E 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9E3F 7E               ld a,(hl)
 781+ 9E40 2B               dec hl
 782+ 9E41 E6 01            and 1
 783+ 9E43 28 1D            jr z,9F
 784+ 9E45
 785+ 9E45              ;   En este punto:
 786+ 9E45              ;
 787+ 9E45              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9E45              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9E45              ;   _con la entidad).
 790+ 9E45              ;
 791+ 9E45              ;   Disparo_2A defw 0                                ; Control.
 792+ 9E45              ;    defw 0                                          ; Puntero objeto.
 793+ 9E45              ;    defw 0                                          ; Puntero de impresión.
 794+ 9E45              ;    defw 0                                          ; Rutina de impresión.
 795+ 9E45
 796+ 9E45 E5               push hl
 797+ 9E46
 798+ 9E46 06 04            ld b,4
 799+ 9E48 23           19 inc hl
 800+ 9E49 10 FD            djnz 19B
 801+ 9E4B
 802+ 9E4B CD A6 8C         call Extrae_address
 803+ 9E4E CD E2 A0         call Genera_coordenadas_disparo
 804+ 9E51
 805+ 9E51              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9E51
 807+ 9E51 21 03 8A         ld hl,Coordenadas_disparo_certero
 808+ 9E54 72               ld (hl),d
 809+ 9E55 23               inc hl
 810+ 9E56 73               ld (hl),e
 811+ 9E57
 812+ 9E57              ; Elimino el disparo de la base de datos.
 813+ 9E57
 814+ 9E57 E1               pop hl
 815+ 9E58 CD 7E 9F         call Elimina_disparo_de_base_de_datos
 816+ 9E5B 21 00 8A         ld hl,Impacto2
 817+ 9E5E CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9E60
 819+ 9E60 18 06            jr 11F
 820+ 9E62
 821+ 9E62 CD 28 9F     9 call Mueve_disparo
 822+ 9E65 CD FF 9E         call foto_disparo_a_borrar
 823+ 9E68
 824+ 9E68 C1           11 pop bc
 825+ 9E69 18 04            jr 7F
 826+ 9E6B
 827+ 9E6B              ; ----- ----- ----- ----- ----- -----
 828+ 9E6B
 829+ 9E6B ED 42        1 sbc hl,bc
 830+ 9E6D 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9E6F
 832+ 9E6F 2A FE 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9E72 23               inc hl
 834+ 9E73 23               inc hl
 835+ 9E74 22 FE 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9E77 18 BA            jr 2B
 837+ 9E79
 838+ 9E79 CD 2B 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9E7C              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9E7C
 841+ 9E7C              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9E7C
 843+ 9E7C 01 E2 86         ld bc,Disparo_11
 844+ 9E7F 2A FC 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9E82
 846+ 9E82 CD A6 8C     5 call Extrae_address
 847+ 9E85 7E               ld a,(hl)
 848+ 9E86 A7               and a
 849+ 9E87 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9E89
 851+ 9E89              ; ----- ----- ----- ----- ----- -----
 852+ 9E89
 853+ 9E89 C5               push bc
 854+ 9E8A CD FF 9E         call foto_disparo_a_borrar
 855+ 9E8D
 856+ 9E8D              ; Existe colisión con este disparo???
 857+ 9E8D
 858+ 9E8D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9E8E 7E               ld a,(hl)
 860+ 9E8F 2B               dec hl
 861+ 9E90 E6 01            and 1
 862+ 9E92 28 4D            jr z,10F
 863+ 9E94
 864+ 9E94              ;! La colisión se produce con Amadeus???
 865+ 9E94              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9E94
 867+ 9E94 E5               push hl
 868+ 9E95
 869+ 9E95 06 04            ld b,4
 870+ 9E97 23           16 inc hl
 871+ 9E98 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9E9A
 873+ 9E9A CD A6 8C         call Extrae_address
 874+ 9E9D CD E2 A0         call Genera_coordenadas_disparo
 875+ 9EA0
 876+ 9EA0 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9EA1 FE 16            cp $16
 878+ 9EA3 38 2A            jr c,15F
 879+ 9EA5
 880+ 9EA5
 881+ 9EA5              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9EA5
 883+ 9EA5 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9EA6
 885+ 9EA6              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9EA6
 887+ 9EA6 2A 13 87         ld hl,(p.imp.amadeus)
 888+ 9EA9
 889+ 9EA9              ; Coordenada X de Amadeus en D.
 890+ 9EA9
 891+ 9EA9 7D               ld a,l
 892+ 9EAA E6 1F            and $1F
 893+ 9EAC 57               ld d,a
 894+ 9EAD
 895+ 9EAD 21 FE 86         ld hl,Amadeus_db+8
 896+ 9EB0 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9EB1
 898+ 9EB1 21 05 8A         ld hl,Coordenadas_X_Amadeus
 899+ 9EB4 CD 7A 9D         call Guarda_coordenadas_X
 900+ 9EB7
 901+ 9EB7 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9EB8
 903+ 9EB8              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9EB8
 905+ 9EB8 06 02            ld b,2
 906+ 9EBA C5           20 push bc
 907+ 9EBB
 908+ 9EBB 06 03            ld b,3
 909+ 9EBD 21 05 8A         ld hl,Coordenadas_X_Amadeus
 910+ 9EC0 7E           18 ld a,(hl)
 911+ 9EC1 BA               cp d
 912+ 9EC2 20 04            jr nz,17F
 913+ 9EC4
 914+ 9EC4              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9EC4
 916+ 9EC4 C1               pop bc
 917+ 9EC5 E1               pop hl
 918+ 9EC6 18 0D            jr 14F
 919+ 9EC8
 920+ 9EC8 23           17 inc hl
 921+ 9EC9 10 F5            djnz 18B
 922+ 9ECB
 923+ 9ECB 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9ECC
 925+ 9ECC C1               pop bc
 926+ 9ECD 10 EB            djnz 20B
 927+ 9ECF
 928+ 9ECF
 929+ 9ECF              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9ECF              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9ECF
 932+ 9ECF E1           15 pop hl
 933+ 9ED0 23               inc hl
 934+ 9ED1 35               dec (hl)
 935+ 9ED2 2B               dec hl
 936+ 9ED3 18 0C            jr 10F
 937+ 9ED5
 938+ 9ED5              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9ED5              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9ED5
 941+ 9ED5 E5           14 push hl
 942+ 9ED6 CD 7E 9F         call Elimina_disparo_de_base_de_datos
 943+ 9ED9 21 00 8A         ld hl,Impacto2
 944+ 9EDC CB CE            set 1,(hl)
 945+ 9EDE E1               pop hl
 946+ 9EDF 18 06            jr 12F
 947+ 9EE1
 948+ 9EE1              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9EE1
 950+ 9EE1 CD 28 9F     10 call Mueve_disparo
 951+ 9EE4 CD FF 9E         call foto_disparo_a_borrar
 952+ 9EE7 C1           12 pop bc
 953+ 9EE8
 954+ 9EE8 18 04            jr 8F
 955+ 9EEA
 956+ 9EEA              ; ----- ----- ----- ----- ----- -----
 957+ 9EEA
 958+ 9EEA ED 42        4 sbc hl,bc
 959+ 9EEC 28 0A            jr z,6F
 960+ 9EEE
 961+ 9EEE 2A FC 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9EF1 23               inc hl
 963+ 9EF2 23               inc hl
 964+ 9EF3 22 FC 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9EF6 18 8A            jr 5B
 966+ 9EF8
 967+ 9EF8 CD 24 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9EFB CD 83 9D         call Limpia_Coordenadas_X
 969+ 9EFE C9               ret
 970+ 9EFF
 971+ 9EFF              ; ------------------------------------------------------------------
 972+ 9EFF
 973+ 9EFF              foto_disparo_a_borrar
 974+ 9EFF
 975+ 9EFF 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9F00 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9F01 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9F02
 979+ 9F02 E5               push hl
 980+ 9F03 23               inc hl
 981+ 9F04 23               inc hl
 982+ 9F05 ED 73 EB 89      ld (Stack),sp
 983+ 9F09 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9F0A FD E1            pop iy
 985+ 9F0C DD E1            pop ix
 986+ 9F0E E1               pop hl
 987+ 9F0F ED 7B EB 89      ld sp,(Stack)
 988+ 9F13 3A DA 89         ld a,(Ctrl_1)
 989+ 9F16 CB C7            set 0,a
 990+ 9F18 32 DA 89         ld (Ctrl_1),a
 991+ 9F1B CD BF 80         call Guarda_foto_registros
 992+ 9F1E 3A DA 89         ld a,(Ctrl_1)
 993+ 9F21 CB 87            res 0,a
 994+ 9F23 32 DA 89         ld (Ctrl_1),a
 995+ 9F26 E1               pop hl
 996+ 9F27 C9               ret
 997+ 9F28
 998+ 9F28              ;---------------------------------------------------
 999+ 9F28              ;
1000+ 9F28              ;   18/07/23
1001+ 9F28              ;
1002+ 9F28
1003+ 9F28              Mueve_disparo
1004+ 9F28
1005+ 9F28              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9F28              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9F28              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9F28
1009+ 9F28 E5               push hl
1010+ 9F29
1011+ 9F29 7E               ld a,(hl)
1012+ 9F2A
1013+ 9F2A 06 04            ld b,4
1014+ 9F2C 23           1 inc hl
1015+ 9F2D 10 FD            djnz 1B
1016+ 9F2F
1017+ 9F2F              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9F2F
1019+ 9F2F CD A6 8C         call Extrae_address
1020+ 9F32
1021+ 9F32 E6 01            and 1
1022+ 9F34 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9F36
1024+ 9F36              ; Disparo hacia arriba, (Amadeus).
1025+ 9F36
1026+ 9F36              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9F36              ; _ de la dificultad.
1028+ 9F36
1029+ 9F36 CD EA 92         call PreviousScan
1030+ 9F39 CD EA 92         call PreviousScan
1031+ 9F3C CD EA 92         call PreviousScan
1032+ 9F3F CD EA 92         call PreviousScan
1033+ 9F42
1034+ 9F42              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9F42
1036+ 9F42 7C               ld a,h
1037+ 9F43 FE 40            cp $40
1038+ 9F45 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9F47
1040+ 9F47              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9F47
1042+ 9F47 EB               ex de,hl
1043+ 9F48 06 04            ld b,4
1044+ 9F4A 2B           6 dec hl
1045+ 9F4B 10 FD            djnz 6B
1046+ 9F4D
1047+ 9F4D CD 7E 9F         call Elimina_disparo_de_base_de_datos
1048+ 9F50 E1               pop hl
1049+ 9F51 18 10            jr 7F
1050+ 9F53
1051+ 9F53              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9F53              ; HL contiene el puntero de impresión del disparo.
1053+ 9F53              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9F53
1055+ 9F53 D5           3 push de
1056+ 9F54 C5               push bc
1057+ 9F55
1058+ 9F55 CD 11 9D         call Comprueba_Colision
1059+ 9F58
1060+ 9F58              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9F58
1062+ 9F58 78               ld a,b
1063+ 9F59
1064+ 9F59 C1               pop bc
1065+ 9F5A D1               pop de
1066+ 9F5B
1067+ 9F5B EB               ex de,hl
1068+ 9F5C
1069+ 9F5C 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9F5D 23               inc hl                                      ; _ movimiento.
1071+ 9F5E 72               ld (hl),d
1072+ 9F5F
1073+ 9F5F E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9F60
1075+ 9F60 23               inc hl                                      ; _ en curso.
1076+ 9F61 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9F62 2B               dec hl
1078+ 9F63
1079+ 9F63 C9           7 ret
1080+ 9F64
1081+ 9F64              ; Disparo hacia abajo, (Entidad).
1082+ 9F64
1083+ 9F64 3A 0B 8A     2 ld a,(Velocidad_disparo_entidades)
1084+ 9F67 47               ld b,a
1085+ 9F68
1086+ 9F68 CD DB 92     4 call NextScan
1087+ 9F6B 10 FB            djnz 4B
1088+ 9F6D
1089+ 9F6D              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9F6D
1091+ 9F6D 7C               ld a,h
1092+ 9F6E FE 58            cp $58
1093+ 9F70 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9F72
1095+ 9F72 EB               ex de,hl
1096+ 9F73 06 04            ld b,4
1097+ 9F75 2B           5 dec hl
1098+ 9F76 10 FD            djnz 5B
1099+ 9F78
1100+ 9F78 CD 7E 9F         call Elimina_disparo_de_base_de_datos
1101+ 9F7B E1               pop hl
1102+ 9F7C 18 E5            jr 7B
1103+ 9F7E
1104+ 9F7E              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9F7E
1106+ 9F7E 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9F81 AF               xor a
1108+ 9F82 77               ld (hl),a
1109+ 9F83 54               ld d,h
1110+ 9F84 5D               ld e,l
1111+ 9F85 13               inc de
1112+ 9F86 ED B0            ldir
1113+ 9F88 C9               ret
1114+ 9F89
1115+ 9F89              ; -----------------------------------------------------------------
1116+ 9F89              ;
1117+ 9F89              ;   7/12/23
1118+ 9F89              ;
1119+ 9F89
1120+ 9F89 3A 00 8A     Selector_de_impactos ld a,(Impacto2)
1121+ 9F8C A7               and a
1122+ 9F8D C8               ret z
1123+ 9F8E
1124+ 9F8E              ; Analizamos si hay impacto por disparos.
1125+ 9F8E
1126+ 9F8E              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9F8E
1128+ 9F8E CB 4F            bit 1,a
1129+ 9F90 28 07            jr z,1F
1130+ 9F92
1131+ 9F92 21 0F 87         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9F95 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9F97 18 08            jr 2F
1134+ 9F99
1135+ 9F99 CB 47        1 bit 0,a
1136+ 9F9B C8               ret z
1137+ 9F9C
1138+ 9F9C              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9F9C
1140+ 9F9C 21 DA 89         ld hl,Ctrl_1
1141+ 9F9F CB D6            set 2,(hl)
1142+ 9FA1
1143+ 9FA1 C9           2 ret
1144+ 9FA2
1145+ 9FA2              ; -----------------------------------------------------------------
1146+ 9FA2              ;
1147+ 9FA2              ;   25/04/23
1148+ 9FA2              ;
1149+ 9FA2
1150+ 9FA2              Determina_resultado_comparativa
1151+ 9FA2
1152+ 9FA2              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9FA2              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9FA2              ;
1155+ 9FA2              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9FA2              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9FA2              ;
1158+ 9FA2              ;   SBC HL,DE
1159+ 9FA2
1160+ 9FA2              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9FA2              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9FA2
1163+ 9FA2              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9FA2              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9FA2
1166+ 9FA2
1167+ 9FA2 3A 9F 89         ld a,(Cuad_objeto)
1168+ 9FA5 FE 02            cp 2
1169+ 9FA7 28 26            jr z,2F
1170+ 9FA9 38 24            jr c,2F
1171+ 9FAB
1172+ 9FAB              ; Cuadrantes 3º y 4º
1173+ 9FAB
1174+ 9FAB E6 01            and 1
1175+ 9FAD 28 10            jr z,4F
1176+ 9FAF
1177+ 9FAF              ; Cuadrante 3º
1178+ 9FAF
1179+ 9FAF 7C               ld a,h
1180+ 9FB0 06 00            ld b,0
1181+ 9FB2
1182+ 9FB2 CD 3D A0         call Compara_cositas_H3
1183+ 9FB5
1184+ 9FB5 04               inc b
1185+ 9FB6 05               dec b
1186+ 9FB7 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9FB8
1188+ 9FB8 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9FB9 06 00            ld b,0
1190+ 9FBB
1191+ 9FBB CD 4F A0         call Compara_cositas_L3
1192+ 9FBE C9               ret
1193+ 9FBF
1194+ 9FBF              ; Cuadrante 4º
1195+ 9FBF
1196+ 9FBF 7C           4 ld a,h
1197+ 9FC0 06 00            ld b,0
1198+ 9FC2
1199+ 9FC2 CD 61 A0         call Compara_cositas_H4
1200+ 9FC5
1201+ 9FC5 04               inc b
1202+ 9FC6 05               dec b
1203+ 9FC7 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9FC8
1205+ 9FC8 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9FC9 06 00            ld b,0
1207+ 9FCB
1208+ 9FCB CD 77 A0         call Compara_cositas_L4
1209+ 9FCE C9               ret
1210+ 9FCF
1211+ 9FCF              ; Cuadrantes 1º y 2º.
1212+ 9FCF
1213+ 9FCF 28 10        2 jr z,3F
1214+ 9FD1
1215+ 9FD1              ; 1er Cuadrante
1216+ 9FD1
1217+ 9FD1 7C               ld a,h
1218+ 9FD2 06 00            ld b,0
1219+ 9FD4
1220+ 9FD4 CD 15 A0         call Compara_cositas_H1
1221+ 9FD7
1222+ 9FD7 04               inc b
1223+ 9FD8 05               dec b
1224+ 9FD9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9FDA
1226+ 9FDA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9FDB 06 00            ld b,0
1228+ 9FDD
1229+ 9FDD CD 2B A0         call Compara_cositas_L1
1230+ 9FE0 C9               ret
1231+ 9FE1
1232+ 9FE1
1233+ 9FE1              ; 2º Cuadrante
1234+ 9FE1
1235+ 9FE1 7C           3 ld a,h
1236+ 9FE2 06 00            ld b,0
1237+ 9FE4
1238+ 9FE4 CD F1 9F         call Compara_cositas_H2
1239+ 9FE7
1240+ 9FE7 04               inc b
1241+ 9FE8 05               dec b
1242+ 9FE9 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9FEA
1244+ 9FEA 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9FEB 06 00            ld b,0
1246+ 9FED
1247+ 9FED CD 03 A0         call Compara_cositas_L2
1248+ 9FF0 C9               ret
1249+ 9FF1
1250+ 9FF1 A7           Compara_cositas_H2 and a
1251+ 9FF2 28 0D            jr z,1F
1252+ 9FF4              ;    cp $fd
1253+ 9FF4              ;    jr z,1F
1254+ 9FF4              ;    cp $fe
1255+ 9FF4              ;    jr z,1F
1256+ 9FF4 FE FF            cp $ff
1257+ 9FF6 28 09            jr z,1F
1258+ 9FF8 FE 01            cp $01
1259+ 9FFA 28 05            jr z,1F
1260+ 9FFC FE 02            cp $02
1261+ 9FFE 28 01            jr z,1F
1262+ A000 C0               ret nz
1263+ A001 04           1 inc b
1264+ A002 C9               ret
1265+ A003
1266+ A003 A7           Compara_cositas_L2 and a
1267+ A004 28 0D            jr z,1F
1268+ A006              ;    cp $fd
1269+ A006              ;    jr z,1F
1270+ A006 FE FE            cp $fe
1271+ A008 28 09            jr z,1F
1272+ A00A FE FF            cp $ff
1273+ A00C 28 05            jr z,1F
1274+ A00E FE 01            cp $01
1275+ A010 28 01            jr z,1F
1276+ A012              ;    cp $02
1277+ A012              ;    jr z,1F
1278+ A012 C0               ret nz
1279+ A013 04           1 inc b
1280+ A014 C9               ret
1281+ A015
1282+ A015 A7           Compara_cositas_H1 and a
1283+ A016 28 11            jr z,1F
1284+ A018              ;    cp $fd
1285+ A018              ;    jr z,1F
1286+ A018              ;    cp $fe
1287+ A018              ;    jr z,1F
1288+ A018 FE FF            cp $ff
1289+ A01A 28 0D            jr z,1F
1290+ A01C FE 01            cp $01
1291+ A01E 28 09            jr z,1F
1292+ A020 FE 02            cp $02
1293+ A022 28 05            jr z,1F
1294+ A024 FE 03            cp $03
1295+ A026 28 01            jr z,1F
1296+ A028 C0               ret nz
1297+ A029 04           1 inc b
1298+ A02A C9               ret
1299+ A02B
1300+ A02B A7           Compara_cositas_L1 and a
1301+ A02C 28 0D            jr z,1F
1302+ A02E              ;    cp $fd
1303+ A02E              ;    jr z,1F
1304+ A02E              ;    cp $fe
1305+ A02E              ;    jr z,1F
1306+ A02E              ;    cp $ff
1307+ A02E              ;    jr z,1F
1308+ A02E FE 01            cp $01
1309+ A030 28 09            jr z,1F
1310+ A032 FE 02            cp $02
1311+ A034 28 05            jr z,1F
1312+ A036 FE 03            cp $03
1313+ A038 28 01            jr z,1F
1314+ A03A C0               ret nz
1315+ A03B 04           1 inc b
1316+ A03C C9               ret
1317+ A03D
1318+ A03D A7           Compara_cositas_H3 and a
1319+ A03E 28 0D            jr z,1F
1320+ A040              ;    cp $fd
1321+ A040              ;    jr z,1F
1322+ A040 FE FE            cp $fe
1323+ A042 28 09            jr z,1F
1324+ A044 FE FF            cp $ff
1325+ A046 28 05            jr z,1F
1326+ A048 FE 01            cp $01
1327+ A04A 28 01            jr z,1F
1328+ A04C              ;    cp $02
1329+ A04C              ;    jr z,1F
1330+ A04C              ;    cp $03
1331+ A04C              ;    jr z,1F
1332+ A04C C0               ret nz
1333+ A04D 04           1 inc b
1334+ A04E C9               ret
1335+ A04F
1336+ A04F A7           Compara_cositas_L3 and a
1337+ A050 28 0D            jr z,1F
1338+ A052              ;    cp $fd
1339+ A052              ;    jr z,1F
1340+ A052              ;    cp $fe
1341+ A052              ;    jr z,1F
1342+ A052              ;    cp $ff
1343+ A052              ;    jr z,1F
1344+ A052 FE 01            cp $01
1345+ A054 28 09            jr z,1F
1346+ A056 FE 02            cp $02
1347+ A058 28 05            jr z,1F
1348+ A05A FE 03            cp $03
1349+ A05C 28 01            jr z,1F
1350+ A05E C0               ret nz
1351+ A05F 04           1 inc b
1352+ A060 C9               ret
1353+ A061
1354+ A061 A7           Compara_cositas_H4 and a
1355+ A062 28 11            jr z,1F
1356+ A064 FE FD            cp $fd
1357+ A066 28 0D            jr z,1F
1358+ A068 FE FE            cp $fe
1359+ A06A 28 09            jr z,1F
1360+ A06C FE FF            cp $ff
1361+ A06E 28 05            jr z,1F
1362+ A070 FE 01            cp $01
1363+ A072 28 01            jr z,1F
1364+ A074              ;    cp $02
1365+ A074              ;    jr z,1F
1366+ A074              ;    cp $03
1367+ A074              ;    jr z,1F
1368+ A074 C0               ret nz
1369+ A075 04           1 inc b
1370+ A076 C9               ret
1371+ A077
1372+ A077 A7           Compara_cositas_L4 and a
1373+ A078 28 0D            jr z,1F
1374+ A07A              ;    cp $fd
1375+ A07A              ;    jr z,1F
1376+ A07A FE FE            cp $fe
1377+ A07C 28 09            jr z,1F
1378+ A07E FE FF            cp $ff
1379+ A080 28 05            jr z,1F
1380+ A082 FE 01            cp $01
1381+ A084 28 01            jr z,1F
1382+ A086              ;    cp $02
1383+ A086              ;    jr z,1F
1384+ A086              ;    cp $03
1385+ A086              ;    jr z,1F
1386+ A086 C0               ret nz
1387+ A087 04           1 inc b
1388+ A088 C9               ret
# file closed: Disparo.asm
1909  A089              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ A089              ; Relojes y temporizaciones.
   2+ A089
   3+ A089              ; ------------------------------------------------------
   4+ A089              ;
   5+ A089              ;	16/7/23
   6+ A089              ;
   7+ A089              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ A089              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ A089              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ A089              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ A089              ;
  12+ A089              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ A089              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ A089
  15+ A089              ; Disparo_entidad db 1
  16+ A089              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ A089              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ A089
  19+ A089              Habilita_disparos
  20+ A089
  21+ A089 7E           	ld a,(hl)
  22+ A08A A7           	and a
  23+ A08B C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ A08C
  25+ A08C EB           	ex de,hl
  26+ A08D
  27+ A08D 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ A08E C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ A08F
  30+ A08F              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ A08F
  32+ A08F 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ A090 7E           	ld a,(hl)
  34+ A091 23           	inc hl
  35+ A092 77           	ld (hl),a
  36+ A093
  37+ A093 EB           	ex de,hl						; Habilitamos disparo.
  38+ A094 3E 01        	ld a,1
  39+ A096 77           	ld (hl),a
  40+ A097 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1910  A098              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ A098              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ A098              ;
   3+ A098              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ A098              ;
   5+ A098              ; *****************************************************************************************************************************************************************************************
   6+ A098              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ A098
   8+ A098 7C           calcula_tercio ld a,h
   9+ A099 E6 18        	and $18
  10+ A09B CB 2F        	sra a
  11+ A09D CB 2F        	sra a
  12+ A09F CB 2F        	sra a
  13+ A0A1 C9           	ret
  14+ A0A2
# file closed: calcula_tercio.asm
1911  A0A2              	include "Cls.asm"
# file opened: Cls.asm
   1+ A0A2              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ A0A2              ;
   3+ A0A2              ;
   4+ A0A2              ;	CLS.
   5+ A0A2              ;
   6+ A0A2              ;	Limpia la pantalla y define sus atributos.
   7+ A0A2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ A0A2              ;
   9+ A0A2              ;	COLORES: 0 ..... NEGRO
  10+ A0A2              ;    		 1 ..... AZUL
  11+ A0A2              ; 			 2 ..... ROJO
  12+ A0A2              ;			 3 ..... MAGENTA
  13+ A0A2              ; 			 4 ..... VERDE
  14+ A0A2              ; 			 5 ..... CIAN
  15+ A0A2              ;			 6 ..... AMARILLO
  16+ A0A2              ; 			 7 ..... BLANCO
  17+ A0A2              ;
  18+ A0A2              ;	INPUT: A contiene los atributos de pantalla.
  19+ A0A2              ;
  20+ A0A2              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ A0A2
  22+ A0A2
  23+ A0A2 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ A0A5 11 01 40     	LD DE,$4001
  25+ A0A8 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ A0AB 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ A0AD ED B0        	LDIR
  28+ A0AF 01 FF 02     	LD BC,767
  29+ A0B2 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ A0B3 ED B0        	LDIR
  31+ A0B5 C9           	ret
  32+ A0B6
# file closed: Cls.asm
1912  A0B6              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ A0B6              ; ------------------------------------------------------------------------
   2+ A0B6              ;
   3+ A0B6              ;	30/1/24
   4+ A0B6              ;
   5+ A0B6              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ A0B6              ;	Fila superior "0", Columna izquierda "0".
   7+ A0B6              ;
   8+ A0B6              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ A0B6              ;
  10+ A0B6              ;	Modifica: A,BC y DE.
  11+ A0B6
  12+ A0B6 7D           Genera_coordenadas ld a,l
  13+ A0B7 E6 1F        	and $1f
  14+ A0B9 32 91 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ A0BC
  16+ A0BC 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ A0BD FE 40        	cp $40
  18+ A0BF 38 1C        	jr c,4F
  19+ A0C1
  20+ A0C1 CD 98 A0     	call calcula_tercio
  21+ A0C4 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ A0C5
  23+ A0C5 1E 00        	ld e,0
  24+ A0C7 7D           	ld a,l
  25+ A0C8 E6 E0        	and $e0
  26+ A0CA 28 01        	jr z,1F
  27+ A0CC 04           	inc b
  28+ A0CD
  29+ A0CD 04           1 inc b
  30+ A0CE 05           	dec b
  31+ A0CF 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ A0D1              ;														; _ , salimos.
  33+ A0D1 1C           3 inc e
  34+ A0D2 D6 20        	sub 32
  35+ A0D4 20 FB        	jr nz,3B
  36+ A0D6 10 F5        	djnz 1B
  37+ A0D8
  38+ A0D8 7B           2 ld a,e
  39+ A0D9 32 92 89     	ld (Coordenada_y),a
  40+ A0DC C9           	ret
  41+ A0DD
  42+ A0DD AF           4 xor a
  43+ A0DE 32 92 89     	ld (Coordenada_y),a
  44+ A0E1 C9           	ret
  45+ A0E2
  46+ A0E2              ; ------------------------------------------------------------------------
  47+ A0E2              ;	28/05/23
  48+ A0E2              ;
  49+ A0E2              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ A0E2              ;	Fila superior "0", Columna izquierda "0".
  51+ A0E2              ;
  52+ A0E2              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ A0E2              ;	Output: DE contendrá las coordenadas del disparo:
  54+ A0E2              ;
  55+ A0E2              ;		DE="$120d"
  56+ A0E2              ;
  57+ A0E2              ;		D, (Coordenada_X), Columnas, $12
  58+ A0E2              ;		E, (Coordenada_y), Filas, $0d
  59+ A0E2              ;
  60+ A0E2              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ A0E2
  62+ A0E2              ;	Modifica: A,BC y DE.
  63+ A0E2
  64+ A0E2
  65+ A0E2              Genera_coordenadas_disparo
  66+ A0E2
  67+ A0E2              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ A0E2
  69+ A0E2 7D           	ld a,l
  70+ A0E3 E6 1F        	and $1f
  71+ A0E5 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ A0E6 CD 98 A0     	call calcula_tercio
  73+ A0E9 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ A0EA 1E 00        	ld e,0
  75+ A0EC 7D           	ld a,l
  76+ A0ED E6 E0        	and $e0
  77+ A0EF 28 01        	jr z,1F
  78+ A0F1 04           	inc b
  79+ A0F2 1C           1 inc e
  80+ A0F3 D6 20        	sub 32
  81+ A0F5 20 FB        	jr nz,1B
  82+ A0F7 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ A0F9 C9           	ret
  84+ A0FA
# file closed: Genera_coordenadas.asm
1913  A0FA              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0FA              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0FA              ;
   3+ A0FA              ;	12/12/23
   4+ A0FA              ;
   5+ A0FA              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0FA
   7+ A0FA              ;	ADC HL,SP	LD (addr),SP
   8+ A0FA              ;	ADD HL,SP	LD SP,(addr)
   9+ A0FA              ;	ADD IX,SP	LD SP,nn
  10+ A0FA              ; 	ADD IY,SP	LD SP,HL
  11+ A0FA              ;				LD SP,IX
  12+ A0FA              ;	DEC SP		LD SP,IY
  13+ A0FA
  14+ A0FA              ;	EX (SP),HL
  15+ A0FA              ;	EX (SP),IX
  16+ A0FA              ;	EX (SP),IY
  17+ A0FA
  18+ A0FA              ;	INC SP
  19+ A0FA
  20+ A0FA                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF ED 73 EB 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  32+ 80C3
  33+ 80C3 31 A9 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  34+ 80C6 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  35+ 80C8              ;                                                 ; _ con las coordenadas_X de Amadeus.
  36+ 80C8 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  37+ 80CB
  38+ 80CB E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  39+ 80CC DD E5            push ix                                       ; IX contiene el puntero de impresión.
  40+ 80CE FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  41+ 80D0
  42+ 80D0              ; Disparo o entidad?
  43+ 80D0
  44+ 80D0 3A DA 89         ld a,(Ctrl_1)
  45+ 80D3 CB 47            bit 0,a
  46+ 80D5 28 05            jr z,2F
  47+ 80D7
  48+ 80D7 2A F3 89         ld hl,(Stack_snapshot_disparos)
  49+ 80DA 18 0F            jr 4F
  50+ 80DC
  51+ 80DC              ; No es disparo. Entidad/Amadeus ????
  52+ 80DC
  53+ 80DC 3A AD 89     2 ld a,(Ctrl_0)
  54+ 80DF CB 77            bit 6,a
  55+ 80E1 28 05            jr z,7F
  56+ 80E3
  57+ 80E3              ; Guardamos foto de Amadeus.
  58+ 80E3
  59+ 80E3 2A F7 89         ld hl,(End_Snapshot_Amadeus)
  60+ 80E6 18 03            jr 4F
  61+ 80E8
  62+ 80E8 2A F1 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  63+ 80EB
  64+ 80EB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  65+ 80ED
  66+ 80ED D1           1 pop de
  67+ 80EE 73               ld (hl),e
  68+ 80EF 23               inc hl
  69+ 80F0 72               ld (hl),d
  70+ 80F1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  71+ 80F2 10 F9            djnz 1B
  72+ 80F4
  73+ 80F4              ; Disparo o entidad ?
  74+ 80F4
  75+ 80F4 3A DA 89         ld a,(Ctrl_1)
  76+ 80F7 CB 47            bit 0,a
  77+ 80F9 28 05            jr z,5F
  78+ 80FB
  79+ 80FB 22 F3 89         ld (Stack_snapshot_disparos),hl
  80+ 80FE 18 12            jr 6F
  81+ 8100
  82+ 8100              ; Entidad o Amadeus ?
  83+ 8100
  84+ 8100 3A AD 89     5 ld a,(Ctrl_0)
  85+ 8103 CB 77            bit 6,a
  86+ 8105 28 08            jr z,8F
  87+ 8107
  88+ 8107 22 F7 89         ld (End_Snapshot_Amadeus),hl
  89+ 810A ED 7B EB 89      ld sp,(Stack)
  90+ 810E C9               ret
  91+ 810F
  92+ 810F 22 F1 89     8 ld (Stack_snapshot),hl
  93+ 8112 ED 7B EB 89  6 ld sp,(Stack)
  94+ 8116
  95+ 8116 C9               ret
  96+ 8117
  97+ 8117              ; -----------------------------------------------------------------------------
  98+ 8117              ;
  99+ 8117              ;   21/11/23
 100+ 8117
 101+ 8117              Limpia_y_reinicia_Stack_Snapshot
 102+ 8117
 103+ 8117              ;   Limpia Album_de_fotos.
 104+ 8117
 105+ 8117 2A F1 89         ld hl,(Stack_snapshot)
 106+ 811A 7D               ld a,l
 107+ 811B A7               and a
 108+ 811C C8               ret z   ;   Salimos si el álbum está vacío.
 109+ 811D
 110+ 811D 47               ld b,a
 111+ 811E 04               inc b
 112+ 811F
 113+ 811F 36 00        1 ld (hl),0
 114+ 8121 2D               dec l
 115+ 8122 10 FB            djnz 1B
 116+ 8124
 117+ 8124              ;   Reinicializa (Stack_snapshot).
 118+ 8124
 119+ 8124 21 00 80         ld hl,Album_de_fotos
 120+ 8127 22 F1 89         ld (Stack_snapshot),hl
 121+ 812A
 122+ 812A C9               ret
# file closed: Guarda_foto_registros.asm
1914  812B
1915  812B              	SAVESNA "Pruebas.sna", START
1916  812B
1917  812B
1918  812B
1919  812B
# file closed: Banco_de_pruebas.asm
