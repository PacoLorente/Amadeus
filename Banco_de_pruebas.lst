# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD 52 86     	call Frame
  15  A104 ED 4D        	reti
  16  A106
  17  A106              ; ----- ----- ----- ----- -----
  18  A106
  19  A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A106              ;
   3+ A106              ;	17/02/23
   4+ A106              ;
   5+ A106              ;	Sprites e índices.
   6+ A106
   7+ A106              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0C 80        	defw Disparo_f9
  13+ 8004 10 80        	defw Disparo_fb
  14+ 8006 14 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
  18+ 800C              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
  20+ 8010              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
  22+ 8014              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
  24+ 8018
  25+ 8018              ; ----------------------------------------------------------------------------------------
  26+ 8018
  27+ 8018              ; Badsat_izq. 2x2.
  28+ 8018
  29+ 8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 801A 68 81        	defw Badsat_izq_fe
  31+ 801C 38 81        	defw Badsat_izq_fd
  32+ 801E 08 81        	defw Badsat_izq_fc
  33+ 8020 D8 80        	defw Badsat_izq_fb
  34+ 8022 A8 80        	defw Badsat_izq_fa
  35+ 8024 78 80        	defw Badsat_izq_f9
  36+ 8026 48 80        	defw Badsat_izq_f8
  37+ 8028
  38+ 8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 802C 02 2A 02 55
  39+ 8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8034 7F E8 03 60
  40+ 8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 803C 2B E8 54 40
  41+ 8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8044 28 00 10 00
  42+ 8048
  43+ 8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 804C 0A 00 01 15
  44+ 8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8054 01 55 00 01
  45+ 8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 805C 00 01 B0 00
  46+ 8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8064 FC 00 15 F4
  47+ 8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 806C 55 30 00 2A
  48+ 8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8074 00 08 00 00
  49+ 8078
  50+ 8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 807C 85 00 00 8A
  51+ 8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8084 00 AA 80 00
  52+ 8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 808C 00 00 D8 00
  53+ 8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 8094 FE 00 0A FA
  54+ 8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 809C 2A 98 00 15
  55+ 80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80A4 00 04 00 00
  56+ 80A8
  57+ 80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80AC 42 80 00 45
  58+ 80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80B4 00 55 40 00
  59+ 80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80BC 00 00 6C 00
  60+ 80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80C4 FF 00 05 7D
  61+ 80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80CC 15 4C 00 0A
  62+ 80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80D4 00 02 00 00
  63+ 80D8
  64+ 80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80DC 21 40 00 22
  65+ 80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80E4 00 2A A0 00
  66+ 80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80EC 80 00 36 00
  67+ 80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80F4 7F 80 02 BE
  68+ 80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 80FC 0A A6 00 05
  69+ 8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8104 00 01 00 00
  70+ 8108
  71+ 8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 810C 10 A0 00 11
  72+ 8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8114 00 15 50 00
  73+ 8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 811C 40 00 1B 00
  74+ 8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8124 BF C0 01 5F
  75+ 8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 812C 05 53 00 02
  76+ 8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8134 00 00 80 00
  77+ 8138
  78+ 8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 813C 08 50 00 08
  79+ 8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8144 00 0A A8 00
  80+ 8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 814C A0 00 0D 80
  81+ 8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8154 5F F8 00 AF
  82+ 8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 815C 02 A9 00 01
  83+ 8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8164 00 00 40 00
  84+ 8168
  85+ 8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 816C 04 28 00 04
  86+ 8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8174 00 05 54 00
  87+ 8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 817C D0 00 06 C0
  88+ 8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8184 2F FC 00 57
  89+ 8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 818C 01 54 80 00
  90+ 8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 8194 00 00 20 00
  91+ 8198
  92+ 8198
  93+ 8198 A8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 819A C8 81        	defw Badsat_der_f8
  95+ 819C F8 81        	defw Badsat_der_f9
  96+ 819E 28 82        	defw Badsat_der_fa
  97+ 81A0 58 82        	defw Badsat_der_fb
  98+ 81A2 88 82        	defw Badsat_der_fc
  99+ 81A4 B8 82        	defw Badsat_der_fd
 100+ 81A6 E8 82        	defw Badsat_der_fe
 101+ 81A8
 102+ 81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81AC 54 40 AA 40
 103+ 81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81B4 17 FE 06 C0
 104+ 81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81BC 17 D4 02 2A
 105+ 81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81C4 00 14 00 08
 106+ 81C8
 107+ 81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81CC 20 00 2A 20
 108+ 81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81D4 2A A0 00 15
 109+ 81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81DC 00 03 60 00
 110+ 81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81E4 F4 00 0B EA
 111+ 81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81EC 03 2A 80 00
 112+ 81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81F4 00 00 04 00
 113+ 81F8
 114+ 81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 81FC 10 00 15 10
 115+ 8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8204 15 50 00 0A
 116+ 8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 820C 80 01 B0 00
 117+ 8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8214 FA 00 05 F5
 118+ 8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 821C 01 95 40 00
 119+ 8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8224 00 00 02 00
 120+ 8228
 121+ 8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 822C 08 00 0A 88
 122+ 8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8234 0A A8 00 05
 123+ 8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 823C C0 00 D8 00
 124+ 8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8244 FD 00 02 FA
 125+ 8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 824C 00 CA A0 00
 126+ 8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8254 80 00 01 00
 127+ 8258
 128+ 8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 825C 84 00 05 44
 129+ 8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8264 05 54 00 02
 130+ 8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 826C E0 00 6C 00
 131+ 8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8274 FE 80 01 7D
 132+ 8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 827C 00 65 50 00
 133+ 8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8284 40 00 00 80
 134+ 8288
 135+ 8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 828C 42 00 02 A2
 136+ 8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 8294 02 AA 00 01
 137+ 8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 829C F0 00 36 00
 138+ 82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82A4 FF 40 00 BE
 139+ 82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82AC 00 32 A8 00
 140+ 82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82B4 A0 00 00 40
 141+ 82B8
 142+ 82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82BC A1 00 01 51
 143+ 82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82C4 01 55 00 00
 144+ 82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82CC F8 00 1B 00
 145+ 82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82D4 FF A0 00 1F
 146+ 82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82DC 00 09 54 00
 147+ 82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82E4 50 00 00 20
 148+ 82E8
 149+ 82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82EC 50 80 00 A8
 150+ 82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82F4 00 AA 80 00
 151+ 82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 82FC FC 00 0D 80
 152+ 8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8304 FF D0 00 0F
 153+ 8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 830C 00 04 AA 00
 154+ 8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8314 28 00 00 10
 155+ 8318
 156+ 8318              ; ----------------------------------------------------------------------------------------
 157+ 8318
 158+ 8318              ; Amadeus. 2x2.
 159+ 8318
 160+ 8318 38 83        Indice_Amadeus_der defw Amadeus
 161+ 831A 00 00        	defw 0
 162+ 831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 831E 00 00        	defw 0
 164+ 8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8322 00 00        	defw 0
 166+ 8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8326 00 00        	defw 0	 								; (Fín de índice).
 168+ 8328
 169+ 8328 38 83        Indice_Amadeus_izq defw Amadeus
 170+ 832A 00 00        	defw 0
 171+ 832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 832E 00 00        	defw 0
 173+ 8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8332 00 00        	defw 0
 175+ 8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8336 00 00        	defw 0	 								; (Fín de índice).
 177+ 8338
 178+ 8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 833C 26 64 24 24
 179+ 8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8344 6F F6 67 E6
 180+ 8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 834C F7 EF FF FF
 181+ 8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8354 8B D1 71 8E
 182+ 8358
 183+ 8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 835C F1 00 09 99
 184+ 8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8364 0B 0D 00 1B
 185+ 8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 836C 80 19 F9 80
 186+ 8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8374 F3 C0 3D FB
 187+ 8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 837C 3E F7 C0 3E
 188+ 8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8384 40 1C 63 80
 189+ 8388
 190+ 8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 838C 3C 40 02 66
 191+ 8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 8394 02 C3 40 06
 192+ 8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 839C 60 06 7E 60
 193+ 83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83A4 3C F0 0F 7E
 194+ 83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83AC 0F BD F0 0F
 195+ 83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83B4 10 07 18 E0
 196+ 83B8
 197+ 83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83BC 8F 10 00 99
 198+ 83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83C4 00 B0 D0 01
 199+ 83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83CC D8 01 9F 98
 200+ 83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83D4 CF 3C 03 DF
 201+ 83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83DC 03 EF 7C 03
 202+ 83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83E4 44 01 C6 38
 203+ 83E8
 204+ 83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
  20  83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
   1+ 83E8
   2+ 83E8              ; Base de datos de entidades e Índice.
   3+ 83E8              ;
   4+ 83E8              ; 17/02/23
   5+ 83E8
   6+ 83E8              ; Control. %00000001 00000001
   7+ 83E8              ;
   8+ 83E8              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 83E8              ;                    _ hacen las entidades hacia abajo.
  10+ 83E8              ;
  11+ 83E8              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 83E8
  13+ 83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 83EA F6 83        	defw Disparo_2A
  15+ 83EC FE 83        	defw Disparo_3A
  16+ 83EE
  17+ 83EE 00 00        Disparo_1A defw 0									; Control.
  18+ 83F0 00 00        	defw 0											; Puntero objeto.
  19+ 83F2 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 83F4 00 00        	defw 0											; Rutina de impresión.
  21+ 83F6
  22+ 83F6 00 00        Disparo_2A defw 0									; Control.
  23+ 83F8 00 00        	defw 0											; Puntero objeto.
  24+ 83FA 00 00        	defw 0											; Puntero de impresión.
  25+ 83FC 00 00        	defw 0											; Rutina de impresión.
  26+ 83FE
  27+ 83FE 00 00        Disparo_3A defw 0
  28+ 8400
  29+ 8400 16 84        Indice_de_disparos_entidades defw Disparo_1
  30+ 8402 1E 84        	defw Disparo_2
  31+ 8404 26 84        	defw Disparo_3
  32+ 8406 2E 84        	defw Disparo_4
  33+ 8408 36 84        	defw Disparo_5
  34+ 840A 3E 84        	defw Disparo_6
  35+ 840C 46 84        	defw Disparo_7
  36+ 840E 4E 84        	defw Disparo_8
  37+ 8410 56 84        	defw Disparo_9
  38+ 8412 5E 84        	defw Disparo_10
  39+ 8414 66 84        	defw Disparo_11
  40+ 8416
  41+ 8416 00 00        Disparo_1 defw 0									; Control.
  42+ 8418 00 00        	defw 0											; Puntero objeto.
  43+ 841A 00 00        	defw 0											; Puntero de impresión.
  44+ 841C 00 00        	defw 0											; Rutina de impresión.
  45+ 841E
  46+ 841E 00 00        Disparo_2 defw 0									; Control.
  47+ 8420 00 00        	defw 0											; Puntero objeto.
  48+ 8422 00 00        	defw 0											; Puntero de impresión.
  49+ 8424 00 00        	defw 0											; Rutina de impresión.
  50+ 8426
  51+ 8426 00 00        Disparo_3 defw 0									; Control.
  52+ 8428 00 00        	defw 0											; Puntero objeto.
  53+ 842A 00 00        	defw 0											; Puntero de impresión.
  54+ 842C 00 00        	defw 0											; Rutina de impresión.
  55+ 842E
  56+ 842E 00 00        Disparo_4 defw 0									; Control.
  57+ 8430 00 00        	defw 0											; Puntero objeto.
  58+ 8432 00 00        	defw 0											; Puntero de impresión.
  59+ 8434 00 00        	defw 0											; Rutina de impresión.
  60+ 8436
  61+ 8436 00 00        Disparo_5 defw 0									; Control.
  62+ 8438 00 00        	defw 0											; Puntero objeto.
  63+ 843A 00 00        	defw 0											; Puntero de impresión.
  64+ 843C 00 00        	defw 0											; Rutina de impresión.
  65+ 843E
  66+ 843E 00 00        Disparo_6 defw 0									; Control.
  67+ 8440 00 00        	defw 0											; Puntero objeto.
  68+ 8442 00 00        	defw 0											; Puntero de impresión.
  69+ 8444 00 00        	defw 0											; Rutina de impresión.
  70+ 8446
  71+ 8446 00 00        Disparo_7 defw 0									; Control.
  72+ 8448 00 00        	defw 0											; Puntero objeto.
  73+ 844A 00 00        	defw 0											; Puntero de impresión.
  74+ 844C 00 00        	defw 0											; Rutina de impresión.
  75+ 844E
  76+ 844E 00 00        Disparo_8 defw 0									; Control.
  77+ 8450 00 00        	defw 0											; Puntero objeto.
  78+ 8452 00 00        	defw 0											; Puntero de impresión.
  79+ 8454 00 00        	defw 0											; Rutina de impresión.
  80+ 8456
  81+ 8456 00 00        Disparo_9 defw 0									; Control.
  82+ 8458 00 00        	defw 0											; Puntero objeto.
  83+ 845A 00 00        	defw 0											; Puntero de impresión.
  84+ 845C 00 00        	defw 0											; Rutina de impresión.
  85+ 845E
  86+ 845E 00 00        Disparo_10 defw 0									; Control.
  87+ 8460 00 00        	defw 0											; Puntero objeto.
  88+ 8462 00 00        	defw 0											; Puntero de impresión.
  89+ 8464 00 00        	defw 0											; Rutina de impresión.
  90+ 8466
  91+ 8466 00 00        Disparo_11 defw 0
  92+ 8468
  93+ 8468              ; -------------------------------------------------------------------------------------
  94+ 8468
  95+ 8468              Indice_de_entidades									; 58 Bytes por entidad.
  96+ 8468
  97+ 8468 AF 84        	defw Entidad_1
  98+ 846A EA 84        	defw Entidad_2
  99+ 846C 25 85        	defw Entidad_3
 100+ 846E 60 85        	defw Entidad_4
 101+ 8470              ;	...
 102+ 8470              ;	...
 103+ 8470              ;	+ entidades ...
 104+ 8470
 105+ 8470 00 00        	defw 0
 106+ 8472 00 00        	defw 0
 107+ 8474
 108+ 8474              ; ---------- ---------- ---------- ---------- ----------
 109+ 8474
 110+ 8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 8476 00 00        	defw 0		 									; (Posicion_actual).
 112+ 8478 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 847D
 115+ 847D 05           	db %00000101									; (Attr).
 116+ 847E
 117+ 847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 118+ 8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 119+ 8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 8486
 122+ 8486 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 8488 04           	db 4 											; (Cuad_objeto).
 124+ 8489
 125+ 8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 126+ 848D
 127+ 848D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 128+ 848E
 129+ 848E 00 00        	db 0,0											; Variables_de_borrado
 130+ 8490 00 00        	defw 0											;	" " " " " " "
 131+ 8492 00 00        	defw 0											;	" " " " " " "
 132+ 8494 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 133+ 8498
 134+ 8498 00 00        	db 0,0											; Variables_de_pintado
 135+ 849A 00 00        	defw 0											;	" " " " " " "
 136+ 849C 00 00        	defw 0											;	" " " " " " "
 137+ 849E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 138+ 84A2
 139+ 84A2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 140+ 84A4
 141+ 84A4 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
 142+ 84A8 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 143+ 84AB
 144+ 84AB 00           	db 0 											; (Columnas).
 145+ 84AC 00 00        	defw 0											; (Limite_horizontal).
 146+ 84AE 00           	db 0											; (Limite_vertical).
 147+ 84AF
 148+ 84AF              ; ---------- ---------- ---------- ---------- ----------
 149+ 84AF
 150+ 84AF 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
 151+ 84B1 00 00        	defw 0											; (Posicion_actual).
 152+ 84B3 00 00        	defw 0 											; (Puntero_objeto).
 153+ 84B5 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 84B8
 155+ 84B8 00           	db %00000000 									; (Attr).
 156+ 84B9
 157+ 84B9 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 84BB 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 84BD 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 84BF 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 84C1
 162+ 84C1 00 00        	defw 0											; (Posicion_inicio).
 163+ 84C3 00           	db 0											; (Cuad_objeto).
 164+ 84C4
 165+ 84C4 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 84C8
 167+ 84C8 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 84C9
 169+ 84C9 00 00        	db 0,0										    ; Variables_de_borrado
 170+ 84CB 00 00        	defw 0											;	" " " " " " "
 171+ 84CD 00 00        	defw 0											;	" " " " " " "
 172+ 84CF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 173+ 84D3
 174+ 84D3 00 00        	db 0,0											; Variables_de_pintado
 175+ 84D5 00 00        	defw 0											;	" " " " " " "
 176+ 84D7 00 00        	defw 0											;	" " " " " " "
 177+ 84D9 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 178+ 84DD
 179+ 84DD 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 180+ 84DF
 181+ 84DF 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
 182+ 84E3 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 183+ 84E6
 184+ 84E6 00           	db 0 											; (Columnas).
 185+ 84E7 00 00        	defw 0											; (Limite_horizontal).
 186+ 84E9 00           	db 0											; (Limite_vertical).
 187+ 84EA
 188+ 84EA              ; ---------- ---------- ---------- ---------- ----------
 189+ 84EA
 190+ 84EA 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
 191+ 84EC 00 00        	defw 0                                          ; (Posicion_actual).
 192+ 84EE 00 00        	defw 0											; (Puntero_objeto).
 193+ 84F0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 194+ 84F3
 195+ 84F3 02           	db %00000010									; (Attr).
 196+ 84F4
 197+ 84F4 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 198+ 84F6 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 199+ 84F8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 200+ 84FA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 201+ 84FC
 202+ 84FC C6 50        	defw $50c6                                      ; (Posicion_inicio).
 203+ 84FE 03           	db 3											; (Cuad_objeto).
 204+ 84FF
 205+ 84FF 04 01 01 08  	db 4,1,1,8                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 206+ 8503
 207+ 8503 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 208+ 8504
 209+ 8504 00 00        	db 0,0											; Variables_de_borrado
 210+ 8506 00 00        	defw 0										 	;	" " " " " " "
 211+ 8508 00 00        	defw 0											;	" " " " " " "
 212+ 850A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 213+ 850E
 214+ 850E 00 00        	db 0,0											; Variables_de_pintado
 215+ 8510 00 00        	defw 0											;	" " " " " " "
 216+ 8512 00 00        	defw 0											;	" " " " " " "
 217+ 8514 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 218+ 8518
 219+ 8518 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 220+ 851A
 221+ 851A 00 00 00 00  	defw 0,0								  		; (Puntero_indice_mov) / (Puntero_mov).
 222+ 851E
 223+ 851E 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 224+ 8521
 225+ 8521 00           	db 0 											; (Columnas).
 226+ 8522 00 00        	defw 0											; (Limite_horizontal).
 227+ 8524 00           	db 0											; (Limite_vertical).
 228+ 8525
 229+ 8525              ; ---------- ---------- ---------- ---------- ----------
 230+ 8525
 231+ 8525 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
 232+ 8527 00 00        	defw 0                                          ; (Posicion_actual).
 233+ 8529 00 00        	defw 0											; (Puntero_objeto).
 234+ 852B 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 235+ 852E
 236+ 852E 04           	db %00000100									; (Attr).
 237+ 852F
 238+ 852F 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 239+ 8531 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 240+ 8533
 241+ 8533 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 8535 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 8537
 244+ 8537 A1 47        	defw $47a1                                      ; (Posicion_inicio).
 245+ 8539 01           	db 1											; (Cuad_objeto).
 246+ 853A
 247+ 853A 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 853E
 249+ 853E 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 853F
 251+ 853F 00 00        	db 0,0											; Variables_de_borrado
 252+ 8541 00 00        	defw 0										 	;	" " " " " " "
 253+ 8543 00 00        	defw 0											;	" " " " " " "
 254+ 8545 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 255+ 8549
 256+ 8549 00 00        	db 0,0											; Variables_de_pintado
 257+ 854B 00 00        	defw 0											;	" " " " " " "
 258+ 854D 00 00        	defw 0											;	" " " " " " "
 259+ 854F 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 260+ 8553
 261+ 8553 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 262+ 8555
 263+ 8555 16 97 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
 264+ 8559 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 265+ 855C
 266+ 855C 00           	db 0 											; (Columnas).
 267+ 855D 00 00        	defw 0											; (Limite_horizontal).
 268+ 855F 00           	db 0											; (Limite_vertical).
 269+ 8560
 270+ 8560              ; ---------- ---------- ---------- ---------- ----------
 271+ 8560
 272+ 8560 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
 273+ 8562 00 00        	defw 0                                          ; (Posicion_actual).
 274+ 8564 00 00        	defw 0 											; (Puntero_objeto).
 275+ 8566 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 276+ 8569
 277+ 8569 01           	db %00000001									; (Attr).
 278+ 856A
 279+ 856A 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 280+ 856C 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 281+ 856E
 282+ 856E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 8570 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 8572
 285+ 8572 BE 47        	defw $47be                                      ; (Posicion_inicio).
 286+ 8574 00           	db 0											; (Cuad_objeto).
 287+ 8575
 288+ 8575 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 8579
 290+ 8579 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 857A
 292+ 857A 00 00        	db 0,0											; Variables_de_borrado
 293+ 857C 00 00        	defw 0										 	;	" " " " " " "
 294+ 857E 00 00        	defw 0											;	" " " " " " "
 295+ 8580 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 296+ 8584
 297+ 8584 00 00        	db 0,0											; Variables_de_pintado
 298+ 8586 00 00        	defw 0											;	" " " " " " "
 299+ 8588 00 00        	defw 0											;	" " " " " " "
 300+ 858A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 301+ 858E
 302+ 858E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
 303+ 8590
 304+ 8590 06 97 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
 305+ 8594 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
 306+ 8597
 307+ 8597 00           	db 0 											; (Columnas).
 308+ 8598 00 00        	defw 0											; (Limite_horizontal).
 309+ 859A 00           	db 0											; (Limite_vertical).
 310+ 859B
# file closed: Entidades_y_disparos.asm
  21  859B
  22  859B              ; ******************************************************************************************************************************************************************************************
  23  859B              ; Constantes.
  24  859B              ; ******************************************************************************************************************************************************************************************
  25  859B              ;
  26  859B              ; 8/11/22
  27  859B              ;
  28  859B              ; Constantes generales.
  29  859B              ;
  30  859B
  31  859B              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  32  859B              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  33  859B              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  34  859B              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  35  859B
  36  859B              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  37  859B              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  38  859B              ;                               				        ; De momento situamos este almacén en $7000.
  39  859B              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  40  859B              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  41  859B              ;                               				        ; De momento situamos este almacén en $7060.
  42  859B
  43  859B              ; ******************************************************************************************************************************************************************************************
  44  859B              ; Variables.
  45  859B              ; ******************************************************************************************************************************************************************************************
  46  859B              ;
  47  859B              ; 10/11/22
  48  859B              ;
  49  859B              ; Variables de DRAW. (Motor principal).
  50  859B              ;
  51  859B              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  52  859B
  53  859B 02           Filas db 2												; Filas. [DRAW]
  54  859C 02           Columns db 2  											; Nº de columnas. [DRAW]
  55  859D 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  56  859F 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  57  85A1 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  58  85A2 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  59  85A3
  60  85A3              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  61  85A3
  62  85A3 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  63  85A4              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  64  85A4              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  65  85A4 04           Attr db %00000100										; Atributos de la entidad:
  66  85A5
  67  85A5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  68  85A5              ;
  69  85A5              ;	COLORES: 0 ..... NEGRO
  70  85A5              ;    		 1 ..... AZUL
  71  85A5              ; 			 2 ..... ROJO
  72  85A5              ;			 3 ..... MAGENTA
  73  85A5              ; 			 4 ..... VERDE
  74  85A5              ; 			 5 ..... CIAN
  75  85A5              ;			 6 ..... AMARILLO
  76  85A5              ; 			 7 ..... BLANCO
  77  85A5
  78  85A5 98 81        Indice_Sprite_der defw Indice_Badsat_der
  79  85A7 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
  80  85A9 00 00        Puntero_DESPLZ_der defw 0
  81  85AB 00 00        Puntero_DESPLZ_izq defw 0
  82  85AD
  83  85AD 81 47        Posicion_inicio defw $4781								; Dirección de pantalla donde aparece el objeto. [DRAW].
  84  85AF 01           Cuad_objeto db 1										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  85  85B0
  86  85B0              ; Variables de objeto. (Características).
  87  85B0
  88  85B0 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  89  85B1 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  90  85B2 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
  91  85B3 02           Vel_down db 2 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
  92  85B4
  93  85B4 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
  94  85B5              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
  95  85B5              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
  96  85B5 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
  97  85B7 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
  98  85B9 00 00        	defw 0
  99  85BB 00 00 00 00  	db 0,0,0,0
 100  85BF
 101  85BF 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 102  85C1 00 00        	defw 0
 103  85C3 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 104  85C5 00 00 00 00  	db 0,0,0,0
 105  85C9
 106  85C9              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 107  85C9
 108  85C9 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 109  85CA              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 110  85CA              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 111  85CA              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 112  85CA              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 113  85CA              ;
 114  85CA              ; 														DESCRIPCIÖN:
 115  85CA              ;
 116  85CA              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 117  85CA              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 118  85CA              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 119  85CA              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 120  85CA              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 121  85CA              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 122  85CA              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 123  85CA              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 124  85CA              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 125  85CA              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 126  85CA              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 127  85CA              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 128  85CA              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 129  85CA              ;
 130  85CA              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 131  85CA              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 132  85CA              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 133  85CA
 134  85CA 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 135  85CB
 136  85CB              ; Movimiento.
 137  85CB
 138  85CB 16 97        Puntero_indice_mov defw Indice_mov_Onda_senoidal	    ; Puntero del patrón de movimiento de la entidad. "0" No hay movimiento.
 139  85CD 00 00        Puntero_mov defw 0
 140  85CF 00           Contador_db_mov db 0
 141  85D0 00           Incrementa_puntero db 0
 142  85D1 00           Repetimos_db db 0
 143  85D2
 144  85D2              ; Variables de funcionamiento. [DRAW].
 145  85D2
 146  85D2 00           Columnas db 0
 147  85D3 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 148  85D5              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 149  85D5 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 150  85D6
 151  85D6              ; 59 Bytes por entidad.
 152  85D6              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 153  85D6              ;					         		---------;      ;---------
 154  85D6
 155  85D6
 156  85D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 157  85D6
 158  85D6 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 159  85D7
 160  85D7              ;														DESCRIPCIÓN:
 161  85D7              ;
 162  85D7              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 163  85D7              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 164  85D7              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 165  85D7              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 166  85D7              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus a alcanzado a una entidad.
 167  85D7
 168  85D7              ; Gestión de ENTIDADES.
 169  85D7
 170  85D7 00 00        Puntero_store_entidades defw 0
 171  85D9 00 00        Puntero_restore_entidades defw 0
 172  85DB 00 00        Indice_restore defw 0
 173  85DD 02           Numero_de_entidades db 2								; Nº de entidades en pantalla, (contando con Amadeus).
 174  85DE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 175  85DF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 176  85DF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 177  85DF              ;														; _ (Numero_de_malotes)="0".
 178  85DF 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 179  85E1              ;														; _variable para almacenar lo posición del puntero_
 180  85E1              ; 														; _de pila, SP.
 181  85E1 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 182  85E3              ;														; La utiliza la rutina [Extrae_foto_registros].
 183  85E3 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 184  85E5              ;														; _el snapshot de los registros de la siguiente entidad.
 185  85E5              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 186  85E5 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 187  85E7              ;														; _el snapshot de los registros del siguiente disparo.
 188  85E7              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 189  85E7
 190  85E7              ;---------------------------------------------------------------------------------------------------------------
 191  85E7
 192  85E7              ; Gestión de Disparos.
 193  85E7
 194  85E7 00           Numero_de_disparotes db 0
 195  85E8 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 196  85EA 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 197  85EC 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 198  85ED              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 199  85ED              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 200  85ED 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 201  85EF              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 202  85EF              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 203  85EF              ;														; _produzca colisión.
 204  85EF 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 205  85F1              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 206  85F1 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 207  85F4              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 208  85F4 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 209  85F7              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 210  85F7
 211  85F7              ;---------------------------------------------------------------------------------------------------------------
 212  85F7
 213  85F7              ; Relojes y temporizaciones.
 214  85F7
 215  85F7 01           Habilita_disparo_Amadeus db 1
 216  85F8 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 217  85F9 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 218  85FA
 219  85FA 01           Habilita_disparo_entidad db 1
 220  85FB 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 221  85FC 0F           Temporiza_disparo_entidad db 15							; Reloj, decreciente.
 222  85FD
 223  85FD              ;---------------------------------------------------------------------------------------------------------------
 224  85FD
 225  85FD              ; Gestión de FRAMES.
 226  85FD
 227  85FD 00           Switch db 0
 228  85FE
 229  85FE              ; Variables de Raster y localización en pantalla.
 230  85FE
 231  85FE 00 FF        Temp_Raster defw $ff00
 232  8600
 233  8600              ; Rutina principal *************************************************************************************************************************************************************************
 234  8600              ;
 235  8600              ;	14/11/22
 236  8600
 237  8600 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
 238  8603
 239  8603 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 240  8605 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 241  8607 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
 242  8609 F3           	DI
 243  860A
 244  860A 3E 07        	ld a,%00000111
 245  860C CD 2A 93     	call Cls
 246  860F
 247  860F              ;	call Pinta_FILAS
 248  860F
 249  860F CD DA 88     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 250  8612
 251  8612 21 DD 85     	ld hl,Numero_de_entidades
 252  8615 46           	ld b,(hl)
 253  8616 04           	inc b
 254  8617 05           	dec b
 255  8618 28 13        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 256  861A
 257  861A CD AC 87     	call Inicia_punteros_de_entidades					 ; Sitúa (Puntero_store_entidades) en la 1ª entidad del_
 258  861D              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 259  861D
 260  861D              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 261  861D              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 262  861D              ;	Pintamos el resto de entidades:
 263  861D
 264  861D              ;	INICIA ENTIDADES !!!!!
 265  861D
 266  861D C5           1 push bc  												; Guardo el contador de entidades.
 267  861E CD 0D 88      	call Inicia_Puntero_objeto
 268  8621 CD 7A 8D     	call Draw
 269  8624 CD A0 7F     	call Guarda_foto_registros
 270  8627 CD 55 88     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
 271  862A C1           	pop bc
 272  862B 10 F0        	djnz 1B  											; Decremento el contador de entidades.
 273  862D
 274  862D              ; 	INICIA AMADEUS !!!!!
 275  862D
 276  862D CD A8 88     3 call Restore_Amadeus
 277  8630 CD 0D 88     	call Inicia_Puntero_objeto
 278  8633 CD 7A 8D     	call Draw
 279  8636 CD A0 7F     	call Guarda_foto_registros
 280  8639 CD BA 88     	call Store_Amadeus
 281  863C
 282  863C              ; 	INICIA DISPAROS !!!!!
 283  863C
 284  863C CD C2 87     	call Inicia_Puntero_Disparo_Entidades
 285  863F CD C9 87     	call Inicia_Puntero_Disparo_Amadeus
 286  8642
 287  8642              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 288  8642
 289  8642 CD AC 87     	call Inicia_punteros_de_entidades
 290  8645 CD 96 88     	call Restore_Primera_entidad
 291  8648
 292  8648 3A DD 85     	ld a,(Numero_de_entidades)
 293  864B 3C           	inc a
 294  864C 32 DE 85     	ld (Numero_de_malotes),a
 295  864F
 296  864F FB           2 ei
 297  8650 18 FD        	jr 2B
 298  8652
 299  8652              ; -----------------------------------------------------------------------------------
 300  8652
 301  8652              Frame
 302  8652
 303  8652              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 304  8652              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 305  8652
 306  8652              ; PINTAMOS.
 307  8652
 308  8652 3E 02            ld a,2
 309  8654 D3 FE            out ($fe),a
 310  8656 CD 7E 90     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 311  8659 CD B7 90     	call Extrae_foto_disparos
 312  865C 3E 01            ld a,1
 313  865E D3 FE            out ($fe),a
 314  8660
 315  8660              ; ----------------------------------------------------------------------
 316  8660
 317  8660 3A D6 85     	ld a,(Ctrl_1)
 318  8663 CB 5F        	bit 3,a
 319  8665 20 FE        	jr nz,$
 320  8667
 321  8667              ; RELOJES.
 322  8667
 323  8667 21 F7 85     	ld hl,Habilita_disparo_Amadeus
 324  866A 11 F9 85     	ld de,Temporiza_disparo_Amadeus
 325  866D CD D5 7F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 326  8670
 327  8670 21 FA 85     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 328  8673 11 FC 85     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 329  8676 CD D5 7F     	call Habilita_disparos
 330  8679
 331  8679              ; COLISIONES.
 332  8679
 333  8679 CD 1C 8D     8 call Selector_de_impactos
 334  867C
 335  867C              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 336  867C              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 337  867C              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 338  867C
 339  867C AF           	xor a
 340  867D 32 EC 85     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 341  8680
 342  8680 CD AC 87     	call Inicia_punteros_de_entidades
 343  8683 CD 96 88     	call Restore_Primera_entidad
 344  8686
 345  8686              ; ---------------------------------------------------------------------------------------
 346  8686
 347  8686 CD 9C 8B     9 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 348  8689 21 00 70     	ld hl,Album_de_fotos
 349  868C 22 E3 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 350  868F              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 351  868F 3A DD 85         ld a,(Numero_de_entidades)
 352  8692 47               ld b,a
 353  8693 A7           	and a
 354  8694 28 4B        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
 355  8696
 356  8696              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 357  8696
 358  8696              ; Código que ejecutamos con cada entidad:
 359  8696
 360  8696              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 361  8696              ; _con las coordenadas de la entidad almacenada en DRAW.
 362  8696
 363  8696 3A D6 85     2 ld a,(Ctrl_1)
 364  8699 CB 57        	bit 2,a
 365  869B 28 1D        	jr z,7F
 366  869D 2A EF 85     	ld hl,(Coordenadas_disparo_certero)
 367  86A0 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 368  86A1              ;														; E contiene la coordenada_X del disparo.
 369  86A1 2A A1 85     	ld hl,(Coordenada_X) 								; L Coordenada_x de la entidad.
 370  86A4              ;														; H Coordenado_y de la entidad.
 371  86A4 A7           	and a
 372  86A5 ED 52        	sbc hl,de
 373  86A7 CD 53 8D     	call Determina_resultado_comparativa
 374  86AA 04           	inc b
 375  86AB 05           	dec b
 376  86AC 28 0C        	jr z,7F
 377  86AE
 378  86AE              ; ----- ----- -----
 379  86AE
 380  86AE 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 381  86B0 32 B4 85     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 382  86B3 21 D6 85     	ld hl,Ctrl_1										; Restauramos el FLAG de comparación de entidad-disparo,_
 383  86B6 CB 96        	res 2,(hl)											; _(Bit2 Ctrl_1).
 384  86B8              ; debugggg
 385  86B8 CB DE        	set 3,(hl)
 386  86BA              ; debugggg
 387  86BA
 388  86BA C5           7 push bc
 389  86BB
 390  86BB CD 11 87     	call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 391  86BE
 392  86BE 3A C9 85     	ld a,(Ctrl_0)
 393  86C1 CB 67        	bit 4,a
 394  86C3 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 395  86C5
 396  86C5              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 397  86C5              ; [[[
 398  86C5 CD 25 89     	call Detecta_disparo_entidad
 399  86C8              ; ]]]
 400  86C8 CD 73 87     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 401  86CB
 402  86CB 21 C9 85     	ld hl,Ctrl_0
 403  86CE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 404  86D0 AF           	xor a
 405  86D1 32 CA 85     	ld (Obj_dibujado),a
 406  86D4
 407  86D4              6
 408  86D4
 409  86D4              	;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 410  86D4 3A D6 85     	ld a,(Ctrl_1)
 411  86D7 CB 5F        	bit 3,a
 412  86D9 20 FE        	jr nz,$
 413  86DB              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 414  86DB
 415  86DB
 416  86DB CD 55 88     	call Store_Restore_entidades
 417  86DE C1           	pop bc
 418  86DF 10 B5        	djnz 2B
 419  86E1
 420  86E1              ; Tras la gestión de las entidades, ... AMADEUS.
 421  86E1
 422  86E1 CD A8 88     4 call Restore_Amadeus
 423  86E4
 424  86E4              ; debuggggg. STOP si hay impacto en la entidad que contiene DRAW.!!!!!!!!
 425  86E4
 426  86E4 3A B4 85     	ld a,(Impacto)
 427  86E7 A7           	and a
 428  86E8 20 FE        	jr nz,$
 429  86EA
 430  86EA              ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 431  86EA
 432  86EA CD 44 87     	call Mov_Amadeus
 433  86ED
 434  86ED 3A C9 85     	ld a,(Ctrl_0)
 435  86F0 CB 67        	bit 4,a
 436  86F2 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 437  86F4
 438  86F4 CD 73 87     	call Guarda_foto_entidad_a_pintar
 439  86F7
 440  86F7 21 C9 85     3 ld hl,Ctrl_0
 441  86FA CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 442  86FC AF           	xor a
 443  86FD 32 CA 85     	ld (Obj_dibujado),a
 444  8700
 445  8700 CD BA 88     	call Store_Amadeus
 446  8703
 447  8703 CD BA 8B     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 448  8706
 449  8706              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 450  8706
 451  8706 CD D0 87     	call Calcula_numero_de_malotes
 452  8709 CD EF 87     	call Calcula_numero_de_disparotes
 453  870C
 454  870C 3E 04        	ld a,4
 455  870E D3 FE        	out ($fe),a
 456  8710
 457  8710 C9           	ret
 458  8711
 459  8711              ; --------------------------------------------------------------------------------------------------------------
 460  8711              ;
 461  8711              ;	27/03/23
 462  8711
 463  8711              Mov_obj
 464  8711
 465  8711              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 466  8711
 467  8711 AF           	xor a
 468  8712 32 CA 85     	ld (Obj_dibujado),a
 469  8715 CD 7D 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 470  8718              ;														; Obj_dibujado="0".
 471  8718              ; Impacto ???
 472  8718
 473  8718 3A B4 85     	ld a,(Impacto)
 474  871B A7           	and a
 475  871C 20 22        	jr nz,1F
 476  871E
 477  871E              ; Movemos Entidades malignas.
 478  871E
 479  871E 2A CB 85     	ld hl,(Puntero_indice_mov) 							; No hay movimiento, objeto estático!!!.
 480  8721 24           	inc h                                               ; Salimos de la rutina.
 481  8722 25           	dec h
 482  8723 C8           	ret z
 483  8724
 484  8724 CD 18 97     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 485  8727
 486  8727 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 487  872A CB 67        	bit 4,a
 488  872C C8           	ret z
 489  872D
 490  872D              ; Ha habido desplazamiento de la entidad maligna.
 491  872D              ; Ha llegado a zona de AMADEUS ???
 492  872D
 493  872D 3A A2 85     	ld a,(Coordenada_y)
 494  8730 FE 14        	cp $14
 495  8732 D4 EB 8A     	call nc, Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 496  8735              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 497  8735              ; ---------
 498  8735
 499  8735 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 500  8737 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 501  873A CD 7D 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 502  873D CD 94 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 503  8740 CD 63 87     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 504  8743 C9           	ret													; _de la misma.
 505  8744
 506  8744              ; --------------------------------------------------------------------------------------------------------------
 507  8744              ;
 508  8744              ;	29/1/23
 509  8744
 510  8744              Mov_Amadeus
 511  8744
 512  8744 AF           	xor a
 513  8745 32 CA 85     	ld (Obj_dibujado),a
 514  8748 CD 7D 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 515  874B              ;														; Obj_dibujado="0".
 516  874B              ; Movemos Amadeus.
 517  874B
 518  874B CD EE 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 519  874E 3A C9 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 520  8751 CB 67        	bit 4,a
 521  8753 C8           	ret z
 522  8754
 523  8754              ; ---------
 524  8754
 525  8754 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 526  8756 32 CA 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 527  8759 CD 7D 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 528  875C CD 94 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 529  875F CD 63 87     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 530  8762 C9           	ret													; _de la nave.
 531  8763
 532  8763              ; --------------------------------------------------------------------------------------------------------------
 533  8763              ;
 534  8763              ;	31/01/23
 535  8763              ;
 536  8763              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 537  8763
 538  8763              Guarda_foto_entidad_a_borrar
 539  8763
 540  8763 CD 54 90     	call Prepara_draw
 541  8766 CD 8E 8F     	call calcula_CColumnass
 542  8769 CD C5 8F     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 543  876C CD 1A 90     	call Define_rutina_de_impresion
 544  876F CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 545  8772 C9           	ret
 546  8773
 547  8773              ; --------------------------------------------------------------------------------------------------------------
 548  8773              ;
 549  8773              ;	31/01/23
 550  8773              ;
 551  8773              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 552  8773              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 553  8773
 554  8773              Guarda_foto_entidad_a_pintar
 555  8773
 556  8773 CD A0 87     	call Repone_pintar
 557  8776 CD 7A 8D     	call Draw
 558  8779 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 559  877C C9           	ret
 560  877D
 561  877D              ; --------------------------------------------------------------------------------------------------------------
 562  877D              ;
 563  877D              ;
 564  877D
 565  877D 21 9B 85     Prepara_var_pintado_borrado	ld hl,Filas
 566  8780 3A CA 85     	ld a,(Obj_dibujado)
 567  8783 A7           	and a
 568  8784 28 05        	jr z,1F
 569  8786 11 BF 85     	ld de,Variables_de_pintado
 570  8789 18 03        	jr 2F
 571  878B 11 B5 85     1 ld de,Variables_de_borrado
 572  878E 01 08 00     2 ld bc,8
 573  8791 ED B0        	ldir
 574  8793 C9           	ret
 575  8794
 576  8794              ; --------------------------------------------------------------------------------------------------------------
 577  8794
 578  8794 21 B5 85     Repone_borrar ld hl,Variables_de_borrado
 579  8797 11 9B 85     	ld de,Filas
 580  879A 01 08 00     	ld bc,8
 581  879D ED B0        	ldir
 582  879F C9           	ret
 583  87A0
 584  87A0 21 BF 85     Repone_pintar ld hl,Variables_de_pintado
 585  87A3 11 9B 85     	ld de,Filas
 586  87A6 01 08 00     	ld bc,8
 587  87A9 ED B0        	ldir
 588  87AB C9           	ret
 589  87AC
 590  87AC              ; *************************************************************************************************************************************************************
 591  87AC              ;
 592  87AC              ; 8/1/23
 593  87AC              ;
 594  87AC              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 595  87AC              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
 596  87AC              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 597  87AC
 598  87AC              ; Destruye HL y DE !!!!!
 599  87AC
 600  87AC              Inicia_punteros_de_entidades
 601  87AC
 602  87AC 21 68 84     	ld hl,Indice_de_entidades
 603  87AF CD 07 88         call Extrae_address
 604  87B2 22 D7 85         ld (Puntero_store_entidades),hl
 605  87B5 21 6A 84     	ld hl,Indice_de_entidades+2
 606  87B8 22 DB 85     	ld (Indice_restore),hl
 607  87BB CD 07 88     	call Extrae_address
 608  87BE 22 D9 85     	ld (Puntero_restore_entidades),hl
 609  87C1 C9               ret
 610  87C2
 611  87C2              ; *************************************************************************************************************************************************************
 612  87C2              ;
 613  87C2              ; 8/1/23
 614  87C2              ;
 615  87C2              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 616  87C2
 617  87C2 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 618  87C5 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 619  87C8 C9           	ret
 620  87C9 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 621  87CC 22 EA 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 622  87CF C9           	ret
 623  87D0
 624  87D0              ; -------------------------------------------------------------------------------------------------------------
 625  87D0              ;
 626  87D0              ; 28/2/23
 627  87D0              ;
 628  87D0
 629  87D0              Calcula_numero_de_malotes
 630  87D0
 631  87D0 3A D6 85     	ld a,(Ctrl_1)
 632  87D3 CB 5F        	bit 3,a
 633  87D5 20 FE        	jr nz,$
 634  87D7
 635  87D7 21 00 70     	ld hl,Album_de_fotos
 636  87DA EB           	ex de,hl
 637  87DB 2A E3 85     	ld hl,(Stack_snapshot)
 638  87DE
 639  87DE 06 00        	ld b,0
 640  87E0 7D           	ld a,l
 641  87E1 93           	sub e
 642  87E2 28 07        	jr z,1F
 643  87E4
 644  87E4              ; Nº de malotes no es "0".
 645  87E4
 646  87E4 D6 06        2 sub 6
 647  87E6 04           	inc b
 648  87E7 A7           	and a
 649  87E8 20 FA        	jr nz,2B
 650  87EA 78           	ld a,b
 651  87EB
 652  87EB 32 DE 85     1 ld (Numero_de_malotes),a
 653  87EE C9           	ret
 654  87EF
 655  87EF              ; -------------------------------------------------------------------------------------------------------------
 656  87EF              ;
 657  87EF              ; 28/2/23
 658  87EF              ;
 659  87EF
 660  87EF              Calcula_numero_de_disparotes
 661  87EF
 662  87EF 21 60 70     	ld hl,Album_de_fotos_disparos
 663  87F2 EB           	ex de,hl
 664  87F3 2A E5 85     	ld hl,(Stack_snapshot_disparos)
 665  87F6
 666  87F6 06 00        	ld b,0
 667  87F8 7D           	ld a,l
 668  87F9 93           	sub e
 669  87FA 28 07        	jr z,1F
 670  87FC
 671  87FC              ; Nº de malotes no es "0".
 672  87FC
 673  87FC D6 06        2 sub 6
 674  87FE 04           	inc b
 675  87FF A7           	and a
 676  8800 20 FA        	jr nz,2B
 677  8802 78           	ld a,b
 678  8803
 679  8803 32 E7 85     1 ld (Numero_de_disparotes),a
 680  8806 C9           	ret
 681  8807              ; *************************************************************************************************************************************************************
 682  8807              ;
 683  8807              ; 20/10/22
 684  8807              ;
 685  8807              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 686  8807              ;
 687  8807              ; Destruye el puntero y DE !!!!!
 688  8807
 689  8807 5E           Extrae_address ld e,(hl)
 690  8808 23           	inc hl
 691  8809 56           	ld d,(hl)
 692  880A 2B           	dec hl
 693  880B EB           	ex de,hl
 694  880C C9           	ret
 695  880D
 696  880D              ; *************************************************************************************************************************************************************
 697  880D              ;
 698  880D              ;	7/2/23
 699  880D              ;
 700  880D              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 701  880D              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 702  880D              ;
 703  880D              ;   Destruye HL y BC !!!!!,
 704  880D              ;
 705  880D              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 706  880D              ;					"0" ..... Izquierda.
 707  880D
 708  880D              Inicia_Puntero_objeto
 709  880D
 710  880D 3A AF 85     	ld a,(Cuad_objeto)
 711  8810 E6 01        	and 1
 712  8812 F5           	push af
 713  8813 CC 31 88     	call z,Inicia_puntero_objeto_izq
 714  8816 F1           	pop af
 715  8817 28 2B        	jr z,1F
 716  8819 CD 1E 88     	call Inicia_puntero_objeto_der
 717  881C 18 26        	jr 1F
 718  881E
 719  881E              ; Arrancamos desde la parte izquierda de la pantalla.
 720  881E              ; Iniciamos (Indice_Sprite_der).
 721  881E
 722  881E 2A A5 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 723  8821 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 724  8824 CD 07 88     	call Extrae_address
 725  8827 22 9F 85     	ld (Puntero_objeto),hl
 726  882A
 727  882A 2A A7 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
 728  882D 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 729  8830 C9           	ret
 730  8831
 731  8831              ; Arrancamos desde la parte derecha de la pantalla.
 732  8831              ; Iniciamos (Indice_Sprite_izq).
 733  8831
 734  8831 2A A7 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
 735  8834 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 736  8837 CD 07 88     	call Extrae_address
 737  883A 22 9F 85     	ld (Puntero_objeto),hl
 738  883D
 739  883D 2A A5 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
 740  8840 22 A9 85     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
 741  8843 C9           	ret
 742  8844
 743  8844              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
 744  8844
 745  8844 21 38 83     1 ld hl,Amadeus
 746  8847 ED 4B 9F 85  	ld bc,(Puntero_objeto)
 747  884B B7 ED 42     	sub hl,bc
 748  884E C0           	ret nz
 749  884F 21 C9 85     	ld hl,Ctrl_0
 750  8852 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
 751  8854 C9           	ret 												; _de nuestra nave en los extremos.
 752  8855
 753  8855              ; *************************************************************************************************************************************************************
 754  8855              ;
 755  8855              ;	8/1/23
 756  8855              ;
 757  8855              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
 758  8855              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
 759  8855
 760  8855              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
 761  8855              ;	_de la 2ª y 3ª entidad respectivamente.
 762  8855
 763  8855              Store_Restore_entidades
 764  8855
 765  8855 E5           	push hl
 766  8856 D5           	push de
 767  8857 C5            	push bc
 768  8858
 769  8858              ;	STORE !!!!!
 770  8858              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
 771  8858
 772  8858 21 9B 85     	ld hl,Filas
 773  885B ED 5B D7 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
 774  885F 01 3B 00     	ld bc,59
 775  8862 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
 776  8864
 777  8864              ; 	Entidad_sospechosa. 20/4/23
 778  8864
 779  8864 3A B4 85     	ld a,(Impacto)
 780  8867 A7           	and a
 781  8868 28 0C        	jr z,1F
 782  886A
 783  886A 2A D7 85     	ld hl,(Puntero_store_entidades) 					; Si la rutina [Compara_coordenadas_X] detecta que hay_
 784  886D 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 785  8870 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 786  8871 ED 4A        	adc hl,bc 											; _ "0" más adelante.
 787  8873 22 ED 85     	ld (Entidad_sospechosa_de_colision),hl
 788  8876
 789  8876              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
 790  8876
 791  8876 2A D9 85     1 ld hl,(Puntero_restore_entidades)
 792  8879 22 D7 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
 793  887C
 794  887C 11 9B 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
 795  887F 01 3B 00     	ld bc,59
 796  8882 ED B0        	ldir
 797  8884
 798  8884              ;	Incrementa RESTORE !!!!!
 799  8884
 800  8884 2A DB 85         ld hl,(Indice_restore)
 801  8887 23           	inc hl
 802  8888 23           	inc hl
 803  8889 22 DB 85     	ld (Indice_restore),hl
 804  888C CD 07 88         call Extrae_address
 805  888F 22 D9 85         ld (Puntero_restore_entidades),hl
 806  8892
 807  8892 C1           	pop bc
 808  8893 D1           	pop de
 809  8894 E1           	pop hl
 810  8895 C9           	ret
 811  8896
 812  8896              ; **************************************************************************************************
 813  8896              ;
 814  8896              ;	29/10/22
 815  8896              ;
 816  8896              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
 817  8896
 818  8896 E5           Restore_Primera_entidad push hl
 819  8897 D5           	push de
 820  8898 C5            	push bc
 821  8899 2A D7 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
 822  889C 11 9B 85     	ld de,Filas
 823  889F 01 3B 00     	ld bc,59
 824  88A2 ED B0        	ldir
 825  88A4 C1           	pop bc
 826  88A5 D1           	pop de
 827  88A6 E1           	pop hl
 828  88A7 C9           	ret
 829  88A8
 830  88A8              ; **************************************************************************************************
 831  88A8              ;
 832  88A8              ;	25/01/23
 833  88A8              ;
 834  88A8              ;	Restore_Amadeus
 835  88A8              ;
 836  88A8              ;	Cargamos en DRAW los parámetros de Amadeus.
 837  88A8              ;
 838  88A8
 839  88A8 E5           Restore_Amadeus	push hl
 840  88A9 D5           	push de
 841  88AA C5            	push bc
 842  88AB 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
 843  88AE 11 9B 85     	ld de,Filas
 844  88B1 01 3B 00     	ld bc,59
 845  88B4 ED B0        	ldir
 846  88B6 C1           	pop bc
 847  88B7 D1           	pop de
 848  88B8 E1           	pop hl
 849  88B9 C9           	ret
 850  88BA
 851  88BA              ; *************************************************************************************************************************************************************
 852  88BA              ;
 853  88BA              ;	29/01/23
 854  88BA              ;
 855  88BA              ;	Store_Amadeus
 856  88BA              ;
 857  88BA              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
 858  88BA              ;
 859  88BA
 860  88BA E5           Store_Amadeus push hl
 861  88BB D5           	push de
 862  88BC C5            	push bc
 863  88BD 21 9B 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
 864  88C0 11 74 84     	ld de,Amadeus_db
 865  88C3 01 3B 00     	ld bc,59
 866  88C6 ED B0        	ldir
 867  88C8 C1           	pop bc
 868  88C9 D1           	pop de
 869  88CA E1           	pop hl
 870  88CB C9           	ret
 871  88CC
 872  88CC              ; **************************************************************************************************
 873  88CC
 874  88CC              ; -----------------------------------------------------------
 875  88CC              ;
 876  88CC              ;	27/04/23
 877  88CC              ;
 878  88CC              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
 879  88CC              ;
 880  88CC              ;	Destruye: HL,BC,DE,A
 881  88CC
 882  88CC 21 9B 85     Borra_datos_entidad ld hl,Filas
 883  88CF 01 3A 00     	ld bc,58
 884  88D2 AF           	xor a
 885  88D3 77           	ld (hl),a
 886  88D4 11 9C 85     	ld de,Filas+1
 887  88D7 ED B0        	ldir
 888  88D9 C9           	ret
 889  88DA
 890  88DA              ; -----------------------------------------------------------
 891  88DA
 892  88DA              ; Teclado.
 893  88DA
 894  88DA 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
 895  88DC DB FE        	in a,($fe)
 896  88DE E6 01        	and $01
 897  88E0 28 02        	jr z,1f
 898  88E2 18 F6        	jr Pulsa_ENTER
 899  88E4 C9           1 ret
 900  88E5
 901  88E5              ; **************************************************************************************************
 902  88E5              ;
 903  88E5              ; Temporización.
 904  88E5
 905  88E5              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
 906  88E5              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
 907  88E5              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
 908  88E5              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
 909  88E5
 910  88E5              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
 911  88E5              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
 912  88E5              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
 913  88E5
 914  88E5              ; A partir de $4f61 no hace falta DELAY.
 915  88E5
 916  88E5              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
 917  88E5
 918  88E5 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
 919  88E8 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
 920  88E9 78           	LD A,B
 921  88EA A7           	AND A
 922  88EB 20 FB        	JR NZ,wait
 923  88ED C9           	RET
 924  88EE
 925  88EE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 926  88EE              ;
 927  88EE              ;	5/3/23
 928  88EE              ;
 929  88EE              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
 930  88EE
 931  88EE              Movimiento_Amadeus
 932  88EE
 933  88EE              ; Disparo.
 934  88EE
 935  88EE 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 936  88F1 A7           	and a
 937  88F2 20 02        	jr nz,1F
 938  88F4 18 15        	jr 2F
 939  88F6
 940  88F6 3E F7        1 ld a,$f7													; "5" para disparar.
 941  88F8 DB FE        	in a,($fe)
 942  88FA E6 10        	and $10
 943  88FC
 944  88FC F5           	push af
 945  88FD CC 67 89     	call z,Genera_disparo
 946  8900 F1           	pop af
 947  8901 20 08        	jr nz,2F
 948  8903
 949  8903 3A F7 85     	ld a,(Habilita_disparo_Amadeus)
 950  8906 EE 01        	xor 1
 951  8908 32 F7 85     	ld (Habilita_disparo_Amadeus),a
 952  890B
 953  890B 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
 954  890D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 955  890F E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
 956  8911 CC B8 94         call z,Mov_left											;			"			"			"			"			"			"			"			"
 957  8914 3E F7        	ld a,$f7
 958  8916 DB FE        	in a,($fe)
 959  8918 E6 01        	and $01
 960  891A C8           	ret z
 961  891B
 962  891B 3E F7        	ld a,$f7
 963  891D DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
 964  891F E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
 965  8921 CC 9A 93     	call z,Mov_right										;			"			"			"			"			"			"			"			"
 966  8924 C9           	ret
 967  8925
 968  8925              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 969  8925              ;
 970  8925              ;	Rutina provisional para que los malotes cagen balas.
 971  8925
 972  8925              Detecta_disparo_entidad
 973  8925
 974  8925 3A FA 85     	ld a,(Habilita_disparo_entidad)
 975  8928 A7           	and a
 976  8929 C8           	ret z
 977  892A 3E 7F        	ld a,$7f
 978  892C DB FE        	in a,($fe)
 979  892E E6 01        	and 1
 980  8930 C0           	ret nz
 981  8931 CD 67 89     	call Genera_disparo
 982  8934 C9           	ret
 983  8935
 984  8935              ; Pinta indicadores de FILAS. ------------------------------------------------------
 985  8935
 986  8935 21 00 40     Pinta_FILAS ld hl,$4000	;$4010
 987  8938
 988  8938              ; ----------
 989  8938 06 20        	ld b,32
 990  893A E5           2 push hl
 991  893B C5           	push bc
 992  893C              ; ----------
 993  893C
 994  893C 06 BF        	ld b,$bf
 995  893E 36 80        1 ld (hl),%10000000
 996  8940 CD 60 90     	call NextScan
 997  8943 10 F9        	djnz 1B
 998  8945
 999  8945              ; ----------
1000  8945 C1           	pop bc
1001  8946 E1           	pop hl
1002  8947 2C           	inc l
1003  8948 10 F0        	djnz 2B
1004  894A              ; ----------
1005  894A
1006  894A 06 03        	ld b,3
1007  894C 21 00 47         ld hl,$4700
1008  894F CD 55 89     3 call Bucle_1
1009  8952 10 FB            djnz 3B
1010  8954 C9               ret
1011  8955
1012  8955 C5           Bucle_1 push bc
1013  8956 E5                   push hl
1014  8957 D1                   pop de
1015  8958 13                   inc de
1016  8959 01 FF 00             ld bc,255
1017  895C 36 FF                ld (hl),255
1018  895E ED B0                ldir
1019  8960 23                   inc hl
1020  8961 3E 07                ld a,7
1021  8963 84                   add a,h
1022  8964 67                   ld h,a
1023  8965 C1                   pop bc
1024  8966 C9                   ret
1025  8967
1026  8967              ; ---------------------------------------------------------------
1027  8967
1028  8967              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8967              ; ******************************************************************************************************************************************************************************************
   2+ 8967              ;
   3+ 8967              ;   17/04/23
   4+ 8967              ;
   5+ 8967              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8967              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8967              ;
   8+ 8967              ;
   9+ 8967              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8967              ;
  11+ 8967              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8967              ;               _ hacen las entidades hacia abajo.
  13+ 8967              ;
  14+ 8967              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8967              ;
  16+ 8967              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8967              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8967              ;
  19+ 8967              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8967              ;           _ la bala.
  21+ 8967              ;
  22+ 8967              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8967              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8967              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8967              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8967              ;           _ en el momento de generarse la bala)).
  27+ 8967
  28+ 8967              Genera_disparo
  29+ 8967
  30+ 8967              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8967              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8967              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8967              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8967              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8967              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8967              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8967
  38+ 8967              ; Exclusiones:
  39+ 8967
  40+ 8967 3A D2 85         ld a,(Columnas)
  41+ 896A 47               ld b,a
  42+ 896B 3A 9C 85         ld a,(Columns)
  43+ 896E B8               cp b
  44+ 896F C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8970
  46+ 8970              ; ----- ----- -----
  47+ 8970
  48+ 8970 3A C9 85         ld a,(Ctrl_0)
  49+ 8973 CB 77            bit 6,a
  50+ 8975 20 06            jr nz,14F
  51+ 8977
  52+ 8977 3A A2 85         ld a,(Coordenada_y)
  53+ 897A FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 897C D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 897D
  56+ 897D 21 00 80     14 ld hl,Indice_disparo
  57+ 8980 3A A3 85         ld a,(CTRL_DESPLZ)
  58+ 8983 4F               ld c,a
  59+ 8984 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8986              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8986              ;                                            ""        ""       "f9", B="1"
  62+ 8986              ;                                            ""        ""       "fb", B="2"
  63+ 8986              ;                                            ""        ""       "fb", B="3"
  64+ 8986 A7               and a
  65+ 8987 28 10            jr z,1F
  66+ 8989 E6 01            and 1
  67+ 898B C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 898C
  69+ 898C 79               ld a,c
  70+ 898D 16 F9            ld d,$f9
  71+ 898F 23           2 inc hl
  72+ 8990 23               inc hl
  73+ 8991 04               inc b
  74+ 8992 BA               cp d
  75+ 8993 28 04            jr z,1F
  76+ 8995 14               inc d
  77+ 8996 14               inc d
  78+ 8997 18 F6            jr 2B
  79+ 8999
  80+ 8999 CD 07 88     1 call Extrae_address
  81+ 899C E5               push hl
  82+ 899D FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 899F DD 21 F3 92  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 89A3
  85+ 89A3              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 89A3              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 89A3
  88+ 89A3 3A C9 85         ld a,(Ctrl_0)
  89+ 89A6 CB 77            bit 6,a
  90+ 89A8 20 04            jr nz,19F
  91+ 89AA
  92+ 89AA AF               xor a
  93+ 89AB 32 FA 85         ld (Habilita_disparo_entidad),a
  94+ 89AE
  95+ 89AE 3A AF 85     19 ld a,(Cuad_objeto)
  96+ 89B1 FE 02            cp 2
  97+ 89B3 38 66            jr c,3F
  98+ 89B5 28 64            jr z,3F
  99+ 89B7
 100+ 89B7              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 89B7
 102+ 89B7 E6 01            and 1
 103+ 89B9 28 30            jr z,4F
 104+ 89BB
 105+ 89BB              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 89BB              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 89BB              ;
 108+ 89BB              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 89BB              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 89BB              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 89BB
 112+ 89BB 2A 9D 85     	ld hl,(Posicion_actual)
 113+ 89BE
 114+ 89BE              ;   Amadeus o entidad ???.
 115+ 89BE
 116+ 89BE 3A C9 85         ld a,(Ctrl_0)
 117+ 89C1 CB 77            bit 6,a
 118+ 89C3 28 0A            jr z,8F
 119+ 89C5
 120+ 89C5              ; 	Dispara Amadeus.
 121+ 89C5
 122+ 89C5 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 89C7 CD 6F 90         call PreviousScan
 124+ 89CA CD 6F 90         call PreviousScan
 125+ 89CD
 126+ 89CD              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 89CD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 89CD              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 89CD              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 89CD
 131+ 89CD 18 11            jr 10F
 132+ 89CF
 133+ 89CF              ; 	Dispara Entidad.
 134+ 89CF
 135+ 89CF 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 89D2              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 89D2
 138+ 89D2              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 89D2              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 89D2
 141+ 89D2 C5               push bc
 142+ 89D3 06 10            ld b,16
 143+ 89D5 CD 60 90     9 call NextScan
 144+ 89D8 10 FB            djnz 9B
 145+ 89DA C1               pop bc
 146+ 89DB CD 45 8A         call Ajusta_disparo_parte_izquierda
 147+ 89DE 18 06            jr 17F
 148+ 89E0
 149+ 89E0              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 89E0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 89E0              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 89E0              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 89E0
 154+ 89E0 CD 45 8A     10 call Ajusta_disparo_parte_izquierda
 155+ 89E3 CD BA 8A         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 89E6              ;                                                      ; _al generar el disparo.
 157+ 89E6
 158+ 89E6              ; 	LLegados a este punto tendremos:
 159+ 89E6              ;
 160+ 89E6              ;       Puntero_objeto_disparo en IY.
 161+ 89E6              ;       Rutinas_de_impresion en IX.
 162+ 89E6              ;       Puntero_de_impresion en HL.
 163+ 89E6              ;       Impacto/Dirección en BC.
 164+ 89E6
 165+ 89E6 CD 4D 8A     17 call Almacena_disparo
 166+ 89E9 18 52            jr 6F                                             ; RET.
 167+ 89EB
 168+ 89EB              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 89EB              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 89EB              ;
 171+ 89EB              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 89EB              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 89EB              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 89EB
 175+ 89EB 2A 9D 85     4 ld hl,(Posicion_actual)
 176+ 89EE
 177+ 89EE              ;   Amadeus o entidad ???.
 178+ 89EE
 179+ 89EE 3A C9 85         ld a,(Ctrl_0)
 180+ 89F1 CB 77            bit 6,a
 181+ 89F3 28 0A            jr z,11F
 182+ 89F5
 183+ 89F5              ; 	Dispara Amadeus.
 184+ 89F5
 185+ 89F5 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 89F7 CD 6F 90         call PreviousScan
 187+ 89FA CD 6F 90         call PreviousScan
 188+ 89FD
 189+ 89FD              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 89FD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 89FD              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 89FD              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 89FD
 194+ 89FD 18 11            jr 13F
 195+ 89FF
 196+ 89FF              ; 	Dispara Entidad.
 197+ 89FF
 198+ 89FF 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8A02              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8A02
 201+ 8A02              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8A02              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8A02
 204+ 8A02 C5               push bc
 205+ 8A03 06 10            ld b,16
 206+ 8A05 CD 60 90     12 call NextScan
 207+ 8A08 10 FB            djnz 12B
 208+ 8A0A C1               pop bc
 209+ 8A0B
 210+ 8A0B CD 3E 8A         call Ajusta_disparo_parte_derecha
 211+ 8A0E 18 06            jr 18F
 212+ 8A10
 213+ 8A10              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8A10              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8A10              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8A10              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8A10
 218+ 8A10 CD 3E 8A     13 call Ajusta_disparo_parte_derecha
 219+ 8A13 CD BA 8A         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8A16              ;                                                       ; _al generar el disparo.
 221+ 8A16
 222+ 8A16              ; LLegados a este punto tendremos:
 223+ 8A16              ;
 224+ 8A16              ;       Puntero_objeto_disparo en IY.
 225+ 8A16              ;       Rutinas_de_impresion en IX.
 226+ 8A16              ;       Puntero_de_impresion en HL.
 227+ 8A16              ;       Impacto/Dirección en BC.
 228+ 8A16
 229+ 8A16 CD 4D 8A     18 call Almacena_disparo
 230+ 8A19 18 22            jr 6F                                               ; RET.
 231+ 8A1B
 232+ 8A1B              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8A1B
 234+ 8A1B 28 11        3 jr z,5F
 235+ 8A1D
 236+ 8A1D              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8A1D              ;
 238+ 8A1D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8A1D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8A1D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8A1D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8A1D
 243+ 8A1D              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8A1D              ;	   ""        ""       "f9", B="1"
 245+ 8A1D              ;	   ""        ""       "fb", B="2"
 246+ 8A1D              ; 	   ""        ""       "fb", B="3"
 247+ 8A1D
 248+ 8A1D 2A 9D 85     	ld hl,(Posicion_actual)
 249+ 8A20 CD 60 90     	call NextScan
 250+ 8A23
 251+ 8A23              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8A23              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8A23              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8A23              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8A23
 256+ 8A23 CD 45 8A         call Ajusta_disparo_parte_izquierda
 257+ 8A26
 258+ 8A26              ; 	No se produce impacto. B="$80"
 259+ 8A26              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8A26
 261+ 8A26 01 80 80         ld bc,$8080
 262+ 8A29
 263+ 8A29              ; 	LLegados a este punto tendremos:
 264+ 8A29              ;
 265+ 8A29              ;       Puntero_objeto_disparo en IY.
 266+ 8A29              ;       Rutinas_de_impresion en IX.
 267+ 8A29              ;       Puntero_de_impresion en HL.
 268+ 8A29              ;       Impacto/Dirección en BC.
 269+ 8A29
 270+ 8A29 CD 4D 8A         call Almacena_disparo
 271+ 8A2C 18 0F            jr 6F                                           ; RET.
 272+ 8A2E
 273+ 8A2E              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8A2E              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8A2E              ;
 276+ 8A2E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8A2E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8A2E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8A2E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8A2E
 281+ 8A2E 2A 9D 85     5 ld hl,(Posicion_actual)
 282+ 8A31 CD 60 90     	call NextScan
 283+ 8A34
 284+ 8A34              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8A34              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8A34              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8A34              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8A34
 289+ 8A34 CD 3E 8A         call Ajusta_disparo_parte_derecha
 290+ 8A37
 291+ 8A37              ; 	No se produce impacto. B="$80"
 292+ 8A37              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8A37
 294+ 8A37 01 80 80     15 ld bc,$8080
 295+ 8A3A
 296+ 8A3A              ; 	LLegados a este punto tendremos:
 297+ 8A3A              ;
 298+ 8A3A              ;       Puntero_objeto_disparo en IY.
 299+ 8A3A              ;       Rutinas_de_impresion en IX.
 300+ 8A3A              ;       Puntero_de_impresion en HL.
 301+ 8A3A              ;       Impacto/Dirección en BC.
 302+ 8A3A
 303+ 8A3A CD 4D 8A         call Almacena_disparo
 304+ 8A3D
 305+ 8A3D C9           6 ret
 306+ 8A3E
 307+ 8A3E              ; ----------------------------------------------------------------
 308+ 8A3E              ;
 309+ 8A3E              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8A3E              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8A3E              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8A3E
 313+ 8A3E 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8A3F FE 02            cp 2
 315+ 8A41 38 01            jr c,1F
 316+ 8A43 23               inc hl
 317+ 8A44 C9           1 ret
 318+ 8A45
 319+ 8A45 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8A46 FE 01        	cp 1
 321+ 8A48 20 01        	jr nz,1F
 322+ 8A4A 2B           	dec hl
 323+ 8A4B 2B           1 dec hl
 324+ 8A4C C9               ret
 325+ 8A4D
 326+ 8A4D              ; ----------------------------------------------------------------
 327+ 8A4D              ;
 328+ 8A4D              ;   25/02/23
 329+ 8A4D              ;
 330+ 8A4D              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8A4D              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8A4D              ;
 333+ 8A4D              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8A4D              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8A4D
 336+ 8A4D              Almacena_disparo
 337+ 8A4D
 338+ 8A4D E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8A4E F1               pop af
 340+ 8A4F 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8A50
 342+ 8A50 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8A51 E6 01            and 1
 344+ 8A53 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8A55              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8A55              ; 	Dispara AMADEUS.
 347+ 8A55
 348+ 8A55              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8A55              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8A55              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8A55              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8A55
 353+ 8A55 C5               push bc
 354+ 8A56 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8A59 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8A5C A7               and a
 357+ 8A5D ED 42            sbc hl,bc
 358+ 8A5F CC C9 87         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8A62 C1               pop bc
 360+ 8A63 28 54            jr z,4F
 361+ 8A65
 362+ 8A65 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8A68 23               inc hl
 364+ 8A69 23               inc hl
 365+ 8A6A 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8A6D              ;                                                   ; _ Disparo_(+1).
 367+ 8A6D 18 18            jr 2F
 368+ 8A6F
 369+ 8A6F              ; Dispara una entidad.
 370+ 8A6F
 371+ 8A6F C5           1 push bc
 372+ 8A70 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8A73 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8A76 A7               and a
 375+ 8A77 ED 42            sbc hl,bc
 376+ 8A79 CC C2 87         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8A7C C1               pop bc
 378+ 8A7D 28 3A            jr z,4F
 379+ 8A7F
 380+ 8A7F 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8A82 23               inc hl
 382+ 8A83 23               inc hl
 383+ 8A84 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8A87              ;                                                   ; _ Disparo_(+1).
 385+ 8A87 CD 07 88     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8A8A              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8A8A              ;
 388+ 8A8A              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8A8A              ;                                                     Rutinas_de_impresion en IX.
 390+ 8A8A              ;                                                     Puntero_de_impresion en HL.
 391+ 8A8A              ;                                                     Impacto/Dirección en BC.
 392+ 8A8A
 393+ 8A8A 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8A8B 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8A8C 23               inc hl                                          ; _ al siguiente.
 396+ 8A8D A7               and a
 397+ 8A8E 20 C0            jr nz,3B
 398+ 8A90
 399+ 8A90 08               ex af,af
 400+ 8A91 ED 73 DF 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8A95 F9               ld sp,hl
 402+ 8A96
 403+ 8A96 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8A98 F5               push af                                         ; Puntero de impresión.
 405+ 8A99 FD E5            push iy                                         ; Puntero objeto.
 406+ 8A9B C5               push bc                                         ; Control.
 407+ 8A9C
 408+ 8A9C ED 7B DF 85      ld sp,(Stack)
 409+ 8AA0
 410+ 8AA0              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8AA0
 412+ 8AA0 21 D6 85     	ld hl,Ctrl_1
 413+ 8AA3 CB C6        	set 0,(hl)
 414+ 8AA5
 415+ 8AA5 DD E5        	push ix
 416+ 8AA7 E1               pop hl
 417+ 8AA8 F5               push af
 418+ 8AA9 DD E1            pop ix
 419+ 8AAB
 420+ 8AAB CD A0 7F     	call Guarda_foto_registros
 421+ 8AAE
 422+ 8AAE 21 D6 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8AB1 CB 86        	res 0,(hl)
 424+ 8AB3
 425+ 8AB3              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8AB3              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8AB3
 428+ 8AB3 CD C9 87         call Inicia_Puntero_Disparo_Amadeus
 429+ 8AB6 CD C2 87         call Inicia_Puntero_Disparo_Entidades
 430+ 8AB9
 431+ 8AB9 C9           4 ret
 432+ 8ABA
 433+ 8ABA              ; ----------------------------------------------------------------
 434+ 8ABA              ;
 435+ 8ABA              ;   4/3/23
 436+ 8ABA              ;
 437+ 8ABA              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8ABA              ;   _ al generarse el disparo.
 439+ 8ABA              ;
 440+ 8ABA              ;       "$80" ..... No se produce colisión.
 441+ 8ABA              ;       "$81" ..... Se produce colisión.
 442+ 8ABA
 443+ 8ABA              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8ABA              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8ABA
 446+ 8ABA
 447+ 8ABA FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8ABC E5               push hl                                        ; Puntero de impresión.
 449+ 8ABD 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 450+ 8ABF CD DB 8A         call Bucle_2                                   ; Comprobamos el 1er scanline.
 451+ 8AC2
 452+ 8AC2 7B               ld a,e
 453+ 8AC3 E6 01            and 1
 454+ 8AC5 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 455+ 8AC7
 456+ 8AC7 E1               pop hl
 457+ 8AC8 E5               push hl
 458+ 8AC9 CD 60 90         call NextScan
 459+ 8ACC
 460+ 8ACC 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 461+ 8ACD FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 462+ 8ACF 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 463+ 8AD1              ;                                                  ; _ 2º scanline si esto es así.
 464+ 8AD1 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 465+ 8AD3 CD DB 8A         call Bucle_2
 466+ 8AD6
 467+ 8AD6 43           2 ld b,e
 468+ 8AD7 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 469+ 8AD8 FD E1            pop iy
 470+ 8ADA C9               ret
 471+ 8ADB
 472+ 8ADB               ; ---------- ----------
 473+ 8ADB
 474+ 8ADB 06 02        Bucle_2 ld b,2
 475+ 8ADD FD 7E 00     2 ld a,(iy)
 476+ 8AE0 A6               and (hl)
 477+ 8AE1 28 02            jr z,1F
 478+ 8AE3 1E 81            ld e,$81
 479+ 8AE5 23           1 inc hl
 480+ 8AE6 FD 23            inc iy
 481+ 8AE8 10 F3            djnz 2B
 482+ 8AEA C9               ret
 483+ 8AEB
 484+ 8AEB              ; -------------------------------------------------------------------------------------------------------------
 485+ 8AEB              ;
 486+ 8AEB              ;   11/04/23
 487+ 8AEB              ;
 488+ 8AEB              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 489+ 8AEB              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 490+ 8AEB              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 491+ 8AEB              ;
 492+ 8AEB              ;   MODIFICA: HL,DE,BC,A y AF´.
 493+ 8AEB
 494+ 8AEB              Compara_coordenadas_X
 495+ 8AEB
 496+ 8AEB              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 497+ 8AEB              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 498+ 8AEB
 499+ 8AEB              ; Preparamos registros:
 500+ 8AEB
 501+ 8AEB 21 A1 85         ld hl,Filas+6
 502+ 8AEE 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 503+ 8AEF 23               inc hl
 504+ 8AF0 23               inc hl
 505+ 8AF1 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 506+ 8AF2 43               ld b,e
 507+ 8AF3 21 AF 85         ld hl,Filas+20
 508+ 8AF6 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 509+ 8AF7 21 F4 85         ld hl,Coordenadas_X_Entidad
 510+ 8AFA CD 09 8D         call Guarda_coordenadas_X
 511+ 8AFD
 512+ 8AFD              ; Preparamos registros:
 513+ 8AFD
 514+ 8AFD 21 7A 84         ld hl,Amadeus_db+6
 515+ 8B00 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 516+ 8B01 23               inc hl
 517+ 8B02 23               inc hl
 518+ 8B03 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 519+ 8B04 7B               ld a,e
 520+ 8B05 08               ex af,af'
 521+ 8B06 21 88 84         ld hl,Amadeus_db+20
 522+ 8B09 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 523+ 8B0A 21 F1 85         ld hl,Coordenadas_X_Amadeus
 524+ 8B0D CD 09 8D         call Guarda_coordenadas_X
 525+ 8B10
 526+ 8B10              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 527+ 8B10              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 528+ 8B10
 529+ 8B10 04               inc b
 530+ 8B11 05               dec b
 531+ 8B12 28 04            jr z,1F
 532+ 8B14 06 03            ld b,3
 533+ 8B16 18 02            jr 2F
 534+ 8B18 06 02        1 ld b,2
 535+ 8B1A 08           2 ex af,af'
 536+ 8B1B 3C               inc a
 537+ 8B1C 3D               dec a
 538+ 8B1D 28 04            jr z,5F
 539+ 8B1F 0E 03            ld c,3
 540+ 8B21 18 02            jr 6F
 541+ 8B23 0E 02        5 ld c,2
 542+ 8B25 79           6 ld a,c
 543+ 8B26 08               ex af,af'
 544+ 8B27 11 F4 85         ld de,Coordenadas_X_Entidad
 545+ 8B2A 1A           4 ld a,(de)
 546+ 8B2B 21 F1 85         ld hl,Coordenadas_X_Amadeus
 547+ 8B2E BE           3 cp (hl)
 548+ 8B2F 28 0E            jr z,7F
 549+ 8B31 23               inc hl
 550+ 8B32 0D               dec c
 551+ 8B33 20 F9            jr nz,3B
 552+ 8B35 13               inc de
 553+ 8B36 08               ex af,af'
 554+ 8B37 4F               ld c,a
 555+ 8B38 08               ex af,af'
 556+ 8B39 10 EF            djnz 4B
 557+ 8B3B
 558+ 8B3B              ; Limpiamos los almacenes de coordenadas y salimos.
 559+ 8B3B
 560+ 8B3B CD 48 8D     8 call Limpia_Coordenadas_X
 561+ 8B3E C9               ret
 562+ 8B3F
 563+ 8B3F 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 564+ 8B41 32 B4 85         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 565+ 8B44 21 EC 85         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 566+ 8B47 CB D6            set 2,(hl)
 567+ 8B49 18 F0            jr 8B
 568+ 8B4B
 569+ 8B4B              ; -----------------------------------------------------------------------
 570+ 8B4B              ;
 571+ 8B4B              ;   17/04/23
 572+ 8B4B              ;
 573+ 8B4B
 574+ 8B4B              Detecta_colision_nave_entidad
 575+ 8B4B
 576+ 8B4B              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 577+ 8B4B
 578+ 8B4B 2A 9D 85         ld hl,(Posicion_actual)
 579+ 8B4E CD C5 8F         call Calcula_puntero_de_impresion
 580+ 8B51
 581+ 8B51              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 582+ 8B51              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 583+ 8B51
 584+ 8B51 DD E5            push ix
 585+ 8B53 E1               pop hl
 586+ 8B54 E5               push hl
 587+ 8B55
 588+ 8B55              ; ----- ----- -----
 589+ 8B55 1E 00            ld e,0                                         ; Indica impacto.
 590+ 8B57 06 0A            ld b,10
 591+ 8B59 CD 89 8B     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 592+ 8B5C 7B               ld a,e
 593+ 8B5D FE 05            cp 5
 594+ 8B5F 38 0E            jr c,3F
 595+ 8B61
 596+ 8B61              ; LLegados a este punto:
 597+ 8B61              ;
 598+ 8B61              ;   HAY COLISIÓN !!!!!.
 599+ 8B61              ;
 600+ 8B61              ;   .db (Impacto) de Amadeus a "1".
 601+ 8B61              ;   SET el bit3 de (Impacto2).
 602+ 8B61              ;
 603+ 8B61              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 604+ 8B61
 605+ 8B61 21 8D 84         ld hl,Amadeus_db+25
 606+ 8B64 36 01            ld (hl),1
 607+ 8B66 21 EC 85         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 608+ 8B69 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 609+ 8B6B CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 610+ 8B6D 18 18            jr 1F
 611+ 8B6F
 612+ 8B6F              ; -----
 613+ 8B6F
 614+ 8B6F E1           3 pop hl
 615+ 8B70 CD 60 90         call NextScan
 616+ 8B73 E5               push hl
 617+ 8B74 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 618+ 8B75 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 619+ 8B77 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 620+ 8B79 30 0C            jr nc,1F
 621+ 8B7B              ;                                                  ; _ 2º scanline si esto es así.
 622+ 8B7B 10 DC            djnz 2B
 623+ 8B7D
 624+ 8B7D              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 625+ 8B7D
 626+ 8B7D              ; LLegados a este punto:
 627+ 8B7D              ;
 628+ 8B7D              ;   NO HAY COLISIÓN !!!!!.
 629+ 8B7D              ;
 630+ 8B7D              ;   .db (Impacto) de Amadeus a "0".
 631+ 8B7D              ;   RES el bit2 de (Impacto2).
 632+ 8B7D              ;
 633+ 8B7D              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 8B7D              ;   Lo colocamos a "0".
 635+ 8B7D
 636+ 8B7D 21 EC 85         ld hl,Impacto2
 637+ 8B80 CB 96            res 2,(hl)
 638+ 8B82 2A ED 85         ld hl,(Entidad_sospechosa_de_colision)
 639+ 8B85 36 00            ld (hl),0
 640+ 8B87
 641+ 8B87 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 642+ 8B88 C9               ret
 643+ 8B89
 644+ 8B89               ; ---------- ----------
 645+ 8B89
 646+ 8B89 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 647+ 8B8A 3A 9C 85         ld a,(Columns)
 648+ 8B8D 47               ld b,a
 649+ 8B8E FD 7E 00     2 ld a,(iy)
 650+ 8B91 BE               cp (hl)
 651+ 8B92 28 01            jr z,1F
 652+ 8B94
 653+ 8B94 1C               inc e
 654+ 8B95
 655+ 8B95 23           1 inc hl
 656+ 8B96 FD 23            inc iy
 657+ 8B98 10 F4            djnz 2B
 658+ 8B9A C1               pop bc
 659+ 8B9B C9               ret
 660+ 8B9C
 661+ 8B9C              ; -------------------------------------------------------------------------------------------------------------
 662+ 8B9C              ;
 663+ 8B9C              ;   13/03/23
 664+ 8B9C              ;
 665+ 8B9C              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 666+ 8B9C              ;
 667+ 8B9C              ;   DESTRUYE: HL,BC,DE y A.
 668+ 8B9C
 669+ 8B9C 21 60 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 670+ 8B9F 7E               ld a,(hl)
 671+ 8BA0 A7               and a
 672+ 8BA1 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 673+ 8BA2
 674+ 8BA2 44               ld b,h
 675+ 8BA3 4D               ld c,l
 676+ 8BA4 2A E5 85         ld hl,(Stack_snapshot_disparos)
 677+ 8BA7 E5               push hl
 678+ 8BA8 A7               and a
 679+ 8BA9 ED 42            sbc hl,bc
 680+ 8BAB E5               push hl
 681+ 8BAC C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 682+ 8BAD
 683+ 8BAD E1               pop hl
 684+ 8BAE 54               ld d,h
 685+ 8BAF 5D               ld e,l
 686+ 8BB0 1B               dec de
 687+ 8BB1 ED B8            lddr                                                ; Limpiamos.
 688+ 8BB3
 689+ 8BB3 21 60 70         ld hl,Album_de_fotos_disparos
 690+ 8BB6 22 E5 85         ld (Stack_snapshot_disparos),hl
 691+ 8BB9
 692+ 8BB9 C9               ret
 693+ 8BBA
 694+ 8BBA              ; -------------------------------------------------------------------------------------------------------------
 695+ 8BBA              ;
 696+ 8BBA              ;   28/03/23
 697+ 8BBA              ;
 698+ 8BBA
 699+ 8BBA 01 FE 83     Motor_de_disparos ld bc,Disparo_3A
 700+ 8BBD 2A EA 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 701+ 8BC0
 702+ 8BC0 CD 07 88     2 call Extrae_address
 703+ 8BC3 7E               ld a,(hl)
 704+ 8BC4 A7               and a
 705+ 8BC5 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 706+ 8BC7
 707+ 8BC7              ; ----- ----- ----- ----- ----- -----
 708+ 8BC7
 709+ 8BC7 C5               push bc
 710+ 8BC8 CD 84 8C         call foto_disparo_a_borrar
 711+ 8BCB
 712+ 8BCB              ; Existe colisión con este disparo???
 713+ 8BCB
 714+ 8BCB 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 715+ 8BCC 7E               ld a,(hl)
 716+ 8BCD 2B               dec hl
 717+ 8BCE E6 01            and 1
 718+ 8BD0 28 1D            jr z,9F
 719+ 8BD2
 720+ 8BD2              ;   En este punto:
 721+ 8BD2              ;
 722+ 8BD2              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 723+ 8BD2              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 724+ 8BD2              ;   _con la entidad).
 725+ 8BD2              ;
 726+ 8BD2              ;   Disparo_2A defw 0                                ; Control.
 727+ 8BD2              ;    defw 0                                          ; Puntero objeto.
 728+ 8BD2              ;    defw 0                                          ; Puntero de impresión.
 729+ 8BD2              ;    defw 0                                          ; Rutina de impresión.
 730+ 8BD2
 731+ 8BD2 E5               push hl
 732+ 8BD3
 733+ 8BD3 06 04            ld b,4
 734+ 8BD5 23           19 inc hl
 735+ 8BD6 10 FD            djnz 19B
 736+ 8BD8
 737+ 8BD8 CD 07 88         call Extrae_address
 738+ 8BDB CD 77 96         call Genera_coordenadas_disparo
 739+ 8BDE
 740+ 8BDE              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 741+ 8BDE
 742+ 8BDE 21 EF 85         ld hl,Coordenadas_disparo_certero
 743+ 8BE1 72               ld (hl),d
 744+ 8BE2 23               inc hl
 745+ 8BE3 73               ld (hl),e
 746+ 8BE4
 747+ 8BE4              ; Elimino el disparo de la base de datos.
 748+ 8BE4
 749+ 8BE4 E1               pop hl
 750+ 8BE5 CD FE 8C         call Elimina_disparo_de_base_de_datos
 751+ 8BE8 21 EC 85         ld hl,Impacto2
 752+ 8BEB CB C6            set 0,(hl)                                        ; Indicamos que se ha producido Impacto en una entidad.
 753+ 8BED
 754+ 8BED 18 06            jr 11F
 755+ 8BEF
 756+ 8BEF CD AD 8C     9 call Mueve_disparo
 757+ 8BF2 CD 84 8C         call foto_disparo_a_borrar
 758+ 8BF5
 759+ 8BF5 C1           11 pop bc
 760+ 8BF6 18 04            jr 7F
 761+ 8BF8
 762+ 8BF8              ; ----- ----- ----- ----- ----- -----
 763+ 8BF8
 764+ 8BF8 ED 42        1 sbc hl,bc
 765+ 8BFA 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 766+ 8BFC
 767+ 8BFC 2A EA 85     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 768+ 8BFF 23               inc hl
 769+ 8C00 23               inc hl
 770+ 8C01 22 EA 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 771+ 8C04 18 BA            jr 2B
 772+ 8C06
 773+ 8C06 CD C9 87     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 8C09 01 66 84         ld bc,Disparo_11
 775+ 8C0C 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 776+ 8C0F
 777+ 8C0F CD 07 88     5 call Extrae_address
 778+ 8C12 7E               ld a,(hl)
 779+ 8C13 A7               and a
 780+ 8C14 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 781+ 8C16
 782+ 8C16              ; ----- ----- ----- ----- ----- -----
 783+ 8C16
 784+ 8C16 C5               push bc
 785+ 8C17 CD 84 8C         call foto_disparo_a_borrar
 786+ 8C1A
 787+ 8C1A              ; Existe colisión con este disparo???
 788+ 8C1A
 789+ 8C1A 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 790+ 8C1B 7E               ld a,(hl)
 791+ 8C1C 2B               dec hl
 792+ 8C1D E6 01            and 1
 793+ 8C1F 28 48            jr z,10F
 794+ 8C21
 795+ 8C21              ; La colisión se produce con Amadeus???
 796+ 8C21              ; Amadeus siempre tiene (Coordenada_y)="$16".
 797+ 8C21
 798+ 8C21 E5               push hl
 799+ 8C22
 800+ 8C22 06 04            ld b,4
 801+ 8C24 23           16 inc hl
 802+ 8C25 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 803+ 8C27 CD 07 88         call Extrae_address
 804+ 8C2A CD 77 96         call Genera_coordenadas_disparo
 805+ 8C2D
 806+ 8C2D 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 807+ 8C2E FE 16            cp $16
 808+ 8C30 38 22            jr c,15F
 809+ 8C32
 810+ 8C32              ; (Colisiones en filas 16 y 17).
 811+ 8C32
 812+ 8C32 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 813+ 8C33
 814+ 8C33              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 815+ 8C33
 816+ 8C33 21 7A 84         ld hl,Amadeus_db+6
 817+ 8C36 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 818+ 8C37 23               inc hl
 819+ 8C38 23               inc hl
 820+ 8C39 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 821+ 8C3A 21 88 84         ld hl,Amadeus_db+20
 822+ 8C3D 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 823+ 8C3E 21 F1 85         ld hl,Coordenadas_X_Amadeus
 824+ 8C41 CD 09 8D         call Guarda_coordenadas_X
 825+ 8C44
 826+ 8C44 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 827+ 8C45
 828+ 8C45              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 829+ 8C45
 830+ 8C45 06 03            ld b,3
 831+ 8C47 21 F1 85         ld hl,Coordenadas_X_Amadeus
 832+ 8C4A 7E           18 ld a,(hl)
 833+ 8C4B BA               cp d
 834+ 8C4C 20 03            jr nz,17F
 835+ 8C4E
 836+ 8C4E              ; Colisión Amadeus !!!!!!!!!!
 837+ 8C4E
 838+ 8C4E E1               pop hl
 839+ 8C4F 18 09            jr 14F
 840+ 8C51
 841+ 8C51 23           17 inc hl
 842+ 8C52 10 F6            djnz 18B
 843+ 8C54
 844+ 8C54              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 845+ 8C54              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 846+ 8C54
 847+ 8C54 E1           15 pop hl
 848+ 8C55 23               inc hl
 849+ 8C56 35               dec (hl)
 850+ 8C57 2B               dec hl
 851+ 8C58 18 0F            jr 10F
 852+ 8C5A
 853+ 8C5A              ; -----------------------debug
 854+ 8C5A
 855+ 8C5A              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 856+ 8C5A              ; _ almacén de coordenadas_X de Amadeus.
 857+ 8C5A
 858+ 8C5A E5           14 push hl
 859+ 8C5B CD FE 8C         call Elimina_disparo_de_base_de_datos
 860+ 8C5E 21 EC 85         ld hl,Impacto2
 861+ 8C61 CB CE            set 1,(hl)
 862+ 8C63 CD 48 8D         call Limpia_Coordenadas_X
 863+ 8C66
 864+ 8C66 E1               pop hl
 865+ 8C67 18 06            jr 12F
 866+ 8C69
 867+ 8C69 CD AD 8C     10 call Mueve_disparo
 868+ 8C6C CD 84 8C         call foto_disparo_a_borrar
 869+ 8C6F C1           12 pop bc
 870+ 8C70
 871+ 8C70 18 04            jr 8F
 872+ 8C72
 873+ 8C72              ; ----- ----- ----- ----- ----- -----
 874+ 8C72
 875+ 8C72 ED 42        4 sbc hl,bc
 876+ 8C74 28 0A            jr z,6F
 877+ 8C76
 878+ 8C76 2A E8 85     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 879+ 8C79 23               inc hl
 880+ 8C7A 23               inc hl
 881+ 8C7B 22 E8 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 882+ 8C7E 18 8F            jr 5B
 883+ 8C80
 884+ 8C80 CD C2 87     6 call Inicia_Puntero_Disparo_Entidades
 885+ 8C83 C9               ret
 886+ 8C84
 887+ 8C84              ; ------------------------------------------------------------------
 888+ 8C84
 889+ 8C84              foto_disparo_a_borrar
 890+ 8C84
 891+ 8C84 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 892+ 8C85 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 893+ 8C86 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 894+ 8C87
 895+ 8C87 E5               push hl
 896+ 8C88 23               inc hl
 897+ 8C89 23               inc hl
 898+ 8C8A ED 73 DF 85      ld (Stack),sp
 899+ 8C8E F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 900+ 8C8F FD E1            pop iy
 901+ 8C91 DD E1            pop ix
 902+ 8C93 E1               pop hl
 903+ 8C94 ED 7B DF 85      ld sp,(Stack)
 904+ 8C98 3A D6 85         ld a,(Ctrl_1)
 905+ 8C9B CB C7            set 0,a
 906+ 8C9D 32 D6 85         ld (Ctrl_1),a
 907+ 8CA0 CD A0 7F         call Guarda_foto_registros
 908+ 8CA3 3A D6 85         ld a,(Ctrl_1)
 909+ 8CA6 CB 87            res 0,a
 910+ 8CA8 32 D6 85         ld (Ctrl_1),a
 911+ 8CAB E1               pop hl
 912+ 8CAC C9               ret
 913+ 8CAD
 914+ 8CAD E5           Mueve_disparo push hl
 915+ 8CAE 7E               ld a,(hl)
 916+ 8CAF 06 04            ld b,4
 917+ 8CB1 23           1 inc hl
 918+ 8CB2 10 FD            djnz 1B
 919+ 8CB4
 920+ 8CB4              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 921+ 8CB4
 922+ 8CB4 CD 07 88         call Extrae_address
 923+ 8CB7
 924+ 8CB7 E6 01            and 1
 925+ 8CB9 28 2A            jr z,2F
 926+ 8CBB
 927+ 8CBB              ; Disparo hacia arriba, (Amadeus).
 928+ 8CBB
 929+ 8CBB              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 930+ 8CBB              ; _ de la dificultad.
 931+ 8CBB
 932+ 8CBB CD 6F 90         call PreviousScan
 933+ 8CBE CD 6F 90         call PreviousScan
 934+ 8CC1 CD 6F 90         call PreviousScan
 935+ 8CC4
 936+ 8CC4              ; Detecta si el disparo de Amadeus sale de pantalla:
 937+ 8CC4
 938+ 8CC4 7C               ld a,h
 939+ 8CC5 FE 40            cp $40
 940+ 8CC7 30 0B            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 941+ 8CC9
 942+ 8CC9              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 943+ 8CC9
 944+ 8CC9 EB               ex de,hl
 945+ 8CCA 06 04            ld b,4
 946+ 8CCC 2B           6 dec hl
 947+ 8CCD 10 FD            djnz 6B
 948+ 8CCF
 949+ 8CCF CD FE 8C         call Elimina_disparo_de_base_de_datos
 950+ 8CD2
 951+ 8CD2 18 0C            jr 4F
 952+ 8CD4
 953+ 8CD4              ; Se ha desplazado la bala, compruebo colisión.
 954+ 8CD4
 955+ 8CD4 D5           3 push de
 956+ 8CD5 C5               push bc
 957+ 8CD6 CD BA 8A         call Comprueba_Colision
 958+ 8CD9 78               ld a,b
 959+ 8CDA C1               pop bc
 960+ 8CDB D1               pop de
 961+ 8CDC
 962+ 8CDC EB               ex de,hl
 963+ 8CDD
 964+ 8CDD 73               ld (hl),e
 965+ 8CDE 23               inc hl
 966+ 8CDF 72               ld (hl),d
 967+ 8CE0
 968+ 8CE0 E1           4 pop hl
 969+ 8CE1 23               inc hl
 970+ 8CE2 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si hay colisión.
 971+ 8CE3 2B               dec hl
 972+ 8CE4 C9               ret
 973+ 8CE5
 974+ 8CE5              ; Disparo hacia abajo, (Entidad).
 975+ 8CE5
 976+ 8CE5              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 977+ 8CE5              ; _ de la dificultad.
 978+ 8CE5
 979+ 8CE5 CD 60 90     2 call NextScan
 980+ 8CE8 CD 60 90         call NextScan
 981+ 8CEB CD 60 90         call NextScan
 982+ 8CEE
 983+ 8CEE              ; Detecta si el disparo de la entidad sale de la pantalla.
 984+ 8CEE
 985+ 8CEE 7C               ld a,h
 986+ 8CEF FE 58            cp $58
 987+ 8CF1 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 988+ 8CF3
 989+ 8CF3 EB               ex de,hl
 990+ 8CF4 06 04            ld b,4
 991+ 8CF6 2B           5 dec hl
 992+ 8CF7 10 FD            djnz 5B
 993+ 8CF9
 994+ 8CF9 CD FE 8C         call Elimina_disparo_de_base_de_datos
 995+ 8CFC
 996+ 8CFC 18 E2            jr 4B
 997+ 8CFE
 998+ 8CFE              ; HL apunta al primer byte de la base de datos del disparo.
 999+ 8CFE
1000+ 8CFE 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1001+ 8D01 AF               xor a
1002+ 8D02 77               ld (hl),a
1003+ 8D03 54               ld d,h
1004+ 8D04 5D               ld e,l
1005+ 8D05 13               inc de
1006+ 8D06 ED B0            ldir
1007+ 8D08 C9               ret
1008+ 8D09
1009+ 8D09              ; -----------------------------------------------------------------
1010+ 8D09              ;
1011+ 8D09              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1012+ 8D09              ;
1013+ 8D09              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1014+ 8D09              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1015+ 8D09              ;
1016+ 8D09              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1017+ 8D09              ;
1018+ 8D09              ;   INPUTS:
1019+ 8D09              ;
1020+ 8D09              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1021+ 8D09              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1022+ 8D09              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1023+ 8D09
1024+ 8D09              ;   MODIFICA: A, HL, DE y C
1025+ 8D09
1026+ 8D09 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1027+ 8D0A 79               ld a,c
1028+ 8D0B E6 01            and 1
1029+ 8D0D 20 03            jr nz,1F
1030+ 8D0F 14               inc d
1031+ 8D10 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1032+ 8D12
1033+ 8D12              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1034+ 8D12              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1035+ 8D12
1036+ 8D12 15           1 dec d
1037+ 8D13 23           2 inc hl
1038+ 8D14 72               ld (hl),d
1039+ 8D15
1040+ 8D15 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1041+ 8D16 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1042+ 8D17 C8               ret z
1043+ 8D18
1044+ 8D18 AF               xor a
1045+ 8D19 5F               ld e,a
1046+ 8D1A 18 ED            jr Guarda_coordenadas_X
1047+ 8D1C
1048+ 8D1C              ; -----------------------------------------------------------------
1049+ 8D1C              ;
1050+ 8D1C              ;   12/04/23
1051+ 8D1C              ;
1052+ 8D1C
1053+ 8D1C 3A EC 85     Selector_de_impactos ld a,(Impacto2)
1054+ 8D1F A7               and a
1055+ 8D20 C8               ret z
1056+ 8D21
1057+ 8D21 FE 04            cp 4
1058+ 8D23 20 09            jr nz,1F
1059+ 8D25
1060+ 8D25
1061+ 8D25              ; La colisión se produce por contacto entre Amadeus y una entidad.
1062+ 8D25
1063+ 8D25 CD 4B 8B         call Detecta_colision_nave_entidad
1064+ 8D28
1065+ 8D28 21 EC 85         ld hl,Impacto2
1066+ 8D2B CB 5E            bit 3,(hl)
1067+ 8D2D C0               ret nz                                               ; Existe colisión, RET.
1068+ 8D2E
1069+ 8D2E              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1070+ 8D2E              ; Primero analizamos si algún disparo impacta en Amadeus.
1071+ 8D2E
1072+ 8D2E 21 EC 85     1 ld hl,Impacto2
1073+ 8D31 CB 4E            bit 1,(hl)
1074+ 8D33 28 07            jr z,2F
1075+ 8D35
1076+ 8D35 21 8D 84         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1077+ 8D38 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1078+ 8D3A 18 0B            jr 3F
1079+ 8D3C
1080+ 8D3C 21 EC 85     2 ld hl,Impacto2
1081+ 8D3F CB 46            bit 0,(hl)
1082+ 8D41 C8               ret z
1083+ 8D42
1084+ 8D42              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1085+ 8D42
1086+ 8D42 21 D6 85         ld hl,Ctrl_1
1087+ 8D45 CB D6            set 2,(hl)
1088+ 8D47
1089+ 8D47 C9           3 ret
1090+ 8D48
1091+ 8D48              ; -----------------------------------------------------------------
1092+ 8D48              ;
1093+ 8D48              ;   16/04/23
1094+ 8D48              ;
1095+ 8D48
1096+ 8D48 AF           Limpia_Coordenadas_X xor a
1097+ 8D49 06 06            ld b,6
1098+ 8D4B 21 F1 85         ld hl,Coordenadas_X_Amadeus
1099+ 8D4E 77           1 ld (hl),a
1100+ 8D4F 23               inc hl
1101+ 8D50 10 FC            djnz 1B
1102+ 8D52 C9               ret
1103+ 8D53
1104+ 8D53              ; -----------------------------------------------------------------
1105+ 8D53              ;
1106+ 8D53              ;   25/04/23
1107+ 8D53              ;
1108+ 8D53
1109+ 8D53              Determina_resultado_comparativa
1110+ 8D53
1111+ 8D53 7C               ld a,h
1112+ 8D54 06 00            ld b,0
1113+ 8D56
1114+ 8D56 CD 6E 8D         call Compara_cositas
1115+ 8D59 04               inc b
1116+ 8D5A 05               dec b
1117+ 8D5B C8               ret z                                   ; B="0". Indica que H es distinto de "0, $ff o $01". Salimos de la rutina.
1118+ 8D5C
1119+ 8D5C 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1120+ 8D5D 06 00            ld b,0
1121+ 8D5F FE 02            cp $02
1122+ 8D61 28 09            jr z,1F
1123+ 8D63 FE FE            cp $fe
1124+ 8D65 28 05            jr z,1F
1125+ 8D67
1126+ 8D67 CD 6E 8D         call Compara_cositas
1127+ 8D6A 18 01            jr 2F
1128+ 8D6C
1129+ 8D6C 04           1 inc b
1130+ 8D6D C9           2 ret
1131+ 8D6E
1132+ 8D6E A7           Compara_cositas and a
1133+ 8D6F 28 07            jr z,1F
1134+ 8D71 FE FF            cp $ff
1135+ 8D73 28 03            jr z,1F
1136+ 8D75 FE 01            cp $01
1137+ 8D77 C0               ret nz
1138+ 8D78 04           1 inc b
1139+ 8D79 C9               ret
1140+ 8D7A
# file closed: Disparo.asm
1029  8D7A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8D7A              ; ******************************************************************************************************************************************************************************************
   2+ 8D7A              ;
   3+ 8D7A              ; 01/23
   4+ 8D7A              ;
   5+ 8D7A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8D7A
   7+ 8D7A CD 54 90     Draw call Prepara_draw
   8+ 8D7D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 8D7E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 8D7F 28 05        	jr z,2F
  11+ 8D81
  12+ 8D81 3A AF 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 8D84 18 0C        	jr 1F
  14+ 8D86 2A AD 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 8D89 22 9D 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 8D8C CD 1B 8F     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 8D8F              ;													; _la esquina superior izquierda de la pantalla.
  18+ 8D8F CD 9A 97     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
  19+ 8D92 3A C9 85     1 ld a,(Ctrl_0)
  20+ 8D95 CB 6F        	bit 5,a
  21+ 8D97 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 8D99
  23+ 8D99 CD B1 8D     	call Comprueba_limite_horizontal
  24+ 8D9C CD 41 8E     	call Comprueba_limite_vertical
  25+ 8D9F
  26+ 8D9F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 8D9F
  28+ 8D9F CD 8E 8F     3 call calcula_CColumnass
  29+ 8DA2 CD C5 8F     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 8DA5 CD 1A 90     	call Define_rutina_de_impresion
  31+ 8DA8
  32+ 8DA8 3A C9 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 8DAB CB AF        	res 5,a											; _a ser de utilidad.
  34+ 8DAD 32 C9 85     	ld (Ctrl_0),a
  35+ 8DB0
  36+ 8DB0 C9           	ret
  37+ 8DB1
  38+ 8DB1              ; *******************************************************************************************************************************************************************************************
  39+ 8DB1              ;	21/01/23
  40+ 8DB1              ;
  41+ 8DB1              ; 	Comprueba_limite_horizontal.
  42+ 8DB1              ;
  43+ 8DB1              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 8DB1              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 8DB1              ;
  46+ 8DB1              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 8DB1              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 8DB1              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 8DB1              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 8DB1
  51+ 8DB1
  52+ 8DB1
  53+ 8DB1 3A C9 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 8DB4 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 8DB6 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 8DB8 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 8DBA 32 C9 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 8DBD 18 09            jr 6F
  59+ 8DBF CB 5F        1 bit 3,a
  60+ 8DC1 28 0A            jr z,2F
  61+ 8DC3 E6 F7            and $f7
  62+ 8DC5 32 C9 85         ld (Ctrl_0),a
  63+ 8DC8 CD 1B 8F     6 call Inicializacion
  64+ 8DCB 18 5B            jr 5F
  65+ 8DCD E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 8DCE
  67+ 8DCE              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 8DCE              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 8DCE
  70+ 8DCE EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 8DCF 2A D3 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 8DD2 CD 20 93     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 8DD5 67           	ld h,a
  74+ 8DD6 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 8DD7 CD 20 93     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 8DDA 67           	ld h,a
  77+ 8DDB A7           	and a
  78+ 8DDC ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 8DDE 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 8DDF 3A AF 85     	ld a,(Cuad_objeto)
  81+ 8DE2 FE 02        	cp 2
  82+ 8DE4 38 1E        	jr c,3F
  83+ 8DE6 28 1C        	jr z,3F
  84+ 8DE8 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 8DE9 28 23            jr z,7F
  86+ 8DEB 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 8DED 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 8DEF E1           	pop hl
  89+ 8DF0
  90+ 8DF0              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 8DF0              ; _para indicar con E="2" en caso necesario.
  92+ 8DF0
  93+ 8DF0 E5               push hl
  94+ 8DF1 C5               push bc
  95+ 8DF2 CD 20 93     	call calcula_tercio
  96+ 8DF5 FE 01        	cp 1
  97+ 8DF7 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 8DF9 CD 29 8E         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 8DFC 28 26            jr z,9F
 100+ 8DFE 38 24            jr c,9F
 101+ 8E00 1E 00        11 ld e,0
 102+ 8E02 18 22            jr 8F
 103+ 8E04 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 8E05 28 07        	jr z, 7F
 105+ 8E07 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 8E09 1E 00         	ld e,0
 107+ 8E0B E1           	pop hl
 108+ 8E0C 18 04        	jr 4F
 109+ 8E0E 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 8E10 18 15            jr 10F
 111+ 8E12
 112+ 8E12              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 8E12              ; _para indicar con E="2" en caso necesario.
 114+ 8E12
 115+ 8E12 E5           4 push hl
 116+ 8E13 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 8E14 CD 20 93     	call calcula_tercio
 118+ 8E17 FE 01        	cp 1
 119+ 8E19 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 8E1B CD 29 8E         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 8E1E 28 04            jr z,9F
 122+ 8E20 30 02            jr nc,9F
 123+ 8E22 18 02        	jr 8F
 124+ 8E24 1E 02        9 ld e,2
 125+ 8E26 C1           8 pop bc
 126+ 8E27 E1           10 pop hl
 127+ 8E28 C9           5 ret
 128+ 8E29
 129+ 8E29              ; --------------------
 130+ 8E29              ;
 131+ 8E29              ; 25/08/22
 132+ 8E29
 133+ 8E29 CD 20 93     Comprueba_centro call calcula_tercio
 134+ 8E2C 67               ld h,a
 135+ 8E2D 08           	ex af,af
 136+ 8E2E FE 02        	cp 2
 137+ 8E30 38 07        	jr c,1F
 138+ 8E32 28 05        	jr z,1F
 139+ 8E34 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 8E37 18 03        	jr 2F
 141+ 8E39 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 8E3C 08           2 ex af,af
 143+ 8E3D A7               and a
 144+ 8E3E ED 42            sbc hl,bc
 145+ 8E40 C9               ret
 146+ 8E41
 147+ 8E41              ; *********************************************************************************************************************************************************************************************
 148+ 8E41              ;
 149+ 8E41              ;   16/8/22
 150+ 8E41              ;
 151+ 8E41              ;	Comprueba_limite_vertical
 152+ 8E41              ;
 153+ 8E41              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 8E41              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 8E41              ;
 156+ 8E41
 157+ 8E41 2A 9D 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 8E44 7D           	ld a,l
 159+ 8E45 E6 1F        	and $1F
 160+ 8E47 57           	ld d,a
 161+ 8E48 3A D5 85     	ld a,(Limite_vertical)
 162+ 8E4B BA           	cp d 											; Límite - Posición.
 163+ 8E4C 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 8E4D 3A AF 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 8E50 CB 47        	bit 0,a
 166+ 8E52 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 8E54
 168+ 8E54              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 8E54
 170+ 8E54 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 8E55 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 8E57
 173+ 8E57              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 8E57              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 8E57
 176+ 8E57 3A A1 85         ld a,(Coordenada_X)
 177+ 8E5A 16 0F            ld d,Centro_izquierda
 178+ 8E5C A7               and a
 179+ 8E5D 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 8E5E 28 1E            jr z,3F
 181+ 8E60 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 8E62              ;                                                    ; _salimos sin modificar nada.
 183+ 8E62 18 0E            jr 2F
 184+ 8E64 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 8E65 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 8E67
 187+ 8E67              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 8E67              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 8E67
 190+ 8E67 3A A1 85         ld a,(Coordenada_X)
 191+ 8E6A 16 10            ld d,Centro_derecha
 192+ 8E6C A7               and a
 193+ 8E6D 92               sub d
 194+ 8E6E 28 0E            jr z,3F
 195+ 8E70 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 8E72              ;                                                    ; _salimos sin modificar nada.
 197+ 8E72 CB 43        2 bit 0,e
 198+ 8E74 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 8E76 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 8E77 CD 0B 8F         call Modificaccionne
 201+ 8E7A C1           	pop bc
 202+ 8E7B CD 1B 8F         call Inicializacion
 203+ 8E7E C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 8E7F
 205+ 8E7F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 8E7F
 207+ 8E7F C5           4 push bc
 208+ 8E80 01 9C 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 8E83 0A           	ld a,(bc)
 210+ 8E84 3D           	dec a
 211+ 8E85 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 8E86 7D           	ld a,l
 213+ 8E87 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 8E88 CB 47        	bit 0,a
 215+ 8E8A 28 03        	jr z,5F
 216+ 8E8C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 8E8D 18 2E        	jr 7F
 218+ 8E8F
 219+ 8E8F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 8E8F
 221+ 8E8F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 8E90 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 8E91 3A C9 85     	ld a,(Ctrl_0)
 224+ 8E94 CB 4F        	bit 1,a
 225+ 8E96 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 8E98 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 8E99
 228+ 8E99              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 8E99
 230+ 8E99 1C               inc e
 231+ 8E9A 1D               dec e
 232+ 8E9B 20 07            jr nz,12F
 233+ 8E9D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 8E9E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 8E9F 22 9D 85     	ld (Posicion_actual),hl
 236+ 8EA2 18 44        13 jr 9F
 237+ 8EA4 CB 43        12 bit 0,e
 238+ 8EA6 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 8EA8              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 8EA8 C1           	pop bc
 241+ 8EA9 18 D3        	jr 3B
 242+ 8EAB 80           14 add b
 243+ 8EAC 6F               ld l,a
 244+ 8EAD 22 9D 85     	ld (Posicion_actual),hl
 245+ 8EB0 CD 0B 8F         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 8EB3 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 8EB5 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 8EB7 32 C9 85         ld (Ctrl_0),a
 249+ 8EBA F1           	pop af
 250+ 8EBB 18 2B        	jr 9F
 251+ 8EBD
 252+ 8EBD              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 8EBD
 254+ 8EBD F5           7 push af
 255+ 8EBE 3A C9 85     	ld a,(Ctrl_0)
 256+ 8EC1 CB 47        	bit 0,a
 257+ 8EC3 20 1D        	jr nz,8F
 258+ 8EC5 F1           	pop af
 259+ 8EC6
 260+ 8EC6              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 8EC6
 262+ 8EC6 1C           	inc e
 263+ 8EC7 1D               dec e
 264+ 8EC8 20 07            jr nz,10F
 265+ 8ECA 90           	sub b
 266+ 8ECB 6F               ld l,a
 267+ 8ECC 22 9D 85     	ld (Posicion_actual),hl
 268+ 8ECF 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 8ED1              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 8ED1 CB 43        10 bit 0,e
 271+ 8ED3 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 8ED5              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 8ED5 C1           	pop bc
 274+ 8ED6 18 A6        	jr 3B
 275+ 8ED8 90           16 sub b
 276+ 8ED9 6F               ld l,a
 277+ 8EDA 22 9D 85     	ld (Posicion_actual),hl
 278+ 8EDD CD 0B 8F         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 8EE0 18 06            jr 9F
 280+ 8EE2 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 8EE4 32 C9 85         ld (Ctrl_0),a
 282+ 8EE7 F1           	pop af
 283+ 8EE8 C1           9 pop bc
 284+ 8EE9 1E 00        	ld e,0
 285+ 8EEB CD 1B 8F         call Inicializacion
 286+ 8EEE F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 8EEF 08           	ex af,af
 288+ 8EF0 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 8EF1 18 8B            jr 3B
 290+ 8EF3
 291+ 8EF3              ; --------------------
 292+ 8EF3
 293+ 8EF3 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 8EF5 CD 6F 90     1 call PreviousScan
 295+ 8EF8 10 FB            djnz 1B
 296+ 8EFA 22 9D 85     	ld (Posicion_actual),hl
 297+ 8EFD AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 8EFE C9           	ret
 299+ 8EFF
 300+ 8EFF              ; --------------------
 301+ 8EFF
 302+ 8EFF 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 8F01 CD 60 90     1 call NextScan
 304+ 8F04 10 FB            djnz 1B
 305+ 8F06 22 9D 85     	ld (Posicion_actual),hl
 306+ 8F09 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 8F0A C9           	ret
 308+ 8F0B
 309+ 8F0B              ; --------------------
 310+ 8F0B              ;
 311+ 8F0B              ;	22/01/23
 312+ 8F0B              ;
 313+ 8F0B              ;	E="1". Hemos cambiado de cuadrante.
 314+ 8F0B              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 8F0B              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 8F0B
 317+ 8F0B
 318+ 8F0B              Modificaccionne
 319+ 8F0B
 320+ 8F0B 3A AF 85     	ld a,(Cuad_objeto)
 321+ 8F0E FE 02        	cp 2
 322+ 8F10 CC F3 8E         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 8F13 DC F3 8E         call c,Modifica_Pos_actual
 324+ 8F16 C8           	ret z
 325+ 8F17 CD FF 8E         call Modifica_Pos_actual2
 326+ 8F1A C9               ret
 327+ 8F1B
 328+ 8F1B              ; *************************************************************************************************************************************************************************************************
 329+ 8F1B              ;
 330+ 8F1B              ;	13/8/22
 331+ 8F1B              ;
 332+ 8F1B              ;	Inicializacion
 333+ 8F1B              ;
 334+ 8F1B              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 8F1B              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 8F1B              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 8F1B              ;
 338+ 8F1B              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 8F1B              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 8F1B              ;	_ desaparece/aparece.
 341+ 8F1B
 342+ 8F1B              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 8F1B              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 8F1B              ;
 345+ 8F1B              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 8F1B              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 8F1B              ; 		   [E] ="0"
 348+ 8F1B
 349+ 8F1B              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 8F1B
 351+ 8F1B CD 20 93     Inicializacion call calcula_tercio
 352+ 8F1E 28 36        	jr z,primit
 353+ 8F20 E6 02        	and 2
 354+ 8F22 20 07        	jr nz,segmit
 355+ 8F24 7D           	ld a,l
 356+ 8F25 FE 7F        	cp $7f
 357+ 8F27 38 2D        	jr c,primit
 358+ 8F29 28 2B        	jr z,primit
 359+ 8F2B CD 88 8F     segmit call column
 360+ 8F2E 38 13        	jr c,tercuad
 361+ 8F30 3E 04        cuarcuad ld a,4
 362+ 8F32 32 AF 85     	ld (Cuad_objeto),a
 363+ 8F35 21 20 48     	ld hl,$4820
 364+ 8F38 22 D3 85     	ld (Limite_horizontal),hl
 365+ 8F3B 21 D5 85     	ld hl,Limite_vertical
 366+ 8F3E 36 0D        	ld (hl),$0d
 367+ 8F40 08           	ex af,af
 368+ 8F41 18 3C        	jr 1F
 369+ 8F43              tercuad
 370+ 8F43 3E 03        	ld a,3
 371+ 8F45 32 AF 85     	ld (Cuad_objeto),a
 372+ 8F48 21 20 48     	ld hl,$4820
 373+ 8F4B 22 D3 85     	ld (Limite_horizontal),hl
 374+ 8F4E 21 D5 85     	ld hl,Limite_vertical
 375+ 8F51 36 12        	ld (hl),$12
 376+ 8F53 08           	ex af,af
 377+ 8F54 18 29        	jr 1F
 378+ 8F56 CD 88 8F     primit call column
 379+ 8F59 38 13        	jr c, primcuad
 380+ 8F5B              segcuad
 381+ 8F5B 3E 02        	ld a,2
 382+ 8F5D 32 AF 85     	ld (Cuad_objeto),a
 383+ 8F60 21 C0 4F     	ld hl,$4fc0
 384+ 8F63 22 D3 85     	ld (Limite_horizontal),hl
 385+ 8F66 21 D5 85     	ld hl,Limite_vertical
 386+ 8F69 36 0D        	ld (hl),$0d
 387+ 8F6B 08           	ex af,af
 388+ 8F6C 18 11        	jr 1F
 389+ 8F6E              primcuad
 390+ 8F6E 3E 01        	ld a,1
 391+ 8F70 32 AF 85     	ld (Cuad_objeto),a
 392+ 8F73 21 C0 4F     	ld hl,$4fc0
 393+ 8F76 22 D3 85     	ld (Limite_horizontal),hl
 394+ 8F79 21 D5 85     	ld hl,Limite_vertical
 395+ 8F7C 36 12        	ld (hl),$12
 396+ 8F7E 08           	ex af,af
 397+ 8F7F CD 4C 96     1 call Genera_coordenadas
 398+ 8F82 21 C9 85     	ld hl,Ctrl_0
 399+ 8F85 CB EE        	set 5,(hl)
 400+ 8F87 C9           	ret
 401+ 8F88
 402+ 8F88              ; ------------------------------------------------------------------------------------------------------------------
 403+ 8F88
 404+ 8F88              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 8F88              ;
 406+ 8F88              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 8F88
 408+ 8F88 7D           column ld a,l
 409+ 8F89 E6 1F        	and $1f
 410+ 8F8B FE 10         	cp $10
 411+ 8F8D C9            	ret
 412+ 8F8E
 413+ 8F8E              ; --------------------------------------------------------------------------------------------------------------------
 414+ 8F8E              ;
 415+ 8F8E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 8F8E              ;
 417+ 8F8E              ; 14/12/22
 418+ 8F8E              ;
 419+ 8F8E              ;	Modifica: A y BC.
 420+ 8F8E
 421+ 8F8E 3A AF 85     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 8F91 E6 01        	and 1
 423+ 8F93 28 17        	jr z,1F
 424+ 8F95
 425+ 8F95              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 8F95
 427+ 8F95 3A A1 85     	ld a,(Coordenada_X)
 428+ 8F98 47           	ld b,a
 429+ 8F99 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 8F9A 79           	ld a,c
 431+ 8F9B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 8F9C 38 08        	jr c,2F
 433+ 8F9E 47           	ld b,a
 434+ 8F9F 79           	ld a,c
 435+ 8FA0 90           	sub b
 436+ 8FA1 32 D2 85     	ld (Columnas),a
 437+ 8FA4 18 1B        	jr 4F
 438+ 8FA6 79           2 ld a,c
 439+ 8FA7 32 D2 85     	ld (Columnas),a
 440+ 8FAA 18 15        	jr 4F
 441+ 8FAC
 442+ 8FAC              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 8FAC
 444+ 8FAC 3A A1 85     1 ld a,(Coordenada_X)
 445+ 8FAF 81           	add c
 446+ 8FB0 3D           	dec a
 447+ 8FB1 D6 1F        	sub $1f
 448+ 8FB3 38 08        	jr c,3F
 449+ 8FB5 47           	ld b,a
 450+ 8FB6 79           	ld a,c
 451+ 8FB7 90           	sub b
 452+ 8FB8 32 D2 85     	ld (Columnas),a
 453+ 8FBB 18 04        	jr 4F
 454+ 8FBD 79           3 ld a,c
 455+ 8FBE 32 D2 85     	ld (Columnas),a
 456+ 8FC1 D9           4 exx
 457+ 8FC2 4F           	ld c,a
 458+ 8FC3 D9           	exx
 459+ 8FC4 C9            ret
 460+ 8FC5
 461+ 8FC5              ; --------------------------------------------------------------------------------------------------------------------
 462+ 8FC5              ;
 463+ 8FC5              ; 7/1/23
 464+ 8FC5              ;
 465+ 8FC5              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 8FC5              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 8FC5              ;
 468+ 8FC5              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 8FC5              ;	DESTRUYE: HL,B Y A.
 470+ 8FC5
 471+ 8FC5 3A AF 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 8FC8 FE 02        	cp 2
 473+ 8FCA 38 18        	jr c,1F
 474+ 8FCC 28 16        	jr z,1F
 475+ 8FCE E6 01        	and 1
 476+ 8FD0 28 0D        	jr z,3F
 477+ 8FD2
 478+ 8FD2              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 8FD2
 480+ 8FD2 CD 0E 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 8FD5
 482+ 8FD5 7D           9 ld a,l
 483+ 8FD6 E6 1F        	and $1f
 484+ 8FD8 28 2A        	jr z,7F
 485+ 8FDA 2B           	dec hl
 486+ 8FDB 10 F8        	djnz 9B
 487+ 8FDD 18 25        	jr 7F
 488+ 8FDF
 489+ 8FDF              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 8FDF
 491+ 8FDF 2A 9D 85     3 ld hl,(Posicion_actual)
 492+ 8FE2 18 20        	jr 7F
 493+ 8FE4
 494+ 8FE4 28 14        1 jr z,2F
 495+ 8FE6
 496+ 8FE6              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 8FE6
 498+ 8FE6 CD 0E 90     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 8FE9 7D           4 ld a,l
 500+ 8FEA E6 1F        	and $1f
 501+ 8FEC 28 03        	jr z,6F
 502+ 8FEE 2B           	dec hl
 503+ 8FEF 10 F8        	djnz 4B
 504+ 8FF1 06 0F        6 ld b,15
 505+ 8FF3 CD 6F 90     5 call PreviousScan
 506+ 8FF6 10 FB        	djnz 5B
 507+ 8FF8 18 0A        	jr 7F
 508+ 8FFA
 509+ 8FFA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 510+ 8FFA
 511+ 8FFA CD 0E 90     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 512+ 8FFD 06 0F        	ld b,15
 513+ 8FFF CD 6F 90     8 call PreviousScan
 514+ 9002 10 FB        	djnz 8B
 515+ 9004
 516+ 9004 E5           7 push hl
 517+ 9005 DD E1        	pop ix
 518+ 9007
 519+ 9007 2A 9F 85     	ld hl,(Puntero_objeto)
 520+ 900A E5           	push hl
 521+ 900B FD E1        	pop iy
 522+ 900D
 523+ 900D C9           	ret
 524+ 900E
 525+ 900E              ; --------------------------------------------------------------------------------------------------------------------
 526+ 900E              ;
 527+ 900E              ;	2/1/23
 528+ 900E              ;
 529+ 900E              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 530+ 900E              ;
 531+ 900E              ;	Tras esta rutina tenemos:
 532+ 900E              ;
 533+ 900E              ;	OUTPUT: HL contiene (Posicion_actual).
 534+ 900E              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 535+ 900E              ;
 536+ 900E              ;	DESTRUYE!!!!! HL,B y A.
 537+ 900E
 538+ 900E 2A 9D 85     Operandos ld hl,(Posicion_actual)
 539+ 9011 3A D2 85     	ld a,(Columnas)
 540+ 9014 3D           	dec a
 541+ 9015 20 01        	jr nz,1F
 542+ 9017 3C           	inc a
 543+ 9018 47           1 ld b,a
 544+ 9019 C9           	ret
 545+ 901A
 546+ 901A              ; --------------------------------------------------------------------------------------------------------------------
 547+ 901A              ;
 548+ 901A              ;	3/1/23
 549+ 901A              ;
 550+ 901A              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 551+ 901A              ;
 552+ 901A              ;	Destruye: A,B,HL y DE.
 553+ 901A
 554+ 901A              Define_rutina_de_impresion
 555+ 901A
 556+ 901A 3A 9C 85     	ld a,(Columns)
 557+ 901D 47           	ld b,a
 558+ 901E 3A D2 85     	ld a,(Columnas)
 559+ 9021 B8           	cp b
 560+ 9022 20 0D        	jr nz,2f
 561+ 9024
 562+ 9024              ;	La entidad se imprime entera.
 563+ 9024
 564+ 9024 21 F0 90     	ld hl, Indice_entidades_completas
 565+ 9027 E6 01        	and 1
 566+ 9029 28 02        	jr z,1F
 567+ 902B
 568+ 902B 23           	inc hl
 569+ 902C 23           	inc hl
 570+ 902D
 571+ 902D CD 07 88     1 call Extrae_address
 572+ 9030 C9           	ret		;	ret
 573+ 9031
 574+ 9031              ;	La entidad no se imprime entera en pantalla.
 575+ 9031
 576+ 9031 3A AF 85     2 ld a,(Cuad_objeto)
 577+ 9034 E6 01        	and 1
 578+ 9036 28 17        	jr z,3F
 579+ 9038
 580+ 9038              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 581+ 9038
 582+ 9038 21 F4 90     	ld hl, Indice_entidades_incompletas_izquierda
 583+ 903B 3A 9C 85     4 ld a,(Columns)
 584+ 903E E6 01        	and 1
 585+ 9040 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 586+ 9042
 587+ 9042 23           	inc hl
 588+ 9043 23           	inc hl
 589+ 9044
 590+ 9044 3A D2 85     	ld a,(Columnas)
 591+ 9047 E6 01        	and 1
 592+ 9049 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 593+ 904B
 594+ 904B 23           	inc hl
 595+ 904C 23           	inc hl
 596+ 904D
 597+ 904D 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 598+ 904F
 599+ 904F 21 FA 90     3 ld hl, Indice_entidades_incompletas_derecha
 600+ 9052 18 E7        	jr 4B
 601+ 9054
 602+ 9054              ; --------------------------------------------------------------------------------------------------------------------
 603+ 9054              ;
 604+ 9054              ;	Prepara_draw
 605+ 9054              ;
 606+ 9054              ;	Es una rutina de carga.
 607+ 9054              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 608+ 9054              ;
 609+ 9054              ;	FUNCIONAMIENTO:
 610+ 9054              ;
 611+ 9054              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 612+ 9054              ;	- LD (Posicion_actual) del objeto en [HL].
 613+ 9054              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 614+ 9054              ;
 615+ 9054              ;	DESTRUYE:
 616+ 9054              ;
 617+ 9054              ;	Logicamente, BC,HL y E quedan destruidos.
 618+ 9054
 619+ 9054 21 9B 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 620+ 9057 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 621+ 9058 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 622+ 9059 4E           	ld c,(hl)
 623+ 905A 2A 9D 85     	ld hl,(Posicion_actual)
 624+ 905D 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 625+ 905F C9           	ret
 626+ 9060
 627+ 9060              ;----------------------------------------------------------------------------------------------------------------
 628+ 9060              ;
 629+ 9060              ;	5/08/22
 630+ 9060              ;
 631+ 9060              ;   NextScan.
 632+ 9060              ;
 633+ 9060              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 634+ 9060              ;
 635+ 9060              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 636+ 9060              ;
 637+ 9060              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 638+ 9060              ;
 639+ 9060              ;       DESTRUIDOS: AF y HL !!!
 640+ 9060              ;
 641+ 9060              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 642+ 9060              ;
 643+ 9060
 644+ 9060 24           NextScan inc h          ; Incrementamos el scanline.
 645+ 9061 7C               ld a,h
 646+ 9062 E6 07            and 7
 647+ 9064 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 648+ 9065
 649+ 9065 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 650+ 9066 C6 20            add a,$20           ; Vamos a comprobarlo...
 651+ 9068 6F               ld l,a
 652+ 9069 D8               ret c               ; Salimos si se produce el cambio de tercio.
 653+ 906A
 654+ 906A 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 655+ 906B D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 656+ 906D 67               ld h,a
 657+ 906E C9               ret
 658+ 906F
 659+ 906F              ;----------------------------------------------------------------------------------------------------------------
 660+ 906F              ;
 661+ 906F              ;	5/08/22
 662+ 906F              ;
 663+ 906F              ;   PreviousScan.
 664+ 906F              ;
 665+ 906F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 666+ 906F              ;
 667+ 906F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 668+ 906F              ;
 669+ 906F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 670+ 906F              ;
 671+ 906F              ;       DESTRUIDOS: AF y HL !!!
 672+ 906F              ;
 673+ 906F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 674+ 906F              ;
 675+ 906F
 676+ 906F 7C           PreviousScan ld a,h
 677+ 9070 25               dec h               ; Dec H.
 678+ 9071 E6 07            and 7
 679+ 9073 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 680+ 9074
 681+ 9074 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 682+ 9075 D6 20            sub $20             ; Vamos a comprobarlo...
 683+ 9077 6F               ld l,a
 684+ 9078 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 685+ 9079
 686+ 9079 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 687+ 907A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 688+ 907C 67               ld h,a
 689+ 907D C9               ret
 690+ 907E
 691+ 907E              ; -----------------------------------------------------------------------------------
 692+ 907E              ;
 693+ 907E              ;	28/2/23
 694+ 907E              ;
 695+ 907E              ;	Rutina principal de pintado de entidades/Amadeus.
 696+ 907E              ;	Extrae fotos de Album_de_fotos.
 697+ 907E
 698+ 907E              Extrae_foto_entidades
 699+ 907E
 700+ 907E 3A DE 85     	ld a,(Numero_de_malotes)
 701+ 9081 A7           	and a
 702+ 9082 C8           	ret z
 703+ 9083 ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 704+ 9087 31 00 70     	ld sp,Album_de_fotos
 705+ 908A
 706+ 908A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 707+ 908C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 708+ 908D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 709+ 908E
 710+ 908E ED 73 E1 85  	ld (Stack_2),sp
 711+ 9092 ED 7B DF 85  	ld sp,(Stack)
 712+ 9096
 713+ 9096              ; Fabrica la llamada a la correspondiente rutina de impresión.
 714+ 9096
 715+ 9096 3E CD        	ld a,$cd
 716+ 9098 32 A0 90     	ld (Imprime),a
 717+ 909B EB           	ex de,hl
 718+ 909C 22 A1 90     	ld (Imprime+1),hl
 719+ 909F EB           	ex de,hl
 720+ 90A0
 721+ 90A0              ; Ejecuta la llamada:	CALL $xx,xx
 722+ 90A0
 723+ 90A0 00 00 00     Imprime db 0,0,0
 724+ 90A3
 725+ 90A3 3A DE 85     	ld a,(Numero_de_malotes)
 726+ 90A6 3D           	dec a
 727+ 90A7 28 09        	jr z,1F
 728+ 90A9 32 DE 85      	ld (Numero_de_malotes),a
 729+ 90AC
 730+ 90AC ED 7B E1 85   	ld sp,(Stack_2)
 731+ 90B0 18 D8        	jr 2B
 732+ 90B2
 733+ 90B2 AF           1 xor a
 734+ 90B3 32 E1 85     	ld (Stack_2),a
 735+ 90B6 C9           	ret
 736+ 90B7
 737+ 90B7              ; -----------------------------------------------------------------------------------
 738+ 90B7              ;
 739+ 90B7              ;	28/2/23
 740+ 90B7              ;
 741+ 90B7              ;	Pinta los disparos generados.
 742+ 90B7
 743+ 90B7              Extrae_foto_disparos
 744+ 90B7
 745+ 90B7 3A E7 85     	ld a,(Numero_de_disparotes)
 746+ 90BA A7           	and a
 747+ 90BB C8           	ret z
 748+ 90BC ED 73 DF 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 749+ 90C0 31 60 70     	ld sp,Album_de_fotos_disparos
 750+ 90C3
 751+ 90C3 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 752+ 90C5 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 753+ 90C6 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 754+ 90C7
 755+ 90C7 ED 73 E1 85  	ld (Stack_2),sp
 756+ 90CB ED 7B DF 85  	ld sp,(Stack)
 757+ 90CF
 758+ 90CF              ; Fabrica la llamada a la correspondiente rutina de impresión.
 759+ 90CF
 760+ 90CF 3E CD        	ld a,$cd
 761+ 90D1 32 D9 90     	ld (Imprime2),a
 762+ 90D4 EB           	ex de,hl
 763+ 90D5 22 DA 90     	ld (Imprime2+1),hl
 764+ 90D8 EB           	ex de,hl
 765+ 90D9
 766+ 90D9              ; Ejecuta la llamada:	CALL $xx,xx
 767+ 90D9
 768+ 90D9 00 00 00     Imprime2 db 0,0,0
 769+ 90DC
 770+ 90DC 3A E7 85     	ld a,(Numero_de_disparotes)
 771+ 90DF 3D           	dec a
 772+ 90E0 28 09        	jr z,1F
 773+ 90E2 32 E7 85      	ld (Numero_de_disparotes),a
 774+ 90E5
 775+ 90E5 ED 7B E1 85  	ld sp,(Stack_2)
 776+ 90E9 18 D8        	jr 2B
 777+ 90EB
 778+ 90EB AF           1 xor a
 779+ 90EC 32 E1 85     	ld (Stack_2),a
 780+ 90EF C9           	ret
 781+ 90F0
# file closed: Draw_XOR.asm
1030  90F0              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 90F0              ;   índices de Rutinas de impresión.
   2+ 90F0
   3+ 90F0 00 91        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 90F2 2D 91            defw Pinta_Amadeus_3x2
   5+ 90F4
   6+ 90F4 83 91        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 90F6 23 92            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 90F8 D7 91            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 90FA
  10+ 90FA AD 91        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 90FC B1 92            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 90FE 65 92            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9100
  14+ 9100
  15+ 9100              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9100              ;
  17+ 9100              ;   12/12/22
  18+ 9100              ;
  19+ 9100              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9100              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9100              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9100              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9100              ;
  24+ 9100              ;   Modifica: DE y HL.
  25+ 9100
  26+ 9100 ED 73 DF 85  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9104 FD F9        	ld sp,iy
  28+ 9106 06 10            ld b,16
  29+ 9108 D1           1 pop de
  30+ 9109 7B               ld a,e
  31+ 910A AE               xor (hl)
  32+ 910B 77           	ld (hl),a
  33+ 910C 23           	inc hl
  34+ 910D 7A               ld a,d
  35+ 910E AE               xor (hl)
  36+ 910F 77           	ld (hl),a
  37+ 9110 2B           	dec hl
  38+ 9111 24           	inc h
  39+ 9112 7C               ld a,h
  40+ 9113 E6 07            and 7
  41+ 9115 20 0A            jr nz,2F
  42+ 9117 7D               ld a,l
  43+ 9118 C6 20            add a,$20
  44+ 911A 6F               ld l,a
  45+ 911B 38 04            jr c,2F
  46+ 911D 7C               ld a,h
  47+ 911E D6 08            sub 8
  48+ 9120 67               ld h,a
  49+ 9121 7C           2 ld a,h
  50+ 9122 FE 58            cp $58
  51+ 9124 28 02            jr z,3F
  52+ 9126 10 E0            djnz 1B
  53+ 9128 ED 7B DF 85  3 ld sp,(Stack)
  54+ 912C C9           	ret
  55+ 912D
  56+ 912D ED 73 DF 85  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9131 FD F9        	ld sp,iy
  58+ 9133 06 08            ld b,8
  59+ 9135 D1           1 pop de
  60+ 9136 7B               ld a,e
  61+ 9137 AE               xor (hl)
  62+ 9138 77           	ld (hl),a
  63+ 9139 23           	inc hl
  64+ 913A 7A               ld a,d
  65+ 913B AE               xor (hl)
  66+ 913C 77           	ld (hl),a
  67+ 913D 23           	inc hl
  68+ 913E D1           	pop de
  69+ 913F 7B               ld a,e
  70+ 9140 AE               xor (hl)
  71+ 9141 77           	ld (hl),a
  72+ 9142 2B           	dec hl
  73+ 9143 2B           	dec hl
  74+ 9144 24           	inc h
  75+ 9145 7C               ld a,h
  76+ 9146 E6 07            and 7
  77+ 9148 20 0A            jr nz,2F
  78+ 914A 7D               ld a,l
  79+ 914B C6 20            add a,$20
  80+ 914D 6F               ld l,a
  81+ 914E 38 04            jr c,2F
  82+ 9150 7C               ld a,h
  83+ 9151 D6 08            sub 8
  84+ 9153 67               ld h,a
  85+ 9154 7C           2 ld a,h
  86+ 9155 FE 58            cp $58
  87+ 9157 28 25            jr z,4F
  88+ 9159 7A               ld a,d
  89+ 915A AE               xor (hl)
  90+ 915B 77               ld (hl),a
  91+ 915C D1           	pop de
  92+ 915D 23           	inc hl
  93+ 915E 7B               ld a,e
  94+ 915F AE               xor (hl)
  95+ 9160 77           	ld (hl),a
  96+ 9161 23           	inc hl
  97+ 9162 7A               ld a,d
  98+ 9163 AE               xor (hl)
  99+ 9164 77           	ld (hl),a
 100+ 9165 2B           	dec hl
 101+ 9166 2B           	dec hl
 102+ 9167 24           	inc h
 103+ 9168 7C               ld a,h
 104+ 9169 E6 07            and 7
 105+ 916B 20 0A            jr nz,3F
 106+ 916D 7D               ld a,l
 107+ 916E C6 20            add a,$20
 108+ 9170 6F               ld l,a
 109+ 9171 38 04            jr c,3F
 110+ 9173 7C               ld a,h
 111+ 9174 D6 08            sub 8
 112+ 9176 67               ld h,a
 113+ 9177 7C           3 ld a,h
 114+ 9178 FE 58            cp $58
 115+ 917A 28 02            jr z,4F
 116+ 917C 10 B7            djnz 1B
 117+ 917E ED 7B DF 85  4 ld sp,(Stack)
 118+ 9182 C9           	ret
 119+ 9183
 120+ 9183              ; ---------------------------------------------------
 121+ 9183
 122+ 9183 ED 73 DF 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9187 FD F9        	ld sp,iy
 124+ 9189
 125+ 9189              ; >>>
 126+ 9189
 127+ 9189 06 10            ld b,16
 128+ 918B D1           1 pop de
 129+ 918C 7A           	ld a,d
 130+ 918D AE           	xor (hl)
 131+ 918E 77           	ld (hl),a
 132+ 918F 24           	inc h
 133+ 9190 7C               ld a,h
 134+ 9191 E6 07            and 7
 135+ 9193 20 0C            jr nz,2F
 136+ 9195 7D               ld a,l
 137+ 9196 C6 20            add a,$20
 138+ 9198 6F               ld l,a
 139+ 9199 38 06            jr c,2F
 140+ 919B 7C               ld a,h
 141+ 919C D6 08            sub 8
 142+ 919E 67               ld h,a
 143+ 919F 18 00            jr 2F
 144+ 91A1 7C           2 ld a,h
 145+ 91A2 FE 58            cp $58
 146+ 91A4 28 02            jr z,3F
 147+ 91A6 10 E3            djnz 1B
 148+ 91A8 ED 7B DF 85  3 ld sp,(Stack)
 149+ 91AC C9           	ret
 150+ 91AD
 151+ 91AD ED 73 DF 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 91B1 FD F9        	ld sp,iy
 153+ 91B3
 154+ 91B3              ; >>>
 155+ 91B3
 156+ 91B3 06 10            ld b,16
 157+ 91B5 D1           1 pop de
 158+ 91B6 7B           	ld a,e
 159+ 91B7 AE           	xor (hl)
 160+ 91B8 77           	ld (hl),a
 161+ 91B9 24           	inc h
 162+ 91BA 7C               ld a,h
 163+ 91BB E6 07            and 7
 164+ 91BD 20 0C            jr nz,2F
 165+ 91BF 7D               ld a,l
 166+ 91C0 C6 20            add a,$20
 167+ 91C2 6F               ld l,a
 168+ 91C3 38 06            jr c,2F
 169+ 91C5 7C               ld a,h
 170+ 91C6 D6 08            sub 8
 171+ 91C8 67               ld h,a
 172+ 91C9 18 00            jr 2F
 173+ 91CB 7C           2 ld a,h
 174+ 91CC FE 58            cp $58
 175+ 91CE 28 02            jr z,3F
 176+ 91D0 10 E3            djnz 1B
 177+ 91D2 ED 7B DF 85  3 ld sp,(Stack)
 178+ 91D6 C9           	ret
 179+ 91D7
 180+ 91D7              ; ---------------------------------------------------
 181+ 91D7
 182+ 91D7 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 91DB FD F9        	ld sp,iy
 184+ 91DD 06 08            ld b,8
 185+ 91DF D1           1 pop de
 186+ 91E0 7A           	ld a,d
 187+ 91E1 AE           	xor (hl)
 188+ 91E2 77           	ld (hl),a
 189+ 91E3 23           	inc hl
 190+ 91E4 D1           	pop de
 191+ 91E5 7B           	ld a,e
 192+ 91E6 AE           	xor (hl)
 193+ 91E7 77           	ld (hl),a
 194+ 91E8 2B           	dec hl
 195+ 91E9 24            	inc h
 196+ 91EA 7C               ld a,h
 197+ 91EB E6 07            and 7
 198+ 91ED 20 0A            jr nz,2F
 199+ 91EF 7D               ld a,l
 200+ 91F0 C6 20            add a,$20
 201+ 91F2 6F               ld l,a
 202+ 91F3 38 04            jr c,2F
 203+ 91F5 7C               ld a,h
 204+ 91F6 D6 08            sub 8
 205+ 91F8 67               ld h,a
 206+ 91F9 7C           2 ld a,h
 207+ 91FA FE 58            cp $58
 208+ 91FC 28 20            jr z,4F
 209+ 91FE D1               pop de
 210+ 91FF 7B           	ld a,e
 211+ 9200 AE           	xor (hl)
 212+ 9201 77           	ld (hl),a
 213+ 9202 23           	inc hl
 214+ 9203 7A           	ld a,d
 215+ 9204 AE           	xor (hl)
 216+ 9205 77           	ld (hl),a
 217+ 9206 2B           	dec hl
 218+ 9207 24           	inc h
 219+ 9208 7C               ld a,h
 220+ 9209 E6 07            and 7
 221+ 920B 20 0A            jr nz,3F
 222+ 920D 7D               ld a,l
 223+ 920E C6 20            add a,$20
 224+ 9210 6F               ld l,a
 225+ 9211 38 04            jr c,3F
 226+ 9213 7C               ld a,h
 227+ 9214 D6 08            sub 8
 228+ 9216 67               ld h,a
 229+ 9217 7C           3 ld a,h
 230+ 9218 FE 58            cp $58
 231+ 921A 28 02            jr z,4F
 232+ 921C 10 C1            djnz 1B
 233+ 921E ED 7B DF 85  4 ld sp,(Stack)
 234+ 9222 C9           	ret
 235+ 9223
 236+ 9223 ED 73 DF 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9227 FD F9        	ld sp,iy
 238+ 9229 06 08            ld b,8
 239+ 922B D1           1 pop de
 240+ 922C D1           	pop de
 241+ 922D 7B           	ld a,e
 242+ 922E AE           	xor (hl)
 243+ 922F 77           	ld (hl),a
 244+ 9230 24            	inc h
 245+ 9231 7C               ld a,h
 246+ 9232 E6 07            and 7
 247+ 9234 20 0A            jr nz,2F
 248+ 9236 7D               ld a,l
 249+ 9237 C6 20            add a,$20
 250+ 9239 6F               ld l,a
 251+ 923A 38 04            jr c,2F
 252+ 923C 7C               ld a,h
 253+ 923D D6 08            sub 8
 254+ 923F 67               ld h,a
 255+ 9240 7C           2 ld a,h
 256+ 9241 FE 58            cp $58
 257+ 9243 28 1B            jr z,4F
 258+ 9245 D1               pop de
 259+ 9246 7A           	ld a,d
 260+ 9247 AE           	xor (hl)
 261+ 9248 77           	ld (hl),a
 262+ 9249 24           	inc h
 263+ 924A 7C               ld a,h
 264+ 924B E6 07            and 7
 265+ 924D 20 0A            jr nz,3F
 266+ 924F 7D               ld a,l
 267+ 9250 C6 20            add a,$20
 268+ 9252 6F               ld l,a
 269+ 9253 38 04            jr c,3F
 270+ 9255 7C               ld a,h
 271+ 9256 D6 08            sub 8
 272+ 9258 67               ld h,a
 273+ 9259 7C           3 ld a,h
 274+ 925A FE 58            cp $58
 275+ 925C 28 02            jr z,4F
 276+ 925E 10 CB            djnz 1B
 277+ 9260 ED 7B DF 85  4 ld sp,(Stack)
 278+ 9264 C9           	ret
 279+ 9265
 280+ 9265 ED 73 DF 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9269 FD F9        	ld sp,iy
 282+ 926B 06 08            ld b,8
 283+ 926D D1           1 pop de
 284+ 926E 7B           	ld a,e
 285+ 926F AE           	xor (hl)
 286+ 9270 77           	ld (hl),a
 287+ 9271 23           	inc hl
 288+ 9272 7A           	ld a,d
 289+ 9273 AE           	xor (hl)
 290+ 9274 77           	ld (hl),a
 291+ 9275 2B           	dec hl
 292+ 9276 24             	inc h
 293+ 9277 7C               ld a,h
 294+ 9278 E6 07            and 7
 295+ 927A 20 0A            jr nz,2F
 296+ 927C 7D               ld a,l
 297+ 927D C6 20            add a,$20
 298+ 927F 6F               ld l,a
 299+ 9280 38 04            jr c,2F
 300+ 9282 7C               ld a,h
 301+ 9283 D6 08            sub 8
 302+ 9285 67               ld h,a
 303+ 9286 7C           2 ld a,h
 304+ 9287 FE 58            cp $58
 305+ 9289 28 21            jr z,4F
 306+ 928B D1               pop de
 307+ 928C 7A           	ld a,d
 308+ 928D AE           	xor (hl)
 309+ 928E 77           	ld (hl),a
 310+ 928F 23           	inc hl
 311+ 9290 D1               pop de
 312+ 9291 7B           	ld a,e
 313+ 9292 AE           	xor (hl)
 314+ 9293 77           	ld (hl),a
 315+ 9294 2B           	dec hl
 316+ 9295 24           	inc h
 317+ 9296 7C               ld a,h
 318+ 9297 E6 07            and 7
 319+ 9299 20 0A            jr nz,3F
 320+ 929B 7D               ld a,l
 321+ 929C C6 20            add a,$20
 322+ 929E 6F               ld l,a
 323+ 929F 38 04            jr c,3F
 324+ 92A1 7C               ld a,h
 325+ 92A2 D6 08            sub 8
 326+ 92A4 67               ld h,a
 327+ 92A5 7C           3 ld a,h
 328+ 92A6 FE 58            cp $58
 329+ 92A8 28 02            jr z,4F
 330+ 92AA 10 C1            djnz 1B
 331+ 92AC ED 7B DF 85  4 ld sp,(Stack)
 332+ 92B0 C9           	ret
 333+ 92B1
 334+ 92B1 ED 73 DF 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 92B5 FD F9        	ld sp,iy
 336+ 92B7 06 08            ld b,8
 337+ 92B9 D1           1 pop de
 338+ 92BA 7B           	ld a,e
 339+ 92BB AE           	xor (hl)
 340+ 92BC 77           	ld (hl),a
 341+ 92BD 24            	inc h
 342+ 92BE 7C               ld a,h
 343+ 92BF E6 07            and 7
 344+ 92C1 20 0A            jr nz,2F
 345+ 92C3 7D               ld a,l
 346+ 92C4 C6 20            add a,$20
 347+ 92C6 6F               ld l,a
 348+ 92C7 38 04            jr c,2F
 349+ 92C9 7C               ld a,h
 350+ 92CA D6 08            sub 8
 351+ 92CC 67               ld h,a
 352+ 92CD 7C           2 ld a,h
 353+ 92CE FE 58            cp $58
 354+ 92D0 28 1C            jr z,4F
 355+ 92D2 D1               pop de
 356+ 92D3 7A           	ld a,d
 357+ 92D4 AE           	xor (hl)
 358+ 92D5 77           	ld (hl),a
 359+ 92D6 24           	inc h
 360+ 92D7 7C               ld a,h
 361+ 92D8 E6 07            and 7
 362+ 92DA 20 0A            jr nz,3F
 363+ 92DC 7D               ld a,l
 364+ 92DD C6 20            add a,$20
 365+ 92DF 6F               ld l,a
 366+ 92E0 38 04            jr c,3F
 367+ 92E2 7C               ld a,h
 368+ 92E3 D6 08            sub 8
 369+ 92E5 67               ld h,a
 370+ 92E6 7C           3 ld a,h
 371+ 92E7 FE 58            cp $58
 372+ 92E9 28 03            jr z,4F
 373+ 92EB D1               pop de
 374+ 92EC 10 CB            djnz 1B
 375+ 92EE ED 7B DF 85  4 ld sp,(Stack)
 376+ 92F2 C9           	ret
 377+ 92F3
 378+ 92F3              ; ---------------------------------------------------
 379+ 92F3              ;
 380+ 92F3              ;   27/02/23
 381+ 92F3              ;
 382+ 92F3              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 92F3              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 92F3              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 92F3
 386+ 92F3 ED 73 DF 85  Pinta_Disparo ld (Stack),sp
 387+ 92F7 FD F9            ld sp,iy
 388+ 92F9 06 02            ld b,2
 389+ 92FB D1           1 pop de
 390+ 92FC 7B               ld a,e
 391+ 92FD AE               xor (hl)
 392+ 92FE 77               ld (hl),a
 393+ 92FF 23               inc hl
 394+ 9300 7A               ld a,d
 395+ 9301 AE               xor (hl)
 396+ 9302 77               ld (hl),a
 397+ 9303 2B               dec hl
 398+ 9304
 399+ 9304 24               inc h
 400+ 9305 7C               ld a,h
 401+ 9306 E6 07            and 7
 402+ 9308 20 0A            jr nz,2F
 403+ 930A 7D               ld a,l
 404+ 930B C6 20            add a,$20
 405+ 930D 6F               ld l,a
 406+ 930E 38 04            jr c,2F
 407+ 9310 7C               ld a,h
 408+ 9311 D6 08            sub 8
 409+ 9313 67               ld h,a
 410+ 9314 7C           2 ld a,h
 411+ 9315 FE 58            cp $58
 412+ 9317 28 02            jr z,3F
 413+ 9319
 414+ 9319 10 E0            djnz 1B
 415+ 931B ED 7B DF 85  3 ld sp,(Stack)
 416+ 931F C9               ret
 417+ 9320
# file closed: Rutinas_de_impresion_sprites.asm
1031  9320              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9320              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9320              ;
   3+ 9320              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9320              ;
   5+ 9320              ; *****************************************************************************************************************************************************************************************
   6+ 9320              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9320
   8+ 9320 7C           calcula_tercio ld a,h
   9+ 9321 E6 18        	and $18
  10+ 9323 CB 2F        	sra a
  11+ 9325 CB 2F        	sra a
  12+ 9327 CB 2F        	sra a
  13+ 9329 C9           	ret
  14+ 932A
# file closed: calcula_tercio.asm
1032  932A              	include "Cls.asm"
# file opened: Cls.asm
   1+ 932A              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 932A              ;
   3+ 932A              ;
   4+ 932A              ;	CLS.
   5+ 932A              ;
   6+ 932A              ;	Limpia la pantalla y define sus atributos.
   7+ 932A              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 932A              ;
   9+ 932A              ;	COLORES: 0 ..... NEGRO
  10+ 932A              ;    		 1 ..... AZUL
  11+ 932A              ; 			 2 ..... ROJO
  12+ 932A              ;			 3 ..... MAGENTA
  13+ 932A              ; 			 4 ..... VERDE
  14+ 932A              ; 			 5 ..... CIAN
  15+ 932A              ;			 6 ..... AMARILLO
  16+ 932A              ; 			 7 ..... BLANCO
  17+ 932A              ;
  18+ 932A              ;	INPUT: A contiene los atributos de pantalla.
  19+ 932A              ;
  20+ 932A              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 932A
  22+ 932A
  23+ 932A 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 932D 11 01 40     	LD DE,$4001
  25+ 9330 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9333 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9335 ED B0        	LDIR
  28+ 9337 01 FF 02     	LD BC,767
  29+ 933A 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 933B ED B0        	LDIR
  31+ 933D C9           	ret
  32+ 933E
# file closed: Cls.asm
1033  933E              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 933E              ; ******************************************************************************************************************************************************************************************
   2+ 933E              ;
   3+ 933E              ;   22/01/23
   4+ 933E              ;
   5+ 933E              ;	Mov_down
   6+ 933E              ;
   7+ 933E              ; 	Mueve el Sprite X px hacia abajo.
   8+ 933E              ;
   9+ 933E              ;
  10+ 933E 21 C9 85     Mov_down ld hl,Ctrl_0
  11+ 9341 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  12+ 9343              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  13+ 9343              ; 																	; _ en el caso de que no lo haya.
  14+ 9343 3A B3 85     	ld a,(Vel_down)
  15+ 9346 47           	ld b,a
  16+ 9347 2A 9D 85         ld hl,(Posicion_actual)
  17+ 934A CD 20 93     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  18+ 934D E6 02        	and 2
  19+ 934F 28 0F        	jr z,1F
  20+ 9351
  21+ 9351              ; Nos encontramos en el último tercio de pantalla.
  22+ 9351              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  23+ 9351
  24+ 9351 7C           	ld a,h
  25+ 9352 FE 57        	cp $57
  26+ 9354 20 0A        	jr nz,1F
  27+ 9356 7D           	ld a,l
  28+ 9357 C6 20        	add $20
  29+ 9359 30 05        	jr nc,1F
  30+ 935B
  31+ 935B              ; ------------------------------
  32+ 935B CD 36 96     	call Reaparece_arriba
  33+ 935E              ;	call Reinicio
  34+ 935E              ; ------------------------------
  35+ 935E
  36+ 935E 18 08        	jr 3F
  37+ 9360 CD 60 90     1 call NextScan
  38+ 9363 22 9D 85     	ld (Posicion_actual),hl
  39+ 9366 10 E2            djnz 2B
  40+ 9368 CD 4C 96     3 call Genera_coordenadas
  41+ 936B C9           	ret
  42+ 936C
  43+ 936C              ; ******************************************************************************************************************************************************************************************
  44+ 936C              ;
  45+ 936C              ;   22/01/23
  46+ 936C              ;
  47+ 936C              ;	Mov_up
  48+ 936C              ;
  49+ 936C              ; 	Mueve el Sprite hacia arriba.
  50+ 936C              ;
  51+ 936C              ;
  52+ 936C 21 C9 85     Mov_up ld hl,Ctrl_0
  53+ 936F CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  54+ 9371              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  55+ 9371              ; 																		; _ en el caso de que no lo haya.
  56+ 9371 3A B2 85     	ld a,(Vel_up)
  57+ 9374 47           	ld b,a
  58+ 9375 2A 9D 85     	ld hl,(Posicion_actual)
  59+ 9378 CD 20 93     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
  60+ 937B A7           	and a
  61+ 937C 20 10        	jr nz,1F
  62+ 937E
  63+ 937E              ; Nos encontramos en el 1er tercio de pantalla.
  64+ 937E              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
  65+ 937E
  66+ 937E 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
  67+ 937F FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
  68+ 9381 20 0B            jr nz,1F
  69+ 9383 7D               ld a,l
  70+ 9384 D6 20            sub $20
  71+ 9386 30 06            jr nc,1F
  72+ 9388 25               dec h
  73+ 9389
  74+ 9389              ; -----------------------------
  75+ 9389 CD 26 96         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
  76+ 938C              ;	call Reinicio
  77+ 938C              ; -----------------------------
  78+ 938C
  79+ 938C 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
  80+ 938E CD 6F 90     1 call PreviousScan
  81+ 9391 22 9D 85     	ld (Posicion_actual),hl
  82+ 9394 10 E2            djnz 3B
  83+ 9396 CD 4C 96     2 call Genera_coordenadas
  84+ 9399 C9           	ret
  85+ 939A
  86+ 939A              ; ******************************************************************************************************************************************************************************************
  87+ 939A              ;
  88+ 939A              ;	19/10/22
  89+ 939A              ;
  90+ 939A              ;	Mov_right.
  91+ 939A              ;
  92+ 939A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
  93+ 939A              ;
  94+ 939A
  95+ 939A 21 C9 85     Mov_right ld hl,Ctrl_0
  96+ 939D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 939F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 939F              ; 																	; _ en el caso de que no lo haya.
  99+ 939F 3A C9 85     	ld a,(Ctrl_0)
 100+ 93A2 CB 77        	bit 6,a
 101+ 93A4 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 102+ 93A6
 103+ 93A6 CD D4 95     	call Stop_Amadeus_right
 104+ 93A9 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 105+ 93AA 18 4D        	jr 8F
 106+ 93AC
 107+ 93AC 3A A1 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 108+ 93AF FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 109+ 93B1 20 46        	jr nz,8F
 110+ 93B3
 111+ 93B3 3A A3 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 112+ 93B6 A7           	and a 															; _[3] para continuar con el DESPLZ.
 113+ 93B7 28 40        	jr z,8F
 114+ 93B9
 115+ 93B9              ; ---------- ---------- ----------
 116+ 93B9              ;
 117+ 93B9              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 118+ 93B9
 119+ 93B9 3A B1 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 120+ 93BC FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 121+ 93BE 28 11        	jr z,1F
 122+ 93C0 38 06        	jr c,6F
 123+ 93C2 FE 04        	cp 4
 124+ 93C4 28 14        	jr z,7F
 125+ 93C6 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 126+ 93C8
 127+ 93C8              ; ---------- ---------- ----------
 128+ 93C8              ;
 129+ 93C8              ; Perfiles de velocidad
 130+ 93C8              ;
 131+ 93C8
 132+ 93C8 3A A3 85     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 133+ 93CB FE FE        	cp $fe
 134+ 93CD 20 2A        	jr nz,8F
 135+ 93CF 18 10        	jr 3F
 136+ 93D1 3A A3 85     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 137+ 93D4 FE FD        	cp $fd
 138+ 93D6 20 21        	jr nz,8F
 139+ 93D8 18 07        	jr 3F
 140+ 93DA 3A A3 85     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 141+ 93DD FE FB        	cp $fb
 142+ 93DF 20 18        	jr nz,8F
 143+ 93E1
 144+ 93E1              ; ---------- ---------- ----------
 145+ 93E1
 146+ 93E1              3
 147+ 93E1 CD 14 96     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 148+ 93E4              ;	call Reinicio
 149+ 93E4
 150+ 93E4              ; ---------- ---------- ----------
 151+ 93E4              ;
 152+ 93E4              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 153+ 93E4
 154+ 93E4 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 155+ 93E6 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 156+ 93E7 CD 00 94     	call DESPLZ_DER
 157+ 93EA C1           	pop bc
 158+ 93EB 10 F9        	djnz 5B
 159+ 93ED 2A 9D 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 160+ 93F0 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 161+ 93F1 22 9D 85     	ld (Posicion_actual),hl
 162+ 93F4 CD 4C 96     	call Genera_coordenadas
 163+ 93F7 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 164+ 93F9
 165+ 93F9              ; ---------- ---------- ----------
 166+ 93F9
 167+ 93F9 2A 9D 85     8 ld hl,(Posicion_actual)
 168+ 93FC CD 00 94     	call DESPLZ_DER
 169+ 93FF C9           2 ret
 170+ 9400
 171+ 9400              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 172+ 9400              ;
 173+ 9400              ;	22/9/22
 174+ 9400              ;
 175+ 9400
 176+ 9400 CD 0F 94     DESPLZ_DER call Desplaza_derecha
 177+ 9403 CD 5B 94         call modifica_parametros_1er_DESPLZ_2
 178+ 9406 CD 84 94         call Ciclo_completo
 179+ 9409 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 180+ 940C CB FE        	set 7,(hl)
 181+ 940E C9           	ret
 182+ 940F
 183+ 940F              ; ******************************************************************************************************************************************************************************************
 184+ 940F              ;	15/02/23
 185+ 940F              ;
 186+ 940F
 187+ 940F 3A B1 85     Desplaza_derecha ld a,(Vel_right)
 188+ 9412 47           	ld b,a
 189+ 9413 2A A9 85     	ld hl,(Puntero_DESPLZ_der)
 190+ 9416 23           1 inc hl
 191+ 9417 23           	inc hl
 192+ 9418 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 193+ 941A 22 A9 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 194+ 941D CD 07 88     	call Extrae_address
 195+ 9420 22 9F 85     	ld (Puntero_objeto),hl
 196+ 9423
 197+ 9423              ; Modifica (Puntero_DESPLZ_izq).
 198+ 9423
 199+ 9423              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 200+ 9423              ; Cuántos movimientos hemos hecho ??
 201+ 9423              ; DE contiene (Puntero_DESPLZ_der).
 202+ 9423
 203+ 9423 2A A5 85     7 ld hl,(Indice_Sprite_der)
 204+ 9426 EB           	ex de,hl
 205+ 9427 A7           	and a
 206+ 9428 ED 52        	sbc hl,de
 207+ 942A CB 3D        	srl l
 208+ 942C 3E 08        6 ld a,8
 209+ 942E 95           	sub l
 210+ 942F 30 1E        	jr nc,3F
 211+ 9431
 212+ 9431              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 213+ 9431              ; B="0".
 214+ 9431
 215+ 9431 04           4 inc b
 216+ 9432 3C           	inc a
 217+ 9433 20 FC        	jr nz,4B
 218+ 9435 78           	ld a,b
 219+ 9436 08           	ex af,af
 220+ 9437 2A A5 85     	ld hl,(Indice_Sprite_der)
 221+ 943A 23           5 inc hl
 222+ 943B 23           	inc hl
 223+ 943C 10 FC        	djnz 5B
 224+ 943E 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 225+ 9441 CD 07 88     	call Extrae_address
 226+ 9444 22 9F 85     	ld (Puntero_objeto),hl
 227+ 9447
 228+ 9447              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 229+ 9447              ; _(Posicion_actual).
 230+ 9447
 231+ 9447 21 9D 85     	ld hl,Posicion_actual
 232+ 944A 34           	inc (hl)
 233+ 944B 08               ex af,af
 234+ 944C 6F           	ld l,a
 235+ 944D 18 DD        	jr 6B
 236+ 944F
 237+ 944F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 238+ 944F
 239+ 944F 47           3 ld b,a
 240+ 9450 2A A7 85     	ld hl,(Indice_Sprite_izq)
 241+ 9453 23           2 inc hl
 242+ 9454 23           	inc hl
 243+ 9455 10 FC        	djnz 2B
 244+ 9457 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 245+ 945A C9           8 ret
 246+ 945B
 247+ 945B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 248+ 945B              ;
 249+ 945B              ;	24/7/22
 250+ 945B              ;
 251+ 945B              ;	modifica_parametros_1er_DESPLZ_2
 252+ 945B              ;
 253+ 945B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 254+ 945B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 255+ 945B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 256+ 945B
 257+ 945B 3A A3 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 258+ 945E A7           	and a
 259+ 945F 20 1F        	jr nz,1F
 260+ 9461 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 261+ 9463 32 A3 85         ld (CTRL_DESPLZ),a
 262+ 9466
 263+ 9466 21 9C 85     	ld hl,Columns
 264+ 9469 34           	inc (hl)
 265+ 946A 3A AF 85     	ld a,(Cuad_objeto)
 266+ 946D E6 01        	and 1
 267+ 946F 28 0F        	jr z,1F
 268+ 9471 2A 9D 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 269+ 9474 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 270+ 9475 22 9D 85     	ld (Posicion_actual),hl
 271+ 9478 CD 4C 96     	call Genera_coordenadas
 272+ 947B CD E0 95     	call Inc_CTRL_DESPLZ
 273+ 947E 18 03        	jr 2F
 274+ 9480 CD E0 95     1 call Inc_CTRL_DESPLZ
 275+ 9483 C9           2 ret
 276+ 9484
 277+ 9484              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 278+ 9484              ;
 279+ 9484              ;	24/7/22
 280+ 9484              ;
 281+ 9484              ;	Ciclo_completo.
 282+ 9484              ;
 283+ 9484              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 284+ 9484              ;
 285+ 9484              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 286+ 9484              ; 	Decrementamos (Columns).
 287+ 9484              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 288+ 9484              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 289+ 9484
 290+ 9484
 291+ 9484 3A A3 85     Ciclo_completo ld a,(CTRL_DESPLZ)
 292+ 9487 FE FF        	cp $ff
 293+ 9489 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 294+ 948B E6 F0        	and $f0
 295+ 948D 20 28        	jr nz,3F
 296+ 948F
 297+ 948F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 298+ 948F
 299+ 948F 3A A3 85     	ld a,(CTRL_DESPLZ)
 300+ 9492 47           	ld b,a
 301+ 9493 3E F8        	ld a,$f8
 302+ 9495 80           	add b
 303+ 9496 32 A3 85     	ld (CTRL_DESPLZ),a
 304+ 9499 18 1C        	jr 3F
 305+ 949B 21 9C 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 306+ 949E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 307+ 949F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 308+ 94A0 32 A3 85     	ld (CTRL_DESPLZ),a
 309+ 94A3 3A AF 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 310+ 94A6 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 311+ 94A8 20 0A        	jr nz,2F
 312+ 94AA 2A 9D 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 313+ 94AD 23           	inc hl
 314+ 94AE 22 9D 85     	ld (Posicion_actual),hl
 315+ 94B1 CD 4C 96     	call Genera_coordenadas
 316+ 94B4
 317+ 94B4              ; Inicia el puntero de Sprite.
 318+ 94B4
 319+ 94B4 CD 1E 88     2 call Inicia_puntero_objeto_der
 320+ 94B7 C9           3 ret
 321+ 94B8
 322+ 94B8              ; ******************************************************************************************************************************************************************************************
 323+ 94B8              ;
 324+ 94B8              ;	15/02/23
 325+ 94B8              ;
 326+ 94B8              ;	Mov_left.
 327+ 94B8              ;
 328+ 94B8              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 329+ 94B8              ;
 330+ 94B8              Mov_left
 331+ 94B8
 332+ 94B8 21 C9 85     	ld hl,Ctrl_0
 333+ 94BB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 334+ 94BD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 335+ 94BD              ; 																	; _ en el caso de que no lo haya.
 336+ 94BD 3A C9 85     	ld a,(Ctrl_0)
 337+ 94C0 CB 77        	bit 6,a
 338+ 94C2 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 339+ 94C4
 340+ 94C4 CD DA 95     	call Stop_Amadeus_left
 341+ 94C7 C8           	ret z
 342+ 94C8 20 4A        	jr nz,8F
 343+ 94CA
 344+ 94CA 3A A1 85     11 ld a,(Coordenada_X)
 345+ 94CD A7           	and a
 346+ 94CE 20 44        	jr nz,8F
 347+ 94D0
 348+ 94D0 3A A3 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 349+ 94D3 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 350+ 94D4 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 351+ 94D6
 352+ 94D6              ; ---------- ---------- ----------
 353+ 94D6
 354+ 94D6 3A B0 85     	ld a,(Vel_left)
 355+ 94D9 FE 02        	cp 2
 356+ 94DB 28 0F        	jr z,1F
 357+ 94DD 38 04        	jr c,6F
 358+ 94DF FE 04        	cp 4
 359+ 94E1 28 12        	jr z,7F
 360+ 94E3
 361+ 94E3              ; ---------- ---------- ----------
 362+ 94E3
 363+ 94E3 3A A3 85     6 ld a,(CTRL_DESPLZ)
 364+ 94E6 FE F8        	cp $f8
 365+ 94E8 20 2A        	jr nz,8F
 366+ 94EA 18 10        	jr 4F
 367+ 94EC 3A A3 85     1 ld a,(CTRL_DESPLZ)
 368+ 94EF FE F9        	cp $f9
 369+ 94F1 20 21        	jr nz,8F
 370+ 94F3 18 07        	jr 4F
 371+ 94F5 3A A3 85     7 ld a,(CTRL_DESPLZ)
 372+ 94F8 FE FB        	cp $fb
 373+ 94FA 20 18        	jr nz,8F
 374+ 94FC
 375+ 94FC              ; ---------- ---------- ----------
 376+ 94FC
 377+ 94FC              4
 378+ 94FC CD 02 96     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 379+ 94FF              ;	call Reinicio
 380+ 94FF
 381+ 94FF              ; ---------- ---------- ----------
 382+ 94FF
 383+ 94FF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 384+ 9501 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 385+ 9502
 386+ 9502              ;	ld hl,(Indice_Sprite_izq)
 387+ 9502              ;	ld (Puntero_DESPLZ_izq),hl
 388+ 9502
 389+ 9502 CD 1B 95     	call DESPLZ_IZQ
 390+ 9505 C1           	pop bc
 391+ 9506 10 F9        	djnz 5B
 392+ 9508 2A 9D 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 393+ 950B 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 394+ 950C 22 9D 85     	ld (Posicion_actual),hl
 395+ 950F CD 4C 96     	call Genera_coordenadas
 396+ 9512 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 397+ 9514
 398+ 9514              ; ---------- ---------- ----------
 399+ 9514
 400+ 9514              ; Movemos, no hay recolocación.
 401+ 9514
 402+ 9514 2A 9D 85     8 ld hl,(Posicion_actual)
 403+ 9517 CD 1B 95     	call DESPLZ_IZQ
 404+ 951A C9           2 ret
 405+ 951B
 406+ 951B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 407+ 951B              ;
 408+ 951B              ;	22/9/22
 409+ 951B
 410+ 951B              DESPLZ_IZQ
 411+ 951B
 412+ 951B CD 2A 95     	call Desplaza_izquierda
 413+ 951E CD 76 95         call modifica_parametros_1er_DESPLZ
 414+ 9521 CD 9E 95     	call Ciclo_completo_2
 415+ 9524 21 C9 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 416+ 9527 CB BE        	res 7,(hl)
 417+ 9529 C9           	ret
 418+ 952A
 419+ 952A              Desplaza_izquierda
 420+ 952A
 421+ 952A 3A B0 85     	ld a,(Vel_left)
 422+ 952D 47           	ld b,a
 423+ 952E 2A AB 85     	ld hl,(Puntero_DESPLZ_izq)
 424+ 9531 23           1 inc hl
 425+ 9532 23           	inc hl
 426+ 9533 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 427+ 9535 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 428+ 9538 CD 07 88     	call Extrae_address
 429+ 953B 22 9F 85     	ld (Puntero_objeto),hl
 430+ 953E
 431+ 953E              ; Modifica (Puntero_DESPLZ_der).
 432+ 953E
 433+ 953E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 434+ 953E              ; Cuántos movimientos hemos hecho ??
 435+ 953E              ; DE contiene (Puntero_DESPLZ_izq).
 436+ 953E
 437+ 953E 2A A7 85     7 ld hl,(Indice_Sprite_izq)
 438+ 9541 EB           	ex de,hl
 439+ 9542 A7           	and a
 440+ 9543 ED 52        	sbc hl,de
 441+ 9545 CB 3D        	srl l
 442+ 9547 3E 08        6 ld a,8
 443+ 9549 95           	sub l
 444+ 954A 30 1E        	jr nc,3F
 445+ 954C
 446+ 954C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 447+ 954C              ; B="0".
 448+ 954C
 449+ 954C 04           4 inc b
 450+ 954D 3C           	inc a
 451+ 954E 20 FC        	jr nz,4B
 452+ 9550 78           	ld a,b
 453+ 9551 08           	ex af,af
 454+ 9552 2A A7 85     	ld hl,(Indice_Sprite_izq)
 455+ 9555 23           5 inc hl
 456+ 9556 23           	inc hl
 457+ 9557 10 FC        	djnz 5B
 458+ 9559 22 AB 85     	ld (Puntero_DESPLZ_izq),hl
 459+ 955C CD 07 88     	call Extrae_address
 460+ 955F 22 9F 85     	ld (Puntero_objeto),hl
 461+ 9562
 462+ 9562              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 463+ 9562              ; _(Posicion_actual).
 464+ 9562
 465+ 9562 21 9D 85     	ld hl,Posicion_actual
 466+ 9565 35           	dec (hl)
 467+ 9566 08           	ex af,af
 468+ 9567 6F           	ld l,a
 469+ 9568 18 DD        	jr 6B
 470+ 956A
 471+ 956A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 472+ 956A
 473+ 956A 47           3 ld b,a
 474+ 956B 2A A5 85     	ld hl,(Indice_Sprite_der)
 475+ 956E 23           2 inc hl
 476+ 956F 23           	inc hl
 477+ 9570 10 FC        	djnz 2B
 478+ 9572 22 A9 85     	ld (Puntero_DESPLZ_der),hl
 479+ 9575 C9           8 ret
 480+ 9576
 481+ 9576              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 482+ 9576              ;
 483+ 9576              ;	modifica_parametros_1er_DESPLZ
 484+ 9576              ;
 485+ 9576              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 486+ 9576              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 487+ 9576              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 488+ 9576
 489+ 9576 3A A3 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 490+ 9579 A7           	and a
 491+ 957A 20 1E        	jr nz,1F
 492+ 957C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 493+ 957D 32 A3 85         ld (CTRL_DESPLZ),a
 494+ 9580 21 9C 85     	ld hl,Columns
 495+ 9583 34           	inc (hl)
 496+ 9584 3A AF 85     	ld a,(Cuad_objeto)
 497+ 9587 E6 01        	and 1
 498+ 9589 20 0F        	jr nz,1F
 499+ 958B 2A 9D 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 500+ 958E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 501+ 958F 22 9D 85     	ld (Posicion_actual),hl
 502+ 9592 CD 4C 96     	call Genera_coordenadas
 503+ 9595 CD F1 95     	call Dec_CTRL_DESPLZ
 504+ 9598 18 03        	jr 2F
 505+ 959A CD F1 95     1 call Dec_CTRL_DESPLZ
 506+ 959D C9           2 ret
 507+ 959E
 508+ 959E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 509+ 959E
 510+ 959E 3A A3 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 511+ 95A1 FE F7        	cp $f7
 512+ 95A3 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 513+ 95A5 30 2C        	jr nc,3F
 514+ 95A7
 515+ 95A7              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 516+ 95A7
 517+ 95A7 06 00        	ld b,0
 518+ 95A9 04           4 inc b
 519+ 95AA 3C           	inc a
 520+ 95AB FE F7        	cp $f7
 521+ 95AD 20 FA        	jr nz,4B
 522+ 95AF 3E FF        	ld a,$ff
 523+ 95B1 90           	sub b
 524+ 95B2 32 A3 85     	ld (CTRL_DESPLZ),a
 525+ 95B5 18 1C        	jr 3F
 526+ 95B7
 527+ 95B7              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 528+ 95B7
 529+ 95B7 21 9C 85     1 ld hl,Columns
 530+ 95BA 35           	dec (hl)
 531+ 95BB AF           	xor a
 532+ 95BC 32 A3 85     	ld (CTRL_DESPLZ),a
 533+ 95BF 3A AF 85     	ld a,(Cuad_objeto)
 534+ 95C2 E6 01        	and 1
 535+ 95C4 28 0A        	jr z,2F
 536+ 95C6 2A 9D 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 537+ 95C9 2B           	dec hl
 538+ 95CA 22 9D 85     	ld (Posicion_actual),hl
 539+ 95CD CD 4C 96     	call Genera_coordenadas
 540+ 95D0
 541+ 95D0              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 542+ 95D0
 543+ 95D0 CD 31 88     2 call Inicia_puntero_objeto_izq
 544+ 95D3 C9           3 ret
 545+ 95D4
 546+ 95D4              ; ---------- ---------- ---------- ---------- ---------- ----------
 547+ 95D4              ;
 548+ 95D4              ;	19/10/22
 549+ 95D4              ;
 550+ 95D4              ;	(cp 29) para un Amadeus de 3 Columns.
 551+ 95D4              ;	(cp 30)   ""  ""    ""     2 Columns.
 552+ 95D4
 553+ 95D4 3A A1 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 554+ 95D7 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 555+ 95D9 C9           	ret
 556+ 95DA
 557+ 95DA              ; ---------- ---------- ---------- ---------- ---------- ----------
 558+ 95DA              ;
 559+ 95DA              ;	19/10/22
 560+ 95DA              ;
 561+ 95DA              ;	(cp 2) para un Amadeus de 3 Columns.
 562+ 95DA              ;	(cp 1)   ""  ""    ""     2 Columns.
 563+ 95DA
 564+ 95DA 3A A1 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 565+ 95DD FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 566+ 95DF C9           	ret
 567+ 95E0
 568+ 95E0              ; ---------- ---------- ---------- ---------- ---------- ----------
 569+ 95E0              ;
 570+ 95E0              ;	24/7/22
 571+ 95E0              ;
 572+ 95E0              ;	Inc_CTRL_DESPLZ
 573+ 95E0              ;
 574+ 95E0              ;
 575+ 95E0              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 576+ 95E0
 577+ 95E0 21 A3 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 578+ 95E3 3A B1 85     	ld a,(Vel_right)
 579+ 95E6 A7           	and a
 580+ 95E7 28 06        	jr z,1F
 581+ 95E9 47           	ld b,a
 582+ 95EA 34           3 inc (hl)
 583+ 95EB 10 FD        	djnz 3B
 584+ 95ED 18 01        	jr 2F
 585+ 95EF 34           1 inc (hl)
 586+ 95F0 C9           2 ret
 587+ 95F1
 588+ 95F1              ; ---------- ---------- ---------- ---------- ---------- ----------
 589+ 95F1              ;
 590+ 95F1              ;	5/2/23
 591+ 95F1              ;
 592+ 95F1              ;	Dec_CTRL_DESPLZ
 593+ 95F1              ;
 594+ 95F1              ;
 595+ 95F1              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 596+ 95F1
 597+ 95F1 21 A3 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 598+ 95F4 3A B0 85     	ld a,(Vel_left)
 599+ 95F7 A7           	and a
 600+ 95F8 28 06        	jr z,1F
 601+ 95FA 47           	ld b,a
 602+ 95FB 35           3 dec (hl)
 603+ 95FC 10 FD        	djnz 3B
 604+ 95FE 18 01        	jr 2F
 605+ 9600 35           1 dec (hl)
 606+ 9601 C9           2 ret
 607+ 9602
 608+ 9602              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9602
 610+ 9602 2A 9D 85     Reaparece_derecha ld hl,(Posicion_actual)
 611+ 9605 01 1F 00     	ld bc,31
 612+ 9608 A7           	and a
 613+ 9609 ED 4A        	adc hl,bc
 614+ 960B 22 9D 85     	ld (Posicion_actual),hl
 615+ 960E 21 C9 85     	ld hl,Ctrl_0														; $xxx1
 616+ 9611 CB C6        	set 0,(hl)
 617+ 9613 C9           	ret
 618+ 9614
 619+ 9614              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9614
 621+ 9614 2A 9D 85     Reaparece_izquierda ld hl,(Posicion_actual)
 622+ 9617 01 1F 00     	ld bc,31
 623+ 961A A7           	and a
 624+ 961B ED 42        	sbc hl,bc
 625+ 961D 22 9D 85     	ld (Posicion_actual),hl 											; $xx1x
 626+ 9620 21 C9 85     	ld hl,Ctrl_0
 627+ 9623 CB CE        	set 1,(hl)
 628+ 9625 C9           	ret
 629+ 9626
 630+ 9626              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9626
 632+ 9626 24           Reaparece_abajo inc h
 633+ 9627 01 E0 17     	ld bc,$17e0
 634+ 962A A7           	and a
 635+ 962B ED 4A        	adc hl,bc
 636+ 962D 22 9D 85     	ld (Posicion_actual),hl
 637+ 9630 21 C9 85     	ld hl,Ctrl_0
 638+ 9633 CB D6        	set 2,(hl)
 639+ 9635 C9           	ret
 640+ 9636
 641+ 9636              ; ---------- ---------- ---------- ---------- ---------- ----------
 642+ 9636
 643+ 9636 01 E0 17     Reaparece_arriba ld bc,$17e0
 644+ 9639 A7           	and a
 645+ 963A ED 42        	sbc hl,bc
 646+ 963C 22 9D 85     	ld (Posicion_actual),hl
 647+ 963F 21 C9 85     	ld hl,Ctrl_0
 648+ 9642 CB DE        	set 3,(hl)
 649+ 9644 C9           	ret
 650+ 9645
 651+ 9645              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 652+ 9645
 653+ 9645 2A AD 85     Reinicio ld hl,(Posicion_inicio)
 654+ 9648 22 9D 85     	ld (Posicion_actual),hl
 655+ 964B C9           	ret
# file closed: Direcciones.asm
1034  964C              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 964C              ; ------------------------------------------------------------------------
   2+ 964C              ;
   3+ 964C              ;	02/04/23
   4+ 964C              ;
   5+ 964C              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 964C              ;	Fila superior "0", Columna izquierda "0".
   7+ 964C              ;
   8+ 964C              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 964C              ;
  10+ 964C              ;	Modifica: A,BC y DE.
  11+ 964C
  12+ 964C C5           Genera_coordenadas push bc
  13+ 964D E5           	push hl
  14+ 964E D5           	push de
  15+ 964F
  16+ 964F 2A 9D 85     	ld hl,(Posicion_actual)
  17+ 9652
  18+ 9652 7D           	ld a,l
  19+ 9653 E6 1F        	and $1f
  20+ 9655 32 A1 85     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9658
  22+ 9658 CD 20 93     	call calcula_tercio
  23+ 965B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 965C
  25+ 965C 1E 00        	ld e,0
  26+ 965E 7D           	ld a,l
  27+ 965F E6 E0        	and $e0
  28+ 9661 28 01        	jr z,1F
  29+ 9663 04           	inc b
  30+ 9664
  31+ 9664 04           1 inc b
  32+ 9665 05           	dec b
  33+ 9666 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9668              ;														; _ , salimos.
  35+ 9668 1C           3 inc e
  36+ 9669 D6 20        	sub 32
  37+ 966B 20 FB        	jr nz,3B
  38+ 966D 10 F5        	djnz 1B
  39+ 966F
  40+ 966F 7B           2 ld a,e
  41+ 9670 32 A2 85     	ld (Coordenada_y),a
  42+ 9673
  43+ 9673 D1           	pop de
  44+ 9674 E1           	pop hl
  45+ 9675 C1           	pop bc
  46+ 9676
  47+ 9676 C9           	ret
  48+ 9677
  49+ 9677              ; ------------------------------------------------------------------------
  50+ 9677              ;	28/03/23
  51+ 9677              ;
  52+ 9677              ;	Proporciona las coordenadas del disparo a imprimir.
  53+ 9677              ;	Fila superior "0", Columna izquierda "0".
  54+ 9677              ;
  55+ 9677              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9677              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9677              ;
  58+ 9677              ;		DE="$120d"
  59+ 9677              ;
  60+ 9677              ;		D, (Coordenada_X), Columnas, $12
  61+ 9677              ;		E, (Coordenada_y), Filas, $0d
  62+ 9677              ;
  63+ 9677              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9677
  65+ 9677              ;	Modifica: A,BC y DE.
  66+ 9677
  67+ 9677
  68+ 9677              Genera_coordenadas_disparo
  69+ 9677
  70+ 9677              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9677
  72+ 9677 7D           	ld a,l
  73+ 9678 E6 1F        	and $1f
  74+ 967A 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 967B CD 20 93     	call calcula_tercio
  76+ 967E 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 967F 1E 00        	ld e,0
  78+ 9681 7D           	ld a,l
  79+ 9682 E6 E0        	and $e0
  80+ 9684 28 01        	jr z,1F
  81+ 9686 04           	inc b
  82+ 9687 1C           1 inc e
  83+ 9688 D6 20        	sub 32
  84+ 968A 20 FB        	jr nz,1B
  85+ 968C 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 968E C9           	ret
  87+ 968F
# file closed: Genera_coordenadas.asm
1035  968F              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 968F
   2+ 968F
   3+ 968F              ;   11/8/22
   4+ 968F              ;
   5+ 968F              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 968F              ;
   7+ 968F              ;   Mov_obj.asm
   8+ 968F              ;
   9+ 968F              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
  10+ 968F              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
  11+ 968F              ;
  12+ 968F              ;   Codificación:
  13+ 968F              ;
  14+ 968F              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
  15+ 968F
  16+ 968F              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
  17+ 968F
  18+ 968F 02 40 00     Arriba db 2,%01000000,0
  19+ 9692 02 80 00     Abajo db 2,%10000000,0
  20+ 9695 02 20 00     Derecha db 2,%00100000,0
  21+ 9698 02 10 00     Izquierda db 2,%00010000,0
  22+ 969B 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
  22+ 969F 60 42 60 40
  22+ 96A3 63
  23+ 96A4 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
  23+ 96A8 22 A3 80 A0
  24+ 96AC 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
  24+ 96B0 84 A0 83 A0
  25+ 96B4 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
  25+ 96B8 80 A3 22 A0
  26+ 96BC 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
  26+ 96C0 40 60 42 60
  27+ 96C4 42 60 44 00      db %01000010,%01100000,%01000100,0
  28+ 96C8
  29+ 96C8 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
  30+ 96CC 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
  31+ 96D0 05 24 84 24  Escaloncitos_derecha_abajo db 5,%00100100,%10000100,%00100100,%10000100,0
  31+ 96D4 84 00
  32+ 96D6 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
  32+ 96DA 84 00
  33+ 96DC 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
  34+ 96E0 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  34+ 96E4 1F 1F 1F 1F
  35+ 96E8 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
  35+ 96EC 1F 1F 1F 1F
  35+ 96F0 1F
  36+ 96F1 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
  36+ 96F5 2F 2F 2F 2F
  36+ 96F9 2F 2F
  37+ 96FB 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
  37+ 96FF 2F 2F 00
  38+ 9702
  39+ 9702              ; ----- ----- ----- ----- -----
  40+ 9702
  41+ 9702 E0 96        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
  42+ 9704 DC 96        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
  43+ 9706 98 96        Indice_mov_Izquierda defw Izquierda
  44+ 9708 95 96        Indice_mov_Derecha defw Derecha
  45+ 970A 92 96        Indice_mov_Abajo defw Abajo
  46+ 970C 8F 96        Indice_mov_Arriba defw Arriba
  47+ 970E CC 96        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
  48+ 9710 D0 96        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
  49+ 9712 C8 96        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
  50+ 9714 D6 96        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
  51+ 9716 9B 96        Indice_mov_Onda_senoidal defw Onda_senoidal
  52+ 9718              ; ----- ----- ----- ----- -----
  53+ 9718
  54+ 9718 3A CF 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
  55+ 971B A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
  56+ 971C 28 02            jr z,1F
  57+ 971E 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
  58+ 9720 3A D0 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
  59+ 9723 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
  60+ 9725 32 D0 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
  61+ 9728              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
  62+ 9728 2A CD 85         ld hl,(Puntero_mov)
  63+ 972B 7E               ld a,(hl)
  64+ 972C 32 CF 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
  65+ 972F 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
  66+ 9730 22 CD 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
  67+ 9733
  68+ 9733 3A D1 85     Decoder ld a,(Repetimos_db)
  69+ 9736 A7               and a
  70+ 9737 20 0C            jr nz,12F
  71+ 9739 2A CD 85         ld hl,(Puntero_mov)
  72+ 973C 7E               ld a,(hl)
  73+ 973D A7               and a
  74+ 973E 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
  75+ 9740 E6 0F            and $0f
  76+ 9742 32 D1 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
  77+ 9745              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
  78+ 9745 2A CD 85     12 ld hl,(Puntero_mov)
  79+ 9748 CB 7E            bit 7,(hl)
  80+ 974A 28 03            jr z,2F
  81+ 974C CD 3E 93         call Mov_down
  82+ 974F 2A CD 85     2 ld hl, (Puntero_mov)
  83+ 9752 CB 76            bit 6,(hl)
  84+ 9754 28 03            jr z,3F
  85+ 9756 CD 6C 93         call Mov_up
  86+ 9759 2A CD 85     3 ld hl, (Puntero_mov)
  87+ 975C CB 6E            bit 5,(hl)
  88+ 975E 28 03            jr z,4F
  89+ 9760 CD 9A 93         call Mov_right
  90+ 9763 2A CD 85     4 ld hl, (Puntero_mov)
  91+ 9766 CB 66            bit 4,(hl)
  92+ 9768 28 03            jr z,5F
  93+ 976A CD B8 94         call Mov_left
  94+ 976D
  95+ 976D              ; ---------- --------- --------- ---------- ----------
  96+ 976D
  97+ 976D 3A D1 85     5 ld a,(Repetimos_db)
  98+ 9770 A7               and a
  99+ 9771 28 07            jr z,6F
 100+ 9773 3D               dec a
 101+ 9774 32 D1 85         ld (Repetimos_db),a
 102+ 9777 28 01            jr z,6f
 103+ 9779 C9           11 ret
 104+ 977A 21 CF 85     6 ld hl,Contador_db_mov
 105+ 977D 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
 106+ 977E 2A CD 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
 107+ 9781 23               inc hl
 108+ 9782 22 CD 85         ld (Puntero_mov),hl
 109+ 9785 18 F2            jr 11B
 110+ 9787 2A CB 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
 111+ 978A 3A D0 85         ld a,(Incrementa_puntero)
 112+ 978D 47               ld b,a
 113+ 978E 23           8 inc hl
 114+ 978F 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
 115+ 9791 5E               ld e,(hl)
 116+ 9792 23               inc hl
 117+ 9793 56               ld d,(hl)
 118+ 9794 EB               ex de,hl
 119+ 9795 22 CD 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
 120+ 9798 18 DF            jr 11B
 121+ 979A
 122+ 979A              ; ---------- --------- --------- ---------- ----------
 123+ 979A              ;
 124+ 979A              ;   11/8/22
 125+ 979A              ;
 126+ 979A              ;   Prepara_Puntero_mov
 127+ 979A
 128+ 979A E5           Prepara_Puntero_mov push hl
 129+ 979B D5               push de
 130+ 979C 2A CB 85         ld hl,(Puntero_indice_mov)
 131+ 979F 5E               ld e,(hl)
 132+ 97A0 23               inc hl
 133+ 97A1 56               ld d,(hl)
 134+ 97A2 EB               ex de,hl
 135+ 97A3 22 CD 85         ld (Puntero_mov),hl
 136+ 97A6 D1               pop de
 137+ 97A7 E1               pop hl
 138+ 97A8 C9               ret
 139+ 97A9
 140+ 97A9              ; ---------- --------- --------- ---------- ----------
 141+ 97A9              ;
 142+ 97A9              ;   11/8/22
 143+ 97A9              ;
 144+ 97A9              ;   Reinicia_el_movimiento
 145+ 97A9
 146+ 97A9 CD 9A 97     Reinicia_el_movimiento call Prepara_Puntero_mov
 147+ 97AC AF               xor a
 148+ 97AD 32 CF 85         ld (Contador_db_mov),a
 149+ 97B0 32 D0 85         ld (Incrementa_puntero),a
 150+ 97B3 C3 18 97         jp Movimiento
 151+ 97B6 C9               ret
 152+ 97B7              ; ---------- --------- --------- ---------- ----------
 153+ 97B7
 154+ 97B7
 155+ 97B7
 156+ 97B7
 157+ 97B7
 158+ 97B7
 159+ 97B7
 160+ 97B7
 161+ 97B7
 162+ 97B7
 163+ 97B7
 164+ 97B7
 165+ 97B7
 166+ 97B7
 167+ 97B7
 168+ 97B7
 169+ 97B7
 170+ 97B7
# file closed: Patrones_de_mov.asm
1036  97B7              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 97B7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 97B7              ;
   3+ 97B7              ;	3/1/23
   4+ 97B7              ;
   5+ 97B7              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 97B7
   7+ 97B7              ;	ADC HL,SP	LD (addr),SP
   8+ 97B7              ;	ADD HL,SP	LD SP,(addr)
   9+ 97B7              ;	ADD IX,SP	LD SP,nn
  10+ 97B7              ; 	ADD IY,SP	LD SP,HL
  11+ 97B7              ;				LD SP,IX
  12+ 97B7              ;	DEC SP		LD SP,IY
  13+ 97B7
  14+ 97B7              ;	EX (SP),HL
  15+ 97B7              ;	EX (SP),IX
  16+ 97B7              ;	EX (SP),IY
  17+ 97B7
  18+ 97B7              ;	INC SP
  19+ 97B7
  20+ 97B7
  21+ 97B7                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 DF 85      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A D6 85         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A E5 85         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A E3 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 E5 85         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 E3 85     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B DF 85  6 ld sp,(Stack)
  65+ 7FD4
  66+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  67+ 7FD5
  68+ 7FD5
# file closed: Guarda_foto_registros.asm
1037  7FD5              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 7FD5              ; Relojes y temporizaciones.
   2+ 7FD5
   3+ 7FD5              ; ------------------------------------------------------
   4+ 7FD5              ;
   5+ 7FD5              ;	27/04/23
   6+ 7FD5              ;
   7+ 7FD5              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 7FD5              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 7FD5              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 7FD5              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 7FD5              ;
  12+ 7FD5              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 7FD5              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 7FD5
  15+ 7FD5              Habilita_disparos
  16+ 7FD5
  17+ 7FD5 7E           	ld a,(hl)
  18+ 7FD6 A7           	and a
  19+ 7FD7 C0           	ret nz
  20+ 7FD8
  21+ 7FD8 EB           	ex de,hl
  22+ 7FD9
  23+ 7FD9 35           	dec (hl)
  24+ 7FDA 34           	inc (hl)
  25+ 7FDB 35           	dec (hl)
  26+ 7FDC C0           	ret nz
  27+ 7FDD
  28+ 7FDD 2B           	dec hl
  29+ 7FDE 7E           	ld a,(hl)
  30+ 7FDF 23           	inc hl
  31+ 7FE0 77           	ld (hl),a
  32+ 7FE1
  33+ 7FE1 EB           	ex de,hl
  34+ 7FE2 3E 01        	ld a,1
  35+ 7FE4 77           	ld (hl),a
  36+ 7FE5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1038  7FE6
1039  7FE6              	SAVESNA "Pruebas.sna", START
1040  7FE6
1041  7FE6
1042  7FE6
# file closed: Banco_de_pruebas.asm
