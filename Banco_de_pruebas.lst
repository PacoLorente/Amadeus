# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD E1 8A     	call Frame
  15  A104
  16  A104 3A 06 8A     	ld a,(Ctrl_2)
  17  A107 CB 67        	bit 4,a
  18  A109 20 FE        	jr nz,$
  19  A10B
  20  A10B 3A 08 8A     	ld a,(Ctrl_1) 										; Existe Loop?
  21  A10E CB 5F        	bit 3,a
  22  A110 ED 4D        	reti
  23  A112
  24  A112              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  25  A112
  26  A112              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A112              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A112              ;
   3+ A112              ;	17/02/23
   4+ A112              ;
   5+ A112              ;	Sprites e índices.
   6+ A112
   7+ A112              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 10 80        	defw Disparo_f9
  13+ 8004 18 80        	defw Disparo_fb
  14+ 8006 20 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80,$01,$80
  17+ 800C 01 80 01 80
  18+ 8010              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8010 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60,$00,$60
  19+ 8014 00 60 00 60
  20+ 8018              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8018 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00,$18,$00
  21+ 801C 18 00 18 00
  22+ 8020              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8020 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00,$06,$00
  23+ 8024 06 00 06 00
  24+ 8028
  25+ 8028              ; ----------------------------------------------------------------------------------------
  26+ 8028
  27+ 8028              ; Badsat_izq. 2x2.
  28+ 8028
  29+ 8028 38 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 802A 78 81        	defw Badsat_izq_fe
  31+ 802C 48 81        	defw Badsat_izq_fd
  32+ 802E 18 81        	defw Badsat_izq_fc
  33+ 8030 E8 80        	defw Badsat_izq_fb
  34+ 8032 B8 80        	defw Badsat_izq_fa
  35+ 8034 88 80        	defw Badsat_izq_f9
  36+ 8036 58 80        	defw Badsat_izq_f8
  37+ 8038
  38+ 8038 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 803C 02 2A 02 55
  39+ 8040 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 8044 7F E8 03 60
  40+ 8048 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 804C 2B E8 54 40
  41+ 8050 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 8054 28 00 10 00
  42+ 8058
  43+ 8058 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 805C 0A 00 01 15
  44+ 8060 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 8064 01 55 00 01
  45+ 8068 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 806C 00 01 B0 00
  46+ 8070 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 8074 FC 00 15 F4
  47+ 8078 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 807C 55 30 00 2A
  48+ 8080 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 8084 00 08 00 00
  49+ 8088
  50+ 8088 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 808C 85 00 00 8A
  51+ 8090 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 8094 00 AA 80 00
  52+ 8098 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 809C 00 00 D8 00
  53+ 80A0 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 80A4 FE 00 0A FA
  54+ 80A8 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80AC 2A 98 00 15
  55+ 80B0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80B4 00 04 00 00
  56+ 80B8
  57+ 80B8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80BC 42 80 00 45
  58+ 80C0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80C4 00 55 40 00
  59+ 80C8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80CC 00 00 6C 00
  60+ 80D0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80D4 FF 00 05 7D
  61+ 80D8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80DC 15 4C 00 0A
  62+ 80E0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80E4 00 02 00 00
  63+ 80E8
  64+ 80E8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80EC 21 40 00 22
  65+ 80F0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80F4 00 2A A0 00
  66+ 80F8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80FC 80 00 36 00
  67+ 8100 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 8104 7F 80 02 BE
  68+ 8108 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 810C 0A A6 00 05
  69+ 8110 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 8114 00 01 00 00
  70+ 8118
  71+ 8118 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 811C 10 A0 00 11
  72+ 8120 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 8124 00 15 50 00
  73+ 8128 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 812C 40 00 1B 00
  74+ 8130 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 8134 BF C0 01 5F
  75+ 8138 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 813C 05 53 00 02
  76+ 8140 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 8144 00 00 80 00
  77+ 8148
  78+ 8148 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 814C 08 50 00 08
  79+ 8150 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 8154 00 0A A8 00
  80+ 8158 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 815C A0 00 0D 80
  81+ 8160 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 8164 5F F8 00 AF
  82+ 8168 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 816C 02 A9 00 01
  83+ 8170 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 8174 00 00 40 00
  84+ 8178
  85+ 8178 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 817C 04 28 00 04
  86+ 8180 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 8184 00 05 54 00
  87+ 8188 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 818C D0 00 06 C0
  88+ 8190 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 8194 2F FC 00 57
  89+ 8198 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 819C 01 54 80 00
  90+ 81A0 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 81A4 00 00 20 00
  91+ 81A8
  92+ 81A8
  93+ 81A8 B8 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81AA D8 81        	defw Badsat_der_f8
  95+ 81AC 08 82        	defw Badsat_der_f9
  96+ 81AE 38 82        	defw Badsat_der_fa
  97+ 81B0 68 82        	defw Badsat_der_fb
  98+ 81B2 98 82        	defw Badsat_der_fc
  99+ 81B4 C8 82        	defw Badsat_der_fd
 100+ 81B6 F8 82        	defw Badsat_der_fe
 101+ 81B8
 102+ 81B8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81BC 54 40 AA 40
 103+ 81C0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81C4 17 FE 06 C0
 104+ 81C8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81CC 17 D4 02 2A
 105+ 81D0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81D4 00 14 00 08
 106+ 81D8
 107+ 81D8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81DC 20 00 2A 20
 108+ 81E0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81E4 2A A0 00 15
 109+ 81E8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81EC 00 03 60 00
 110+ 81F0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81F4 F4 00 0B EA
 111+ 81F8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81FC 03 2A 80 00
 112+ 8200 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 8204 00 00 04 00
 113+ 8208
 114+ 8208 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 820C 10 00 15 10
 115+ 8210 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 8214 15 50 00 0A
 116+ 8218 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 821C 80 01 B0 00
 117+ 8220 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 8224 FA 00 05 F5
 118+ 8228 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 822C 01 95 40 00
 119+ 8230 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 8234 00 00 02 00
 120+ 8238
 121+ 8238 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 823C 08 00 0A 88
 122+ 8240 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 8244 0A A8 00 05
 123+ 8248 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 824C C0 00 D8 00
 124+ 8250 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 8254 FD 00 02 FA
 125+ 8258 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 825C 00 CA A0 00
 126+ 8260 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 8264 80 00 01 00
 127+ 8268
 128+ 8268 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 826C 84 00 05 44
 129+ 8270 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 8274 05 54 00 02
 130+ 8278 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 827C E0 00 6C 00
 131+ 8280 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 8284 FE 80 01 7D
 132+ 8288 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 828C 00 65 50 00
 133+ 8290 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 8294 40 00 00 80
 134+ 8298
 135+ 8298 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 829C 42 00 02 A2
 136+ 82A0 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 82A4 02 AA 00 01
 137+ 82A8 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82AC F0 00 36 00
 138+ 82B0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82B4 FF 40 00 BE
 139+ 82B8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82BC 00 32 A8 00
 140+ 82C0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82C4 A0 00 00 40
 141+ 82C8
 142+ 82C8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82CC A1 00 01 51
 143+ 82D0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82D4 01 55 00 00
 144+ 82D8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82DC F8 00 1B 00
 145+ 82E0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82E4 FF A0 00 1F
 146+ 82E8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82EC 00 09 54 00
 147+ 82F0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82F4 50 00 00 20
 148+ 82F8
 149+ 82F8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82FC 50 80 00 A8
 150+ 8300 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 8304 00 AA 80 00
 151+ 8308 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 830C FC 00 0D 80
 152+ 8310 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 8314 FF D0 00 0F
 153+ 8318 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 831C 00 04 AA 00
 154+ 8320 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 8324 28 00 00 10
 155+ 8328
 156+ 8328              ; ----------------------------------------------------------------------------------------
 157+ 8328
 158+ 8328              ; Amadeus. 2x2.
 159+ 8328
 160+ 8328 48 83        Indice_Amadeus_der defw Amadeus
 161+ 832A 00 00        	defw 0
 162+ 832C 68 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 832E 00 00        	defw 0
 164+ 8330 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 8332 00 00        	defw 0
 166+ 8334 C8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 8336 00 00        	defw 0	 								; (Fín de índice).
 168+ 8338
 169+ 8338 48 83        Indice_Amadeus_izq defw Amadeus
 170+ 833A 00 00        	defw 0
 171+ 833C C8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 833E 00 00        	defw 0
 173+ 8340 98 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 8342 00 00        	defw 0
 175+ 8344 68 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 8346 00 00        	defw 0	 								; (Fín de índice).
 177+ 8348
 178+ 8348 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 834C 26 64 24 24
 179+ 8350 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 8354 6F F6 67 E6
 180+ 8358 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 835C F7 EF FF FF
 181+ 8360 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 8364 8B D1 71 8E
 182+ 8368
 183+ 8368 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 836C F1 00 09 99
 184+ 8370 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 8374 0B 0D 00 1B
 185+ 8378 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 837C 80 19 F9 80
 186+ 8380 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 8384 F3 C0 3D FB
 187+ 8388 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 838C 3E F7 C0 3E
 188+ 8390 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 8394 40 1C 63 80
 189+ 8398
 190+ 8398 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 839C 3C 40 02 66
 191+ 83A0 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 83A4 02 C3 40 06
 192+ 83A8 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83AC 60 06 7E 60
 193+ 83B0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83B4 3C F0 0F 7E
 194+ 83B8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83BC 0F BD F0 0F
 195+ 83C0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83C4 10 07 18 E0
 196+ 83C8
 197+ 83C8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83CC 8F 10 00 99
 198+ 83D0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83D4 00 B0 D0 01
 199+ 83D8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83DC D8 01 9F 98
 200+ 83E0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83E4 CF 3C 03 DF
 201+ 83E8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83EC 03 EF 7C 03
 202+ 83F0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83F4 44 01 C6 38
 203+ 83F8
 204+ 83F8              ; ----------------------------------------------------------------------------------------
 205+ 83F8
 206+ 83F8 FE 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83FA 2E 84        	defw Explosion_2x3_2
 208+ 83FC 5E 84        	defw Explosion_2x3_3
 209+ 83FE
 210+ 83FE 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 8402 10 00 04 38
 211+ 8406 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 840A 02 E6 80 01
 212+ 840E B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 8412 00 03 DD 80
 213+ 8416 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 841A 3B 80 01 9D
 214+ 841E 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 8422 02 FD 80 03
 215+ 8426 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 842A 00 08 00 00
 216+ 842E
 217+ 842E 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 8432 38 10 03 BC
 218+ 8436 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 843A 04 06 C0 00
 219+ 843E 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 8442 00 03 DD 80
 220+ 8446 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 844A 3A 70 01 9C
 221+ 844E 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 8452 04 F8 80 06
 222+ 8456 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 845A 00 00 00 00
 223+ 845E
 224+ 845E 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 8462 00 20 08 00
 225+ 8466 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 846A 00 06 00 00
 226+ 846E 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 8472 00 00 14 30
 227+ 8476 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 847A 38 00 01 08
 228+ 847E 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 8482 00 80 00 04
 229+ 8486 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 848A 10 08 00 20
 230+ 848E
 231+ 848E              ; ------------------------------------------
 232+ 848E
 233+ 848E 94 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8490 B4 84        	defw Explosion_2x2_2
 235+ 8492 D4 84        	defw Explosion_2x2_3
 236+ 8494
 237+ 8494 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8498 43 84 37 D8
 238+ 849C 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 84A0 17 F0 3D D8
 239+ 84A4 FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A8 19 D0 1F 60
 240+ 84AC 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84B0 40 00 80 00
 241+ 84B4
 242+ 84B4
 243+ 84B4 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B8 3B C2 60 0C
 244+ 84BC 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84C0 07 F0 3D D8
 245+ 84C4 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C8 19 C6 1F 64
 246+ 84CC 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84D0 80 00 00 00
 247+ 84D4
 248+ 84D4 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D8 88 04 10 0C
 249+ 84DC 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84E0 81 E0 01 43
 250+ 84E4 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E8 10 80 18 00
 251+ 84EC 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84F0 60 01 80 02
 252+ 84F4
# file closed: Sprites_e_indices.asm
  27  84F4              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84F4
   2+ 84F4              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84F4
   4+ 84F4              ; 13/05/23
   5+ 84F4
   6+ 84F4              ; Control. %00000001 00000001
   7+ 84F4              ;
   8+ 84F4              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84F4              ;                    _ hacen las entidades hacia abajo.
  10+ 84F4              ;
  11+ 84F4              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84F4
  13+ 84F4 FA 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84F6 02 85        	defw Disparo_2A
  15+ 84F8 0A 85        	defw Disparo_3A
  16+ 84FA
  17+ 84FA 00 00        Disparo_1A defw 0									; Control.
  18+ 84FC 00 00        	defw 0											; Puntero objeto.
  19+ 84FE 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8500 00 00        	defw 0											; Rutina de impresión.
  21+ 8502
  22+ 8502 00 00        Disparo_2A defw 0									; Control.
  23+ 8504 00 00        	defw 0											; Puntero objeto.
  24+ 8506 00 00        	defw 0											; Puntero de impresión.
  25+ 8508 00 00        	defw 0											; Rutina de impresión.
  26+ 850A
  27+ 850A 00 00        Disparo_3A defw 0
  28+ 850C
  29+ 850C 22 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 850E 2A 85        	defw Disparo_2
  31+ 8510 32 85        	defw Disparo_3
  32+ 8512 3A 85        	defw Disparo_4
  33+ 8514 42 85        	defw Disparo_5
  34+ 8516 4A 85        	defw Disparo_6
  35+ 8518 52 85        	defw Disparo_7
  36+ 851A 5A 85        	defw Disparo_8
  37+ 851C 62 85        	defw Disparo_9
  38+ 851E 6A 85        	defw Disparo_10
  39+ 8520 72 85        	defw Disparo_11
  40+ 8522
  41+ 8522 00 00        Disparo_1 defw 0									; Control.
  42+ 8524 00 00        	defw 0											; Puntero objeto.
  43+ 8526 00 00        	defw 0											; Puntero de impresión.
  44+ 8528 00 00        	defw 0											; Rutina de impresión.
  45+ 852A
  46+ 852A 00 00        Disparo_2 defw 0									; Control.
  47+ 852C 00 00        	defw 0											; Puntero objeto.
  48+ 852E 00 00        	defw 0											; Puntero de impresión.
  49+ 8530 00 00        	defw 0											; Rutina de impresión.
  50+ 8532
  51+ 8532 00 00        Disparo_3 defw 0									; Control.
  52+ 8534 00 00        	defw 0											; Puntero objeto.
  53+ 8536 00 00        	defw 0											; Puntero de impresión.
  54+ 8538 00 00        	defw 0											; Rutina de impresión.
  55+ 853A
  56+ 853A 00 00        Disparo_4 defw 0									; Control.
  57+ 853C 00 00        	defw 0											; Puntero objeto.
  58+ 853E 00 00        	defw 0											; Puntero de impresión.
  59+ 8540 00 00        	defw 0											; Rutina de impresión.
  60+ 8542
  61+ 8542 00 00        Disparo_5 defw 0									; Control.
  62+ 8544 00 00        	defw 0											; Puntero objeto.
  63+ 8546 00 00        	defw 0											; Puntero de impresión.
  64+ 8548 00 00        	defw 0											; Rutina de impresión.
  65+ 854A
  66+ 854A 00 00        Disparo_6 defw 0									; Control.
  67+ 854C 00 00        	defw 0											; Puntero objeto.
  68+ 854E 00 00        	defw 0											; Puntero de impresión.
  69+ 8550 00 00        	defw 0											; Rutina de impresión.
  70+ 8552
  71+ 8552 00 00        Disparo_7 defw 0									; Control.
  72+ 8554 00 00        	defw 0											; Puntero objeto.
  73+ 8556 00 00        	defw 0											; Puntero de impresión.
  74+ 8558 00 00        	defw 0											; Rutina de impresión.
  75+ 855A
  76+ 855A 00 00        Disparo_8 defw 0									; Control.
  77+ 855C 00 00        	defw 0											; Puntero objeto.
  78+ 855E 00 00        	defw 0											; Puntero de impresión.
  79+ 8560 00 00        	defw 0											; Rutina de impresión.
  80+ 8562
  81+ 8562 00 00        Disparo_9 defw 0									; Control.
  82+ 8564 00 00        	defw 0											; Puntero objeto.
  83+ 8566 00 00        	defw 0											; Puntero de impresión.
  84+ 8568 00 00        	defw 0											; Rutina de impresión.
  85+ 856A
  86+ 856A 00 00        Disparo_10 defw 0									; Control.
  87+ 856C 00 00        	defw 0											; Puntero objeto.
  88+ 856E 00 00        	defw 0											; Puntero de impresión.
  89+ 8570 00 00        	defw 0											; Rutina de impresión.
  90+ 8572
  91+ 8572 00 00        Disparo_11 defw 0
  92+ 8574
  93+ 8574              ; -------------------------------------------------------------------------------------
  94+ 8574
  95+ 8574              Indice_de_cajas										 ;! 66 Bytes por entidad.
  96+ 8574
  97+ 8574 CE 85        	defw Caja_1
  98+ 8576 10 86        	defw Caja_2
  99+ 8578 52 86        	defw Caja_3
 100+ 857A 94 86        	defw Caja_4
 101+ 857C D6 86        	defw Caja_5
 102+ 857E 18 87        	defw Caja_6
 103+ 8580 5A 87        	defw Caja_7
 104+ 8582 9C 87        	defw Caja_8
 105+ 8584 DE 87        	defw Caja_9
 106+ 8586 20 88        	defw Caja_10
 107+ 8588              ;	...
 108+ 8588              ;	...
 109+ 8588              ;	+ entidades ...
 110+ 8588 00 00        	defw 0
 111+ 858A 00 00        	defw 0
 112+ 858C
 113+ 858C              ; ---------- ---------- ---------- ---------- ----------
 114+ 858C
 115+ 858C 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 858E 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8590 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 8592 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 8595
 120+ 8595 05           	db %00000101									; (Attr).
 121+ 8596 28 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8598 38 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 859A
 124+ 859A 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 859C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 859E
 127+ 859E D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 85A0 04           	db 4 											; (Cuad_objeto).
 129+ 85A1 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 85A5
 131+ 85A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 85A6
 133+ 85A6 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A8 00 00        	defw 0											;	" " " " " " "
 135+ 85AA 00 00        	defw 0											;	" " " " " " "
 136+ 85AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85B0
 138+ 85B0 00 00        	db 0,0											; Variables_de_pintado
 139+ 85B2 00 00        	defw 0											;	" " " " " " "
 140+ 85B4 00 00        	defw 0											;	" " " " " " "
 141+ 85B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85BA
 143+ 85BA 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85BC
 145+ 85BC 00           	db 0											; (Autoriza_movimiento).
 146+ 85BD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85C1 00 00
 147+ 85C3 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 148+ 85C5 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 149+ 85C7 00           	db 0											; (Cola_de_desplazamiento).
 150+ 85C8
 151+ 85C8 00           	db 0 											; (Columnas).
 152+ 85C9 00 00        	defw 0											; (Limite_horizontal).
 153+ 85CB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 154+ 85CE
 155+ 85CE              ; ---------- ---------- ---------- ---------- ----------
 156+ 85CE
 157+ 85CE 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 158+ 85D0 00 00        	defw 0											; (Posicion_actual).
 159+ 85D2 00 00        	defw 0 											; (Puntero_objeto).
 160+ 85D4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 161+ 85D7
 162+ 85D7 00           	db %00000000 									; (Attr).
 163+ 85D8
 164+ 85D8 00 00        	defw 0											; (Indice_Sprite_der).
 165+ 85DA 00 00        	defw 0											; (Indice_Sprite_izq).
 166+ 85DC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 167+ 85DE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 168+ 85E0
 169+ 85E0 00 00        	defw 0											; (Posicion_inicio).
 170+ 85E2 00           	db 0											; (Cuad_objeto).
 171+ 85E3
 172+ 85E3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 173+ 85E7
 174+ 85E7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 175+ 85E8
 176+ 85E8 00 00        	db 0,0										    ; Variables_de_borrado
 177+ 85EA 00 00        	defw 0											;	" " " " " " "
 178+ 85EC 00 00        	defw 0											;	" " " " " " "
 179+ 85EE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 85F2
 181+ 85F2 00 00        	db 0,0											; Variables_de_pintado
 182+ 85F4 00 00        	defw 0											;	" " " " " " "
 183+ 85F6 00 00        	defw 0											;	" " " " " " "
 184+ 85F8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 185+ 85FC
 186+ 85FC 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 187+ 85FE
 188+ 85FE 00           	db 0											; (Autoriza_movimiento).
 189+ 85FF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 189+ 8603 00 00
 190+ 8605 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 191+ 8607 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 192+ 8609 00           	db 0											; (Cola_de_desplazamiento).
 193+ 860A
 194+ 860A 00           	db 0 											; (Columnas).
 195+ 860B 00 00        	defw 0											; (Limite_horizontal).
 196+ 860D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 197+ 8610
 198+ 8610              ; ---------- ---------- ---------- ---------- ----------
 199+ 8610
 200+ 8610 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 201+ 8612 00 00        	defw 0											; (Posicion_actual).
 202+ 8614 00 00        	defw 0 											; (Puntero_objeto).
 203+ 8616 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 204+ 8619
 205+ 8619 00           	db %00000000 									; (Attr).
 206+ 861A
 207+ 861A 00 00        	defw 0											; (Indice_Sprite_der).
 208+ 861C 00 00        	defw 0											; (Indice_Sprite_izq).
 209+ 861E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 210+ 8620 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 211+ 8622
 212+ 8622 00 00        	defw 0											; (Posicion_inicio).
 213+ 8624 00           	db 0											; (Cuad_objeto).
 214+ 8625
 215+ 8625 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 216+ 8629
 217+ 8629 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 218+ 862A
 219+ 862A 00 00        	db 0,0										    ; Variables_de_borrado
 220+ 862C 00 00        	defw 0											;	" " " " " " "
 221+ 862E 00 00        	defw 0											;	" " " " " " "
 222+ 8630 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 8634
 224+ 8634 00 00        	db 0,0											; Variables_de_pintado
 225+ 8636 00 00        	defw 0											;	" " " " " " "
 226+ 8638 00 00        	defw 0											;	" " " " " " "
 227+ 863A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 228+ 863E
 229+ 863E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 230+ 8640
 231+ 8640 00           	db 0											; (Autoriza_movimiento).
 232+ 8641 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 232+ 8645 00 00
 233+ 8647 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 234+ 8649 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 235+ 864B 00           	db 0											; (Cola_de_desplazamiento).
 236+ 864C
 237+ 864C 00           	db 0 											; (Columnas).
 238+ 864D 00 00        	defw 0											; (Limite_horizontal).
 239+ 864F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 240+ 8652
 241+ 8652              ; ---------- ---------- ---------- ---------- ----------
 242+ 8652
 243+ 8652 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 244+ 8654 00 00        	defw 0											; (Posicion_actual).
 245+ 8656 00 00        	defw 0 											; (Puntero_objeto).
 246+ 8658 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 247+ 865B
 248+ 865B 00           	db %00000000 									; (Attr).
 249+ 865C
 250+ 865C 00 00        	defw 0											; (Indice_Sprite_der).
 251+ 865E 00 00        	defw 0											; (Indice_Sprite_izq).
 252+ 8660 00 00        	defw 0											; (Puntero_DESPLZ_der).
 253+ 8662 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 254+ 8664
 255+ 8664 00 00        	defw 0											; (Posicion_inicio).
 256+ 8666 00           	db 0											; (Cuad_objeto).
 257+ 8667
 258+ 8667 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 259+ 866B
 260+ 866B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 261+ 866C
 262+ 866C 00 00        	db 0,0										    ; Variables_de_borrado
 263+ 866E 00 00        	defw 0											;	" " " " " " "
 264+ 8670 00 00        	defw 0											;	" " " " " " "
 265+ 8672 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 266+ 8676
 267+ 8676 00 00        	db 0,0											; Variables_de_pintado
 268+ 8678 00 00        	defw 0											;	" " " " " " "
 269+ 867A 00 00        	defw 0											;	" " " " " " "
 270+ 867C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 271+ 8680
 272+ 8680 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 273+ 8682
 274+ 8682 00           	db 0											; (Autoriza_movimiento).
 275+ 8683 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 275+ 8687 00 00
 276+ 8689 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 277+ 868B 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 278+ 868D 00           	db 0											; (Cola_de_desplazamiento).
 279+ 868E
 280+ 868E 00           	db 0 											; (Columnas).
 281+ 868F 00 00        	defw 0											; (Limite_horizontal).
 282+ 8691 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 283+ 8694
 284+ 8694              ; ---------- ---------- ---------- ---------- ----------
 285+ 8694
 286+ 8694 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 287+ 8696 00 00        	defw 0											; (Posicion_actual).
 288+ 8698 00 00        	defw 0 											; (Puntero_objeto).
 289+ 869A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 290+ 869D
 291+ 869D 00           	db %00000000 									; (Attr).
 292+ 869E
 293+ 869E 00 00        	defw 0											; (Indice_Sprite_der).
 294+ 86A0 00 00        	defw 0											; (Indice_Sprite_izq).
 295+ 86A2 00 00        	defw 0											; (Puntero_DESPLZ_der).
 296+ 86A4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 297+ 86A6
 298+ 86A6 00 00        	defw 0											; (Posicion_inicio).
 299+ 86A8 00           	db 0											; (Cuad_objeto).
 300+ 86A9
 301+ 86A9 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 302+ 86AD
 303+ 86AD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 304+ 86AE
 305+ 86AE 00 00        	db 0,0										    ; Variables_de_borrado
 306+ 86B0 00 00        	defw 0											;	" " " " " " "
 307+ 86B2 00 00        	defw 0											;	" " " " " " "
 308+ 86B4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 309+ 86B8
 310+ 86B8 00 00        	db 0,0											; Variables_de_pintado
 311+ 86BA 00 00        	defw 0											;	" " " " " " "
 312+ 86BC 00 00        	defw 0											;	" " " " " " "
 313+ 86BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 314+ 86C2
 315+ 86C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 316+ 86C4
 317+ 86C4 00           	db 0											; (Autoriza_movimiento).
 318+ 86C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 318+ 86C9 00 00
 319+ 86CB 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 320+ 86CD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 321+ 86CF 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86D0
 323+ 86D0 00           	db 0 											; (Columnas).
 324+ 86D1 00 00        	defw 0											; (Limite_horizontal).
 325+ 86D3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86D6
 327+ 86D6              ; ---------- ---------- ---------- ---------- ----------
 328+ 86D6
 329+ 86D6 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86D8 00 00        	defw 0											; (Posicion_actual).
 331+ 86DA 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86DC 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86DF
 334+ 86DF 00           	db %00000000 									; (Attr).
 335+ 86E0
 336+ 86E0 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86E2 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86E4 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86E6 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86E8
 341+ 86E8 00 00        	defw 0											; (Posicion_inicio).
 342+ 86EA 00           	db 0											; (Cuad_objeto).
 343+ 86EB
 344+ 86EB 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 86EF
 346+ 86EF 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 86F0
 348+ 86F0 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 86F2 00 00        	defw 0											;	" " " " " " "
 350+ 86F4 00 00        	defw 0											;	" " " " " " "
 351+ 86F6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 86FA
 353+ 86FA 00 00        	db 0,0											; Variables_de_pintado
 354+ 86FC 00 00        	defw 0											;	" " " " " " "
 355+ 86FE 00 00        	defw 0											;	" " " " " " "
 356+ 8700 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 8704
 358+ 8704 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 8706
 360+ 8706 00           	db 0											; (Autoriza_movimiento).
 361+ 8707 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 361+ 870B 00 00
 362+ 870D 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 363+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 364+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 365+ 8712
 366+ 8712 00           	db 0 											; (Columnas).
 367+ 8713 00 00        	defw 0											; (Limite_horizontal).
 368+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 369+ 8718
 370+ 8718              ; ---------- ---------- ---------- ---------- ----------
 371+ 8718
 372+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 373+ 871A 00 00        	defw 0											; (Posicion_actual).
 374+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 375+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 376+ 8721
 377+ 8721 00           	db %00000000 									; (Attr).
 378+ 8722
 379+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 380+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 381+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 382+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 383+ 872A
 384+ 872A 00 00        	defw 0											; (Posicion_inicio).
 385+ 872C 00           	db 0											; (Cuad_objeto).
 386+ 872D
 387+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 388+ 8731
 389+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 390+ 8732
 391+ 8732 00 00        	db 0,0										    ; Variables_de_borrado
 392+ 8734 00 00        	defw 0											;	" " " " " " "
 393+ 8736 00 00        	defw 0											;	" " " " " " "
 394+ 8738 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 395+ 873C
 396+ 873C 00 00        	db 0,0											; Variables_de_pintado
 397+ 873E 00 00        	defw 0											;	" " " " " " "
 398+ 8740 00 00        	defw 0											;	" " " " " " "
 399+ 8742 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 400+ 8746
 401+ 8746 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 402+ 8748
 403+ 8748 00           	db 0											; (Autoriza_movimiento).
 404+ 8749 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 404+ 874D 00 00
 405+ 874F 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 406+ 8751 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 407+ 8753 00           	db 0											; (Cola_de_desplazamiento).
 408+ 8754
 409+ 8754 00           	db 0 											; (Columnas).
 410+ 8755 00 00        	defw 0											; (Limite_horizontal).
 411+ 8757 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 412+ 875A
 413+ 875A              ; ---------- ---------- ---------- ---------- ----------
 414+ 875A
 415+ 875A 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 416+ 875C 00 00        	defw 0											; (Posicion_actual).
 417+ 875E 00 00        	defw 0 											; (Puntero_objeto).
 418+ 8760 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 419+ 8763
 420+ 8763 00           	db %00000000 									; (Attr).
 421+ 8764
 422+ 8764 00 00        	defw 0											; (Indice_Sprite_der).
 423+ 8766 00 00        	defw 0											; (Indice_Sprite_izq).
 424+ 8768 00 00        	defw 0											; (Puntero_DESPLZ_der).
 425+ 876A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 426+ 876C
 427+ 876C 00 00        	defw 0											; (Posicion_inicio).
 428+ 876E 00           	db 0											; (Cuad_objeto).
 429+ 876F
 430+ 876F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 431+ 8773
 432+ 8773 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 433+ 8774
 434+ 8774 00 00        	db 0,0										    ; Variables_de_borrado
 435+ 8776 00 00        	defw 0											;	" " " " " " "
 436+ 8778 00 00        	defw 0											;	" " " " " " "
 437+ 877A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 438+ 877E
 439+ 877E 00 00        	db 0,0											; Variables_de_pintado
 440+ 8780 00 00        	defw 0											;	" " " " " " "
 441+ 8782 00 00        	defw 0											;	" " " " " " "
 442+ 8784 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 443+ 8788
 444+ 8788 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 445+ 878A
 446+ 878A 00           	db 0											; (Autoriza_movimiento).
 447+ 878B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 447+ 878F 00 00
 448+ 8791 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 449+ 8793 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 450+ 8795 00           	db 0											; (Cola_de_desplazamiento).
 451+ 8796
 452+ 8796 00           	db 0 											; (Columnas).
 453+ 8797 00 00        	defw 0											; (Limite_horizontal).
 454+ 8799 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 455+ 879C
 456+ 879C              ; ---------- ---------- ---------- ---------- ----------
 457+ 879C
 458+ 879C 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 459+ 879E 00 00        	defw 0											; (Posicion_actual).
 460+ 87A0 00 00        	defw 0 											; (Puntero_objeto).
 461+ 87A2 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 462+ 87A5
 463+ 87A5 00           	db %00000000 									; (Attr).
 464+ 87A6
 465+ 87A6 00 00        	defw 0											; (Indice_Sprite_der).
 466+ 87A8 00 00        	defw 0											; (Indice_Sprite_izq).
 467+ 87AA 00 00        	defw 0											; (Puntero_DESPLZ_der).
 468+ 87AC 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 469+ 87AE
 470+ 87AE 00 00        	defw 0											; (Posicion_inicio).
 471+ 87B0 00           	db 0											; (Cuad_objeto).
 472+ 87B1
 473+ 87B1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 474+ 87B5
 475+ 87B5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 476+ 87B6
 477+ 87B6 00 00        	db 0,0										    ; Variables_de_borrado
 478+ 87B8 00 00        	defw 0											;	" " " " " " "
 479+ 87BA 00 00        	defw 0											;	" " " " " " "
 480+ 87BC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 481+ 87C0
 482+ 87C0 00 00        	db 0,0											; Variables_de_pintado
 483+ 87C2 00 00        	defw 0											;	" " " " " " "
 484+ 87C4 00 00        	defw 0											;	" " " " " " "
 485+ 87C6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 486+ 87CA
 487+ 87CA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 488+ 87CC
 489+ 87CC 00           	db 0											; (Autoriza_movimiento).
 490+ 87CD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 490+ 87D1 00 00
 491+ 87D3 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 492+ 87D5 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 493+ 87D7 00           	db 0											; (Cola_de_desplazamiento).
 494+ 87D8
 495+ 87D8 00           	db 0 											; (Columnas).
 496+ 87D9 00 00        	defw 0											; (Limite_horizontal).
 497+ 87DB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 498+ 87DE
 499+ 87DE              ; ---------- ---------- ---------- ---------- ----------
 500+ 87DE
 501+ 87DE 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 502+ 87E0 00 00        	defw 0											; (Posicion_actual).
 503+ 87E2 00 00        	defw 0 											; (Puntero_objeto).
 504+ 87E4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 505+ 87E7
 506+ 87E7 00           	db %00000000 									; (Attr).
 507+ 87E8
 508+ 87E8 00 00        	defw 0											; (Indice_Sprite_der).
 509+ 87EA 00 00        	defw 0											; (Indice_Sprite_izq).
 510+ 87EC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 511+ 87EE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 512+ 87F0
 513+ 87F0 00 00        	defw 0											; (Posicion_inicio).
 514+ 87F2 00           	db 0											; (Cuad_objeto).
 515+ 87F3
 516+ 87F3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 517+ 87F7
 518+ 87F7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 519+ 87F8
 520+ 87F8 00 00        	db 0,0										    ; Variables_de_borrado
 521+ 87FA 00 00        	defw 0											;	" " " " " " "
 522+ 87FC 00 00        	defw 0											;	" " " " " " "
 523+ 87FE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 524+ 8802
 525+ 8802 00 00        	db 0,0											; Variables_de_pintado
 526+ 8804 00 00        	defw 0											;	" " " " " " "
 527+ 8806 00 00        	defw 0											;	" " " " " " "
 528+ 8808 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 529+ 880C
 530+ 880C 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 531+ 880E
 532+ 880E 00           	db 0											; (Autoriza_movimiento).
 533+ 880F 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 533+ 8813 00 00
 534+ 8815 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 535+ 8817 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 536+ 8819 00           	db 0											; (Cola_de_desplazamiento).
 537+ 881A
 538+ 881A 00           	db 0 											; (Columnas).
 539+ 881B 00 00        	defw 0											; (Limite_horizontal).
 540+ 881D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 541+ 8820
 542+ 8820              ; ---------- ---------- ---------- ---------- ----------
 543+ 8820
 544+ 8820 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 545+ 8822 00 00        	defw 0											; (Posicion_actual).
 546+ 8824 00 00        	defw 0 											; (Puntero_objeto).
 547+ 8826 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 548+ 8829
 549+ 8829 00           	db %00000000 									; (Attr).
 550+ 882A
 551+ 882A 00 00        	defw 0											; (Indice_Sprite_der).
 552+ 882C 00 00        	defw 0											; (Indice_Sprite_izq).
 553+ 882E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 554+ 8830 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 555+ 8832
 556+ 8832 00 00        	defw 0											; (Posicion_inicio).
 557+ 8834 00           	db 0											; (Cuad_objeto).
 558+ 8835
 559+ 8835 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 560+ 8839
 561+ 8839 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 562+ 883A
 563+ 883A 00 00        	db 0,0										    ; Variables_de_borrado
 564+ 883C 00 00        	defw 0											;	" " " " " " "
 565+ 883E 00 00        	defw 0											;	" " " " " " "
 566+ 8840 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 567+ 8844
 568+ 8844 00 00        	db 0,0											; Variables_de_pintado
 569+ 8846 00 00        	defw 0											;	" " " " " " "
 570+ 8848 00 00        	defw 0											;	" " " " " " "
 571+ 884A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 572+ 884E
 573+ 884E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 574+ 8850
 575+ 8850 00           	db 0											; (Autoriza_movimiento).
 576+ 8851 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 576+ 8855 00 00
 577+ 8857 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 578+ 8859 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 579+ 885B 00           	db 0											; (Cola_de_desplazamiento).
 580+ 885C
 581+ 885C 00           	db 0 											; (Columnas).
 582+ 885D 00 00        	defw 0											; (Limite_horizontal).
 583+ 885F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 584+ 8862
 585+ 8862              ; -------------------------------------------------------------------------------------
 586+ 8862              ;
 587+ 8862              ;	20/05/23
 588+ 8862              ;
 589+ 8862              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 590+ 8862              ;
 591+ 8862              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 592+ 8862              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 593+ 8862              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 594+ 8862              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 595+ 8862
 596+ 8862              Indice_de_entidades
 597+ 8862
 598+ 8862 6C 88        	defw Entidad_1
 599+ 8864 7C 88        	defw Entidad_2
 600+ 8866 8C 88        	defw Entidad_3
 601+ 8868 9C 88        	defw Entidad_4
 602+ 886A AC 88        	defw Entidad_5
 603+ 886C
 604+ 886C              ;	BADSAT, (Satélite malvado).
 605+ 886C
 606+ 886C 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 607+ 886E 04           	db %00000100									; (Attr).
 608+ 886F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 609+ 8871 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 610+ 8873 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 611+ 8875 01           	db 1											; (Cuad_objeto).
 612+ 8876 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 613+ 887A AE 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 614+ 887C
 615+ 887C 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 616+ 887E 02           	db %00000010									; (Attr).
 617+ 887F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 618+ 8881 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 619+ 8883 40 50        	defw $5040                                      ; (Posicion_inicio).
 620+ 8885 01           	db 1											; (Cuad_objeto).
 621+ 8886 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 622+ 888A AE 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 623+ 888C
 624+ 888C 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 625+ 888E 04           	db %00000100									; (Attr).
 626+ 888F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 627+ 8891 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 628+ 8893 A0 47        	defw $47a0                                      ; (Posicion_inicio).
 629+ 8895 01           	db 1											; (Cuad_objeto).
 630+ 8896 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 631+ 889A AE 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 632+ 889C
 633+ 889C 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 634+ 889E 01           	db %00000001									; (Attr).
 635+ 889F A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 636+ 88A1 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 637+ 88A3 BF 47        	defw $47bf                                      ; (Posicion_inicio).
 638+ 88A5 01           	db 1											; (Cuad_objeto).
 639+ 88A6 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 640+ 88AA AE 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 641+ 88AC
 642+ 88AC 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 643+ 88AE 01           	db %00000001									; (Attr).
 644+ 88AF A8 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 645+ 88B1 28 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 646+ 88B3 07 40        	defw $4007                                      ; (Posicion_inicio).
 647+ 88B5 01           	db 1											; (Cuad_objeto).
 648+ 88B6 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 649+ 88BA AE 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 650+ 88BC
# file closed: Cajas_y_disparos.asm
  28  88BC              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88BC              ; 13/05/23
   2+ 88BC
   3+ 88BC              Indice_de_niveles
   4+ 88BC
   5+ 88BC CA 88        	defw Nivel_1
   6+ 88BE CC 88        	defw Nivel_2
   7+ 88C0 D9 88        	defw Nivel_3
   8+ 88C2 E9 88        	defw Nivel_4
   9+ 88C4 FB 88        	defw Nivel_5
  10+ 88C6
  11+ 88C6              ;	...
  12+ 88C6              ;	...
  13+ 88C6              ;	+ Niveles ...
  14+ 88C6
  15+ 88C6 00 00        	defw 0
  16+ 88C8 00 00        	defw 0
  17+ 88CA
  18+ 88CA 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88CB 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88CC 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88CD 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88D1 01 02
  22+ 88D3 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88D7 01 02
  23+ 88D9 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88DA 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88DE 01
  25+ 88DF 03 01 01 01  	db 3,1,1,1,1
  25+ 88E3 01
  26+ 88E4 03 01 01 01  	db 3,1,1,1,1
  26+ 88E8 01
  27+ 88E9 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88EA 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88EE 01
  29+ 88EF 04 01 01 01  	db 4,1,1,1,1
  29+ 88F3 01
  30+ 88F4 04 01 01 01  	db 4,1,1,1,1
  30+ 88F8 01
  31+ 88F9 02 03        	db 2,3
  32+ 88FB 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88FC 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 8900 01
  34+ 8901 05 01 01 01  	db 5,1,1,1,1
  34+ 8905 01
  35+ 8906 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 890A 01
  36+ 890B 05 01 01 01  	db 5,1,1,1,1
  36+ 890F 01
  37+ 8910
  38+ 8910              ;---------------------------------------------------------------------------------------------------------------
  39+ 8910              ;
  40+ 8910              ;   21/5/23
  41+ 8910              ;
  42+ 8910              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8910              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8910              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8910              ;	_en la caja DRAW correspondiente.
  46+ 8910              ;
  47+ 8910              ;	MODIFICA: HL,DE y A.
  48+ 8910              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8910
  50+ 8910              Inicializa_Punteros_de_nivel
  51+ 8910
  52+ 8910 21 BC 88     	ld hl,Indice_de_niveles
  53+ 8913 22 3C 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 8916 CD 2E 8D     	call Extrae_address
  55+ 8919 7E           	ld a,(hl)
  56+ 891A 32 11 8A     	ld (Numero_de_entidades),a
  57+ 891D 23           	inc hl
  58+ 891E 22 3E 8A     	ld (Datos_de_nivel),hl
  59+ 8921 C9           	ret
  60+ 8922
  61+ 8922              ;---------------------------------------------------------------------------------------------------------------
  62+ 8922              ;
  63+ 8922              ;   13/5/23
  64+ 8922              ;
  65+ 8922              ;	Destruye A,BC,HL,DE
  66+ 8922
  67+ 8922              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 8922              ;	_del juego.
  69+ 8922
  70+ 8922              Prepara_cajas
  71+ 8922
  72+ 8922              ; Preparamos los punteros de las cajas.
  73+ 8922
  74+ 8922 21 74 85     	ld hl,Indice_de_cajas
  75+ 8925 CD 2E 8D     	call Extrae_address
  76+ 8928 CD 65 89     	call Avanza_caja
  77+ 892B
  78+ 892B CD A9 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 892E
  80+ 892E 2A 3E 8A     	ld hl,(Datos_de_nivel)
  81+ 8931
  82+ 8931              ; HL está en los datos del nivel correspondiente.
  83+ 8931              ; B actuará como contador de cajas.
  84+ 8931
  85+ 8931 C5           1 push bc
  86+ 8932
  87+ 8932 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 8933 CD 56 89     	call PreparaBC
  89+ 8936
  90+ 8936 21 62 88     	ld hl,Indice_de_entidades
  91+ 8939 CD 5E 89     	call SBC_HL_con_BC_y_Extrae
  92+ 893C 22 17 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 893F
  94+ 893F CD 6F 89     	call Datos_de_entidad_a_caja
  95+ 8942
  96+ 8942 2A 0F 8A     	ld hl,(Indice_restore_caja)
  97+ 8945 CD 2E 8D     	call Extrae_address
  98+ 8948 CD 65 89     	call Avanza_caja
  99+ 894B
 100+ 894B 2A 3E 8A     	ld hl,(Datos_de_nivel)
 101+ 894E 23           	inc hl
 102+ 894F 22 3E 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 8952
 104+ 8952 C1           	pop bc
 105+ 8953 10 DC        	djnz 1B
 106+ 8955 C9           	ret
 107+ 8956
 108+ 8956 CB 27        PreparaBC sla a
 109+ 8958 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 895A 4F           	ld c,a
 111+ 895B 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 895D C9           	ret
 113+ 895E
 114+ 895E A7           SBC_HL_con_BC_y_Extrae and a
 115+ 895F ED 4A        	adc hl,bc
 116+ 8961 CD 2E 8D     	call Extrae_address
 117+ 8964 C9           	ret
 118+ 8965
 119+ 8965 22 0B 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8968 13           	inc de
 121+ 8969 13           	inc de
 122+ 896A EB           	ex de,hl
 123+ 896B 22 0F 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 896E C9           	ret
 125+ 896F
 126+ 896F              Datos_de_entidad_a_caja
 127+ 896F
 128+ 896F              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 896F
 130+ 896F
 131+ 896F ED 5B 0B 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 8973
 133+ 8973 01 02 00     	ld bc,2
 134+ 8976 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8978
 136+ 8978 01 07 00     	ld bc,7
 137+ 897B CD A3 89     	call Situa_DE
 138+ 897E
 139+ 897E 01 05 00     	ld bc,5
 140+ 8981 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 8983
 142+ 8983 01 04 00     	ld bc,4
 143+ 8986 CD A3 89     	call Situa_DE
 144+ 8989
 145+ 8989 01 07 00     	ld bc,7
 146+ 898C ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 898E
 148+ 898E 01 18 00     	ld bc,24
 149+ 8991 CD A3 89     	call Situa_DE
 150+ 8994
 151+ 8994 01 02 00     	ld bc,2
 152+ 8997 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8999
 154+ 8999              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8999              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8999
 157+ 8999 01 0E 00     	ld bc,14									; *****
 158+ 899C CD A3 89     	call Situa_DE
 159+ 899F
 160+ 899F 3E 03        	ld a,3
 161+ 89A1 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 89A2
 163+ 89A2 C9           	ret
 164+ 89A3
 165+ 89A3 EB           Situa_DE ex de,hl
 166+ 89A4 A7           	and a
 167+ 89A5 ED 4A        	adc hl,bc
 168+ 89A7 EB           	ex de,hl
 169+ 89A8 C9           	ret
 170+ 89A9
 171+ 89A9              ;---------------------------------------------------------------------------------------------------------------
 172+ 89A9              ;
 173+ 89A9              ;	21/5/23
 174+ 89A9              ;
 175+ 89A9              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89A9              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89A9              ;
 178+ 89A9              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89A9              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89A9              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89A9              ;
 182+ 89A9              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89A9              ;	MODIFICA: A y B.
 184+ 89A9              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89A9
 186+ 89A9              Admin_num_entidades
 187+ 89A9
 188+ 89A9              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89A9
 190+ 89A9 3A 11 8A     	ld a,(Numero_de_entidades)
 191+ 89AC A7           	and a
 192+ 89AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89AD              ;	jr z,$
 194+ 89AD              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89AD
 196+ 89AD 20 03        	jr nz,3F
 197+ 89AF
 198+ 89AF              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89AF
 200+ 89AF CD 10 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89B2
 202+ 89B2
 203+ 89B2 3A 11 8A     3 ld a,(Numero_de_entidades)
 204+ 89B5 FE 0A        	cp 10
 205+ 89B7 38 08        	jr c,1F
 206+ 89B9
 207+ 89B9              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89B9              ; Actualizamos variables.
 209+ 89B9
 210+ 89B9 3E 0A        	ld a,10
 211+ 89BB 32 12 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89BE 47           	ld b,a
 213+ 89BF 18 04        	jr 2F
 214+ 89C1
 215+ 89C1              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89C1              ; (Numero_de_entidades)="0".
 217+ 89C1
 218+ 89C1 32 12 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89C4 47           	ld b,a
 220+ 89C5 C9           2 ret
# file closed: Niveles.asm
  29  89C6
  30  89C6              ; ******************************************************************************************************************************************************************************************
  31  89C6              ; Constantes.
  32  89C6              ; ******************************************************************************************************************************************************************************************
  33  89C6              ;
  34  89C6              ; 25/05/23
  35  89C6              ;
  36  89C6              ; Constantes generales.
  37  89C6              ;
  38  89C6
  39  89C6              Sprite_vacio equ $f000
  40  89C6              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  41  89C6              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  42  89C6              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  43  89C6              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  44  89C6
  45  89C6              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  46  89C6              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  47  89C6              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  48  89C6              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  49  89C6              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  50  89C6              ;                               				        ; De momento situamos este almacén en $7060.
  51  89C6
  52  89C6              ; ******************************************************************************************************************************************************************************************
  53  89C6              ; Variables.
  54  89C6              ; ******************************************************************************************************************************************************************************************
  55  89C6              ;
  56  89C6              ; 01/07/23
  57  89C6              ;
  58  89C6              ; Variables de DRAW. (Motor principal).
  59  89C6              ;
  60  89C6              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  61  89C6
  62  89C6 00           Filas db 0												; Filas. [DRAW]
  63  89C7 00           Columns db 0  											; Nº de columnas. [DRAW]
  64  89C8 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  65  89CA 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  66  89CC 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  67  89CD 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  68  89CE
  69  89CE              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  70  89CE
  71  89CE 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  72  89CF              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  73  89CF              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  74  89CF 00           Attr db 0												; Atributos de la entidad:
  75  89D0
  76  89D0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  77  89D0              ;
  78  89D0              ;	COLORES: 0 ..... NEGRO
  79  89D0              ;    		 1 ..... AZUL
  80  89D0              ; 			 2 ..... ROJO
  81  89D0              ;			 3 ..... MAGENTA
  82  89D0              ; 			 4 ..... VERDE
  83  89D0              ; 			 5 ..... CIAN
  84  89D0              ;			 6 ..... AMARILLO
  85  89D0              ; 			 7 ..... BLANCO
  86  89D0
  87  89D0 00 00        Indice_Sprite_der defw 0
  88  89D2 00 00        Indice_Sprite_izq defw 0
  89  89D4 00 00        Puntero_DESPLZ_der defw 0
  90  89D6 00 00        Puntero_DESPLZ_izq defw 0
  91  89D8
  92  89D8 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  93  89DA 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  94  89DB
  95  89DB              ; Variables de objeto. (Características).
  96  89DB
  97  89DB 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  98  89DC 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  99  89DD 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 100  89DE 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 101  89DF
 102  89DF 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 103  89E0              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 104  89E0              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 105  89E0
 106  89E0 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 107  89E2 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  89E4 00 00        	defw 0
 109  89E6 00 00 00 00  	db 0,0,0,0
 110  89EA
 111  89EA 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 112  89EC 00 00        	defw 0
 113  89EE 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 114  89F0 00 00 00 00  	db 0,0,0,0
 115  89F4
 116  89F4              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 117  89F4
 118  89F4 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 119  89F5              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 120  89F5              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 121  89F5              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 122  89F5              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 123  89F5              ;
 124  89F5              ; 														DESCRIPCIÖN:
 125  89F5              ;
 126  89F5              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 127  89F5              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 128  89F5              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 129  89F5              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 130  89F5              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 131  89F5              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 132  89F5              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 133  89F5              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 134  89F5              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 135  89F5              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 136  89F5              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 137  89F5              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 138  89F5              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 139  89F5              ;
 140  89F5              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 141  89F5              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 142  89F5              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 143  89F5
 144  89F5 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 145  89F6
 146  89F6              ; Movimiento. ------------------------------------------------------------------------------------------------------
 147  89F6
 148  89F6 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 149  89F7 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 150  89F9 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 151  89FB 00 00        Puntero_indice_mov_bucle defw 0							;
 152  89FD              ;
 153  89FD              ;
 154  89FD 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 155  89FE              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 156  89FE              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 157  89FE 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 158  89FF              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 159  89FF 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 160  8A00 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 161  8A01 00           Cola_de_desplazamiento db 0								; Este byte indica:
 162  8A02              ;
 163  8A02              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 164  8A02              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 165  8A02              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 166  8A02              ;
 167  8A02              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 168  8A02              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 169  8A02              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 170  8A02              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 171  8A02              ;
 172  8A02              ;														;	"$ff" ..... Bucle infinito de repetición.
 173  8A02              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 174  8A02              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 175  8A02
 176  8A02
 177  8A02              ; Variables de funcionamiento. [DRAW].
 178  8A02
 179  8A02 00           Columnas db 0
 180  8A03 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 181  8A05              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 182  8A05 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 183  8A06
 184  8A06              ; variables de control general.
 185  8A06
 186  8A06 00           Ctrl_2 db 0
 187  8A07              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 188  8A07              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 189  8A07              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 190  8A07              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 191  8A07              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 192  8A07              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 193  8A07              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 194  8A07              ;
 195  8A07              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 196  8A07              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 197  8A07              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 198  8A07              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 199  8A07              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 200  8A07
 201  8A07 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 202  8A08
 203  8A08              ;! 66 Bytes por entidad.
 204  8A08
 205  8A08              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 206  8A08              ;					         		---------;      ;---------
 207  8A08
 208  8A08
 209  8A08              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 210  8A08
 211  8A08 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 212  8A09
 213  8A09              ;														DESCRIPCIÓN:
 214  8A09              ;
 215  8A09              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 216  8A09              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 217  8A09              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 218  8A09              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 219  8A09              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 220  8A09              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 221  8A09              ;														BIT 3, Recarga de nueva oleada.
 222  8A09              ;														BIT 4, Recarga de nueva oleada.
 223  8A09
 224  8A09 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 225  8A0B              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 226  8A0B              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 227  8A0B              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 228  8A0B
 229  8A0B
 230  8A0B
 231  8A0B              ; Gestión de ENTIDADES y CAJAS.
 232  8A0B
 233  8A0B 00 00        Puntero_store_caja defw 0
 234  8A0D 00 00        Puntero_restore_caja defw 0
 235  8A0F 00 00        Indice_restore_caja defw 0
 236  8A11 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 237  8A12 00           Numero_parcial_de_entidades db 0
 238  8A13 00           Entidades_en_curso db 0									; ..... ..... .....
 239  8A14 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 240  8A15              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 241  8A15              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 242  8A15              ;														; _ (Numero_de_malotes)="0".
 243  8A15 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 244  8A17 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 245  8A19              ;														; _ puntero (Indice_entidades).
 246  8A19
 247  8A19
 248  8A19              ;---------------------------------------------------------------------------------------------------------------
 249  8A19              ;
 250  8A19              ; Sirven para PINTAR.
 251  8A19
 252  8A19 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 253  8A1B              ;														; _variable para almacenar lo posición del puntero_
 254  8A1B              ; 														; _de pila, SP.
 255  8A1B 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 256  8A1D              ;														; La utiliza la rutina [Extrae_foto_registros].
 257  8A1D 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 258  8A1F              ;														; _el snapshot de los registros de la siguiente entidad.
 259  8A1F              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 260  8A1F 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 261  8A21              ;														; _el snapshot de los registros del siguiente disparo.
 262  8A21              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 263  8A21
 264  8A21              ;---------------------------------------------------------------------------------------------------------------
 265  8A21
 266  8A21              ; Gestión de Disparos.
 267  8A21
 268  8A21 00           Numero_de_disparotes db 0
 269  8A22 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 270  8A24 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 271  8A26 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 272  8A27              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 273  8A27              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 274  8A27 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 275  8A29              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 276  8A29              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 277  8A29              ;														; _produzca colisión.
 278  8A29 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 279  8A2B              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 280  8A2B 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 281  8A2E              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 282  8A2E 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 283  8A31              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 284  8A31              ;---------------------------------------------------------------------------------------------------------------
 285  8A31
 286  8A31              ; Relojes y temporizaciones.
 287  8A31
 288  8A31 00           Contador_de_frames db 0
 289  8A32 04           Clock_explosion db 4
 290  8A33 1E           Clock_Entidades_en_curso db 30
 291  8A34 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 292  8A35              ;														; Repite la oleada de entidades.
 293  8A35 01           Habilita_disparo_Amadeus db 1
 294  8A36 1E           Tiempo_disparo_Amadeus db 30							; Restaura (Temporiza_disparo_Amadeus).
 295  8A37 1E           Temporiza_disparo_Amadeus db 30 						; Reloj, decreciente.
 296  8A38
 297  8A38 01           Habilita_disparo_entidad db 1
 298  8A39 0F           Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
 299  8A3A FF           Temporiza_disparo_entidad db 255						; Reloj, decreciente.
 300  8A3B
 301  8A3B              ;---------------------------------------------------------------------------------------------------------------
 302  8A3B
 303  8A3B              ; Gestión de NIVELES.
 304  8A3B
 305  8A3B 00           Nivel db 0												; Nivel actual del juego.
 306  8A3C 00 00        Puntero_indice_NIVELES defw 0
 307  8A3E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 308  8A40              ; 														; _ que definen el NIVEL.
 309  8A40              ; Y todo comienza aquí .....
 310  8A40              ;
 311  8A40              ; Rutina principal *************************************************************************************************************************************************************************
 312  8A40              ;
 313  8A40              ;	14/11/22
 314  8A40
 315  8A40              START
 316  8A40
 317  8A40 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 318  8A43 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 319  8A45 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 320  8A47 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 321  8A49 F3           	DI
 322  8A4A
 323  8A4A 3E 07        	ld a,%00000111
 324  8A4C CD EA 98     	call Cls
 325  8A4F
 326  8A4F              ;	call Pinta_marco
 327  8A4F
 328  8A4F CD 10 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 329  8A52
 330  8A52 CD 07 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 331  8A55
 332  8A55 CD 22 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 333  8A58
 334  8A58 CD DA 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 335  8A5B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 336  8A5B CD B7 8D     	call Restore_entidad
 337  8A5E
 338  8A5E 21 12 8A     	ld hl,Numero_parcial_de_entidades
 339  8A61 46           	ld b,(hl)
 340  8A62 04           	inc b
 341  8A63 05           	dec b
 342  8A64 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 343  8A66
 344  8A66              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 345  8A66              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 346  8A66              ;	Pintamos el resto de entidades:
 347  8A66
 348  8A66              ;	INICIA ENTIDADES !!!!!
 349  8A66
 350  8A66 C5           1 push bc  												; Guardo el contador de entidades.
 351  8A67
 352  8A67 CD D1 8A     	call Inicia_entidad
 353  8A6A
 354  8A6A C1           	pop bc
 355  8A6B 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 356  8A6D
 357  8A6D              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 358  8A6D              ; (Esto se dá cuando se inicia una nueva oleada).
 359  8A6D
 360  8A6D 3A 08 8A     	ld a,(Ctrl_1)
 361  8A70 CB 5F        	bit 3,a
 362  8A72 20 18        	jr nz,5F											; Loop
 363  8A74
 364  8A74              ; 	INICIA AMADEUS !!!!!
 365  8A74
 366  8A74 CD DE 8D     3 call Restore_Amadeus
 367  8A77 CD 34 8D     	call Inicia_Puntero_objeto
 368  8A7A CD 3A 93     	call Draw
 369  8A7D CD A0 7F     	call Guarda_foto_registros
 370  8A80 11 8C 85     	ld de,Amadeus_db
 371  8A83 CD F0 8D     	call Store_Amadeus
 372  8A86
 373  8A86              ; 	INICIA DISPAROS !!!!!
 374  8A86
 375  8A86 CD F0 8C     	call Inicia_Puntero_Disparo_Entidades
 376  8A89 CD F7 8C     	call Inicia_Puntero_Disparo_Amadeus
 377  8A8C
 378  8A8C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 379  8A8C
 380  8A8C CD DA 8C     5 call Inicia_punteros_de_cajas
 381  8A8F CD B7 8D     	call Restore_entidad
 382  8A92
 383  8A92 3A 08 8A     	ld a,(Ctrl_1)
 384  8A95 CB 5F        	bit 3,a
 385  8A97 28 0A        	jr z,6F
 386  8A99
 387  8A99              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 388  8A99
 389  8A99 21 08 8A     	ld hl,Ctrl_1
 390  8A9C CB 9E        	res 3,(hl)
 391  8A9E CD FE 8C     	call Calcula_numero_de_malotes
 392  8AA1 18 07        	jr 7F
 393  8AA3
 394  8AA3              ; ----------
 395  8AA3
 396  8AA3 3A 12 8A     6 ld a,(Numero_parcial_de_entidades)
 397  8AA6 3C           	inc a
 398  8AA7 32 14 8A     	ld (Numero_de_malotes),a
 399  8AAA
 400  8AAA AF           7 xor a
 401  8AAB FB           2 ei
 402  8AAC 28 FD        	jr z,2B
 403  8AAE
 404  8AAE 3A 31 8A     	ld a,(Contador_de_frames)
 405  8AB1 47           	ld b,a
 406  8AB2 3A 34 8A     	ld a,(Activa_recarga_cajas)
 407  8AB5 B8           	cp b
 408  8AB6 28 08        	jr z,8F
 409  8AB8
 410  8AB8 21 08 8A     	ld hl,Ctrl_1
 411  8ABB CB E6        	set 4,(hl)
 412  8ABD AF           	xor a
 413  8ABE 18 EB        	jr 2B
 414  8AC0
 415  8AC0 21 08 8A     8 ld hl,Ctrl_1
 416  8AC3 CB A6        	res 4,(hl)
 417  8AC5 F3           	di
 418  8AC6
 419  8AC6 3A 31 8A     	ld a,(Contador_de_frames)
 420  8AC9
 421  8AC9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 422  8AC9              ;! _ IMPREDECIBLE !!!!
 423  8AC9
 424  8AC9 C6 0A        	add 10
 425  8ACB 32 33 8A     	ld (Clock_Entidades_en_curso),a
 426  8ACE
 427  8ACE C3 55 8A     	jp 4B
 428  8AD1
 429  8AD1              ; -----------------------------------------------------------------------------------
 430  8AD1
 431  8AD1 CD 34 8D     Inicia_entidad	call Inicia_Puntero_objeto
 432  8AD4 CD FE 98     	call Recompone_posicion_inicio
 433  8AD7 CD 3A 93     	call Draw
 434  8ADA CD A0 7F     	call Guarda_foto_registros
 435  8ADD CD 7C 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 436  8AE0 C9           	ret
 437  8AE1
 438  8AE1              ; -----------------------------------------------------------------------------------
 439  8AE1
 440  8AE1              Frame
 441  8AE1
 442  8AE1              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 443  8AE1              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 444  8AE1
 445  8AE1              ; PINTAMOS.
 446  8AE1
 447  8AE1 3E 02            ld a,2
 448  8AE3 D3 FE            out ($fe),a
 449  8AE5 CD 3E 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 450  8AE8 CD 77 96     	call Extrae_foto_disparos
 451  8AEB 3E 01            ld a,1
 452  8AED D3 FE            out ($fe),a
 453  8AEF
 454  8AEF              ; ----------------------------------------------------------------------
 455  8AEF
 456  8AEF              ; RELOJES.
 457  8AEF
 458  8AEF 21 31 8A     	ld hl,Contador_de_frames
 459  8AF2 34           	inc (hl)											; 0 - 255
 460  8AF3
 461  8AF3 3A 33 8A     	ld a,(Clock_Entidades_en_curso)
 462  8AF6 47           	ld b,a
 463  8AF7 3A 31 8A     	ld a,(Contador_de_frames)
 464  8AFA B8           	cp b
 465  8AFB 20 18        	jr nz,13F
 466  8AFD
 467  8AFD 3A 12 8A     	ld a,(Numero_parcial_de_entidades)
 468  8B00 47           	ld b,a
 469  8B01 3A 13 8A     	ld a,(Entidades_en_curso)
 470  8B04 B8           	cp b
 471  8B05 28 0E        	jr z,13F
 472  8B07 30 0C        	jr nc,13F
 473  8B09
 474  8B09 3C           	inc a
 475  8B0A 32 13 8A     	ld (Entidades_en_curso),a
 476  8B0D
 477  8B0D 3A 33 8A     	ld a,(Clock_Entidades_en_curso)
 478  8B10
 479  8B10              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 480  8B10              ;! _ IMPREDECIBLE !!!!
 481  8B10
 482  8B10 C6 64        	add 100
 483  8B12 32 33 8A     	ld (Clock_Entidades_en_curso),a
 484  8B15
 485  8B15              ; Habilita disparos.
 486  8B15
 487  8B15 21 35 8A     13 ld hl,Habilita_disparo_Amadeus
 488  8B18 11 37 8A     	ld de,Temporiza_disparo_Amadeus
 489  8B1B CD 10 9F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 490  8B1E
 491  8B1E 21 38 8A     	ld hl,Habilita_disparo_entidad 						; El nº de frames mínimo entre disparos de entidad será_
 492  8B21 11 3A 8A     	ld de,Temporiza_disparo_entidad 					; _ variable y variará en función de la dificultad.
 493  8B24 CD 10 9F     	call Habilita_disparos
 494  8B27
 495  8B27              ; COLISIONES.
 496  8B27
 497  8B27 CD 1C 92     	call Selector_de_impactos
 498  8B2A
 499  8B2A              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 500  8B2A              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 501  8B2A              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 502  8B2A
 503  8B2A AF           	xor a
 504  8B2B 32 26 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 505  8B2E
 506  8B2E CD DA 8C     	call Inicia_punteros_de_cajas
 507  8B31 CD B7 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 508  8B34              ; 														; _ en DRAW.
 509  8B34 3A C6 89     	ld a,(Filas)
 510  8B37 A7           	and a
 511  8B38 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 512  8B3A CD C9 8D     	call Incrementa_punteros_de_cajas
 513  8B3D 18 F2        	jr 12B
 514  8B3F
 515  8B3F              ; ---------------------------------------------------------------------------------------
 516  8B3F
 517  8B3F CD 97 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 518  8B42 21 00 70     	ld hl,Album_de_fotos
 519  8B45 22 1D 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 520  8B48              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 521  8B48 3A 12 8A     	ld a,(Numero_parcial_de_entidades)
 522  8B4B 47               ld b,a
 523  8B4C A7           	and a
 524  8B4D 20 14        	jr nz,2F
 525  8B4F
 526  8B4F 21 08 8A     	ld hl,Ctrl_1
 527  8B52 CB 66        	bit 4,(hl)
 528  8B54 C2 E0 8B     	jp nz,4F
 529  8B57
 530  8B57 21 08 8A     	ld hl,Ctrl_1
 531  8B5A CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 532  8B5C
 533  8B5C 3A 31 8A     	ld a,(Contador_de_frames)
 534  8B5F 3C           	inc a
 535  8B60 32 34 8A     	ld (Activa_recarga_cajas),a
 536  8B63
 537  8B63              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 538  8B63
 539  8B63 3A 13 8A     2 ld a,(Entidades_en_curso)
 540  8B66 A7           	and a
 541  8B67 CA E0 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 542  8B6A 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 543  8B6B
 544  8B6B              ; Código que ejecutamos con cada entidad:
 545  8B6B              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 546  8B6B
 547  8B6B C5           15 push bc 												; Nº de entidades en curso.
 548  8B6C
 549  8B6C              ; Impacto ???
 550  8B6C
 551  8B6C 3A DF 89     33 ld a,(Impacto)
 552  8B6F A7           	and a
 553  8B70 28 2D        	jr z,8F
 554  8B72
 555  8B72              ; Hay Impacto en esta entidad.
 556  8B72
 557  8B72 21 32 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 558  8B75 35           	dec (hl)
 559  8B76 20 62        	jr nz,6F
 560  8B78
 561  8B78              ;! Velocidad de la animación de la explosión.
 562  8B78
 563  8B78 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 564  8B7A              ;														; _,(velocidad de la explosión).
 565  8B7A CD 91 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 566  8B7D
 567  8B7D              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 568  8B7D
 569  8B7D 3A 06 8A     	ld a,(Ctrl_2)
 570  8B80 CB 4F        	bit 1,a
 571  8B82 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 572  8B84
 573  8B84              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 574  8B84
 575  8B84 3A CE 89     	ld a,(CTRL_DESPLZ)
 576  8B87 A7           	and a
 577  8B88 20 08        	jr nz,21F
 578  8B8A
 579  8B8A 21 8C 84     	ld hl,Indice_Explosion_2x2-2
 580  8B8D 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 581  8B90 18 06        	jr 22F
 582  8B92
 583  8B92 21 F6 83     21 ld hl,Indice_Explosion_2x3-2
 584  8B95 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 585  8B98
 586  8B98 21 06 8A     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 587  8B9B CB CE        	set 1,(hl)
 588  8B9D 18 22        	jr 7F
 589  8B9F
 590  8B9F              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 591  8B9F              ; _con las coordenadas de la entidad almacenada en DRAW.
 592  8B9F
 593  8B9F 3A 08 8A     8 ld a,(Ctrl_1)
 594  8BA2 CB 57        	bit 2,a
 595  8BA4 28 1B        	jr z,7F
 596  8BA6
 597  8BA6 2A 29 8A     	ld hl,(Coordenadas_disparo_certero)
 598  8BA9 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 599  8BAA              ;														; E contiene la coordenada_X del disparo.
 600  8BAA 2A CC 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 601  8BAD              ;														; H FILA, (Coordenada_y de la entidad).
 602  8BAD A7           	and a
 603  8BAE ED 52        	sbc hl,de
 604  8BB0
 605  8BB0 CD 53 92     	call Determina_resultado_comparativa
 606  8BB3
 607  8BB3              ;! Debug colisiones
 608  8BB3 78           	ld a,b
 609  8BB4 A7           	and a
 610  8BB5              ;	ld a,(Cuad_objeto)
 611  8BB5              ;	inc b
 612  8BB5              ;	dec b
 613  8BB5 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 614  8BB7              ;	jr z,$
 615  8BB7
 616  8BB7              ;! Debug colisiones
 617  8BB7
 618  8BB7              ; ----- ----- -----
 619  8BB7
 620  8BB7 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 621  8BB9 32 DF 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 622  8BBC
 623  8BBC 21 08 8A     	ld hl,Ctrl_1
 624  8BBF CB 96        	res 2,(hl)
 625  8BC1
 626  8BC1 CD 13 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 627  8BC4
 628  8BC4 3A F4 89     	ld a,(Ctrl_0)
 629  8BC7 CB 67        	bit 4,a
 630  8BC9 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 631  8BCB
 632  8BCB              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 633  8BCB              ; [[[
 634  8BCB CD 52 8E     	call Detecta_disparo_entidad
 635  8BCE              ; ]]]
 636  8BCE CD A1 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 637  8BD1
 638  8BD1 21 F4 89     	ld hl,Ctrl_0
 639  8BD4 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 640  8BD6 AF           	xor a
 641  8BD7 32 F5 89     	ld (Obj_dibujado),a
 642  8BDA
 643  8BDA
 644  8BDA
 645  8BDA CD 7C 8D     6 call Store_Restore_cajas
 646  8BDD
 647  8BDD C1           	pop bc
 648  8BDE 10 8B        	djnz 15B
 649  8BE0
 650  8BE0              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 651  8BE0
 652  8BE0              ;	ld a,2
 653  8BE0              ;	ld (Limitador_de_entidades_x_frame),a
 654  8BE0
 655  8BE0              ; ------------------------------------
 656  8BE0              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 657  8BE0              ; Hemos gestionado todas las unidades.
 658  8BE0              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 659  8BE0
 660  8BE0              ;	ld hl,Ctrl_1
 661  8BE0              ;	res 2,(hl)
 662  8BE0
 663  8BE0              ; ------------------------------------
 664  8BE0
 665  8BE0              ; Tras la gestión de las entidades, ... AMADEUS.
 666  8BE0
 667  8BE0 CD DE 8D     4 call Restore_Amadeus
 668  8BE3
 669  8BE3 3A DF 89     	ld a,(Impacto)
 670  8BE6 A7           	and a
 671  8BE7 20 FE        	jr nz,$
 672  8BE9
 673  8BE9 CD 72 8C     	call Mov_Amadeus
 674  8BEC
 675  8BEC 3A F4 89     	ld a,(Ctrl_0)
 676  8BEF CB 67        	bit 4,a
 677  8BF1 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 678  8BF3
 679  8BF3 CD A1 8C     	call Guarda_foto_entidad_a_pintar
 680  8BF6
 681  8BF6 21 F4 89     3 ld hl,Ctrl_0
 682  8BF9 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 683  8BFB AF           	xor a
 684  8BFC 32 F5 89     	ld (Obj_dibujado),a
 685  8BFF
 686  8BFF 11 8C 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 687  8C02 CD F0 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 688  8C05
 689  8C05 CD B5 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 690  8C08
 691  8C08              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 692  8C08
 693  8C08 CD 16 8D     	call Calcula_numero_de_disparotes
 694  8C0B CD FE 8C     9 call Calcula_numero_de_malotes
 695  8C0E
 696  8C0E 3E 04        	ld a,4
 697  8C10 D3 FE        	out ($fe),a
 698  8C12
 699  8C12 C9           	ret
 700  8C13
 701  8C13              ; --------------------------------------------------------------------------------------------------------------
 702  8C13              ;
 703  8C13              ;	27/05/23
 704  8C13
 705  8C13              Mov_obj
 706  8C13
 707  8C13              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 708  8C13
 709  8C13 3A 06 8A     	ld a,(Ctrl_2)
 710  8C16 CB 4F        	bit 1,a
 711  8C18 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 712  8C1A
 713  8C1A              ; Explosión:
 714  8C1A
 715  8C1A 3A 07 8A     	ld a,(Frames_explosion)
 716  8C1D A7           	and a
 717  8C1E 20 11        	jr nz,4F
 718  8C20
 719  8C20              ; Una alimaña menos!!!!!!!!!1
 720  8C20
 721  8C20 CD F9 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 722  8C23 21 12 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 723  8C26 35           	dec (hl)
 724  8C27 21 13 8A     	ld hl,Entidades_en_curso
 725  8C2A 35           	dec (hl)
 726  8C2B 21 11 8A     	ld hl,Numero_de_entidades
 727  8C2E 35           	dec (hl)
 728  8C2F 18 40        	jr 3F
 729  8C31
 730  8C31              ; -----
 731  8C31
 732  8C31              ;	`Movemos´ la explosión.
 733  8C31
 734  8C31 2A D4 89     4 ld hl,(Puntero_DESPLZ_der)
 735  8C34 23           	inc hl
 736  8C35 23           	inc hl
 737  8C36 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 738  8C39 CD 2E 8D     	call Extrae_address
 739  8C3C 22 CA 89     	ld (Puntero_objeto),hl
 740  8C3F
 741  8C3F 21 07 8A     	ld hl,Frames_explosion
 742  8C42 35           	dec (hl)
 743  8C43
 744  8C43 CD 91 8C     	call Guarda_foto_entidad_a_borrar
 745  8C46 18 29        	jr 3F
 746  8C48
 747  8C48 AF           2 xor a
 748  8C49 32 F5 89     	ld (Obj_dibujado),a
 749  8C4C 32 F4 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 750  8C4F              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 751  8C4F              ; 														; _de la entidad.
 752  8C4F CD AB 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 753  8C52              ;														; Obj_dibujado="0".
 754  8C52              ; Movemos Entidades malignas.
 755  8C52
 756  8C52              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 757  8C52              ;	and a 												; _a movernos. (Limitador_de_entidades).
 758  8C52              ;	ret z
 759  8C52
 760  8C52 CD BE 9D     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 761  8C55
 762  8C55 3A F4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 763  8C58 CB 67        	bit 4,a
 764  8C5A C8           	ret z
 765  8C5B
 766  8C5B              ; Ha habido desplazamiento de la entidad maligna.
 767  8C5B              ; Ha llegado a zona de AMADEUS ???
 768  8C5B
 769  8C5B 3A CD 89     	ld a,(Coordenada_y)
 770  8C5E FE 14        	cp $14
 771  8C60 D4 E6 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 772  8C63              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 773  8C63              ; ---------
 774  8C63
 775  8C63 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 776  8C65 32 F5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 777  8C68 CD AB 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 778  8C6B CD C2 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 779  8C6E CD 91 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 780  8C71 C9           3 ret													; _de la misma.
 781  8C72
 782  8C72              ; --------------------------------------------------------------------------------------------------------------
 783  8C72              ;
 784  8C72              ;	29/1/23
 785  8C72
 786  8C72              Mov_Amadeus
 787  8C72
 788  8C72 AF           	xor a
 789  8C73 32 F5 89     	ld (Obj_dibujado),a
 790  8C76 CD AB 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 791  8C79              ;														; Obj_dibujado="0".
 792  8C79              ; Movemos Amadeus.
 793  8C79
 794  8C79 CD 1B 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 795  8C7C 3A F4 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 796  8C7F CB 67        	bit 4,a
 797  8C81 C8           	ret z
 798  8C82
 799  8C82              ; ---------
 800  8C82
 801  8C82 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 802  8C84 32 F5 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 803  8C87 CD AB 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 804  8C8A CD C2 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 805  8C8D CD 91 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 806  8C90 C9           	ret													; _de la nave.
 807  8C91
 808  8C91              ; --------------------------------------------------------------------------------------------------------------
 809  8C91              ;
 810  8C91              ;	31/01/23
 811  8C91              ;
 812  8C91              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 813  8C91
 814  8C91              Guarda_foto_entidad_a_borrar
 815  8C91
 816  8C91 CD 14 96     	call Prepara_draw
 817  8C94 CD 4E 95     	call calcula_CColumnass
 818  8C97 CD 85 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 819  8C9A CD DA 95     	call Define_rutina_de_impresion
 820  8C9D CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 821  8CA0 C9           	ret
 822  8CA1
 823  8CA1              ; --------------------------------------------------------------------------------------------------------------
 824  8CA1              ;
 825  8CA1              ;	31/01/23
 826  8CA1              ;
 827  8CA1              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 828  8CA1              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 829  8CA1
 830  8CA1              Guarda_foto_entidad_a_pintar
 831  8CA1
 832  8CA1 CD CE 8C     	call Repone_pintar
 833  8CA4 CD 3A 93     	call Draw
 834  8CA7 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 835  8CAA C9           	ret
 836  8CAB
 837  8CAB              ; --------------------------------------------------------------------------------------------------------------
 838  8CAB              ;
 839  8CAB              ;
 840  8CAB
 841  8CAB 21 C6 89     Prepara_var_pintado_borrado	ld hl,Filas
 842  8CAE 3A F5 89     	ld a,(Obj_dibujado)
 843  8CB1 A7           	and a
 844  8CB2 28 05        	jr z,1F
 845  8CB4 11 EA 89     	ld de,Variables_de_pintado
 846  8CB7 18 03        	jr 2F
 847  8CB9 11 E0 89     1 ld de,Variables_de_borrado
 848  8CBC 01 08 00     2 ld bc,8
 849  8CBF ED B0        	ldir
 850  8CC1 C9           	ret
 851  8CC2
 852  8CC2              ; --------------------------------------------------------------------------------------------------------------
 853  8CC2
 854  8CC2 21 E0 89     Repone_borrar ld hl,Variables_de_borrado
 855  8CC5 11 C6 89     	ld de,Filas
 856  8CC8 01 08 00     	ld bc,8
 857  8CCB ED B0        	ldir
 858  8CCD C9           	ret
 859  8CCE
 860  8CCE 21 EA 89     Repone_pintar ld hl,Variables_de_pintado
 861  8CD1 11 C6 89     	ld de,Filas
 862  8CD4 01 08 00     	ld bc,8
 863  8CD7 ED B0        	ldir
 864  8CD9 C9           	ret
 865  8CDA
 866  8CDA              ; *************************************************************************************************************************************************************
 867  8CDA              ;
 868  8CDA              ; 8/1/23
 869  8CDA              ;
 870  8CDA              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 871  8CDA              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 872  8CDA              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 873  8CDA
 874  8CDA              ; Destruye HL y DE !!!!!
 875  8CDA
 876  8CDA              Inicia_punteros_de_cajas
 877  8CDA
 878  8CDA 21 74 85     	ld hl,Indice_de_cajas
 879  8CDD CD 2E 8D         call Extrae_address
 880  8CE0 22 0B 8A         ld (Puntero_store_caja),hl
 881  8CE3 21 76 85     	ld hl,Indice_de_cajas+2
 882  8CE6 22 0F 8A     	ld (Indice_restore_caja),hl
 883  8CE9 CD 2E 8D     	call Extrae_address
 884  8CEC 22 0D 8A     	ld (Puntero_restore_caja),hl
 885  8CEF C9               ret
 886  8CF0
 887  8CF0              ; *************************************************************************************************************************************************************
 888  8CF0              ;
 889  8CF0              ; 8/1/23
 890  8CF0              ;
 891  8CF0              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 892  8CF0
 893  8CF0 21 0C 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 894  8CF3 22 22 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 895  8CF6 C9           	ret
 896  8CF7 21 F4 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 897  8CFA 22 24 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 898  8CFD C9           	ret
 899  8CFE
 900  8CFE              ; -------------------------------------------------------------------------------------------------------------
 901  8CFE              ;
 902  8CFE              ; 28/2/23
 903  8CFE              ;
 904  8CFE
 905  8CFE              Calcula_numero_de_malotes
 906  8CFE
 907  8CFE 21 00 70     	ld hl,Album_de_fotos
 908  8D01 EB           	ex de,hl
 909  8D02 2A 1D 8A     	ld hl,(Stack_snapshot)
 910  8D05
 911  8D05 06 00        	ld b,0
 912  8D07 7D           	ld a,l
 913  8D08 93           	sub e
 914  8D09 28 07        	jr z,1F
 915  8D0B
 916  8D0B              ; Nº de malotes no es "0".
 917  8D0B
 918  8D0B D6 06        2 sub 6
 919  8D0D 04           	inc b
 920  8D0E A7           	and a
 921  8D0F 20 FA        	jr nz,2B
 922  8D11 78           	ld a,b
 923  8D12
 924  8D12 32 14 8A     1 ld (Numero_de_malotes),a
 925  8D15 C9           	ret
 926  8D16
 927  8D16              ; -------------------------------------------------------------------------------------------------------------
 928  8D16              ;
 929  8D16              ; 28/2/23
 930  8D16              ;
 931  8D16
 932  8D16              Calcula_numero_de_disparotes
 933  8D16
 934  8D16 21 85 70     	ld hl,Album_de_fotos_disparos
 935  8D19 EB           	ex de,hl
 936  8D1A 2A 1F 8A     	ld hl,(Stack_snapshot_disparos)
 937  8D1D
 938  8D1D 06 00        	ld b,0
 939  8D1F 7D           	ld a,l
 940  8D20 93           	sub e
 941  8D21 28 07        	jr z,1F
 942  8D23
 943  8D23              ; Nº de malotes no es "0".
 944  8D23
 945  8D23 D6 06        2 sub 6
 946  8D25 04           	inc b
 947  8D26 A7           	and a
 948  8D27 20 FA        	jr nz,2B
 949  8D29 78           	ld a,b
 950  8D2A
 951  8D2A 32 21 8A     1 ld (Numero_de_disparotes),a
 952  8D2D C9           	ret
 953  8D2E              ; *************************************************************************************************************************************************************
 954  8D2E              ;
 955  8D2E              ; 20/10/22
 956  8D2E              ;
 957  8D2E              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 958  8D2E              ;
 959  8D2E              ; Destruye el puntero y DE !!!!!
 960  8D2E
 961  8D2E 5E           Extrae_address ld e,(hl)
 962  8D2F 23           	inc hl
 963  8D30 56           	ld d,(hl)
 964  8D31 2B           	dec hl
 965  8D32 EB           	ex de,hl
 966  8D33 C9           	ret
 967  8D34
 968  8D34              ; *************************************************************************************************************************************************************
 969  8D34              ;
 970  8D34              ;	7/2/23
 971  8D34              ;
 972  8D34              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 973  8D34              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 974  8D34              ;
 975  8D34              ;   Destruye HL y BC !!!!!,
 976  8D34              ;
 977  8D34              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 978  8D34              ;					"0" ..... Izquierda.
 979  8D34
 980  8D34              Inicia_Puntero_objeto
 981  8D34
 982  8D34 3A DA 89     	ld a,(Cuad_objeto)
 983  8D37 E6 01        	and 1
 984  8D39 F5           	push af
 985  8D3A CC 58 8D     	call z,Inicia_puntero_objeto_izq
 986  8D3D F1           	pop af
 987  8D3E 28 2B        	jr z,1F
 988  8D40 CD 45 8D     	call Inicia_puntero_objeto_der
 989  8D43 18 26        	jr 1F
 990  8D45
 991  8D45              ; Arrancamos desde la parte izquierda de la pantalla.
 992  8D45              ; Iniciamos (Indice_Sprite_der).
 993  8D45
 994  8D45 2A D0 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 995  8D48 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 996  8D4B CD 2E 8D     	call Extrae_address
 997  8D4E 22 CA 89     	ld (Puntero_objeto),hl
 998  8D51
 999  8D51 2A D2 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1000  8D54 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
1001  8D57 C9           	ret
1002  8D58
1003  8D58              ; Arrancamos desde la parte derecha de la pantalla.
1004  8D58              ; Iniciamos (Indice_Sprite_izq).
1005  8D58
1006  8D58 2A D2 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1007  8D5B 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
1008  8D5E CD 2E 8D     	call Extrae_address
1009  8D61 22 CA 89     	ld (Puntero_objeto),hl
1010  8D64
1011  8D64 2A D0 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1012  8D67 22 D4 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1013  8D6A C9           	ret
1014  8D6B
1015  8D6B              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1016  8D6B
1017  8D6B 21 48 83     1 ld hl,Amadeus
1018  8D6E ED 4B CA 89  	ld bc,(Puntero_objeto)
1019  8D72 B7 ED 42     	sub hl,bc
1020  8D75 C0           	ret nz
1021  8D76 21 F4 89     	ld hl,Ctrl_0
1022  8D79 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1023  8D7B C9           	ret 												; _de nuestra nave en los extremos.
1024  8D7C
1025  8D7C              ; *************************************************************************************************************************************************************
1026  8D7C              ;
1027  8D7C              ;	14/5/23
1028  8D7C              ;
1029  8D7C              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1030  8D7C              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1031  8D7C
1032  8D7C              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1033  8D7C              ;	_de la 2ª y 3ª entidad respectivamente.
1034  8D7C
1035  8D7C              Store_Restore_cajas
1036  8D7C
1037  8D7C E5           	push hl
1038  8D7D D5           	push de
1039  8D7E C5            	push bc
1040  8D7F
1041  8D7F              ;	STORE !!!!!
1042  8D7F              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1043  8D7F
1044  8D7F 21 C6 89     	ld hl,Filas
1045  8D82 ED 5B 0B 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1046  8D86 01 42 00     	ld bc,66
1047  8D89 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1048  8D8B
1049  8D8B              ; 	Entidad_sospechosa. 20/4/23
1050  8D8B
1051  8D8B 3A DF 89     	ld a,(Impacto)
1052  8D8E A7           	and a
1053  8D8F 28 0C        	jr z,1F
1054  8D91
1055  8D91 2A 0B 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1056  8D94 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1057  8D97 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1058  8D98 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1059  8D9A 22 27 8A     	ld (Entidad_sospechosa_de_colision),hl
1060  8D9D
1061  8D9D              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1062  8D9D
1063  8D9D 2A 0D 8A     1 ld hl,(Puntero_restore_caja)
1064  8DA0 7E           	ld a,(hl)
1065  8DA1 A7           	and a
1066  8DA2 F5           	push af
1067  8DA3 28 08        	jr z,2F
1068  8DA5
1069  8DA5 11 C6 89     	ld de,Filas
1070  8DA8 01 42 00     	ld bc,66
1071  8DAB ED B0        	ldir
1072  8DAD
1073  8DAD CD C9 8D     2 call Incrementa_punteros_de_cajas
1074  8DB0 F1           	pop af
1075  8DB1 28 EA        	jr z,1B
1076  8DB3
1077  8DB3 C1           	pop bc
1078  8DB4 D1           	pop de
1079  8DB5 E1           	pop hl
1080  8DB6
1081  8DB6 C9           	ret
1082  8DB7
1083  8DB7              ; **************************************************************************************************
1084  8DB7              ;
1085  8DB7              ;	12/05/23
1086  8DB7              ;
1087  8DB7              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1088  8DB7
1089  8DB7 E5           Restore_entidad push hl
1090  8DB8 D5           	push de
1091  8DB9 C5            	push bc
1092  8DBA
1093  8DBA 2A 0B 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1094  8DBD 11 C6 89     	ld de,Filas
1095  8DC0 01 42 00     	ld bc,66
1096  8DC3 ED B0        	ldir
1097  8DC5
1098  8DC5 C1           	pop bc
1099  8DC6 D1           	pop de
1100  8DC7 E1           	pop hl
1101  8DC8 C9           	ret
1102  8DC9
1103  8DC9
1104  8DC9              ; **************************************************************************************************
1105  8DC9              ;
1106  8DC9              ;	08/05/23
1107  8DC9              ;
1108  8DC9              ;	Incrementamos los dos punteros de entidades. (+1).
1109  8DC9
1110  8DC9 2A 0D 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1111  8DCC 22 0B 8A     	ld (Puntero_store_caja),hl
1112  8DCF 2A 0F 8A     	ld hl,(Indice_restore_caja)
1113  8DD2 23           	inc hl
1114  8DD3 23           	inc hl
1115  8DD4 22 0F 8A     	ld (Indice_restore_caja),hl
1116  8DD7 CD 2E 8D         call Extrae_address
1117  8DDA 22 0D 8A         ld (Puntero_restore_caja),hl
1118  8DDD C9               ret
1119  8DDE
1120  8DDE              ; **************************************************************************************************
1121  8DDE              ;
1122  8DDE              ;	25/01/23
1123  8DDE              ;
1124  8DDE              ;	Restore_Amadeus
1125  8DDE              ;
1126  8DDE              ;	Cargamos en DRAW los parámetros de Amadeus.
1127  8DDE              ;
1128  8DDE
1129  8DDE E5           Restore_Amadeus	push hl
1130  8DDF D5           	push de
1131  8DE0 C5            	push bc
1132  8DE1 21 8C 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1133  8DE4 11 C6 89     	ld de,Filas
1134  8DE7 01 42 00     	ld bc,66
1135  8DEA ED B0        	ldir
1136  8DEC C1           	pop bc
1137  8DED D1           	pop de
1138  8DEE E1           	pop hl
1139  8DEF C9           	ret
1140  8DF0
1141  8DF0              ; *************************************************************************************************************************************************************
1142  8DF0              ;
1143  8DF0              ;	29/04/23
1144  8DF0              ;
1145  8DF0              ;	Store_Amadeus
1146  8DF0              ;
1147  8DF0              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1148  8DF0              ;
1149  8DF0              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1150  8DF0              ;
1151  8DF0              ;	DESTRUYE: HL y BC y DE.
1152  8DF0
1153  8DF0 21 C6 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1154  8DF3 01 42 00     	ld bc,66
1155  8DF6 ED B0        	ldir
1156  8DF8 C9           	ret
1157  8DF9
1158  8DF9              ; -----------------------------------------------------------
1159  8DF9              ;
1160  8DF9              ;	27/04/23
1161  8DF9              ;
1162  8DF9              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1163  8DF9              ;
1164  8DF9              ;	Destruye: HL,BC,DE,A
1165  8DF9
1166  8DF9 21 C6 89     Borra_datos_entidad ld hl,Filas
1167  8DFC 01 41 00     	ld bc,65
1168  8DFF AF           	xor a
1169  8E00 77           	ld (hl),a
1170  8E01 11 C7 89     	ld de,Filas+1
1171  8E04 ED B0        	ldir
1172  8E06 C9           	ret
1173  8E07
1174  8E07              ; -----------------------------------------------------------
1175  8E07
1176  8E07              ; Teclado.
1177  8E07
1178  8E07 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1179  8E09 DB FE        	in a,($fe)
1180  8E0B E6 01        	and $01
1181  8E0D 28 02        	jr z,1f
1182  8E0F 18 F6        	jr Pulsa_ENTER
1183  8E11 C9           1 ret
1184  8E12
1185  8E12              ; **************************************************************************************************
1186  8E12              ;
1187  8E12              ; Temporización.
1188  8E12
1189  8E12              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1190  8E12              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1191  8E12              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1192  8E12              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1193  8E12
1194  8E12              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1195  8E12              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1196  8E12              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1197  8E12
1198  8E12              ; A partir de $4f61 no hace falta DELAY.
1199  8E12
1200  8E12              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1201  8E12
1202  8E12 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1203  8E15 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1204  8E16 78           	LD A,B
1205  8E17 A7           	AND A
1206  8E18 20 FB        	JR NZ,wait
1207  8E1A C9           	RET
1208  8E1B
1209  8E1B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1210  8E1B              ;
1211  8E1B              ;	5/3/23
1212  8E1B              ;
1213  8E1B              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1214  8E1B
1215  8E1B              Movimiento_Amadeus
1216  8E1B
1217  8E1B              ; Disparo.
1218  8E1B
1219  8E1B 3A 35 8A     	ld a,(Habilita_disparo_Amadeus)
1220  8E1E A7           	and a
1221  8E1F 20 02        	jr nz,1F
1222  8E21 18 15        	jr 2F
1223  8E23
1224  8E23 3E F7        1 ld a,$f7													; "5" para disparar.
1225  8E25 DB FE        	in a,($fe)
1226  8E27 E6 10        	and $10
1227  8E29
1228  8E29 F5           	push af
1229  8E2A CC 62 8E     	call z,Genera_disparo
1230  8E2D F1           	pop af
1231  8E2E 20 08        	jr nz,2F
1232  8E30
1233  8E30 3A 35 8A     	ld a,(Habilita_disparo_Amadeus)
1234  8E33 EE 01        	xor 1
1235  8E35 32 35 8A     	ld (Habilita_disparo_Amadeus),a
1236  8E38
1237  8E38 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1238  8E3A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1239  8E3C E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1240  8E3E CC B8 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1241  8E41 3E F7        	ld a,$f7
1242  8E43 DB FE        	in a,($fe)
1243  8E45 E6 01        	and $01
1244  8E47 C8           	ret z
1245  8E48
1246  8E48 3E F7        	ld a,$f7
1247  8E4A DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1248  8E4C E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1249  8E4E CC 9A 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1250  8E51 C9           	ret
1251  8E52
1252  8E52              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1253  8E52              ;
1254  8E52              ;	Rutina provisional para que los malotes cagen balas.
1255  8E52
1256  8E52              Detecta_disparo_entidad
1257  8E52
1258  8E52 3A 38 8A     	ld a,(Habilita_disparo_entidad)
1259  8E55 A7           	and a
1260  8E56 C8           	ret z
1261  8E57
1262  8E57 3E 7F        	ld a,$7f
1263  8E59 DB FE        	in a,($fe)
1264  8E5B E6 01        	and 1
1265  8E5D C0           	ret nz
1266  8E5E
1267  8E5E CD 62 8E     	call Genera_disparo
1268  8E61 C9           	ret
1269  8E62
1270  8E62              ; ---------------------------------------------------------------
1271  8E62
1272  8E62              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E62              ; ******************************************************************************************************************************************************************************************
   2+ 8E62              ;
   3+ 8E62              ;   17/04/23
   4+ 8E62              ;
   5+ 8E62              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E62              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E62              ;
   8+ 8E62              ;
   9+ 8E62              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E62              ;
  11+ 8E62              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E62              ;               _ hacen las entidades hacia abajo.
  13+ 8E62              ;
  14+ 8E62              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E62              ;
  16+ 8E62              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E62              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E62              ;
  19+ 8E62              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E62              ;           _ la bala.
  21+ 8E62              ;
  22+ 8E62              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E62              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E62              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E62              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E62              ;           _ en el momento de generarse la bala)).
  27+ 8E62
  28+ 8E62              Genera_disparo
  29+ 8E62
  30+ 8E62              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E62              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E62              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E62              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E62              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E62              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E62              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E62
  38+ 8E62              ; Exclusiones:
  39+ 8E62
  40+ 8E62 3A 02 8A         ld a,(Columnas)
  41+ 8E65 47               ld b,a
  42+ 8E66 3A C7 89         ld a,(Columns)
  43+ 8E69 B8               cp b
  44+ 8E6A C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E6B
  46+ 8E6B              ; ----- ----- -----
  47+ 8E6B
  48+ 8E6B 3A F4 89         ld a,(Ctrl_0)
  49+ 8E6E CB 77            bit 6,a
  50+ 8E70 20 06            jr nz,14F
  51+ 8E72
  52+ 8E72 3A CD 89         ld a,(Coordenada_y)
  53+ 8E75 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E77 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E78
  56+ 8E78 21 00 80     14 ld hl,Indice_disparo
  57+ 8E7B 3A CE 89         ld a,(CTRL_DESPLZ)
  58+ 8E7E 4F               ld c,a
  59+ 8E7F 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E81              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E81              ;                                            ""        ""       "f9", B="1"
  62+ 8E81              ;                                            ""        ""       "fb", B="2"
  63+ 8E81              ;                                            ""        ""       "fb", B="3"
  64+ 8E81 A7               and a
  65+ 8E82 28 10            jr z,1F
  66+ 8E84 E6 01            and 1
  67+ 8E86 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E87
  69+ 8E87 79               ld a,c
  70+ 8E88 16 F9            ld d,$f9
  71+ 8E8A 23           2 inc hl
  72+ 8E8B 23               inc hl
  73+ 8E8C 04               inc b
  74+ 8E8D BA               cp d
  75+ 8E8E 28 04            jr z,1F
  76+ 8E90 14               inc d
  77+ 8E91 14               inc d
  78+ 8E92 18 F6            jr 2B
  79+ 8E94
  80+ 8E94 CD 2E 8D     1 call Extrae_address
  81+ 8E97 E5               push hl
  82+ 8E98 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E9A DD 21 B3 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E9E
  85+ 8E9E              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E9E              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E9E
  88+ 8E9E 3A F4 89         ld a,(Ctrl_0)
  89+ 8EA1 CB 77            bit 6,a
  90+ 8EA3 20 04            jr nz,19F
  91+ 8EA5
  92+ 8EA5 AF               xor a
  93+ 8EA6 32 38 8A         ld (Habilita_disparo_entidad),a
  94+ 8EA9
  95+ 8EA9 3A DA 89     19 ld a,(Cuad_objeto)
  96+ 8EAC FE 02            cp 2
  97+ 8EAE 38 66            jr c,3F
  98+ 8EB0 28 64            jr z,3F
  99+ 8EB2
 100+ 8EB2              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8EB2
 102+ 8EB2 E6 01            and 1
 103+ 8EB4 28 30            jr z,4F
 104+ 8EB6
 105+ 8EB6              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8EB6              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8EB6              ;
 108+ 8EB6              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8EB6              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8EB6              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8EB6
 112+ 8EB6 2A C8 89     	ld hl,(Posicion_actual)
 113+ 8EB9
 114+ 8EB9              ;   Amadeus o entidad ???.
 115+ 8EB9
 116+ 8EB9 3A F4 89         ld a,(Ctrl_0)
 117+ 8EBC CB 77            bit 6,a
 118+ 8EBE 28 0A            jr z,8F
 119+ 8EC0
 120+ 8EC0              ; 	Dispara Amadeus.
 121+ 8EC0
 122+ 8EC0 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8EC2 CD 2F 96         call PreviousScan
 124+ 8EC5 CD 2F 96         call PreviousScan
 125+ 8EC8
 126+ 8EC8              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8EC8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8EC8              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8EC8              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8EC8
 131+ 8EC8 18 11            jr 10F
 132+ 8ECA
 133+ 8ECA              ; 	Dispara Entidad.
 134+ 8ECA
 135+ 8ECA 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8ECD              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8ECD
 138+ 8ECD              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8ECD              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8ECD
 141+ 8ECD C5               push bc
 142+ 8ECE 06 10            ld b,16
 143+ 8ED0 CD 20 96     9 call NextScan
 144+ 8ED3 10 FB            djnz 9B
 145+ 8ED5 C1               pop bc
 146+ 8ED6 CD 40 8F         call Ajusta_disparo_parte_izquierda
 147+ 8ED9 18 06            jr 17F
 148+ 8EDB
 149+ 8EDB              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8EDB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8EDB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8EDB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8EDB
 154+ 8EDB CD 40 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8EDE CD B5 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8EE1              ;                                                      ; _al generar el disparo.
 157+ 8EE1
 158+ 8EE1              ; 	LLegados a este punto tendremos:
 159+ 8EE1              ;
 160+ 8EE1              ;       Puntero_objeto_disparo en IY.
 161+ 8EE1              ;       Rutinas_de_impresion en IX.
 162+ 8EE1              ;       Puntero_de_impresion en HL.
 163+ 8EE1              ;       Impacto/Dirección en BC.
 164+ 8EE1
 165+ 8EE1 CD 48 8F     17 call Almacena_disparo
 166+ 8EE4 18 52            jr 6F                                             ; RET.
 167+ 8EE6
 168+ 8EE6              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8EE6              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8EE6              ;
 171+ 8EE6              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8EE6              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8EE6              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8EE6
 175+ 8EE6 2A C8 89     4 ld hl,(Posicion_actual)
 176+ 8EE9
 177+ 8EE9              ;   Amadeus o entidad ???.
 178+ 8EE9
 179+ 8EE9 3A F4 89         ld a,(Ctrl_0)
 180+ 8EEC CB 77            bit 6,a
 181+ 8EEE 28 0A            jr z,11F
 182+ 8EF0
 183+ 8EF0              ; 	Dispara Amadeus.
 184+ 8EF0
 185+ 8EF0 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EF2 CD 2F 96         call PreviousScan
 187+ 8EF5 CD 2F 96         call PreviousScan
 188+ 8EF8
 189+ 8EF8              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EF8              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EF8              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EF8              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EF8
 194+ 8EF8 18 11            jr 13F
 195+ 8EFA
 196+ 8EFA              ; 	Dispara Entidad.
 197+ 8EFA
 198+ 8EFA 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EFD              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EFD
 201+ 8EFD              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EFD              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EFD
 204+ 8EFD C5               push bc
 205+ 8EFE 06 10            ld b,16
 206+ 8F00 CD 20 96     12 call NextScan
 207+ 8F03 10 FB            djnz 12B
 208+ 8F05 C1               pop bc
 209+ 8F06
 210+ 8F06 CD 39 8F         call Ajusta_disparo_parte_derecha
 211+ 8F09 18 06            jr 18F
 212+ 8F0B
 213+ 8F0B              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8F0B              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8F0B              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8F0B              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8F0B
 218+ 8F0B CD 39 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8F0E CD B5 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8F11              ;                                                       ; _al generar el disparo.
 221+ 8F11
 222+ 8F11              ; LLegados a este punto tendremos:
 223+ 8F11              ;
 224+ 8F11              ;       Puntero_objeto_disparo en IY.
 225+ 8F11              ;       Rutinas_de_impresion en IX.
 226+ 8F11              ;       Puntero_de_impresion en HL.
 227+ 8F11              ;       Impacto/Dirección en BC.
 228+ 8F11
 229+ 8F11 CD 48 8F     18 call Almacena_disparo
 230+ 8F14 18 22            jr 6F                                               ; RET.
 231+ 8F16
 232+ 8F16              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8F16
 234+ 8F16 28 11        3 jr z,5F
 235+ 8F18
 236+ 8F18              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8F18              ;
 238+ 8F18              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8F18              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8F18              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8F18              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8F18
 243+ 8F18              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8F18              ;	   ""        ""       "f9", B="1"
 245+ 8F18              ;	   ""        ""       "fb", B="2"
 246+ 8F18              ; 	   ""        ""       "fb", B="3"
 247+ 8F18
 248+ 8F18 2A C8 89     	ld hl,(Posicion_actual)
 249+ 8F1B CD 20 96     	call NextScan
 250+ 8F1E
 251+ 8F1E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8F1E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8F1E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8F1E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8F1E
 256+ 8F1E CD 40 8F         call Ajusta_disparo_parte_izquierda
 257+ 8F21
 258+ 8F21              ; 	No se produce impacto. B="$80"
 259+ 8F21              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8F21
 261+ 8F21 01 80 80         ld bc,$8080
 262+ 8F24
 263+ 8F24              ; 	LLegados a este punto tendremos:
 264+ 8F24              ;
 265+ 8F24              ;       Puntero_objeto_disparo en IY.
 266+ 8F24              ;       Rutinas_de_impresion en IX.
 267+ 8F24              ;       Puntero_de_impresion en HL.
 268+ 8F24              ;       Impacto/Dirección en BC.
 269+ 8F24
 270+ 8F24 CD 48 8F         call Almacena_disparo
 271+ 8F27 18 0F            jr 6F                                           ; RET.
 272+ 8F29
 273+ 8F29              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8F29              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8F29              ;
 276+ 8F29              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8F29              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8F29              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8F29              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8F29
 281+ 8F29 2A C8 89     5 ld hl,(Posicion_actual)
 282+ 8F2C CD 20 96     	call NextScan
 283+ 8F2F
 284+ 8F2F              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F2F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F2F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F2F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F2F
 289+ 8F2F CD 39 8F         call Ajusta_disparo_parte_derecha
 290+ 8F32
 291+ 8F32              ; 	No se produce impacto. B="$80"
 292+ 8F32              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F32
 294+ 8F32 01 80 80     15 ld bc,$8080
 295+ 8F35
 296+ 8F35              ; 	LLegados a este punto tendremos:
 297+ 8F35              ;
 298+ 8F35              ;       Puntero_objeto_disparo en IY.
 299+ 8F35              ;       Rutinas_de_impresion en IX.
 300+ 8F35              ;       Puntero_de_impresion en HL.
 301+ 8F35              ;       Impacto/Dirección en BC.
 302+ 8F35
 303+ 8F35 CD 48 8F         call Almacena_disparo
 304+ 8F38
 305+ 8F38 C9           6 ret
 306+ 8F39
 307+ 8F39              ; ----------------------------------------------------------------
 308+ 8F39              ;
 309+ 8F39              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F39              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F39              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F39
 313+ 8F39 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F3A FE 02            cp 2
 315+ 8F3C 38 01            jr c,1F
 316+ 8F3E 23               inc hl
 317+ 8F3F C9           1 ret
 318+ 8F40
 319+ 8F40 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F41 FE 01        	cp 1
 321+ 8F43 20 01        	jr nz,1F
 322+ 8F45 2B           	dec hl
 323+ 8F46 2B           1 dec hl
 324+ 8F47 C9               ret
 325+ 8F48
 326+ 8F48              ; ----------------------------------------------------------------
 327+ 8F48              ;
 328+ 8F48              ;   25/02/23
 329+ 8F48              ;
 330+ 8F48              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F48              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F48              ;
 333+ 8F48              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F48              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F48
 336+ 8F48              Almacena_disparo
 337+ 8F48
 338+ 8F48 E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F49 F1               pop af
 340+ 8F4A 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F4B
 342+ 8F4B 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F4C E6 01            and 1
 344+ 8F4E 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F50              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F50              ; 	Dispara AMADEUS.
 347+ 8F50
 348+ 8F50              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F50              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F50              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F50              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F50
 353+ 8F50 C5               push bc
 354+ 8F51 01 F8 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F54 2A 24 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F57 A7               and a
 357+ 8F58 ED 42            sbc hl,bc
 358+ 8F5A CC F7 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F5D C1               pop bc
 360+ 8F5E 28 54            jr z,4F
 361+ 8F60
 362+ 8F60 2A 24 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F63 23               inc hl
 364+ 8F64 23               inc hl
 365+ 8F65 22 24 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F68              ;                                                   ; _ Disparo_(+1).
 367+ 8F68 18 18            jr 2F
 368+ 8F6A
 369+ 8F6A              ; Dispara una entidad.
 370+ 8F6A
 371+ 8F6A C5           1 push bc
 372+ 8F6B 01 20 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F6E 2A 22 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F71 A7               and a
 375+ 8F72 ED 42            sbc hl,bc
 376+ 8F74 CC F0 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F77 C1               pop bc
 378+ 8F78 28 3A            jr z,4F
 379+ 8F7A
 380+ 8F7A 2A 22 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F7D 23               inc hl
 382+ 8F7E 23               inc hl
 383+ 8F7F 22 22 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F82              ;                                                   ; _ Disparo_(+1).
 385+ 8F82 CD 2E 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F85              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F85              ;
 388+ 8F85              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F85              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F85              ;                                                     Puntero_de_impresion en HL.
 391+ 8F85              ;                                                     Impacto/Dirección en BC.
 392+ 8F85
 393+ 8F85 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F86 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F87 23               inc hl                                          ; _ al siguiente.
 396+ 8F88 A7               and a
 397+ 8F89 20 C0            jr nz,3B
 398+ 8F8B
 399+ 8F8B 08               ex af,af
 400+ 8F8C ED 73 19 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F90 F9               ld sp,hl
 402+ 8F91
 403+ 8F91 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F93 F5               push af                                         ; Puntero de impresión.
 405+ 8F94 FD E5            push iy                                         ; Puntero objeto.
 406+ 8F96 C5               push bc                                         ; Control.
 407+ 8F97
 408+ 8F97 ED 7B 19 8A      ld sp,(Stack)
 409+ 8F9B
 410+ 8F9B              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F9B
 412+ 8F9B 21 08 8A     	ld hl,Ctrl_1
 413+ 8F9E CB C6        	set 0,(hl)
 414+ 8FA0
 415+ 8FA0 DD E5        	push ix
 416+ 8FA2 E1               pop hl
 417+ 8FA3 F5               push af
 418+ 8FA4 DD E1            pop ix
 419+ 8FA6
 420+ 8FA6 CD A0 7F     	call Guarda_foto_registros
 421+ 8FA9
 422+ 8FA9 21 08 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8FAC CB 86        	res 0,(hl)
 424+ 8FAE
 425+ 8FAE              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8FAE              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8FAE
 428+ 8FAE CD F7 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8FB1 CD F0 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8FB4
 431+ 8FB4 C9           4 ret
 432+ 8FB5
 433+ 8FB5              ; ----------------------------------------------------------------
 434+ 8FB5              ;
 435+ 8FB5              ;   4/3/23
 436+ 8FB5              ;
 437+ 8FB5              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8FB5              ;   _ al generarse el disparo.
 439+ 8FB5              ;
 440+ 8FB5              ;       "$80" ..... No se produce colisión.
 441+ 8FB5              ;       "$81" ..... Se produce colisión.
 442+ 8FB5
 443+ 8FB5              ;   Nota: Es necesario que se produzca colisión en los dos scanlines que forman el disparo.
 444+ 8FB5              ;         La sensibilidad la puedo ajustar eliminando la segunda línea "ld e,$80" de [Comprueba_Colision].
 445+ 8FB5
 446+ 8FB5
 447+ 8FB5 FD E5        Comprueba_Colision push iy                         ; Puntero objeto (disparo).
 448+ 8FB7 E5               push hl                                        ; Puntero de impresión.
 449+ 8FB8
 450+ 8FB8 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 451+ 8FBA CD D6 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 452+ 8FBD
 453+ 8FBD 7B               ld a,e
 454+ 8FBE E6 01            and 1
 455+ 8FC0 20 0F            jr nz,2F                                       ; Salimos si E="$81". Hay colisión.
 456+ 8FC2
 457+ 8FC2 E1               pop hl
 458+ 8FC3 E5               push hl
 459+ 8FC4 CD 20 96         call NextScan
 460+ 8FC7
 461+ 8FC7 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 462+ 8FC8 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 463+ 8FCA 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 464+ 8FCC              ;                                                  ; _ 2º scanline si esto es así.
 465+ 8FCC 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 466+ 8FCE CD D6 8F         call Bucle_2
 467+ 8FD1
 468+ 8FD1 43           2 ld b,e
 469+ 8FD2 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 470+ 8FD3 FD E1            pop iy
 471+ 8FD5 C9               ret
 472+ 8FD6
 473+ 8FD6               ; ---------- ----------
 474+ 8FD6
 475+ 8FD6 06 02        Bucle_2 ld b,2
 476+ 8FD8 FD 7E 00     2 ld a,(iy)
 477+ 8FDB A6               and (hl)
 478+ 8FDC 28 02            jr z,1F
 479+ 8FDE 1E 81            ld e,$81
 480+ 8FE0 23           1 inc hl
 481+ 8FE1 FD 23            inc iy
 482+ 8FE3 10 F3            djnz 2B
 483+ 8FE5 C9               ret
 484+ 8FE6
 485+ 8FE6              ; -------------------------------------------------------------------------------------------------------------
 486+ 8FE6              ;
 487+ 8FE6              ;   11/04/23
 488+ 8FE6              ;
 489+ 8FE6              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 490+ 8FE6              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 491+ 8FE6              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 492+ 8FE6              ;
 493+ 8FE6              ;   MODIFICA: HL,DE,BC,A y AF´.
 494+ 8FE6
 495+ 8FE6              Compara_coordenadas_X
 496+ 8FE6
 497+ 8FE6              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 498+ 8FE6              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 499+ 8FE6
 500+ 8FE6              ; Preparamos registros:
 501+ 8FE6
 502+ 8FE6 21 CC 89         ld hl,Filas+6
 503+ 8FE9 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 504+ 8FEA 23               inc hl
 505+ 8FEB 23               inc hl
 506+ 8FEC 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 507+ 8FED 43               ld b,e
 508+ 8FEE
 509+ 8FEE 21 DA 89         ld hl,Filas+20
 510+ 8FF1 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 511+ 8FF2 21 2E 8A         ld hl,Coordenadas_X_Entidad
 512+ 8FF5 CD 09 92         call Guarda_coordenadas_X
 513+ 8FF8
 514+ 8FF8              ; Preparamos registros:
 515+ 8FF8
 516+ 8FF8 21 92 85         ld hl,Amadeus_db+6
 517+ 8FFB 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 518+ 8FFC 23               inc hl
 519+ 8FFD 23               inc hl
 520+ 8FFE 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 521+ 8FFF 7B               ld a,e
 522+ 9000 08               ex af,af'
 523+ 9001 21 A0 85         ld hl,Amadeus_db+20
 524+ 9004 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 525+ 9005 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 526+ 9008 CD 09 92         call Guarda_coordenadas_X
 527+ 900B
 528+ 900B              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 529+ 900B              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 530+ 900B
 531+ 900B 04               inc b
 532+ 900C 05               dec b
 533+ 900D 28 04            jr z,1F
 534+ 900F 06 03            ld b,3
 535+ 9011 18 02            jr 2F
 536+ 9013 06 02        1 ld b,2
 537+ 9015 08           2 ex af,af'
 538+ 9016 3C               inc a
 539+ 9017 3D               dec a
 540+ 9018 28 04            jr z,5F
 541+ 901A 0E 03            ld c,3
 542+ 901C 18 02            jr 6F
 543+ 901E 0E 02        5 ld c,2
 544+ 9020 79           6 ld a,c
 545+ 9021 08               ex af,af'
 546+ 9022 11 2E 8A         ld de,Coordenadas_X_Entidad
 547+ 9025 1A           4 ld a,(de)
 548+ 9026 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 549+ 9029 BE           3 cp (hl)
 550+ 902A 28 0E            jr z,7F
 551+ 902C 23               inc hl
 552+ 902D 0D               dec c
 553+ 902E 20 F9            jr nz,3B
 554+ 9030 13               inc de
 555+ 9031 08               ex af,af'
 556+ 9032 4F               ld c,a
 557+ 9033 08               ex af,af'
 558+ 9034 10 EF            djnz 4B
 559+ 9036
 560+ 9036              ; Limpiamos los almacenes de coordenadas y salimos.
 561+ 9036
 562+ 9036 CD 48 92     8 call Limpia_Coordenadas_X
 563+ 9039 C9               ret
 564+ 903A
 565+ 903A 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 566+ 903C 32 DF 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 567+ 903F 21 26 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 568+ 9042 CB D6            set 2,(hl)
 569+ 9044 18 F0            jr 8B
 570+ 9046
 571+ 9046              ; -----------------------------------------------------------------------
 572+ 9046              ;
 573+ 9046              ;   17/04/23
 574+ 9046              ;
 575+ 9046
 576+ 9046              Detecta_colision_nave_entidad
 577+ 9046
 578+ 9046              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 579+ 9046
 580+ 9046 2A C8 89         ld hl,(Posicion_actual)
 581+ 9049 CD 85 95         call Calcula_puntero_de_impresion
 582+ 904C
 583+ 904C              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 584+ 904C              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 585+ 904C
 586+ 904C DD E5            push ix
 587+ 904E E1               pop hl
 588+ 904F E5               push hl
 589+ 9050
 590+ 9050              ; ----- ----- -----
 591+ 9050 1E 00            ld e,0                                         ; Indica impacto.
 592+ 9052 06 0A            ld b,10
 593+ 9054 CD 84 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 594+ 9057 7B               ld a,e
 595+ 9058 FE 05            cp 5
 596+ 905A 38 0E            jr c,3F
 597+ 905C
 598+ 905C              ; LLegados a este punto:
 599+ 905C              ;
 600+ 905C              ;   HAY COLISIÓN !!!!!.
 601+ 905C              ;
 602+ 905C              ;   .db (Impacto) de Amadeus a "1".
 603+ 905C              ;   SET el bit3 de (Impacto2).
 604+ 905C              ;
 605+ 905C              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 606+ 905C
 607+ 905C 21 A5 85         ld hl,Amadeus_db+25
 608+ 905F 36 01            ld (hl),1
 609+ 9061 21 26 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 610+ 9064 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 611+ 9066 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 612+ 9068 18 18            jr 1F
 613+ 906A
 614+ 906A              ; -----
 615+ 906A
 616+ 906A E1           3 pop hl
 617+ 906B CD 20 96         call NextScan
 618+ 906E E5               push hl
 619+ 906F 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9070 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 9072 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 9074 30 0C            jr nc,1F
 623+ 9076              ;                                                  ; _ 2º scanline si esto es así.
 624+ 9076 10 DC            djnz 2B
 625+ 9078
 626+ 9078              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9078
 628+ 9078              ; LLegados a este punto:
 629+ 9078              ;
 630+ 9078              ;   NO HAY COLISIÓN !!!!!.
 631+ 9078              ;
 632+ 9078              ;   .db (Impacto) de Amadeus a "0".
 633+ 9078              ;   RES el bit2 de (Impacto2).
 634+ 9078              ;
 635+ 9078              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 636+ 9078              ;   Lo colocamos a "0".
 637+ 9078
 638+ 9078 21 26 8A         ld hl,Impacto2
 639+ 907B CB 96            res 2,(hl)
 640+ 907D 2A 27 8A         ld hl,(Entidad_sospechosa_de_colision)
 641+ 9080 36 00            ld (hl),0
 642+ 9082
 643+ 9082 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 644+ 9083 C9               ret
 645+ 9084
 646+ 9084               ; ---------- ----------
 647+ 9084
 648+ 9084 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 649+ 9085 3A C7 89         ld a,(Columns)
 650+ 9088 47               ld b,a
 651+ 9089 FD 7E 00     2 ld a,(iy)
 652+ 908C BE               cp (hl)
 653+ 908D 28 01            jr z,1F
 654+ 908F
 655+ 908F 1C               inc e
 656+ 9090
 657+ 9090 23           1 inc hl
 658+ 9091 FD 23            inc iy
 659+ 9093 10 F4            djnz 2B
 660+ 9095 C1               pop bc
 661+ 9096 C9               ret
 662+ 9097
 663+ 9097              ; -------------------------------------------------------------------------------------------------------------
 664+ 9097              ;
 665+ 9097              ;   13/03/23
 666+ 9097              ;
 667+ 9097              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 668+ 9097              ;
 669+ 9097              ;   DESTRUYE: HL,BC,DE y A.
 670+ 9097
 671+ 9097 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 672+ 909A 7E               ld a,(hl)
 673+ 909B A7               and a
 674+ 909C C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 675+ 909D
 676+ 909D 44               ld b,h
 677+ 909E 4D               ld c,l
 678+ 909F 2A 1F 8A         ld hl,(Stack_snapshot_disparos)
 679+ 90A2 E5               push hl
 680+ 90A3 A7               and a
 681+ 90A4 ED 42            sbc hl,bc
 682+ 90A6 E5               push hl
 683+ 90A7 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 684+ 90A8
 685+ 90A8 E1               pop hl
 686+ 90A9 54               ld d,h
 687+ 90AA 5D               ld e,l
 688+ 90AB 1B               dec de
 689+ 90AC ED B8            lddr                                                ; Limpiamos.
 690+ 90AE
 691+ 90AE 21 85 70         ld hl,Album_de_fotos_disparos
 692+ 90B1 22 1F 8A         ld (Stack_snapshot_disparos),hl
 693+ 90B4
 694+ 90B4 C9               ret
 695+ 90B5
 696+ 90B5              ; -------------------------------------------------------------------------------------------------------------
 697+ 90B5              ;
 698+ 90B5              ;   28/03/23
 699+ 90B5              ;
 700+ 90B5
 701+ 90B5 01 0A 85     Motor_de_disparos ld bc,Disparo_3A
 702+ 90B8 2A 24 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Avanza disparo.
 703+ 90BB
 704+ 90BB CD 2E 8D     2 call Extrae_address
 705+ 90BE 7E               ld a,(hl)
 706+ 90BF A7               and a
 707+ 90C0 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 708+ 90C2
 709+ 90C2              ; ----- ----- ----- ----- ----- -----
 710+ 90C2
 711+ 90C2 C5               push bc
 712+ 90C3 CD 7F 91         call foto_disparo_a_borrar
 713+ 90C6
 714+ 90C6              ; Existe colisión con este disparo???
 715+ 90C6
 716+ 90C6 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 717+ 90C7 7E               ld a,(hl)
 718+ 90C8 2B               dec hl
 719+ 90C9 E6 01            and 1
 720+ 90CB 28 1D            jr z,9F
 721+ 90CD
 722+ 90CD              ;   En este punto:
 723+ 90CD              ;
 724+ 90CD              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 725+ 90CD              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 726+ 90CD              ;   _con la entidad).
 727+ 90CD              ;
 728+ 90CD              ;   Disparo_2A defw 0                                ; Control.
 729+ 90CD              ;    defw 0                                          ; Puntero objeto.
 730+ 90CD              ;    defw 0                                          ; Puntero de impresión.
 731+ 90CD              ;    defw 0                                          ; Rutina de impresión.
 732+ 90CD
 733+ 90CD E5               push hl
 734+ 90CE
 735+ 90CE 06 04            ld b,4
 736+ 90D0 23           19 inc hl
 737+ 90D1 10 FD            djnz 19B
 738+ 90D3
 739+ 90D3 CD 2E 8D         call Extrae_address
 740+ 90D6 CD 96 9C         call Genera_coordenadas_disparo
 741+ 90D9
 742+ 90D9              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 743+ 90D9
 744+ 90D9 21 29 8A         ld hl,Coordenadas_disparo_certero
 745+ 90DC 72               ld (hl),d
 746+ 90DD 23               inc hl
 747+ 90DE 73               ld (hl),e
 748+ 90DF
 749+ 90DF              ; Elimino el disparo de la base de datos.
 750+ 90DF
 751+ 90DF E1               pop hl
 752+ 90E0 CD FE 91         call Elimina_disparo_de_base_de_datos
 753+ 90E3 21 26 8A         ld hl,Impacto2
 754+ 90E6 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 755+ 90E8
 756+ 90E8 18 06            jr 11F
 757+ 90EA
 758+ 90EA CD A8 91     9 call Mueve_disparo
 759+ 90ED CD 7F 91         call foto_disparo_a_borrar
 760+ 90F0
 761+ 90F0 C1           11 pop bc
 762+ 90F1 18 04            jr 7F
 763+ 90F3
 764+ 90F3              ; ----- ----- ----- ----- ----- -----
 765+ 90F3
 766+ 90F3 ED 42        1 sbc hl,bc
 767+ 90F5 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 768+ 90F7 2A 24 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Avanza disparo.
 769+ 90FA 23               inc hl
 770+ 90FB 23               inc hl
 771+ 90FC 22 24 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 772+ 90FF 18 BA            jr 2B
 773+ 9101 CD F7 8C     3 call Inicia_Puntero_Disparo_Amadeus
 774+ 9104
 775+ 9104 01 72 85         ld bc,Disparo_11
 776+ 9107 2A 22 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 777+ 910A
 778+ 910A CD 2E 8D     5 call Extrae_address
 779+ 910D 7E               ld a,(hl)
 780+ 910E A7               and a
 781+ 910F 28 5C            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 782+ 9111
 783+ 9111              ; ----- ----- ----- ----- ----- -----
 784+ 9111
 785+ 9111 C5               push bc
 786+ 9112 CD 7F 91         call foto_disparo_a_borrar
 787+ 9115
 788+ 9115              ; Existe colisión con este disparo???
 789+ 9115
 790+ 9115 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 791+ 9116 7E               ld a,(hl)
 792+ 9117 2B               dec hl
 793+ 9118 E6 01            and 1
 794+ 911A 28 48            jr z,10F
 795+ 911C
 796+ 911C              ;!    jr $ ;! STOP si el disparo tiene colisión.
 797+ 911C
 798+ 911C              ;! La colisión se produce con Amadeus???
 799+ 911C              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 800+ 911C
 801+ 911C E5               push hl
 802+ 911D
 803+ 911D 06 04            ld b,4
 804+ 911F 23           16 inc hl
 805+ 9120 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 806+ 9122 CD 2E 8D         call Extrae_address
 807+ 9125 CD 96 9C         call Genera_coordenadas_disparo
 808+ 9128
 809+ 9128 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 810+ 9129 FE 16            cp $16
 811+ 912B 38 22            jr c,15F
 812+ 912D
 813+ 912D              ; (Colisiones en filas 16 y 17).
 814+ 912D
 815+ 912D D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 816+ 912E
 817+ 912E              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 818+ 912E
 819+ 912E 21 92 85         ld hl,Amadeus_db+6
 820+ 9131 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 821+ 9132 23               inc hl
 822+ 9133 23               inc hl
 823+ 9134 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E.
 824+ 9135 21 A0 85         ld hl,Amadeus_db+20
 825+ 9138 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 826+ 9139 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 827+ 913C CD 09 92         call Guarda_coordenadas_X
 828+ 913F
 829+ 913F D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 830+ 9140
 831+ 9140              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 832+ 9140
 833+ 9140 06 03            ld b,3
 834+ 9142 21 2B 8A         ld hl,Coordenadas_X_Amadeus
 835+ 9145 7E           18 ld a,(hl)
 836+ 9146 BA               cp d
 837+ 9147 20 03            jr nz,17F
 838+ 9149
 839+ 9149              ; Colisión Amadeus !!!!!!!!!!
 840+ 9149
 841+ 9149 E1               pop hl
 842+ 914A 18 09            jr 14F
 843+ 914C
 844+ 914C 23           17 inc hl
 845+ 914D 10 F6            djnz 18B
 846+ 914F
 847+ 914F              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 848+ 914F              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 849+ 914F
 850+ 914F E1           15 pop hl
 851+ 9150 23               inc hl
 852+ 9151 35               dec (hl)
 853+ 9152 2B               dec hl
 854+ 9153 18 0F            jr 10F
 855+ 9155
 856+ 9155              ; -----------------------debug
 857+ 9155
 858+ 9155              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 859+ 9155              ; _ almacén de coordenadas_X de Amadeus.
 860+ 9155
 861+ 9155 E5           14 push hl
 862+ 9156 CD FE 91         call Elimina_disparo_de_base_de_datos
 863+ 9159 21 26 8A         ld hl,Impacto2
 864+ 915C CB CE            set 1,(hl)
 865+ 915E CD 48 92         call Limpia_Coordenadas_X
 866+ 9161
 867+ 9161 E1               pop hl
 868+ 9162 18 06            jr 12F
 869+ 9164
 870+ 9164 CD A8 91     10 call Mueve_disparo
 871+ 9167 CD 7F 91         call foto_disparo_a_borrar
 872+ 916A C1           12 pop bc
 873+ 916B
 874+ 916B 18 04            jr 8F
 875+ 916D
 876+ 916D              ; ----- ----- ----- ----- ----- -----
 877+ 916D
 878+ 916D ED 42        4 sbc hl,bc
 879+ 916F 28 0A            jr z,6F
 880+ 9171
 881+ 9171 2A 22 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 882+ 9174 23               inc hl
 883+ 9175 23               inc hl
 884+ 9176 22 22 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 885+ 9179 18 8F            jr 5B
 886+ 917B
 887+ 917B CD F0 8C     6 call Inicia_Puntero_Disparo_Entidades
 888+ 917E C9               ret
 889+ 917F
 890+ 917F              ; ------------------------------------------------------------------
 891+ 917F
 892+ 917F              foto_disparo_a_borrar
 893+ 917F
 894+ 917F 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 895+ 9180 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 896+ 9181 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 897+ 9182
 898+ 9182 E5               push hl
 899+ 9183 23               inc hl
 900+ 9184 23               inc hl
 901+ 9185 ED 73 19 8A      ld (Stack),sp
 902+ 9189 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 903+ 918A FD E1            pop iy
 904+ 918C DD E1            pop ix
 905+ 918E E1               pop hl
 906+ 918F ED 7B 19 8A      ld sp,(Stack)
 907+ 9193 3A 08 8A         ld a,(Ctrl_1)
 908+ 9196 CB C7            set 0,a
 909+ 9198 32 08 8A         ld (Ctrl_1),a
 910+ 919B CD A0 7F         call Guarda_foto_registros
 911+ 919E 3A 08 8A         ld a,(Ctrl_1)
 912+ 91A1 CB 87            res 0,a
 913+ 91A3 32 08 8A         ld (Ctrl_1),a
 914+ 91A6 E1               pop hl
 915+ 91A7 C9               ret
 916+ 91A8
 917+ 91A8 E5           Mueve_disparo push hl
 918+ 91A9 7E               ld a,(hl)
 919+ 91AA 06 04            ld b,4
 920+ 91AC 23           1 inc hl
 921+ 91AD 10 FD            djnz 1B
 922+ 91AF
 923+ 91AF              ; HL apunta a la dirección donde se encuentra el puntero de impresión en pantalla.
 924+ 91AF
 925+ 91AF CD 2E 8D         call Extrae_address
 926+ 91B2
 927+ 91B2 E6 01            and 1
 928+ 91B4 28 2E            jr z,2F
 929+ 91B6
 930+ 91B6              ; Disparo hacia arriba, (Amadeus).
 931+ 91B6
 932+ 91B6              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 933+ 91B6              ; _ de la dificultad.
 934+ 91B6
 935+ 91B6 CD 2F 96         call PreviousScan
 936+ 91B9 CD 2F 96         call PreviousScan
 937+ 91BC CD 2F 96         call PreviousScan
 938+ 91BF CD 2F 96         call PreviousScan
 939+ 91C2
 940+ 91C2              ; Detecta si el disparo de Amadeus sale de pantalla:
 941+ 91C2
 942+ 91C2 7C               ld a,h
 943+ 91C3 FE 40            cp $40
 944+ 91C5 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 945+ 91C7
 946+ 91C7              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 947+ 91C7
 948+ 91C7 EB               ex de,hl
 949+ 91C8 06 04            ld b,4
 950+ 91CA 2B           6 dec hl
 951+ 91CB 10 FD            djnz 6B
 952+ 91CD
 953+ 91CD CD FE 91         call Elimina_disparo_de_base_de_datos
 954+ 91D0 E1               pop hl
 955+ 91D1 18 10            jr 7F
 956+ 91D3
 957+ 91D3              ; Se ha desplazado la bala, compruebo colisión.
 958+ 91D3
 959+ 91D3 D5           3 push de
 960+ 91D4 C5               push bc
 961+ 91D5
 962+ 91D5 CD B5 8F         call Comprueba_Colision
 963+ 91D8
 964+ 91D8              ; B="$80", no hay colisión. B="$81", existe colisión.
 965+ 91D8
 966+ 91D8 78               ld a,b
 967+ 91D9
 968+ 91D9 C1               pop bc
 969+ 91DA D1               pop de
 970+ 91DB
 971+ 91DB EB               ex de,hl
 972+ 91DC
 973+ 91DC 73               ld (hl),e
 974+ 91DD 23               inc hl
 975+ 91DE 72               ld (hl),d
 976+ 91DF
 977+ 91DF E1           4 pop hl
 978+ 91E0 23               inc hl
 979+ 91E1 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
 980+ 91E2 2B               dec hl
 981+ 91E3 C9           7 ret
 982+ 91E4
 983+ 91E4              ; Disparo hacia abajo, (Entidad).
 984+ 91E4
 985+ 91E4              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 986+ 91E4              ;! _ de la dificultad.
 987+ 91E4
 988+ 91E4 CD 20 96     2 call NextScan
 989+ 91E7 CD 20 96         call NextScan
 990+ 91EA CD 20 96         call NextScan
 991+ 91ED              ;    call NextScan
 992+ 91ED
 993+ 91ED              ; Detecta si el disparo de la entidad sale de la pantalla.
 994+ 91ED
 995+ 91ED 7C               ld a,h
 996+ 91EE FE 58            cp $58
 997+ 91F0 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
 998+ 91F2
 999+ 91F2 EB               ex de,hl
1000+ 91F3 06 04            ld b,4
1001+ 91F5 2B           5 dec hl
1002+ 91F6 10 FD            djnz 5B
1003+ 91F8
1004+ 91F8 CD FE 91         call Elimina_disparo_de_base_de_datos
1005+ 91FB E1               pop hl
1006+ 91FC 18 E5            jr 7B
1007+ 91FE
1008+ 91FE              ; HL apunta al primer byte de la base de datos del disparo.
1009+ 91FE
1010+ 91FE 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1011+ 9201 AF               xor a
1012+ 9202 77               ld (hl),a
1013+ 9203 54               ld d,h
1014+ 9204 5D               ld e,l
1015+ 9205 13               inc de
1016+ 9206 ED B0            ldir
1017+ 9208 C9               ret
1018+ 9209
1019+ 9209              ; -----------------------------------------------------------------
1020+ 9209              ;
1021+ 9209              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1022+ 9209              ;
1023+ 9209              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1024+ 9209              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1025+ 9209              ;
1026+ 9209              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1027+ 9209              ;
1028+ 9209              ;   INPUTS:
1029+ 9209              ;
1030+ 9209              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1031+ 9209              ;   C contiene (Cuad_objeto) de la Entidad/Amadeus.
1032+ 9209              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1033+ 9209
1034+ 9209              ;   MODIFICA: A, HL, DE y C
1035+ 9209
1036+ 9209 72           Guarda_coordenadas_X ld (hl),d                          ; Cargamos la 1ª Coordenada_X en su almacen.
1037+ 920A 79               ld a,c
1038+ 920B E6 01            and 1
1039+ 920D 20 03            jr nz,1F
1040+ 920F 14               inc d
1041+ 9210 18 01            jr 2F                                               ; Amadeus se compone como mínimo de 2 chars.:
1042+ 9212
1043+ 9212              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1044+ 9212              ;   (Coordenada_X) de (Posicion_actual) + (Coordenada_X) de (Posicion_actual)-1 cuando estamos en los cuadrantes 1º y 3º de pantalla.
1045+ 9212
1046+ 9212 15           1 dec d
1047+ 9213 23           2 inc hl
1048+ 9214 72               ld (hl),d
1049+ 9215
1050+ 9215 7B               ld a,e                                              ; Si (CTRL_DESPLZ) de Amadeus es distinto de "0", Amadeus estará formado por 3 chars. y_
1051+ 9216 A7               and a                                               ; _ por lo tanto tendrá 3 coordenadas X.
1052+ 9217 C8               ret z
1053+ 9218
1054+ 9218 AF               xor a
1055+ 9219 5F               ld e,a
1056+ 921A 18 ED            jr Guarda_coordenadas_X
1057+ 921C
1058+ 921C              ; -----------------------------------------------------------------
1059+ 921C              ;
1060+ 921C              ;   12/04/23
1061+ 921C              ;
1062+ 921C
1063+ 921C 3A 26 8A     Selector_de_impactos ld a,(Impacto2)
1064+ 921F A7               and a
1065+ 9220 C8               ret z
1066+ 9221
1067+ 9221 FE 04            cp 4
1068+ 9223 20 09            jr nz,1F
1069+ 9225
1070+ 9225
1071+ 9225              ; La colisión se produce por contacto entre Amadeus y una entidad.
1072+ 9225
1073+ 9225 CD 46 90         call Detecta_colision_nave_entidad
1074+ 9228
1075+ 9228 21 26 8A         ld hl,Impacto2
1076+ 922B CB 5E            bit 3,(hl)
1077+ 922D C0               ret nz                                               ; Existe colisión, RET.
1078+ 922E
1079+ 922E              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1080+ 922E              ; Primero analizamos si algún disparo impacta en Amadeus.
1081+ 922E
1082+ 922E 21 26 8A     1 ld hl,Impacto2
1083+ 9231 CB 4E            bit 1,(hl)
1084+ 9233 28 07            jr z,2F
1085+ 9235
1086+ 9235 21 A5 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1087+ 9238 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1088+ 923A 18 0B            jr 3F
1089+ 923C
1090+ 923C 21 26 8A     2 ld hl,Impacto2
1091+ 923F CB 46            bit 0,(hl)
1092+ 9241 C8               ret z
1093+ 9242
1094+ 9242              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1095+ 9242
1096+ 9242 21 08 8A         ld hl,Ctrl_1
1097+ 9245 CB D6            set 2,(hl)
1098+ 9247
1099+ 9247 C9           3 ret
1100+ 9248
1101+ 9248              ; -----------------------------------------------------------------
1102+ 9248              ;
1103+ 9248              ;   16/04/23
1104+ 9248              ;
1105+ 9248
1106+ 9248 AF           Limpia_Coordenadas_X xor a
1107+ 9249 06 06            ld b,6
1108+ 924B 21 2B 8A         ld hl,Coordenadas_X_Amadeus
1109+ 924E 77           1 ld (hl),a
1110+ 924F 23               inc hl
1111+ 9250 10 FC            djnz 1B
1112+ 9252 C9               ret
1113+ 9253
1114+ 9253              ; -----------------------------------------------------------------
1115+ 9253              ;
1116+ 9253              ;   25/04/23
1117+ 9253              ;
1118+ 9253
1119+ 9253              Determina_resultado_comparativa
1120+ 9253
1121+ 9253              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1122+ 9253              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1123+ 9253              ;
1124+ 9253              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1125+ 9253              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1126+ 9253              ;
1127+ 9253              ;   SBC HL,DE
1128+ 9253
1129+ 9253              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1130+ 9253              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1131+ 9253
1132+ 9253              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1133+ 9253              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1134+ 9253
1135+ 9253
1136+ 9253 3A DA 89         ld a,(Cuad_objeto)
1137+ 9256 FE 02            cp 2
1138+ 9258 28 26            jr z,2F
1139+ 925A 38 24            jr c,2F
1140+ 925C
1141+ 925C              ; Cuadrantes 3º y 4º
1142+ 925C
1143+ 925C E6 01            and 1
1144+ 925E 28 10            jr z,4F
1145+ 9260
1146+ 9260              ; Cuadrante 3º
1147+ 9260
1148+ 9260 7C               ld a,h
1149+ 9261 06 00            ld b,0
1150+ 9263
1151+ 9263 CD EE 92         call Compara_cositas_H3
1152+ 9266
1153+ 9266 04               inc b
1154+ 9267 05               dec b
1155+ 9268 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1156+ 9269
1157+ 9269 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1158+ 926A 06 00            ld b,0
1159+ 926C
1160+ 926C CD 00 93         call Compara_cositas_L3
1161+ 926F C9               ret
1162+ 9270
1163+ 9270              ; Cuadrante 4º
1164+ 9270
1165+ 9270 7C           4 ld a,h
1166+ 9271 06 00            ld b,0
1167+ 9273
1168+ 9273 CD 12 93         call Compara_cositas_H4
1169+ 9276
1170+ 9276 04               inc b
1171+ 9277 05               dec b
1172+ 9278 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1173+ 9279
1174+ 9279 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1175+ 927A 06 00            ld b,0
1176+ 927C
1177+ 927C CD 28 93         call Compara_cositas_L4
1178+ 927F C9               ret
1179+ 9280
1180+ 9280              ; Cuadrantes 1º y 2º.
1181+ 9280
1182+ 9280 28 10        2 jr z,3F
1183+ 9282
1184+ 9282              ; 1er Cuadrante
1185+ 9282
1186+ 9282 7C               ld a,h
1187+ 9283 06 00            ld b,0
1188+ 9285
1189+ 9285 CD C6 92         call Compara_cositas_H1
1190+ 9288
1191+ 9288 04               inc b
1192+ 9289 05               dec b
1193+ 928A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1194+ 928B
1195+ 928B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1196+ 928C 06 00            ld b,0
1197+ 928E
1198+ 928E CD DC 92         call Compara_cositas_L1
1199+ 9291 C9               ret
1200+ 9292
1201+ 9292
1202+ 9292              ; 2º Cuadrante
1203+ 9292
1204+ 9292 7C           3 ld a,h
1205+ 9293 06 00            ld b,0
1206+ 9295
1207+ 9295 CD A2 92         call Compara_cositas_H2
1208+ 9298
1209+ 9298 04               inc b
1210+ 9299 05               dec b
1211+ 929A C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1212+ 929B
1213+ 929B 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1214+ 929C 06 00            ld b,0
1215+ 929E
1216+ 929E CD B4 92         call Compara_cositas_L2
1217+ 92A1 C9               ret
1218+ 92A2
1219+ 92A2 A7           Compara_cositas_H2 and a
1220+ 92A3 28 0D            jr z,1F
1221+ 92A5              ;    cp $fd
1222+ 92A5              ;    jr z,1F
1223+ 92A5              ;    cp $fe
1224+ 92A5              ;    jr z,1F
1225+ 92A5 FE FF            cp $ff
1226+ 92A7 28 09            jr z,1F
1227+ 92A9 FE 01            cp $01
1228+ 92AB 28 05            jr z,1F
1229+ 92AD FE 02            cp $02
1230+ 92AF 28 01            jr z,1F
1231+ 92B1 C0               ret nz
1232+ 92B2 04           1 inc b
1233+ 92B3 C9               ret
1234+ 92B4
1235+ 92B4 A7           Compara_cositas_L2 and a
1236+ 92B5 28 0D            jr z,1F
1237+ 92B7              ;    cp $fd
1238+ 92B7              ;    jr z,1F
1239+ 92B7 FE FE            cp $fe
1240+ 92B9 28 09            jr z,1F
1241+ 92BB FE FF            cp $ff
1242+ 92BD 28 05            jr z,1F
1243+ 92BF FE 01            cp $01
1244+ 92C1 28 01            jr z,1F
1245+ 92C3              ;    cp $02
1246+ 92C3              ;    jr z,1F
1247+ 92C3 C0               ret nz
1248+ 92C4 04           1 inc b
1249+ 92C5 C9               ret
1250+ 92C6
1251+ 92C6 A7           Compara_cositas_H1 and a
1252+ 92C7 28 11            jr z,1F
1253+ 92C9              ;    cp $fd
1254+ 92C9              ;    jr z,1F
1255+ 92C9              ;    cp $fe
1256+ 92C9              ;    jr z,1F
1257+ 92C9 FE FF            cp $ff
1258+ 92CB 28 0D            jr z,1F
1259+ 92CD FE 01            cp $01
1260+ 92CF 28 09            jr z,1F
1261+ 92D1 FE 02            cp $02
1262+ 92D3 28 05            jr z,1F
1263+ 92D5 FE 03            cp $03
1264+ 92D7 28 01            jr z,1F
1265+ 92D9 C0               ret nz
1266+ 92DA 04           1 inc b
1267+ 92DB C9               ret
1268+ 92DC
1269+ 92DC A7           Compara_cositas_L1 and a
1270+ 92DD 28 0D            jr z,1F
1271+ 92DF              ;    cp $fd
1272+ 92DF              ;    jr z,1F
1273+ 92DF              ;    cp $fe
1274+ 92DF              ;    jr z,1F
1275+ 92DF              ;    cp $ff
1276+ 92DF              ;    jr z,1F
1277+ 92DF FE 01            cp $01
1278+ 92E1 28 09            jr z,1F
1279+ 92E3 FE 02            cp $02
1280+ 92E5 28 05            jr z,1F
1281+ 92E7 FE 03            cp $03
1282+ 92E9 28 01            jr z,1F
1283+ 92EB C0               ret nz
1284+ 92EC 04           1 inc b
1285+ 92ED C9               ret
1286+ 92EE
1287+ 92EE A7           Compara_cositas_H3 and a
1288+ 92EF 28 0D            jr z,1F
1289+ 92F1              ;    cp $fd
1290+ 92F1              ;    jr z,1F
1291+ 92F1 FE FE            cp $fe
1292+ 92F3 28 09            jr z,1F
1293+ 92F5 FE FF            cp $ff
1294+ 92F7 28 05            jr z,1F
1295+ 92F9 FE 01            cp $01
1296+ 92FB 28 01            jr z,1F
1297+ 92FD              ;    cp $02
1298+ 92FD              ;    jr z,1F
1299+ 92FD              ;    cp $03
1300+ 92FD              ;    jr z,1F
1301+ 92FD C0               ret nz
1302+ 92FE 04           1 inc b
1303+ 92FF C9               ret
1304+ 9300
1305+ 9300 A7           Compara_cositas_L3 and a
1306+ 9301 28 0D            jr z,1F
1307+ 9303              ;    cp $fd
1308+ 9303              ;    jr z,1F
1309+ 9303              ;    cp $fe
1310+ 9303              ;    jr z,1F
1311+ 9303              ;    cp $ff
1312+ 9303              ;    jr z,1F
1313+ 9303 FE 01            cp $01
1314+ 9305 28 09            jr z,1F
1315+ 9307 FE 02            cp $02
1316+ 9309 28 05            jr z,1F
1317+ 930B FE 03            cp $03
1318+ 930D 28 01            jr z,1F
1319+ 930F C0               ret nz
1320+ 9310 04           1 inc b
1321+ 9311 C9               ret
1322+ 9312
1323+ 9312 A7           Compara_cositas_H4 and a
1324+ 9313 28 11            jr z,1F
1325+ 9315 FE FD            cp $fd
1326+ 9317 28 0D            jr z,1F
1327+ 9319 FE FE            cp $fe
1328+ 931B 28 09            jr z,1F
1329+ 931D FE FF            cp $ff
1330+ 931F 28 05            jr z,1F
1331+ 9321 FE 01            cp $01
1332+ 9323 28 01            jr z,1F
1333+ 9325              ;    cp $02
1334+ 9325              ;    jr z,1F
1335+ 9325              ;    cp $03
1336+ 9325              ;    jr z,1F
1337+ 9325 C0               ret nz
1338+ 9326 04           1 inc b
1339+ 9327 C9               ret
1340+ 9328
1341+ 9328 A7           Compara_cositas_L4 and a
1342+ 9329 28 0D            jr z,1F
1343+ 932B              ;    cp $fd
1344+ 932B              ;    jr z,1F
1345+ 932B FE FE            cp $fe
1346+ 932D 28 09            jr z,1F
1347+ 932F FE FF            cp $ff
1348+ 9331 28 05            jr z,1F
1349+ 9333 FE 01            cp $01
1350+ 9335 28 01            jr z,1F
1351+ 9337              ;    cp $02
1352+ 9337              ;    jr z,1F
1353+ 9337              ;    cp $03
1354+ 9337              ;    jr z,1F
1355+ 9337 C0               ret nz
1356+ 9338 04           1 inc b
1357+ 9339 C9               ret
# file closed: Disparo.asm
1273  933A              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 933A              ; ******************************************************************************************************************************************************************************************
   2+ 933A              ;
   3+ 933A              ; 26/06/23
   4+ 933A              ;
   5+ 933A              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 933A
   7+ 933A CD 14 96     Draw call Prepara_draw
   8+ 933D 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 933E A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 933F 28 05        	jr z,2F
  11+ 9341
  12+ 9341 3A DA 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9344 18 0C        	jr 1F
  14+ 9346 2A D8 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9349 22 C8 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 934C CD DB 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 934F              ;													; _la esquina superior izquierda de la pantalla.
  18+ 934F CD 7F 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  19+ 9352 3A F4 89     1 ld a,(Ctrl_0)
  20+ 9355 CB 6F        	bit 5,a
  21+ 9357 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9359
  23+ 9359 CD 71 93     	call Comprueba_limite_horizontal
  24+ 935C CD 01 94     	call Comprueba_limite_vertical
  25+ 935F
  26+ 935F              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 935F
  28+ 935F CD 4E 95     3 call calcula_CColumnass
  29+ 9362 CD 85 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9365 CD DA 95     	call Define_rutina_de_impresion
  31+ 9368
  32+ 9368 3A F4 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 936B CB AF        	res 5,a											; _a ser de utilidad.
  34+ 936D 32 F4 89     	ld (Ctrl_0),a
  35+ 9370
  36+ 9370 C9           	ret
  37+ 9371
  38+ 9371              ; *******************************************************************************************************************************************************************************************
  39+ 9371              ;	21/01/23
  40+ 9371              ;
  41+ 9371              ; 	Comprueba_limite_horizontal.
  42+ 9371              ;
  43+ 9371              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 9371              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 9371              ;
  46+ 9371              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 9371              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 9371              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 9371              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 9371
  51+ 9371
  52+ 9371
  53+ 9371 3A F4 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9374 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9376 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9378 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 937A 32 F4 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 937D 18 09            jr 6F
  59+ 937F CB 5F        1 bit 3,a
  60+ 9381 28 0A            jr z,2F
  61+ 9383 E6 F7            and $f7
  62+ 9385 32 F4 89         ld (Ctrl_0),a
  63+ 9388 CD DB 94     6 call Inicializacion
  64+ 938B 18 5B            jr 5F
  65+ 938D E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 938E
  67+ 938E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 938E              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 938E
  70+ 938E EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 938F 2A 03 8A     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 9392 CD E0 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9395 67           	ld h,a
  74+ 9396 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9397 CD E0 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 939A 67           	ld h,a
  77+ 939B A7           	and a
  78+ 939C ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 939E 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 939F 3A DA 89     	ld a,(Cuad_objeto)
  81+ 93A2 FE 02        	cp 2
  82+ 93A4 38 1E        	jr c,3F
  83+ 93A6 28 1C        	jr z,3F
  84+ 93A8 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 93A9 28 23            jr z,7F
  86+ 93AB 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 93AD 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 93AF E1           	pop hl
  89+ 93B0
  90+ 93B0              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 93B0              ; _para indicar con E="2" en caso necesario.
  92+ 93B0
  93+ 93B0 E5               push hl
  94+ 93B1 C5               push bc
  95+ 93B2 CD E0 98     	call calcula_tercio
  96+ 93B5 FE 01        	cp 1
  97+ 93B7 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 93B9 CD E9 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 93BC 28 26            jr z,9F
 100+ 93BE 38 24            jr c,9F
 101+ 93C0 1E 00        11 ld e,0
 102+ 93C2 18 22            jr 8F
 103+ 93C4 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 93C5 28 07        	jr z, 7F
 105+ 93C7 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 93C9 1E 00         	ld e,0
 107+ 93CB E1           	pop hl
 108+ 93CC 18 04        	jr 4F
 109+ 93CE 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93D0 18 15            jr 10F
 111+ 93D2
 112+ 93D2              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93D2              ; _para indicar con E="2" en caso necesario.
 114+ 93D2
 115+ 93D2 E5           4 push hl
 116+ 93D3 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93D4 CD E0 98     	call calcula_tercio
 118+ 93D7 FE 01        	cp 1
 119+ 93D9 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93DB CD E9 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93DE 28 04            jr z,9F
 122+ 93E0 30 02            jr nc,9F
 123+ 93E2 18 02        	jr 8F
 124+ 93E4 1E 02        9 ld e,2
 125+ 93E6 C1           8 pop bc
 126+ 93E7 E1           10 pop hl
 127+ 93E8 C9           5 ret
 128+ 93E9
 129+ 93E9              ; --------------------
 130+ 93E9              ;
 131+ 93E9              ; 25/08/22
 132+ 93E9
 133+ 93E9 CD E0 98     Comprueba_centro call calcula_tercio
 134+ 93EC 67               ld h,a
 135+ 93ED 08           	ex af,af
 136+ 93EE FE 02        	cp 2
 137+ 93F0 38 07        	jr c,1F
 138+ 93F2 28 05        	jr z,1F
 139+ 93F4 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93F7 18 03        	jr 2F
 141+ 93F9 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93FC 08           2 ex af,af
 143+ 93FD A7               and a
 144+ 93FE ED 42            sbc hl,bc
 145+ 9400 C9               ret
 146+ 9401
 147+ 9401              ; *********************************************************************************************************************************************************************************************
 148+ 9401              ;
 149+ 9401              ;   16/8/22
 150+ 9401              ;
 151+ 9401              ;	Comprueba_limite_vertical
 152+ 9401              ;
 153+ 9401              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 9401              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 9401              ;
 156+ 9401
 157+ 9401 2A C8 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 9404 7D           	ld a,l
 159+ 9405 E6 1F        	and $1F
 160+ 9407 57           	ld d,a
 161+ 9408 3A 05 8A     	ld a,(Limite_vertical)
 162+ 940B BA           	cp d 											; Límite - Posición.
 163+ 940C 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 940D 3A DA 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 9410 CB 47        	bit 0,a
 166+ 9412 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 9414
 168+ 9414              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 9414
 170+ 9414 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 9415 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9417
 173+ 9417              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9417              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9417
 176+ 9417 3A CC 89         ld a,(Coordenada_X)
 177+ 941A 16 0F            ld d,Centro_izquierda
 178+ 941C A7               and a
 179+ 941D 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 941E 28 1E            jr z,3F
 181+ 9420 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 9422              ;                                                    ; _salimos sin modificar nada.
 183+ 9422 18 0E            jr 2F
 184+ 9424 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9425 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9427
 187+ 9427              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9427              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9427
 190+ 9427 3A CC 89         ld a,(Coordenada_X)
 191+ 942A 16 10            ld d,Centro_derecha
 192+ 942C A7               and a
 193+ 942D 92               sub d
 194+ 942E 28 0E            jr z,3F
 195+ 9430 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 9432              ;                                                    ; _salimos sin modificar nada.
 197+ 9432 CB 43        2 bit 0,e
 198+ 9434 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9436 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9437 CD CB 94         call Modificaccionne
 201+ 943A C1           	pop bc
 202+ 943B CD DB 94         call Inicializacion
 203+ 943E C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 943F
 205+ 943F              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 943F
 207+ 943F C5           4 push bc
 208+ 9440 01 C7 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9443 0A           	ld a,(bc)
 210+ 9444 3D           	dec a
 211+ 9445 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9446 7D           	ld a,l
 213+ 9447 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9448 CB 47        	bit 0,a
 215+ 944A 28 03        	jr z,5F
 216+ 944C 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 944D 18 2E        	jr 7F
 218+ 944F
 219+ 944F              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 944F
 221+ 944F 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 9450 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 9451 3A F4 89     	ld a,(Ctrl_0)
 224+ 9454 CB 4F        	bit 1,a
 225+ 9456 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9458 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9459
 228+ 9459              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9459
 230+ 9459 1C               inc e
 231+ 945A 1D               dec e
 232+ 945B 20 07            jr nz,12F
 233+ 945D 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 945E 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 945F 22 C8 89     	ld (Posicion_actual),hl
 236+ 9462 18 44        13 jr 9F
 237+ 9464 CB 43        12 bit 0,e
 238+ 9466 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9468              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9468 C1           	pop bc
 241+ 9469 18 D3        	jr 3B
 242+ 946B 80           14 add b
 243+ 946C 6F               ld l,a
 244+ 946D 22 C8 89     	ld (Posicion_actual),hl
 245+ 9470 CD CB 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9473 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9475 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9477 32 F4 89         ld (Ctrl_0),a
 249+ 947A F1           	pop af
 250+ 947B 18 2B        	jr 9F
 251+ 947D
 252+ 947D              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 947D
 254+ 947D F5           7 push af
 255+ 947E 3A F4 89     	ld a,(Ctrl_0)
 256+ 9481 CB 47        	bit 0,a
 257+ 9483 20 1D        	jr nz,8F
 258+ 9485 F1           	pop af
 259+ 9486
 260+ 9486              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9486
 262+ 9486 1C           	inc e
 263+ 9487 1D               dec e
 264+ 9488 20 07            jr nz,10F
 265+ 948A 90           	sub b
 266+ 948B 6F               ld l,a
 267+ 948C 22 C8 89     	ld (Posicion_actual),hl
 268+ 948F 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 9491              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 9491 CB 43        10 bit 0,e
 271+ 9493 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9495              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9495 C1           	pop bc
 274+ 9496 18 A6        	jr 3B
 275+ 9498 90           16 sub b
 276+ 9499 6F               ld l,a
 277+ 949A 22 C8 89     	ld (Posicion_actual),hl
 278+ 949D CD CB 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 94A0 18 06            jr 9F
 280+ 94A2 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 94A4 32 F4 89         ld (Ctrl_0),a
 282+ 94A7 F1           	pop af
 283+ 94A8 C1           9 pop bc
 284+ 94A9 1E 00        	ld e,0
 285+ 94AB CD DB 94         call Inicializacion
 286+ 94AE F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 94AF 08           	ex af,af
 288+ 94B0 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 94B1 18 8B            jr 3B
 290+ 94B3
 291+ 94B3              ; --------------------
 292+ 94B3
 293+ 94B3 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 94B5 CD 2F 96     1 call PreviousScan
 295+ 94B8 10 FB            djnz 1B
 296+ 94BA 22 C8 89     	ld (Posicion_actual),hl
 297+ 94BD AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 94BE C9           	ret
 299+ 94BF
 300+ 94BF              ; --------------------
 301+ 94BF
 302+ 94BF 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 94C1 CD 20 96     1 call NextScan
 304+ 94C4 10 FB            djnz 1B
 305+ 94C6 22 C8 89     	ld (Posicion_actual),hl
 306+ 94C9 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94CA C9           	ret
 308+ 94CB
 309+ 94CB              ; --------------------
 310+ 94CB              ;
 311+ 94CB              ;	22/01/23
 312+ 94CB              ;
 313+ 94CB              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94CB              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94CB              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94CB
 317+ 94CB
 318+ 94CB              Modificaccionne
 319+ 94CB
 320+ 94CB 3A DA 89     	ld a,(Cuad_objeto)
 321+ 94CE FE 02        	cp 2
 322+ 94D0 CC B3 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94D3 DC B3 94         call c,Modifica_Pos_actual
 324+ 94D6 C8           	ret z
 325+ 94D7 CD BF 94         call Modifica_Pos_actual2
 326+ 94DA C9               ret
 327+ 94DB
 328+ 94DB              ; *************************************************************************************************************************************************************************************************
 329+ 94DB              ;
 330+ 94DB              ;	13/8/22
 331+ 94DB              ;
 332+ 94DB              ;	Inicializacion
 333+ 94DB              ;
 334+ 94DB              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94DB              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94DB              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94DB              ;
 338+ 94DB              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94DB              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94DB              ;	_ desaparece/aparece.
 341+ 94DB
 342+ 94DB              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94DB              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94DB              ;
 345+ 94DB              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94DB              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94DB              ; 		   [E] ="0"
 348+ 94DB
 349+ 94DB              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94DB
 351+ 94DB CD E0 98     Inicializacion call calcula_tercio
 352+ 94DE 28 36        	jr z,primit
 353+ 94E0 E6 02        	and 2
 354+ 94E2 20 07        	jr nz,segmit
 355+ 94E4 7D           	ld a,l
 356+ 94E5 FE 7F        	cp $7f
 357+ 94E7 38 2D        	jr c,primit
 358+ 94E9 28 2B        	jr z,primit
 359+ 94EB CD 48 95     segmit call column
 360+ 94EE 38 13        	jr c,tercuad
 361+ 94F0 3E 04        cuarcuad ld a,4
 362+ 94F2 32 DA 89     	ld (Cuad_objeto),a
 363+ 94F5 21 20 48     	ld hl,$4820
 364+ 94F8 22 03 8A     	ld (Limite_horizontal),hl
 365+ 94FB 21 05 8A     	ld hl,Limite_vertical
 366+ 94FE 36 0D        	ld (hl),$0d
 367+ 9500 08           	ex af,af
 368+ 9501 18 3C        	jr 1F
 369+ 9503              tercuad
 370+ 9503 3E 03        	ld a,3
 371+ 9505 32 DA 89     	ld (Cuad_objeto),a
 372+ 9508 21 20 48     	ld hl,$4820
 373+ 950B 22 03 8A     	ld (Limite_horizontal),hl
 374+ 950E 21 05 8A     	ld hl,Limite_vertical
 375+ 9511 36 12        	ld (hl),$12
 376+ 9513 08           	ex af,af
 377+ 9514 18 29        	jr 1F
 378+ 9516 CD 48 95     primit call column
 379+ 9519 38 13        	jr c, primcuad
 380+ 951B              segcuad
 381+ 951B 3E 02        	ld a,2
 382+ 951D 32 DA 89     	ld (Cuad_objeto),a
 383+ 9520 21 C0 4F     	ld hl,$4fc0
 384+ 9523 22 03 8A     	ld (Limite_horizontal),hl
 385+ 9526 21 05 8A     	ld hl,Limite_vertical
 386+ 9529 36 0D        	ld (hl),$0d
 387+ 952B 08           	ex af,af
 388+ 952C 18 11        	jr 1F
 389+ 952E              primcuad
 390+ 952E 3E 01        	ld a,1
 391+ 9530 32 DA 89     	ld (Cuad_objeto),a
 392+ 9533 21 C0 4F     	ld hl,$4fc0
 393+ 9536 22 03 8A     	ld (Limite_horizontal),hl
 394+ 9539 21 05 8A     	ld hl,Limite_vertical
 395+ 953C 36 12        	ld (hl),$12
 396+ 953E 08           	ex af,af
 397+ 953F CD 6B 9C     1 call Genera_coordenadas
 398+ 9542 21 F4 89     	ld hl,Ctrl_0
 399+ 9545 CB EE        	set 5,(hl)
 400+ 9547 C9           	ret
 401+ 9548
 402+ 9548              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9548
 404+ 9548              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9548              ;
 406+ 9548              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9548
 408+ 9548 7D           column ld a,l
 409+ 9549 E6 1F        	and $1f
 410+ 954B FE 10         	cp $10
 411+ 954D C9            	ret
 412+ 954E
 413+ 954E              ; --------------------------------------------------------------------------------------------------------------------
 414+ 954E              ;
 415+ 954E              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 954E              ;
 417+ 954E              ; 14/12/22
 418+ 954E              ;
 419+ 954E              ;	Modifica: A y BC.
 420+ 954E
 421+ 954E 3A DA 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 9551 E6 01        	and 1
 423+ 9553 28 17        	jr z,1F
 424+ 9555
 425+ 9555              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9555
 427+ 9555 3A CC 89     	ld a,(Coordenada_X)
 428+ 9558 47           	ld b,a
 429+ 9559 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 955A 79           	ld a,c
 431+ 955B 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 955C 38 08        	jr c,2F
 433+ 955E 47           	ld b,a
 434+ 955F 79           	ld a,c
 435+ 9560 90           	sub b
 436+ 9561 32 02 8A     	ld (Columnas),a
 437+ 9564 18 1B        	jr 4F
 438+ 9566 79           2 ld a,c
 439+ 9567 32 02 8A     	ld (Columnas),a
 440+ 956A 18 15        	jr 4F
 441+ 956C
 442+ 956C              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 956C
 444+ 956C 3A CC 89     1 ld a,(Coordenada_X)
 445+ 956F 81           	add c
 446+ 9570 3D           	dec a
 447+ 9571 D6 1F        	sub $1f
 448+ 9573 38 08        	jr c,3F
 449+ 9575 47           	ld b,a
 450+ 9576 79           	ld a,c
 451+ 9577 90           	sub b
 452+ 9578 32 02 8A     	ld (Columnas),a
 453+ 957B 18 04        	jr 4F
 454+ 957D 79           3 ld a,c
 455+ 957E 32 02 8A     	ld (Columnas),a
 456+ 9581 D9           4 exx
 457+ 9582 4F           	ld c,a
 458+ 9583 D9           	exx
 459+ 9584 C9            ret
 460+ 9585
 461+ 9585              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9585              ;
 463+ 9585              ; 7/1/23
 464+ 9585              ;
 465+ 9585              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9585              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9585              ;
 468+ 9585              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
 469+ 9585              ;	DESTRUYE: HL,B Y A.
 470+ 9585
 471+ 9585 3A DA 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 472+ 9588 FE 02        	cp 2
 473+ 958A 38 18        	jr c,1F
 474+ 958C 28 16        	jr z,1F
 475+ 958E E6 01        	and 1
 476+ 9590 28 0D        	jr z,3F
 477+ 9592
 478+ 9592              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 479+ 9592
 480+ 9592 CD CE 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 481+ 9595
 482+ 9595 7D           9 ld a,l
 483+ 9596 E6 1F        	and $1f
 484+ 9598 28 2A        	jr z,7F
 485+ 959A 2B           	dec hl
 486+ 959B 10 F8        	djnz 9B
 487+ 959D 18 25        	jr 7F
 488+ 959F
 489+ 959F              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 490+ 959F
 491+ 959F 2A C8 89     3 ld hl,(Posicion_actual)
 492+ 95A2 18 20        	jr 7F
 493+ 95A4
 494+ 95A4 28 14        1 jr z,2F
 495+ 95A6
 496+ 95A6              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 497+ 95A6
 498+ 95A6 CD CE 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 499+ 95A9
 500+ 95A9 7D           4 ld a,l
 501+ 95AA E6 1F        	and $1f
 502+ 95AC 28 03        	jr z,6F
 503+ 95AE 2B           	dec hl
 504+ 95AF 10 F8        	djnz 4B
 505+ 95B1 06 0F        6 ld b,15
 506+ 95B3 CD 2F 96     5 call PreviousScan
 507+ 95B6 10 FB        	djnz 5B
 508+ 95B8 18 0A        	jr 7F
 509+ 95BA
 510+ 95BA              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 511+ 95BA
 512+ 95BA CD CE 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 513+ 95BD 06 0F        	ld b,15
 514+ 95BF CD 2F 96     8 call PreviousScan
 515+ 95C2 10 FB        	djnz 8B
 516+ 95C4
 517+ 95C4 E5           7 push hl
 518+ 95C5 DD E1        	pop ix
 519+ 95C7
 520+ 95C7 2A CA 89     	ld hl,(Puntero_objeto)
 521+ 95CA E5           	push hl
 522+ 95CB FD E1        	pop iy
 523+ 95CD
 524+ 95CD C9           	ret
 525+ 95CE
 526+ 95CE              ; --------------------------------------------------------------------------------------------------------------------
 527+ 95CE              ;
 528+ 95CE              ;	2/1/23
 529+ 95CE              ;
 530+ 95CE              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 531+ 95CE              ;
 532+ 95CE              ;	Tras esta rutina tenemos:
 533+ 95CE              ;
 534+ 95CE              ;	OUTPUT: HL contiene (Posicion_actual).
 535+ 95CE              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 536+ 95CE              ;
 537+ 95CE              ;	DESTRUYE!!!!! HL,B y A.
 538+ 95CE
 539+ 95CE 2A C8 89     Operandos ld hl,(Posicion_actual)
 540+ 95D1 3A 02 8A     	ld a,(Columnas)
 541+ 95D4 3D           	dec a
 542+ 95D5 20 01        	jr nz,1F
 543+ 95D7 3C           	inc a
 544+ 95D8 47           1 ld b,a
 545+ 95D9 C9           	ret
 546+ 95DA
 547+ 95DA              ; --------------------------------------------------------------------------------------------------------------------
 548+ 95DA              ;
 549+ 95DA              ;	3/1/23
 550+ 95DA              ;
 551+ 95DA              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 552+ 95DA              ;
 553+ 95DA              ;	Destruye: A,B,HL y DE.
 554+ 95DA
 555+ 95DA              Define_rutina_de_impresion
 556+ 95DA
 557+ 95DA 3A C7 89     	ld a,(Columns)
 558+ 95DD 47           	ld b,a
 559+ 95DE 3A 02 8A     	ld a,(Columnas)
 560+ 95E1 B8           	cp b
 561+ 95E2 20 0D        	jr nz,2f
 562+ 95E4
 563+ 95E4              ;	La entidad se imprime entera.
 564+ 95E4
 565+ 95E4 21 B0 96     	ld hl, Indice_entidades_completas
 566+ 95E7 E6 01        	and 1
 567+ 95E9 28 02        	jr z,1F
 568+ 95EB
 569+ 95EB 23           	inc hl
 570+ 95EC 23           	inc hl
 571+ 95ED
 572+ 95ED CD 2E 8D     1 call Extrae_address
 573+ 95F0 C9           	ret		;	ret
 574+ 95F1
 575+ 95F1              ;	La entidad no se imprime entera en pantalla.
 576+ 95F1
 577+ 95F1 3A DA 89     2 ld a,(Cuad_objeto)
 578+ 95F4 E6 01        	and 1
 579+ 95F6 28 17        	jr z,3F
 580+ 95F8
 581+ 95F8              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 582+ 95F8
 583+ 95F8 21 B4 96     	ld hl, Indice_entidades_incompletas_izquierda
 584+ 95FB 3A C7 89     4 ld a,(Columns)
 585+ 95FE E6 01        	and 1
 586+ 9600 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 587+ 9602
 588+ 9602 23           	inc hl
 589+ 9603 23           	inc hl
 590+ 9604
 591+ 9604 3A 02 8A     	ld a,(Columnas)
 592+ 9607 E6 01        	and 1
 593+ 9609 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 594+ 960B
 595+ 960B 23           	inc hl
 596+ 960C 23           	inc hl
 597+ 960D
 598+ 960D 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 599+ 960F
 600+ 960F 21 BA 96     3 ld hl, Indice_entidades_incompletas_derecha
 601+ 9612 18 E7        	jr 4B
 602+ 9614
 603+ 9614              ; --------------------------------------------------------------------------------------------------------------------
 604+ 9614              ;
 605+ 9614              ;	Prepara_draw
 606+ 9614              ;
 607+ 9614              ;	Es una rutina de carga.
 608+ 9614              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 609+ 9614              ;
 610+ 9614              ;	FUNCIONAMIENTO:
 611+ 9614              ;
 612+ 9614              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 613+ 9614              ;	- LD (Posicion_actual) del objeto en [HL].
 614+ 9614              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 615+ 9614              ;
 616+ 9614              ;	DESTRUYE:
 617+ 9614              ;
 618+ 9614              ;	Logicamente, BC,HL y E quedan destruidos.
 619+ 9614
 620+ 9614 21 C6 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 621+ 9617 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 622+ 9618 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 623+ 9619 4E           	ld c,(hl)
 624+ 961A 2A C8 89     	ld hl,(Posicion_actual)
 625+ 961D 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 626+ 961F C9           	ret
 627+ 9620
 628+ 9620              ;----------------------------------------------------------------------------------------------------------------
 629+ 9620              ;
 630+ 9620              ;	5/08/22
 631+ 9620              ;
 632+ 9620              ;   NextScan.
 633+ 9620              ;
 634+ 9620              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 635+ 9620              ;
 636+ 9620              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 637+ 9620              ;
 638+ 9620              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 639+ 9620              ;
 640+ 9620              ;       DESTRUIDOS: AF y HL !!!
 641+ 9620              ;
 642+ 9620              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 643+ 9620              ;
 644+ 9620
 645+ 9620 24           NextScan inc h          ; Incrementamos el scanline.
 646+ 9621 7C               ld a,h
 647+ 9622 E6 07            and 7
 648+ 9624 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 649+ 9625
 650+ 9625 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 651+ 9626 C6 20            add a,$20           ; Vamos a comprobarlo...
 652+ 9628 6F               ld l,a
 653+ 9629 D8               ret c               ; Salimos si se produce el cambio de tercio.
 654+ 962A
 655+ 962A 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 656+ 962B D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 657+ 962D 67               ld h,a
 658+ 962E C9               ret
 659+ 962F
 660+ 962F              ;----------------------------------------------------------------------------------------------------------------
 661+ 962F              ;
 662+ 962F              ;	5/08/22
 663+ 962F              ;
 664+ 962F              ;   PreviousScan.
 665+ 962F              ;
 666+ 962F              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 667+ 962F              ;
 668+ 962F              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 669+ 962F              ;
 670+ 962F              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 962F              ;
 672+ 962F              ;       DESTRUIDOS: AF y HL !!!
 673+ 962F              ;
 674+ 962F              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 962F              ;
 676+ 962F
 677+ 962F 7C           PreviousScan ld a,h
 678+ 9630 25               dec h               ; Dec H.
 679+ 9631 E6 07            and 7
 680+ 9633 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9634
 682+ 9634 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 683+ 9635 D6 20            sub $20             ; Vamos a comprobarlo...
 684+ 9637 6F               ld l,a
 685+ 9638 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 686+ 9639
 687+ 9639 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 688+ 963A C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 689+ 963C 67               ld h,a
 690+ 963D C9               ret
 691+ 963E
 692+ 963E              ; -----------------------------------------------------------------------------------
 693+ 963E              ;
 694+ 963E              ;	28/2/23
 695+ 963E              ;
 696+ 963E              ;	Rutina principal de pintado de entidades/Amadeus.
 697+ 963E              ;	Extrae fotos de Album_de_fotos.
 698+ 963E
 699+ 963E 3A 14 8A     Extrae_foto_entidades ld a,(Numero_de_malotes)
 700+ 9641 A7           	and a
 701+ 9642 C8           	ret z
 702+ 9643 ED 73 19 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 703+ 9647 31 00 70     	ld sp,Album_de_fotos
 704+ 964A
 705+ 964A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 706+ 964C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 707+ 964D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 708+ 964E
 709+ 964E ED 73 1B 8A  	ld (Stack_2),sp
 710+ 9652 ED 7B 19 8A  	ld sp,(Stack)
 711+ 9656
 712+ 9656              ; Fabrica la llamada a la correspondiente rutina de impresión.
 713+ 9656
 714+ 9656 3E CD        	ld a,$cd
 715+ 9658 32 60 96     	ld (Imprime),a
 716+ 965B EB           	ex de,hl
 717+ 965C 22 61 96     	ld (Imprime+1),hl
 718+ 965F EB           	ex de,hl
 719+ 9660
 720+ 9660              ; Ejecuta la llamada:	CALL $xx,xx
 721+ 9660
 722+ 9660 00 00 00     Imprime db 0,0,0
 723+ 9663
 724+ 9663 3A 14 8A     	ld a,(Numero_de_malotes)
 725+ 9666 3D           	dec a
 726+ 9667 28 09        	jr z,1F
 727+ 9669 32 14 8A      	ld (Numero_de_malotes),a
 728+ 966C
 729+ 966C ED 7B 1B 8A   	ld sp,(Stack_2)
 730+ 9670 18 D8        	jr 2B
 731+ 9672
 732+ 9672 AF           1 xor a
 733+ 9673 32 1B 8A     	ld (Stack_2),a
 734+ 9676 C9           	ret
 735+ 9677
 736+ 9677              ; -----------------------------------------------------------------------------------
 737+ 9677              ;
 738+ 9677              ;	28/2/23
 739+ 9677              ;
 740+ 9677              ;	Pinta los disparos generados.
 741+ 9677
 742+ 9677              Extrae_foto_disparos
 743+ 9677
 744+ 9677 3A 21 8A     	ld a,(Numero_de_disparotes)
 745+ 967A A7           	and a
 746+ 967B C8           	ret z
 747+ 967C ED 73 19 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 748+ 9680 31 85 70     	ld sp,Album_de_fotos_disparos
 749+ 9683
 750+ 9683 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 751+ 9685 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 752+ 9686 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 753+ 9687
 754+ 9687 ED 73 1B 8A  	ld (Stack_2),sp
 755+ 968B ED 7B 19 8A  	ld sp,(Stack)
 756+ 968F
 757+ 968F              ; Fabrica la llamada a la correspondiente rutina de impresión.
 758+ 968F
 759+ 968F 3E CD        	ld a,$cd
 760+ 9691 32 99 96     	ld (Imprime2),a
 761+ 9694 EB           	ex de,hl
 762+ 9695 22 9A 96     	ld (Imprime2+1),hl
 763+ 9698 EB           	ex de,hl
 764+ 9699
 765+ 9699              ; Ejecuta la llamada:	CALL $xx,xx
 766+ 9699
 767+ 9699 00 00 00     Imprime2 db 0,0,0
 768+ 969C
 769+ 969C 3A 21 8A     	ld a,(Numero_de_disparotes)
 770+ 969F 3D           	dec a
 771+ 96A0 28 09        	jr z,1F
 772+ 96A2 32 21 8A      	ld (Numero_de_disparotes),a
 773+ 96A5
 774+ 96A5 ED 7B 1B 8A  	ld sp,(Stack_2)
 775+ 96A9 18 D8        	jr 2B
 776+ 96AB
 777+ 96AB AF           1 xor a
 778+ 96AC 32 1B 8A     	ld (Stack_2),a
 779+ 96AF C9           	ret
 780+ 96B0
# file closed: Draw_XOR.asm
1274  96B0              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96B0              ;   índices de Rutinas de impresión.
   2+ 96B0
   3+ 96B0 C0 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96B2 ED 96            defw Pinta_Amadeus_3x2
   5+ 96B4
   6+ 96B4 43 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96B6 E3 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96B8 97 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96BA
  10+ 96BA 6D 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96BC 71 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96BE 25 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96C0
  14+ 96C0
  15+ 96C0              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96C0              ;
  17+ 96C0              ;   12/12/22
  18+ 96C0              ;
  19+ 96C0              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96C0              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96C0              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96C0              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96C0              ;
  24+ 96C0              ;   Modifica: DE y HL.
  25+ 96C0
  26+ 96C0 ED 73 19 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96C4 FD F9        	ld sp,iy
  28+ 96C6 06 10            ld b,16
  29+ 96C8 D1           1 pop de
  30+ 96C9 7B               ld a,e
  31+ 96CA AE               xor (hl)
  32+ 96CB 77           	ld (hl),a
  33+ 96CC 23           	inc hl
  34+ 96CD 7A               ld a,d
  35+ 96CE AE               xor (hl)
  36+ 96CF 77           	ld (hl),a
  37+ 96D0 2B           	dec hl
  38+ 96D1 24           	inc h
  39+ 96D2 7C               ld a,h
  40+ 96D3 E6 07            and 7
  41+ 96D5 20 0A            jr nz,2F
  42+ 96D7 7D               ld a,l
  43+ 96D8 C6 20            add a,$20
  44+ 96DA 6F               ld l,a
  45+ 96DB 38 04            jr c,2F
  46+ 96DD 7C               ld a,h
  47+ 96DE D6 08            sub 8
  48+ 96E0 67               ld h,a
  49+ 96E1 7C           2 ld a,h
  50+ 96E2 FE 58            cp $58
  51+ 96E4 28 02            jr z,3F
  52+ 96E6 10 E0            djnz 1B
  53+ 96E8 ED 7B 19 8A  3 ld sp,(Stack)
  54+ 96EC C9           	ret
  55+ 96ED
  56+ 96ED ED 73 19 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96F1 FD F9        	ld sp,iy
  58+ 96F3 06 08            ld b,8
  59+ 96F5 D1           1 pop de
  60+ 96F6 7B               ld a,e
  61+ 96F7 AE               xor (hl)
  62+ 96F8 77           	ld (hl),a
  63+ 96F9 23           	inc hl
  64+ 96FA 7A               ld a,d
  65+ 96FB AE               xor (hl)
  66+ 96FC 77           	ld (hl),a
  67+ 96FD 23           	inc hl
  68+ 96FE D1           	pop de
  69+ 96FF 7B               ld a,e
  70+ 9700 AE               xor (hl)
  71+ 9701 77           	ld (hl),a
  72+ 9702 2B           	dec hl
  73+ 9703 2B           	dec hl
  74+ 9704 24           	inc h
  75+ 9705 7C               ld a,h
  76+ 9706 E6 07            and 7
  77+ 9708 20 0A            jr nz,2F
  78+ 970A 7D               ld a,l
  79+ 970B C6 20            add a,$20
  80+ 970D 6F               ld l,a
  81+ 970E 38 04            jr c,2F
  82+ 9710 7C               ld a,h
  83+ 9711 D6 08            sub 8
  84+ 9713 67               ld h,a
  85+ 9714 7C           2 ld a,h
  86+ 9715 FE 58            cp $58
  87+ 9717 28 25            jr z,4F
  88+ 9719 7A               ld a,d
  89+ 971A AE               xor (hl)
  90+ 971B 77               ld (hl),a
  91+ 971C D1           	pop de
  92+ 971D 23           	inc hl
  93+ 971E 7B               ld a,e
  94+ 971F AE               xor (hl)
  95+ 9720 77           	ld (hl),a
  96+ 9721 23           	inc hl
  97+ 9722 7A               ld a,d
  98+ 9723 AE               xor (hl)
  99+ 9724 77           	ld (hl),a
 100+ 9725 2B           	dec hl
 101+ 9726 2B           	dec hl
 102+ 9727 24           	inc h
 103+ 9728 7C               ld a,h
 104+ 9729 E6 07            and 7
 105+ 972B 20 0A            jr nz,3F
 106+ 972D 7D               ld a,l
 107+ 972E C6 20            add a,$20
 108+ 9730 6F               ld l,a
 109+ 9731 38 04            jr c,3F
 110+ 9733 7C               ld a,h
 111+ 9734 D6 08            sub 8
 112+ 9736 67               ld h,a
 113+ 9737 7C           3 ld a,h
 114+ 9738 FE 58            cp $58
 115+ 973A 28 02            jr z,4F
 116+ 973C 10 B7            djnz 1B
 117+ 973E ED 7B 19 8A  4 ld sp,(Stack)
 118+ 9742 C9           	ret
 119+ 9743
 120+ 9743              ; ---------------------------------------------------
 121+ 9743
 122+ 9743 ED 73 19 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9747 FD F9        	ld sp,iy
 124+ 9749
 125+ 9749              ; >>>
 126+ 9749
 127+ 9749 06 10            ld b,16
 128+ 974B D1           1 pop de
 129+ 974C 7A           	ld a,d
 130+ 974D AE           	xor (hl)
 131+ 974E 77           	ld (hl),a
 132+ 974F 24           	inc h
 133+ 9750 7C               ld a,h
 134+ 9751 E6 07            and 7
 135+ 9753 20 0C            jr nz,2F
 136+ 9755 7D               ld a,l
 137+ 9756 C6 20            add a,$20
 138+ 9758 6F               ld l,a
 139+ 9759 38 06            jr c,2F
 140+ 975B 7C               ld a,h
 141+ 975C D6 08            sub 8
 142+ 975E 67               ld h,a
 143+ 975F 18 00            jr 2F
 144+ 9761 7C           2 ld a,h
 145+ 9762 FE 58            cp $58
 146+ 9764 28 02            jr z,3F
 147+ 9766 10 E3            djnz 1B
 148+ 9768 ED 7B 19 8A  3 ld sp,(Stack)
 149+ 976C C9           	ret
 150+ 976D
 151+ 976D ED 73 19 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9771 FD F9        	ld sp,iy
 153+ 9773
 154+ 9773              ; >>>
 155+ 9773
 156+ 9773 06 10            ld b,16
 157+ 9775 D1           1 pop de
 158+ 9776 7B           	ld a,e
 159+ 9777 AE           	xor (hl)
 160+ 9778 77           	ld (hl),a
 161+ 9779 24           	inc h
 162+ 977A 7C               ld a,h
 163+ 977B E6 07            and 7
 164+ 977D 20 0C            jr nz,2F
 165+ 977F 7D               ld a,l
 166+ 9780 C6 20            add a,$20
 167+ 9782 6F               ld l,a
 168+ 9783 38 06            jr c,2F
 169+ 9785 7C               ld a,h
 170+ 9786 D6 08            sub 8
 171+ 9788 67               ld h,a
 172+ 9789 18 00            jr 2F
 173+ 978B 7C           2 ld a,h
 174+ 978C FE 58            cp $58
 175+ 978E 28 02            jr z,3F
 176+ 9790 10 E3            djnz 1B
 177+ 9792 ED 7B 19 8A  3 ld sp,(Stack)
 178+ 9796 C9           	ret
 179+ 9797
 180+ 9797              ; ---------------------------------------------------
 181+ 9797
 182+ 9797 ED 73 19 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 979B FD F9        	ld sp,iy
 184+ 979D 06 08            ld b,8
 185+ 979F D1           1 pop de
 186+ 97A0 7A           	ld a,d
 187+ 97A1 AE           	xor (hl)
 188+ 97A2 77           	ld (hl),a
 189+ 97A3 23           	inc hl
 190+ 97A4 D1           	pop de
 191+ 97A5 7B           	ld a,e
 192+ 97A6 AE           	xor (hl)
 193+ 97A7 77           	ld (hl),a
 194+ 97A8 2B           	dec hl
 195+ 97A9 24            	inc h
 196+ 97AA 7C               ld a,h
 197+ 97AB E6 07            and 7
 198+ 97AD 20 0A            jr nz,2F
 199+ 97AF 7D               ld a,l
 200+ 97B0 C6 20            add a,$20
 201+ 97B2 6F               ld l,a
 202+ 97B3 38 04            jr c,2F
 203+ 97B5 7C               ld a,h
 204+ 97B6 D6 08            sub 8
 205+ 97B8 67               ld h,a
 206+ 97B9 7C           2 ld a,h
 207+ 97BA FE 58            cp $58
 208+ 97BC 28 20            jr z,4F
 209+ 97BE D1               pop de
 210+ 97BF 7B           	ld a,e
 211+ 97C0 AE           	xor (hl)
 212+ 97C1 77           	ld (hl),a
 213+ 97C2 23           	inc hl
 214+ 97C3 7A           	ld a,d
 215+ 97C4 AE           	xor (hl)
 216+ 97C5 77           	ld (hl),a
 217+ 97C6 2B           	dec hl
 218+ 97C7 24           	inc h
 219+ 97C8 7C               ld a,h
 220+ 97C9 E6 07            and 7
 221+ 97CB 20 0A            jr nz,3F
 222+ 97CD 7D               ld a,l
 223+ 97CE C6 20            add a,$20
 224+ 97D0 6F               ld l,a
 225+ 97D1 38 04            jr c,3F
 226+ 97D3 7C               ld a,h
 227+ 97D4 D6 08            sub 8
 228+ 97D6 67               ld h,a
 229+ 97D7 7C           3 ld a,h
 230+ 97D8 FE 58            cp $58
 231+ 97DA 28 02            jr z,4F
 232+ 97DC 10 C1            djnz 1B
 233+ 97DE ED 7B 19 8A  4 ld sp,(Stack)
 234+ 97E2 C9           	ret
 235+ 97E3
 236+ 97E3 ED 73 19 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97E7 FD F9        	ld sp,iy
 238+ 97E9 06 08            ld b,8
 239+ 97EB D1           1 pop de
 240+ 97EC D1           	pop de
 241+ 97ED 7B           	ld a,e
 242+ 97EE AE           	xor (hl)
 243+ 97EF 77           	ld (hl),a
 244+ 97F0 24            	inc h
 245+ 97F1 7C               ld a,h
 246+ 97F2 E6 07            and 7
 247+ 97F4 20 0A            jr nz,2F
 248+ 97F6 7D               ld a,l
 249+ 97F7 C6 20            add a,$20
 250+ 97F9 6F               ld l,a
 251+ 97FA 38 04            jr c,2F
 252+ 97FC 7C               ld a,h
 253+ 97FD D6 08            sub 8
 254+ 97FF 67               ld h,a
 255+ 9800 7C           2 ld a,h
 256+ 9801 FE 58            cp $58
 257+ 9803 28 1B            jr z,4F
 258+ 9805 D1               pop de
 259+ 9806 7A           	ld a,d
 260+ 9807 AE           	xor (hl)
 261+ 9808 77           	ld (hl),a
 262+ 9809 24           	inc h
 263+ 980A 7C               ld a,h
 264+ 980B E6 07            and 7
 265+ 980D 20 0A            jr nz,3F
 266+ 980F 7D               ld a,l
 267+ 9810 C6 20            add a,$20
 268+ 9812 6F               ld l,a
 269+ 9813 38 04            jr c,3F
 270+ 9815 7C               ld a,h
 271+ 9816 D6 08            sub 8
 272+ 9818 67               ld h,a
 273+ 9819 7C           3 ld a,h
 274+ 981A FE 58            cp $58
 275+ 981C 28 02            jr z,4F
 276+ 981E 10 CB            djnz 1B
 277+ 9820 ED 7B 19 8A  4 ld sp,(Stack)
 278+ 9824 C9           	ret
 279+ 9825
 280+ 9825 ED 73 19 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9829 FD F9        	ld sp,iy
 282+ 982B 06 08            ld b,8
 283+ 982D D1           1 pop de
 284+ 982E 7B           	ld a,e
 285+ 982F AE           	xor (hl)
 286+ 9830 77           	ld (hl),a
 287+ 9831 23           	inc hl
 288+ 9832 7A           	ld a,d
 289+ 9833 AE           	xor (hl)
 290+ 9834 77           	ld (hl),a
 291+ 9835 2B           	dec hl
 292+ 9836 24             	inc h
 293+ 9837 7C               ld a,h
 294+ 9838 E6 07            and 7
 295+ 983A 20 0A            jr nz,2F
 296+ 983C 7D               ld a,l
 297+ 983D C6 20            add a,$20
 298+ 983F 6F               ld l,a
 299+ 9840 38 04            jr c,2F
 300+ 9842 7C               ld a,h
 301+ 9843 D6 08            sub 8
 302+ 9845 67               ld h,a
 303+ 9846 7C           2 ld a,h
 304+ 9847 FE 58            cp $58
 305+ 9849 28 21            jr z,4F
 306+ 984B D1               pop de
 307+ 984C 7A           	ld a,d
 308+ 984D AE           	xor (hl)
 309+ 984E 77           	ld (hl),a
 310+ 984F 23           	inc hl
 311+ 9850 D1               pop de
 312+ 9851 7B           	ld a,e
 313+ 9852 AE           	xor (hl)
 314+ 9853 77           	ld (hl),a
 315+ 9854 2B           	dec hl
 316+ 9855 24           	inc h
 317+ 9856 7C               ld a,h
 318+ 9857 E6 07            and 7
 319+ 9859 20 0A            jr nz,3F
 320+ 985B 7D               ld a,l
 321+ 985C C6 20            add a,$20
 322+ 985E 6F               ld l,a
 323+ 985F 38 04            jr c,3F
 324+ 9861 7C               ld a,h
 325+ 9862 D6 08            sub 8
 326+ 9864 67               ld h,a
 327+ 9865 7C           3 ld a,h
 328+ 9866 FE 58            cp $58
 329+ 9868 28 02            jr z,4F
 330+ 986A 10 C1            djnz 1B
 331+ 986C ED 7B 19 8A  4 ld sp,(Stack)
 332+ 9870 C9           	ret
 333+ 9871
 334+ 9871 ED 73 19 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9875 FD F9        	ld sp,iy
 336+ 9877 06 08            ld b,8
 337+ 9879 D1           1 pop de
 338+ 987A 7B           	ld a,e
 339+ 987B AE           	xor (hl)
 340+ 987C 77           	ld (hl),a
 341+ 987D 24            	inc h
 342+ 987E 7C               ld a,h
 343+ 987F E6 07            and 7
 344+ 9881 20 0A            jr nz,2F
 345+ 9883 7D               ld a,l
 346+ 9884 C6 20            add a,$20
 347+ 9886 6F               ld l,a
 348+ 9887 38 04            jr c,2F
 349+ 9889 7C               ld a,h
 350+ 988A D6 08            sub 8
 351+ 988C 67               ld h,a
 352+ 988D 7C           2 ld a,h
 353+ 988E FE 58            cp $58
 354+ 9890 28 1C            jr z,4F
 355+ 9892 D1               pop de
 356+ 9893 7A           	ld a,d
 357+ 9894 AE           	xor (hl)
 358+ 9895 77           	ld (hl),a
 359+ 9896 24           	inc h
 360+ 9897 7C               ld a,h
 361+ 9898 E6 07            and 7
 362+ 989A 20 0A            jr nz,3F
 363+ 989C 7D               ld a,l
 364+ 989D C6 20            add a,$20
 365+ 989F 6F               ld l,a
 366+ 98A0 38 04            jr c,3F
 367+ 98A2 7C               ld a,h
 368+ 98A3 D6 08            sub 8
 369+ 98A5 67               ld h,a
 370+ 98A6 7C           3 ld a,h
 371+ 98A7 FE 58            cp $58
 372+ 98A9 28 03            jr z,4F
 373+ 98AB D1               pop de
 374+ 98AC 10 CB            djnz 1B
 375+ 98AE ED 7B 19 8A  4 ld sp,(Stack)
 376+ 98B2 C9           	ret
 377+ 98B3
 378+ 98B3              ; ---------------------------------------------------
 379+ 98B3              ;
 380+ 98B3              ;   27/02/23
 381+ 98B3              ;
 382+ 98B3              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98B3              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98B3              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98B3
 386+ 98B3 ED 73 19 8A  Pinta_Disparo ld (Stack),sp
 387+ 98B7 FD F9            ld sp,iy
 388+ 98B9 06 04            ld b,4
 389+ 98BB D1           1 pop de
 390+ 98BC 7B               ld a,e
 391+ 98BD AE               xor (hl)
 392+ 98BE 77               ld (hl),a
 393+ 98BF 23               inc hl
 394+ 98C0 7A               ld a,d
 395+ 98C1 AE               xor (hl)
 396+ 98C2 77               ld (hl),a
 397+ 98C3 2B               dec hl
 398+ 98C4
 399+ 98C4 24               inc h
 400+ 98C5 7C               ld a,h
 401+ 98C6 E6 07            and 7
 402+ 98C8 20 0A            jr nz,2F
 403+ 98CA 7D               ld a,l
 404+ 98CB C6 20            add a,$20
 405+ 98CD 6F               ld l,a
 406+ 98CE 38 04            jr c,2F
 407+ 98D0 7C               ld a,h
 408+ 98D1 D6 08            sub 8
 409+ 98D3 67               ld h,a
 410+ 98D4 7C           2 ld a,h
 411+ 98D5 FE 58            cp $58
 412+ 98D7 28 02            jr z,3F
 413+ 98D9
 414+ 98D9 10 E0            djnz 1B
 415+ 98DB ED 7B 19 8A  3 ld sp,(Stack)
 416+ 98DF C9               ret
 417+ 98E0
# file closed: Rutinas_de_impresion_sprites.asm
1275  98E0              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98E0              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98E0              ;
   3+ 98E0              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98E0              ;
   5+ 98E0              ; *****************************************************************************************************************************************************************************************
   6+ 98E0              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98E0
   8+ 98E0 7C           calcula_tercio ld a,h
   9+ 98E1 E6 18        	and $18
  10+ 98E3 CB 2F        	sra a
  11+ 98E5 CB 2F        	sra a
  12+ 98E7 CB 2F        	sra a
  13+ 98E9 C9           	ret
  14+ 98EA
# file closed: calcula_tercio.asm
1276  98EA              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98EA              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98EA              ;
   3+ 98EA              ;
   4+ 98EA              ;	CLS.
   5+ 98EA              ;
   6+ 98EA              ;	Limpia la pantalla y define sus atributos.
   7+ 98EA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98EA              ;
   9+ 98EA              ;	COLORES: 0 ..... NEGRO
  10+ 98EA              ;    		 1 ..... AZUL
  11+ 98EA              ; 			 2 ..... ROJO
  12+ 98EA              ;			 3 ..... MAGENTA
  13+ 98EA              ; 			 4 ..... VERDE
  14+ 98EA              ; 			 5 ..... CIAN
  15+ 98EA              ;			 6 ..... AMARILLO
  16+ 98EA              ; 			 7 ..... BLANCO
  17+ 98EA              ;
  18+ 98EA              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98EA              ;
  20+ 98EA              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98EA
  22+ 98EA
  23+ 98EA 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98ED 11 01 40     	LD DE,$4001
  25+ 98F0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98F3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98F5 ED B0        	LDIR
  28+ 98F7 01 FF 02     	LD BC,767
  29+ 98FA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 98FB ED B0        	LDIR
  31+ 98FD C9           	ret
  32+ 98FE
# file closed: Cls.asm
1277  98FE              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 98FE              ; ******************************************************************************************************************************************************************************************
   2+ 98FE              ;
   3+ 98FE              ;   20/05/23
   4+ 98FE              ;
   5+ 98FE              ;	Recompone_posicion_inicio
   6+ 98FE              ;
   7+ 98FE              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 98FE              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 98FE              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 98FE              ;	_ a una u otra rutina.
  11+ 98FE
  12+ 98FE              Recompone_posicion_inicio
  13+ 98FE
  14+ 98FE 2A D8 89     	ld hl,(Posicion_inicio)
  15+ 9901 7D           	ld a,l
  16+ 9902 E6 1F        	and $1f
  17+ 9904 28 16        	jr z,1F
  18+ 9906
  19+ 9906 FE 1F        	cp $1f
  20+ 9908 28 0D        	jr z,3F
  21+ 990A
  22+ 990A 21 06 8A     	ld hl,Ctrl_2
  23+ 990D CB C6        	set 0,(hl)
  24+ 990F 2A CA 89     	ld hl,(Puntero_objeto)
  25+ 9912 22 09 8A     	ld (Repone_puntero_objeto),hl
  26+ 9915 18 08        	jr 2F
  27+ 9917
  28+ 9917 CD B8 9A     3 call Mov_left
  29+ 991A 18 03        	jr 2F
  30+ 991C
  31+ 991C CD 9A 99     1 call Mov_right
  32+ 991F 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9922 22 CA 89     	ld (Puntero_objeto),hl
  34+ 9925 C9           	ret
  35+ 9926
  36+ 9926              ; ******************************************************************************************************************************************************************************************
  37+ 9926              ;
  38+ 9926              ;   27/05/23
  39+ 9926              ;
  40+ 9926              ;	Mov_down
  41+ 9926              ;
  42+ 9926              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9926              ;
  44+ 9926              ;
  45+ 9926              Mov_down
  46+ 9926
  47+ 9926 CD 88 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9929              ;																	; _ repone (Puntero_objeto).
  49+ 9929 21 F4 89     	ld hl,Ctrl_0
  50+ 992C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 992E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 992E              ; 																	; _ en el caso de que no lo haya.
  53+ 992E 3A DE 89     	ld a,(Vel_down)
  54+ 9931 47           	ld b,a
  55+ 9932 2A C8 89         ld hl,(Posicion_actual)
  56+ 9935 CD E0 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9938 E6 02        	and 2
  58+ 993A 28 0F        	jr z,1F
  59+ 993C
  60+ 993C              ; Nos encontramos en el último tercio de pantalla.
  61+ 993C              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 993C
  63+ 993C 7C           	ld a,h
  64+ 993D FE 57        	cp $57
  65+ 993F 20 0A        	jr nz,1F
  66+ 9941 7D           	ld a,l
  67+ 9942 C6 20        	add $20
  68+ 9944 30 05        	jr nc,1F
  69+ 9946
  70+ 9946              ; ------------------------------
  71+ 9946              ;	call Reaparece_arriba
  72+ 9946 CD 45 9C     	call Reinicio
  73+ 9949              ; ------------------------------
  74+ 9949
  75+ 9949 18 08        	jr 3F
  76+ 994B CD 20 96     1 call NextScan
  77+ 994E 22 C8 89     	ld (Posicion_actual),hl
  78+ 9951 10 E2            djnz 2B
  79+ 9953 CD 6B 9C     3 call Genera_coordenadas
  80+ 9956 C9           	ret
  81+ 9957
  82+ 9957              ; ******************************************************************************************************************************************************************************************
  83+ 9957              ;
  84+ 9957              ;   27/05/23
  85+ 9957              ;
  86+ 9957              ;	Mov_up
  87+ 9957              ;
  88+ 9957              ; 	Mueve el Sprite hacia arriba.
  89+ 9957              ;
  90+ 9957              ;
  91+ 9957              Mov_up
  92+ 9957
  93+ 9957 CD 88 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 995A              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 995A 21 F4 89     	ld hl,Ctrl_0
  96+ 995D CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 995F              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 995F              ; 																		; _ en el caso de que no lo haya.
  99+ 995F 3A DD 89     	ld a,(Vel_up)
 100+ 9962 47           	ld b,a
 101+ 9963 2A C8 89     	ld hl,(Posicion_actual)
 102+ 9966 CD E0 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9969 A7           	and a
 104+ 996A 20 10        	jr nz,1F
 105+ 996C
 106+ 996C              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 996C              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 996C
 109+ 996C 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 996D FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 996F 20 0B            jr nz,1F
 112+ 9971 7D               ld a,l
 113+ 9972 D6 20            sub $20
 114+ 9974 30 06            jr nc,1F
 115+ 9976 25               dec h
 116+ 9977
 117+ 9977              ; -----------------------------
 118+ 9977 CD 26 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 997A              ;	call Reinicio
 120+ 997A              ; -----------------------------
 121+ 997A
 122+ 997A 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 997C CD 2F 96     1 call PreviousScan
 124+ 997F 22 C8 89     	ld (Posicion_actual),hl
 125+ 9982 10 E2            djnz 3B
 126+ 9984 CD 6B 9C     2 call Genera_coordenadas
 127+ 9987 C9           	ret
 128+ 9988
 129+ 9988              ; -----------------------------
 130+ 9988              ;
 131+ 9988              ;	27/5/23
 132+ 9988              ;
 133+ 9988              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 9988              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 9988              ;
 136+ 9988              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 9988              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 9988              ;
 139+ 9988              ;	Modifica: A y (Puntero_objeto).
 140+ 9988
 141+ 9988 3A 06 8A     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 998B CB 47        	bit 0,a
 143+ 998D C8           	ret z
 144+ 998E CB 87        	res 0,a
 145+ 9990 32 06 8A     	ld (Ctrl_2),a
 146+ 9993 2A 09 8A     	ld hl,(Repone_puntero_objeto)
 147+ 9996 22 CA 89     	ld (Puntero_objeto),hl
 148+ 9999 C9           	ret
 149+ 999A
 150+ 999A              ; ******************************************************************************************************************************************************************************************
 151+ 999A              ;
 152+ 999A              ;	19/10/22
 153+ 999A              ;
 154+ 999A              ;	Mov_right.
 155+ 999A              ;
 156+ 999A              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 999A              ;
 158+ 999A
 159+ 999A 21 F4 89     Mov_right ld hl,Ctrl_0
 160+ 999D CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 999F              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 999F              ; 																	; _ en el caso de que no lo haya.
 163+ 999F 3A F4 89     	ld a,(Ctrl_0)
 164+ 99A2 CB 77        	bit 6,a
 165+ 99A4 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 99A6
 167+ 99A6 CD D4 9B     	call Stop_Amadeus_right
 168+ 99A9 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 99AA 18 4D        	jr 8F
 170+ 99AC
 171+ 99AC 3A CC 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 99AF FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 99B1 20 46        	jr nz,8F
 174+ 99B3
 175+ 99B3 3A CE 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 99B6 A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 99B7 28 40        	jr z,8F
 178+ 99B9
 179+ 99B9              ; ---------- ---------- ----------
 180+ 99B9              ;
 181+ 99B9              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 99B9
 183+ 99B9 3A DC 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 99BC FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 99BE 28 11        	jr z,1F
 186+ 99C0 38 06        	jr c,6F
 187+ 99C2 FE 04        	cp 4
 188+ 99C4 28 14        	jr z,7F
 189+ 99C6 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 99C8
 191+ 99C8              ; ---------- ---------- ----------
 192+ 99C8              ;
 193+ 99C8              ; Perfiles de velocidad
 194+ 99C8              ;
 195+ 99C8
 196+ 99C8 3A CE 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 99CB FE FE        	cp $fe
 198+ 99CD 20 2A        	jr nz,8F
 199+ 99CF 18 10        	jr 3F
 200+ 99D1 3A CE 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99D4 FE FD        	cp $fd
 202+ 99D6 20 21        	jr nz,8F
 203+ 99D8 18 07        	jr 3F
 204+ 99DA 3A CE 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99DD FE FB        	cp $fb
 206+ 99DF 20 18        	jr nz,8F
 207+ 99E1
 208+ 99E1              ; ---------- ---------- ----------
 209+ 99E1
 210+ 99E1              3
 211+ 99E1 CD 14 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99E4              ;	call Reinicio
 213+ 99E4
 214+ 99E4              ; ---------- ---------- ----------
 215+ 99E4              ;
 216+ 99E4              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99E4
 218+ 99E4 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99E6 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99E7 CD 00 9A     	call DESPLZ_DER
 221+ 99EA C1           	pop bc
 222+ 99EB 10 F9        	djnz 5B
 223+ 99ED 2A C8 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99F0 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99F1 22 C8 89     	ld (Posicion_actual),hl
 226+ 99F4 CD 6B 9C     	call Genera_coordenadas
 227+ 99F7 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 99F9
 229+ 99F9              ; ---------- ---------- ----------
 230+ 99F9
 231+ 99F9 2A C8 89     8 ld hl,(Posicion_actual)
 232+ 99FC CD 00 9A     	call DESPLZ_DER
 233+ 99FF C9           2 ret
 234+ 9A00
 235+ 9A00              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 9A00              ;
 237+ 9A00              ;	22/9/22
 238+ 9A00              ;
 239+ 9A00
 240+ 9A00 CD 0F 9A     DESPLZ_DER call Desplaza_derecha
 241+ 9A03 CD 5B 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 9A06 CD 84 9A         call Ciclo_completo
 243+ 9A09 21 F4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 9A0C CB FE        	set 7,(hl)
 245+ 9A0E C9           	ret
 246+ 9A0F
 247+ 9A0F              ; ******************************************************************************************************************************************************************************************
 248+ 9A0F              ;	15/02/23
 249+ 9A0F              ;
 250+ 9A0F
 251+ 9A0F 3A DC 89     Desplaza_derecha ld a,(Vel_right)
 252+ 9A12 47           	ld b,a
 253+ 9A13 2A D4 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 9A16 23           1 inc hl
 255+ 9A17 23           	inc hl
 256+ 9A18 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 9A1A 22 D4 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 9A1D CD 2E 8D     	call Extrae_address
 259+ 9A20 22 CA 89     	ld (Puntero_objeto),hl
 260+ 9A23
 261+ 9A23              ; Modifica (Puntero_DESPLZ_izq).
 262+ 9A23
 263+ 9A23              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 9A23              ; Cuántos movimientos hemos hecho ??
 265+ 9A23              ; DE contiene (Puntero_DESPLZ_der).
 266+ 9A23
 267+ 9A23 2A D0 89     7 ld hl,(Indice_Sprite_der)
 268+ 9A26 EB           	ex de,hl
 269+ 9A27 A7           	and a
 270+ 9A28 ED 52        	sbc hl,de
 271+ 9A2A CB 3D        	srl l
 272+ 9A2C 3E 08        6 ld a,8
 273+ 9A2E 95           	sub l
 274+ 9A2F 30 1E        	jr nc,3F
 275+ 9A31
 276+ 9A31              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A31              ; B="0".
 278+ 9A31
 279+ 9A31 04           4 inc b
 280+ 9A32 3C           	inc a
 281+ 9A33 20 FC        	jr nz,4B
 282+ 9A35 78           	ld a,b
 283+ 9A36 08           	ex af,af
 284+ 9A37 2A D0 89     	ld hl,(Indice_Sprite_der)
 285+ 9A3A 23           5 inc hl
 286+ 9A3B 23           	inc hl
 287+ 9A3C 10 FC        	djnz 5B
 288+ 9A3E 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A41 CD 2E 8D     	call Extrae_address
 290+ 9A44 22 CA 89     	ld (Puntero_objeto),hl
 291+ 9A47
 292+ 9A47              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A47              ; _(Posicion_actual).
 294+ 9A47
 295+ 9A47 21 C8 89     	ld hl,Posicion_actual
 296+ 9A4A 34           	inc (hl)
 297+ 9A4B 08               ex af,af
 298+ 9A4C 6F           	ld l,a
 299+ 9A4D 18 DD        	jr 6B
 300+ 9A4F
 301+ 9A4F              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A4F
 303+ 9A4F 47           3 ld b,a
 304+ 9A50 2A D2 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A53 23           2 inc hl
 306+ 9A54 23           	inc hl
 307+ 9A55 10 FC        	djnz 2B
 308+ 9A57 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A5A C9           8 ret
 310+ 9A5B
 311+ 9A5B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A5B              ;
 313+ 9A5B              ;	24/7/22
 314+ 9A5B              ;
 315+ 9A5B              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A5B              ;
 317+ 9A5B              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A5B              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A5B              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A5B
 321+ 9A5B 3A CE 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A5E A7           	and a
 323+ 9A5F 20 1F        	jr nz,1F
 324+ 9A61 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A63 32 CE 89         ld (CTRL_DESPLZ),a
 326+ 9A66
 327+ 9A66 21 C7 89     	ld hl,Columns
 328+ 9A69 34           	inc (hl)
 329+ 9A6A 3A DA 89     	ld a,(Cuad_objeto)
 330+ 9A6D E6 01        	and 1
 331+ 9A6F 28 0F        	jr z,1F
 332+ 9A71 2A C8 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A74 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A75 22 C8 89     	ld (Posicion_actual),hl
 335+ 9A78 CD 6B 9C     	call Genera_coordenadas
 336+ 9A7B CD E0 9B     	call Inc_CTRL_DESPLZ
 337+ 9A7E 18 03        	jr 2F
 338+ 9A80 CD E0 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A83 C9           2 ret
 340+ 9A84
 341+ 9A84              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A84              ;
 343+ 9A84              ;	24/7/22
 344+ 9A84              ;
 345+ 9A84              ;	Ciclo_completo.
 346+ 9A84              ;
 347+ 9A84              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A84              ;
 349+ 9A84              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A84              ; 	Decrementamos (Columns).
 351+ 9A84              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A84              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A84
 354+ 9A84
 355+ 9A84 3A CE 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A87 FE FF        	cp $ff
 357+ 9A89 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A8B E6 F0        	and $f0
 359+ 9A8D 20 28        	jr nz,3F
 360+ 9A8F
 361+ 9A8F              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A8F
 363+ 9A8F 3A CE 89     	ld a,(CTRL_DESPLZ)
 364+ 9A92 47           	ld b,a
 365+ 9A93 3E F8        	ld a,$f8
 366+ 9A95 80           	add b
 367+ 9A96 32 CE 89     	ld (CTRL_DESPLZ),a
 368+ 9A99 18 1C        	jr 3F
 369+ 9A9B 21 C7 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9A9E 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9A9F AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9AA0 32 CE 89     	ld (CTRL_DESPLZ),a
 373+ 9AA3 3A DA 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9AA6 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9AA8 20 0A        	jr nz,2F
 376+ 9AAA 2A C8 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9AAD 23           	inc hl
 378+ 9AAE 22 C8 89     	ld (Posicion_actual),hl
 379+ 9AB1 CD 6B 9C     	call Genera_coordenadas
 380+ 9AB4
 381+ 9AB4              ; Inicia el puntero de Sprite.
 382+ 9AB4
 383+ 9AB4 CD 45 8D     2 call Inicia_puntero_objeto_der
 384+ 9AB7 C9           3 ret
 385+ 9AB8
 386+ 9AB8              ; ******************************************************************************************************************************************************************************************
 387+ 9AB8              ;
 388+ 9AB8              ;	15/02/23
 389+ 9AB8              ;
 390+ 9AB8              ;	Mov_left.
 391+ 9AB8              ;
 392+ 9AB8              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9AB8              ;
 394+ 9AB8 21 F4 89     Mov_left ld hl,Ctrl_0
 395+ 9ABB CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9ABD              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9ABD              ; 																	; _ en el caso de que no lo haya.
 398+ 9ABD 3A F4 89     	ld a,(Ctrl_0)
 399+ 9AC0 CB 77        	bit 6,a
 400+ 9AC2 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9AC4
 402+ 9AC4 CD DA 9B     	call Stop_Amadeus_left
 403+ 9AC7 C8           	ret z
 404+ 9AC8 20 4A        	jr nz,8F
 405+ 9ACA
 406+ 9ACA 3A CC 89     11 ld a,(Coordenada_X)
 407+ 9ACD A7           	and a
 408+ 9ACE 20 44        	jr nz,8F
 409+ 9AD0
 410+ 9AD0 3A CE 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9AD3 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9AD4 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9AD6
 414+ 9AD6              ; ---------- ---------- ----------
 415+ 9AD6
 416+ 9AD6 3A DB 89     	ld a,(Vel_left)
 417+ 9AD9 FE 02        	cp 2
 418+ 9ADB 28 0F        	jr z,1F
 419+ 9ADD 38 04        	jr c,6F
 420+ 9ADF FE 04        	cp 4
 421+ 9AE1 28 12        	jr z,7F
 422+ 9AE3
 423+ 9AE3              ; ---------- ---------- ----------
 424+ 9AE3
 425+ 9AE3 3A CE 89     6 ld a,(CTRL_DESPLZ)
 426+ 9AE6 FE F8        	cp $f8
 427+ 9AE8 20 2A        	jr nz,8F
 428+ 9AEA 18 10        	jr 4F
 429+ 9AEC 3A CE 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AEF FE F9        	cp $f9
 431+ 9AF1 20 21        	jr nz,8F
 432+ 9AF3 18 07        	jr 4F
 433+ 9AF5 3A CE 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AF8 FE FB        	cp $fb
 435+ 9AFA 20 18        	jr nz,8F
 436+ 9AFC
 437+ 9AFC              ; ---------- ---------- ----------
 438+ 9AFC
 439+ 9AFC              4
 440+ 9AFC CD 02 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9AFF              ;	call Reinicio
 442+ 9AFF
 443+ 9AFF              ; ---------- ---------- ----------
 444+ 9AFF
 445+ 9AFF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9B01 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9B02
 448+ 9B02              ;	ld hl,(Indice_Sprite_izq)
 449+ 9B02              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9B02
 451+ 9B02 CD 1B 9B     	call DESPLZ_IZQ
 452+ 9B05 C1           	pop bc
 453+ 9B06 10 F9        	djnz 5B
 454+ 9B08 2A C8 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9B0B 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9B0C 22 C8 89     	ld (Posicion_actual),hl
 457+ 9B0F CD 6B 9C     	call Genera_coordenadas
 458+ 9B12 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9B14
 460+ 9B14              ; ---------- ---------- ----------
 461+ 9B14
 462+ 9B14              ; Movemos, no hay recolocación.
 463+ 9B14
 464+ 9B14 2A C8 89     8 ld hl,(Posicion_actual)
 465+ 9B17 CD 1B 9B     	call DESPLZ_IZQ
 466+ 9B1A C9           2 ret
 467+ 9B1B
 468+ 9B1B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9B1B              ;
 470+ 9B1B              ;	22/9/22
 471+ 9B1B
 472+ 9B1B              DESPLZ_IZQ
 473+ 9B1B
 474+ 9B1B CD 2A 9B     	call Desplaza_izquierda
 475+ 9B1E CD 76 9B         call modifica_parametros_1er_DESPLZ
 476+ 9B21 CD 9E 9B     	call Ciclo_completo_2
 477+ 9B24 21 F4 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9B27 CB BE        	res 7,(hl)
 479+ 9B29 C9           	ret
 480+ 9B2A
 481+ 9B2A              Desplaza_izquierda
 482+ 9B2A
 483+ 9B2A 3A DB 89     	ld a,(Vel_left)
 484+ 9B2D 47           	ld b,a
 485+ 9B2E 2A D6 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B31 23           1 inc hl
 487+ 9B32 23           	inc hl
 488+ 9B33 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B35 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B38 CD 2E 8D     	call Extrae_address
 491+ 9B3B 22 CA 89     	ld (Puntero_objeto),hl
 492+ 9B3E
 493+ 9B3E              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B3E
 495+ 9B3E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B3E              ; Cuántos movimientos hemos hecho ??
 497+ 9B3E              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B3E
 499+ 9B3E 2A D2 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B41 EB           	ex de,hl
 501+ 9B42 A7           	and a
 502+ 9B43 ED 52        	sbc hl,de
 503+ 9B45 CB 3D        	srl l
 504+ 9B47 3E 08        6 ld a,8
 505+ 9B49 95           	sub l
 506+ 9B4A 30 1E        	jr nc,3F
 507+ 9B4C
 508+ 9B4C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B4C              ; B="0".
 510+ 9B4C
 511+ 9B4C 04           4 inc b
 512+ 9B4D 3C           	inc a
 513+ 9B4E 20 FC        	jr nz,4B
 514+ 9B50 78           	ld a,b
 515+ 9B51 08           	ex af,af
 516+ 9B52 2A D2 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B55 23           5 inc hl
 518+ 9B56 23           	inc hl
 519+ 9B57 10 FC        	djnz 5B
 520+ 9B59 22 D6 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B5C CD 2E 8D     	call Extrae_address
 522+ 9B5F 22 CA 89     	ld (Puntero_objeto),hl
 523+ 9B62
 524+ 9B62              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B62              ; _(Posicion_actual).
 526+ 9B62
 527+ 9B62 21 C8 89     	ld hl,Posicion_actual
 528+ 9B65 35           	dec (hl)
 529+ 9B66 08           	ex af,af
 530+ 9B67 6F           	ld l,a
 531+ 9B68 18 DD        	jr 6B
 532+ 9B6A
 533+ 9B6A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B6A
 535+ 9B6A 47           3 ld b,a
 536+ 9B6B 2A D0 89     	ld hl,(Indice_Sprite_der)
 537+ 9B6E 23           2 inc hl
 538+ 9B6F 23           	inc hl
 539+ 9B70 10 FC        	djnz 2B
 540+ 9B72 22 D4 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B75 C9           8 ret
 542+ 9B76
 543+ 9B76              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B76              ;
 545+ 9B76              ;	modifica_parametros_1er_DESPLZ
 546+ 9B76              ;
 547+ 9B76              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B76              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B76              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B76
 551+ 9B76 3A CE 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B79 A7           	and a
 553+ 9B7A 20 1E        	jr nz,1F
 554+ 9B7C 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B7D 32 CE 89         ld (CTRL_DESPLZ),a
 556+ 9B80 21 C7 89     	ld hl,Columns
 557+ 9B83 34           	inc (hl)
 558+ 9B84 3A DA 89     	ld a,(Cuad_objeto)
 559+ 9B87 E6 01        	and 1
 560+ 9B89 20 0F        	jr nz,1F
 561+ 9B8B 2A C8 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B8E 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B8F 22 C8 89     	ld (Posicion_actual),hl
 564+ 9B92 CD 6B 9C     	call Genera_coordenadas
 565+ 9B95 CD F1 9B     	call Dec_CTRL_DESPLZ
 566+ 9B98 18 03        	jr 2F
 567+ 9B9A CD F1 9B     1 call Dec_CTRL_DESPLZ
 568+ 9B9D C9           2 ret
 569+ 9B9E
 570+ 9B9E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9B9E
 572+ 9B9E 3A CE 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9BA1 FE F7        	cp $f7
 574+ 9BA3 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9BA5 30 2C        	jr nc,3F
 576+ 9BA7
 577+ 9BA7              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9BA7
 579+ 9BA7 06 00        	ld b,0
 580+ 9BA9 04           4 inc b
 581+ 9BAA 3C           	inc a
 582+ 9BAB FE F7        	cp $f7
 583+ 9BAD 20 FA        	jr nz,4B
 584+ 9BAF 3E FF        	ld a,$ff
 585+ 9BB1 90           	sub b
 586+ 9BB2 32 CE 89     	ld (CTRL_DESPLZ),a
 587+ 9BB5 18 1C        	jr 3F
 588+ 9BB7
 589+ 9BB7              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9BB7
 591+ 9BB7 21 C7 89     1 ld hl,Columns
 592+ 9BBA 35           	dec (hl)
 593+ 9BBB AF           	xor a
 594+ 9BBC 32 CE 89     	ld (CTRL_DESPLZ),a
 595+ 9BBF 3A DA 89     	ld a,(Cuad_objeto)
 596+ 9BC2 E6 01        	and 1
 597+ 9BC4 28 0A        	jr z,2F
 598+ 9BC6 2A C8 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9BC9 2B           	dec hl
 600+ 9BCA 22 C8 89     	ld (Posicion_actual),hl
 601+ 9BCD CD 6B 9C     	call Genera_coordenadas
 602+ 9BD0
 603+ 9BD0              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BD0
 605+ 9BD0 CD 58 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BD3 C9           3 ret
 607+ 9BD4
 608+ 9BD4              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BD4              ;
 610+ 9BD4              ;	19/10/22
 611+ 9BD4              ;
 612+ 9BD4              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BD4              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BD4
 615+ 9BD4 3A CC 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BD7 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BD9 C9           	ret
 618+ 9BDA
 619+ 9BDA              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BDA              ;
 621+ 9BDA              ;	19/10/22
 622+ 9BDA              ;
 623+ 9BDA              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BDA              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BDA
 626+ 9BDA 3A CC 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BDD FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BDF C9           	ret
 629+ 9BE0
 630+ 9BE0              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BE0              ;
 632+ 9BE0              ;	24/7/22
 633+ 9BE0              ;
 634+ 9BE0              ;	Inc_CTRL_DESPLZ
 635+ 9BE0              ;
 636+ 9BE0              ;
 637+ 9BE0              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BE0
 639+ 9BE0 21 CE 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BE3 3A DC 89     	ld a,(Vel_right)
 641+ 9BE6 A7           	and a
 642+ 9BE7 28 06        	jr z,1F
 643+ 9BE9 47           	ld b,a
 644+ 9BEA 34           3 inc (hl)
 645+ 9BEB 10 FD        	djnz 3B
 646+ 9BED 18 01        	jr 2F
 647+ 9BEF 34           1 inc (hl)
 648+ 9BF0 C9           2 ret
 649+ 9BF1
 650+ 9BF1              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BF1              ;
 652+ 9BF1              ;	5/2/23
 653+ 9BF1              ;
 654+ 9BF1              ;	Dec_CTRL_DESPLZ
 655+ 9BF1              ;
 656+ 9BF1              ;
 657+ 9BF1              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BF1
 659+ 9BF1 21 CE 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BF4 3A DB 89     	ld a,(Vel_left)
 661+ 9BF7 A7           	and a
 662+ 9BF8 28 06        	jr z,1F
 663+ 9BFA 47           	ld b,a
 664+ 9BFB 35           3 dec (hl)
 665+ 9BFC 10 FD        	djnz 3B
 666+ 9BFE 18 01        	jr 2F
 667+ 9C00 35           1 dec (hl)
 668+ 9C01 C9           2 ret
 669+ 9C02
 670+ 9C02              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9C02
 672+ 9C02 2A C8 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9C05 01 1F 00     	ld bc,31
 674+ 9C08 A7           	and a
 675+ 9C09 ED 4A        	adc hl,bc
 676+ 9C0B 22 C8 89     	ld (Posicion_actual),hl
 677+ 9C0E 21 F4 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9C11 CB C6        	set 0,(hl)
 679+ 9C13 C9           	ret
 680+ 9C14
 681+ 9C14              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9C14
 683+ 9C14 2A C8 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9C17 01 1F 00     	ld bc,31
 685+ 9C1A A7           	and a
 686+ 9C1B ED 42        	sbc hl,bc
 687+ 9C1D 22 C8 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9C20 21 F4 89     	ld hl,Ctrl_0
 689+ 9C23 CB CE        	set 1,(hl)
 690+ 9C25 C9           	ret
 691+ 9C26
 692+ 9C26              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9C26
 694+ 9C26 24           Reaparece_abajo inc h
 695+ 9C27 01 E0 17     	ld bc,$17e0
 696+ 9C2A A7           	and a
 697+ 9C2B ED 4A        	adc hl,bc
 698+ 9C2D 22 C8 89     	ld (Posicion_actual),hl
 699+ 9C30 21 F4 89     	ld hl,Ctrl_0
 700+ 9C33 CB D6        	set 2,(hl)
 701+ 9C35 C9           	ret
 702+ 9C36
 703+ 9C36              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C36
 705+ 9C36 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C39 A7           	and a
 707+ 9C3A ED 42        	sbc hl,bc
 708+ 9C3C 22 C8 89     	ld (Posicion_actual),hl
 709+ 9C3F 21 F4 89     	ld hl,Ctrl_0
 710+ 9C42 CB DE        	set 3,(hl)
 711+ 9C44 C9           	ret
 712+ 9C45
 713+ 9C45              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C45              ;
 715+ 9C45              ;	15/07/23
 716+ 9C45
 717+ 9C45              Reinicio
 718+ 9C45
 719+ 9C45              ; Vamos a reiniciar los punteros y variables de movimiento.
 720+ 9C45
 721+ 9C45 AF           	xor a
 722+ 9C46 21 FB 89     	ld hl,Puntero_indice_mov_bucle
 723+ 9C49 CD 67 9C     	call Limpia_contenido_hl
 724+ 9C4C
 725+ 9C4C 21 C8 89     	ld hl,Posicion_actual
 726+ 9C4F CD 67 9C     	call Limpia_contenido_hl
 727+ 9C52
 728+ 9C52 CD F1 9E     	call Inicializa_Puntero_indice_mov
 729+ 9C55 CD 7F 9E     	call Inicia_Puntero_mov
 730+ 9C58
 731+ 9C58 21 FD 89     	ld hl,Incrementa_puntero
 732+ 9C5B 06 05        	ld b,5
 733+ 9C5D 77           1 ld (hl),a
 734+ 9C5E 23           	inc hl
 735+ 9C5F 10 FC        	djnz 1B
 736+ 9C61
 737+ 9C61 21 06 8A     	ld hl,Ctrl_2
 738+ 9C64 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 739+ 9C66
 740+ 9C66 C9           	ret
 741+ 9C67
 742+ 9C67 77           Limpia_contenido_hl	ld (hl),a
 743+ 9C68 23           	inc hl
 744+ 9C69 77           	ld (hl),a
 745+ 9C6A C9           	ret
 746+ 9C6B
 747+ 9C6B
# file closed: Direcciones.asm
1278  9C6B              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C6B              ; ------------------------------------------------------------------------
   2+ 9C6B              ;
   3+ 9C6B              ;	02/04/23
   4+ 9C6B              ;
   5+ 9C6B              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C6B              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C6B              ;
   8+ 9C6B              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C6B              ;
  10+ 9C6B              ;	Modifica: A,BC y DE.
  11+ 9C6B
  12+ 9C6B C5           Genera_coordenadas push bc
  13+ 9C6C E5           	push hl
  14+ 9C6D D5           	push de
  15+ 9C6E
  16+ 9C6E 2A C8 89     	ld hl,(Posicion_actual)
  17+ 9C71
  18+ 9C71 7D           	ld a,l
  19+ 9C72 E6 1F        	and $1f
  20+ 9C74 32 CC 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C77
  22+ 9C77 CD E0 98     	call calcula_tercio
  23+ 9C7A 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C7B
  25+ 9C7B 1E 00        	ld e,0
  26+ 9C7D 7D           	ld a,l
  27+ 9C7E E6 E0        	and $e0
  28+ 9C80 28 01        	jr z,1F
  29+ 9C82 04           	inc b
  30+ 9C83
  31+ 9C83 04           1 inc b
  32+ 9C84 05           	dec b
  33+ 9C85 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C87              ;														; _ , salimos.
  35+ 9C87 1C           3 inc e
  36+ 9C88 D6 20        	sub 32
  37+ 9C8A 20 FB        	jr nz,3B
  38+ 9C8C 10 F5        	djnz 1B
  39+ 9C8E
  40+ 9C8E 7B           2 ld a,e
  41+ 9C8F 32 CD 89     	ld (Coordenada_y),a
  42+ 9C92
  43+ 9C92 D1           	pop de
  44+ 9C93 E1           	pop hl
  45+ 9C94 C1           	pop bc
  46+ 9C95
  47+ 9C95 C9           	ret
  48+ 9C96
  49+ 9C96              ; ------------------------------------------------------------------------
  50+ 9C96              ;	28/05/23
  51+ 9C96              ;
  52+ 9C96              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C96              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C96              ;
  55+ 9C96              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C96              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C96              ;
  58+ 9C96              ;		DE="$120d"
  59+ 9C96              ;
  60+ 9C96              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C96              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C96              ;
  63+ 9C96              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C96
  65+ 9C96              ;	Modifica: A,BC y DE.
  66+ 9C96
  67+ 9C96
  68+ 9C96              Genera_coordenadas_disparo
  69+ 9C96
  70+ 9C96              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C96
  72+ 9C96 7D           	ld a,l
  73+ 9C97 E6 1F        	and $1f
  74+ 9C99 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9C9A CD E0 98     	call calcula_tercio
  76+ 9C9D 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9C9E 1E 00        	ld e,0
  78+ 9CA0 7D           	ld a,l
  79+ 9CA1 E6 E0        	and $e0
  80+ 9CA3 28 01        	jr z,1F
  81+ 9CA5 04           	inc b
  82+ 9CA6 1C           1 inc e
  83+ 9CA7 D6 20        	sub 32
  84+ 9CA9 20 FB        	jr nz,1B
  85+ 9CAB 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CAD C9           	ret
  87+ 9CAE
# file closed: Genera_coordenadas.asm
1279  9CAE              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CAE
   2+ 9CAE
   3+ 9CAE              ;   07/07/23
   4+ 9CAE              ;
   5+ 9CAE              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CAE              ;
   7+ 9CAE              ;   Codificación:
   8+ 9CAE              ;
   9+ 9CAE              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CAE              ;
  11+ 9CAE              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CAE              ;
  13+ 9CAE              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CAE              ;
  15+ 9CAE              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CAE              ;
  17+ 9CAE              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CAE              ;                               ..... %01000010 Vel_up 4
  19+ 9CAE              ;                                               Vel_down 2
  20+ 9CAE              ;                               ..... $42
  21+ 9CAE              ;
  22+ 9CAE              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CAE              ;
  24+ 9CAE              ;                               ..... %01000010 Vel_left 4
  25+ 9CAE              ;                                               Vel_right 2
  26+ 9CAE              ;                               ..... $42
  27+ 9CAE              ;
  28+ 9CAE              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CAE              ;
  30+ 9CAE              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CAE              ;
  32+ 9CAE              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CAE              ;
  34+ 9CAE              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CAE              ;                                     $53
  36+ 9CAE              ;
  37+ 9CAE              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CAE              ;
  39+ 9CAE              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CAE              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CAE              ;
  42+ 9CAE              ;                       Arriba ..... $81
  43+ 9CAE              ;                       Arriba - izquierda ..... $a1
  44+ 9CAE              ;                       Arriba - derecha ..... $91
  45+ 9CAE              ;
  46+ 9CAE              ;                       Abajo ..... $41
  47+ 9CAE              ;                       Abajo - izquierda ..... $61
  48+ 9CAE              ;                       Abajo - derecha ..... $51
  49+ 9CAE              ;
  50+ 9CAE              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CAE              ;
  52+ 9CAE              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CAE              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CAE              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CAE              ;
  56+ 9CAE              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CAE              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CAE              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CAE              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CAE              ;
  61+ 9CAE              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del DESPLAZAMIENTO.
  62+ 9CAE              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CAE              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CAE              ;
  65+ 9CAE              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CAE              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CAE              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CAE              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CAE
  70+ 9CAE              ; ----- ----- ----- ----- -----
  71+ 9CAE
  72+ 9CAE C2 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CB0
  74+ 9CB0 CE 9C            defw Codo_abajo_derecha
  75+ 9CB2
  76+ 9CB2 02 9D            defw Derecha_y_subiendo
  77+ 9CB4 0C 9D            defw Derecha_y_subiendo_1
  78+ 9CB6
  79+ 9CB6 16 9D            defw Codo_derecha_abajo
  80+ 9CB8 46 9D            defw Codo_abajo_izq.
  81+ 9CBA
  82+ 9CBA 7A 9D            defw Izquierda_y_subiendo
  83+ 9CBC 84 9D            defw Izquierda_y_subiendo_1
  84+ 9CBE
  85+ 9CBE 8E 9D            defw Codo_izquierda_abajo
  86+ 9CC0
  87+ 9CC0 00 00            defw 0                                  ; Fin de patrón de movimiento.
  88+ 9CC2
  89+ 9CC2 14 11 45 01  Bajo_decelerando db $14,$11,$45,1           ; Abajo. 5rep. vel.4
  90+ 9CC6 12 11 47 01      db $12,$11,$47,1                        ; Abajo. 7rep. vel.2
  91+ 9CCA 11 11 47 FE      db $11,$11,$47,254                      ; Abajo  7rep. --- Termina movimiento.
  92+ 9CCE
  93+ 9CCE 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
  94+ 9CD2 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
  95+ 9CD6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
  96+ 9CDA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
  97+ 9CDE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
  98+ 9CE2 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
  99+ 9CE6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 100+ 9CEA 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 101+ 9CEE 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 102+ 9CF2 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 103+ 9CF6 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 104+ 9CFA 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 105+ 9CFE 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 106+ 9D02
 107+ 9D02
 108+ 9D02 11 12 14 01  Derecha_y_subiendo db $11,$12,$14,1         ; Derecha. 4rep. vel.2
 109+ 9D06 11 11 91 FD      db $11,$11,$91,253,12,0                 ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 109+ 9D0A 0C 00
 110+ 9D0C 11 11 1A 01  Derecha_y_subiendo_1 db $11,$11,$1a,1       ; Derecha. 8rep.
 111+ 9D10 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 7rep. --- Termina movimiento.
 111+ 9D14 06 00
 112+ 9D16
 113+ 9D16              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 114+ 9D16
 115+ 9D16
 116+ 9D16 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 117+ 9D1A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 118+ 9D1E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 119+ 9D22 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 120+ 9D26 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 121+ 9D2A 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 122+ 9D2E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 123+ 9D32 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 124+ 9D36 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 125+ 9D3A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 126+ 9D3E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 127+ 9D42 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 128+ 9D46
 129+ 9D46 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 130+ 9D4A 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 131+ 9D4E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 132+ 9D52 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 133+ 9D56 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 134+ 9D5A 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 135+ 9D5E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 136+ 9D62 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 137+ 9D66 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 138+ 9D6A 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 139+ 9D6E 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 140+ 9D72 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 141+ 9D76 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 142+ 9D7A
 143+ 9D7A 11 21 24 01  Izquierda_y_subiendo db $11,$21,$24,1          ; Izq. 4rep.
 144+ 9D7E 11 11 A1 FD      db $11,$11,$a1,253,12,0                    ; Arriba/Izq. 1rep. --- Repite Mov 18rep. --- Termina movimiento.
 144+ 9D82 0C 00
 145+ 9D84 11 11 2A 01  Izquierda_y_subiendo_1 db $11,$11,$2a,1        ; Izq. 6rep.
 146+ 9D88 11 11 A1 FD      db $11,$11,$a1,253,6,0                     ; Arriba/Izq. 1rep. --- Repite Mov 18rep. --- Termina movimiento.
 146+ 9D8C 06 00
 147+ 9D8E
 148+ 9D8E 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 149+ 9D92 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 150+ 9D96 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 151+ 9D9A 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 152+ 9D9E 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 153+ 9DA2 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 154+ 9DA6 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 155+ 9DAA 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 156+ 9DAE 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 157+ 9DB2 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 158+ 9DB6 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 159+ 9DBA 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 160+ 9DBE
 161+ 9DBE              ; ----- ----- ----- ----- -----
 162+ 9DBE              ;
 163+ 9DBE              ;   27/06/23
 164+ 9DBE
 165+ 9DBE              Movimiento
 166+ 9DBE
 167+ 9DBE              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 168+ 9DBE
 169+ 9DBE 3A 06 8A         ld a,(Ctrl_2)
 170+ 9DC1 CB 57            bit 2,a
 171+ 9DC3 20 1B            jr nz, Desplazamiento_iniciado
 172+ 9DC5
 173+ 9DC5 2A F9 89         ld hl,(Puntero_mov)
 174+ 9DC8 7E               ld a,(hl)
 175+ 9DC9
 176+ 9DC9              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 177+ 9DC9
 178+ 9DC9              Inicia_desplazamiento.
 179+ 9DC9
 180+ 9DC9              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 181+ 9DC9
 182+ 9DC9 CD B2 9E         call Ajusta_velocidad_desplazamiento
 183+ 9DCC
 184+ 9DCC              ; Iniciamos (Repetimos_mov).
 185+ 9DCC
 186+ 9DCC 7E               ld a,(hl)
 187+ 9DCD E6 0F            and $0f
 188+ 9DCF 32 FE 89         ld (Repetimos_desplazamiento),a
 189+ 9DD2 32 FF 89         ld (Repetimos_desplazamiento_backup),a
 190+ 9DD5
 191+ 9DD5              ; Iniciamos (Cola_de_desplazamiento).
 192+ 9DD5
 193+ 9DD5 23               inc hl
 194+ 9DD6 7E               ld a,(hl)
 195+ 9DD7 32 01 8A         ld (Cola_de_desplazamiento),a
 196+ 9DDA 2B               dec hl
 197+ 9DDB
 198+ 9DDB 21 06 8A         ld hl,Ctrl_2
 199+ 9DDE CB D6            set 2,(hl)
 200+ 9DE0
 201+ 9DE0              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 202+ 9DE0              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 203+ 9DE0
 204+ 9DE0              Desplazamiento_iniciado
 205+ 9DE0
 206+ 9DE0 CD 8A 9E         call Aplica_desplazamiento
 207+ 9DE3
 208+ 9DE3 3A 06 8A         ld a,(Ctrl_2)
 209+ 9DE6 CB 67            bit 4,a
 210+ 9DE8 C0               ret nz                              ; Salimos si se ha producido reinicio.
 211+ 9DE9
 212+ 9DE9 21 FE 89     3 ld hl,Repetimos_desplazamiento
 213+ 9DEC 35               dec (hl)
 214+ 9DED C0               ret nz
 215+ 9DEE
 216+ 9DEE              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 217+ 9DEE              ; Hay que volver a ejecutar este desplazamiento ???.
 218+ 9DEE              ; Analiza (Cola_de_desplazamiento).
 219+ 9DEE
 220+ 9DEE 3A 01 8A     Cola ld a,(Cola_de_desplazamiento)
 221+ 9DF1 A7               and a
 222+ 9DF2 CC DB 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 223+ 9DF5 28 30            jr z,Reinicia_el_movimiento
 224+ 9DF7
 225+ 9DF7 FE FF            cp $ff
 226+ 9DF9 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 227+ 9DFB
 228+ 9DFB FE FE            cp $fe
 229+ 9DFD CC 6A 9E         call z,Fijamos_bucle
 230+ 9E00 28 25            jr z,Reinicia_el_movimiento
 231+ 9E02
 232+ 9E02 FE FD            cp $fd
 233+ 9E04 20 11            jr nz,1F
 234+ 9E06
 235+ 9E06              ; ---
 236+ 9E06              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 237+ 9E06
 238+ 9E06 3A 06 8A         ld a,(Ctrl_2)
 239+ 9E09 CB 5F            bit 3,a
 240+ 9E0B 20 1A            jr nz,Reinicia_el_movimiento
 241+ 9E0D
 242+ 9E0D              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 243+ 9E0D
 244+ 9E0D 21 06 8A         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 245+ 9E10 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 246+ 9E12
 247+ 9E12 CD 74 9E         call Inicia_Repetimos_movimiento
 248+ 9E15 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 249+ 9E17              ; ---
 250+ 9E17
 251+ 9E17 FE 01        1 cp 1
 252+ 9E19 CA 54 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 253+ 9E1C
 254+ 9E1C 3D               dec a
 255+ 9E1D 32 01 8A         ld (Cola_de_desplazamiento),a
 256+ 9E20
 257+ 9E20 3A FF 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 258+ 9E23 32 FE 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 259+ 9E26              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 260+ 9E26 C9               ret
 261+ 9E27
 262+ 9E27              Reinicia_el_movimiento
 263+ 9E27
 264+ 9E27 3A 06 8A         ld a,(Ctrl_2)
 265+ 9E2A CB 5F            bit 3,a
 266+ 9E2C 28 1B            jr z,2F
 267+ 9E2E
 268+ 9E2E              ; (Cola_de_desplazamiento)="254".
 269+ 9E2E
 270+ 9E2E 21 00 8A         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 271+ 9E31 35               dec (hl)
 272+ 9E32 20 15            jr nz,2F
 273+ 9E34
 274+ 9E34              ; Fin de las repeticiones del último movimiento.
 275+ 9E34
 276+ 9E34 21 06 8A         ld hl,Ctrl_2
 277+ 9E37 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 278+ 9E39
 279+ 9E39 2A F9 89         ld hl,(Puntero_mov)
 280+ 9E3C 23               inc hl
 281+ 9E3D 23               inc hl
 282+ 9E3E 23               inc hl
 283+ 9E3F 22 F9 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 284+ 9E42              ;                                                               ; _ para ejecutar su mandato. :)
 285+ 9E42 7E               ld a,(hl)
 286+ 9E43 32 01 8A         ld (Cola_de_desplazamiento),a
 287+ 9E46
 288+ 9E46 C3 EE 9D         jp Cola
 289+ 9E49
 290+ 9E49
 291+ 9E49 CD 7F 9E     2 call Inicia_Puntero_mov
 292+ 9E4C
 293+ 9E4C 21 06 8A         ld hl,Ctrl_2
 294+ 9E4F CB 96            res 2,(hl)
 295+ 9E51
 296+ 9E51 C3 BE 9D         jp Movimiento
 297+ 9E54
 298+ 9E54              Siguiente_desplazamiento
 299+ 9E54
 300+ 9E54              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 301+ 9E54              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 302+ 9E54
 303+ 9E54 21 06 8A         ld hl,Ctrl_2
 304+ 9E57 CB 96            res 2,(hl)
 305+ 9E59
 306+ 9E59 2A F9 89         ld hl,(Puntero_mov)
 307+ 9E5C 23               inc hl
 308+ 9E5D 23               inc hl
 309+ 9E5E 22 F9 89         ld (Puntero_mov),hl
 310+ 9E61
 311+ 9E61 7E               ld a,(hl)
 312+ 9E62 A7               and a
 313+ 9E63 CC DB 9E         call z,Incrementa_Puntero_indice_mov
 314+ 9E66 CA 27 9E         jp z,Reinicia_el_movimiento
 315+ 9E69
 316+ 9E69 C9               ret
 317+ 9E6A              ; Subrutinas -----------------------------------------
 318+ 9E6A              ; ---------- --------- --------- ---------- ----------
 319+ 9E6A              ;
 320+ 9E6A              ;   12/07/23
 321+ 9E6A              ;
 322+ 9E6A              ;   Fijamos_bucle
 323+ 9E6A              ;
 324+ 9E6A              ;
 325+ 9E6A
 326+ 9E6A CD DB 9E     Fijamos_bucle call Incrementa_Puntero_indice_mov
 327+ 9E6D 2A F7 89         ld hl,(Puntero_indice_mov)
 328+ 9E70 22 FB 89         ld (Puntero_indice_mov_bucle),hl
 329+ 9E73 C9               ret
 330+ 9E74
 331+ 9E74              ; ---------- --------- --------- ---------- ----------
 332+ 9E74              ;
 333+ 9E74              ;   07/7/23
 334+ 9E74              ;
 335+ 9E74              ;   Inicia_Repetimos_movimiento
 336+ 9E74              ;
 337+ 9E74              ;
 338+ 9E74
 339+ 9E74              Inicia_Repetimos_movimiento
 340+ 9E74
 341+ 9E74              ; Iniciamos (Repetimos_movimiento).
 342+ 9E74
 343+ 9E74 DD 2A F9 89      ld ix,(Puntero_mov)
 344+ 9E78 DD 7E 02         ld a,(ix+2)
 345+ 9E7B 32 00 8A         ld (Repetimos_movimiento),a
 346+ 9E7E
 347+ 9E7E C9               ret
 348+ 9E7F
 349+ 9E7F              ; ---------- --------- --------- ---------- ----------
 350+ 9E7F              ;
 351+ 9E7F              ;   26/6/23
 352+ 9E7F              ;
 353+ 9E7F              ;   Inicia_Puntero_mov
 354+ 9E7F              ;
 355+ 9E7F              ;
 356+ 9E7F
 357+ 9E7F 2A F7 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 358+ 9E82 5E               ld e,(hl)
 359+ 9E83 23               inc hl
 360+ 9E84 56               ld d,(hl)
 361+ 9E85 EB               ex de,hl
 362+ 9E86 22 F9 89         ld (Puntero_mov),hl
 363+ 9E89 C9               ret
 364+ 9E8A
 365+ 9E8A              ; ---------- --------- --------- ---------- ----------
 366+ 9E8A              ;
 367+ 9E8A              ;   27/06/23
 368+ 9E8A              ;
 369+ 9E8A              ;   Aplica_movimiento.
 370+ 9E8A
 371+ 9E8A              Aplica_desplazamiento
 372+ 9E8A
 373+ 9E8A              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 374+ 9E8A
 375+ 9E8A 2A F9 89         ld hl, (Puntero_mov)
 376+ 9E8D CB 7E            bit 7,(hl)
 377+ 9E8F 28 03            jr z,1F
 378+ 9E91 CD 57 99         call Mov_up
 379+ 9E94 2A F9 89     1 ld hl, (Puntero_mov)
 380+ 9E97 CB 76            bit 6,(hl)
 381+ 9E99 28 03            jr z,2F
 382+ 9E9B CD 26 99         call Mov_down
 383+ 9E9E 2A F9 89     2 ld hl, (Puntero_mov)
 384+ 9EA1 CB 6E            bit 5,(hl)
 385+ 9EA3 28 03            jr z,3F
 386+ 9EA5 CD B8 9A         call Mov_left
 387+ 9EA8 2A F9 89     3 ld hl, (Puntero_mov)
 388+ 9EAB CB 66            bit 4,(hl)
 389+ 9EAD C8               ret z
 390+ 9EAE CD 9A 99         call Mov_right
 391+ 9EB1 C9               ret
 392+ 9EB2
 393+ 9EB2              ; ---------- --------- --------- ---------- ----------
 394+ 9EB2              ;
 395+ 9EB2              ;   26/06/23
 396+ 9EB2              ;
 397+ 9EB2              ;   Ajusta_velocidad_desplazamiento.
 398+ 9EB2
 399+ 9EB2              Ajusta_velocidad_desplazamiento
 400+ 9EB2
 401+ 9EB2              ; 1er byte de la cadena de movimiento.
 402+ 9EB2              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 403+ 9EB2
 404+ 9EB2 CD D0 9E         call Extrae_nibble_alto
 405+ 9EB5
 406+ 9EB5 32 DD 89         ld (Vel_up),a
 407+ 9EB8 79               ld a,c
 408+ 9EB9 E6 0F            and $0f
 409+ 9EBB 32 DE 89         ld (Vel_down),a
 410+ 9EBE
 411+ 9EBE              ; Saltamos al 2º byte de la cadena de movimiento.
 412+ 9EBE              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 413+ 9EBE
 414+ 9EBE 23               inc hl
 415+ 9EBF CD D0 9E         call Extrae_nibble_alto
 416+ 9EC2
 417+ 9EC2 32 DB 89         ld (Vel_left),a
 418+ 9EC5 79               ld a,c
 419+ 9EC6 E6 0F            and $0f
 420+ 9EC8 32 DC 89         ld (Vel_right),a
 421+ 9ECB
 422+ 9ECB              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 423+ 9ECB
 424+ 9ECB 23               inc hl
 425+ 9ECC 22 F9 89         ld (Puntero_mov),hl
 426+ 9ECF C9               ret
 427+ 9ED0
 428+ 9ED0 06 04        Extrae_nibble_alto ld b,4
 429+ 9ED2 7E               ld a,(hl)
 430+ 9ED3 4F               ld c,a
 431+ 9ED4 E6 F0            and $f0
 432+ 9ED6 CB 3F        1 srl a
 433+ 9ED8 10 FC            djnz 1B
 434+ 9EDA C9               ret
 435+ 9EDB
 436+ 9EDB              ; ---------- --------- --------- ---------- ----------
 437+ 9EDB              ;
 438+ 9EDB              ;   5/7/23
 439+ 9EDB              ;
 440+ 9EDB              ;   Incrementa_Puntero_indice_mov
 441+ 9EDB
 442+ 9EDB              Incrementa_Puntero_indice_mov
 443+ 9EDB
 444+ 9EDB 21 FD 89         ld hl,Incrementa_puntero
 445+ 9EDE 34               inc (hl)
 446+ 9EDF
 447+ 9EDF 2A F7 89         ld hl,(Puntero_indice_mov)
 448+ 9EE2 01 02 00         ld bc,2
 449+ 9EE5 A7               and a
 450+ 9EE6 09               add hl,bc
 451+ 9EE7 22 F7 89         ld (Puntero_indice_mov),hl
 452+ 9EEA
 453+ 9EEA 7E               ld a,(hl)
 454+ 9EEB A7               and a
 455+ 9EEC
 456+ 9EEC              ;! STOP. Fin del patrón de movimiento de la entidad.
 457+ 9EEC
 458+ 9EEC              ;    jr z,$
 459+ 9EEC
 460+ 9EEC              ;! Reinicia el Patrón de movimiento.
 461+ 9EEC
 462+ 9EEC CC F1 9E         call z,Inicializa_Puntero_indice_mov
 463+ 9EEF
 464+ 9EEF AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 465+ 9EF0
 466+ 9EF0 C9               ret
 467+ 9EF1
 468+ 9EF1
 469+ 9EF1              ; ---------- --------- --------- ---------- ----------
 470+ 9EF1              ;
 471+ 9EF1              ;   12/07/23
 472+ 9EF1              ;
 473+ 9EF1              ;   Inicializa_Puntero_indice_mov
 474+ 9EF1
 475+ 9EF1              Inicializa_Puntero_indice_mov
 476+ 9EF1
 477+ 9EF1              ; Existe etiqueta de bucle principal???
 478+ 9EF1
 479+ 9EF1              ;    jr $
 480+ 9EF1
 481+ 9EF1              ;    ld hl,Ctrl_2
 482+ 9EF1              ;    res 4,(hl)
 483+ 9EF1
 484+ 9EF1 2A FB 89         ld hl,(Puntero_indice_mov_bucle)
 485+ 9EF4 24               inc h
 486+ 9EF5 25               dec h
 487+ 9EF6 28 05            jr z,2F
 488+ 9EF8
 489+ 9EF8 22 F7 89         ld (Puntero_indice_mov),hl
 490+ 9EFB 18 0E            jr 3F
 491+ 9EFD
 492+ 9EFD
 493+ 9EFD
 494+ 9EFD              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 495+ 9EFD
 496+ 9EFD 3A FD 89     2 ld a,(Incrementa_puntero)
 497+ 9F00 47               ld b,a
 498+ 9F01
 499+ 9F01 2A F7 89         ld hl,(Puntero_indice_mov)
 500+ 9F04 2B           1 dec hl
 501+ 9F05 2B               dec hl
 502+ 9F06 10 FC            djnz 1B
 503+ 9F08
 504+ 9F08 22 F7 89         ld (Puntero_indice_mov),hl
 505+ 9F0B
 506+ 9F0B AF           3 xor a
 507+ 9F0C 32 FD 89         ld (Incrementa_puntero),a
 508+ 9F0F
 509+ 9F0F C9               ret
 510+ 9F10
 511+ 9F10
 512+ 9F10
# file closed: Patrones_de_mov.asm
1280  9F10              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9F10              ; Relojes y temporizaciones.
   2+ 9F10
   3+ 9F10              ; ------------------------------------------------------
   4+ 9F10              ;
   5+ 9F10              ;	27/04/23
   6+ 9F10              ;
   7+ 9F10              ;	Cuando se produce un disparo de Amadeus, la variable: (Habilita_disparo_Amadeus) se_
   8+ 9F10              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9F10              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9F10              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9F10              ;
  12+ 9F10              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9F10              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9F10
  15+ 9F10              Habilita_disparos
  16+ 9F10
  17+ 9F10 7E           	ld a,(hl)
  18+ 9F11 A7           	and a
  19+ 9F12 C0           	ret nz
  20+ 9F13
  21+ 9F13 EB           	ex de,hl
  22+ 9F14
  23+ 9F14 35           	dec (hl)
  24+ 9F15 34           	inc (hl)
  25+ 9F16 35           	dec (hl)
  26+ 9F17 C0           	ret nz
  27+ 9F18
  28+ 9F18 2B           	dec hl
  29+ 9F19 7E           	ld a,(hl)
  30+ 9F1A 23           	inc hl
  31+ 9F1B 77           	ld (hl),a
  32+ 9F1C
  33+ 9F1C EB           	ex de,hl
  34+ 9F1D 3E 01        	ld a,1
  35+ 9F1F 77           	ld (hl),a
  36+ 9F20 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1281  9F21              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F21              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F21              ;
   3+ 9F21              ;	3/1/23
   4+ 9F21              ;
   5+ 9F21              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F21
   7+ 9F21              ;	ADC HL,SP	LD (addr),SP
   8+ 9F21              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F21              ;	ADD IX,SP	LD SP,nn
  10+ 9F21              ; 	ADD IY,SP	LD SP,HL
  11+ 9F21              ;				LD SP,IX
  12+ 9F21              ;	DEC SP		LD SP,IY
  13+ 9F21
  14+ 9F21              ;	EX (SP),HL
  15+ 9F21              ;	EX (SP),IX
  16+ 9F21              ;	EX (SP),IY
  17+ 9F21
  18+ 9F21              ;	INC SP
  19+ 9F21
  20+ 9F21
  21+ 9F21                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 19 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 08 8A         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 1F 8A         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 1D 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 1F 8A         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 1D 8A     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 19 8A  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1282  7FD5
1283  7FD5              	SAVESNA "Pruebas.sna", START
1284  7FD5
1285  7FD5
1286  7FD5
1287  7FD5
# file closed: Banco_de_pruebas.asm
