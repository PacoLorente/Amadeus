# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 A6 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19
  39  AA19 CD DD 8C     	call Pinta_entidades									; Borde rojo.
  40  AA1C
  41  AA1C              ;	ld a,6
  42  AA1C              ;	out ($fe),a
  43  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  44  AA1C
  45  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  46  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  47  AA1C
  48  AA1C              ;	ld a,7
  49  AA1C              ;	out ($fe),a												; Borde blanco.
  50  AA1C              ;	call Guarda_parametros_DRAW
  51  AA1C              ;	call Restore_Amadeus
  52  AA1C
  53  AA1C              ; Posible colisión Entidad-Amadeus ???
  54  AA1C
  55  AA1C              ;	ld a,(Impacto2)
  56  AA1C              ;	bit 2,a
  57  AA1C              ;	jr z,1F
  58  AA1C
  59  AA1C              ;	call Detecta_colision_nave_entidad
  60  AA1C
  61  AA1C              ;1 ld a,4
  62  AA1C              ;	out ($fe),a
  63  AA1C              ;	call Gestiona_Amadeus
  64  AA1C
  65  AA1C              ;	ld a,7
  66  AA1C              ;	out ($fe),a											; Borde blanco.
  67  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  68  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  69  AA1C
  70  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  71  AA1C
  72  AA1C              ;	call Recupera_parametros_DRAW
  73  AA1C CD 00 8D     	call Actualiza_relojes
  74  AA1F
  75  AA1F 21 B0 89     	ld hl,Ctrl_3
  76  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  77  AA24
  78  AA24 FD E1        	pop iy
  79  AA26 DD E1        	pop ix
  80  AA28 F1           	pop af
  81  AA29 C1           	pop bc
  82  AA2A D1           	pop de
  83  AA2B E1           	pop hl
  84  AA2C D9           	exx
  85  AA2D C1           	pop bc
  86  AA2E D1           	pop de
  87  AA2F E1           	pop hl
  88  AA30 08           	ex af,af'
  89  AA31 F1           	pop af
  90  AA32 08           	ex af,af'
  91  AA33 D9           	exx
  92  AA34
  93  AA34 ED 7B A6 89  	ld sp,(Stack_3)
  94  AA38
  95  AA38 FB           	ei
  96  AA39
  97  AA39 3E 01        	ld a,1												; Borde azul.
  98  AA3B D3 FE        	out ($fe),a
  99  AA3D
 100  AA3D C9           	ret
 101  AA3E
 102  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 103  AA3E
 104  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8131
   8+ 8131
   9+ 8131              ; Disparo.
  10+ 8131
  11+ 8131 39 81        Indice_disparo defw Disparo_0
  12+ 8133 3F 81        	defw Disparo_f9
  13+ 8135 45 81        	defw Disparo_fb
  14+ 8137 4B 81        	defw Disparo_fd
  15+ 8139
  16+ 8139              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8139 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 813D 01 80
  18+ 813F              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 813F 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8143 00 60
  20+ 8145              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8145 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8149 18 00
  22+ 814B              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 814B 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 814F 06 00
  24+ 8151
  25+ 8151              ; ----------------------------------------------------------------------------------------
  26+ 8151
  27+ 8151              ; Badsat_izq. 2x2.
  28+ 8151
  29+ 8151 61 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8153 A1 82        	defw Badsat_izq_fe
  31+ 8155 71 82        	defw Badsat_izq_fd
  32+ 8157 41 82        	defw Badsat_izq_fc
  33+ 8159 11 82        	defw Badsat_izq_fb
  34+ 815B E1 81        	defw Badsat_izq_fa
  35+ 815D B1 81        	defw Badsat_izq_f9
  36+ 815F 81 81        	defw Badsat_izq_f8
  37+ 8161
  38+ 8161 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8165 02 2A 02 55
  39+ 8169 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 816D 7F E8 03 60
  40+ 8171 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8175 2B E8 54 40
  41+ 8179 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 817D 28 00 10 00
  42+ 8181
  43+ 8181 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8185 0A 00 01 15
  44+ 8189 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 818D 01 55 00 01
  45+ 8191 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8195 00 01 B0 00
  46+ 8199 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 819D FC 00 15 F4
  47+ 81A1 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 81A5 55 30 00 2A
  48+ 81A9 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 81AD 00 08 00 00
  49+ 81B1
  50+ 81B1 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 81B5 85 00 00 8A
  51+ 81B9 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 81BD 00 AA 80 00
  52+ 81C1 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 81C5 00 00 D8 00
  53+ 81C9 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 81CD FE 00 0A FA
  54+ 81D1 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 81D5 2A 98 00 15
  55+ 81D9 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 81DD 00 04 00 00
  56+ 81E1
  57+ 81E1 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 81E5 42 80 00 45
  58+ 81E9 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 81ED 00 55 40 00
  59+ 81F1 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 81F5 00 00 6C 00
  60+ 81F9 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 81FD FF 00 05 7D
  61+ 8201 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 8205 15 4C 00 0A
  62+ 8209 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 820D 00 02 00 00
  63+ 8211
  64+ 8211 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 8215 21 40 00 22
  65+ 8219 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 821D 00 2A A0 00
  66+ 8221 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 8225 80 00 36 00
  67+ 8229 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 822D 7F 80 02 BE
  68+ 8231 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8235 0A A6 00 05
  69+ 8239 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 823D 00 01 00 00
  70+ 8241
  71+ 8241 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8245 10 A0 00 11
  72+ 8249 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 824D 00 15 50 00
  73+ 8251 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8255 40 00 1B 00
  74+ 8259 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 825D BF C0 01 5F
  75+ 8261 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8265 05 53 00 02
  76+ 8269 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 826D 00 00 80 00
  77+ 8271
  78+ 8271 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8275 08 50 00 08
  79+ 8279 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 827D 00 0A A8 00
  80+ 8281 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8285 A0 00 0D 80
  81+ 8289 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 828D 5F F8 00 AF
  82+ 8291 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8295 02 A9 00 01
  83+ 8299 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 829D 00 00 40 00
  84+ 82A1
  85+ 82A1 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 82A5 04 28 00 04
  86+ 82A9 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 82AD 00 05 54 00
  87+ 82B1 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 82B5 D0 00 06 C0
  88+ 82B9 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 82BD 2F FC 00 57
  89+ 82C1 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 82C5 01 54 80 00
  90+ 82C9 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 82CD 00 00 20 00
  91+ 82D1
  92+ 82D1
  93+ 82D1 E1 82        Indice_Badsat_der defw Badsat_derecha
  94+ 82D3 01 83        	defw Badsat_der_f8
  95+ 82D5 31 83        	defw Badsat_der_f9
  96+ 82D7 61 83        	defw Badsat_der_fa
  97+ 82D9 91 83        	defw Badsat_der_fb
  98+ 82DB C1 83        	defw Badsat_der_fc
  99+ 82DD F1 83        	defw Badsat_der_fd
 100+ 82DF 21 84        	defw Badsat_der_fe
 101+ 82E1
 102+ 82E1 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 82E5 54 40 AA 40
 103+ 82E9 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 82ED 17 FE 06 C0
 104+ 82F1 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 82F5 17 D4 02 2A
 105+ 82F9 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 82FD 00 14 00 08
 106+ 8301
 107+ 8301 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 8305 20 00 2A 20
 108+ 8309 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 830D 2A A0 00 15
 109+ 8311 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 8315 00 03 60 00
 110+ 8319 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 831D F4 00 0B EA
 111+ 8321 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 8325 03 2A 80 00
 112+ 8329 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 832D 00 00 04 00
 113+ 8331
 114+ 8331 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8335 10 00 15 10
 115+ 8339 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 833D 15 50 00 0A
 116+ 8341 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8345 80 01 B0 00
 117+ 8349 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 834D FA 00 05 F5
 118+ 8351 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8355 01 95 40 00
 119+ 8359 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 835D 00 00 02 00
 120+ 8361
 121+ 8361 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8365 08 00 0A 88
 122+ 8369 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 836D 0A A8 00 05
 123+ 8371 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8375 C0 00 D8 00
 124+ 8379 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 837D FD 00 02 FA
 125+ 8381 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8385 00 CA A0 00
 126+ 8389 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 838D 80 00 01 00
 127+ 8391
 128+ 8391 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8395 84 00 05 44
 129+ 8399 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 839D 05 54 00 02
 130+ 83A1 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 83A5 E0 00 6C 00
 131+ 83A9 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 83AD FE 80 01 7D
 132+ 83B1 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 83B5 00 65 50 00
 133+ 83B9 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 83BD 40 00 00 80
 134+ 83C1
 135+ 83C1 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 83C5 42 00 02 A2
 136+ 83C9 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 83CD 02 AA 00 01
 137+ 83D1 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 83D5 F0 00 36 00
 138+ 83D9 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 83DD FF 40 00 BE
 139+ 83E1 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 83E5 00 32 A8 00
 140+ 83E9 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 83ED A0 00 00 40
 141+ 83F1
 142+ 83F1 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 83F5 A1 00 01 51
 143+ 83F9 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 83FD 01 55 00 00
 144+ 8401 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 8405 F8 00 1B 00
 145+ 8409 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 840D FF A0 00 1F
 146+ 8411 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 8415 00 09 54 00
 147+ 8419 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 841D 50 00 00 20
 148+ 8421
 149+ 8421 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 8425 50 80 00 A8
 150+ 8429 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 842D 00 AA 80 00
 151+ 8431 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8435 FC 00 0D 80
 152+ 8439 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 843D FF D0 00 0F
 153+ 8441 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8445 00 04 AA 00
 154+ 8449 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 844D 28 00 00 10
 155+ 8451
 156+ 8451              ; ----------------------------------------------------------------------------------------
 157+ 8451
 158+ 8451              ; Amadeus. 2x2.
 159+ 8451
 160+ 8451 71 84        Indice_Amadeus_der defw Amadeus
 161+ 8453 00 00        	defw 0
 162+ 8455 91 84        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8457 00 00        	defw 0
 164+ 8459 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 845B 00 00        	defw 0
 166+ 845D F1 84        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 845F 00 00        	defw 0	 								; (Fín de índice).
 168+ 8461
 169+ 8461 71 84        Indice_Amadeus_izq defw Amadeus
 170+ 8463 00 00        	defw 0
 171+ 8465 F1 84        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8467 00 00        	defw 0
 173+ 8469 C1 84        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 846B 00 00        	defw 0
 175+ 846D 91 84        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 846F 00 00        	defw 0	 								; (Fín de índice).
 177+ 8471
 178+ 8471 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8475 26 64 24 24
 179+ 8479 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 847D 6F F6 67 E6
 180+ 8481 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8485 F7 EF FF FF
 181+ 8489 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 848D 8B D1 71 8E
 182+ 8491
 183+ 8491 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8495 F1 00 09 99
 184+ 8499 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 849D 0B 0D 00 1B
 185+ 84A1 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 84A5 80 19 F9 80
 186+ 84A9 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 84AD F3 C0 3D FB
 187+ 84B1 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 84B5 3E F7 C0 3E
 188+ 84B9 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 84BD 40 1C 63 80
 189+ 84C1
 190+ 84C1 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 84C5 3C 40 02 66
 191+ 84C9 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 84CD 02 C3 40 06
 192+ 84D1 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 84D5 60 06 7E 60
 193+ 84D9 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 84DD 3C F0 0F 7E
 194+ 84E1 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 84E5 0F BD F0 0F
 195+ 84E9 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 84ED 10 07 18 E0
 196+ 84F1
 197+ 84F1 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 84F5 8F 10 00 99
 198+ 84F9 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 84FD 00 B0 D0 01
 199+ 8501 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 8505 D8 01 9F 98
 200+ 8509 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 850D CF 3C 03 DF
 201+ 8511 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 8515 03 EF 7C 03
 202+ 8519 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 851D 44 01 C6 38
 203+ 8521
 204+ 8521              ; ----------------------------------------------------------------------------------------
 205+ 8521
 206+ 8521 27 85        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 8523 57 85        	defw Explosion_2x3_2
 208+ 8525 87 85        	defw Explosion_2x3_3
 209+ 8527
 210+ 8527 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 852B 10 00 04 38
 211+ 852F 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8533 02 E6 80 01
 212+ 8537 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 853B 00 03 DD 80
 213+ 853F 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8543 3B 80 01 9D
 214+ 8547 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 854B 02 FD 80 03
 215+ 854F 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8553 00 08 00 00
 216+ 8557
 217+ 8557 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 855B 38 10 03 BC
 218+ 855F 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8563 04 06 C0 00
 219+ 8567 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 856B 00 03 DD 80
 220+ 856F 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8573 3A 70 01 9C
 221+ 8577 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 857B 04 F8 80 06
 222+ 857F 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8583 00 00 00 00
 223+ 8587
 224+ 8587 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 858B 00 20 08 00
 225+ 858F 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8593 00 06 00 00
 226+ 8597 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 859B 00 00 14 30
 227+ 859F 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 85A3 38 00 01 08
 228+ 85A7 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 85AB 00 80 00 04
 229+ 85AF 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 85B3 10 08 00 20
 230+ 85B7
 231+ 85B7              ; ------------------------------------------
 232+ 85B7
 233+ 85B7 BD 85        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 85B9 DD 85        	defw Explosion_2x2_2
 235+ 85BB FD 85        	defw Explosion_2x2_3
 236+ 85BD
 237+ 85BD 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 85C1 43 84 37 D8
 238+ 85C5 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 85C9 17 F0 3D D8
 239+ 85CD FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 85D1 19 D0 1F 60
 240+ 85D5 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 85D9 40 00 80 00
 241+ 85DD
 242+ 85DD
 243+ 85DD 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 85E1 3B C2 60 0C
 244+ 85E5 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 85E9 07 F0 3D D8
 245+ 85ED 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 85F1 19 C6 1F 64
 246+ 85F5 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 85F9 80 00 00 00
 247+ 85FD
 248+ 85FD 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 8601 88 04 10 0C
 249+ 8605 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 8609 81 E0 01 43
 250+ 860D 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 8611 10 80 18 00
 251+ 8615 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 8619 60 01 80 02
 252+ 861D
 253+ 861D
 254+ 861D
 255+ 861D
 256+ 861D
# file closed: Sprites_e_indices.asm
 105  861D              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 861D
   2+ 861D              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 861D              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 861D
   5+ 861D              ; 19/01/24
   6+ 861D
   7+ 861D 8C 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 861F              ;	defw ...
   9+ 861F              ; 	defw ...
  10+ 861F 00 00        	defw 0
  11+ 8621
  12+ 8621              ; Control. %00000001 00000001
  13+ 8621              ;
  14+ 8621              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 8621              ;                    _ hacen las entidades hacia abajo.
  16+ 8621              ;
  17+ 8621              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 8621
  19+ 8621 27 86        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 8623 2F 86        	defw Disparo_2A
  21+ 8625 37 86        	defw Disparo_3A
  22+ 8627
  23+ 8627 00 00        Disparo_1A defw 0									; Control.
  24+ 8629 00 00        	defw 0											; Puntero objeto.
  25+ 862B 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 862D 00 00        	defw 0											; Rutina de impresión.
  27+ 862F
  28+ 862F 00 00        Disparo_2A defw 0									; Control.
  29+ 8631 00 00        	defw 0											; Puntero objeto.
  30+ 8633 00 00        	defw 0											; Puntero de impresión.
  31+ 8635 00 00        	defw 0											; Rutina de impresión.
  32+ 8637
  33+ 8637 00 00        Disparo_3A defw 0
  34+ 8639
  35+ 8639 4F 86        Indice_de_disparos_entidades defw Disparo_1
  36+ 863B 57 86        	defw Disparo_2
  37+ 863D 5F 86        	defw Disparo_3
  38+ 863F 67 86        	defw Disparo_4
  39+ 8641 6F 86        	defw Disparo_5
  40+ 8643 77 86        	defw Disparo_6
  41+ 8645 7F 86        	defw Disparo_7
  42+ 8647 87 86        	defw Disparo_8
  43+ 8649 8F 86        	defw Disparo_9
  44+ 864B 97 86        	defw Disparo_10
  45+ 864D 9F 86        	defw Disparo_11
  46+ 864F
  47+ 864F 00 00        Disparo_1 defw 0									; Control.
  48+ 8651 00 00        	defw 0											; Puntero objeto.
  49+ 8653 00 00        	defw 0											; Puntero de impresión.
  50+ 8655 00 00        	defw 0											; Rutina de impresión.
  51+ 8657
  52+ 8657 00 00        Disparo_2 defw 0									; Control.
  53+ 8659 00 00        	defw 0											; Puntero objeto.
  54+ 865B 00 00        	defw 0											; Puntero de impresión.
  55+ 865D 00 00        	defw 0											; Rutina de impresión.
  56+ 865F
  57+ 865F 00 00        Disparo_3 defw 0									; Control.
  58+ 8661 00 00        	defw 0											; Puntero objeto.
  59+ 8663 00 00        	defw 0											; Puntero de impresión.
  60+ 8665 00 00        	defw 0											; Rutina de impresión.
  61+ 8667
  62+ 8667 00 00        Disparo_4 defw 0									; Control.
  63+ 8669 00 00        	defw 0											; Puntero objeto.
  64+ 866B 00 00        	defw 0											; Puntero de impresión.
  65+ 866D 00 00        	defw 0											; Rutina de impresión.
  66+ 866F
  67+ 866F 00 00        Disparo_5 defw 0									; Control.
  68+ 8671 00 00        	defw 0											; Puntero objeto.
  69+ 8673 00 00        	defw 0											; Puntero de impresión.
  70+ 8675 00 00        	defw 0											; Rutina de impresión.
  71+ 8677
  72+ 8677 00 00        Disparo_6 defw 0									; Control.
  73+ 8679 00 00        	defw 0											; Puntero objeto.
  74+ 867B 00 00        	defw 0											; Puntero de impresión.
  75+ 867D 00 00        	defw 0											; Rutina de impresión.
  76+ 867F
  77+ 867F 00 00        Disparo_7 defw 0									; Control.
  78+ 8681 00 00        	defw 0											; Puntero objeto.
  79+ 8683 00 00        	defw 0											; Puntero de impresión.
  80+ 8685 00 00        	defw 0											; Rutina de impresión.
  81+ 8687
  82+ 8687 00 00        Disparo_8 defw 0									; Control.
  83+ 8689 00 00        	defw 0											; Puntero objeto.
  84+ 868B 00 00        	defw 0											; Puntero de impresión.
  85+ 868D 00 00        	defw 0											; Rutina de impresión.
  86+ 868F
  87+ 868F 00 00        Disparo_9 defw 0									; Control.
  88+ 8691 00 00        	defw 0											; Puntero objeto.
  89+ 8693 00 00        	defw 0											; Puntero de impresión.
  90+ 8695 00 00        	defw 0											; Rutina de impresión.
  91+ 8697
  92+ 8697 00 00        Disparo_10 defw 0									; Control.
  93+ 8699 00 00        	defw 0											; Puntero objeto.
  94+ 869B 00 00        	defw 0											; Puntero de impresión.
  95+ 869D 00 00        	defw 0											; Rutina de impresión.
  96+ 869F
  97+ 869F 00 00        Disparo_11 defw 0
  98+ 86A1
  99+ 86A1              ; -------------------------------------------------------------------------------------
 100+ 86A1              ;
 101+ 86A1              ;	Índice de cajas de entidades.
 102+ 86A1              ;
 103+ 86A1              ;	18/1/24
 104+ 86A1              ;
 105+ 86A1
 106+ 86A1              Indice_de_cajas_de_entidades
 107+ 86A1
 108+ 86A1 E9 86        	defw Caja_1
 109+ 86A3 FC 86        	defw Caja_2
 110+ 86A5 0F 87        	defw Caja_3
 111+ 86A7 22 87        	defw Caja_4
 112+ 86A9 35 87        	defw Caja_5
 113+ 86AB 48 87        	defw Caja_6
 114+ 86AD 5B 87        	defw Caja_7
 115+ 86AF
 116+ 86AF 00 00        	defw 0
 117+ 86B1 00 00        	defw 0
 118+ 86B3
 119+ 86B3              ; ---------- ---------- ---------- ---------- ----------
 120+ 86B3
 121+ 86B3 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 86B6 00 00        	defw 0		 										; (Posicion_actual).
 123+ 86B8 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 86BA 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 86BC
 126+ 86BC 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 86BD 05           	db %00000101										; (Attr).
 128+ 86BE 51 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 86C0 61 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 86C2 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 86C4 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 86C6 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 86C8 04           	db 4 												; (Cuad_objeto).
 134+ 86C9 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 86CA 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 86D0
 137+ 86D0 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 86D2
 139+ 86D2 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 86D4 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 86D6 40           	db $40												; (Ctrl_0).
 142+ 86D7 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 86DB 00 00
 143+ 86DD 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 86E0 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 86E2 00           	db 0												; (Cola_de_desplazamiento).
 146+ 86E3 00           	db 0 												; (Columnas).
 147+ 86E4 00 00        	defw 0												; (Limite_horizontal).
 148+ 86E6 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 86E9
 150+ 86E9              ; ---------- ---------- ---------- ---------- ----------
 151+ 86E9              ;
 152+ 86E9              ;	22/01/24
 153+ 86E9              ;
 154+ 86E9              ; 	Cada caja tiene 19 bytes !!!
 155+ 86E9
 156+ 86E9 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 157+ 86EC 00           	db %00000000										; (Attr).
 158+ 86ED              ;	db 0												; (Cuad_objeto).
 159+ 86ED 00           	db 0												; (Impacto).
 160+ 86EE 00 00 00...  	ds 6												; Variables_de_borrado
 161+ 86F4 00 00        	defw 0												; (Puntero_de_impresion).
 162+ 86F6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 163+ 86F8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 164+ 86FA 00           	db 0												; (Ctrl_0).
 165+ 86FB 00           	db 0												; (Ctrl_2).
 166+ 86FC
 167+ 86FC              ; ---------- ---------- ---------- ---------- ----------
 168+ 86FC
 169+ 86FC 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 170+ 86FF 00           	db %00000000										; (Attr).
 171+ 8700              ;	db 0												; (Cuad_objeto).
 172+ 8700 00           	db 0												; (Impacto).
 173+ 8701 00 00 00...  	ds 6												; Variables_de_borrado
 174+ 8707 00 00        	defw 0												; (Puntero_de_impresion).
 175+ 8709 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 176+ 870B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 177+ 870D 00           	db 0												; (Ctrl_0).
 178+ 870E 00           	db 0												; (Ctrl_2).
 179+ 870F
 180+ 870F              ; ---------- ---------- ---------- ---------- ----------
 181+ 870F
 182+ 870F 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 183+ 8712 00           	db %00000000										; (Attr).
 184+ 8713              ;	db 0												; (Cuad_objeto).
 185+ 8713 00           	db 0												; (Impacto).
 186+ 8714 00 00 00...  	ds 6												; Variables_de_borrado
 187+ 871A 00 00        	defw 0												; (Puntero_de_impresion).
 188+ 871C 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 189+ 871E 00 00        	defw 0 												; (Contador_de_mov_masticados).
 190+ 8720 00           	db 0												; (Ctrl_0).
 191+ 8721 00           	db 0												; (Ctrl_2).
 192+ 8722
 193+ 8722              ; ---------- ---------- ---------- ---------- ----------
 194+ 8722
 195+ 8722 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 8725 00           	db %00000000										; (Attr).
 197+ 8726              ;	db 0												; (Cuad_objeto).
 198+ 8726 00           	db 0												; (Impacto).
 199+ 8727 00 00 00...  	ds 6												; Variables_de_borrado
 200+ 872D 00 00        	defw 0												; (Puntero_de_impresion).
 201+ 872F 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 202+ 8731 00 00        	defw 0 												; (Contador_de_mov_masticados).
 203+ 8733 00           	db 0												; (Ctrl_0).
 204+ 8734 00           	db 0												; (Ctrl_2).
 205+ 8735
 206+ 8735              ; ---------- ---------- ---------- ---------- ----------
 207+ 8735
 208+ 8735 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 209+ 8738 00           	db %00000000										; (Attr).
 210+ 8739              ;	db 0												; (Cuad_objeto).
 211+ 8739 00           	db 0												; (Impacto).
 212+ 873A 00 00 00...  	ds 6												; Variables_de_borrado
 213+ 8740 00 00        	defw 0												; (Puntero_de_impresion).
 214+ 8742 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 215+ 8744 00 00        	defw 0 												; (Contador_de_mov_masticados).
 216+ 8746 00           	db 0												; (Ctrl_0).
 217+ 8747 00           	db 0												; (Ctrl_2).
 218+ 8748
 219+ 8748              ; ---------- ---------- ---------- ---------- ----------
 220+ 8748
 221+ 8748 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 222+ 874B 00           	db %00000000										; (Attr).
 223+ 874C              ;	db 0												; (Cuad_objeto).
 224+ 874C 00           	db 0												; (Impacto).
 225+ 874D 00 00 00...  	ds 6												; Variables_de_borrado
 226+ 8753 00 00        	defw 0												; (Puntero_de_impresion).
 227+ 8755 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 228+ 8757 00 00        	defw 0 												; (Contador_de_mov_masticados).
 229+ 8759 00           	db 0												; (Ctrl_0).
 230+ 875A 00           	db 0												; (Ctrl_2).
 231+ 875B
 232+ 875B              ; ---------- ---------- ---------- ---------- ----------
 233+ 875B
 234+ 875B 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 235+ 875E 00           	db %00000000										; (Attr).
 236+ 875F              ;	db 0												; (Cuad_objeto).
 237+ 875F 00           	db 0												; (Impacto).
 238+ 8760 00 00 00...  	ds 6												; Variables_de_borrado
 239+ 8766 00 00        	defw 0												; (Puntero_de_impresion).
 240+ 8768 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 241+ 876A 00 00        	defw 0 												; (Contador_de_mov_masticados).
 242+ 876C 00           	db 0												; (Ctrl_0).
 243+ 876D 00           	db 0												; (Ctrl_2).
 244+ 876E
 245+ 876E              ; -------------------------------------------------------------------------------------
 246+ 876E              ;
 247+ 876E              ;	11/1/24
 248+ 876E              ;
 249+ 876E              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 250+ 876E              ;
 251+ 876E              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 252+ 876E              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 253+ 876E              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 254+ 876E              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 255+ 876E
 256+ 876E              Indice_de_definiciones_de_entidades
 257+ 876E
 258+ 876E 72 87        	defw Entidad_1
 259+ 8770 7F 87        	defw Entidad_2
 260+ 8772
 261+ 8772              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 262+ 8772
 263+ 8772              ;	BADSAT, (Satélite malvado).
 264+ 8772
 265+ 8772 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 266+ 8775 04           	db %00000100										; (Attr).
 267+ 8776 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 268+ 8778 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 269+ 877A 03 40        	defw $4003                                      	; (Posicion_inicio).
 270+ 877C 01           	db 1												; (Cuad_objeto).
 271+ 877D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados)
 272+ 877F
 273+ 877F 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 274+ 8782 02           	db %00000010										; (Attr).
 275+ 8783 D1 82        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 276+ 8785 51 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 277+ 8787 40 50        	defw $5040                                      	; (Posicion_inicio).
 278+ 8789 01           	db 1												; (Cuad_objeto).
 279+ 878A 83 89        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 280+ 878C
# file closed: Cajas_y_disparos.asm
 106  878C              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 878C
   2+ 878C
   3+ 878C              ;   07/07/23
   4+ 878C              ;
   5+ 878C              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 878C              ;
   7+ 878C              ;   Codificación:
   8+ 878C              ;
   9+ 878C              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 878C              ;
  11+ 878C              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 878C              ;
  13+ 878C              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 878C              ;
  15+ 878C              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 878C              ;
  17+ 878C              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 878C              ;                               ..... %01000010 Vel_up 4
  19+ 878C              ;                                               Vel_down 2
  20+ 878C              ;                               ..... $42
  21+ 878C              ;
  22+ 878C              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 878C              ;
  24+ 878C              ;                               ..... %01000010 Vel_left 4
  25+ 878C              ;                                               Vel_right 2
  26+ 878C              ;                               ..... $42
  27+ 878C              ;
  28+ 878C              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 878C              ;
  30+ 878C              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 878C              ;
  32+ 878C              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 878C              ;
  34+ 878C              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 878C              ;                                     $53
  36+ 878C              ;
  37+ 878C              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 878C              ;
  39+ 878C              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 878C              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 878C              ;
  42+ 878C              ;                       Arriba ..... $81
  43+ 878C              ;                       Arriba - izquierda ..... $a1
  44+ 878C              ;                       Arriba - derecha ..... $91
  45+ 878C              ;
  46+ 878C              ;                       Abajo ..... $41
  47+ 878C              ;                       Abajo - izquierda ..... $61
  48+ 878C              ;                       Abajo - derecha ..... $51
  49+ 878C              ;
  50+ 878C              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 878C              ;
  52+ 878C              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 878C              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 878C              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 878C              ;
  56+ 878C              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 878C              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 878C              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 878C              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 878C              ;
  61+ 878C              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 878C              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 878C              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 878C              ;
  65+ 878C              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 878C              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 878C              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 878C              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 878C
  70+ 878C              ; ----- ----- ----- ----- -----
  71+ 878C
  72+ 878C B8 87        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 878E C0 87            defw F_1
  74+ 8790 CA 87            defw F_2
  75+ 8792 D4 87            defw Codo_abajo_derecha
  76+ 8794 08 88            defw Derecha_y_subiendo
  77+ 8796 12 88            defw Derecha_y_subiendo_1
  78+ 8798 1C 88            defw F_3
  79+ 879A 26 88            defw F_4
  80+ 879C 30 88            defw Derecha_y_bajando
  81+ 879E 3A 88            defw Derecha_y_bajando_1
  82+ 87A0 44 88            defw Derecha_y_bajando_2
  83+ 87A2 4E 88            defw Codo_derecha_abajo
  84+ 87A4 7E 88            defw Codo_abajo_izq.
  85+ 87A6 B2 88            defw Izquierda_y_subiendo
  86+ 87A8 BC 88            defw Izquierda_y_subiendo_1
  87+ 87AA C6 88            defw F_5
  88+ 87AC D0 88            defw F_6
  89+ 87AE DA 88            defw Izquierda_y_bajando
  90+ 87B0 E4 88            defw Izquierda_y_bajando_1
  91+ 87B2 EE 88            defw Izquierda_y_bajando_2
  92+ 87B4 F8 88            defw Codo_izquierda_abajo
  93+ 87B6 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 87B8
  95+ 87B8 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 87BC 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 87C0
  98+ 87C0 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 87C4 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 87C8 08 00
 100+ 87CA
 101+ 87CA 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 87CE 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 87D2 0F FE
 103+ 87D4
 104+ 87D4 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 87D8 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 87DC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 87E0 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 87E4 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 87E8 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 87EC 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 87F0 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 87F4 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 87F8 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 87FC 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8800 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8804 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 8808
 118+ 8808 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 880C 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8810 06 00
 120+ 8812
 121+ 8812 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 8816 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 881A 02 00
 123+ 881C
 124+ 881C 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8820 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8824 04 00
 126+ 8826
 127+ 8826 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 882A 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 882E 08 00
 129+ 8830
 130+ 8830 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8834 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 8838 02 00
 132+ 883A
 133+ 883A 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 883E 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 8842 06 00
 135+ 8844
 136+ 8844 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 8848 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 884C 06 00
 138+ 884E
 139+ 884E              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 884E
 141+ 884E 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 8852 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 8856 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 885A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 885E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 8862 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 8866 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 886A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 886E 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 8872 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 8876 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 887A 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 887E
 154+ 887E 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 8882 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 8886 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 888A 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 888E 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 8892 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 8896 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 889A 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 889E 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 88A2 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 88A6 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 88AA 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 88AE 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 88B2
 168+ 88B2 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 88B6 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 88BA 06 00
 170+ 88BC
 171+ 88BC 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 88C0 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 88C4 02 00
 173+ 88C6
 174+ 88C6 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 88CA 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 88CE 04 00
 176+ 88D0
 177+ 88D0 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 88D4 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 88D8 08 00
 179+ 88DA
 180+ 88DA 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 88DE 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 88E2 02 00
 182+ 88E4
 183+ 88E4 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 88E8 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 88EC 06 00
 185+ 88EE
 186+ 88EE 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 88F2 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 88F6 06 00
 188+ 88F8
 189+ 88F8 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 88FC 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8900 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8904 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 8908 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 890C 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8910 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8914 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 8918 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 891C 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8920 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8924 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 8928
 202+ 8928
 203+ 8928
 204+ 8928
 205+ 8928
 206+ 8928
 207+ 8928
 208+ 8928
 209+ 8928
 210+ 8928
# file closed: Patrones_de_mov.asm
 107  8928              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 8928              ; 19/1/24
   2+ 8928
   3+ 8928              Indice_de_niveles
   4+ 8928
   5+ 8928 30 89        	defw Nivel_1
   6+ 892A 3C 89        	defw Nivel_2
   7+ 892C
   8+ 892C              ;	...
   9+ 892C              ;	...
  10+ 892C              ;	+ Niveles ...
  11+ 892C
  12+ 892C 00 00        	defw 0
  13+ 892E 00 00        	defw 0
  14+ 8930
  15+ 8930 07           Nivel_1 db 7									; Nº de entidades.
  16+ 8931 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8935 01 01 01 01  	db 1,1,1,1,1,1,1							; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 8939 01 01 01
  18+ 893C
  19+ 893C 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 893D 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 8941 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8945 01 02
  22+ 8947 02 01 01 01  	db 2,1,1,1,1,2
  22+ 894B 01 02
  23+ 894D
# file closed: Niveles.asm
 108  894D
 109  894D              ; ******************************************************************************************************************************************************************************************
 110  894D              ; Constantes.
 111  894D              ; ******************************************************************************************************************************************************************************************
 112  894D              ;
 113  894D              ; 25/12/23
 114  894D
 115  894D              ;
 116  894D              ; Constantes.
 117  894D              ;
 118  894D
 119  894D              Sprite_vacio equ $eae0
 120  894D              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 121  894D              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 122  894D              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 123  894D              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 124  894D
 125  894D
 126  894D              Almacen_de_movimientos_masticados_Amadeus equ $e700
 127  894D              ;
 128  894D              Album_de_fotos equ $8000	;	(8000h - 8055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 129  894D              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 130  894D              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 131  894D              Album_de_fotos_disparos equ $8056 ; (8056h - 80abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 132  894D              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 133  894D              ;														; 55 Bytes.
 134  894D
 135  894D              Album_de_fotos_Amadeus equ $80ac ; (80ach - 80b8h) ; 12 bytes.
 136  894D              ;Almacen_de_parametros_DRAW equ $80b9 ; ($80b9 - $80fb) ; 66 bytes.
 137  894D
 138  894D              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 139  894D
 140  894D              ; ******************************************************************************************************************************************************************************************
 141  894D              ; Variables.
 142  894D              ; ******************************************************************************************************************************************************************************************
 143  894D              ;
 144  894D              ; 18/01/24
 145  894D              ;
 146  894D              ; Variables de DRAW. (Motor principal).	42 Bytes.
 147  894D              ;
 148  894D
 149  894D              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 150  894D
 151  894D 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 152  894E              ;															- Patrón de movimiento.
 153  894E              ;															- Aspecto
 154  894E 00           Filas db 0												; Filas. [DRAW]
 155  894F 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 156  8950 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 157  8952 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 158  8954 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 159  8955 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 160  8956
 161  8956              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 162  8956
 163  8956 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 164  8957              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 165  8957              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 166  8957 00           Attr db 0												; Atributos de la entidad:
 167  8958
 168  8958              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 169  8958              ;
 170  8958              ;	COLORES: 0 ..... NEGRO
 171  8958              ;    		 1 ..... AZUL
 172  8958              ; 			 2 ..... ROJO
 173  8958              ;			 3 ..... MAGENTA
 174  8958              ; 			 4 ..... VERDE
 175  8958              ; 			 5 ..... CIAN
 176  8958              ;			 6 ..... AMARILLO
 177  8958              ; 			 7 ..... BLANCO
 178  8958
 179  8958 00 00        Indice_Sprite_der defw 0
 180  895A 00 00        Indice_Sprite_izq defw 0
 181  895C 00 00        Puntero_DESPLZ_der defw 0
 182  895E 00 00        Puntero_DESPLZ_izq defw 0
 183  8960
 184  8960 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 185  8962 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 186  8963
 187  8963              ; Variables de objeto. (Características).
 188  8963
 189  8963 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 190  8964              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 191  8964              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 192  8964 00 00 00...  Variables_de_borrado ds 6
 193  896A
 194  896A 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 195  896C              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 196  896C
 197  896C 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 198  896E
 199  896E              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 200  896E              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 201  896E
 202  896E 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 203  8970              ;														; _palabras que componen el "movimiento_masticado".
 204  8970
 205  8970              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 206  8970
 207  8970 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 208  8971              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 209  8971              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 210  8971              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 211  8971              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 212  8971              ;
 213  8971              ; 														DESCRIPCIÖN:
 214  8971              ;
 215  8971              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 216  8971              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 217  8971              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 218  8971              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 219  8971              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 220  8971              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 221  8971              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 222  8971              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 223  8971              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 224  8971              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 225  8971              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 226  8971              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 227  8971              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 228  8971              ;
 229  8971              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 230  8971              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 231  8971              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 232  8971
 233  8971              ; Variables de funcionamiento. [DRAW].
 234  8971
 235  8971 00           Columnas db 0
 236  8972 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 237  8974              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  8974 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 239  8975
 240  8975              ; variables de control general.
 241  8975
 242  8975 00           Ctrl_2 db 0
 243  8976              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 244  8976              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 245  8976              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 246  8976              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 247  8976              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 248  8976              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 249  8976              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 250  8976              ;
 251  8976              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 252  8976              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 253  8976              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 254  8976              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 255  8976              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 256  8976              ;														BIT 4, ???
 257  8976              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 258  8976
 259  8976 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 260  8977
 261  8977              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 262  8977
 263  8977              ;					         		---------;      ;---------
 264  8977
 265  8977              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 266  8977
 267  8977              Perfiles_de_velocidad
 268  8977
 269  8977 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 270  8978 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 271  8979 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 272  897A 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 273  897B
 274  897B              ; Contadores de 16 bits.
 275  897B
 276  897B 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 277  897D 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 278  897F 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 279  8981 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 280  8983
 281  8983              ; Almacenes de mov_masticados.
 282  8983
 283  8983 00 EB        Almacen_de_movimientos_masticados_Entidad_1 defw $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 284  8985              ; .....
 285  8985              ; .....
 286  8985              ; .....
 287  8985              ; .....
 288  8985
 289  8985              ; Movimiento. ------------------------------------------------------------------------------------------------------
 290  8985
 291  8985 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 292  8987 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 293  8989 00 00        Puntero_indice_mov_bucle defw 0							;
 294  898B              ;
 295  898B              ;
 296  898B 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 297  898C              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 298  898C              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 299  898C 00           Incrementa_puntero_backup db 0
 300  898D 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 301  898E              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 302  898E 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 303  898F 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 304  8990 00           Cola_de_desplazamiento db 0								; Este byte indica:
 305  8991              ;
 306  8991              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 307  8991              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 308  8991              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 309  8991              ;
 310  8991              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 311  8991              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 312  8991              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 313  8991              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 314  8991              ;
 315  8991              ;														;	"$ff" ..... Bucle infinito de repetición.
 316  8991              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 317  8991              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 318  8991              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 319  8991
 320  8991 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 321  8992
 322  8992              ;														DESCRIPCIÓN:
 323  8992              ;
 324  8992              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 325  8992              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 326  8992              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 327  8992              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 328  8992              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 329  8992              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 330  8992
 331  8992              ;														BIT 3, Recarga de nueva oleada.
 332  8992              ;														BIT 4, Recarga de nueva oleada.
 333  8992              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 334  8992              ;														BIT 6, **** Frame completo.
 335  8992              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 336  8992
 337  8992 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 338  8994              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 339  8994              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 340  8994              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 341  8994
 342  8994              ; Gestión de ENTIDADES y CAJAS.
 343  8994
 344  8994 00 00        Puntero_store_caja defw 0
 345  8996 00 00        Puntero_restore_caja defw 0
 346  8998 00 00        Indice_restore_caja defw 0
 347  899A 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 348  899B 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 349  899C 00           Entidades_en_curso db 0									; ..... ..... .....
 350  899D 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 351  899E              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 352  899E              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 353  899E              ;														; _ (Numero_de_malotes)="0".
 354  899E 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 355  89A0 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 356  89A2              ;														; _ puntero (Indice_entidades).
 357  89A2
 358  89A2              ;---------------------------------------------------------------------------------------------------------------
 359  89A2              ;
 360  89A2              ;	11/01/24
 361  89A2              ;
 362  89A2              ;	Álbumes.
 363  89A2
 364  89A2 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 365  89A4              ;														; _variable para almacenar lo posición del puntero_
 366  89A4              ; 														; _de pila, SP.
 367  89A4 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 368  89A6              ;														; La utiliza la rutina [Extrae_foto_registros].
 369  89A6 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 370  89A8 00 80        Stack_snapshot defw Album_de_fotos
 371  89AA 56 80        Stack_snapshot_disparos defw Album_de_fotos_disparos
 372  89AC
 373  89AC              ;End_Snapshot defw Album_de_fotos
 374  89AC              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 375  89AC 56 80        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 376  89AE              ;														; _el snapshot de los registros del siguiente disparo.
 377  89AE              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 378  89AE AC 80        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 379  89B0
 380  89B0 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 381  89B1              ;
 382  89B1              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 383  89B1              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 384  89B1              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 385  89B1
 386  89B1 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 387  89B2              ;
 388  89B2              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 389  89B2              ;
 390  89B2              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 391  89B2              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 392  89B2              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 393  89B2              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 394  89B2              ;
 395  89B2              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 396  89B2              ;															_ masticados ya generados.
 397  89B2              ;
 398  89B2              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 399  89B2              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 400  89B2              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 401  89B2              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 402  89B2
 403  89B2
 404  89B2              ; Gestión de Disparos.
 405  89B2
 406  89B2 00           Numero_de_disparotes db 0
 407  89B3 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 408  89B5 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 409  89B7 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 410  89B8              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 411  89B8              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 412  89B8 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 413  89BA              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 414  89BA              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 415  89BA              ;														; _produzca colisión.
 416  89BA 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 417  89BC              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 418  89BC 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 419  89BF              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 420  89BF 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 421  89C2              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 422  89C2 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 423  89C3
 424  89C3              ;---------------------------------------------------------------------------------------------------------------
 425  89C3
 426  89C3              ; Relojes y temporizaciones.
 427  89C3
 428  89C3 00           Contador_de_frames db 0
 429  89C4 00           Contador_de_frames_2 db 0
 430  89C5
 431  89C5 04           Clock_explosion db 4
 432  89C6 14           Clock_Entidades_en_curso db 20
 433  89C7 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 434  89C8              ;														; Repite la oleada de entidades.
 435  89C8 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 436  89C9 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 437  89CA 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 438  89CB
 439  89CB 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 440  89CC 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 441  89CD 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 442  89CE
 443  89CE              ;---------------------------------------------------------------------------------------------------------------
 444  89CE
 445  89CE              ; Gestión de NIVELES.
 446  89CE
 447  89CE 00           Nivel db 0												; Nivel actual del juego.
 448  89CF 00 00        Puntero_indice_NIVELES defw 0
 449  89D1 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 450  89D3              ; 														; _ que definen el NIVEL.
 451  89D3              ; Y todo comienza aquí .....
 452  89D3              ;
 453  89D3              ; 	INICIO  *************************************************************************************************************************************************************************
 454  89D3              ;
 455  89D3              ;	5/1/24
 456  89D3
 457  89D3              START
 458  89D3
 459  89D3 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 460  89D6 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 461  89D8 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 462  89DA ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 463  89DC F3           	DI
 464  89DD
 465  89DD 3E 07        	ld a,%00000111
 466  89DF CD F8 9E     	call Cls
 467  89E2 CD 4E 8C     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 468  89E5
 469  89E5              ; INICIALIZACIÓN.
 470  89E5
 471  89E5              ;	Inicializa 1er Nivel.
 472  89E5
 473  89E5 21 28 89     	ld hl,Indice_de_niveles
 474  89E8 22 CF 89     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 475  89EB CD 12 8D     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 476  89EE
 477  89EE              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 478  89EE              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 479  89EE              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 480  89EE
 481  89EE              ;	Provisional, (para desarrollo).
 482  89EE
 483  89EE              	;-
 484  89EE              ;	ld hl,Numero_parcial_de_entidades
 485  89EE              ;	ld b,(hl)
 486  89EE              ;	inc b
 487  89EE              ;	dec b
 488  89EE              ;	jr z,3F	;-									   		 ; Si no hay entidades, cargamos AMADEUS.
 489  89EE
 490  89EE CD 57 8D     4 call Inicia_Entidades
 491  89F1
 492  89F1 CD 11 8B     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 493  89F4
 494  89F4              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 495  89F4              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 496  89F4              ; (Esto se dá cuando se inicia una nueva oleada).
 497  89F4
 498  89F4              ;	ld a,(Ctrl_1)
 499  89F4              ;	bit 3,a
 500  89F4              ;	jr nz,5F											; Loop
 501  89F4
 502  89F4              ; 	INICIA AMADEUS !!!!!
 503  89F4
 504  89F4              ;3 call Restore_Amadeus
 505  89F4              ;	call Inicia_Puntero_objeto
 506  89F4              ;	call Draw
 507  89F4
 508  89F4              ;	call Guarda_movimiento_masticado	;! Provisional
 509  89F4
 510  89F4              ;	call Guarda_foto_registros
 511  89F4              ;	call Guarda_datos_de_borrado_Amadeus
 512  89F4
 513  89F4              ;	ld de,Amadeus_db
 514  89F4              ;	call Store_Amadeus
 515  89F4
 516  89F4              ; 	INICIA DISPAROS !!!!!
 517  89F4
 518  89F4              ;	call Inicia_Puntero_Disparo_Entidades
 519  89F4              ;	call Inicia_Puntero_Disparo_Amadeus
 520  89F4
 521  89F4              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 522  89F4
 523  89F4              ;5 call Inicia_punteros_de_cajas
 524  89F4              ;	call Restore_entidad
 525  89F4
 526  89F4              ;	ld a,(Ctrl_1)
 527  89F4              ;	bit 3,a
 528  89F4              ;	jr z,6F
 529  89F4
 530  89F4              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 531  89F4
 532  89F4              ;	ld hl,Ctrl_1
 533  89F4              ;	res 3,(hl)
 534  89F4              ;	jr Main
 535  89F4
 536  89F4              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 537  89F4
 538  89F4 21 B0 89     6 ld hl,Ctrl_3
 539  89F7 CB C6        	set 0,(hl)											; Frame completo.
 540  89F9 FB           	ei
 541  89FA 76           	halt
 542  89FB
 543  89FB              ; ------------------------------------
 544  89FB
 545  89FB              Main
 546  89FB              ;
 547  89FB              ;	11/12/23
 548  89FB
 549  89FB              ; Aparece nueva entidad ???
 550  89FB
 551  89FB              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 552  89FB              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 553  89FB              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 554  89FB              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 555  89FB              ;														; _un 2º bloque.
 556  89FB
 557  89FB              ;	ld a,1
 558  89FB              ;	out ($fe),a
 559  89FB
 560  89FB 3A C6 89     	ld a,(Clock_Entidades_en_curso)
 561  89FE 47           	ld b,a
 562  89FF 3A C3 89     	ld a,(Contador_de_frames)
 563  8A02 B8           	cp b
 564  8A03 20 18        	jr nz,13F
 565  8A05
 566  8A05              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 567  8A05              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 568  8A05
 569  8A05 3A 9B 89     21 ld a,(Numero_parcial_de_entidades)
 570  8A08 47           	ld b,a
 571  8A09 3A 9C 89     	ld a,(Entidades_en_curso)
 572  8A0C B8           	cp b
 573  8A0D 28 0E        	jr z,13F
 574  8A0F 30 0C        	jr nc,13F
 575  8A11
 576  8A11 3C           	inc a
 577  8A12 32 9C 89     	ld (Entidades_en_curso),a
 578  8A15
 579  8A15              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 580  8A15
 581  8A15 3A C6 89     	ld a,(Clock_Entidades_en_curso)
 582  8A18              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 583  8A18              ;! _ IMPREDECIBLE !!!!
 584  8A18 C6 64        	add 100
 585  8A1A 32 C6 89     	ld (Clock_Entidades_en_curso),a
 586  8A1D
 587  8A1D              ; -------------------------------------------------------------------------------------------------------------
 588  8A1D
 589  8A1D              ; Habilita disparos.
 590  8A1D
 591  8A1D              13
 592  8A1D
 593  8A1D              ;	ld hl,Disparo_Amadeus
 594  8A1D              ;	ld de,CLOCK_repone_disparo_Amadeus
 595  8A1D              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 596  8A1D
 597  8A1D              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 598  8A1D              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 599  8A1D              ;	call Habilita_disparos
 600  8A1D
 601  8A1D              ; COLISIONES.
 602  8A1D
 603  8A1D              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 604  8A1D
 605  8A1D              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 606  8A1D              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 607  8A1D              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 608  8A1D
 609  8A1D              ;	xor a
 610  8A1D              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 611  8A1D
 612  8A1D              ;	call Inicia_punteros_de_cajas
 613  8A1D              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 614  8A1D              ; 														; _ en DRAW.
 615  8A1D
 616  8A1D              ;	ld a,(Filas)
 617  8A1D              ;	and a
 618  8A1D              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 619  8A1D              ;	call Incrementa_punteros_de_cajas
 620  8A1D              ;	jr 12B
 621  8A1D
 622  8A1D              ; ---------------------------------------------------------------------------------------
 623  8A1D
 624  8A1D 3A 9B 89     10 ld a,(Numero_parcial_de_entidades)
 625  8A20 47               ld b,a
 626  8A21 A7           	and a
 627  8A22 20 00        	jr nz,11F
 628  8A24
 629  8A24              ;	ld hl,Ctrl_1;
 630  8A24              ;	bit 4,(hl)
 631  8A24              ;	jp nz,16F
 632  8A24
 633  8A24              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 634  8A24
 635  8A24              ;	ld hl,Ctrl_1
 636  8A24              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 637  8A24
 638  8A24              ;	ld a,(Contador_de_frames)
 639  8A24              ;	inc a
 640  8A24              ;	ld (Activa_recarga_cajas),a
 641  8A24
 642  8A24              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 643  8A24
 644  8A24 3A 9C 89     11 ld a,(Entidades_en_curso)
 645  8A27 A7           	and a
 646  8A28 28 1D        	jr z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 647  8A2A 47           	ld b,a												; No hay entidades que gestionar.
 648  8A2B
 649  8A2B              ; ( Código que ejecutamos con cada entidad: ).
 650  8A2B
 651  8A2B              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 652  8A2B
 653  8A2B C5           15 push bc 												; Nº de entidades en curso.
 654  8A2C
 655  8A2C CD E4 8B     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 656  8A2F
 657  8A2F
 658  8A2F 3A B0 89     	ld a,(Ctrl_3)
 659  8A32 CB 57        	bit 2,a
 660  8A34 F3           	di
 661  8A35 20 FE        	jr nz,$
 662  8A37 FB           	ei
 663  8A38
 664  8A38
 665  8A38
 666  8A38
 667  8A38              ; Existe "Entidad_guía" ???.
 668  8A38              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 669  8A38
 670  8A38              ;	ld a,(Ctrl_3)
 671  8A38              ;	bit 1,a
 672  8A38              ;	jr nz,22F
 673  8A38
 674  8A38              ; Almacén de "Movimientos_masticados" lleno ???
 675  8A38              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 676  8A38              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 677  8A38
 678  8A38              ;;	ld a,(Ctrl_3)
 679  8A38              ;;	bit 3,a
 680  8A38              ;;	jr nz,22F
 681  8A38
 682  8A38              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 683  8A38
 684  8A38              ;	ld hl,Ctrl_2
 685  8A38              ;	set 5,(hl)
 686  8A38              ;	ld hl,Ctrl_3
 687  8A38              ;	set 1,(hl)
 688  8A38
 689  8A38              ; Impacto ???
 690  8A38
 691  8A38              ;22 ld a,(Impacto)
 692  8A38              ;	and a
 693  8A38              ;	jr z,8F
 694  8A38
 695  8A38              ; Hay Impacto en esta entidad.
 696  8A38
 697  8A38              ;	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 698  8A38              ;	dec (hl)
 699  8A38              ;	jp nz,17F
 700  8A38
 701  8A38              ;! Velocidad de la animación de la explosión.
 702  8A38
 703  8A38              ;	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 704  8A38              ;														; _,(velocidad de la explosión).
 705  8A38              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 706  8A38
 707  8A38              ;	call Repone_datos_de_borrado
 708  8A38              ;	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 709  8A38
 710  8A38              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 711  8A38
 712  8A38              ;	ld a,(Ctrl_2)
 713  8A38              ;	bit 1,a
 714  8A38              ;	jr nz,7F											; Se han iniciado los punteros de explosión???
 715  8A38
 716  8A38              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 717  8A38
 718  8A38              ;	ld a,(CTRL_DESPLZ)
 719  8A38              ;	and a
 720  8A38              ;	jr nz,18F
 721  8A38
 722  8A38              ;	ld hl,Indice_Explosion_2x2-2
 723  8A38              ;	ld (Puntero_DESPLZ_der),hl
 724  8A38              ;	jr 19F
 725  8A38
 726  8A38              ;18 ld hl,Indice_Explosion_2x3-2
 727  8A38              ;	ld (Puntero_DESPLZ_der),hl
 728  8A38
 729  8A38              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 730  8A38              ;	set 1,(hl)
 731  8A38              ;	jr 7F
 732  8A38
 733  8A38              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 734  8A38              ; _con las coordenadas de la entidad almacenada en DRAW.
 735  8A38
 736  8A38              ;8 ld a,(Ctrl_1)
 737  8A38              ;	bit 2,a
 738  8A38              ;	jr z,7F
 739  8A38
 740  8A38              ;	ld hl,(Coordenadas_disparo_certero)
 741  8A38              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 742  8A38              ;														; E contiene la coordenada_X del disparo.
 743  8A38              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 744  8A38              ;														; H FILA, (Coordenada_y de la entidad).
 745  8A38              ;	and a
 746  8A38              ;	sbc hl,de
 747  8A38
 748  8A38              ;	call Determina_resultado_comparativa
 749  8A38
 750  8A38              ;	ld a,b
 751  8A38              ;	and a
 752  8A38              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 753  8A38
 754  8A38              ; ----- ----- -----
 755  8A38
 756  8A38              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 757  8A38              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 758  8A38
 759  8A38              ;	ld hl,Ctrl_1
 760  8A38              ;	res 2,(hl)
 761  8A38
 762  8A38 CD 54 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 763  8A3B
 764  8A3B              ;	ld a,(Ctrl_0)
 765  8A3B              ;	bit 4,a
 766  8A3B              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 767  8A3B
 768  8A3B              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 769  8A3B              ; [[[
 770  8A3B              ;	call Detecta_disparo_entidad
 771  8A3B              ; ]]]
 772  8A3B
 773  8A3B CD C1 8D     	call Guarda_foto_de_mov_masticado					; PINTAMOS !!!!!!!!!!!!!!!!!!
 774  8A3E
 775  8A3E              ;	ld hl,Ctrl_0
 776  8A3E              ;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 777  8A3E
 778  8A3E CD B1 8D     17 call Store_Restore_cajas
 779  8A41
 780  8A41 C1           	pop bc
 781  8A42
 782  8A42 10 E7        	djnz 15B
 783  8A44
 784  8A44 CD 11 8B     	call Inicia_punteros_de_cajas 						; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 785  8A47
 786  8A47              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 787  8A47              ; Hemos gestionado todas las unidades.
 788  8A47              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 789  8A47
 790  8A47              ;	ld hl,Ctrl_1
 791  8A47              ;	res 2,(hl)
 792  8A47
 793  8A47 21 B0 89     16 ld hl,Ctrl_3
 794  8A4A CB C6        	set 0,(hl)											; Frame completo.
 795  8A4C
 796  8A4C AF           	xor a
 797  8A4D D3 FE        	out ($fe),a
 798  8A4F
 799  8A4F 76           	halt
 800  8A50
 801  8A50              ; ----------------------------------------
 802  8A50
 803  8A50              ;	ld a,(Ctrl_1) 										; Existe Loop?
 804  8A50              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 805  8A50 CA FB 89     	jp z,Main
 806  8A53
 807  8A53              ; RECARGA DE NUEVA OLEADA.
 808  8A53
 809  8A53              ;	ld a,(Contador_de_frames)
 810  8A53              ;	ld b,a
 811  8A53              ;	ld a,(Activa_recarga_cajas)
 812  8A53              ;	cp b
 813  8A53              ;	jr z,20F
 814  8A53
 815  8A53              ;	ld hl,Ctrl_1
 816  8A53              ;	set 4,(hl)
 817  8A53              ;	jp Main
 818  8A53
 819  8A53              ;20 ld hl,Ctrl_1
 820  8A53              ;	res 4,(hl)
 821  8A53
 822  8A53              ;	ld a,(Contador_de_frames)
 823  8A53
 824  8A53              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 825  8A53              ;! _ IMPREDECIBLE !!!!
 826  8A53
 827  8A53              ;	add 10
 828  8A53              ;	ld (Clock_Entidades_en_curso),a
 829  8A53
 830  8A53              ;	jp 4B
 831  8A53
 832  8A53 C9           	ret
 833  8A54
 834  8A54              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 835  8A54              ;
 836  8A54              ;	16/11/23
 837  8A54
 838  8A54              ;;Gestiona_Amadeus
 839  8A54
 840  8A54              ;! Activa/desactiva impacto con Amadeus.
 841  8A54
 842  8A54              ;	ld a,(Impacto)
 843  8A54              ;	and a
 844  8A54              ;	jr nz,2F
 845  8A54
 846  8A54              ;;	call Mov_Amadeus
 847  8A54
 848  8A54              ;;2 ld a,(Ctrl_0)
 849  8A54              ;;	bit 4,a
 850  8A54              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 851  8A54
 852  8A54              ;;	call Guarda_foto_entidad_a_pintar
 853  8A54              ;;	call Guarda_datos_de_borrado_Amadeus
 854  8A54
 855  8A54              ;;1 ld hl,Ctrl_0
 856  8A54              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 857  8A54
 858  8A54              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 859  8A54
 860  8A54              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 861  8A54
 862  8A54              ;	call Calcula_numero_de_disparotes
 863  8A54
 864  8A54              ;;	ret
 865  8A54
 866  8A54              ; --------------------------------------------------------------------------------------------------------------
 867  8A54              ;
 868  8A54              ;	15/12/23
 869  8A54
 870  8A54              Mov_obj
 871  8A54
 872  8A54              ;	ld a,(Ctrl_2)
 873  8A54              ;	bit 1,a
 874  8A54              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 875  8A54
 876  8A54              ; Explosión:
 877  8A54
 878  8A54              ;	ld a,(Frames_explosion)
 879  8A54              ;	and a
 880  8A54              ;	jr nz,4F
 881  8A54
 882  8A54              ;!  Una alimaña menos!!!!!!!!!1
 883  8A54
 884  8A54              ; Se trataba de una Entidad_guía ???
 885  8A54
 886  8A54              ;	ld a,(Ctrl_2)
 887  8A54              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 888  8A54              ;	jr z,5F
 889  8A54
 890  8A54              ;	ld hl,Ctrl_3
 891  8A54              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 892  8A54
 893  8A54              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 894  8A54              ;!! _generado puede ser distinto, (aletoriedad).
 895  8A54
 896  8A54              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 897  8A54              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 898  8A54              ;	dec (hl)
 899  8A54              ;	ld hl,Entidades_en_curso
 900  8A54              ;	dec (hl)
 901  8A54              ;	ld hl,Numero_de_entidades
 902  8A54              ;	dec (hl)
 903  8A54              ;	jr 3F
 904  8A54
 905  8A54              ; -----
 906  8A54
 907  8A54              ;	`Movemos´ la explosión.
 908  8A54
 909  8A54              ;4 ld hl,(Puntero_DESPLZ_der)
 910  8A54              ;	inc hl
 911  8A54              ;	inc hl
 912  8A54              ;	call Extrae_address
 913  8A54              ;;	ld (Puntero_objeto),hl
 914  8A54
 915  8A54              ;;	ld hl,Frames_explosion
 916  8A54              ;;	dec (hl)
 917  8A54
 918  8A54              ;;	ld hl,Ctrl_0
 919  8A54              ;;	set 4,(hl);;
 920  8A54
 921  8A54              ;;	jr 3F
 922  8A54
 923  8A54              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 924  8A54
 925  8A54              ;2 xor a
 926  8A54              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 927  8A54
 928  8A54              ; Movemos Entidades malignas.
 929  8A54              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 930  8A54
 931  8A54              ;	ld a,(Ctrl_2)
 932  8A54              ;	bit 5,a
 933  8A54              ;	jr nz,8F
 934  8A54
 935  8A54              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 936  8A54              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 937  8A54              ;	jr 7F
 938  8A54
 939  8A54              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 940  8A54
 941  8A54              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 942  8A54              ;	bit 4,a
 943  8A54              ;	ret z
 944  8A54
 945  8A54              ; Ha habido desplazamiento de la entidad maligna.
 946  8A54              ; Ha llegado a zona de AMADEUS ???
 947  8A54
 948  8A54              ;7 ld a,(Coordenada_y)
 949  8A54              ;	cp $14
 950  8A54              ;	jr c,1F
 951  8A54
 952  8A54              ; ---------
 953  8A54
 954  8A54              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 955  8A54              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 956  8A54
 957  8A54              ;	di
 958  8A54              ;	call Genera_coordenadas_X
 959  8A54              ;	call Compara_coordenadas_X
 960  8A54              ;	ei
 961  8A54
 962  8A54              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 963  8A54
 964  8A54              ; ---------
 965  8A54
 966  8A54              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 967  8A54 CD C2 8C     	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 968  8A57 CD 4F 8B     	call Limpia_Variables_de_borrado
 969  8A5A
 970  8A5A C9           3 ret
 971  8A5B
 972  8A5B              ; --------------------------------------------------------------------------------------------------------------
 973  8A5B              ;
 974  8A5B              ;	29/1/23
 975  8A5B
 976  8A5B              Mov_Amadeus
 977  8A5B
 978  8A5B              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 979  8A5B
 980  8A5B CD BB 95     	call Mov_right
 981  8A5E
 982  8A5E 3A 70 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 983  8A61 CB 67        	bit 4,a
 984  8A63 C8           	ret z
 985  8A64
 986  8A64              ; ---------
 987  8A64
 988  8A64              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 989  8A64 CD B2 8C     	call Repone_datos_de_borrado_Amadeus
 990  8A67 CD 4F 8B     	call Limpia_Variables_de_borrado
 991  8A6A
 992  8A6A C9           	ret
 993  8A6B
 994  8A6B              ; -----------------------------------------------------------------------------------
 995  8A6B              ;
 996  8A6B              ;	20/01/24
 997  8A6B              ;
 998  8A6B              ;
 999  8A6B
1000  8A6B              Construye_movimientos_masticados_entidad
1001  8A6B
1002  8A6B 2A 6C 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1003  8A6E E5           	push hl
1004  8A6F CD B3 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1005  8A72              ;															; _ el (Contador_de_mov_masticados).
1006  8A72 CD AF 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1007  8A75              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1008  8A75 CD 17 95     	call Recompone_posicion_inicio
1009  8A78
1010  8A78 CD 0B 8F     1 call Draw
1011  8A7B CD 97 8A     	call Guarda_movimiento_masticado
1012  8A7E
1013  8A7E CD 91 98     	call Movimiento
1014  8A81
1015  8A81 3A B0 89     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1016  8A84 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1017  8A86 28 F0        	jr z,1B
1018  8A88
1019  8A88              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1020  8A88              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1021  8A88
1022  8A88 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1023  8A89 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1024  8A8C
1025  8A8C              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1026  8A8C
1027  8A8C CD F5 99     	call Situa_en_contador_general_de_mov_masticados
1028  8A8F
1029  8A8F              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1030  8A8F              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1031  8A8F
1032  8A8F ED 4B 6E 89  	ld bc,(Contador_de_mov_masticados)
1033  8A93 71           	ld (hl),c
1034  8A94 23           	inc hl
1035  8A95 70           	ld (hl),b
1036  8A96
1037  8A96 C9           	ret
1038  8A97
1039  8A97              ; -----------------------------------------------------------------------------------
1040  8A97              ;
1041  8A97              ;	28/12/23
1042  8A97              ;
1043  8A97              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1044  8A97              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1045  8A97
1046  8A97              Guarda_movimiento_masticado
1047  8A97
1048  8A97 ED 73 A2 89  	ld (Stack),sp
1049  8A9B ED 7B 6C 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1050  8A9F
1051  8A9F E5           	push hl
1052  8AA0 DD E5            push ix
1053  8AA2 FD E5            push iy
1054  8AA4
1055  8AA4 ED 7B A2 89      ld sp,(Stack)
1056  8AA8
1057  8AA8 2A 6E 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1058  8AAB 23           	inc hl
1059  8AAC 22 6E 89     	ld (Contador_de_mov_masticados),hl
1060  8AAF
1061  8AAF CD B3 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1062  8AB2              ;															; _ el (Contador_de_mov_masticados).
1063  8AB2 C9               ret
1064  8AB3
1065  8AB3              ; --------------------------------------------------------------------------------------------------------------
1066  8AB3              ;
1067  8AB3              ;	12/1/24
1068  8AB3              ;
1069  8AB3              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1070  8AB3
1071  8AB3              Actualiza_Puntero_de_almacen_de_mov_masticados
1072  8AB3
1073  8AB3 2A 6C 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1074  8AB6 01 06 00     	ld bc,6
1075  8AB9 A7           	and a
1076  8ABA ED 4A        	adc hl,bc
1077  8ABC 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1078  8ABF C9           	ret
1079  8AC0
1080  8AC0              ; --------------------------------------------------------------------------------------------------------------
1081  8AC0              ;
1082  8AC0              ;	15/01/24
1083  8AC0              ;
1084  8AC0              ;	Cargamos los registros_
1085  8AC0              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1086  8AC0              ;
1087  8AC0              ;	HL contiene la dirección de la rutina de impresión.
1088  8AC0              ;	IX contiene el puntero de impresión.
1089  8AC0              ;	IY contiene (Puntero_objeto).
1090  8AC0
1091  8AC0
1092  8AC0 ED 73 A2 89  Cargamos_registros_con_mov_masticado ld (Stack),sp
1093  8AC4 ED 7B 6C 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1094  8AC8
1095  8AC8 FD E1        	pop iy
1096  8ACA DD E1        	pop ix
1097  8ACC E1           	pop hl
1098  8ACD
1099  8ACD ED 73 6C 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1100  8AD1
1101  8AD1 ED 7B A2 89  	ld sp,(Stack)
1102  8AD5
1103  8AD5 C9           	ret
1104  8AD6
1105  8AD6              ; --------------------------------------------------------------------------------------------------------------
1106  8AD6              ;
1107  8AD6              ;	28/12/23
1108  8AD6              ;
1109  8AD6              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1110  8AD6              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1111  8AD6
1112  8AD6              Guarda_foto_entidad_a_pintar
1113  8AD6
1114  8AD6 3A 70 89     	ld a,(Ctrl_0)
1115  8AD9 CB 77        	bit 6,a
1116  8ADB 28 04        	jr z,5F
1117  8ADD
1118  8ADD              ;	Guarda la foto de Amadeus.
1119  8ADD
1120  8ADD              ;	call Draw
1121  8ADD              ;	call Guarda_movimiento_masticado	;! Provisional
1122  8ADD CD BF 80     	call Guarda_foto_registros
1123  8AE0 C9           	ret
1124  8AE1
1125  8AE1              ; ENTIDADES!
1126  8AE1              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1127  8AE1
1128  8AE1 3A B0 89     5 ld a,(Ctrl_3)
1129  8AE4 CB 5F        	bit 3,a
1130  8AE6 28 01        	jr z,1F
1131  8AE8
1132  8AE8              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1133  8AE8
1134  8AE8              4
1135  8AE8              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1136  8AE8 C9           	ret
1137  8AE9
1138  8AE9              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1139  8AE9
1140  8AE9 3A B0 89     1 ld a,(Ctrl_3)
1141  8AEC CB 57        	bit 2,a
1142  8AEE 20 10        	jr nz,6F
1143  8AF0
1144  8AF0              ; Entidad guía o fantasma ???
1145  8AF0
1146  8AF0 3A 75 89     	ld a,(Ctrl_2)
1147  8AF3 CB 6F        	bit 5,a
1148  8AF5 20 10        	jr nz,3F
1149  8AF7
1150  8AF7              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1151  8AF7
1152  8AF7 18 EF        	jr 4B
1153  8AF9
1154  8AF9              ; ENTIDAD_GUÍA:
1155  8AF9              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1156  8AF9              ; _guardando "movimientos_masticados".
1157  8AF9
1158  8AF9 3A B0 89     2 ld a,(Ctrl_3)
1159  8AFC CB 57        	bit 2,a
1160  8AFE 28 07        	jr z,3F
1161  8B00
1162  8B00              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1163  8B00              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1164  8B00
1165  8B00 CB 97        6 res 2,a
1166  8B02 CB DF        	set 3,a
1167  8B04 32 B0 89     	ld (Ctrl_3),a
1168  8B07
1169  8B07
1170  8B07              ;	Esto sólo lo ejecuta una entidad guía.
1171  8B07
1172  8B07 CD 0B 8F     3 	call Draw
1173  8B0A CD 97 8A     	call Guarda_movimiento_masticado
1174  8B0D CD BF 80     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1175  8B10
1176  8B10              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1177  8B10              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1178  8B10
1179  8B10              ;	call Convierte_guia_en_fantasma
1180  8B10 C9           	ret
1181  8B11
1182  8B11              ; *************************************************************************************************************************************************************
1183  8B11              ;
1184  8B11              ; 8/1/23
1185  8B11              ;
1186  8B11              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1187  8B11              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1188  8B11              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1189  8B11
1190  8B11              ; Destruye HL y DE !!!!!
1191  8B11
1192  8B11              Inicia_punteros_de_cajas
1193  8B11
1194  8B11 21 A1 86     	ld hl,Indice_de_cajas_de_entidades
1195  8B14 CD A9 8B         call Extrae_address
1196  8B17 22 94 89         ld (Puntero_store_caja),hl
1197  8B1A 21 A3 86     	ld hl,Indice_de_cajas_de_entidades+2
1198  8B1D 22 98 89     	ld (Indice_restore_caja),hl
1199  8B20 CD A9 8B     	call Extrae_address
1200  8B23 22 96 89     	ld (Puntero_restore_caja),hl
1201  8B26 C9               ret
1202  8B27
1203  8B27              ; *************************************************************************************************************************************************************
1204  8B27              ;
1205  8B27              ; 8/1/23
1206  8B27              ;
1207  8B27              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1208  8B27
1209  8B27 21 39 86     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1210  8B2A 22 B3 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1211  8B2D C9           	ret
1212  8B2E 21 21 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1213  8B31 22 B5 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1214  8B34 C9           	ret
1215  8B35
1216  8B35              ; -------------------------------------------------------------------------------------------------------------
1217  8B35              ;
1218  8B35              ; 21/9/23
1219  8B35              ;
1220  8B35
1221  8B35              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1222  8B35
1223  8B35              Limpia_album_Amadeus
1224  8B35
1225  8B35 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1226  8B38 7E           	ld a,(hl)
1227  8B39 A7           	and a
1228  8B3A C8           	ret z
1229  8B3B
1230  8B3B 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1231  8B3E 11 AD 80     	ld de,Album_de_fotos_Amadeus+1
1232  8B41 01 0B 00     	ld bc,11
1233  8B44 AF           	xor a
1234  8B45 77           	ld (hl),a
1235  8B46 ED B0        	ldir
1236  8B48
1237  8B48 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1238  8B4B 22 AE 89     	ld (End_Snapshot_Amadeus),hl
1239  8B4E
1240  8B4E C9           	ret
1241  8B4F
1242  8B4F 21 64 89     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1243  8B52 11 65 89     	ld de,Variables_de_borrado+1
1244  8B55 01 05 00     	ld bc,5
1245  8B58 AF           	xor a
1246  8B59 77           	ld (hl),a
1247  8B5A ED B0        	ldir
1248  8B5C C9           	ret
1249  8B5D
1250  8B5D              ; -------------------------------------------------------------------------------------------------------------
1251  8B5D              ;
1252  8B5D              ; 8/9/23
1253  8B5D              ;
1254  8B5D
1255  8B5D              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1256  8B5D              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1257  8B5D
1258  8B5D              Calcula_numero_de_malotes
1259  8B5D
1260  8B5D 21 00 80     	ld hl,Album_de_fotos
1261  8B60 EB           	ex de,hl
1262  8B61 2A A8 89     	ld hl,(Stack_snapshot)
1263  8B64
1264  8B64 06 00        	ld b,0
1265  8B66 7D           	ld a,l
1266  8B67 93           	sub e
1267  8B68 28 07        	jr z,1F
1268  8B6A
1269  8B6A              ; Nº de malotes no es "0".
1270  8B6A
1271  8B6A D6 06        2 sub 6
1272  8B6C 04           	inc b
1273  8B6D A7           	and a
1274  8B6E 20 FA        	jr nz,2B
1275  8B70 78           	ld a,b
1276  8B71
1277  8B71 32 9D 89     1 ld (Numero_de_malotes),a
1278  8B74 C9           	ret
1279  8B75
1280  8B75              ; -------------------------------------------------------------------------------------------------------------
1281  8B75              ;
1282  8B75              ; 8/9/23
1283  8B75              ;
1284  8B75
1285  8B75              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1286  8B75              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1287  8B75
1288  8B75              Calcula_malotes_Amadeus
1289  8B75
1290  8B75 21 AC 80     	ld hl,Album_de_fotos_Amadeus
1291  8B78 EB           	ex de,hl
1292  8B79 2A AE 89     	ld hl,(End_Snapshot_Amadeus)
1293  8B7C
1294  8B7C 7C           	ld a,h
1295  8B7D A7           	and a
1296  8B7E 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1297  8B80
1298  8B80 06 00        	ld b,0
1299  8B82 7D           	ld a,l
1300  8B83 93           	sub e
1301  8B84 28 07        	jr z,1F
1302  8B86
1303  8B86              ; Nº de malotes no es "0".
1304  8B86
1305  8B86 D6 06        2 sub 6
1306  8B88 04           	inc b
1307  8B89 A7           	and a
1308  8B8A 20 FA        	jr nz,2B
1309  8B8C 78           	ld a,b
1310  8B8D
1311  8B8D 32 9D 89     1 ld (Numero_de_malotes),a
1312  8B90 C9           	ret
1313  8B91
1314  8B91              ; -------------------------------------------------------------------------------------------------------------
1315  8B91              ;
1316  8B91              ; 28/2/23
1317  8B91              ;
1318  8B91
1319  8B91              Calcula_numero_de_disparotes
1320  8B91
1321  8B91 21 56 80     	ld hl,Album_de_fotos_disparos
1322  8B94 EB           	ex de,hl
1323  8B95 2A AC 89     	ld hl,(End_Snapshot_disparos)
1324  8B98
1325  8B98 06 00        	ld b,0
1326  8B9A 7D           	ld a,l
1327  8B9B 93           	sub e
1328  8B9C 28 07        	jr z,1F
1329  8B9E
1330  8B9E              ; Nº de malotes no es "0".
1331  8B9E
1332  8B9E D6 06        2 sub 6
1333  8BA0 04           	inc b
1334  8BA1 A7           	and a
1335  8BA2 20 FA        	jr nz,2B
1336  8BA4 78           	ld a,b
1337  8BA5
1338  8BA5 32 B2 89     1 ld (Numero_de_disparotes),a
1339  8BA8 C9           	ret
1340  8BA9
1341  8BA9              ; *************************************************************************************************************************************************************
1342  8BA9              ;
1343  8BA9              ; 20/10/22
1344  8BA9              ;
1345  8BA9              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1346  8BA9              ;
1347  8BA9              ; Destruye el puntero y DE !!!!!
1348  8BA9
1349  8BA9 5E           Extrae_address ld e,(hl)
1350  8BAA 23           	inc hl
1351  8BAB 56           	ld d,(hl)
1352  8BAC 2B           	dec hl
1353  8BAD EB           	ex de,hl
1354  8BAE C9           	ret
1355  8BAF
1356  8BAF              ; *************************************************************************************************************************************************************
1357  8BAF              ;
1358  8BAF              ;	20/1/24
1359  8BAF              ;
1360  8BAF              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1361  8BAF              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1362  8BAF              ;
1363  8BAF              ;   Destruye HL y BC !!!!!,
1364  8BAF              ;
1365  8BAF              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1366  8BAF              ;					"0" ..... Izquierda.
1367  8BAF
1368  8BAF              Inicia_Puntero_objeto
1369  8BAF
1370  8BAF 3A 62 89     	ld a,(Cuad_objeto)
1371  8BB2 E6 01        	and 1
1372  8BB4 F5           	push af
1373  8BB5 CC D1 8B     	call z,Inicia_puntero_objeto_izq
1374  8BB8 F1           	pop af
1375  8BB9 C8           	ret z
1376  8BBA CD BE 8B     	call Inicia_puntero_objeto_der
1377  8BBD C9           	ret
1378  8BBE
1379  8BBE              ; Arrancamos desde la parte izquierda de la pantalla.
1380  8BBE              ; Iniciamos (Indice_Sprite_der).
1381  8BBE
1382  8BBE 2A 58 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1383  8BC1 22 5C 89     	ld (Puntero_DESPLZ_der),hl
1384  8BC4 CD A9 8B     	call Extrae_address
1385  8BC7 22 52 89     	ld (Puntero_objeto),hl
1386  8BCA
1387  8BCA 2A 5A 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1388  8BCD 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
1389  8BD0 C9           	ret
1390  8BD1
1391  8BD1              ; Arrancamos desde la parte derecha de la pantalla.
1392  8BD1              ; Iniciamos (Indice_Sprite_izq).
1393  8BD1
1394  8BD1 2A 5A 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1395  8BD4 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
1396  8BD7 CD A9 8B     	call Extrae_address
1397  8BDA 22 52 89     	ld (Puntero_objeto),hl
1398  8BDD
1399  8BDD 2A 58 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1400  8BE0 22 5C 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1401  8BE3 C9           	ret
1402  8BE4
1403  8BE4              ; **************************************************************************************************
1404  8BE4              ;
1405  8BE4              ;	31/01/24
1406  8BE4              ;
1407  8BE4              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1408  8BE4
1409  8BE4              Restore_entidad
1410  8BE4
1411  8BE4 2A 94 89     	ld hl,(Puntero_store_caja)
1412  8BE7 11 4D 89     	ld de,Bandeja_DRAW
1413  8BEA 7E           	ld a,(hl)
1414  8BEB 12           	ld (de),a
1415  8BEC 23           	inc hl 											; (Tipo).
1416  8BED
1417  8BED 11 54 89     	ld de,Coordenada_X								; Nos situamos en (Coordenada_X) de la bandeja DRAW.
1418  8BF0 01 02 00     	ld bc,2
1419  8BF3 ED B0        	ldir 											; Hemos transferido (Coordenada_X) y (Coordenada_Y) a la bandeja.
1420  8BF5
1421  8BF5 13           	inc de
1422  8BF6 7E           	ld a,(hl)
1423  8BF7 12           	ld (de),a 										; Transferimos (Attr).
1424  8BF8 23           	inc hl
1425  8BF9
1426  8BF9 11 63 89     	ld de,Impacto
1427  8BFC
1428  8BFC 7E           	ld a,(hl)
1429  8BFD 12           	ld (de),a 										; Transferimos (Impacto).
1430  8BFE 23           	inc hl
1431  8BFF
1432  8BFF 13           	inc de
1433  8C00
1434  8C00 01 06 00     	ld bc,6
1435  8C03 ED B0        	ldir
1436  8C05
1437  8C05 01 07 00     	ld bc,7
1438  8C08 ED B0        	ldir 											; Transferimos (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados),_
1439  8C0A              ; 													; _ (Contador_de_mov_masticados) y (Ctrl_0).
1440  8C0A 11 75 89     	ld de,Ctrl_2
1441  8C0D
1442  8C0D 7E           	ld a,(hl)
1443  8C0E 12           	ld (de),a 										; Transferimos (Ctrl_2).
1444  8C0F
1445  8C0F C9           	ret
1446  8C10
1447  8C10              ; **************************************************************************************************
1448  8C10              ;
1449  8C10              ;	08/05/23
1450  8C10              ;
1451  8C10              ;	Incrementamos los dos punteros de entidades. (+1).
1452  8C10
1453  8C10              Incrementa_punteros_de_cajas
1454  8C10
1455  8C10 2A 96 89     	ld hl,(Puntero_restore_caja)
1456  8C13 22 94 89     	ld (Puntero_store_caja),hl
1457  8C16 2A 98 89     	ld hl,(Indice_restore_caja)
1458  8C19 23           	inc hl
1459  8C1A 23           	inc hl
1460  8C1B 22 98 89     	ld (Indice_restore_caja),hl
1461  8C1E CD A9 8B         call Extrae_address
1462  8C21 22 96 89         ld (Puntero_restore_caja),hl
1463  8C24 C9               ret
1464  8C25
1465  8C25              ; **************************************************************************************************
1466  8C25              ;
1467  8C25              ;	21/12/23
1468  8C25              ;
1469  8C25              ;	Restore_Amadeus
1470  8C25              ;
1471  8C25              ;	Cargamos en DRAW los parámetros de Amadeus.
1472  8C25              ;
1473  8C25
1474  8C25 E5           Restore_Amadeus	push hl
1475  8C26 D5           	push de
1476  8C27 C5            	push bc
1477  8C28 21 B3 86     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1478  8C2B 11 4D 89     	ld de,Bandeja_DRAW
1479  8C2E 01 2A 00     	ld bc,42
1480  8C31 ED B0        	ldir
1481  8C33 C1           	pop bc
1482  8C34 D1           	pop de
1483  8C35 E1           	pop hl
1484  8C36 C9           	ret
1485  8C37
1486  8C37              ; *************************************************************************************************************************************************************
1487  8C37              ;
1488  8C37              ;	21/12/23
1489  8C37              ;
1490  8C37              ;	Store_Amadeus
1491  8C37              ;
1492  8C37              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1493  8C37              ;
1494  8C37              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1495  8C37              ;
1496  8C37              ;	DESTRUYE: HL y BC y DE.
1497  8C37
1498  8C37 21 4D 89     Store_Amadeus ld hl,Bandeja_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1499  8C3A 01 2A 00     	ld bc,42
1500  8C3D ED B0        	ldir
1501  8C3F C9           	ret
1502  8C40
1503  8C40              ; -----------------------------------------------------------
1504  8C40              ;
1505  8C40              ;	21/12/23
1506  8C40              ;
1507  8C40              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1508  8C40              ;
1509  8C40              ;	Destruye: HL,BC,DE,A
1510  8C40
1511  8C40 21 4D 89     Borra_datos_entidad ld hl,Bandeja_DRAW
1512  8C43 01 29 00     	ld bc,41
1513  8C46 AF           	xor a
1514  8C47 77           	ld (hl),a
1515  8C48 11 4E 89     	ld de,Bandeja_DRAW+1
1516  8C4B ED B0        	ldir
1517  8C4D C9           	ret
1518  8C4E
1519  8C4E              ; -----------------------------------------------------------
1520  8C4E
1521  8C4E              ; Teclado.
1522  8C4E
1523  8C4E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1524  8C50 DB FE        	in a,($fe)
1525  8C52 E6 01        	and $01
1526  8C54 28 02        	jr z,1f
1527  8C56 18 F6        	jr Pulsa_ENTER
1528  8C58 C9           1 ret
1529  8C59
1530  8C59              ; **************************************************************************************************
1531  8C59              ;
1532  8C59              ; Temporización.
1533  8C59
1534  8C59              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1535  8C59              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1536  8C59              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1537  8C59              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1538  8C59
1539  8C59              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1540  8C59              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1541  8C59              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1542  8C59
1543  8C59              ; A partir de $4f61 no hace falta DELAY.
1544  8C59
1545  8C59              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1546  8C59
1547  8C59 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1548  8C5C 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1549  8C5D 78           	LD A,B
1550  8C5E A7           	AND A
1551  8C5F 20 FB        	JR NZ,wait
1552  8C61 C9           	RET
1553  8C62
1554  8C62              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1555  8C62              ;
1556  8C62              ;	5/3/23
1557  8C62              ;
1558  8C62              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1559  8C62
1560  8C62              Movimiento_Amadeus
1561  8C62
1562  8C62              ; Disparo.
1563  8C62
1564  8C62 3A C8 89     	ld a,(Disparo_Amadeus)
1565  8C65 A7           	and a
1566  8C66 20 02        	jr nz,1F
1567  8C68 18 15        	jr 2F
1568  8C6A
1569  8C6A 3E F7        1 ld a,$f7													; "5" para disparar.
1570  8C6C DB FE        	in a,($fe)
1571  8C6E E6 10        	and $10
1572  8C70
1573  8C70 F5           	push af
1574  8C71 CC 0B 9A     	call z,Genera_disparo
1575  8C74 F1           	pop af
1576  8C75 20 08        	jr nz,2F
1577  8C77
1578  8C77 3A C8 89     	ld a,(Disparo_Amadeus)
1579  8C7A EE 01        	xor 1
1580  8C7C 32 C8 89     	ld (Disparo_Amadeus),a
1581  8C7F 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1582  8C81 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1583  8C83 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1584  8C85 CC DE 96         call z,Mov_left											;			"			"			"			"			"			"			"			"
1585  8C88
1586  8C88 3E F7        	ld a,$f7
1587  8C8A DB FE        	in a,($fe)
1588  8C8C E6 01        	and $01
1589  8C8E C8           	ret z
1590  8C8F
1591  8C8F 3E F7        	ld a,$f7
1592  8C91 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1593  8C93 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1594  8C95 CC BB 95     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1595  8C98 C9           	ret
1596  8C99
1597  8C99              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1598  8C99              ;
1599  8C99              ;	Rutina provisional para que los malotes cagen balas.
1600  8C99
1601  8C99              Detecta_disparo_entidad
1602  8C99
1603  8C99 3A CB 89     	ld a,(Disparo_entidad)
1604  8C9C A7           	and a
1605  8C9D C8           	ret z
1606  8C9E
1607  8C9E              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1608  8C9E
1609  8C9E              ;	ld a,$7f				; Detecta SPACE.
1610  8C9E              ;	in a,($fe)
1611  8C9E              ;	and 1
1612  8C9E              ;	ret nz
1613  8C9E
1614  8C9E CD 0B 9A     	call Genera_disparo
1615  8CA1 C9           	ret
1616  8CA2
1617  8CA2              ; ----------------------------------------------------------------------
1618  8CA2              ;
1619  8CA2              ;	8/9/23
1620  8CA2
1621  8CA2 2A AE 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1622  8CA5 2B            	dec hl
1623  8CA6 7E           	ld a,(hl)
1624  8CA7 A7           	and a
1625  8CA8 C8           	ret z										; Salimos si es álbum está vacío.
1626  8CA9
1627  8CA9 11 69 89     	ld de,Variables_de_borrado+5
1628  8CAC 01 06 00     	ld bc,6
1629  8CAF ED B8        	lddr
1630  8CB1 C9           	ret
1631  8CB2
1632  8CB2              ; ----------------------------------------------------------------------
1633  8CB2              ;
1634  8CB2              ;	9/9/23
1635  8CB2
1636  8CB2              Repone_datos_de_borrado_Amadeus
1637  8CB2
1638  8CB2 21 64 89     	ld hl,Variables_de_borrado
1639  8CB5 11 AC 80     	ld de,Album_de_fotos_Amadeus
1640  8CB8 01 06 00     	ld bc,6
1641  8CBB ED B0        	ldir
1642  8CBD
1643  8CBD EB           	ex de,hl
1644  8CBE 22 AE 89     	ld (End_Snapshot_Amadeus),hl
1645  8CC1
1646  8CC1 C9           	ret
1647  8CC2
1648  8CC2              ; ----------------------------------------------------------------------
1649  8CC2              ;
1650  8CC2              ;	27/10/23
1651  8CC2              ;
1652  8CC2
1653  8CC2              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1654  8CC2              ;	_ Album_de_fotos correspondiente.
1655  8CC2
1656  8CC2              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1657  8CC2              ;	_ durante el proceso de escritura.
1658  8CC2
1659  8CC2              Repone_datos_de_borrado
1660  8CC2
1661  8CC2 ED 5B A8 89  	ld de,(Stack_snapshot)
1662  8CC6 21 64 89     	ld hl,Variables_de_borrado
1663  8CC9 01 06 00     	ld bc,6
1664  8CCC ED B0        	ldir
1665  8CCE
1666  8CCE EB           	ex de,hl
1667  8CCF 22 A8 89     	ld (Stack_snapshot),hl
1668  8CD2
1669  8CD2 C9           	ret
1670  8CD3
1671  8CD3              ; --------------------------------------------------------------------------------------
1672  8CD3
1673  8CD3              Pinta_Amadeus
1674  8CD3
1675  8CD3 CD 75 8B        	call Calcula_malotes_Amadeus
1676  8CD6 CD A4 92     	call Extrae_foto_Amadeus
1677  8CD9 CD 35 8B     	call Limpia_album_Amadeus
1678  8CDC
1679  8CDC C9           	ret
1680  8CDD
1681  8CDD              Pinta_entidades
1682  8CDD
1683  8CDD              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1684  8CDD
1685  8CDD 3A B0 89     	ld a,(Ctrl_3)
1686  8CE0 CB 47        	bit 0,a
1687  8CE2 C8           	ret z
1688  8CE3
1689  8CE3 3A B0 89     	ld a,(Ctrl_3)
1690  8CE6 CB 57        	bit 2,a
1691  8CE8 28 0C        	jr z,1F
1692  8CEA
1693  8CEA              ;	Sólo queremos borrar. Estamos reiniciando la entidad. Hemos de modificar (Stack_snapshot) para que la rutina [Extrae_foto_entidades] calcule el nº de malotes correctamente.
1694  8CEA
1695  8CEA 2A A8 89     	ld hl,(Stack_snapshot)
1696  8CED 01 06 00     	ld bc,6
1697  8CF0 A7           	and a
1698  8CF1 ED 42        	sbc hl,bc
1699  8CF3 22 A8 89     	ld (Stack_snapshot),hl
1700  8CF6
1701  8CF6 CD 5D 8B     1 call Calcula_numero_de_malotes
1702  8CF9 CD 22 92     	call Extrae_foto_entidades
1703  8CFC CD 1F 81     	call Limpia_y_reinicia_Stack_Snapshot
1704  8CFF
1705  8CFF C9           	ret
1706  8D00
1707  8D00              ; -----------------------------------------------------------------------------------
1708  8D00              ;
1709  8D00              ;	10/12/23
1710  8D00              ;
1711  8D00              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1712  8D00
1713  8D00              Actualiza_relojes
1714  8D00
1715  8D00 3A B0 89     	ld a,(Ctrl_3)
1716  8D03 CB 47        	bit 0,a
1717  8D05 C8           	ret z 						;	Salimos si no hemos pintado unidades.
1718  8D06
1719  8D06 21 C3 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1720  8D09 34           	inc (hl)
1721  8D0A
1722  8D0A 34           	inc (hl)
1723  8D0B 35           	dec (hl)
1724  8D0C C0           	ret nz
1725  8D0D
1726  8D0D 21 C4 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1727  8D10 34           	inc (hl)
1728  8D11 C9           	ret
1729  8D12
1730  8D12              ; ---------------------------------------------------------------
1731  8D12
1732  8D12              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ 8D12              ;---------------------------------------------------------------------------------------------------------------
   2+ 8D12              ;
   3+ 8D12              ;   19/1/24
   4+ 8D12              ;
   5+ 8D12              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ 8D12              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ 8D12              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ 8D12              ;	_ de la 1ª entidad del Nivel.
   9+ 8D12              ;
  10+ 8D12              ;	MODIFICA: HL,DE y A.
  11+ 8D12              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  12+ 8D12
  13+ 8D12              Inicializa_Nivel
  14+ 8D12
  15+ 8D12 2A CF 89     	ld hl,(Puntero_indice_NIVELES)
  16+ 8D15 CD A9 8B     	call Extrae_address
  17+ 8D18 7E           	ld a,(hl)
  18+ 8D19 32 9A 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  19+ 8D1C 23           	inc hl
  20+ 8D1D CD 2A 8D     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  21+ 8D20 22 D1 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  22+ 8D23 CD 33 8D     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  23+ 8D26              ;												 ; _ el (Tipo) de la 1ª entidad del Nivel.
  24+ 8D26 CD 44 8D     	call Inicializa_Puntero_de_almacen_de_mov_masticados
  25+ 8D29 C9           	ret
  26+ 8D2A
  27+ 8D2A              ; ----------------------
  28+ 8D2A
  29+ 8D2A 11 77 89     Fija_velocidades ld de,Perfiles_de_velocidad
  30+ 8D2D 01 04 00     	ld bc,4
  31+ 8D30 ED B0        	ldir
  32+ 8D32 C9           	ret
  33+ 8D33
  34+ 8D33 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  35+ 8D34 CD 87 8E         call Calcula_salto_en_BC
  36+ 8D37 21 1D 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  37+ 8D3A A7               and a
  38+ 8D3B ED 4A            adc hl,bc
  39+ 8D3D CD A9 8B         call Extrae_address
  40+ 8D40 22 85 89         ld (Puntero_indice_mov),hl
  41+ 8D43 C9               ret
  42+ 8D44
  43+ 8D44 3A 4D 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  44+ 8D47 CD 87 8E     	call Calcula_salto_en_BC
  45+ 8D4A 21 83 89     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  46+ 8D4D A7               and a
  47+ 8D4E ED 4A            adc hl,bc
  48+ 8D50 CD A9 8B         call Extrae_address
  49+ 8D53 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  50+ 8D56 C9           	ret
  51+ 8D57
  52+ 8D57              ;---------------------------------------------------------------------------------------------------------------
  53+ 8D57              ;
  54+ 8D57              ;   5/1/24
  55+ 8D57              ;
  56+ 8D57              ;	Destruye A,BC,HL,DE
  57+ 8D57
  58+ 8D57              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  59+ 8D57              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  60+ 8D57
  61+ 8D57              Inicia_Entidades
  62+ 8D57
  63+ 8D57              ; Preparamos los punteros de las cajas de entidades:
  64+ 8D57
  65+ 8D57 CD 11 8B     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  66+ 8D5A              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  67+ 8D5A CD EE 8E     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  68+ 8D5D
  69+ 8D5D 2A D1 89     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  70+ 8D60
  71+ 8D60 22 D1 89     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  72+ 8D63
  73+ 8D63 CD 35 8E     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  74+ 8D66
  75+ 8D66 2A D1 89     	ld hl,(Datos_de_nivel)
  76+ 8D69
  77+ 8D69              ; En este punto:
  78+ 8D69              ;
  79+ 8D69              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  80+ 8D69              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  81+ 8D69
  82+ 8D69 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  83+ 8D6A
  84+ 8D6A 7E           	ld a,(hl)
  85+ 8D6B CD A7 8D     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  86+ 8D6E
  87+ 8D6E CD 99 8E     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  88+ 8D71
  89+ 8D71              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  90+ 8D71
  91+ 8D71 CD 57 8E     	call Busca_mov_masticados_segun_tipo
  92+ 8D74
  93+ 8D74 A7           	and a
  94+ 8D75 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  95+ 8D77
  96+ 8D77              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  97+ 8D77
  98+ 8D77              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
  99+ 8D77              ;	_ de este tipo de entidad.
 100+ 8D77
 101+ 8D77 CD F5 99     	call Situa_en_contador_general_de_mov_masticados
 102+ 8D7A CD 02 9A     	call Transfiere_datos_de_contadores
 103+ 8D7D
 104+ 8D7D 18 06        	jr 4F
 105+ 8D7F
 106+ 8D7F CD 6B 8A     3 call Construye_movimientos_masticados_entidad
 107+ 8D82
 108+ 8D82              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 109+ 8D82              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 110+ 8D82              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 111+ 8D82              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 112+ 8D82              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 113+ 8D82
 114+ 8D82 CD 15 8E     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 115+ 8D85              ;																; _ Mov_masticados ya generados.
 116+ 8D85 CD C1 8D     4 call Guarda_foto_de_mov_masticado
 117+ 8D88
 118+ 8D88              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 119+ 8D88
 120+ 8D88 2A 6A 89     	ld hl,(Puntero_de_impresion)
 121+ 8D8B CD 0C 9F     	call Genera_coordenadas
 122+ 8D8E CD C0 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 123+ 8D91 CD CB 8D     	call Limpiamos_bandeja_DRAW
 124+ 8D94 CD 10 8C     	call Incrementa_punteros_de_cajas
 125+ 8D97
 126+ 8D97              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 127+ 8D97              ; _ entidad del Nivel.
 128+ 8D97
 129+ 8D97 3A B1 89     	ld a,(Ctrl_4)
 130+ 8D9A E6 F0        	and $f0
 131+ 8D9C 32 B1 89     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 132+ 8D9F
 133+ 8D9F              ; Siguiente entidad del Nivel.
 134+ 8D9F
 135+ 8D9F 2A D1 89     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 136+ 8DA2 23           	inc hl 														; _ entidad del Nivel.
 137+ 8DA3
 138+ 8DA3 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 139+ 8DA4
 140+ 8DA4 10 BA        	djnz 2B
 141+ 8DA6
 142+ 8DA6 C9           	ret
 143+ 8DA7
 144+ 8DA7              ; ---------------------------------------------------------------------
 145+ 8DA7              ;
 146+ 8DA7              ;	10/02/24
 147+ 8DA7              ;
 148+ 8DA7              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 149+ 8DA7              ;
 150+ 8DA7              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 151+ 8DA7
 152+ 8DA7              Definicion_segun_tipo
 153+ 8DA7
 154+ 8DA7 CD 87 8E     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 155+ 8DAA 21 6E 87     	ld hl,Indice_de_definiciones_de_entidades
 156+ 8DAD CD 8F 8E     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 157+ 8DB0 C9           	ret
 158+ 8DB1
 159+ 8DB1              ; ---------------------------------------------------------------------
 160+ 8DB1              ;
 161+ 8DB1              ;	30/01/24
 162+ 8DB1
 163+ 8DB1
 164+ 8DB1              Store_Restore_cajas
 165+ 8DB1
 166+ 8DB1              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 167+ 8DB1
 168+ 8DB1 2A 6A 89     	ld hl,(Puntero_de_impresion)
 169+ 8DB4 CD 0C 9F     	call Genera_coordenadas
 170+ 8DB7
 171+ 8DB7 CD C0 8E     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 172+ 8DBA CD CB 8D     	call Limpiamos_bandeja_DRAW
 173+ 8DBD
 174+ 8DBD              ; 	Entidad_sospechosa. 20/4/23
 175+ 8DBD
 176+ 8DBD              ;	ld a,(Impacto)
 177+ 8DBD              ;	and a
 178+ 8DBD              ;	jr z,1F
 179+ 8DBD
 180+ 8DBD              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
 181+ 8DBD              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
 182+ 8DBD              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
 183+ 8DBD              ;	adc hl,bc 											; _ "0" más adelante.
 184+ 8DBD              ;	ld (Entidad_sospechosa_de_colision),hl
 185+ 8DBD
 186+ 8DBD
 187+ 8DBD              ;1 ld hl,(Puntero_restore_caja)
 188+ 8DBD              ;	ld a,(hl)
 189+ 8DBD              ;	and a
 190+ 8DBD              ;	push af
 191+ 8DBD              ;	jr z,2F
 192+ 8DBD
 193+ 8DBD              ;	di
 194+ 8DBD              ;	ld de,Bandeja_DRAW
 195+ 8DBD              ;	ld bc,42
 196+ 8DBD              ;	ldir
 197+ 8DBD              ;	ei
 198+ 8DBD
 199+ 8DBD CD 10 8C     2 call Incrementa_punteros_de_cajas
 200+ 8DC0 C9           	ret
 201+ 8DC1
 202+ 8DC1
 203+ 8DC1              ; ---------------------------------------------------------------------
 204+ 8DC1              ;
 205+ 8DC1              ;	29/01/24
 206+ 8DC1
 207+ 8DC1 CD C0 8A     Guarda_foto_de_mov_masticado call Cargamos_registros_con_mov_masticado
 208+ 8DC4 CD BF 80     	call Guarda_foto_registros
 209+ 8DC7              ;																; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 210+ 8DC7              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 211+ 8DC7              ;																; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 212+ 8DC7              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 213+ 8DC7
 214+ 8DC7 CD D6 8D     	call Decrementa_Contador_de_mov_masticados
 215+ 8DCA C9           	ret
 216+ 8DCB
 217+ 8DCB              ; ---------------------------------------------------------------------
 218+ 8DCB              ;
 219+ 8DCB              ;	25/01/24
 220+ 8DCB
 221+ 8DCB 21 4D 89     Limpiamos_bandeja_DRAW ld hl,Bandeja_DRAW
 222+ 8DCE 06 2A        	ld b,42
 223+ 8DD0 AF           	xor a
 224+ 8DD1
 225+ 8DD1 77           1 ld (hl),a
 226+ 8DD2 23           	inc hl
 227+ 8DD3 10 FC        	djnz 1B
 228+ 8DD5
 229+ 8DD5 C9           	ret
 230+ 8DD6
 231+ 8DD6              ; ---------------------------------------------------------------------
 232+ 8DD6              ;
 233+ 8DD6              ;	22/01/24
 234+ 8DD6
 235+ 8DD6 2A 6E 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 236+ 8DD9 2B           	dec hl
 237+ 8DDA
 238+ 8DDA 24           	inc h
 239+ 8DDB 25           	dec h
 240+ 8DDC
 241+ 8DDC FC E3 8D     	call m,Reinicia_entidad_maliciosa
 242+ 8DDF
 243+ 8DDF              ;	jr nz,1F
 244+ 8DDF
 245+ 8DDF              ;	inc l
 246+ 8DDF              ;	dec l
 247+ 8DDF
 248+ 8DDF              ;	di
 249+ 8DDF              ;	jr z,$
 250+ 8DDF              ;	ei
 251+ 8DDF
 252+ 8DDF 22 6E 89     1 ld (Contador_de_mov_masticados),hl
 253+ 8DE2 C9           	ret
 254+ 8DE3
 255+ 8DE3              ; ---------------------------------------------------------------------
 256+ 8DE3              ;
 257+ 8DE3              ;	10/2/24
 258+ 8DE3
 259+ 8DE3              Reinicia_entidad_maliciosa
 260+ 8DE3
 261+ 8DE3              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 262+ 8DE3
 263+ 8DE3 CD F5 99     	call Situa_en_contador_general_de_mov_masticados
 264+ 8DE6 CD 02 9A     	call Transfiere_datos_de_contadores
 265+ 8DE9
 266+ 8DE9              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 267+ 8DE9
 268+ 8DE9 3A 4D 89     	ld a,(Tipo)
 269+ 8DEC CD A7 8D     	call Definicion_segun_tipo
 270+ 8DEF
 271+ 8DEF E5           	push hl
 272+ 8DF0 DD E1        	pop ix
 273+ 8DF2
 274+ 8DF2 DD 6E 0B     	ld l,(ix+11)
 275+ 8DF5 DD 66 0C     	ld h,(ix+12)
 276+ 8DF8
 277+ 8DF8 22 6C 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 278+ 8DFB 2A 6E 89     	ld hl,(Contador_de_mov_masticados)
 279+ 8DFE
 280+ 8DFE              ;	Recolocamos el puntero (Stack_snapshot) del álbum de fotos para colocamos justo después del borrado.
 281+ 8DFE              ;	Queremos pintar la entidad en su posición de inicio.
 282+ 8DFE
 283+ 8DFE 2A A8 89     	ld hl,(Stack_snapshot)
 284+ 8E01 01 06 00     	ld bc,6
 285+ 8E04 A7           	and a
 286+ 8E05 ED 42        	sbc hl,bc
 287+ 8E07 22 A8 89     	ld (Stack_snapshot),hl
 288+ 8E0A
 289+ 8E0A CD C0 8A     	call Cargamos_registros_con_mov_masticado
 290+ 8E0D CD BF 80     	call Guarda_foto_registros
 291+ 8E10
 292+ 8E10 2A 6E 89     	ld hl,(Contador_de_mov_masticados)
 293+ 8E13 2B           	dec hl
 294+ 8E14
 295+ 8E14 C9           	ret
 296+ 8E15
 297+ 8E15
 298+ 8E15
 299+ 8E15
 300+ 8E15              ; ---------------------------------------------------------------------
 301+ 8E15              ;
 302+ 8E15              ;	22/01/24
 303+ 8E15
 304+ 8E15 21 B1 89     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 305+ 8E18 CB 46        	bit 0,(hl)
 306+ 8E1A 20 0D        	jr nz,1F
 307+ 8E1C CB 4E        	bit 1,(hl)
 308+ 8E1E 20 0C        	jr nz,2F
 309+ 8E20 CB 56        	bit 2,(hl)
 310+ 8E22 20 0B        	jr nz,3F
 311+ 8E24 CB 5E        	bit 3,(hl)
 312+ 8E26 20 0A        	jr nz,4F
 313+ 8E28 C9           	ret
 314+ 8E29
 315+ 8E29 CB E6        1 set 4,(hl)
 316+ 8E2B C9           	ret
 317+ 8E2C CB EE        2 set 5,(hl)
 318+ 8E2E C9           	ret
 319+ 8E2F CB F6        3 set 6,(hl)
 320+ 8E31 C9           	ret
 321+ 8E32 CB FE        4 set 7,(hl)
 322+ 8E34 C9           	ret
 323+ 8E35
 324+ 8E35              ; ---------------------------------------------------------------------
 325+ 8E35              ;
 326+ 8E35              ;	23/01/24
 327+ 8E35              ;
 328+ 8E35              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 329+ 8E35              ;
 330+ 8E35              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 331+ 8E35              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 332+ 8E35              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 333+ 8E35              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 334+ 8E35
 335+ 8E35              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 336+ 8E35
 337+ 8E35 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 338+ 8E36 3D           	dec a
 339+ 8E37 20 06        	jr nz,1F
 340+ 8E39
 341+ 8E39              ; --- Tipo_1
 342+ 8E39
 343+ 8E39 21 B1 89     	ld hl,Ctrl_4
 344+ 8E3C CB C6        	set 0,(hl)
 345+ 8E3E C9           	ret
 346+ 8E3F
 347+ 8E3F 3D           1 dec a
 348+ 8E40 20 06        	jr nz,2F
 349+ 8E42
 350+ 8E42              ; --- Tipo_2
 351+ 8E42
 352+ 8E42 21 B1 89     	ld hl,Ctrl_4
 353+ 8E45 CB CE        	set 1,(hl)
 354+ 8E47 C9           	ret
 355+ 8E48
 356+ 8E48 3D           2 dec a
 357+ 8E49 20 06        	jr nz,3F
 358+ 8E4B
 359+ 8E4B              ; --- Tipo_3
 360+ 8E4B
 361+ 8E4B 21 B1 89     	ld hl,Ctrl_4
 362+ 8E4E CB D6        	set 2,(hl)
 363+ 8E50 C9           	ret
 364+ 8E51
 365+ 8E51              ; --- Tipo_3
 366+ 8E51
 367+ 8E51 21 B1 89     3 ld hl,Ctrl_4
 368+ 8E54 CB D6        	set 2,(hl)
 369+ 8E56 C9           	ret
 370+ 8E57
 371+ 8E57              ; ---------------------------------------------------------------------
 372+ 8E57              ;
 373+ 8E57              ;	22/01/24
 374+ 8E57
 375+ 8E57 21 B1 89     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 376+ 8E5A CB 46        	bit 0,(hl)
 377+ 8E5C 20 0E        	jr nz,1F
 378+ 8E5E
 379+ 8E5E CB 4E        	bit 1,(hl)
 380+ 8E60 20 10        	jr nz,2F
 381+ 8E62
 382+ 8E62 CB 56        	bit 2,(hl)
 383+ 8E64 20 12        	jr nz,3F
 384+ 8E66
 385+ 8E66 CB 5E        	bit 3,(hl)
 386+ 8E68 20 14        	jr nz,4F
 387+ 8E6A 18 19        	jr 6F
 388+ 8E6C
 389+ 8E6C              ; Entidad_de_Tipo_1.
 390+ 8E6C
 391+ 8E6C CB 66        1 bit 4,(hl)
 392+ 8E6E 28 15        	jr z,6F
 393+ 8E70 18 10        	jr 5F
 394+ 8E72
 395+ 8E72              ; Entidad_de_Tipo_2.
 396+ 8E72
 397+ 8E72 CB 6E        2 bit 5,(hl)
 398+ 8E74 28 0F        	jr z,6F
 399+ 8E76 18 0A        	jr 5F
 400+ 8E78
 401+ 8E78              ; Entidad_de_Tipo_3.
 402+ 8E78
 403+ 8E78 CB 76        3 bit 6,(hl)
 404+ 8E7A 28 09        	jr z,6F
 405+ 8E7C 18 04        	jr 5F
 406+ 8E7E
 407+ 8E7E              ; Entidad_de_Tipo_4.
 408+ 8E7E
 409+ 8E7E CB 7E        4 bit 7,(hl)
 410+ 8E80 28 03        	jr z,6F
 411+ 8E82
 412+ 8E82              ; Esta entidad TIENE MOV_MASTICADOS.
 413+ 8E82
 414+ 8E82 AF           5 xor a
 415+ 8E83 3C           	inc a
 416+ 8E84 C9           	ret
 417+ 8E85
 418+ 8E85              ; Esta entidad NO TIENE MOV_MASTICADOS.
 419+ 8E85
 420+ 8E85 AF           6 xor a
 421+ 8E86 C9           	ret
 422+ 8E87
 423+ 8E87              ;	------------------------------------------------------------------------------------
 424+ 8E87              ;
 425+ 8E87              ;	12/01/24
 426+ 8E87              ;
 427+ 8E87              ;	INPUTS:	A contiene el (Tipo) de entidad.
 428+ 8E87              ;
 429+ 8E87              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 430+ 8E87              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 431+ 8E87
 432+ 8E87 CB 27        Calcula_salto_en_BC sla a
 433+ 8E89 D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 434+ 8E8B 4F           	ld c,a
 435+ 8E8C 06 00        	ld b,0
 436+ 8E8E C9           	ret
 437+ 8E8F
 438+ 8E8F              ; ------------------------------------------------------------------
 439+ 8E8F              ;
 440+ 8E8F              ;	19/1/24
 441+ 8E8F              ;
 442+ 8E8F              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 443+ 8E8F              ;	Actualiza (Datos_de_entidad) con esa dirección.
 444+ 8E8F
 445+ 8E8F A7           Situa_en_datos_de_definicion and a
 446+ 8E90 ED 4A        	adc hl,bc
 447+ 8E92 CD A9 8B     	call Extrae_address
 448+ 8E95 22 A0 89         ld (Datos_de_entidad),hl
 449+ 8E98 C9           	ret
 450+ 8E99
 451+ 8E99              ; ------------------------------------------------------------------
 452+ 8E99
 453+ 8E99              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 454+ 8E99              ; 	inc de
 455+ 8E99              ; 	inc de
 456+ 8E99              ; 	ex de,hl
 457+ 8E99              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 458+ 8E99              ; 	ret
 459+ 8E99
 460+ 8E99              ; ----------------------------------------------------------------------------------------------------------
 461+ 8E99              ;
 462+ 8E99              ;	31/1/24
 463+ 8E99              ;
 464+ 8E99              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 465+ 8E99              ;	_ de entidad.
 466+ 8E99              ;
 467+ 8E99              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 468+ 8E99              ;
 469+ 8E99              ;
 470+ 8E99              ;	MODIFICA: HL,DE y BC
 471+ 8E99
 472+ 8E99
 473+ 8E99              Definicion_de_entidad_a_bandeja_DRAW
 474+ 8E99
 475+ 8E99 11 4D 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 476+ 8E9C 01 03 00     	ld bc,3
 477+ 8E9F ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 478+ 8EA1              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 479+ 8EA1 11 57 89     	ld de,Attr									; DE en (Attr).
 480+ 8EA4 01 05 00     	ld bc,5
 481+ 8EA7 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 482+ 8EA9              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 483+ 8EA9 11 60 89     	ld de,Posicion_inicio
 484+ 8EAC 01 03 00     	ld bc,3
 485+ 8EAF ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 486+ 8EB1              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 487+ 8EB1 11 6C 89     	ld de,Puntero_de_almacen_de_mov_masticados
 488+ 8EB4 01 02 00     	ld bc,2
 489+ 8EB7 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 490+ 8EB9
 491+ 8EB9 11 76 89     	ld de,Frames_explosion
 492+ 8EBC 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 493+ 8EBE 12           	ld (de),a 									; Vuelco (Frames_explosion).
 494+ 8EBF
 495+ 8EBF C9           	ret
 496+ 8EC0
 497+ 8EC0              ; ----------------------------------------------------------------------------------------------------------
 498+ 8EC0              ;
 499+ 8EC0              ;	22/01/24
 500+ 8EC0              ;
 501+ 8EC0              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 502+ 8EC0              ;
 503+ 8EC0              ;	Las cajas contienen entidades iniciadas:
 504+ 8EC0              ;
 505+ 8EC0              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 506+ 8EC0              ;
 507+ 8EC0              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 508+ 8EC0              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 509+ 8EC0              ;
 510+ 8EC0              ;	MODIFICA: HL,DE y BC
 511+ 8EC0
 512+ 8EC0 21 4D 89     Parametros_de_bandeja_DRAW_a_caja ld hl,Bandeja_DRAW
 513+ 8EC3 ED 5B 94 89  	ld de,(Puntero_store_caja)
 514+ 8EC7 7E           	ld a,(hl)
 515+ 8EC8 12           	ld (de),a
 516+ 8EC9 13           	inc de 													; (Tipo).
 517+ 8ECA
 518+ 8ECA 21 54 89     	ld hl,Coordenada_X										; HL situado en (Coordenada_X) de la bandeja DRAW.
 519+ 8ECD 01 02 00     	ld bc,2
 520+ 8ED0 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 521+ 8ED2              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 522+ 8ED2 23           	inc hl
 523+ 8ED3 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 524+ 8ED4 12           	ld (de),a
 525+ 8ED5 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 526+ 8ED6
 527+ 8ED6 21 63 89     	ld hl,Impacto
 528+ 8ED9 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 529+ 8EDA 12           	ld (de),a
 530+ 8EDB 13           	inc de 													; (Impacto), volcado a la caja.
 531+ 8EDC              ;															; DE situado ahora en (Variables_de_borrado).
 532+ 8EDC 23           	inc hl
 533+ 8EDD 01 06 00     	ld bc,6
 534+ 8EE0 ED B0        	ldir 													; Hemos volcado las (Variables_de_borrado).
 535+ 8EE2              ; 															; DE situado ahora en (Puntero_de_impresión).
 536+ 8EE2 01 07 00     	ld bc,7
 537+ 8EE5 ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 538+ 8EE7              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 539+ 8EE7              ;															; HL apunta ahora a (Columnas).
 540+ 8EE7 21 75 89     	ld hl,Ctrl_2
 541+ 8EEA 7E           	ld a,(hl)
 542+ 8EEB 12           	ld (de),a 												; Volcamos (Ctrl_2).
 543+ 8EEC 13           	inc de
 544+ 8EED
 545+ 8EED C9           	ret
 546+ 8EEE
 547+ 8EEE              ;---------------------------------------------------------------------------------------------------------------
 548+ 8EEE              ;
 549+ 8EEE              ;	5/1/24
 550+ 8EEE              ;
 551+ 8EEE              ;	INICIALIZA (Numero_parcial_de_entidades).
 552+ 8EEE              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 553+ 8EEE              ;
 554+ 8EEE              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 555+ 8EEE              ;
 556+ 8EEE              ;	(Numero_parcial_de_entidades)="7".
 557+ 8EEE              ;
 558+ 8EEE              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 559+ 8EEE              ;
 560+ 8EEE              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 561+ 8EEE              ;
 562+ 8EEE              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 563+ 8EEE              ;	MODIFICA: A y B.
 564+ 8EEE              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 565+ 8EEE
 566+ 8EEE              Inicializa_Numero_parcial_de_entidades
 567+ 8EEE
 568+ 8EEE              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 569+ 8EEE
 570+ 8EEE 3A 9A 89     	ld a,(Numero_de_entidades)
 571+ 8EF1 A7           	and a
 572+ 8EF2
 573+ 8EF2              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 574+ 8EF2              ;	jr z,$
 575+ 8EF2              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 576+ 8EF2
 577+ 8EF2 20 03        	jr nz,3F
 578+ 8EF4
 579+ 8EF4              ; ---------- ---------- ----------
 580+ 8EF4
 581+ 8EF4              ;! RESET para pruebas. Omitir esta línea en modo normal.
 582+ 8EF4              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 583+ 8EF4
 584+ 8EF4 CD 12 8D     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 585+ 8EF7
 586+ 8EF7              ; ---------- ---------- ----------
 587+ 8EF7
 588+ 8EF7 3A 9A 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 589+ 8EFA FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 590+ 8EFC 38 08        	jr c,1F
 591+ 8EFE
 592+ 8EFE              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 593+ 8EFE              ; Actualizamos variables.
 594+ 8EFE
 595+ 8EFE 3E 07        	ld a,7
 596+ 8F00 32 9B 89     	ld (Numero_parcial_de_entidades),a
 597+ 8F03 47           	ld b,a
 598+ 8F04 18 04        	jr 2F
 599+ 8F06
 600+ 8F06              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 601+ 8F06              ; (Numero_de_entidades)="0".
 602+ 8F06
 603+ 8F06 32 9B 89     1 ld (Numero_parcial_de_entidades),a
 604+ 8F09 47           	ld b,a
 605+ 8F0A C9           2 ret
# file closed: Rutinas_de_inicio_y_niveles.asm
1733  8F0B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 8F0B              ; ******************************************************************************************************************************************************************************************
   2+ 8F0B              ;
   3+ 8F0B              ; 26/06/23
   4+ 8F0B              ;
   5+ 8F0B              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 8F0B
   7+ 8F0B              Draw
   8+ 8F0B
   9+ 8F0B CD F8 91     	call Prepara_draw
  10+ 8F0E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 8F0F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 8F10 28 05        	jr z,2F
  13+ 8F12
  14+ 8F12 3A 62 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 8F15 18 0C        	jr 1F
  16+ 8F17
  17+ 8F17 2A 60 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 8F1A 22 50 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 8F1D CD AC 90     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 8F20              ;													; _la esquina superior izquierda de la pantalla.
  21+ 8F20
  22+ 8F20 CD 59 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 8F23
  24+ 8F23 3A 70 89     1 ld a,(Ctrl_0)
  25+ 8F26 CB 6F        	bit 5,a
  26+ 8F28 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 8F2A
  28+ 8F2A CD 42 8F     	call Comprueba_limite_horizontal
  29+ 8F2D CD D2 8F     	call Comprueba_limite_vertical
  30+ 8F30
  31+ 8F30              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 8F30              ; -----------------------
  33+ 8F30              ; -----------------------
  34+ 8F30              ; -----------------------
  35+ 8F30
  36+ 8F30 CD 28 91     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 8F33 CD 5F 91     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 8F36 CD BE 91     	call Define_rutina_de_impresion
  39+ 8F39
  40+ 8F39 3A 70 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 8F3C CB AF        	res 5,a											; _a ser de utilidad.
  42+ 8F3E 32 70 89     	ld (Ctrl_0),a
  43+ 8F41
  44+ 8F41 C9           	ret
  45+ 8F42
  46+ 8F42              ; *******************************************************************************************************************************************************************************************
  47+ 8F42              ;	21/01/23
  48+ 8F42              ;
  49+ 8F42              ; 	Comprueba_limite_horizontal.
  50+ 8F42              ;
  51+ 8F42              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 8F42              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 8F42              ;
  54+ 8F42              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 8F42              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 8F42              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 8F42              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 8F42
  59+ 8F42
  60+ 8F42
  61+ 8F42 3A 70 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 8F45 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 8F47 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 8F49 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 8F4B 32 70 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 8F4E 18 09            jr 6F
  67+ 8F50 CB 5F        1 bit 3,a
  68+ 8F52 28 0A            jr z,2F
  69+ 8F54 E6 F7            and $f7
  70+ 8F56 32 70 89         ld (Ctrl_0),a
  71+ 8F59 CD AC 90     6 call Inicializacion
  72+ 8F5C 18 5B            jr 5F
  73+ 8F5E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 8F5F
  75+ 8F5F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 8F5F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 8F5F
  78+ 8F5F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 8F60 2A 72 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 8F63 CD EE 9E     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 8F66 67           	ld h,a
  82+ 8F67 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 8F68 CD EE 9E     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 8F6B 67           	ld h,a
  85+ 8F6C A7           	and a
  86+ 8F6D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 8F6F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 8F70 3A 62 89     	ld a,(Cuad_objeto)
  89+ 8F73 FE 02        	cp 2
  90+ 8F75 38 1E        	jr c,3F
  91+ 8F77 28 1C        	jr z,3F
  92+ 8F79 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 8F7A 28 23            jr z,7F
  94+ 8F7C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 8F7E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 8F80 E1           	pop hl
  97+ 8F81
  98+ 8F81              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 8F81              ; _para indicar con E="2" en caso necesario.
 100+ 8F81
 101+ 8F81 E5               push hl
 102+ 8F82 C5               push bc
 103+ 8F83 CD EE 9E     	call calcula_tercio
 104+ 8F86 FE 01        	cp 1
 105+ 8F88 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 8F8A CD BA 8F         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 8F8D 28 26            jr z,9F
 108+ 8F8F 38 24            jr c,9F
 109+ 8F91 1E 00        11 ld e,0
 110+ 8F93 18 22            jr 8F
 111+ 8F95 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 8F96 28 07        	jr z, 7F
 113+ 8F98 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 8F9A 1E 00         	ld e,0
 115+ 8F9C E1           	pop hl
 116+ 8F9D 18 04        	jr 4F
 117+ 8F9F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 8FA1 18 15            jr 10F
 119+ 8FA3
 120+ 8FA3              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 8FA3              ; _para indicar con E="2" en caso necesario.
 122+ 8FA3
 123+ 8FA3 E5           4 push hl
 124+ 8FA4 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 8FA5 CD EE 9E     	call calcula_tercio
 126+ 8FA8 FE 01        	cp 1
 127+ 8FAA 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 8FAC CD BA 8F         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 8FAF 28 04            jr z,9F
 130+ 8FB1 30 02            jr nc,9F
 131+ 8FB3 18 02        	jr 8F
 132+ 8FB5 1E 02        9 ld e,2
 133+ 8FB7 C1           8 pop bc
 134+ 8FB8 E1           10 pop hl
 135+ 8FB9 C9           5 ret
 136+ 8FBA
 137+ 8FBA              ; --------------------
 138+ 8FBA              ;
 139+ 8FBA              ; 25/08/22
 140+ 8FBA
 141+ 8FBA CD EE 9E     Comprueba_centro call calcula_tercio
 142+ 8FBD 67               ld h,a
 143+ 8FBE 08           	ex af,af
 144+ 8FBF FE 02        	cp 2
 145+ 8FC1 38 07        	jr c,1F
 146+ 8FC3 28 05        	jr z,1F
 147+ 8FC5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 8FC8 18 03        	jr 2F
 149+ 8FCA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 8FCD 08           2 ex af,af
 151+ 8FCE A7               and a
 152+ 8FCF ED 42            sbc hl,bc
 153+ 8FD1 C9               ret
 154+ 8FD2
 155+ 8FD2              ; *********************************************************************************************************************************************************************************************
 156+ 8FD2              ;
 157+ 8FD2              ;   16/8/22
 158+ 8FD2              ;
 159+ 8FD2              ;	Comprueba_limite_vertical
 160+ 8FD2              ;
 161+ 8FD2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 8FD2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 8FD2              ;
 164+ 8FD2
 165+ 8FD2 2A 50 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 8FD5 7D           	ld a,l
 167+ 8FD6 E6 1F        	and $1F
 168+ 8FD8 57           	ld d,a
 169+ 8FD9 3A 74 89     	ld a,(Limite_vertical)
 170+ 8FDC BA           	cp d 											; Límite - Posición.
 171+ 8FDD 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 8FDE 3A 62 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 8FE1 CB 47        	bit 0,a
 174+ 8FE3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 8FE5
 176+ 8FE5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 8FE5
 178+ 8FE5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 8FE6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 8FE8
 181+ 8FE8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 8FE8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 8FE8
 184+ 8FE8 3A 54 89         ld a,(Coordenada_X)
 185+ 8FEB 16 0F            ld d,Centro_izquierda
 186+ 8FED A7               and a
 187+ 8FEE 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 8FEF 28 1E            jr z,3F
 189+ 8FF1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 8FF3              ;                                                    ; _salimos sin modificar nada.
 191+ 8FF3 18 0E            jr 2F
 192+ 8FF5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 8FF6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 8FF8
 195+ 8FF8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 8FF8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 8FF8
 198+ 8FF8 3A 54 89         ld a,(Coordenada_X)
 199+ 8FFB 16 10            ld d,Centro_derecha
 200+ 8FFD A7               and a
 201+ 8FFE 92               sub d
 202+ 8FFF 28 0E            jr z,3F
 203+ 9001 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 9003              ;                                                    ; _salimos sin modificar nada.
 205+ 9003 CB 43        2 bit 0,e
 206+ 9005 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 9007 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 9008 CD 9C 90         call Modificaccionne
 209+ 900B C1           	pop bc
 210+ 900C CD AC 90         call Inicializacion
 211+ 900F C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 9010
 213+ 9010              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 9010
 215+ 9010 C5           4 push bc
 216+ 9011 01 4F 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 9014 0A           	ld a,(bc)
 218+ 9015 3D           	dec a
 219+ 9016 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 9017 7D           	ld a,l
 221+ 9018 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9019 CB 47        	bit 0,a
 223+ 901B 28 03        	jr z,5F
 224+ 901D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 901E 18 2E        	jr 7F
 226+ 9020
 227+ 9020              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9020
 229+ 9020 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 9021 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 9022 3A 70 89     	ld a,(Ctrl_0)
 232+ 9025 CB 4F        	bit 1,a
 233+ 9027 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9029 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 902A
 236+ 902A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 902A
 238+ 902A 1C               inc e
 239+ 902B 1D               dec e
 240+ 902C 20 07            jr nz,12F
 241+ 902E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 902F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9030 22 50 89     	ld (Posicion_actual),hl
 244+ 9033 18 44        13 jr 9F
 245+ 9035 CB 43        12 bit 0,e
 246+ 9037 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9039              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9039 C1           	pop bc
 249+ 903A 18 D3        	jr 3B
 250+ 903C 80           14 add b
 251+ 903D 6F               ld l,a
 252+ 903E 22 50 89     	ld (Posicion_actual),hl
 253+ 9041 CD 9C 90         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 9044 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 9046 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 9048 32 70 89         ld (Ctrl_0),a
 257+ 904B F1           	pop af
 258+ 904C 18 2B        	jr 9F
 259+ 904E
 260+ 904E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 904E
 262+ 904E F5           7 push af
 263+ 904F 3A 70 89     	ld a,(Ctrl_0)
 264+ 9052 CB 47        	bit 0,a
 265+ 9054 20 1D        	jr nz,8F
 266+ 9056 F1           	pop af
 267+ 9057
 268+ 9057              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 9057
 270+ 9057 1C           	inc e
 271+ 9058 1D               dec e
 272+ 9059 20 07            jr nz,10F
 273+ 905B 90           	sub b
 274+ 905C 6F               ld l,a
 275+ 905D 22 50 89     	ld (Posicion_actual),hl
 276+ 9060 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 9062              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 9062 CB 43        10 bit 0,e
 279+ 9064 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 9066              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 9066 C1           	pop bc
 282+ 9067 18 A6        	jr 3B
 283+ 9069 90           16 sub b
 284+ 906A 6F               ld l,a
 285+ 906B 22 50 89     	ld (Posicion_actual),hl
 286+ 906E CD 9C 90         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 9071 18 06            jr 9F
 288+ 9073 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 9075 32 70 89         ld (Ctrl_0),a
 290+ 9078 F1           	pop af
 291+ 9079 C1           9 pop bc
 292+ 907A 1E 00        	ld e,0
 293+ 907C CD AC 90         call Inicializacion
 294+ 907F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 9080 08           	ex af,af
 296+ 9081 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 9082 18 8B            jr 3B
 298+ 9084
 299+ 9084              ; --------------------
 300+ 9084
 301+ 9084 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 9086 CD 13 92     1 call PreviousScan
 303+ 9089 10 FB            djnz 1B
 304+ 908B 22 50 89     	ld (Posicion_actual),hl
 305+ 908E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 908F C9           	ret
 307+ 9090
 308+ 9090              ; --------------------
 309+ 9090
 310+ 9090 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 9092 CD 04 92     1 call NextScan
 312+ 9095 10 FB            djnz 1B
 313+ 9097 22 50 89     	ld (Posicion_actual),hl
 314+ 909A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 909B C9           	ret
 316+ 909C
 317+ 909C              ; --------------------
 318+ 909C              ;
 319+ 909C              ;	22/01/23
 320+ 909C              ;
 321+ 909C              ;	E="1". Hemos cambiado de cuadrante.
 322+ 909C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 909C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 909C
 325+ 909C
 326+ 909C              Modificaccionne
 327+ 909C
 328+ 909C 3A 62 89     	ld a,(Cuad_objeto)
 329+ 909F FE 02        	cp 2
 330+ 90A1 CC 84 90         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 90A4 DC 84 90         call c,Modifica_Pos_actual
 332+ 90A7 C8           	ret z
 333+ 90A8 CD 90 90         call Modifica_Pos_actual2
 334+ 90AB C9               ret
 335+ 90AC
 336+ 90AC              ; *************************************************************************************************************************************************************************************************
 337+ 90AC              ;
 338+ 90AC              ;	13/8/22
 339+ 90AC              ;
 340+ 90AC              ;	Inicializacion
 341+ 90AC              ;
 342+ 90AC              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 90AC              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 90AC              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 90AC              ;
 346+ 90AC              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 90AC              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 90AC              ;	_ desaparece/aparece.
 349+ 90AC
 350+ 90AC              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 90AC              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 90AC              ;
 353+ 90AC              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 90AC              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 90AC              ; 		   [E] ="0"
 356+ 90AC
 357+ 90AC              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 90AC
 359+ 90AC CD EE 9E     Inicializacion call calcula_tercio
 360+ 90AF 28 36        	jr z,primit
 361+ 90B1 E6 02        	and 2
 362+ 90B3 20 07        	jr nz,segmit
 363+ 90B5 7D           	ld a,l
 364+ 90B6 FE 7F        	cp $7f
 365+ 90B8 38 2D        	jr c,primit
 366+ 90BA 28 2B        	jr z,primit
 367+ 90BC CD 22 91     segmit call column
 368+ 90BF 38 13        	jr c,tercuad
 369+ 90C1 3E 04        cuarcuad ld a,4
 370+ 90C3 32 62 89     	ld (Cuad_objeto),a
 371+ 90C6 21 20 48     	ld hl,$4820
 372+ 90C9 22 72 89     	ld (Limite_horizontal),hl
 373+ 90CC 21 74 89     	ld hl,Limite_vertical
 374+ 90CF 36 0D        	ld (hl),$0d
 375+ 90D1 08           	ex af,af
 376+ 90D2 18 3C        	jr 1F
 377+ 90D4              tercuad
 378+ 90D4 3E 03        	ld a,3
 379+ 90D6 32 62 89     	ld (Cuad_objeto),a
 380+ 90D9 21 20 48     	ld hl,$4820
 381+ 90DC 22 72 89     	ld (Limite_horizontal),hl
 382+ 90DF 21 74 89     	ld hl,Limite_vertical
 383+ 90E2 36 12        	ld (hl),$12
 384+ 90E4 08           	ex af,af
 385+ 90E5 18 29        	jr 1F
 386+ 90E7 CD 22 91     primit call column
 387+ 90EA 38 13        	jr c, primcuad
 388+ 90EC              segcuad
 389+ 90EC 3E 02        	ld a,2
 390+ 90EE 32 62 89     	ld (Cuad_objeto),a
 391+ 90F1 21 C0 4F     	ld hl,$4fc0
 392+ 90F4 22 72 89     	ld (Limite_horizontal),hl
 393+ 90F7 21 74 89     	ld hl,Limite_vertical
 394+ 90FA 36 0D        	ld (hl),$0d
 395+ 90FC 08           	ex af,af
 396+ 90FD 18 11        	jr 1F
 397+ 90FF              primcuad
 398+ 90FF 3E 01        	ld a,1
 399+ 9101 32 62 89     	ld (Cuad_objeto),a
 400+ 9104 21 C0 4F     	ld hl,$4fc0
 401+ 9107 22 72 89     	ld (Limite_horizontal),hl
 402+ 910A 21 74 89     	ld hl,Limite_vertical
 403+ 910D 36 12        	ld (hl),$12
 404+ 910F 08           	ex af,af
 405+ 9110
 406+ 9110 C5           1 push bc
 407+ 9111 E5           	push hl
 408+ 9112 D5           	push de
 409+ 9113
 410+ 9113 2A 50 89     	ld hl,(Posicion_actual)
 411+ 9116 CD 0C 9F     	call Genera_coordenadas
 412+ 9119
 413+ 9119 D1           	pop de
 414+ 911A E1           	pop hl
 415+ 911B C1           	pop bc
 416+ 911C
 417+ 911C 21 70 89     	ld hl,Ctrl_0
 418+ 911F CB EE        	set 5,(hl)
 419+ 9121 C9           	ret
 420+ 9122
 421+ 9122              ; ------------------------------------------------------------------------------------------------------------------
 422+ 9122
 423+ 9122              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 9122              ;
 425+ 9122              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 9122
 427+ 9122 7D           column ld a,l
 428+ 9123 E6 1F        	and $1f
 429+ 9125 FE 10         	cp $10
 430+ 9127 C9            	ret
 431+ 9128
 432+ 9128              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9128              ;
 434+ 9128              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9128              ;
 436+ 9128              ; 14/12/22
 437+ 9128              ;
 438+ 9128              ;	Modifica: A y BC.
 439+ 9128
 440+ 9128 3A 62 89     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 912B E6 01        	and 1
 442+ 912D 28 17        	jr z,1F
 443+ 912F
 444+ 912F              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 912F
 446+ 912F 3A 54 89     	ld a,(Coordenada_X)
 447+ 9132 47           	ld b,a
 448+ 9133 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 9134 79           	ld a,c
 450+ 9135 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 9136 38 08        	jr c,2F
 452+ 9138 47           	ld b,a
 453+ 9139 79           	ld a,c
 454+ 913A 90           	sub b
 455+ 913B 32 71 89     	ld (Columnas),a
 456+ 913E 18 1B        	jr 4F
 457+ 9140 79           2 ld a,c
 458+ 9141 32 71 89     	ld (Columnas),a
 459+ 9144 18 15        	jr 4F
 460+ 9146
 461+ 9146              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 9146
 463+ 9146 3A 54 89     1 ld a,(Coordenada_X)
 464+ 9149 81           	add c
 465+ 914A 3D           	dec a
 466+ 914B D6 1F        	sub $1f
 467+ 914D 38 08        	jr c,3F
 468+ 914F 47           	ld b,a
 469+ 9150 79           	ld a,c
 470+ 9151 90           	sub b
 471+ 9152 32 71 89     	ld (Columnas),a
 472+ 9155 18 04        	jr 4F
 473+ 9157 79           3 ld a,c
 474+ 9158 32 71 89     	ld (Columnas),a
 475+ 915B D9           4 exx
 476+ 915C 4F           	ld c,a
 477+ 915D D9           	exx
 478+ 915E C9            ret
 479+ 915F
 480+ 915F              ; --------------------------------------------------------------------------------------------------------------------
 481+ 915F              ;
 482+ 915F              ;   19/7/23
 483+ 915F              ;
 484+ 915F              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 915F              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 915F              ;
 487+ 915F              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 915F              ;			HL e IY Contienen (Puntero_objeto).
 489+ 915F              ;
 490+ 915F              ;	DESTRUYE: HL,B Y A.
 491+ 915F
 492+ 915F 3A 62 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 9162 FE 02        	cp 2
 494+ 9164 38 18        	jr c,1F
 495+ 9166 28 16        	jr z,1F
 496+ 9168 E6 01        	and 1
 497+ 916A 28 0D        	jr z,3F
 498+ 916C
 499+ 916C              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 916C
 501+ 916C CD B2 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 916F
 503+ 916F 7D           9 ld a,l
 504+ 9170 E6 1F        	and $1f
 505+ 9172 28 2A        	jr z,7F
 506+ 9174 2B           	dec hl
 507+ 9175 10 F8        	djnz 9B
 508+ 9177 18 25        	jr 7F
 509+ 9179
 510+ 9179              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 9179
 512+ 9179 2A 50 89     3 ld hl,(Posicion_actual)
 513+ 917C 18 20        	jr 7F
 514+ 917E
 515+ 917E 28 14        1 jr z,2F
 516+ 9180
 517+ 9180              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 9180
 519+ 9180 CD B2 91     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9183
 521+ 9183 7D           4 ld a,l
 522+ 9184 E6 1F        	and $1f
 523+ 9186 28 03        	jr z,6F
 524+ 9188 2B           	dec hl
 525+ 9189 10 F8        	djnz 4B
 526+ 918B 06 0F        6 ld b,15
 527+ 918D CD 13 92     5 call PreviousScan
 528+ 9190 10 FB        	djnz 5B
 529+ 9192 18 0A        	jr 7F
 530+ 9194
 531+ 9194              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 9194
 533+ 9194 CD B2 91     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 9197 06 0F        	ld b,15
 535+ 9199 CD 13 92     8 call PreviousScan
 536+ 919C 10 FB        	djnz 8B
 537+ 919E
 538+ 919E E5           7 push hl
 539+ 919F DD E1        	pop ix
 540+ 91A1
 541+ 91A1 2A 52 89     	ld hl,(Puntero_objeto)
 542+ 91A4 E5           	push hl
 543+ 91A5 FD E1        	pop iy
 544+ 91A7
 545+ 91A7              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 91A7
 547+ 91A7 3A 70 89     	ld a,(Ctrl_0)
 548+ 91AA CB 77        	bit 6,a
 549+ 91AC C8           	ret z
 550+ 91AD
 551+ 91AD              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 91AD              ; _ entidad / Amadeus´.
 553+ 91AD
 554+ 91AD DD 22 D0 86  	ld (p.imp.amadeus),ix
 555+ 91B1
 556+ 91B1 C9           	ret
 557+ 91B2
 558+ 91B2              ; --------------------------------------------------------------------------------------------------------------------
 559+ 91B2              ;
 560+ 91B2              ;	2/1/23
 561+ 91B2              ;
 562+ 91B2              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 91B2              ;
 564+ 91B2              ;	Tras esta rutina tenemos:
 565+ 91B2              ;
 566+ 91B2              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 91B2              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 91B2              ;
 569+ 91B2              ;	DESTRUYE!!!!! HL,B y A.
 570+ 91B2
 571+ 91B2 2A 50 89     Operandos ld hl,(Posicion_actual)
 572+ 91B5 3A 71 89     	ld a,(Columnas)
 573+ 91B8 3D           	dec a
 574+ 91B9 20 01        	jr nz,1F
 575+ 91BB 3C           	inc a
 576+ 91BC 47           1 ld b,a
 577+ 91BD C9           	ret
 578+ 91BE
 579+ 91BE              ; --------------------------------------------------------------------------------------------------------------------
 580+ 91BE              ;
 581+ 91BE              ;	3/1/23
 582+ 91BE              ;
 583+ 91BE              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 91BE              ;
 585+ 91BE              ;	Destruye: A,B,HL y DE.
 586+ 91BE
 587+ 91BE              Define_rutina_de_impresion
 588+ 91BE
 589+ 91BE 3A 4F 89     	ld a,(Columns)
 590+ 91C1 47           	ld b,a
 591+ 91C2 3A 71 89     	ld a,(Columnas)
 592+ 91C5 B8           	cp b
 593+ 91C6 20 0D        	jr nz,2f
 594+ 91C8
 595+ 91C8              ;	La entidad se imprime entera.
 596+ 91C8
 597+ 91C8 21 E7 92     	ld hl, Indice_entidades_completas
 598+ 91CB E6 01        	and 1
 599+ 91CD 28 02        	jr z,1F
 600+ 91CF
 601+ 91CF 23           	inc hl
 602+ 91D0 23           	inc hl
 603+ 91D1
 604+ 91D1 CD A9 8B     1 call Extrae_address
 605+ 91D4 C9           	ret		;	ret
 606+ 91D5
 607+ 91D5              ;	La entidad no se imprime entera en pantalla.
 608+ 91D5
 609+ 91D5 3A 62 89     2 ld a,(Cuad_objeto)
 610+ 91D8 E6 01        	and 1
 611+ 91DA 28 17        	jr z,3F
 612+ 91DC
 613+ 91DC              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 91DC
 615+ 91DC 21 EB 92     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 91DF 3A 4F 89     4 ld a,(Columns)
 617+ 91E2 E6 01        	and 1
 618+ 91E4 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 91E6
 620+ 91E6 23           	inc hl
 621+ 91E7 23           	inc hl
 622+ 91E8
 623+ 91E8 3A 71 89     	ld a,(Columnas)
 624+ 91EB E6 01        	and 1
 625+ 91ED 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 91EF
 627+ 91EF 23           	inc hl
 628+ 91F0 23           	inc hl
 629+ 91F1
 630+ 91F1 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 91F3
 632+ 91F3 21 F1 92     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 91F6 18 E7        	jr 4B
 634+ 91F8
 635+ 91F8              ; --------------------------------------------------------------------------------------------------------------------
 636+ 91F8              ;
 637+ 91F8              ;	Prepara_draw
 638+ 91F8              ;
 639+ 91F8              ;	Es una rutina de carga.
 640+ 91F8              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 91F8              ;
 642+ 91F8              ;	FUNCIONAMIENTO:
 643+ 91F8              ;
 644+ 91F8              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 91F8              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 91F8              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 91F8              ;
 648+ 91F8              ;	DESTRUYE:
 649+ 91F8              ;
 650+ 91F8              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 91F8
 652+ 91F8 21 4E 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 91FB 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 91FC 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 91FD 4E           	ld c,(hl)
 656+ 91FE 2A 50 89     	ld hl,(Posicion_actual)
 657+ 9201 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 9203 C9           	ret
 659+ 9204
 660+ 9204              ;----------------------------------------------------------------------------------------------------------------
 661+ 9204              ;
 662+ 9204              ;	5/08/22
 663+ 9204              ;
 664+ 9204              ;   NextScan.
 665+ 9204              ;
 666+ 9204              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 9204              ;
 668+ 9204              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 9204              ;
 670+ 9204              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 9204              ;
 672+ 9204              ;       DESTRUIDOS: AF y HL !!!
 673+ 9204              ;
 674+ 9204              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 9204              ;
 676+ 9204
 677+ 9204 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 9205 7C               ld a,h
 679+ 9206 E6 07            and 7
 680+ 9208 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9209
 682+ 9209 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 920A C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 920C 6F               ld l,a
 685+ 920D D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 920E
 687+ 920E 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 920F D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 9211 67               ld h,a
 690+ 9212 C9               ret
 691+ 9213
 692+ 9213              ;----------------------------------------------------------------------------------------------------------------
 693+ 9213              ;
 694+ 9213              ;	5/08/22
 695+ 9213              ;
 696+ 9213              ;   PreviousScan.
 697+ 9213              ;
 698+ 9213              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 9213              ;
 700+ 9213              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 9213              ;
 702+ 9213              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 9213              ;
 704+ 9213              ;       DESTRUIDOS: AF y HL !!!
 705+ 9213              ;
 706+ 9213              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 9213              ;
 708+ 9213
 709+ 9213 7C           PreviousScan ld a,h
 710+ 9214 25               dec h               ; Dec H.
 711+ 9215 E6 07            and 7
 712+ 9217 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9218
 714+ 9218 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9219 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 921B 6F               ld l,a
 717+ 921C D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 921D
 719+ 921D 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 921E C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9220 67               ld h,a
 722+ 9221 C9               ret
 723+ 9222
 724+ 9222              ; -----------------------------------------------------------------------------------
 725+ 9222              ;
 726+ 9222              ;	31/7/23
 727+ 9222              ;
 728+ 9222              ;	Rutina principal de pintado de entidades.
 729+ 9222              ;	Extrae la foto del frame, (entidades).
 730+ 9222
 731+ 9222              Extrae_foto_entidades
 732+ 9222
 733+ 9222 21 01 80     	ld hl,Album_de_fotos+1
 734+ 9225 7E           	ld a,(hl)
 735+ 9226 A7           	and a
 736+ 9227 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9228
 738+ 9228              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9228
 740+ 9228 3A 9D 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 922B A7           	and a
 742+ 922C C8           	ret z
 743+ 922D
 744+ 922D              ; -----------------------------------
 745+ 922D
 746+ 922D ED 73 A2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 9231 31 00 80     	ld sp,Album_de_fotos
 748+ 9234
 749+ 9234 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 9236 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9237 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9238
 753+ 9238 ED 73 A4 89  	ld (Stack_2),sp
 754+ 923C ED 7B A2 89  	ld sp,(Stack)
 755+ 9240
 756+ 9240              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9240
 758+ 9240 3E CD        	ld a,$cd
 759+ 9242 32 4A 92     	ld (Imprime),a
 760+ 9245 EB           	ex de,hl
 761+ 9246 22 4B 92     	ld (Imprime+1),hl
 762+ 9249 EB           	ex de,hl
 763+ 924A
 764+ 924A              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 924A
 766+ 924A 00 00 00     Imprime db 0,0,0
 767+ 924D
 768+ 924D ED 73 A2 89  	ld (Stack),sp
 769+ 9251
 770+ 9251 3A 9D 89     	ld a,(Numero_de_malotes)
 771+ 9254 3D           	dec a
 772+ 9255 28 09        	jr z,1F
 773+ 9257 32 9D 89      	ld (Numero_de_malotes),a
 774+ 925A
 775+ 925A ED 7B A4 89  	ld sp,(Stack_2)
 776+ 925E 18 D4        	jr 2B
 777+ 9260
 778+ 9260 AF           1 xor a
 779+ 9261 32 A4 89     	ld (Stack_2),a
 780+ 9264
 781+ 9264 C9           	ret
 782+ 9265
 783+ 9265              ; -----------------------------------------------------------------------------------
 784+ 9265              ;
 785+ 9265              ;	28/2/23
 786+ 9265              ;
 787+ 9265              ;	Pinta los disparos generados.
 788+ 9265
 789+ 9265              Extrae_foto_disparos
 790+ 9265
 791+ 9265 21 57 80     	ld hl,Album_de_fotos_disparos+1
 792+ 9268 7E               ld a,(hl)
 793+ 9269 A7               and a
 794+ 926A C8               ret z
 795+ 926B
 796+ 926B 3A B2 89     	ld a,(Numero_de_disparotes)
 797+ 926E A7           	and a
 798+ 926F C8           	ret z
 799+ 9270 ED 73 A2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 9274 31 56 80     	ld sp,Album_de_fotos_disparos
 801+ 9277
 802+ 9277 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 9279 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 927A D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 927B
 806+ 927B ED 73 A4 89  	ld (Stack_2),sp
 807+ 927F ED 7B A2 89  	ld sp,(Stack)
 808+ 9283
 809+ 9283              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 9283
 811+ 9283 3E CD        	ld a,$cd
 812+ 9285 32 8D 92     	ld (Imprime2),a
 813+ 9288 EB           	ex de,hl
 814+ 9289 22 8E 92     	ld (Imprime2+1),hl
 815+ 928C EB           	ex de,hl
 816+ 928D
 817+ 928D              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 928D
 819+ 928D 00 00 00     Imprime2 db 0,0,0
 820+ 9290
 821+ 9290 3A B2 89     	ld a,(Numero_de_disparotes)
 822+ 9293 3D           	dec a
 823+ 9294 28 09        	jr z,1F
 824+ 9296 32 B2 89      	ld (Numero_de_disparotes),a
 825+ 9299
 826+ 9299 ED 7B A4 89  	ld sp,(Stack_2)
 827+ 929D 18 D8        	jr 2B
 828+ 929F
 829+ 929F AF           1 xor a
 830+ 92A0 32 A4 89     	ld (Stack_2),a
 831+ 92A3 C9           	ret
 832+ 92A4
 833+ 92A4              ; -----------------------------------------------------------------------------------
 834+ 92A4              ;
 835+ 92A4              ;	4/9/23
 836+ 92A4              ;
 837+ 92A4              ;	Rutina principal de pintado de Amadeus.
 838+ 92A4              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 92A4
 840+ 92A4 21 AC 80     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 92A7 7E           	ld a,(hl)
 842+ 92A8 A7           	and a
 843+ 92A9 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 92AA
 845+ 92AA 3A 9D 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 92AD A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 92AE C8           	ret z
 848+ 92AF
 849+ 92AF              ; -----------------------------------
 850+ 92AF
 851+ 92AF ED 73 A2 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 92B3 31 AC 80     	ld sp,Album_de_fotos_Amadeus
 853+ 92B6
 854+ 92B6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 92B8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 92B9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 92BA
 858+ 92BA ED 73 A4 89  	ld (Stack_2),sp
 859+ 92BE ED 7B A2 89  	ld sp,(Stack)
 860+ 92C2
 861+ 92C2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 92C2
 863+ 92C2 3E CD        	ld a,$cd
 864+ 92C4 32 CC 92     	ld (Imprime_Amadeus),a
 865+ 92C7 EB           	ex de,hl
 866+ 92C8 22 CD 92     	ld (Imprime_Amadeus+1),hl
 867+ 92CB EB           	ex de,hl
 868+ 92CC
 869+ 92CC              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 92CC
 871+ 92CC 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 92CF
 873+ 92CF ED 73 A2 89  	ld (Stack),sp
 874+ 92D3
 875+ 92D3 3A 9D 89     	ld a,(Numero_de_malotes)
 876+ 92D6 3D           	dec a
 877+ 92D7 28 09        	jr z,1F
 878+ 92D9 32 9D 89      	ld (Numero_de_malotes),a
 879+ 92DC
 880+ 92DC ED 7B A4 89  	ld sp,(Stack_2)
 881+ 92E0 18 D4        	jr 2B
 882+ 92E2
 883+ 92E2 AF           1 xor a
 884+ 92E3 32 A4 89     	ld (Stack_2),a
 885+ 92E6
 886+ 92E6 C9           	ret
# file closed: Draw_XOR.asm
1734  92E7              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 92E7              ;   índices de Rutinas de impresión.
   2+ 92E7
   3+ 92E7 F7 92        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 92E9 24 93            defw Pinta_Amadeus_3x2
   5+ 92EB
   6+ 92EB 7A 93        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 92ED 1A 94            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 92EF CE 93            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 92F1
  10+ 92F1 A4 93        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 92F3 A8 94            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 92F5 5C 94            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 92F7
  14+ 92F7
  15+ 92F7              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 92F7              ;
  17+ 92F7              ;   12/12/22
  18+ 92F7              ;
  19+ 92F7              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 92F7              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 92F7              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 92F7              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 92F7              ;
  24+ 92F7              ;   Modifica: DE y HL.
  25+ 92F7
  26+ 92F7 ED 73 A2 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 92FB FD F9        	ld sp,iy
  28+ 92FD 06 10            ld b,16
  29+ 92FF D1           1 pop de
  30+ 9300 7B               ld a,e
  31+ 9301 AE               xor (hl)
  32+ 9302 77           	ld (hl),a
  33+ 9303 23           	inc hl
  34+ 9304 7A               ld a,d
  35+ 9305 AE               xor (hl)
  36+ 9306 77           	ld (hl),a
  37+ 9307 2B           	dec hl
  38+ 9308 24           	inc h
  39+ 9309 7C               ld a,h
  40+ 930A E6 07            and 7
  41+ 930C 20 0A            jr nz,2F
  42+ 930E 7D               ld a,l
  43+ 930F C6 20            add a,$20
  44+ 9311 6F               ld l,a
  45+ 9312 38 04            jr c,2F
  46+ 9314 7C               ld a,h
  47+ 9315 D6 08            sub 8
  48+ 9317 67               ld h,a
  49+ 9318 7C           2 ld a,h
  50+ 9319 FE 58            cp $58
  51+ 931B 28 02            jr z,3F
  52+ 931D 10 E0            djnz 1B
  53+ 931F ED 7B A2 89  3 ld sp,(Stack)
  54+ 9323 C9           	ret
  55+ 9324
  56+ 9324 ED 73 A2 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9328 FD F9        	ld sp,iy
  58+ 932A 06 08            ld b,8
  59+ 932C D1           1 pop de
  60+ 932D 7B               ld a,e
  61+ 932E AE               xor (hl)
  62+ 932F 77           	ld (hl),a
  63+ 9330 23           	inc hl
  64+ 9331 7A               ld a,d
  65+ 9332 AE               xor (hl)
  66+ 9333 77           	ld (hl),a
  67+ 9334 23           	inc hl
  68+ 9335 D1           	pop de
  69+ 9336 7B               ld a,e
  70+ 9337 AE               xor (hl)
  71+ 9338 77           	ld (hl),a
  72+ 9339 2B           	dec hl
  73+ 933A 2B           	dec hl
  74+ 933B 24           	inc h
  75+ 933C 7C               ld a,h
  76+ 933D E6 07            and 7
  77+ 933F 20 0A            jr nz,2F
  78+ 9341 7D               ld a,l
  79+ 9342 C6 20            add a,$20
  80+ 9344 6F               ld l,a
  81+ 9345 38 04            jr c,2F
  82+ 9347 7C               ld a,h
  83+ 9348 D6 08            sub 8
  84+ 934A 67               ld h,a
  85+ 934B 7C           2 ld a,h
  86+ 934C FE 58            cp $58
  87+ 934E 28 25            jr z,4F
  88+ 9350 7A               ld a,d
  89+ 9351 AE               xor (hl)
  90+ 9352 77               ld (hl),a
  91+ 9353 D1           	pop de
  92+ 9354 23           	inc hl
  93+ 9355 7B               ld a,e
  94+ 9356 AE               xor (hl)
  95+ 9357 77           	ld (hl),a
  96+ 9358 23           	inc hl
  97+ 9359 7A               ld a,d
  98+ 935A AE               xor (hl)
  99+ 935B 77           	ld (hl),a
 100+ 935C 2B           	dec hl
 101+ 935D 2B           	dec hl
 102+ 935E 24           	inc h
 103+ 935F 7C               ld a,h
 104+ 9360 E6 07            and 7
 105+ 9362 20 0A            jr nz,3F
 106+ 9364 7D               ld a,l
 107+ 9365 C6 20            add a,$20
 108+ 9367 6F               ld l,a
 109+ 9368 38 04            jr c,3F
 110+ 936A 7C               ld a,h
 111+ 936B D6 08            sub 8
 112+ 936D 67               ld h,a
 113+ 936E 7C           3 ld a,h
 114+ 936F FE 58            cp $58
 115+ 9371 28 02            jr z,4F
 116+ 9373 10 B7            djnz 1B
 117+ 9375 ED 7B A2 89  4 ld sp,(Stack)
 118+ 9379 C9           	ret
 119+ 937A
 120+ 937A              ; ---------------------------------------------------
 121+ 937A
 122+ 937A ED 73 A2 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 937E FD F9        	ld sp,iy
 124+ 9380
 125+ 9380              ; >>>
 126+ 9380
 127+ 9380 06 10            ld b,16
 128+ 9382 D1           1 pop de
 129+ 9383 7A           	ld a,d
 130+ 9384 AE           	xor (hl)
 131+ 9385 77           	ld (hl),a
 132+ 9386 24           	inc h
 133+ 9387 7C               ld a,h
 134+ 9388 E6 07            and 7
 135+ 938A 20 0C            jr nz,2F
 136+ 938C 7D               ld a,l
 137+ 938D C6 20            add a,$20
 138+ 938F 6F               ld l,a
 139+ 9390 38 06            jr c,2F
 140+ 9392 7C               ld a,h
 141+ 9393 D6 08            sub 8
 142+ 9395 67               ld h,a
 143+ 9396 18 00            jr 2F
 144+ 9398 7C           2 ld a,h
 145+ 9399 FE 58            cp $58
 146+ 939B 28 02            jr z,3F
 147+ 939D 10 E3            djnz 1B
 148+ 939F ED 7B A2 89  3 ld sp,(Stack)
 149+ 93A3 C9           	ret
 150+ 93A4
 151+ 93A4 ED 73 A2 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 93A8 FD F9        	ld sp,iy
 153+ 93AA
 154+ 93AA              ; >>>
 155+ 93AA
 156+ 93AA 06 10            ld b,16
 157+ 93AC D1           1 pop de
 158+ 93AD 7B           	ld a,e
 159+ 93AE AE           	xor (hl)
 160+ 93AF 77           	ld (hl),a
 161+ 93B0 24           	inc h
 162+ 93B1 7C               ld a,h
 163+ 93B2 E6 07            and 7
 164+ 93B4 20 0C            jr nz,2F
 165+ 93B6 7D               ld a,l
 166+ 93B7 C6 20            add a,$20
 167+ 93B9 6F               ld l,a
 168+ 93BA 38 06            jr c,2F
 169+ 93BC 7C               ld a,h
 170+ 93BD D6 08            sub 8
 171+ 93BF 67               ld h,a
 172+ 93C0 18 00            jr 2F
 173+ 93C2 7C           2 ld a,h
 174+ 93C3 FE 58            cp $58
 175+ 93C5 28 02            jr z,3F
 176+ 93C7 10 E3            djnz 1B
 177+ 93C9 ED 7B A2 89  3 ld sp,(Stack)
 178+ 93CD C9           	ret
 179+ 93CE
 180+ 93CE              ; ---------------------------------------------------
 181+ 93CE
 182+ 93CE ED 73 A2 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 93D2 FD F9        	ld sp,iy
 184+ 93D4 06 08            ld b,8
 185+ 93D6 D1           1 pop de
 186+ 93D7 7A           	ld a,d
 187+ 93D8 AE           	xor (hl)
 188+ 93D9 77           	ld (hl),a
 189+ 93DA 23           	inc hl
 190+ 93DB D1           	pop de
 191+ 93DC 7B           	ld a,e
 192+ 93DD AE           	xor (hl)
 193+ 93DE 77           	ld (hl),a
 194+ 93DF 2B           	dec hl
 195+ 93E0 24            	inc h
 196+ 93E1 7C               ld a,h
 197+ 93E2 E6 07            and 7
 198+ 93E4 20 0A            jr nz,2F
 199+ 93E6 7D               ld a,l
 200+ 93E7 C6 20            add a,$20
 201+ 93E9 6F               ld l,a
 202+ 93EA 38 04            jr c,2F
 203+ 93EC 7C               ld a,h
 204+ 93ED D6 08            sub 8
 205+ 93EF 67               ld h,a
 206+ 93F0 7C           2 ld a,h
 207+ 93F1 FE 58            cp $58
 208+ 93F3 28 20            jr z,4F
 209+ 93F5 D1               pop de
 210+ 93F6 7B           	ld a,e
 211+ 93F7 AE           	xor (hl)
 212+ 93F8 77           	ld (hl),a
 213+ 93F9 23           	inc hl
 214+ 93FA 7A           	ld a,d
 215+ 93FB AE           	xor (hl)
 216+ 93FC 77           	ld (hl),a
 217+ 93FD 2B           	dec hl
 218+ 93FE 24           	inc h
 219+ 93FF 7C               ld a,h
 220+ 9400 E6 07            and 7
 221+ 9402 20 0A            jr nz,3F
 222+ 9404 7D               ld a,l
 223+ 9405 C6 20            add a,$20
 224+ 9407 6F               ld l,a
 225+ 9408 38 04            jr c,3F
 226+ 940A 7C               ld a,h
 227+ 940B D6 08            sub 8
 228+ 940D 67               ld h,a
 229+ 940E 7C           3 ld a,h
 230+ 940F FE 58            cp $58
 231+ 9411 28 02            jr z,4F
 232+ 9413 10 C1            djnz 1B
 233+ 9415 ED 7B A2 89  4 ld sp,(Stack)
 234+ 9419 C9           	ret
 235+ 941A
 236+ 941A ED 73 A2 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 941E FD F9        	ld sp,iy
 238+ 9420 06 08            ld b,8
 239+ 9422 D1           1 pop de
 240+ 9423 D1           	pop de
 241+ 9424 7B           	ld a,e
 242+ 9425 AE           	xor (hl)
 243+ 9426 77           	ld (hl),a
 244+ 9427 24            	inc h
 245+ 9428 7C               ld a,h
 246+ 9429 E6 07            and 7
 247+ 942B 20 0A            jr nz,2F
 248+ 942D 7D               ld a,l
 249+ 942E C6 20            add a,$20
 250+ 9430 6F               ld l,a
 251+ 9431 38 04            jr c,2F
 252+ 9433 7C               ld a,h
 253+ 9434 D6 08            sub 8
 254+ 9436 67               ld h,a
 255+ 9437 7C           2 ld a,h
 256+ 9438 FE 58            cp $58
 257+ 943A 28 1B            jr z,4F
 258+ 943C D1               pop de
 259+ 943D 7A           	ld a,d
 260+ 943E AE           	xor (hl)
 261+ 943F 77           	ld (hl),a
 262+ 9440 24           	inc h
 263+ 9441 7C               ld a,h
 264+ 9442 E6 07            and 7
 265+ 9444 20 0A            jr nz,3F
 266+ 9446 7D               ld a,l
 267+ 9447 C6 20            add a,$20
 268+ 9449 6F               ld l,a
 269+ 944A 38 04            jr c,3F
 270+ 944C 7C               ld a,h
 271+ 944D D6 08            sub 8
 272+ 944F 67               ld h,a
 273+ 9450 7C           3 ld a,h
 274+ 9451 FE 58            cp $58
 275+ 9453 28 02            jr z,4F
 276+ 9455 10 CB            djnz 1B
 277+ 9457 ED 7B A2 89  4 ld sp,(Stack)
 278+ 945B C9           	ret
 279+ 945C
 280+ 945C ED 73 A2 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9460 FD F9        	ld sp,iy
 282+ 9462 06 08            ld b,8
 283+ 9464 D1           1 pop de
 284+ 9465 7B           	ld a,e
 285+ 9466 AE           	xor (hl)
 286+ 9467 77           	ld (hl),a
 287+ 9468 23           	inc hl
 288+ 9469 7A           	ld a,d
 289+ 946A AE           	xor (hl)
 290+ 946B 77           	ld (hl),a
 291+ 946C 2B           	dec hl
 292+ 946D 24             	inc h
 293+ 946E 7C               ld a,h
 294+ 946F E6 07            and 7
 295+ 9471 20 0A            jr nz,2F
 296+ 9473 7D               ld a,l
 297+ 9474 C6 20            add a,$20
 298+ 9476 6F               ld l,a
 299+ 9477 38 04            jr c,2F
 300+ 9479 7C               ld a,h
 301+ 947A D6 08            sub 8
 302+ 947C 67               ld h,a
 303+ 947D 7C           2 ld a,h
 304+ 947E FE 58            cp $58
 305+ 9480 28 21            jr z,4F
 306+ 9482 D1               pop de
 307+ 9483 7A           	ld a,d
 308+ 9484 AE           	xor (hl)
 309+ 9485 77           	ld (hl),a
 310+ 9486 23           	inc hl
 311+ 9487 D1               pop de
 312+ 9488 7B           	ld a,e
 313+ 9489 AE           	xor (hl)
 314+ 948A 77           	ld (hl),a
 315+ 948B 2B           	dec hl
 316+ 948C 24           	inc h
 317+ 948D 7C               ld a,h
 318+ 948E E6 07            and 7
 319+ 9490 20 0A            jr nz,3F
 320+ 9492 7D               ld a,l
 321+ 9493 C6 20            add a,$20
 322+ 9495 6F               ld l,a
 323+ 9496 38 04            jr c,3F
 324+ 9498 7C               ld a,h
 325+ 9499 D6 08            sub 8
 326+ 949B 67               ld h,a
 327+ 949C 7C           3 ld a,h
 328+ 949D FE 58            cp $58
 329+ 949F 28 02            jr z,4F
 330+ 94A1 10 C1            djnz 1B
 331+ 94A3 ED 7B A2 89  4 ld sp,(Stack)
 332+ 94A7 C9           	ret
 333+ 94A8
 334+ 94A8 ED 73 A2 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 94AC FD F9        	ld sp,iy
 336+ 94AE 06 08            ld b,8
 337+ 94B0 D1           1 pop de
 338+ 94B1 7B           	ld a,e
 339+ 94B2 AE           	xor (hl)
 340+ 94B3 77           	ld (hl),a
 341+ 94B4 24            	inc h
 342+ 94B5 7C               ld a,h
 343+ 94B6 E6 07            and 7
 344+ 94B8 20 0A            jr nz,2F
 345+ 94BA 7D               ld a,l
 346+ 94BB C6 20            add a,$20
 347+ 94BD 6F               ld l,a
 348+ 94BE 38 04            jr c,2F
 349+ 94C0 7C               ld a,h
 350+ 94C1 D6 08            sub 8
 351+ 94C3 67               ld h,a
 352+ 94C4 7C           2 ld a,h
 353+ 94C5 FE 58            cp $58
 354+ 94C7 28 1C            jr z,4F
 355+ 94C9 D1               pop de
 356+ 94CA 7A           	ld a,d
 357+ 94CB AE           	xor (hl)
 358+ 94CC 77           	ld (hl),a
 359+ 94CD 24           	inc h
 360+ 94CE 7C               ld a,h
 361+ 94CF E6 07            and 7
 362+ 94D1 20 0A            jr nz,3F
 363+ 94D3 7D               ld a,l
 364+ 94D4 C6 20            add a,$20
 365+ 94D6 6F               ld l,a
 366+ 94D7 38 04            jr c,3F
 367+ 94D9 7C               ld a,h
 368+ 94DA D6 08            sub 8
 369+ 94DC 67               ld h,a
 370+ 94DD 7C           3 ld a,h
 371+ 94DE FE 58            cp $58
 372+ 94E0 28 03            jr z,4F
 373+ 94E2 D1               pop de
 374+ 94E3 10 CB            djnz 1B
 375+ 94E5 ED 7B A2 89  4 ld sp,(Stack)
 376+ 94E9 C9           	ret
 377+ 94EA
 378+ 94EA              ; ---------------------------------------------------
 379+ 94EA              ;
 380+ 94EA              ;   27/02/23
 381+ 94EA              ;
 382+ 94EA              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 94EA              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 94EA              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 94EA
 386+ 94EA ED 73 A2 89  Pinta_Disparo ld (Stack),sp
 387+ 94EE FD F9            ld sp,iy
 388+ 94F0 06 03            ld b,3
 389+ 94F2 D1           1 pop de
 390+ 94F3 7B               ld a,e
 391+ 94F4 AE               xor (hl)
 392+ 94F5 77               ld (hl),a
 393+ 94F6 23               inc hl
 394+ 94F7 7A               ld a,d
 395+ 94F8 AE               xor (hl)
 396+ 94F9 77               ld (hl),a
 397+ 94FA 2B               dec hl
 398+ 94FB
 399+ 94FB 24               inc h
 400+ 94FC 7C               ld a,h
 401+ 94FD E6 07            and 7
 402+ 94FF 20 0A            jr nz,2F
 403+ 9501 7D               ld a,l
 404+ 9502 C6 20            add a,$20
 405+ 9504 6F               ld l,a
 406+ 9505 38 04            jr c,2F
 407+ 9507 7C               ld a,h
 408+ 9508 D6 08            sub 8
 409+ 950A 67               ld h,a
 410+ 950B 7C           2 ld a,h
 411+ 950C FE 58            cp $58
 412+ 950E 28 02            jr z,3F
 413+ 9510
 414+ 9510 10 E0            djnz 1B
 415+ 9512 ED 7B A2 89  3 ld sp,(Stack)
 416+ 9516 C9               ret
 417+ 9517
# file closed: Rutinas_de_impresion_sprites.asm
1735  9517              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9517
   2+ 9517              ; ******************************************************************************************************************************************************************************************
   3+ 9517              ;
   4+ 9517              ;   20/05/23
   5+ 9517              ;
   6+ 9517              ;	Recompone_posicion_inicio
   7+ 9517              ;
   8+ 9517              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 9517              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 9517              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 9517              ;	_ a una u otra rutina.
  12+ 9517
  13+ 9517              Recompone_posicion_inicio
  14+ 9517
  15+ 9517 2A 60 89     	ld hl,(Posicion_inicio)
  16+ 951A 7D           	ld a,l
  17+ 951B E6 1F        	and $1f
  18+ 951D 28 16        	jr z,1F
  19+ 951F
  20+ 951F FE 1F        	cp $1f
  21+ 9521 28 0D        	jr z,3F
  22+ 9523
  23+ 9523 21 75 89     	ld hl,Ctrl_2
  24+ 9526 CB C6        	set 0,(hl)
  25+ 9528 2A 52 89     	ld hl,(Puntero_objeto)
  26+ 952B 22 92 89     	ld (Repone_puntero_objeto),hl
  27+ 952E 18 08        	jr 2F
  28+ 9530
  29+ 9530 CD DE 96     3 call Mov_left
  30+ 9533 18 03        	jr 2F
  31+ 9535
  32+ 9535 CD BB 95     1 call Mov_right
  33+ 9538 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 953B 22 52 89     	ld (Puntero_objeto),hl
  35+ 953E C9           	ret
  36+ 953F
  37+ 953F              ; ******************************************************************************************************************************************************************************************
  38+ 953F              ;
  39+ 953F              ;   27/05/23
  40+ 953F              ;
  41+ 953F              ;	Mov_down
  42+ 953F              ;
  43+ 953F              ; 	Mueve el Sprite X px hacia abajo.
  44+ 953F              ;
  45+ 953F              ;
  46+ 953F              Mov_down
  47+ 953F
  48+ 953F CD A9 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9542              ;																	; _ repone (Puntero_objeto).
  50+ 9542 21 70 89     	ld hl,Ctrl_0
  51+ 9545 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 9547              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 9547              ; 																	; _ en el caso de que no lo haya.
  54+ 9547 3A 7A 89     	ld a,(Vel_down)
  55+ 954A 47           	ld b,a
  56+ 954B 2A 50 89         ld hl,(Posicion_actual)
  57+ 954E CD EE 9E     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9551 E6 02        	and 2
  59+ 9553 28 17        	jr z,1F
  60+ 9555
  61+ 9555              ; Nos encontramos en el último tercio de pantalla.
  62+ 9555              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 9555
  64+ 9555 7C           	ld a,h
  65+ 9556 FE 57        	cp $57
  66+ 9558 20 12        	jr nz,1F
  67+ 955A
  68+ 955A 7D           	ld a,l
  69+ 955B C6 20        	add $20
  70+ 955D 30 0D        	jr nc,1F
  71+ 955F
  72+ 955F              ; ------------------------------
  73+ 955F              ;
  74+ 955F              ;	12/01/24
  75+ 955F
  76+ 955F              ;	call Reaparece_arriba
  77+ 955F CD 6B 98     	call Reinicio
  78+ 9562
  79+ 9562              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9562
  81+ 9562 3A B0 89     	ld a,(Ctrl_3)
  82+ 9565 CB CF        	set 1,a
  83+ 9567 32 B0 89     	ld (Ctrl_3),a
  84+ 956A
  85+ 956A 18 08        	jr 3F
  86+ 956C              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 956C              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 956C              ; ------------------------------
  89+ 956C
  90+ 956C CD 04 92     1 call NextScan
  91+ 956F 22 50 89     	ld (Posicion_actual),hl
  92+ 9572 10 DA            djnz 2B
  93+ 9574 CD 0C 9F     3 call Genera_coordenadas
  94+ 9577 C9           	ret
  95+ 9578
  96+ 9578              ; ******************************************************************************************************************************************************************************************
  97+ 9578              ;
  98+ 9578              ;   27/05/23
  99+ 9578              ;
 100+ 9578              ;	Mov_up
 101+ 9578              ;
 102+ 9578              ; 	Mueve el Sprite hacia arriba.
 103+ 9578              ;
 104+ 9578              ;
 105+ 9578              Mov_up
 106+ 9578
 107+ 9578 CD A9 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 957B              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 957B 21 70 89     	ld hl,Ctrl_0
 110+ 957E CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9580              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9580              ; 																		; _ en el caso de que no lo haya.
 113+ 9580 3A 79 89     	ld a,(Vel_up)
 114+ 9583 47           	ld b,a
 115+ 9584 2A 50 89     	ld hl,(Posicion_actual)
 116+ 9587 CD EE 9E     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 958A A7           	and a
 118+ 958B 20 10        	jr nz,1F
 119+ 958D
 120+ 958D              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 958D              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 958D
 123+ 958D 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 958E FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9590 20 0B            jr nz,1F
 126+ 9592 7D               ld a,l
 127+ 9593 D6 20            sub $20
 128+ 9595 30 06            jr nc,1F
 129+ 9597 25               dec h
 130+ 9598
 131+ 9598              ; -----------------------------
 132+ 9598 CD 4C 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 959B              ;	call Reinicio
 134+ 959B              ; -----------------------------
 135+ 959B
 136+ 959B 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 959D CD 13 92     1 call PreviousScan
 138+ 95A0 22 50 89     	ld (Posicion_actual),hl
 139+ 95A3 10 E2            djnz 3B
 140+ 95A5 CD 0C 9F     2 call Genera_coordenadas
 141+ 95A8 C9           	ret
 142+ 95A9
 143+ 95A9              ; -----------------------------
 144+ 95A9              ;
 145+ 95A9              ;	27/5/23
 146+ 95A9              ;
 147+ 95A9              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 95A9              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 95A9              ;
 150+ 95A9              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 95A9              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 95A9              ;
 153+ 95A9              ;	Modifica: A y (Puntero_objeto).
 154+ 95A9
 155+ 95A9 3A 75 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95AC CB 47        	bit 0,a
 157+ 95AE C8           	ret z
 158+ 95AF CB 87        	res 0,a
 159+ 95B1 32 75 89     	ld (Ctrl_2),a
 160+ 95B4 2A 92 89     	ld hl,(Repone_puntero_objeto)
 161+ 95B7 22 52 89     	ld (Puntero_objeto),hl
 162+ 95BA C9           	ret
 163+ 95BB
 164+ 95BB              ; ******************************************************************************************************************************************************************************************
 165+ 95BB              ;
 166+ 95BB              ;	19/10/22
 167+ 95BB              ;
 168+ 95BB              ;	Mov_right.
 169+ 95BB              ;
 170+ 95BB              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95BB              ;
 172+ 95BB
 173+ 95BB 3A 70 89     Mov_right ld a,(Ctrl_0)
 174+ 95BE CB 77        	bit 6,a
 175+ 95C0 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95C2
 177+ 95C2 CD FA 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95C5 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95C6
 180+ 95C6 21 70 89     	ld hl,Ctrl_0
 181+ 95C9 CB E6        	set 4,(hl)
 182+ 95CB 18 52        	jr 8F
 183+ 95CD
 184+ 95CD 21 70 89     10 ld hl,Ctrl_0
 185+ 95D0 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95D2              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95D2              ; 																	; _ en el caso de que no lo haya.
 188+ 95D2 3A 54 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95D5 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95D7 20 46        	jr nz,8F
 191+ 95D9
 192+ 95D9 3A 56 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95DC A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95DD 28 40        	jr z,8F
 195+ 95DF
 196+ 95DF              ; ---------- ---------- ----------
 197+ 95DF              ;
 198+ 95DF              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95DF
 200+ 95DF 3A 78 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95E2 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95E4 28 11        	jr z,1F
 203+ 95E6 38 06        	jr c,6F
 204+ 95E8 FE 04        	cp 4
 205+ 95EA 28 14        	jr z,7F
 206+ 95EC 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95EE
 208+ 95EE              ; ---------- ---------- ----------
 209+ 95EE              ;
 210+ 95EE              ; Perfiles de velocidad
 211+ 95EE              ;
 212+ 95EE
 213+ 95EE 3A 56 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95F1 FE FE        	cp $fe
 215+ 95F3 20 2A        	jr nz,8F
 216+ 95F5 18 10        	jr 3F
 217+ 95F7 3A 56 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95FA FE FD        	cp $fd
 219+ 95FC 20 21        	jr nz,8F
 220+ 95FE 18 07        	jr 3F
 221+ 9600 3A 56 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 9603 FE FB        	cp $fb
 223+ 9605 20 18        	jr nz,8F
 224+ 9607
 225+ 9607              ; ---------- ---------- ----------
 226+ 9607
 227+ 9607              3
 228+ 9607 CD 3A 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 960A              ;	call Reinicio
 230+ 960A
 231+ 960A              ; ---------- ---------- ----------
 232+ 960A              ;
 233+ 960A              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 960A
 235+ 960A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 960C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 960D CD 26 96     	call DESPLZ_DER
 238+ 9610 C1           	pop bc
 239+ 9611 10 F9        	djnz 5B
 240+ 9613 2A 50 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 9616 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 9617 22 50 89     	ld (Posicion_actual),hl
 243+ 961A CD 0C 9F     	call Genera_coordenadas
 244+ 961D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 961F
 246+ 961F              ; ---------- ---------- ----------
 247+ 961F
 248+ 961F 2A 50 89     8 ld hl,(Posicion_actual)
 249+ 9622 CD 26 96     	call DESPLZ_DER
 250+ 9625 C9           2 ret
 251+ 9626
 252+ 9626              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 9626              ;
 254+ 9626              ;	22/9/22
 255+ 9626              ;
 256+ 9626
 257+ 9626 CD 35 96     DESPLZ_DER call Desplaza_derecha
 258+ 9629 CD 81 96         call modifica_parametros_1er_DESPLZ_2
 259+ 962C CD AA 96         call Ciclo_completo
 260+ 962F 21 70 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9632 CB FE        	set 7,(hl)
 262+ 9634 C9           	ret
 263+ 9635
 264+ 9635              ; ******************************************************************************************************************************************************************************************
 265+ 9635              ;	15/02/23
 266+ 9635              ;
 267+ 9635
 268+ 9635 3A 78 89     Desplaza_derecha ld a,(Vel_right)
 269+ 9638 47           	ld b,a
 270+ 9639 2A 5C 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 963C 23           1 inc hl
 272+ 963D 23           	inc hl
 273+ 963E 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9640 22 5C 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9643 CD A9 8B     	call Extrae_address
 276+ 9646 22 52 89     	ld (Puntero_objeto),hl
 277+ 9649
 278+ 9649              ; Modifica (Puntero_DESPLZ_izq).
 279+ 9649
 280+ 9649              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 9649              ; Cuántos movimientos hemos hecho ??
 282+ 9649              ; DE contiene (Puntero_DESPLZ_der).
 283+ 9649
 284+ 9649 2A 58 89     7 ld hl,(Indice_Sprite_der)
 285+ 964C EB           	ex de,hl
 286+ 964D A7           	and a
 287+ 964E ED 52        	sbc hl,de
 288+ 9650 CB 3D        	srl l
 289+ 9652 3E 08        6 ld a,8
 290+ 9654 95           	sub l
 291+ 9655 30 1E        	jr nc,3F
 292+ 9657
 293+ 9657              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 9657              ; B="0".
 295+ 9657
 296+ 9657 04           4 inc b
 297+ 9658 3C           	inc a
 298+ 9659 20 FC        	jr nz,4B
 299+ 965B 78           	ld a,b
 300+ 965C 08           	ex af,af
 301+ 965D 2A 58 89     	ld hl,(Indice_Sprite_der)
 302+ 9660 23           5 inc hl
 303+ 9661 23           	inc hl
 304+ 9662 10 FC        	djnz 5B
 305+ 9664 22 5C 89     	ld (Puntero_DESPLZ_der),hl
 306+ 9667 CD A9 8B     	call Extrae_address
 307+ 966A 22 52 89     	ld (Puntero_objeto),hl
 308+ 966D
 309+ 966D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 966D              ; _(Posicion_actual).
 311+ 966D
 312+ 966D 21 50 89     	ld hl,Posicion_actual
 313+ 9670 34           	inc (hl)
 314+ 9671 08               ex af,af
 315+ 9672 6F           	ld l,a
 316+ 9673 18 DD        	jr 6B
 317+ 9675
 318+ 9675              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 9675
 320+ 9675 47           3 ld b,a
 321+ 9676 2A 5A 89     	ld hl,(Indice_Sprite_izq)
 322+ 9679 23           2 inc hl
 323+ 967A 23           	inc hl
 324+ 967B 10 FC        	djnz 2B
 325+ 967D 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9680 C9           8 ret
 327+ 9681
 328+ 9681              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9681              ;
 330+ 9681              ;	24/7/22
 331+ 9681              ;
 332+ 9681              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9681              ;
 334+ 9681              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9681              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9681              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9681
 338+ 9681 3A 56 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9684 A7           	and a
 340+ 9685 20 1F        	jr nz,1F
 341+ 9687 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9689 32 56 89         ld (CTRL_DESPLZ),a
 343+ 968C
 344+ 968C 21 4F 89     	ld hl,Columns
 345+ 968F 34           	inc (hl)
 346+ 9690 3A 62 89     	ld a,(Cuad_objeto)
 347+ 9693 E6 01        	and 1
 348+ 9695 28 0F        	jr z,1F
 349+ 9697 2A 50 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 969A 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 969B 22 50 89     	ld (Posicion_actual),hl
 352+ 969E CD 0C 9F     	call Genera_coordenadas
 353+ 96A1 CD 06 98     	call Inc_CTRL_DESPLZ
 354+ 96A4 18 03        	jr 2F
 355+ 96A6 CD 06 98     1 call Inc_CTRL_DESPLZ
 356+ 96A9 C9           2 ret
 357+ 96AA
 358+ 96AA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 96AA              ;
 360+ 96AA              ;	24/7/22
 361+ 96AA              ;
 362+ 96AA              ;	Ciclo_completo.
 363+ 96AA              ;
 364+ 96AA              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 96AA              ;
 366+ 96AA              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 96AA              ; 	Decrementamos (Columns).
 368+ 96AA              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 96AA              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 96AA
 371+ 96AA
 372+ 96AA 3A 56 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96AD FE FF        	cp $ff
 374+ 96AF 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96B1 E6 F0        	and $f0
 376+ 96B3 20 28        	jr nz,3F
 377+ 96B5
 378+ 96B5              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96B5
 380+ 96B5 3A 56 89     	ld a,(CTRL_DESPLZ)
 381+ 96B8 47           	ld b,a
 382+ 96B9 3E F8        	ld a,$f8
 383+ 96BB 80           	add b
 384+ 96BC 32 56 89     	ld (CTRL_DESPLZ),a
 385+ 96BF 18 1C        	jr 3F
 386+ 96C1 21 4F 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96C4 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96C5 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96C6 32 56 89     	ld (CTRL_DESPLZ),a
 390+ 96C9 3A 62 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96CC E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96CE 20 0A        	jr nz,2F
 393+ 96D0 2A 50 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96D3 23           	inc hl
 395+ 96D4 22 50 89     	ld (Posicion_actual),hl
 396+ 96D7 CD 0C 9F     	call Genera_coordenadas
 397+ 96DA
 398+ 96DA              ; Inicia el puntero de Sprite.
 399+ 96DA
 400+ 96DA CD BE 8B     2 call Inicia_puntero_objeto_der
 401+ 96DD C9           3 ret
 402+ 96DE
 403+ 96DE              ; ******************************************************************************************************************************************************************************************
 404+ 96DE              ;
 405+ 96DE              ;	15/02/23
 406+ 96DE              ;
 407+ 96DE              ;	Mov_left.
 408+ 96DE              ;
 409+ 96DE              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96DE              ;
 411+ 96DE              Mov_left
 412+ 96DE
 413+ 96DE 21 70 89     	ld hl,Ctrl_0
 414+ 96E1 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96E3              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96E3              ; 																	; _ en el caso de que no lo haya.
 417+ 96E3 3A 70 89     	ld a,(Ctrl_0)
 418+ 96E6 CB 77        	bit 6,a
 419+ 96E8 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96EA
 421+ 96EA CD 00 98     	call Stop_Amadeus_left
 422+ 96ED C8           	ret z
 423+ 96EE 20 4A        	jr nz,8F
 424+ 96F0
 425+ 96F0 3A 54 89     11 ld a,(Coordenada_X)
 426+ 96F3 A7           	and a
 427+ 96F4 20 44        	jr nz,8F
 428+ 96F6
 429+ 96F6 3A 56 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96F9 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96FA 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96FC
 433+ 96FC              ; ---------- ---------- ----------
 434+ 96FC
 435+ 96FC 3A 77 89     	ld a,(Vel_left)
 436+ 96FF FE 02        	cp 2
 437+ 9701 28 0F        	jr z,1F
 438+ 9703 38 04        	jr c,6F
 439+ 9705 FE 04        	cp 4
 440+ 9707 28 12        	jr z,7F
 441+ 9709
 442+ 9709              ; ---------- ---------- ----------
 443+ 9709
 444+ 9709 3A 56 89     6 ld a,(CTRL_DESPLZ)
 445+ 970C FE F8        	cp $f8
 446+ 970E 20 2A        	jr nz,8F
 447+ 9710 18 10        	jr 4F
 448+ 9712 3A 56 89     1 ld a,(CTRL_DESPLZ)
 449+ 9715 FE F9        	cp $f9
 450+ 9717 20 21        	jr nz,8F
 451+ 9719 18 07        	jr 4F
 452+ 971B 3A 56 89     7 ld a,(CTRL_DESPLZ)
 453+ 971E FE FB        	cp $fb
 454+ 9720 20 18        	jr nz,8F
 455+ 9722
 456+ 9722              ; ---------- ---------- ----------
 457+ 9722
 458+ 9722              4
 459+ 9722 CD 28 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 9725              ;	call Reinicio
 461+ 9725
 462+ 9725              ; ---------- ---------- ----------
 463+ 9725
 464+ 9725 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 9727 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 9728
 467+ 9728              ;	ld hl,(Indice_Sprite_izq)
 468+ 9728              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 9728
 470+ 9728 CD 41 97     	call DESPLZ_IZQ
 471+ 972B C1           	pop bc
 472+ 972C 10 F9        	djnz 5B
 473+ 972E 2A 50 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9731 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9732 22 50 89     	ld (Posicion_actual),hl
 476+ 9735 CD 0C 9F     	call Genera_coordenadas
 477+ 9738 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 973A
 479+ 973A              ; ---------- ---------- ----------
 480+ 973A
 481+ 973A              ; Movemos, no hay recolocación.
 482+ 973A
 483+ 973A 2A 50 89     8 ld hl,(Posicion_actual)
 484+ 973D CD 41 97     	call DESPLZ_IZQ
 485+ 9740 C9           2 ret
 486+ 9741
 487+ 9741              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9741              ;
 489+ 9741              ;	22/9/22
 490+ 9741
 491+ 9741              DESPLZ_IZQ
 492+ 9741
 493+ 9741 CD 50 97     	call Desplaza_izquierda
 494+ 9744 CD 9C 97         call modifica_parametros_1er_DESPLZ
 495+ 9747 CD C4 97     	call Ciclo_completo_2
 496+ 974A 21 70 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 974D CB BE        	res 7,(hl)
 498+ 974F C9           	ret
 499+ 9750
 500+ 9750              Desplaza_izquierda
 501+ 9750
 502+ 9750 3A 77 89     	ld a,(Vel_left)
 503+ 9753 47           	ld b,a
 504+ 9754 2A 5E 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 9757 23           1 inc hl
 506+ 9758 23           	inc hl
 507+ 9759 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 975B 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 975E CD A9 8B     	call Extrae_address
 510+ 9761 22 52 89     	ld (Puntero_objeto),hl
 511+ 9764
 512+ 9764              ; Modifica (Puntero_DESPLZ_der).
 513+ 9764
 514+ 9764              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9764              ; Cuántos movimientos hemos hecho ??
 516+ 9764              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9764
 518+ 9764 2A 5A 89     7 ld hl,(Indice_Sprite_izq)
 519+ 9767 EB           	ex de,hl
 520+ 9768 A7           	and a
 521+ 9769 ED 52        	sbc hl,de
 522+ 976B CB 3D        	srl l
 523+ 976D 3E 08        6 ld a,8
 524+ 976F 95           	sub l
 525+ 9770 30 1E        	jr nc,3F
 526+ 9772
 527+ 9772              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9772              ; B="0".
 529+ 9772
 530+ 9772 04           4 inc b
 531+ 9773 3C           	inc a
 532+ 9774 20 FC        	jr nz,4B
 533+ 9776 78           	ld a,b
 534+ 9777 08           	ex af,af
 535+ 9778 2A 5A 89     	ld hl,(Indice_Sprite_izq)
 536+ 977B 23           5 inc hl
 537+ 977C 23           	inc hl
 538+ 977D 10 FC        	djnz 5B
 539+ 977F 22 5E 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9782 CD A9 8B     	call Extrae_address
 541+ 9785 22 52 89     	ld (Puntero_objeto),hl
 542+ 9788
 543+ 9788              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 9788              ; _(Posicion_actual).
 545+ 9788
 546+ 9788 21 50 89     	ld hl,Posicion_actual
 547+ 978B 35           	dec (hl)
 548+ 978C 08           	ex af,af
 549+ 978D 6F           	ld l,a
 550+ 978E 18 DD        	jr 6B
 551+ 9790
 552+ 9790              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9790
 554+ 9790 47           3 ld b,a
 555+ 9791 2A 58 89     	ld hl,(Indice_Sprite_der)
 556+ 9794 23           2 inc hl
 557+ 9795 23           	inc hl
 558+ 9796 10 FC        	djnz 2B
 559+ 9798 22 5C 89     	ld (Puntero_DESPLZ_der),hl
 560+ 979B C9           8 ret
 561+ 979C
 562+ 979C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 979C              ;
 564+ 979C              ;	modifica_parametros_1er_DESPLZ
 565+ 979C              ;
 566+ 979C              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 979C              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 979C              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 979C
 570+ 979C 3A 56 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 979F A7           	and a
 572+ 97A0 20 1E        	jr nz,1F
 573+ 97A2 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 97A3 32 56 89         ld (CTRL_DESPLZ),a
 575+ 97A6 21 4F 89     	ld hl,Columns
 576+ 97A9 34           	inc (hl)
 577+ 97AA 3A 62 89     	ld a,(Cuad_objeto)
 578+ 97AD E6 01        	and 1
 579+ 97AF 20 0F        	jr nz,1F
 580+ 97B1 2A 50 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97B4 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97B5 22 50 89     	ld (Posicion_actual),hl
 583+ 97B8 CD 0C 9F     	call Genera_coordenadas
 584+ 97BB CD 17 98     	call Dec_CTRL_DESPLZ
 585+ 97BE 18 03        	jr 2F
 586+ 97C0 CD 17 98     1 call Dec_CTRL_DESPLZ
 587+ 97C3 C9           2 ret
 588+ 97C4
 589+ 97C4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97C4
 591+ 97C4 3A 56 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97C7 FE F7        	cp $f7
 593+ 97C9 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97CB 30 2C        	jr nc,3F
 595+ 97CD
 596+ 97CD              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97CD
 598+ 97CD 06 00        	ld b,0
 599+ 97CF 04           4 inc b
 600+ 97D0 3C           	inc a
 601+ 97D1 FE F7        	cp $f7
 602+ 97D3 20 FA        	jr nz,4B
 603+ 97D5 3E FF        	ld a,$ff
 604+ 97D7 90           	sub b
 605+ 97D8 32 56 89     	ld (CTRL_DESPLZ),a
 606+ 97DB 18 1C        	jr 3F
 607+ 97DD
 608+ 97DD              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97DD
 610+ 97DD 21 4F 89     1 ld hl,Columns
 611+ 97E0 35           	dec (hl)
 612+ 97E1 AF           	xor a
 613+ 97E2 32 56 89     	ld (CTRL_DESPLZ),a
 614+ 97E5 3A 62 89     	ld a,(Cuad_objeto)
 615+ 97E8 E6 01        	and 1
 616+ 97EA 28 0A        	jr z,2F
 617+ 97EC 2A 50 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97EF 2B           	dec hl
 619+ 97F0 22 50 89     	ld (Posicion_actual),hl
 620+ 97F3 CD 0C 9F     	call Genera_coordenadas
 621+ 97F6
 622+ 97F6              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97F6
 624+ 97F6 CD D1 8B     2 call Inicia_puntero_objeto_izq
 625+ 97F9 C9           3 ret
 626+ 97FA
 627+ 97FA              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97FA              ;
 629+ 97FA              ;	19/10/22
 630+ 97FA              ;
 631+ 97FA              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97FA              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97FA
 634+ 97FA 3A 54 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97FD FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97FF C9           	ret
 637+ 9800
 638+ 9800              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9800              ;
 640+ 9800              ;	19/10/22
 641+ 9800              ;
 642+ 9800              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9800              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9800
 645+ 9800 3A 54 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9803 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9805 C9           	ret
 648+ 9806
 649+ 9806              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9806              ;
 651+ 9806              ;	24/7/22
 652+ 9806              ;
 653+ 9806              ;	Inc_CTRL_DESPLZ
 654+ 9806              ;
 655+ 9806              ;
 656+ 9806              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9806
 658+ 9806 21 56 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9809 3A 78 89     	ld a,(Vel_right)
 660+ 980C A7           	and a
 661+ 980D 28 06        	jr z,1F
 662+ 980F 47           	ld b,a
 663+ 9810 34           3 inc (hl)
 664+ 9811 10 FD        	djnz 3B
 665+ 9813 18 01        	jr 2F
 666+ 9815 34           1 inc (hl)
 667+ 9816 C9           2 ret
 668+ 9817
 669+ 9817              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9817              ;
 671+ 9817              ;	5/2/23
 672+ 9817              ;
 673+ 9817              ;	Dec_CTRL_DESPLZ
 674+ 9817              ;
 675+ 9817              ;
 676+ 9817              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9817
 678+ 9817 21 56 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 981A 3A 77 89     	ld a,(Vel_left)
 680+ 981D A7           	and a
 681+ 981E 28 06        	jr z,1F
 682+ 9820 47           	ld b,a
 683+ 9821 35           3 dec (hl)
 684+ 9822 10 FD        	djnz 3B
 685+ 9824 18 01        	jr 2F
 686+ 9826 35           1 dec (hl)
 687+ 9827 C9           2 ret
 688+ 9828
 689+ 9828              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9828
 691+ 9828 2A 50 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 982B 01 1F 00     	ld bc,31
 693+ 982E A7           	and a
 694+ 982F ED 4A        	adc hl,bc
 695+ 9831 22 50 89     	ld (Posicion_actual),hl
 696+ 9834 21 70 89     	ld hl,Ctrl_0														; $xxx1
 697+ 9837 CB C6        	set 0,(hl)
 698+ 9839 C9           	ret
 699+ 983A
 700+ 983A              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 983A
 702+ 983A 2A 50 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 983D 01 1F 00     	ld bc,31
 704+ 9840 A7           	and a
 705+ 9841 ED 42        	sbc hl,bc
 706+ 9843 22 50 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9846 21 70 89     	ld hl,Ctrl_0
 708+ 9849 CB CE        	set 1,(hl)
 709+ 984B C9           	ret
 710+ 984C
 711+ 984C              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 984C
 713+ 984C 24           Reaparece_abajo inc h
 714+ 984D 01 E0 17     	ld bc,$17e0
 715+ 9850 A7           	and a
 716+ 9851 ED 4A        	adc hl,bc
 717+ 9853 22 50 89     	ld (Posicion_actual),hl
 718+ 9856 21 70 89     	ld hl,Ctrl_0
 719+ 9859 CB D6        	set 2,(hl)
 720+ 985B C9           	ret
 721+ 985C
 722+ 985C              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 985C
 724+ 985C 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 985F A7           	and a
 726+ 9860 ED 42        	sbc hl,bc
 727+ 9862 22 50 89     	ld (Posicion_actual),hl
 728+ 9865 21 70 89     	ld hl,Ctrl_0
 729+ 9868 CB DE        	set 3,(hl)
 730+ 986A C9           	ret
 731+ 986B
 732+ 986B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 986B              ;
 734+ 986B              ;	15/07/23
 735+ 986B
 736+ 986B              Reinicio
 737+ 986B
 738+ 986B              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 986B
 740+ 986B AF           	xor a
 741+ 986C 21 89 89     	ld hl,Puntero_indice_mov_bucle
 742+ 986F CD 8D 98     	call Limpia_contenido_hl
 743+ 9872
 744+ 9872 21 50 89     	ld hl,Posicion_actual
 745+ 9875 CD 8D 98     	call Limpia_contenido_hl
 746+ 9878
 747+ 9878 CD 33 8D     	call Inicializa_Puntero_indice_mov
 748+ 987B CD 59 99     	call Inicia_Puntero_mov
 749+ 987E
 750+ 987E 21 8B 89     	ld hl,Incrementa_puntero
 751+ 9881 06 05        	ld b,5
 752+ 9883 77           1 ld (hl),a
 753+ 9884 23           	inc hl
 754+ 9885 10 FC        	djnz 1B
 755+ 9887
 756+ 9887 21 75 89     	ld hl,Ctrl_2
 757+ 988A CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 988C
 759+ 988C C9           	ret
 760+ 988D
 761+ 988D 77           Limpia_contenido_hl	ld (hl),a
 762+ 988E 23           	inc hl
 763+ 988F 77           	ld (hl),a
 764+ 9890 C9           	ret
 765+ 9891
 766+ 9891
# file closed: Direcciones.asm
1736  9891              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 9891              ; ----- ----- ----- ----- -----
   2+ 9891              ;
   3+ 9891              ;   28/12/23
   4+ 9891
   5+ 9891              Movimiento
   6+ 9891
   7+ 9891              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 9891
   9+ 9891 3A 75 89         ld a,(Ctrl_2)
  10+ 9894 CB 57            bit 2,a
  11+ 9896 20 1B            jr nz, Desplazamiento_iniciado
  12+ 9898
  13+ 9898 2A 87 89         ld hl,(Puntero_mov)
  14+ 989B 7E               ld a,(hl)
  15+ 989C
  16+ 989C              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 989C
  18+ 989C              Inicia_desplazamiento.
  19+ 989C
  20+ 989C              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 989C
  22+ 989C CD 8F 99         call Ajusta_velocidad_desplazamiento
  23+ 989F
  24+ 989F              ; Iniciamos (Repetimos_mov).
  25+ 989F
  26+ 989F 7E               ld a,(hl)
  27+ 98A0 E6 0F            and $0f
  28+ 98A2 32 8D 89         ld (Repetimos_desplazamiento),a
  29+ 98A5 32 8E 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98A8
  31+ 98A8              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98A8
  33+ 98A8 23               inc hl
  34+ 98A9 7E               ld a,(hl)
  35+ 98AA 32 90 89         ld (Cola_de_desplazamiento),a
  36+ 98AD 2B               dec hl
  37+ 98AE
  38+ 98AE 21 75 89         ld hl,Ctrl_2
  39+ 98B1 CB D6            set 2,(hl)
  40+ 98B3
  41+ 98B3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98B3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98B3
  44+ 98B3              Desplazamiento_iniciado
  45+ 98B3
  46+ 98B3 CD 63 99         call Aplica_desplazamiento
  47+ 98B6
  48+ 98B6              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98B6
  50+ 98B6 3A B0 89         ld a,(Ctrl_3)
  51+ 98B9 CB 4F            bit 1,a
  52+ 98BB C0               ret nz
  53+ 98BC
  54+ 98BC 21 8D 89     3 ld hl,Repetimos_desplazamiento
  55+ 98BF 35               dec (hl)
  56+ 98C0 C0               ret nz
  57+ 98C1
  58+ 98C1              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98C1              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98C1              ; Analiza (Cola_de_desplazamiento).
  61+ 98C1
  62+ 98C1 3A 90 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98C4 A7               and a
  64+ 98C5 CC B8 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98C8 28 30            jr z,Reinicia_el_movimiento
  66+ 98CA
  67+ 98CA FE FF            cp $ff
  68+ 98CC 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98CE
  70+ 98CE FE FE            cp $fe
  71+ 98D0 CC 3D 99         call z,Fijamos_bucle
  72+ 98D3 28 25            jr z,Reinicia_el_movimiento
  73+ 98D5
  74+ 98D5 FE FD            cp $fd
  75+ 98D7 20 11            jr nz,1F
  76+ 98D9
  77+ 98D9              ; ---
  78+ 98D9              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 98D9
  80+ 98D9 3A 75 89         ld a,(Ctrl_2)
  81+ 98DC CB 5F            bit 3,a
  82+ 98DE 20 1A            jr nz,Reinicia_el_movimiento
  83+ 98E0
  84+ 98E0              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 98E0
  86+ 98E0 21 75 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 98E3 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 98E5
  89+ 98E5 CD 4E 99         call Inicia_Repetimos_movimiento
  90+ 98E8 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 98EA              ; ---
  92+ 98EA
  93+ 98EA FE 01        1 cp 1
  94+ 98EC CA 27 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 98EF
  96+ 98EF 3D               dec a
  97+ 98F0 32 90 89         ld (Cola_de_desplazamiento),a
  98+ 98F3
  99+ 98F3 3A 8E 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 98F6 32 8D 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 98F9              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 98F9 C9               ret
 103+ 98FA
 104+ 98FA              Reinicia_el_movimiento
 105+ 98FA
 106+ 98FA 3A 75 89         ld a,(Ctrl_2)
 107+ 98FD CB 5F            bit 3,a
 108+ 98FF 28 1B            jr z,2F
 109+ 9901
 110+ 9901              ; (Cola_de_desplazamiento)="254".
 111+ 9901
 112+ 9901 21 8F 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 9904 35               dec (hl)
 114+ 9905 20 15            jr nz,2F
 115+ 9907
 116+ 9907              ; Fin de las repeticiones del último movimiento.
 117+ 9907
 118+ 9907 21 75 89         ld hl,Ctrl_2
 119+ 990A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 990C
 121+ 990C 2A 87 89         ld hl,(Puntero_mov)
 122+ 990F 23               inc hl
 123+ 9910 23               inc hl
 124+ 9911 23               inc hl
 125+ 9912 22 87 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 9915              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 9915 7E               ld a,(hl)
 128+ 9916 32 90 89         ld (Cola_de_desplazamiento),a
 129+ 9919
 130+ 9919 C3 C1 98         jp Cola
 131+ 991C
 132+ 991C CD 59 99     2 call Inicia_Puntero_mov
 133+ 991F
 134+ 991F 21 75 89         ld hl,Ctrl_2
 135+ 9922 CB 96            res 2,(hl)
 136+ 9924
 137+ 9924 C3 91 98         jp Movimiento
 138+ 9927
 139+ 9927              Siguiente_desplazamiento
 140+ 9927
 141+ 9927              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 9927              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 9927
 144+ 9927 21 75 89         ld hl,Ctrl_2
 145+ 992A CB 96            res 2,(hl)
 146+ 992C
 147+ 992C 2A 87 89         ld hl,(Puntero_mov)
 148+ 992F 23               inc hl
 149+ 9930 23               inc hl
 150+ 9931 22 87 89         ld (Puntero_mov),hl
 151+ 9934
 152+ 9934 7E               ld a,(hl)
 153+ 9935 A7               and a
 154+ 9936 CC B8 99         call z,Incrementa_Puntero_indice_mov
 155+ 9939 CA FA 98         jp z,Reinicia_el_movimiento
 156+ 993C
 157+ 993C C9               ret
 158+ 993D
 159+ 993D              ; Subrutinas -----------------------------------------
 160+ 993D              ; ---------- --------- --------- ---------- ----------
 161+ 993D              ;
 162+ 993D              ;   24/07/23
 163+ 993D              ;
 164+ 993D              ;   Fijamos_bucle
 165+ 993D              ;
 166+ 993D              ;
 167+ 993D
 168+ 993D              Fijamos_bucle
 169+ 993D
 170+ 993D 3A 8B 89         ld a,(Incrementa_puntero)
 171+ 9940 3C               inc a
 172+ 9941 32 8C 89         ld (Incrementa_puntero_backup),a
 173+ 9944
 174+ 9944 CD B8 99         call Incrementa_Puntero_indice_mov
 175+ 9947 2A 85 89         ld hl,(Puntero_indice_mov)
 176+ 994A 22 89 89         ld (Puntero_indice_mov_bucle),hl
 177+ 994D C9               ret
 178+ 994E
 179+ 994E              ; ---------- --------- --------- ---------- ----------
 180+ 994E              ;
 181+ 994E              ;   07/7/23
 182+ 994E              ;
 183+ 994E              ;   Inicia_Repetimos_movimiento
 184+ 994E              ;
 185+ 994E              ;
 186+ 994E
 187+ 994E              Inicia_Repetimos_movimiento
 188+ 994E
 189+ 994E              ; Iniciamos (Repetimos_movimiento).
 190+ 994E
 191+ 994E DD 2A 87 89      ld ix,(Puntero_mov)
 192+ 9952 DD 7E 02         ld a,(ix+2)
 193+ 9955 32 8F 89         ld (Repetimos_movimiento),a
 194+ 9958
 195+ 9958 C9               ret
 196+ 9959
 197+ 9959              ; ---------- --------- --------- ---------- ----------
 198+ 9959              ;
 199+ 9959              ;   26/6/23
 200+ 9959              ;
 201+ 9959              ;   Inicia_Puntero_mov
 202+ 9959              ;
 203+ 9959              ;
 204+ 9959
 205+ 9959 2A 85 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 995C CD A9 8B         call Extrae_address
 207+ 995F 22 87 89         ld (Puntero_mov),hl
 208+ 9962 C9               ret
 209+ 9963
 210+ 9963              ; ---------- --------- --------- ---------- ----------
 211+ 9963              ;
 212+ 9963              ;   27/06/23
 213+ 9963              ;
 214+ 9963              ;   Aplica_movimiento.
 215+ 9963
 216+ 9963              Aplica_desplazamiento
 217+ 9963
 218+ 9963              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 9963
 220+ 9963 2A 87 89         ld hl, (Puntero_mov)
 221+ 9966
 222+ 9966 7E               ld a,(hl)
 223+ 9967 E6 F0            and $f0
 224+ 9969 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 996A
 226+ 996A CB 7E            bit 7,(hl)
 227+ 996C 28 03            jr z,1F
 228+ 996E CD 78 95         call Mov_up
 229+ 9971 2A 87 89     1 ld hl, (Puntero_mov)
 230+ 9974 CB 76            bit 6,(hl)
 231+ 9976 28 03            jr z,2F
 232+ 9978 CD 3F 95         call Mov_down
 233+ 997B
 234+ 997B              ; Se ha aplicado reinicio ???
 235+ 997B              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 997B
 237+ 997B              ;    ld a,(Ctrl_3)
 238+ 997B              ;    bit 1,a
 239+ 997B              ;    ret nz
 240+ 997B
 241+ 997B 2A 87 89     2 ld hl, (Puntero_mov)
 242+ 997E CB 6E            bit 5,(hl)
 243+ 9980 28 03            jr z,3F
 244+ 9982 CD DE 96         call Mov_left
 245+ 9985 2A 87 89     3 ld hl, (Puntero_mov)
 246+ 9988 CB 66            bit 4,(hl)
 247+ 998A C8               ret z
 248+ 998B CD BB 95         call Mov_right
 249+ 998E C9               ret
 250+ 998F
 251+ 998F              ; ---------- --------- --------- ---------- ----------
 252+ 998F              ;
 253+ 998F              ;   26/06/23
 254+ 998F              ;
 255+ 998F              ;   Ajusta_velocidad_desplazamiento.
 256+ 998F
 257+ 998F              Ajusta_velocidad_desplazamiento
 258+ 998F
 259+ 998F              ; 1er byte de la cadena de movimiento.
 260+ 998F              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 998F
 262+ 998F CD AD 99         call Extrae_nibble_alto
 263+ 9992
 264+ 9992 32 79 89         ld (Vel_up),a
 265+ 9995 79               ld a,c
 266+ 9996 E6 0F            and $0f
 267+ 9998 32 7A 89         ld (Vel_down),a
 268+ 999B
 269+ 999B              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 999B              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 999B
 272+ 999B 23               inc hl
 273+ 999C CD AD 99         call Extrae_nibble_alto
 274+ 999F
 275+ 999F 32 77 89         ld (Vel_left),a
 276+ 99A2 79               ld a,c
 277+ 99A3 E6 0F            and $0f
 278+ 99A5 32 78 89         ld (Vel_right),a
 279+ 99A8
 280+ 99A8              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99A8
 282+ 99A8 23               inc hl
 283+ 99A9 22 87 89         ld (Puntero_mov),hl
 284+ 99AC C9               ret
 285+ 99AD
 286+ 99AD 06 04        Extrae_nibble_alto ld b,4
 287+ 99AF 7E               ld a,(hl)
 288+ 99B0 4F               ld c,a
 289+ 99B1 E6 F0            and $f0
 290+ 99B3 CB 3F        1 srl a
 291+ 99B5 10 FC            djnz 1B
 292+ 99B7 C9               ret
 293+ 99B8
 294+ 99B8              ; ---------- --------- --------- ---------- ----------
 295+ 99B8              ;
 296+ 99B8              ;   5/7/23
 297+ 99B8              ;
 298+ 99B8              ;   Incrementa_Puntero_indice_mov
 299+ 99B8
 300+ 99B8              Incrementa_Puntero_indice_mov
 301+ 99B8
 302+ 99B8 21 8B 89         ld hl,Incrementa_puntero
 303+ 99BB 34               inc (hl)
 304+ 99BC
 305+ 99BC 2A 85 89         ld hl,(Puntero_indice_mov)
 306+ 99BF 01 02 00         ld bc,2
 307+ 99C2 A7               and a
 308+ 99C3 09               add hl,bc
 309+ 99C4 22 85 89         ld (Puntero_indice_mov),hl
 310+ 99C7
 311+ 99C7 7E               ld a,(hl)
 312+ 99C8 A7               and a
 313+ 99C9
 314+ 99C9              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99C9
 316+ 99C9              ;    jr z,$
 317+ 99C9
 318+ 99C9              ;! Reinicia el Patrón de movimiento.
 319+ 99C9
 320+ 99C9 CC CE 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99CC
 322+ 99CC AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99CD
 324+ 99CD C9               ret
 325+ 99CE
 326+ 99CE              ; ---------- --------- --------- ---------- ----------
 327+ 99CE              ;
 328+ 99CE              ;   15/01/24
 329+ 99CE              ;
 330+ 99CE              ;   Inicializa_Puntero_indice_mov
 331+ 99CE
 332+ 99CE              Inicializa_Puntero_indice_mov_2
 333+ 99CE
 334+ 99CE              ; Existe etiqueta de bucle principal???
 335+ 99CE
 336+ 99CE 2A 89 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99D1 24               inc h
 338+ 99D2 25               dec h
 339+ 99D3 28 05            jr z,2F
 340+ 99D5
 341+ 99D5 22 85 89         ld (Puntero_indice_mov),hl
 342+ 99D8 18 14            jr 3F
 343+ 99DA
 344+ 99DA              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 99DA
 346+ 99DA 3A 8B 89     2 ld a,(Incrementa_puntero)
 347+ 99DD 47               ld b,a
 348+ 99DE
 349+ 99DE 2A 85 89         ld hl,(Puntero_indice_mov)
 350+ 99E1 2B           1 dec hl
 351+ 99E2 2B               dec hl
 352+ 99E3 10 FC            djnz 1B
 353+ 99E5 22 85 89         ld (Puntero_indice_mov),hl
 354+ 99E8
 355+ 99E8 AF               xor a
 356+ 99E9 32 8B 89         ld (Incrementa_puntero),a
 357+ 99EC 18 06            jr 4F
 358+ 99EE
 359+ 99EE 3A 8C 89     3 ld a,(Incrementa_puntero_backup)
 360+ 99F1 32 8B 89         ld (Incrementa_puntero),a
 361+ 99F4 C9           4 ret
 362+ 99F5
 363+ 99F5              ; ----------------------------------------------------------------------
 364+ 99F5              ;
 365+ 99F5              ;   30/01/24
 366+ 99F5              ;
 367+ 99F5              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 99F5
 369+ 99F5 3A 4D 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 99F8 CD 87 8E         call Calcula_salto_en_BC
 371+ 99FB 21 7B 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 99FE A7               and a
 373+ 99FF ED 4A            adc hl,bc
 374+ 9A01 C9               ret
 375+ 9A02
 376+ 9A02              ; ----------------------------------------------------------------------
 377+ 9A02              ;
 378+ 9A02              ;   30/01/24
 379+ 9A02              ;
 380+ 9A02              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A02              ;
 382+ 9A02              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A02
 384+ 9A02 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A03 23               inc hl
 386+ 9A04 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A05 69               ld l,c
 388+ 9A06 60               ld h,b
 389+ 9A07 22 6E 89         ld (Contador_de_mov_masticados),hl
 390+ 9A0A C9               ret
 391+ 9A0B
# file closed: Movimiento.asm
1737  9A0B              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 9A0B              ; ******************************************************************************************************************************************************************************************
   2+ 9A0B              ;
   3+ 9A0B              ;   21/07/23
   4+ 9A0B              ;
   5+ 9A0B              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9A0B              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9A0B              ;
   8+ 9A0B              ;
   9+ 9A0B              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9A0B              ;
  11+ 9A0B              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9A0B              ;               _ hacen las entidades hacia abajo.
  13+ 9A0B              ;
  14+ 9A0B              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9A0B              ;
  16+ 9A0B              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9A0B              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9A0B              ;
  19+ 9A0B              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9A0B              ;           _ la bala.
  21+ 9A0B              ;
  22+ 9A0B              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9A0B              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9A0B              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9A0B              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9A0B              ;           _ en el momento de generarse la bala)).
  27+ 9A0B
  28+ 9A0B              Genera_disparo
  29+ 9A0B
  30+ 9A0B              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9A0B              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9A0B              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9A0B              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9A0B              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9A0B              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9A0B              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9A0B
  38+ 9A0B              ; Exclusiones:
  39+ 9A0B
  40+ 9A0B 3A 7A 89         ld a,(Vel_down)
  41+ 9A0E 47               ld b,a
  42+ 9A0F 3A C2 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 9A12 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 9A13 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 9A14 3A 71 89         ld a,(Columnas)
  46+ 9A17 47               ld b,a
  47+ 9A18 3A 4F 89         ld a,(Columns)
  48+ 9A1B B8               cp b
  49+ 9A1C C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 9A1D
  51+ 9A1D              ; ----- ----- -----
  52+ 9A1D
  53+ 9A1D 3A 70 89         ld a,(Ctrl_0)
  54+ 9A20 CB 77            bit 6,a
  55+ 9A22 20 06            jr nz,14F
  56+ 9A24
  57+ 9A24 3A 55 89         ld a,(Coordenada_y)
  58+ 9A27 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 9A29 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 9A2A
  61+ 9A2A 21 31 81     14 ld hl,Indice_disparo
  62+ 9A2D 3A 56 89         ld a,(CTRL_DESPLZ)
  63+ 9A30 4F               ld c,a
  64+ 9A31 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 9A33              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 9A33              ;                                            ""        ""       "f9", B="1"
  67+ 9A33              ;                                            ""        ""       "fb", B="2"
  68+ 9A33              ;                                            ""        ""       "fb", B="3"
  69+ 9A33 A7               and a
  70+ 9A34 28 10            jr z,1F
  71+ 9A36 E6 01            and 1
  72+ 9A38 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 9A39
  74+ 9A39 79               ld a,c
  75+ 9A3A 16 F9            ld d,$f9
  76+ 9A3C 23           2 inc hl
  77+ 9A3D 23               inc hl
  78+ 9A3E 04               inc b
  79+ 9A3F BA               cp d
  80+ 9A40 28 04            jr z,1F
  81+ 9A42 14               inc d
  82+ 9A43 14               inc d
  83+ 9A44 18 F6            jr 2B
  84+ 9A46
  85+ 9A46 CD A9 8B     1 call Extrae_address
  86+ 9A49 E5               push hl
  87+ 9A4A FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 9A4C DD 21 EA 94  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 9A50
  90+ 9A50              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 9A50              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 9A50
  93+ 9A50 3A 70 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 9A53 CB 77            bit 6,a
  95+ 9A55 20 04            jr nz,19F
  96+ 9A57
  97+ 9A57 AF               xor a
  98+ 9A58 32 CB 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 9A5B
 100+ 9A5B 3A 62 89     19 ld a,(Cuad_objeto)
 101+ 9A5E FE 02            cp 2
 102+ 9A60 38 66            jr c,3F
 103+ 9A62 28 64            jr z,3F
 104+ 9A64
 105+ 9A64              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 9A64
 107+ 9A64 E6 01            and 1
 108+ 9A66 28 30            jr z,4F
 109+ 9A68
 110+ 9A68              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 9A68              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 9A68              ;
 113+ 9A68              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 9A68              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 9A68              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 9A68
 117+ 9A68 2A 50 89     	ld hl,(Posicion_actual)
 118+ 9A6B
 119+ 9A6B              ;   Amadeus o entidad ???.
 120+ 9A6B
 121+ 9A6B 3A 70 89         ld a,(Ctrl_0)
 122+ 9A6E CB 77            bit 6,a
 123+ 9A70 28 0A            jr z,8F
 124+ 9A72
 125+ 9A72              ; 	Dispara Amadeus.
 126+ 9A72
 127+ 9A72 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 9A74 CD 13 92         call PreviousScan
 129+ 9A77 CD 13 92         call PreviousScan
 130+ 9A7A
 131+ 9A7A              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 9A7A              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 9A7A              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 9A7A              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 9A7A
 136+ 9A7A 18 11            jr 10F
 137+ 9A7C
 138+ 9A7C              ; 	Dispara Entidad.
 139+ 9A7C
 140+ 9A7C 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 9A7F              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 9A7F
 143+ 9A7F              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 9A7F              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 9A7F
 146+ 9A7F C5               push bc
 147+ 9A80 06 10            ld b,16
 148+ 9A82 CD 04 92     9 call NextScan
 149+ 9A85 10 FB            djnz 9B
 150+ 9A87 C1               pop bc
 151+ 9A88 CD F2 9A         call Ajusta_disparo_parte_izquierda
 152+ 9A8B 18 06            jr 17F
 153+ 9A8D
 154+ 9A8D              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 9A8D              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 9A8D              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 9A8D              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 9A8D
 159+ 9A8D CD F2 9A     10 call Ajusta_disparo_parte_izquierda
 160+ 9A90 CD 67 9B         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 9A93              ;                                                      ; _al generar el disparo.
 162+ 9A93
 163+ 9A93              ; 	LLegados a este punto tendremos:
 164+ 9A93              ;
 165+ 9A93              ;       Puntero_objeto_disparo en IY.
 166+ 9A93              ;       Rutinas_de_impresion en IX.
 167+ 9A93              ;       Puntero_de_impresion en HL.
 168+ 9A93              ;       Impacto/Dirección en BC.
 169+ 9A93
 170+ 9A93 CD FA 9A     17 call Almacena_disparo
 171+ 9A96 18 52            jr 6F                                             ; RET.
 172+ 9A98
 173+ 9A98              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 9A98              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 9A98              ;
 176+ 9A98              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 9A98              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 9A98              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 9A98
 180+ 9A98 2A 50 89     4 ld hl,(Posicion_actual)
 181+ 9A9B
 182+ 9A9B              ;   Amadeus o entidad ???.
 183+ 9A9B
 184+ 9A9B 3A 70 89         ld a,(Ctrl_0)
 185+ 9A9E CB 77            bit 6,a
 186+ 9AA0 28 0A            jr z,11F
 187+ 9AA2
 188+ 9AA2              ; 	Dispara Amadeus.
 189+ 9AA2
 190+ 9AA2 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 9AA4 CD 13 92         call PreviousScan
 192+ 9AA7 CD 13 92         call PreviousScan
 193+ 9AAA
 194+ 9AAA              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 9AAA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 9AAA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 9AAA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 9AAA
 199+ 9AAA 18 11            jr 13F
 200+ 9AAC
 201+ 9AAC              ; 	Dispara Entidad.
 202+ 9AAC
 203+ 9AAC 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 9AAF              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 9AAF
 206+ 9AAF              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 9AAF              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 9AAF
 209+ 9AAF C5               push bc
 210+ 9AB0 06 10            ld b,16
 211+ 9AB2 CD 04 92     12 call NextScan
 212+ 9AB5 10 FB            djnz 12B
 213+ 9AB7 C1               pop bc
 214+ 9AB8
 215+ 9AB8 CD EB 9A         call Ajusta_disparo_parte_derecha
 216+ 9ABB 18 06            jr 18F
 217+ 9ABD
 218+ 9ABD              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 9ABD              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 9ABD              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 9ABD              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 9ABD
 223+ 9ABD CD EB 9A     13 call Ajusta_disparo_parte_derecha
 224+ 9AC0 CD 67 9B         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 9AC3              ;                                                       ; _al generar el disparo.
 226+ 9AC3
 227+ 9AC3              ; LLegados a este punto tendremos:
 228+ 9AC3              ;
 229+ 9AC3              ;       Puntero_objeto_disparo en IY.
 230+ 9AC3              ;       Rutinas_de_impresion en IX.
 231+ 9AC3              ;       Puntero_de_impresion en HL.
 232+ 9AC3              ;       Impacto/Dirección en BC.
 233+ 9AC3
 234+ 9AC3 CD FA 9A     18 call Almacena_disparo
 235+ 9AC6 18 22            jr 6F                                               ; RET.
 236+ 9AC8
 237+ 9AC8              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 9AC8
 239+ 9AC8 28 11        3 jr z,5F
 240+ 9ACA
 241+ 9ACA              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 9ACA              ;
 243+ 9ACA              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 9ACA              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 9ACA              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 9ACA              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 9ACA
 248+ 9ACA              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 9ACA              ;	   ""        ""       "f9", B="1"
 250+ 9ACA              ;	   ""        ""       "fb", B="2"
 251+ 9ACA              ; 	   ""        ""       "fb", B="3"
 252+ 9ACA
 253+ 9ACA 2A 50 89     	ld hl,(Posicion_actual)
 254+ 9ACD CD 04 92     	call NextScan
 255+ 9AD0
 256+ 9AD0              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 9AD0              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 9AD0              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 9AD0              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 9AD0
 261+ 9AD0 CD F2 9A         call Ajusta_disparo_parte_izquierda
 262+ 9AD3
 263+ 9AD3              ; 	No se produce impacto. B="$80"
 264+ 9AD3              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 9AD3
 266+ 9AD3 01 80 80         ld bc,$8080
 267+ 9AD6
 268+ 9AD6              ; 	LLegados a este punto tendremos:
 269+ 9AD6              ;
 270+ 9AD6              ;       Puntero_objeto_disparo en IY.
 271+ 9AD6              ;       Rutinas_de_impresion en IX.
 272+ 9AD6              ;       Puntero_de_impresion en HL.
 273+ 9AD6              ;       Impacto/Dirección en BC.
 274+ 9AD6
 275+ 9AD6 CD FA 9A         call Almacena_disparo
 276+ 9AD9 18 0F            jr 6F                                           ; RET.
 277+ 9ADB
 278+ 9ADB              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 9ADB              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 9ADB              ;
 281+ 9ADB              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 9ADB              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 9ADB              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 9ADB              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 9ADB
 286+ 9ADB 2A 50 89     5 ld hl,(Posicion_actual)
 287+ 9ADE CD 04 92     	call NextScan
 288+ 9AE1
 289+ 9AE1              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 9AE1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 9AE1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 9AE1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 9AE1
 294+ 9AE1 CD EB 9A         call Ajusta_disparo_parte_derecha
 295+ 9AE4
 296+ 9AE4              ; 	No se produce impacto. B="$80"
 297+ 9AE4              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 9AE4
 299+ 9AE4 01 80 80     15 ld bc,$8080
 300+ 9AE7
 301+ 9AE7              ; 	LLegados a este punto tendremos:
 302+ 9AE7              ;
 303+ 9AE7              ;       Puntero_objeto_disparo en IY.
 304+ 9AE7              ;       Rutinas_de_impresion en IX.
 305+ 9AE7              ;       Puntero_de_impresion en HL.
 306+ 9AE7              ;       Impacto/Dirección en BC.
 307+ 9AE7
 308+ 9AE7 CD FA 9A         call Almacena_disparo
 309+ 9AEA
 310+ 9AEA C9           6 ret
 311+ 9AEB
 312+ 9AEB              ; ----------------------------------------------------------------
 313+ 9AEB              ;
 314+ 9AEB              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 9AEB              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 9AEB              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 9AEB
 318+ 9AEB 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 9AEC FE 02            cp 2
 320+ 9AEE 38 01            jr c,1F
 321+ 9AF0 23               inc hl
 322+ 9AF1 C9           1 ret
 323+ 9AF2
 324+ 9AF2 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 9AF3 FE 01        	cp 1
 326+ 9AF5 20 01        	jr nz,1F
 327+ 9AF7 2B           	dec hl
 328+ 9AF8 2B           1 dec hl
 329+ 9AF9 C9               ret
 330+ 9AFA
 331+ 9AFA              ; ----------------------------------------------------------------
 332+ 9AFA              ;
 333+ 9AFA              ;   25/02/23
 334+ 9AFA              ;
 335+ 9AFA              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 9AFA              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 9AFA              ;
 338+ 9AFA              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 9AFA              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 9AFA
 341+ 9AFA              Almacena_disparo
 342+ 9AFA
 343+ 9AFA E5               push hl  										; HL contiene el puntero de impresión.
 344+ 9AFB F1               pop af
 345+ 9AFC 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 9AFD
 347+ 9AFD 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 9AFE E6 01            and 1
 349+ 9B00 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 9B02              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 9B02              ; 	Dispara AMADEUS.
 352+ 9B02
 353+ 9B02              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 9B02              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 9B02              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 9B02              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 9B02
 358+ 9B02 C5               push bc
 359+ 9B03 01 25 86         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 9B06 2A B5 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 9B09 A7               and a
 362+ 9B0A ED 42            sbc hl,bc
 363+ 9B0C CC 2E 8B         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 9B0F C1               pop bc
 365+ 9B10 28 54            jr z,4F
 366+ 9B12
 367+ 9B12 2A B5 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 9B15 23               inc hl
 369+ 9B16 23               inc hl
 370+ 9B17 22 B5 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 9B1A              ;                                                   ; _ Disparo_(+1).
 372+ 9B1A 18 18            jr 2F
 373+ 9B1C
 374+ 9B1C              ; Dispara una entidad.
 375+ 9B1C
 376+ 9B1C C5           1 push bc
 377+ 9B1D 01 4D 86         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 9B20 2A B3 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 9B23 A7               and a
 380+ 9B24 ED 42            sbc hl,bc
 381+ 9B26 CC 27 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9B29 C1               pop bc
 383+ 9B2A 28 3A            jr z,4F
 384+ 9B2C
 385+ 9B2C 2A B3 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9B2F 23               inc hl
 387+ 9B30 23               inc hl
 388+ 9B31 22 B3 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 9B34              ;                                                   ; _ Disparo_(+1).
 390+ 9B34 CD A9 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9B37              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9B37              ;
 393+ 9B37              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9B37              ;                                                     Rutinas_de_impresion en IX.
 395+ 9B37              ;                                                     Puntero_de_impresion en HL.
 396+ 9B37              ;                                                     Impacto/Dirección en BC.
 397+ 9B37
 398+ 9B37 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9B38 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9B39 23               inc hl                                          ; _ al siguiente.
 401+ 9B3A A7               and a
 402+ 9B3B 20 C0            jr nz,3B
 403+ 9B3D
 404+ 9B3D 08               ex af,af
 405+ 9B3E ED 73 A2 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9B42 F9               ld sp,hl
 407+ 9B43
 408+ 9B43 DD E5            push ix                                         ; Rutina de impresión.
 409+ 9B45 F5               push af                                         ; Puntero de impresión.
 410+ 9B46 FD E5            push iy                                         ; Puntero objeto.
 411+ 9B48 C5               push bc                                         ; Control.
 412+ 9B49
 413+ 9B49 ED 7B A2 89      ld sp,(Stack)
 414+ 9B4D
 415+ 9B4D              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9B4D
 417+ 9B4D 21 91 89     	ld hl,Ctrl_1
 418+ 9B50 CB C6        	set 0,(hl)
 419+ 9B52
 420+ 9B52 DD E5        	push ix
 421+ 9B54 E1               pop hl
 422+ 9B55 F5               push af
 423+ 9B56 DD E1            pop ix
 424+ 9B58
 425+ 9B58 CD BF 80     	call Guarda_foto_registros
 426+ 9B5B
 427+ 9B5B 21 91 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9B5E CB 86        	res 0,(hl)
 429+ 9B60
 430+ 9B60              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9B60              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9B60
 433+ 9B60 CD 2E 8B         call Inicia_Puntero_Disparo_Amadeus
 434+ 9B63 CD 27 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 9B66
 436+ 9B66 C9           4 ret
 437+ 9B67
 438+ 9B67              ; ----------------------------------------------------------------
 439+ 9B67              ;
 440+ 9B67              ;   4/3/23
 441+ 9B67              ;
 442+ 9B67              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9B67              ;   _ al generarse el disparo.
 444+ 9B67              ;
 445+ 9B67              ;       "$80" ..... No se produce colisión.
 446+ 9B67              ;       "$81" ..... Se produce colisión.
 447+ 9B67              ;
 448+ 9B67              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9B67              ;         _ que forman el disparo.
 450+ 9B67
 451+ 9B67
 452+ 9B67              Comprueba_Colision
 453+ 9B67
 454+ 9B67              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9B67
 456+ 9B67 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9B69 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9B6A
 459+ 9B6A CD A0 9B         call Modifica_H_Velocidad_disparo
 460+ 9B6D
 461+ 9B6D 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9B6E FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9B70 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9B72
 465+ 9B72 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9B74 CD 90 9B         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9B77
 468+ 9B77 7B               ld a,e
 469+ 9B78 E6 01            and 1
 470+ 9B7A 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9B7C              ;                                                  ; _ para activar IMPACTO.
 472+ 9B7C E1               pop hl
 473+ 9B7D E5               push hl
 474+ 9B7E CD 04 92         call NextScan
 475+ 9B81
 476+ 9B81 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9B82 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9B84 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 9B86              ;                                                  ; _ 2º scanline si esto es así.
 480+ 9B86 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9B88 CD 90 9B         call Bucle_2
 482+ 9B8B
 483+ 9B8B 43           1 ld b,e
 484+ 9B8C E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9B8D FD E1            pop iy
 486+ 9B8F C9               ret
 487+ 9B90
 488+ 9B90              ; ---------- ----------
 489+ 9B90
 490+ 9B90 06 02        Bucle_2 ld b,2
 491+ 9B92 FD 7E 00     2 ld a,(iy)
 492+ 9B95 A6               and (hl)
 493+ 9B96 28 02            jr z,1F
 494+ 9B98 1E 81            ld e,$81
 495+ 9B9A 23           1 inc hl
 496+ 9B9B FD 23            inc iy
 497+ 9B9D 10 F3            djnz 2B
 498+ 9B9F C9               ret
 499+ 9BA0
 500+ 9BA0              ; ---------- ----------
 501+ 9BA0              ;
 502+ 9BA0              ;   21/7/23
 503+ 9BA0
 504+ 9BA0              Modifica_H_Velocidad_disparo
 505+ 9BA0
 506+ 9BA0 3A C2 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9BA3 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 9BA5 D0               ret nc                                         ; _ incrementamos H.
 509+ 9BA6 24               inc h
 510+ 9BA7
 511+ 9BA7 C9               ret
 512+ 9BA8
 513+ 9BA8              ; -------------------------------------------------------------------------------------------------------------
 514+ 9BA8              ;
 515+ 9BA8              ;   04/12/23
 516+ 9BA8              ;
 517+ 9BA8              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9BA8              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9BA8              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9BA8              ;
 521+ 9BA8              ;   MODIFICA: HL,DE,B y A.
 522+ 9BA8
 523+ 9BA8              Genera_coordenadas_X
 524+ 9BA8
 525+ 9BA8              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9BA8              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9BA8
 528+ 9BA8              ;   Limpiamos almacenes.
 529+ 9BA8
 530+ 9BA8 CD D9 9B         call Limpia_Coordenadas_X
 531+ 9BAB
 532+ 9BAB              ;   Almacenamos coordenadas X.
 533+ 9BAB
 534+ 9BAB              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9BAB
 536+ 9BAB 2A 6A 89         ld hl,(Puntero_de_impresion)
 537+ 9BAE 11 BF 89         ld de,Coordenadas_X_Entidad
 538+ 9BB1 06 02            ld b,2
 539+ 9BB3
 540+ 9BB3 3A 56 89         ld a,(CTRL_DESPLZ)
 541+ 9BB6 A7               and a
 542+ 9BB7 28 01            jr z,1F
 543+ 9BB9 04               inc b
 544+ 9BBA
 545+ 9BBA CD D0 9B     1 call Guarda_coordenadas_X
 546+ 9BBD
 547+ 9BBD              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9BBD
 549+ 9BBD 2A D0 86         ld hl,(p.imp.amadeus)
 550+ 9BC0 11 BC 89         ld de,Coordenadas_X_Amadeus
 551+ 9BC3 06 02            ld b,2
 552+ 9BC5
 553+ 9BC5 3A BC 86         ld a,(ctrl_desplz_amadeus)
 554+ 9BC8 A7               and a
 555+ 9BC9 28 01            jr z,2F
 556+ 9BCB 04               inc b
 557+ 9BCC
 558+ 9BCC CD D0 9B     2 call Guarda_coordenadas_X
 559+ 9BCF
 560+ 9BCF              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 9BCF
 562+ 9BCF C9               ret
 563+ 9BD0
 564+ 9BD0              ; ----- ----- ----- ----- -----
 565+ 9BD0
 566+ 9BD0 7D           Guarda_coordenadas_X  ld a,l
 567+ 9BD1 E6 1F            and $1f
 568+ 9BD3 12           1 ld (de),a
 569+ 9BD4 3C               inc a
 570+ 9BD5 13               inc de
 571+ 9BD6 10 FB            djnz 1B
 572+ 9BD8 C9               ret
 573+ 9BD9
 574+ 9BD9 AF           Limpia_Coordenadas_X xor a
 575+ 9BDA 06 06            ld b,6
 576+ 9BDC 21 BC 89         ld hl,Coordenadas_X_Amadeus
 577+ 9BDF 77           1 ld (hl),a
 578+ 9BE0 23               inc hl
 579+ 9BE1 10 FC            djnz 1B
 580+ 9BE3 C9               ret
 581+ 9BE4
 582+ 9BE4              ; ----- ----- ----- ----- -----
 583+ 9BE4
 584+ 9BE4              Compara_coordenadas_X
 585+ 9BE4
 586+ 9BE4 06 03            ld b,3
 587+ 9BE6 11 C1 89         ld de,Coordenadas_X_Entidad+2
 588+ 9BE9
 589+ 9BE9 1A               ld a,(de)
 590+ 9BEA A7               and a
 591+ 9BEB 20 01            jr nz,2F
 592+ 9BED 05               dec b
 593+ 9BEE
 594+ 9BEE 1B           2 dec de
 595+ 9BEF 1B               dec de
 596+ 9BF0 21 BC 89         ld hl,Coordenadas_X_Amadeus
 597+ 9BF3
 598+ 9BF3 D5           1 push de
 599+ 9BF4 E5               push hl
 600+ 9BF5 C5               push bc
 601+ 9BF6
 602+ 9BF6 CD 00 9C         call Comparando
 603+ 9BF9
 604+ 9BF9 C1               pop bc
 605+ 9BFA E1               pop hl
 606+ 9BFB D1               pop de
 607+ 9BFC
 608+ 9BFC 13               inc de
 609+ 9BFD 10 F4            djnz 1B
 610+ 9BFF
 611+ 9BFF C9               ret
 612+ 9C00
 613+ 9C00              ; ----- ----- ----- ----- -----
 614+ 9C00              ;
 615+ 9C00              ;   4/12/23
 616+ 9C00              ;
 617+ 9C00              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 9C00
 619+ 9C00 06 03        Comparando ld b,3
 620+ 9C02 1A               ld a,(de)
 621+ 9C03 4E           2 ld c,(hl)
 622+ 9C04 B9               cp c
 623+ 9C05 28 04            jr z,1F
 624+ 9C07 23               inc hl
 625+ 9C08 10 F9            djnz 2B
 626+ 9C0A C9               ret
 627+ 9C0B
 628+ 9C0B 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 9C0D 32 63 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 9C10 21 B7 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 9C13 CB D6            set 2,(hl)
 632+ 9C15 C9               ret
 633+ 9C16
 634+ 9C16              ; -----------------------------------------------------------------------
 635+ 9C16              ;
 636+ 9C16              ;   7/12/23
 637+ 9C16              ;
 638+ 9C16
 639+ 9C16              Detecta_colision_nave_entidad
 640+ 9C16
 641+ 9C16              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 9C16
 643+ 9C16 FD 2A 52 89      ld iy,(Puntero_objeto)
 644+ 9C1A 2A 6A 89         ld hl,(Puntero_de_impresion)
 645+ 9C1D
 646+ 9C1D E5               push hl
 647+ 9C1E
 648+ 9C1E              ; ----- ----- -----
 649+ 9C1E 1E 00            ld e,0                                         ; Indica impacto.
 650+ 9C20 06 0A            ld b,10
 651+ 9C22 CD 52 9C     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 9C25 7B               ld a,e
 653+ 9C26 FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9C28 38 0E            jr c,3F
 655+ 9C2A
 656+ 9C2A              ; LLegados a este punto:
 657+ 9C2A              ;
 658+ 9C2A              ;   HAY COLISIÓN !!!!!.
 659+ 9C2A              ;
 660+ 9C2A              ;   .db (Impacto) de Amadeus a "1".
 661+ 9C2A              ;   SET el bit3 de (Impacto2).
 662+ 9C2A              ;
 663+ 9C2A              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9C2A
 665+ 9C2A 21 63 89         ld hl,Impacto
 666+ 9C2D 36 01            ld (hl),1
 667+ 9C2F 21 B7 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 9C32 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 9C34 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 9C36
 671+ 9C36 18 18            jr 1F
 672+ 9C38
 673+ 9C38              ; -----
 674+ 9C38
 675+ 9C38 E1           3 pop hl
 676+ 9C39 CD 04 92         call NextScan
 677+ 9C3C E5               push hl
 678+ 9C3D 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9C3E FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9C40 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 9C42 30 0C            jr nc,1F
 682+ 9C44              ;                                                  ; _ 2º scanline si esto es así.
 683+ 9C44 10 DC            djnz 2B
 684+ 9C46
 685+ 9C46              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 9C46
 687+ 9C46              ; LLegados a este punto:
 688+ 9C46              ;
 689+ 9C46              ;   NO HAY COLISIÓN !!!!!.
 690+ 9C46              ;
 691+ 9C46              ;   .db (Impacto) de Amadeus a "0".
 692+ 9C46              ;   RES el bit2 de (Impacto2).
 693+ 9C46              ;
 694+ 9C46              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 9C46              ;   Lo colocamos a "0".
 696+ 9C46
 697+ 9C46 21 B7 89         ld hl,Impacto2
 698+ 9C49 CB 96            res 2,(hl)
 699+ 9C4B 2A B8 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9C4E 36 00            ld (hl),0
 701+ 9C50
 702+ 9C50 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 9C51 C9               ret
 704+ 9C52
 705+ 9C52               ; ---------- ----------
 706+ 9C52
 707+ 9C52 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 9C53 3A 4F 89         ld a,(Columns)
 709+ 9C56 47               ld b,a
 710+ 9C57 FD 7E 00     2 ld a,(iy)
 711+ 9C5A BE               cp (hl)
 712+ 9C5B 28 01            jr z,1F
 713+ 9C5D
 714+ 9C5D 1C               inc e
 715+ 9C5E
 716+ 9C5E 23           1 inc hl
 717+ 9C5F FD 23            inc iy
 718+ 9C61 10 F4            djnz 2B
 719+ 9C63 C1               pop bc
 720+ 9C64 C9               ret
 721+ 9C65
 722+ 9C65              ; -------------------------------------------------------------------------------------------------------------
 723+ 9C65              ;
 724+ 9C65              ;   13/03/23
 725+ 9C65              ;
 726+ 9C65              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 9C65              ;
 728+ 9C65              ;   DESTRUYE: HL,BC,DE y A.
 729+ 9C65
 730+ 9C65 21 56 80     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9C68 7E               ld a,(hl)
 732+ 9C69 A7               and a
 733+ 9C6A C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9C6B
 735+ 9C6B 44               ld b,h
 736+ 9C6C 4D               ld c,l
 737+ 9C6D 2A AA 89         ld hl,(Stack_snapshot_disparos)
 738+ 9C70 E5               push hl
 739+ 9C71 A7               and a
 740+ 9C72 ED 42            sbc hl,bc
 741+ 9C74 E5               push hl
 742+ 9C75 C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 9C76
 744+ 9C76 E1               pop hl
 745+ 9C77 54               ld d,h
 746+ 9C78 5D               ld e,l
 747+ 9C79 1B               dec de
 748+ 9C7A ED B8            lddr                                                ; Limpiamos.
 749+ 9C7C
 750+ 9C7C 21 56 80         ld hl,Album_de_fotos_disparos
 751+ 9C7F 22 AA 89         ld (Stack_snapshot_disparos),hl
 752+ 9C82
 753+ 9C82 C9               ret
 754+ 9C83
 755+ 9C83              ; -------------------------------------------------------------------------------------------------------------
 756+ 9C83              ;
 757+ 9C83              ;   18/07/23
 758+ 9C83              ;
 759+ 9C83
 760+ 9C83              Motor_de_disparos
 761+ 9C83
 762+ 9C83              ; Gestiona DISPAROS DE AMADEUS.
 763+ 9C83
 764+ 9C83 01 37 86         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 9C86 2A B5 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9C89
 767+ 9C89 CD A9 8B     2 call Extrae_address
 768+ 9C8C 7E               ld a,(hl)
 769+ 9C8D A7               and a
 770+ 9C8E 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9C90
 772+ 9C90              ; ----- ----- ----- ----- ----- -----
 773+ 9C90
 774+ 9C90 C5               push bc
 775+ 9C91 CD 55 9D         call foto_disparo_a_borrar
 776+ 9C94
 777+ 9C94              ; Existe colisión con este disparo???
 778+ 9C94
 779+ 9C94 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 9C95 7E               ld a,(hl)
 781+ 9C96 2B               dec hl
 782+ 9C97 E6 01            and 1
 783+ 9C99 28 1D            jr z,9F
 784+ 9C9B
 785+ 9C9B              ;   En este punto:
 786+ 9C9B              ;
 787+ 9C9B              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9C9B              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9C9B              ;   _con la entidad).
 790+ 9C9B              ;
 791+ 9C9B              ;   Disparo_2A defw 0                                ; Control.
 792+ 9C9B              ;    defw 0                                          ; Puntero objeto.
 793+ 9C9B              ;    defw 0                                          ; Puntero de impresión.
 794+ 9C9B              ;    defw 0                                          ; Rutina de impresión.
 795+ 9C9B
 796+ 9C9B E5               push hl
 797+ 9C9C
 798+ 9C9C 06 04            ld b,4
 799+ 9C9E 23           19 inc hl
 800+ 9C9F 10 FD            djnz 19B
 801+ 9CA1
 802+ 9CA1 CD A9 8B         call Extrae_address
 803+ 9CA4 CD 38 9F         call Genera_coordenadas_disparo
 804+ 9CA7
 805+ 9CA7              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9CA7
 807+ 9CA7 21 BA 89         ld hl,Coordenadas_disparo_certero
 808+ 9CAA 72               ld (hl),d
 809+ 9CAB 23               inc hl
 810+ 9CAC 73               ld (hl),e
 811+ 9CAD
 812+ 9CAD              ; Elimino el disparo de la base de datos.
 813+ 9CAD
 814+ 9CAD E1               pop hl
 815+ 9CAE CD D4 9D         call Elimina_disparo_de_base_de_datos
 816+ 9CB1 21 B7 89         ld hl,Impacto2
 817+ 9CB4 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 9CB6
 819+ 9CB6 18 06            jr 11F
 820+ 9CB8
 821+ 9CB8 CD 7E 9D     9 call Mueve_disparo
 822+ 9CBB CD 55 9D         call foto_disparo_a_borrar
 823+ 9CBE
 824+ 9CBE C1           11 pop bc
 825+ 9CBF 18 04            jr 7F
 826+ 9CC1
 827+ 9CC1              ; ----- ----- ----- ----- ----- -----
 828+ 9CC1
 829+ 9CC1 ED 42        1 sbc hl,bc
 830+ 9CC3 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 9CC5
 832+ 9CC5 2A B5 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 9CC8 23               inc hl
 834+ 9CC9 23               inc hl
 835+ 9CCA 22 B5 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 9CCD 18 BA            jr 2B
 837+ 9CCF
 838+ 9CCF CD 2E 8B     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 9CD2              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 9CD2
 841+ 9CD2              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 9CD2
 843+ 9CD2 01 9F 86         ld bc,Disparo_11
 844+ 9CD5 2A B3 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 9CD8
 846+ 9CD8 CD A9 8B     5 call Extrae_address
 847+ 9CDB 7E               ld a,(hl)
 848+ 9CDC A7               and a
 849+ 9CDD 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 9CDF
 851+ 9CDF              ; ----- ----- ----- ----- ----- -----
 852+ 9CDF
 853+ 9CDF C5               push bc
 854+ 9CE0 CD 55 9D         call foto_disparo_a_borrar
 855+ 9CE3
 856+ 9CE3              ; Existe colisión con este disparo???
 857+ 9CE3
 858+ 9CE3 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 9CE4 7E               ld a,(hl)
 860+ 9CE5 2B               dec hl
 861+ 9CE6 E6 01            and 1
 862+ 9CE8 28 4D            jr z,10F
 863+ 9CEA
 864+ 9CEA              ;! La colisión se produce con Amadeus???
 865+ 9CEA              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 9CEA
 867+ 9CEA E5               push hl
 868+ 9CEB
 869+ 9CEB 06 04            ld b,4
 870+ 9CED 23           16 inc hl
 871+ 9CEE 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 9CF0
 873+ 9CF0 CD A9 8B         call Extrae_address
 874+ 9CF3 CD 38 9F         call Genera_coordenadas_disparo
 875+ 9CF6
 876+ 9CF6 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 9CF7 FE 16            cp $16
 878+ 9CF9 38 2A            jr c,15F
 879+ 9CFB
 880+ 9CFB
 881+ 9CFB              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 9CFB
 883+ 9CFB D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 9CFC
 885+ 9CFC              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 9CFC
 887+ 9CFC 2A D0 86         ld hl,(p.imp.amadeus)
 888+ 9CFF
 889+ 9CFF              ; Coordenada X de Amadeus en D.
 890+ 9CFF
 891+ 9CFF 7D               ld a,l
 892+ 9D00 E6 1F            and $1F
 893+ 9D02 57               ld d,a
 894+ 9D03
 895+ 9D03 21 BB 86         ld hl,Amadeus_db+8
 896+ 9D06 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 9D07
 898+ 9D07 21 BC 89         ld hl,Coordenadas_X_Amadeus
 899+ 9D0A CD D0 9B         call Guarda_coordenadas_X
 900+ 9D0D
 901+ 9D0D D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 9D0E
 903+ 9D0E              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 9D0E
 905+ 9D0E 06 02            ld b,2
 906+ 9D10 C5           20 push bc
 907+ 9D11
 908+ 9D11 06 03            ld b,3
 909+ 9D13 21 BC 89         ld hl,Coordenadas_X_Amadeus
 910+ 9D16 7E           18 ld a,(hl)
 911+ 9D17 BA               cp d
 912+ 9D18 20 04            jr nz,17F
 913+ 9D1A
 914+ 9D1A              ;! Colisión Amadeus !!!!!!!!!!
 915+ 9D1A
 916+ 9D1A C1               pop bc
 917+ 9D1B E1               pop hl
 918+ 9D1C 18 0D            jr 14F
 919+ 9D1E
 920+ 9D1E 23           17 inc hl
 921+ 9D1F 10 F5            djnz 18B
 922+ 9D21
 923+ 9D21 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 9D22
 925+ 9D22 C1               pop bc
 926+ 9D23 10 EB            djnz 20B
 927+ 9D25
 928+ 9D25
 929+ 9D25              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 9D25              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 9D25
 932+ 9D25 E1           15 pop hl
 933+ 9D26 23               inc hl
 934+ 9D27 35               dec (hl)
 935+ 9D28 2B               dec hl
 936+ 9D29 18 0C            jr 10F
 937+ 9D2B
 938+ 9D2B              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9D2B              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9D2B
 941+ 9D2B E5           14 push hl
 942+ 9D2C CD D4 9D         call Elimina_disparo_de_base_de_datos
 943+ 9D2F 21 B7 89         ld hl,Impacto2
 944+ 9D32 CB CE            set 1,(hl)
 945+ 9D34 E1               pop hl
 946+ 9D35 18 06            jr 12F
 947+ 9D37
 948+ 9D37              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9D37
 950+ 9D37 CD 7E 9D     10 call Mueve_disparo
 951+ 9D3A CD 55 9D         call foto_disparo_a_borrar
 952+ 9D3D C1           12 pop bc
 953+ 9D3E
 954+ 9D3E 18 04            jr 8F
 955+ 9D40
 956+ 9D40              ; ----- ----- ----- ----- ----- -----
 957+ 9D40
 958+ 9D40 ED 42        4 sbc hl,bc
 959+ 9D42 28 0A            jr z,6F
 960+ 9D44
 961+ 9D44 2A B3 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9D47 23               inc hl
 963+ 9D48 23               inc hl
 964+ 9D49 22 B3 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9D4C 18 8A            jr 5B
 966+ 9D4E
 967+ 9D4E CD 27 8B     6 call Inicia_Puntero_Disparo_Entidades
 968+ 9D51 CD D9 9B         call Limpia_Coordenadas_X
 969+ 9D54 C9               ret
 970+ 9D55
 971+ 9D55              ; ------------------------------------------------------------------
 972+ 9D55
 973+ 9D55              foto_disparo_a_borrar
 974+ 9D55
 975+ 9D55 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 9D56 A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9D57 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9D58
 979+ 9D58 E5               push hl
 980+ 9D59 23               inc hl
 981+ 9D5A 23               inc hl
 982+ 9D5B ED 73 A2 89      ld (Stack),sp
 983+ 9D5F F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9D60 FD E1            pop iy
 985+ 9D62 DD E1            pop ix
 986+ 9D64 E1               pop hl
 987+ 9D65 ED 7B A2 89      ld sp,(Stack)
 988+ 9D69 3A 91 89         ld a,(Ctrl_1)
 989+ 9D6C CB C7            set 0,a
 990+ 9D6E 32 91 89         ld (Ctrl_1),a
 991+ 9D71 CD BF 80         call Guarda_foto_registros
 992+ 9D74 3A 91 89         ld a,(Ctrl_1)
 993+ 9D77 CB 87            res 0,a
 994+ 9D79 32 91 89         ld (Ctrl_1),a
 995+ 9D7C E1               pop hl
 996+ 9D7D C9               ret
 997+ 9D7E
 998+ 9D7E              ;---------------------------------------------------
 999+ 9D7E              ;
1000+ 9D7E              ;   18/07/23
1001+ 9D7E              ;
1002+ 9D7E
1003+ 9D7E              Mueve_disparo
1004+ 9D7E
1005+ 9D7E              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9D7E              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9D7E              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9D7E
1009+ 9D7E E5               push hl
1010+ 9D7F
1011+ 9D7F 7E               ld a,(hl)
1012+ 9D80
1013+ 9D80 06 04            ld b,4
1014+ 9D82 23           1 inc hl
1015+ 9D83 10 FD            djnz 1B
1016+ 9D85
1017+ 9D85              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 9D85
1019+ 9D85 CD A9 8B         call Extrae_address
1020+ 9D88
1021+ 9D88 E6 01            and 1
1022+ 9D8A 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9D8C
1024+ 9D8C              ; Disparo hacia arriba, (Amadeus).
1025+ 9D8C
1026+ 9D8C              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9D8C              ; _ de la dificultad.
1028+ 9D8C
1029+ 9D8C CD 13 92         call PreviousScan
1030+ 9D8F CD 13 92         call PreviousScan
1031+ 9D92 CD 13 92         call PreviousScan
1032+ 9D95 CD 13 92         call PreviousScan
1033+ 9D98
1034+ 9D98              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9D98
1036+ 9D98 7C               ld a,h
1037+ 9D99 FE 40            cp $40
1038+ 9D9B 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9D9D
1040+ 9D9D              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9D9D
1042+ 9D9D EB               ex de,hl
1043+ 9D9E 06 04            ld b,4
1044+ 9DA0 2B           6 dec hl
1045+ 9DA1 10 FD            djnz 6B
1046+ 9DA3
1047+ 9DA3 CD D4 9D         call Elimina_disparo_de_base_de_datos
1048+ 9DA6 E1               pop hl
1049+ 9DA7 18 10            jr 7F
1050+ 9DA9
1051+ 9DA9              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9DA9              ; HL contiene el puntero de impresión del disparo.
1053+ 9DA9              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9DA9
1055+ 9DA9 D5           3 push de
1056+ 9DAA C5               push bc
1057+ 9DAB
1058+ 9DAB CD 67 9B         call Comprueba_Colision
1059+ 9DAE
1060+ 9DAE              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9DAE
1062+ 9DAE 78               ld a,b
1063+ 9DAF
1064+ 9DAF C1               pop bc
1065+ 9DB0 D1               pop de
1066+ 9DB1
1067+ 9DB1 EB               ex de,hl
1068+ 9DB2
1069+ 9DB2 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9DB3 23               inc hl                                      ; _ movimiento.
1071+ 9DB4 72               ld (hl),d
1072+ 9DB5
1073+ 9DB5 E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 9DB6
1075+ 9DB6 23               inc hl                                      ; _ en curso.
1076+ 9DB7 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9DB8 2B               dec hl
1078+ 9DB9
1079+ 9DB9 C9           7 ret
1080+ 9DBA
1081+ 9DBA              ; Disparo hacia abajo, (Entidad).
1082+ 9DBA
1083+ 9DBA 3A C2 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9DBD 47               ld b,a
1085+ 9DBE
1086+ 9DBE CD 04 92     4 call NextScan
1087+ 9DC1 10 FB            djnz 4B
1088+ 9DC3
1089+ 9DC3              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9DC3
1091+ 9DC3 7C               ld a,h
1092+ 9DC4 FE 58            cp $58
1093+ 9DC6 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 9DC8
1095+ 9DC8 EB               ex de,hl
1096+ 9DC9 06 04            ld b,4
1097+ 9DCB 2B           5 dec hl
1098+ 9DCC 10 FD            djnz 5B
1099+ 9DCE
1100+ 9DCE CD D4 9D         call Elimina_disparo_de_base_de_datos
1101+ 9DD1 E1               pop hl
1102+ 9DD2 18 E5            jr 7B
1103+ 9DD4
1104+ 9DD4              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9DD4
1106+ 9DD4 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 9DD7 AF               xor a
1108+ 9DD8 77               ld (hl),a
1109+ 9DD9 54               ld d,h
1110+ 9DDA 5D               ld e,l
1111+ 9DDB 13               inc de
1112+ 9DDC ED B0            ldir
1113+ 9DDE C9               ret
1114+ 9DDF
1115+ 9DDF              ; -----------------------------------------------------------------
1116+ 9DDF              ;
1117+ 9DDF              ;   7/12/23
1118+ 9DDF              ;
1119+ 9DDF
1120+ 9DDF 3A B7 89     Selector_de_impactos ld a,(Impacto2)
1121+ 9DE2 A7               and a
1122+ 9DE3 C8               ret z
1123+ 9DE4
1124+ 9DE4              ; Analizamos si hay impacto por disparos.
1125+ 9DE4
1126+ 9DE4              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9DE4
1128+ 9DE4 CB 4F            bit 1,a
1129+ 9DE6 28 07            jr z,1F
1130+ 9DE8
1131+ 9DE8 21 CC 86         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9DEB 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9DED 18 08            jr 2F
1134+ 9DEF
1135+ 9DEF CB 47        1 bit 0,a
1136+ 9DF1 C8               ret z
1137+ 9DF2
1138+ 9DF2              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9DF2
1140+ 9DF2 21 91 89         ld hl,Ctrl_1
1141+ 9DF5 CB D6            set 2,(hl)
1142+ 9DF7
1143+ 9DF7 C9           2 ret
1144+ 9DF8
1145+ 9DF8              ; -----------------------------------------------------------------
1146+ 9DF8              ;
1147+ 9DF8              ;   25/04/23
1148+ 9DF8              ;
1149+ 9DF8
1150+ 9DF8              Determina_resultado_comparativa
1151+ 9DF8
1152+ 9DF8              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 9DF8              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 9DF8              ;
1155+ 9DF8              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 9DF8              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 9DF8              ;
1158+ 9DF8              ;   SBC HL,DE
1159+ 9DF8
1160+ 9DF8              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 9DF8              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 9DF8
1163+ 9DF8              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 9DF8              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 9DF8
1166+ 9DF8
1167+ 9DF8 3A 62 89         ld a,(Cuad_objeto)
1168+ 9DFB FE 02            cp 2
1169+ 9DFD 28 26            jr z,2F
1170+ 9DFF 38 24            jr c,2F
1171+ 9E01
1172+ 9E01              ; Cuadrantes 3º y 4º
1173+ 9E01
1174+ 9E01 E6 01            and 1
1175+ 9E03 28 10            jr z,4F
1176+ 9E05
1177+ 9E05              ; Cuadrante 3º
1178+ 9E05
1179+ 9E05 7C               ld a,h
1180+ 9E06 06 00            ld b,0
1181+ 9E08
1182+ 9E08 CD 93 9E         call Compara_cositas_H3
1183+ 9E0B
1184+ 9E0B 04               inc b
1185+ 9E0C 05               dec b
1186+ 9E0D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9E0E
1188+ 9E0E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9E0F 06 00            ld b,0
1190+ 9E11
1191+ 9E11 CD A5 9E         call Compara_cositas_L3
1192+ 9E14 C9               ret
1193+ 9E15
1194+ 9E15              ; Cuadrante 4º
1195+ 9E15
1196+ 9E15 7C           4 ld a,h
1197+ 9E16 06 00            ld b,0
1198+ 9E18
1199+ 9E18 CD B7 9E         call Compara_cositas_H4
1200+ 9E1B
1201+ 9E1B 04               inc b
1202+ 9E1C 05               dec b
1203+ 9E1D C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 9E1E
1205+ 9E1E 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 9E1F 06 00            ld b,0
1207+ 9E21
1208+ 9E21 CD CD 9E         call Compara_cositas_L4
1209+ 9E24 C9               ret
1210+ 9E25
1211+ 9E25              ; Cuadrantes 1º y 2º.
1212+ 9E25
1213+ 9E25 28 10        2 jr z,3F
1214+ 9E27
1215+ 9E27              ; 1er Cuadrante
1216+ 9E27
1217+ 9E27 7C               ld a,h
1218+ 9E28 06 00            ld b,0
1219+ 9E2A
1220+ 9E2A CD 6B 9E         call Compara_cositas_H1
1221+ 9E2D
1222+ 9E2D 04               inc b
1223+ 9E2E 05               dec b
1224+ 9E2F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9E30
1226+ 9E30 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 9E31 06 00            ld b,0
1228+ 9E33
1229+ 9E33 CD 81 9E         call Compara_cositas_L1
1230+ 9E36 C9               ret
1231+ 9E37
1232+ 9E37
1233+ 9E37              ; 2º Cuadrante
1234+ 9E37
1235+ 9E37 7C           3 ld a,h
1236+ 9E38 06 00            ld b,0
1237+ 9E3A
1238+ 9E3A CD 47 9E         call Compara_cositas_H2
1239+ 9E3D
1240+ 9E3D 04               inc b
1241+ 9E3E 05               dec b
1242+ 9E3F C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9E40
1244+ 9E40 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 9E41 06 00            ld b,0
1246+ 9E43
1247+ 9E43 CD 59 9E         call Compara_cositas_L2
1248+ 9E46 C9               ret
1249+ 9E47
1250+ 9E47 A7           Compara_cositas_H2 and a
1251+ 9E48 28 0D            jr z,1F
1252+ 9E4A              ;    cp $fd
1253+ 9E4A              ;    jr z,1F
1254+ 9E4A              ;    cp $fe
1255+ 9E4A              ;    jr z,1F
1256+ 9E4A FE FF            cp $ff
1257+ 9E4C 28 09            jr z,1F
1258+ 9E4E FE 01            cp $01
1259+ 9E50 28 05            jr z,1F
1260+ 9E52 FE 02            cp $02
1261+ 9E54 28 01            jr z,1F
1262+ 9E56 C0               ret nz
1263+ 9E57 04           1 inc b
1264+ 9E58 C9               ret
1265+ 9E59
1266+ 9E59 A7           Compara_cositas_L2 and a
1267+ 9E5A 28 0D            jr z,1F
1268+ 9E5C              ;    cp $fd
1269+ 9E5C              ;    jr z,1F
1270+ 9E5C FE FE            cp $fe
1271+ 9E5E 28 09            jr z,1F
1272+ 9E60 FE FF            cp $ff
1273+ 9E62 28 05            jr z,1F
1274+ 9E64 FE 01            cp $01
1275+ 9E66 28 01            jr z,1F
1276+ 9E68              ;    cp $02
1277+ 9E68              ;    jr z,1F
1278+ 9E68 C0               ret nz
1279+ 9E69 04           1 inc b
1280+ 9E6A C9               ret
1281+ 9E6B
1282+ 9E6B A7           Compara_cositas_H1 and a
1283+ 9E6C 28 11            jr z,1F
1284+ 9E6E              ;    cp $fd
1285+ 9E6E              ;    jr z,1F
1286+ 9E6E              ;    cp $fe
1287+ 9E6E              ;    jr z,1F
1288+ 9E6E FE FF            cp $ff
1289+ 9E70 28 0D            jr z,1F
1290+ 9E72 FE 01            cp $01
1291+ 9E74 28 09            jr z,1F
1292+ 9E76 FE 02            cp $02
1293+ 9E78 28 05            jr z,1F
1294+ 9E7A FE 03            cp $03
1295+ 9E7C 28 01            jr z,1F
1296+ 9E7E C0               ret nz
1297+ 9E7F 04           1 inc b
1298+ 9E80 C9               ret
1299+ 9E81
1300+ 9E81 A7           Compara_cositas_L1 and a
1301+ 9E82 28 0D            jr z,1F
1302+ 9E84              ;    cp $fd
1303+ 9E84              ;    jr z,1F
1304+ 9E84              ;    cp $fe
1305+ 9E84              ;    jr z,1F
1306+ 9E84              ;    cp $ff
1307+ 9E84              ;    jr z,1F
1308+ 9E84 FE 01            cp $01
1309+ 9E86 28 09            jr z,1F
1310+ 9E88 FE 02            cp $02
1311+ 9E8A 28 05            jr z,1F
1312+ 9E8C FE 03            cp $03
1313+ 9E8E 28 01            jr z,1F
1314+ 9E90 C0               ret nz
1315+ 9E91 04           1 inc b
1316+ 9E92 C9               ret
1317+ 9E93
1318+ 9E93 A7           Compara_cositas_H3 and a
1319+ 9E94 28 0D            jr z,1F
1320+ 9E96              ;    cp $fd
1321+ 9E96              ;    jr z,1F
1322+ 9E96 FE FE            cp $fe
1323+ 9E98 28 09            jr z,1F
1324+ 9E9A FE FF            cp $ff
1325+ 9E9C 28 05            jr z,1F
1326+ 9E9E FE 01            cp $01
1327+ 9EA0 28 01            jr z,1F
1328+ 9EA2              ;    cp $02
1329+ 9EA2              ;    jr z,1F
1330+ 9EA2              ;    cp $03
1331+ 9EA2              ;    jr z,1F
1332+ 9EA2 C0               ret nz
1333+ 9EA3 04           1 inc b
1334+ 9EA4 C9               ret
1335+ 9EA5
1336+ 9EA5 A7           Compara_cositas_L3 and a
1337+ 9EA6 28 0D            jr z,1F
1338+ 9EA8              ;    cp $fd
1339+ 9EA8              ;    jr z,1F
1340+ 9EA8              ;    cp $fe
1341+ 9EA8              ;    jr z,1F
1342+ 9EA8              ;    cp $ff
1343+ 9EA8              ;    jr z,1F
1344+ 9EA8 FE 01            cp $01
1345+ 9EAA 28 09            jr z,1F
1346+ 9EAC FE 02            cp $02
1347+ 9EAE 28 05            jr z,1F
1348+ 9EB0 FE 03            cp $03
1349+ 9EB2 28 01            jr z,1F
1350+ 9EB4 C0               ret nz
1351+ 9EB5 04           1 inc b
1352+ 9EB6 C9               ret
1353+ 9EB7
1354+ 9EB7 A7           Compara_cositas_H4 and a
1355+ 9EB8 28 11            jr z,1F
1356+ 9EBA FE FD            cp $fd
1357+ 9EBC 28 0D            jr z,1F
1358+ 9EBE FE FE            cp $fe
1359+ 9EC0 28 09            jr z,1F
1360+ 9EC2 FE FF            cp $ff
1361+ 9EC4 28 05            jr z,1F
1362+ 9EC6 FE 01            cp $01
1363+ 9EC8 28 01            jr z,1F
1364+ 9ECA              ;    cp $02
1365+ 9ECA              ;    jr z,1F
1366+ 9ECA              ;    cp $03
1367+ 9ECA              ;    jr z,1F
1368+ 9ECA C0               ret nz
1369+ 9ECB 04           1 inc b
1370+ 9ECC C9               ret
1371+ 9ECD
1372+ 9ECD A7           Compara_cositas_L4 and a
1373+ 9ECE 28 0D            jr z,1F
1374+ 9ED0              ;    cp $fd
1375+ 9ED0              ;    jr z,1F
1376+ 9ED0 FE FE            cp $fe
1377+ 9ED2 28 09            jr z,1F
1378+ 9ED4 FE FF            cp $ff
1379+ 9ED6 28 05            jr z,1F
1380+ 9ED8 FE 01            cp $01
1381+ 9EDA 28 01            jr z,1F
1382+ 9EDC              ;    cp $02
1383+ 9EDC              ;    jr z,1F
1384+ 9EDC              ;    cp $03
1385+ 9EDC              ;    jr z,1F
1386+ 9EDC C0               ret nz
1387+ 9EDD 04           1 inc b
1388+ 9EDE C9               ret
# file closed: Disparo.asm
1738  9EDF              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9EDF              ; Relojes y temporizaciones.
   2+ 9EDF
   3+ 9EDF              ; ------------------------------------------------------
   4+ 9EDF              ;
   5+ 9EDF              ;	16/7/23
   6+ 9EDF              ;
   7+ 9EDF              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9EDF              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9EDF              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9EDF              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9EDF              ;
  12+ 9EDF              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9EDF              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9EDF
  15+ 9EDF              ; Disparo_entidad db 1
  16+ 9EDF              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9EDF              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9EDF
  19+ 9EDF              Habilita_disparos
  20+ 9EDF
  21+ 9EDF 7E           	ld a,(hl)
  22+ 9EE0 A7           	and a
  23+ 9EE1 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9EE2
  25+ 9EE2 EB           	ex de,hl
  26+ 9EE3
  27+ 9EE3 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9EE4 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9EE5
  30+ 9EE5              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9EE5
  32+ 9EE5 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9EE6 7E           	ld a,(hl)
  34+ 9EE7 23           	inc hl
  35+ 9EE8 77           	ld (hl),a
  36+ 9EE9
  37+ 9EE9 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9EEA 3E 01        	ld a,1
  39+ 9EEC 77           	ld (hl),a
  40+ 9EED C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1739  9EEE              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9EEE              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9EEE              ;
   3+ 9EEE              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9EEE              ;
   5+ 9EEE              ; *****************************************************************************************************************************************************************************************
   6+ 9EEE              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9EEE
   8+ 9EEE 7C           calcula_tercio ld a,h
   9+ 9EEF E6 18        	and $18
  10+ 9EF1 CB 2F        	sra a
  11+ 9EF3 CB 2F        	sra a
  12+ 9EF5 CB 2F        	sra a
  13+ 9EF7 C9           	ret
  14+ 9EF8
# file closed: calcula_tercio.asm
1740  9EF8              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9EF8              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9EF8              ;
   3+ 9EF8              ;
   4+ 9EF8              ;	CLS.
   5+ 9EF8              ;
   6+ 9EF8              ;	Limpia la pantalla y define sus atributos.
   7+ 9EF8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9EF8              ;
   9+ 9EF8              ;	COLORES: 0 ..... NEGRO
  10+ 9EF8              ;    		 1 ..... AZUL
  11+ 9EF8              ; 			 2 ..... ROJO
  12+ 9EF8              ;			 3 ..... MAGENTA
  13+ 9EF8              ; 			 4 ..... VERDE
  14+ 9EF8              ; 			 5 ..... CIAN
  15+ 9EF8              ;			 6 ..... AMARILLO
  16+ 9EF8              ; 			 7 ..... BLANCO
  17+ 9EF8              ;
  18+ 9EF8              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9EF8              ;
  20+ 9EF8              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9EF8
  22+ 9EF8
  23+ 9EF8 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9EFB 11 01 40     	LD DE,$4001
  25+ 9EFE 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9F01 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9F03 ED B0        	LDIR
  28+ 9F05 01 FF 02     	LD BC,767
  29+ 9F08 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9F09 ED B0        	LDIR
  31+ 9F0B C9           	ret
  32+ 9F0C
# file closed: Cls.asm
1741  9F0C              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9F0C              ; ------------------------------------------------------------------------
   2+ 9F0C              ;
   3+ 9F0C              ;	30/1/24
   4+ 9F0C              ;
   5+ 9F0C              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9F0C              ;	Fila superior "0", Columna izquierda "0".
   7+ 9F0C              ;
   8+ 9F0C              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9F0C              ;
  10+ 9F0C              ;	Modifica: A,BC y DE.
  11+ 9F0C
  12+ 9F0C 7D           Genera_coordenadas ld a,l
  13+ 9F0D E6 1F        	and $1f
  14+ 9F0F 32 54 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9F12
  16+ 9F12 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9F13 FE 40        	cp $40
  18+ 9F15 38 1C        	jr c,4F
  19+ 9F17
  20+ 9F17 CD EE 9E     	call calcula_tercio
  21+ 9F1A 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ 9F1B
  23+ 9F1B 1E 00        	ld e,0
  24+ 9F1D 7D           	ld a,l
  25+ 9F1E E6 E0        	and $e0
  26+ 9F20 28 01        	jr z,1F
  27+ 9F22 04           	inc b
  28+ 9F23
  29+ 9F23 04           1 inc b
  30+ 9F24 05           	dec b
  31+ 9F25 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ 9F27              ;														; _ , salimos.
  33+ 9F27 1C           3 inc e
  34+ 9F28 D6 20        	sub 32
  35+ 9F2A 20 FB        	jr nz,3B
  36+ 9F2C 10 F5        	djnz 1B
  37+ 9F2E
  38+ 9F2E 7B           2 ld a,e
  39+ 9F2F 32 55 89     	ld (Coordenada_y),a
  40+ 9F32 C9           	ret
  41+ 9F33
  42+ 9F33 AF           4 xor a
  43+ 9F34 32 55 89     	ld (Coordenada_y),a
  44+ 9F37 C9           	ret
  45+ 9F38
  46+ 9F38              ; ------------------------------------------------------------------------
  47+ 9F38              ;	28/05/23
  48+ 9F38              ;
  49+ 9F38              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ 9F38              ;	Fila superior "0", Columna izquierda "0".
  51+ 9F38              ;
  52+ 9F38              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ 9F38              ;	Output: DE contendrá las coordenadas del disparo:
  54+ 9F38              ;
  55+ 9F38              ;		DE="$120d"
  56+ 9F38              ;
  57+ 9F38              ;		D, (Coordenada_X), Columnas, $12
  58+ 9F38              ;		E, (Coordenada_y), Filas, $0d
  59+ 9F38              ;
  60+ 9F38              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ 9F38
  62+ 9F38              ;	Modifica: A,BC y DE.
  63+ 9F38
  64+ 9F38
  65+ 9F38              Genera_coordenadas_disparo
  66+ 9F38
  67+ 9F38              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ 9F38
  69+ 9F38 7D           	ld a,l
  70+ 9F39 E6 1F        	and $1f
  71+ 9F3B 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ 9F3C CD EE 9E     	call calcula_tercio
  73+ 9F3F 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ 9F40 1E 00        	ld e,0
  75+ 9F42 7D           	ld a,l
  76+ 9F43 E6 E0        	and $e0
  77+ 9F45 28 01        	jr z,1F
  78+ 9F47 04           	inc b
  79+ 9F48 1C           1 inc e
  80+ 9F49 D6 20        	sub 32
  81+ 9F4B 20 FB        	jr nz,1B
  82+ 9F4D 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ 9F4F C9           	ret
  84+ 9F50
# file closed: Genera_coordenadas.asm
1742  9F50              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F50              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F50              ;
   3+ 9F50              ;	12/12/23
   4+ 9F50              ;
   5+ 9F50              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F50
   7+ 9F50              ;	ADC HL,SP	LD (addr),SP
   8+ 9F50              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F50              ;	ADD IX,SP	LD SP,nn
  10+ 9F50              ; 	ADD IY,SP	LD SP,HL
  11+ 9F50              ;				LD SP,IX
  12+ 9F50              ;	DEC SP		LD SP,IY
  13+ 9F50
  14+ 9F50              ;	EX (SP),HL
  15+ 9F50              ;	EX (SP),IX
  16+ 9F50              ;	EX (SP),IY
  17+ 9F50
  18+ 9F50              ;	INC SP
  19+ 9F50
  20+ 9F50                  org $80bf
  21+ 80BF
  22+ 80BF              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 80BF              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 80BF              ;
  25+ 80BF              ;   $7000 / 01 ..... Puntero objeto.
  26+ 80BF              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 80BF              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 80BF
  29+ 80BF              Guarda_foto_registros
  30+ 80BF
  31+ 80BF              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 80BF              ;   _ durante el proceso de escritura.
  33+ 80BF
  34+ 80BF ED 73 A2 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  35+ 80C3
  36+ 80C3              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  37+ 80C3
  38+ 80C3 31 6A 89         ld sp,Variables_de_borrado+6
  39+ 80C6
  40+ 80C6 E5               push hl
  41+ 80C7 DD E5            push ix
  42+ 80C9 FD E5            push iy
  43+ 80CB
  44+ 80CB 31 6C 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  45+ 80CE DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  46+ 80D0              ;                                                 ; _ con las coordenadas_X de Amadeus.
  47+ 80D0
  48+ 80D0 31 BF 80         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  49+ 80D3
  50+ 80D3 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  51+ 80D4 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  52+ 80D6 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  53+ 80D8
  54+ 80D8              ; Disparo o entidad?
  55+ 80D8
  56+ 80D8 3A 91 89         ld a,(Ctrl_1)
  57+ 80DB CB 47            bit 0,a
  58+ 80DD 28 05            jr z,2F
  59+ 80DF
  60+ 80DF 2A AA 89         ld hl,(Stack_snapshot_disparos)
  61+ 80E2 18 0F            jr 4F
  62+ 80E4
  63+ 80E4              ; No es disparo. Entidad/Amadeus ????
  64+ 80E4
  65+ 80E4 3A 70 89     2 ld a,(Ctrl_0)
  66+ 80E7 CB 77            bit 6,a
  67+ 80E9 28 05            jr z,7F
  68+ 80EB
  69+ 80EB              ; Guardamos foto de Amadeus.
  70+ 80EB
  71+ 80EB 2A AE 89         ld hl,(End_Snapshot_Amadeus)
  72+ 80EE 18 03            jr 4F
  73+ 80F0
  74+ 80F0 2A A8 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  75+ 80F3
  76+ 80F3 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  77+ 80F5
  78+ 80F5 D1           1 pop de
  79+ 80F6 73               ld (hl),e
  80+ 80F7 23               inc hl
  81+ 80F8 72               ld (hl),d
  82+ 80F9 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  83+ 80FA 10 F9            djnz 1B
  84+ 80FC
  85+ 80FC              ; Disparo o entidad ?
  86+ 80FC
  87+ 80FC 3A 91 89         ld a,(Ctrl_1)
  88+ 80FF CB 47            bit 0,a
  89+ 8101 28 05            jr z,5F
  90+ 8103
  91+ 8103 22 AA 89         ld (Stack_snapshot_disparos),hl
  92+ 8106 18 12            jr 6F
  93+ 8108
  94+ 8108              ; Entidad o Amadeus ?
  95+ 8108
  96+ 8108 3A 70 89     5 ld a,(Ctrl_0)
  97+ 810B CB 77            bit 6,a
  98+ 810D 28 08            jr z,8F
  99+ 810F
 100+ 810F 22 AE 89         ld (End_Snapshot_Amadeus),hl
 101+ 8112 ED 7B A2 89      ld sp,(Stack)
 102+ 8116 C9               ret
 103+ 8117
 104+ 8117 22 A8 89     8 ld (Stack_snapshot),hl
 105+ 811A ED 7B A2 89  6 ld sp,(Stack)
 106+ 811E
 107+ 811E C9               ret
 108+ 811F
 109+ 811F              ; -----------------------------------------------------------------------------
 110+ 811F              ;
 111+ 811F              ;   21/11/23
 112+ 811F
 113+ 811F              Limpia_y_reinicia_Stack_Snapshot
 114+ 811F
 115+ 811F              ;   Limpia Album_de_fotos.
 116+ 811F
 117+ 811F 2A A8 89         ld hl,(Stack_snapshot)
 118+ 8122 7D               ld a,l
 119+ 8123 A7               and a
 120+ 8124 C8               ret z   ;   Salimos si el álbum está vacío.
 121+ 8125
 122+ 8125 47               ld b,a
 123+ 8126 04               inc b
 124+ 8127
 125+ 8127 36 00        1 ld (hl),0
 126+ 8129 2D               dec l
 127+ 812A 10 FB            djnz 1B
 128+ 812C
 129+ 812C              ;   Reinicializa (Stack_snapshot).
 130+ 812C
 131+ 812C AF               xor a
 132+ 812D 32 A8 89         ld (Stack_snapshot),a
 133+ 8130
 134+ 8130 C9               ret
# file closed: Guarda_foto_registros.asm
1743  8131
1744  8131              	SAVESNA "Pruebas.sna", START
1745  8131
1746  8131
1747  8131
1748  8131
# file closed: Banco_de_pruebas.asm
