# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 B7 87  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD 56 8C     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C              ;	ld a,6
  41  AA1C              ;	out ($fe),a
  42  AA1C              ;	call Pinta_Amadeus										; Borde amarillo.
  43  AA1C
  44  AA1C              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA1C              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA1C
  47  AA1C              ;	ld a,7
  48  AA1C              ;	out ($fe),a												; Borde blanco.
  49  AA1C              ;	call Guarda_parametros_DRAW
  50  AA1C              ;	call Restore_Amadeus
  51  AA1C
  52  AA1C              ; Posible colisión Entidad-Amadeus ???
  53  AA1C
  54  AA1C              ;	ld a,(Impacto2)
  55  AA1C              ;	bit 2,a
  56  AA1C              ;	jr z,1F
  57  AA1C
  58  AA1C              ;	call Detecta_colision_nave_entidad
  59  AA1C
  60  AA1C              ;1 ld a,4
  61  AA1C              ;	out ($fe),a
  62  AA1C              ;	call Gestiona_Amadeus
  63  AA1C
  64  AA1C              ;	ld a,7
  65  AA1C              ;	out ($fe),a											; Borde blanco.
  66  AA1C              ;	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA1C              ;	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA1C
  69  AA1C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA1C
  71  AA1C              ;	call Recupera_parametros_DRAW
  72  AA1C CD 66 8C     	call Actualiza_relojes
  73  AA1F
  74  AA1F 21 C1 87     	ld hl,Ctrl_3
  75  AA22 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA24
  77  AA24 FD E1        	pop iy
  78  AA26 DD E1        	pop ix
  79  AA28 F1           	pop af
  80  AA29 C1           	pop bc
  81  AA2A D1           	pop de
  82  AA2B E1           	pop hl
  83  AA2C D9           	exx
  84  AA2D C1           	pop bc
  85  AA2E D1           	pop de
  86  AA2F E1           	pop hl
  87  AA30 08           	ex af,af'
  88  AA31 F1           	pop af
  89  AA32 08           	ex af,af'
  90  AA33 D9           	exx
  91  AA34
  92  AA34 ED 7B B7 87  	ld sp,(Stack_3)
  93  AA38
  94  AA38 FB           	ei
  95  AA39
  96  AA39 3E 01        	ld a,1												; Borde azul.
  97  AA3B D3 FE        	out ($fe),a
  98  AA3D
  99  AA3D C9           	ret
 100  AA3E
 101  AA3E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA3E
 103  AA3E              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA3E              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA3E              ;
   3+ AA3E              ;	17/02/23
   4+ AA3E              ;
   5+ AA3E              ;	Sprites e índices.
   6+ AA3E
   7+ AA3E              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 84EC              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 84EC
   5+ 84EC              ; 19/01/24
   6+ 84EC
   7+ 84EC 5B 9B        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
   8+ 84EE              ;	defw ...
   9+ 84EE              ; 	defw ...
  10+ 84EE 00 00        	defw 0
  11+ 84F0
  12+ 84F0              ; Control. %00000001 00000001
  13+ 84F0              ;
  14+ 84F0              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  15+ 84F0              ;                    _ hacen las entidades hacia abajo.
  16+ 84F0              ;
  17+ 84F0              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  18+ 84F0
  19+ 84F0 F6 84        Indice_de_disparos_Amadeus defw Disparo_1A
  20+ 84F2 FE 84        	defw Disparo_2A
  21+ 84F4 06 85        	defw Disparo_3A
  22+ 84F6
  23+ 84F6 00 00        Disparo_1A defw 0									; Control.
  24+ 84F8 00 00        	defw 0											; Puntero objeto.
  25+ 84FA 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  26+ 84FC 00 00        	defw 0											; Rutina de impresión.
  27+ 84FE
  28+ 84FE 00 00        Disparo_2A defw 0									; Control.
  29+ 8500 00 00        	defw 0											; Puntero objeto.
  30+ 8502 00 00        	defw 0											; Puntero de impresión.
  31+ 8504 00 00        	defw 0											; Rutina de impresión.
  32+ 8506
  33+ 8506 00 00        Disparo_3A defw 0
  34+ 8508
  35+ 8508 1E 85        Indice_de_disparos_entidades defw Disparo_1
  36+ 850A 26 85        	defw Disparo_2
  37+ 850C 2E 85        	defw Disparo_3
  38+ 850E 36 85        	defw Disparo_4
  39+ 8510 3E 85        	defw Disparo_5
  40+ 8512 46 85        	defw Disparo_6
  41+ 8514 4E 85        	defw Disparo_7
  42+ 8516 56 85        	defw Disparo_8
  43+ 8518 5E 85        	defw Disparo_9
  44+ 851A 66 85        	defw Disparo_10
  45+ 851C 6E 85        	defw Disparo_11
  46+ 851E
  47+ 851E 00 00        Disparo_1 defw 0									; Control.
  48+ 8520 00 00        	defw 0											; Puntero objeto.
  49+ 8522 00 00        	defw 0											; Puntero de impresión.
  50+ 8524 00 00        	defw 0											; Rutina de impresión.
  51+ 8526
  52+ 8526 00 00        Disparo_2 defw 0									; Control.
  53+ 8528 00 00        	defw 0											; Puntero objeto.
  54+ 852A 00 00        	defw 0											; Puntero de impresión.
  55+ 852C 00 00        	defw 0											; Rutina de impresión.
  56+ 852E
  57+ 852E 00 00        Disparo_3 defw 0									; Control.
  58+ 8530 00 00        	defw 0											; Puntero objeto.
  59+ 8532 00 00        	defw 0											; Puntero de impresión.
  60+ 8534 00 00        	defw 0											; Rutina de impresión.
  61+ 8536
  62+ 8536 00 00        Disparo_4 defw 0									; Control.
  63+ 8538 00 00        	defw 0											; Puntero objeto.
  64+ 853A 00 00        	defw 0											; Puntero de impresión.
  65+ 853C 00 00        	defw 0											; Rutina de impresión.
  66+ 853E
  67+ 853E 00 00        Disparo_5 defw 0									; Control.
  68+ 8540 00 00        	defw 0											; Puntero objeto.
  69+ 8542 00 00        	defw 0											; Puntero de impresión.
  70+ 8544 00 00        	defw 0											; Rutina de impresión.
  71+ 8546
  72+ 8546 00 00        Disparo_6 defw 0									; Control.
  73+ 8548 00 00        	defw 0											; Puntero objeto.
  74+ 854A 00 00        	defw 0											; Puntero de impresión.
  75+ 854C 00 00        	defw 0											; Rutina de impresión.
  76+ 854E
  77+ 854E 00 00        Disparo_7 defw 0									; Control.
  78+ 8550 00 00        	defw 0											; Puntero objeto.
  79+ 8552 00 00        	defw 0											; Puntero de impresión.
  80+ 8554 00 00        	defw 0											; Rutina de impresión.
  81+ 8556
  82+ 8556 00 00        Disparo_8 defw 0									; Control.
  83+ 8558 00 00        	defw 0											; Puntero objeto.
  84+ 855A 00 00        	defw 0											; Puntero de impresión.
  85+ 855C 00 00        	defw 0											; Rutina de impresión.
  86+ 855E
  87+ 855E 00 00        Disparo_9 defw 0									; Control.
  88+ 8560 00 00        	defw 0											; Puntero objeto.
  89+ 8562 00 00        	defw 0											; Puntero de impresión.
  90+ 8564 00 00        	defw 0											; Rutina de impresión.
  91+ 8566
  92+ 8566 00 00        Disparo_10 defw 0									; Control.
  93+ 8568 00 00        	defw 0											; Puntero objeto.
  94+ 856A 00 00        	defw 0											; Puntero de impresión.
  95+ 856C 00 00        	defw 0											; Rutina de impresión.
  96+ 856E
  97+ 856E 00 00        Disparo_11 defw 0
  98+ 8570
  99+ 8570              ; -------------------------------------------------------------------------------------
 100+ 8570              ;
 101+ 8570              ;	Índice de cajas de entidades.
 102+ 8570              ;
 103+ 8570              ;	18/1/24
 104+ 8570              ;
 105+ 8570
 106+ 8570              Indice_de_cajas_de_entidades
 107+ 8570
 108+ 8570 B8 85        	defw Caja_1
 109+ 8572 C4 85        	defw Caja_2
 110+ 8574 D0 85        	defw Caja_3
 111+ 8576 DC 85        	defw Caja_4
 112+ 8578 E8 85        	defw Caja_5
 113+ 857A F4 85        	defw Caja_6
 114+ 857C 00 86        	defw Caja_7
 115+ 857E
 116+ 857E 00 00        	defw 0
 117+ 8580 00 00        	defw 0
 118+ 8582
 119+ 8582              ; ---------- ---------- ---------- ---------- ----------
 120+ 8582
 121+ 8582 00 02 02     Amadeus_db db 0,2,2										; (Tipo) / (Filas) / (Columns).
 122+ 8585 00 00        	defw 0		 										; (Posicion_actual).
 123+ 8587 00 00        	defw 0	 											; (Puntero_objeto).
 124+ 8589 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 125+ 858B
 126+ 858B 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 127+ 858C 05           	db %00000101										; (Attr).
 128+ 858D 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 129+ 858F 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 130+ 8591 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 131+ 8593 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 132+ 8595 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 133+ 8597 04           	db 4 												; (Cuad_objeto).
 134+ 8598 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 135+ 8599 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859F
 137+ 859F 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 138+ 85A1
 139+ 85A1 06 E7        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 140+ 85A3 00 00        	defw 0 												; Contador_de_mov_masticados
 141+ 85A5 40           	db $40												; (Ctrl_0).
 142+ 85A6 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 142+ 85AA 00 00
 143+ 85AC 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 144+ 85AF 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 145+ 85B1 00           	db 0												; (Cola_de_desplazamiento).
 146+ 85B2 00           	db 0 												; (Columnas).
 147+ 85B3 00 00        	defw 0												; (Limite_horizontal).
 148+ 85B5 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 149+ 85B8
 150+ 85B8              ; ---------- ---------- ---------- ---------- ----------
 151+ 85B8              ;
 152+ 85B8              ;	22/01/24
 153+ 85B8              ;
 154+ 85B8              ; 	Cada caja tiene 12 bytes !!!
 155+ 85B8
 156+ 85B8 00 00        Caja_1 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 157+ 85BA 00           	db %00000000										; (Attr).
 158+ 85BB              ;	db 0												; (Cuad_objeto).
 159+ 85BB 00           	db 0												; (Impacto).
 160+ 85BC 00 00        	defw 0												; (Puntero_de_impresion).
 161+ 85BE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 162+ 85C0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 163+ 85C2 00           	db 0												; (Ctrl_0).
 164+ 85C3 00           	db 0												; (Ctrl_2).
 165+ 85C4
 166+ 85C4              ; ---------- ---------- ---------- ---------- ----------
 167+ 85C4
 168+ 85C4 00 00        Caja_2 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 169+ 85C6 00           	db %00000000										; (Attr).
 170+ 85C7              ;	db 0												; (Cuad_objeto).
 171+ 85C7 00           	db 0												; (Impacto).
 172+ 85C8 00 00        	defw 0												; (Puntero_de_impresion).
 173+ 85CA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 174+ 85CC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 175+ 85CE 00           	db 0												; (Ctrl_0).
 176+ 85CF 00           	db 0												; (Ctrl_2).
 177+ 85D0
 178+ 85D0              ; ---------- ---------- ---------- ---------- ----------
 179+ 85D0
 180+ 85D0 00 00        Caja_3 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 181+ 85D2 00           	db %00000000										; (Attr).
 182+ 85D3              ;	db 0												; (Cuad_objeto).
 183+ 85D3 00           	db 0												; (Impacto).
 184+ 85D4 00 00        	defw 0												; (Puntero_de_impresion).
 185+ 85D6 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 186+ 85D8 00 00        	defw 0 												; (Contador_de_mov_masticados).
 187+ 85DA 00           	db 0												; (Ctrl_0).
 188+ 85DB 00           	db 0												; (Ctrl_2).
 189+ 85DC
 190+ 85DC              ; ---------- ---------- ---------- ---------- ----------
 191+ 85DC
 192+ 85DC 00 00        Caja_4 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 193+ 85DE 00           	db %00000000										; (Attr).
 194+ 85DF              ;	db 0												; (Cuad_objeto).
 195+ 85DF 00           	db 0												; (Impacto).
 196+ 85E0 00 00        	defw 0												; (Puntero_de_impresion).
 197+ 85E2 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 198+ 85E4 00 00        	defw 0 												; (Contador_de_mov_masticados).
 199+ 85E6 00           	db 0												; (Ctrl_0).
 200+ 85E7 00           	db 0												; (Ctrl_2).
 201+ 85E8
 202+ 85E8              ; ---------- ---------- ---------- ---------- ----------
 203+ 85E8
 204+ 85E8 00 00        Caja_5 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 205+ 85EA 00           	db %00000000										; (Attr).
 206+ 85EB              ;	db 0												; (Cuad_objeto).
 207+ 85EB 00           	db 0												; (Impacto).
 208+ 85EC 00 00        	defw 0												; (Puntero_de_impresion).
 209+ 85EE 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 210+ 85F0 00 00        	defw 0 												; (Contador_de_mov_masticados).
 211+ 85F2 00           	db 0												; (Ctrl_0).
 212+ 85F3 00           	db 0												; (Ctrl_2).
 213+ 85F4
 214+ 85F4              ; ---------- ---------- ---------- ---------- ----------
 215+ 85F4
 216+ 85F4 00 00        Caja_6 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 217+ 85F6 00           	db %00000000										; (Attr).
 218+ 85F7              ;	db 0												; (Cuad_objeto).
 219+ 85F7 00           	db 0												; (Impacto).
 220+ 85F8 00 00        	defw 0												; (Puntero_de_impresion).
 221+ 85FA 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 222+ 85FC 00 00        	defw 0 												; (Contador_de_mov_masticados).
 223+ 85FE 00           	db 0												; (Ctrl_0).
 224+ 85FF 00           	db 0												; (Ctrl_2).
 225+ 8600
 226+ 8600              ; ---------- ---------- ---------- ---------- ----------
 227+ 8600
 228+ 8600 00 00        Caja_7 db 0,0											; (Coordenada_X) / (Coordenada_Y).
 229+ 8602 00           	db %00000000										; (Attr).
 230+ 8603              ;	db 0												; (Cuad_objeto).
 231+ 8603 00           	db 0												; (Impacto).
 232+ 8604 00 00        	defw 0												; (Puntero_de_impresion).
 233+ 8606 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 234+ 8608 00 00        	defw 0 												; (Contador_de_mov_masticados).
 235+ 860A 00           	db 0												; (Ctrl_0).
 236+ 860B 00           	db 0												; (Ctrl_2).
 237+ 860C
 238+ 860C              ; -------------------------------------------------------------------------------------
 239+ 860C              ;
 240+ 860C              ;	11/1/24
 241+ 860C              ;
 242+ 860C              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 243+ 860C              ;
 244+ 860C              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 245+ 860C              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 246+ 860C              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 247+ 860C              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 248+ 860C
 249+ 860C              Indice_de_definiciones_de_entidades
 250+ 860C
 251+ 860C 10 86        	defw Entidad_1
 252+ 860E 1D 86        	defw Entidad_2
 253+ 8610
 254+ 8610              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 255+ 8610
 256+ 8610              ;	BADSAT, (Satélite malvado).
 257+ 8610
 258+ 8610 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 259+ 8613 04           	db %00000100										; (Attr).
 260+ 8614 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 261+ 8616 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 262+ 8618 03 40        	defw $4003                                      	; (Posicion_inicio).
 263+ 861A 01           	db 1												; (Cuad_objeto).
 264+ 861B 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 265+ 861D
 266+ 861D 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 267+ 8620 02           	db %00000010										; (Attr).
 268+ 8621 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 269+ 8623 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 270+ 8625 40 50        	defw $5040                                      	; (Posicion_inicio).
 271+ 8627 01           	db 1												; (Cuad_objeto).
 272+ 8628 00 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 273+ 862A
# file closed: Cajas_y_disparos.asm
 105  862A              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 862A              ; 19/1/24
   2+ 862A
   3+ 862A              Indice_de_niveles
   4+ 862A
   5+ 862A 32 86        	defw Nivel_1
   6+ 862C 38 86        	defw Nivel_2
   7+ 862E
   8+ 862E              ;	...
   9+ 862E              ;	...
  10+ 862E              ;	+ Niveles ...
  11+ 862E
  12+ 862E 00 00        	defw 0
  13+ 8630 00 00        	defw 0
  14+ 8632
  15+ 8632 01           Nivel_1 db 1									; Nº de entidades.
  16+ 8633 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 8637 01           	db 1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 8638
  19+ 8638 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 8639 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 863D 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 8641 01 02
  22+ 8643 02 01 01 01  	db 2,1,1,1,1,2
  22+ 8647 01 02
  23+ 8649
  24+ 8649              ;---------------------------------------------------------------------------------------------------------------
  25+ 8649              ;
  26+ 8649              ;   19/1/24
  27+ 8649              ;
  28+ 8649              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
  29+ 8649              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
  30+ 8649              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
  31+ 8649              ;	_ de la 1ª entidad del Nivel.
  32+ 8649              ;
  33+ 8649              ;	MODIFICA: HL,DE y A.
  34+ 8649              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  35+ 8649
  36+ 8649              Inicializa_Nivel
  37+ 8649
  38+ 8649 2A E0 87     	ld hl,(Puntero_indice_NIVELES)
  39+ 864C CD 31 8B     	call Extrae_address
  40+ 864F 7E           	ld a,(hl)
  41+ 8650 32 AB 87     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  42+ 8653 23           	inc hl
  43+ 8654 CD 5E 86     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  44+ 8657 22 E2 87     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica__
  45+ 865A CD 67 86     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. (Coreografía).
  46+ 865D C9           	ret 										 ; _ el (Tipo) de la 1ª entidad del Nivel.
  47+ 865E
  48+ 865E              ; ----------------------
  49+ 865E
  50+ 865E 11 8A 87     Fija_velocidades ld de,Perfiles_de_velocidad
  51+ 8661 01 04 00     	ld bc,4
  52+ 8664 ED B0        	ldir
  53+ 8666 C9           	ret
  54+ 8667
  55+ 8667 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  56+ 8668 CD BC 86         call Calcula_salto_en_BC
  57+ 866B 21 EC 84         ld hl,Indice_de_mov_segun_tipo_de_entidad
  58+ 866E A7               and a
  59+ 866F ED 4A            adc hl,bc
  60+ 8671 CD 31 8B         call Extrae_address
  61+ 8674 22 96 87         ld (Puntero_indice_mov),hl
  62+ 8677 C9               ret
  63+ 8678
  64+ 8678              ;---------------------------------------------------------------------------------------------------------------
  65+ 8678              ;
  66+ 8678              ;   5/1/24
  67+ 8678              ;
  68+ 8678              ;	Destruye A,BC,HL,DE
  69+ 8678
  70+ 8678              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  71+ 8678              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  72+ 8678
  73+ 8678              Prepara_cajas_de_entidades
  74+ 8678
  75+ 8678              ; Preparamos los punteros de las cajas de entidades:
  76+ 8678
  77+ 8678 21 70 85     	ld hl,Indice_de_cajas_de_entidades
  78+ 867B CD 31 8B     	call Extrae_address
  79+ 867E CD CE 86     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  80+ 8681              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  81+ 8681 CD 43 87     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  82+ 8684
  83+ 8684              Tipo_de_entidad
  84+ 8684
  85+ 8684 2A E2 87     	ld hl,(Datos_de_nivel)
  86+ 8687 7E           	ld a,(hl)
  87+ 8688 3D           	dec a
  88+ 8689 20 FE        	jr nz,$														; STOP si no es una entidad de tipo 1.
  89+ 868B
  90+ 868B 21 C2 87     	ld hl,Ctrl_4
  91+ 868E CB 46        	bit 0,(hl)
  92+ 8690 20 FE        	jr nz,$														; STOP si ya hemos generado todos los movimientos masticados de una entidad Tipo 1.
  93+ 8692 CB E6        	set 4,(hl)													; FLAG que indica que hemos completado todos los movimientos masticados de una entidad tipo 1.
  94+ 8694
  95+ 8694              ;	La 1ª entidad del Nivel es una Entidad de tipo 1.
  96+ 8694              ;	Vamos a cargar la definición de una entidad de tipo 1 en DRAW para poder generar todos sus movimientos masticados.
  97+ 8694
  98+ 8694 2A E2 87     	ld hl,(Datos_de_nivel)
  99+ 8697
 100+ 8697              ; En este punto:
 101+ 8697              ;
 102+ 8697              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
 103+ 8697              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
 104+ 8697
 105+ 8697 C5           1 push bc 												; Guardo el nº de cajas a rellenar.
 106+ 8698
 107+ 8698 7E           	ld a,(hl)											; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 108+ 8699 CD BC 86     	call Calcula_salto_en_BC							; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 109+ 869C
 110+ 869C 21 0C 86     	ld hl,Indice_de_definiciones_de_entidades
 111+ 869F CD C4 86     	call Situa_en_datos_de_definicion					; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 112+ 86A2              ;
 113+ 86A2 CD D8 86     	call Definicion_de_entidad_a_bandeja_DRAW			; Vuelca los datos de la definición en DRAW.
 114+ 86A5 CD E9 89     	call Construye_movimientos_masticados_entidad
 115+ 86A8
 116+ 86A8              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 117+ 86A8              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 118+ 86A8              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 119+ 86A8              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 120+ 86A8              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 121+ 86A8
 122+ 86A8 CD 3E 8A     	call Cargamos_registros_con_mov_masticado
 123+ 86AB CD 16 71     	call Guarda_foto_registros
 124+ 86AE F3           	di
 125+ 86AF
 126+ 86AF              ;														; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 127+ 86AF
 128+ 86AF              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 129+ 86AF              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 130+ 86AF
 131+ 86AF              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 132+ 86AF
 133+ 86AF 18 FE        	jr $
 134+ 86B1
 135+ 86B1              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 136+ 86B1
 137+ 86B1 2A 7D 87     	ld hl,(Puntero_de_impresion)
 138+ 86B4 CD 08 9B     	call Genera_coordenadas
 139+ 86B7
 140+ 86B7 CD 6C 8B     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 141+ 86BA
 142+ 86BA
 143+ 86BA
 144+ 86BA C9           	ret
 145+ 86BB
 146+ 86BB              ;	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
 147+ 86BB              ;	call Extrae_address
 148+ 86BB              ;	call Avanza_caja_de_entidades
 149+ 86BB
 150+ 86BB              ;	ld hl,(Datos_de_nivel)
 151+ 86BB              ;	inc hl
 152+ 86BB              ;	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 153+ 86BB
 154+ 86BB              ;	pop bc
 155+ 86BB              ;	djnz 1B
 156+ 86BB
 157+ 86BB C9           	ret
 158+ 86BC
 159+ 86BC              ;	------------------------------------------------------------------------------------
 160+ 86BC              ;
 161+ 86BC              ;	12/01/24
 162+ 86BC              ;
 163+ 86BC              ;	INPUTS:	A contiene el (Tipo) de entidad.
 164+ 86BC              ;
 165+ 86BC              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 166+ 86BC              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 167+ 86BC
 168+ 86BC CB 27        Calcula_salto_en_BC sla a
 169+ 86BE D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 170+ 86C0 4F           	ld c,a
 171+ 86C1 06 00        	ld b,0
 172+ 86C3 C9           	ret
 173+ 86C4
 174+ 86C4              ; ------------------------------------------------------------------
 175+ 86C4              ;
 176+ 86C4              ;	19/1/24
 177+ 86C4              ;
 178+ 86C4              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 179+ 86C4              ;	Actualiza (Datos_de_entidad) con esa dirección.
 180+ 86C4
 181+ 86C4 A7           Situa_en_datos_de_definicion and a
 182+ 86C5 ED 4A        	adc hl,bc
 183+ 86C7 CD 31 8B     	call Extrae_address
 184+ 86CA 22 B1 87         ld (Datos_de_entidad),hl
 185+ 86CD C9           	ret
 186+ 86CE
 187+ 86CE              ; ------------------------------------------------------------------
 188+ 86CE
 189+ 86CE 22 A5 87     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 190+ 86D1 13           	inc de
 191+ 86D2 13           	inc de
 192+ 86D3 EB           	ex de,hl
 193+ 86D4 22 A9 87     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 194+ 86D7 C9           	ret
 195+ 86D8
 196+ 86D8              ; ----------------------------------------------------------------------------------------------------------
 197+ 86D8              ;
 198+ 86D8              ;	19/1/24
 199+ 86D8              ;
 200+ 86D8              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 201+ 86D8              ;	_ de entidad.
 202+ 86D8              ;
 203+ 86D8              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 204+ 86D8              ;			DE apunta al 1er .db de la bandeja DRAW, (Tipo).
 205+ 86D8              ;
 206+ 86D8              ;	MODIFICA: HL,DE y BC
 207+ 86D8
 208+ 86D8
 209+ 86D8              Definicion_de_entidad_a_bandeja_DRAW
 210+ 86D8
 211+ 86D8 11 60 87     	ld de,Variables_DRAW	 					; DE apunta al 1er .db de las variables DRAW
 212+ 86DB
 213+ 86DB 01 03 00     	ld bc,3
 214+ 86DE ED B0        	ldir 										; Hemos volcado (Tipo), (Filas) y (Columns).
 215+ 86E0              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 216+ 86E0 01 07 00     	ld bc,7
 217+ 86E3 CD 39 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 218+ 86E6
 219+ 86E6 01 05 00     	ld bc,5
 220+ 86E9 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 221+ 86EB              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 222+ 86EB 01 04 00     	ld bc,4
 223+ 86EE CD 39 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 224+ 86F1
 225+ 86F1 01 03 00     	ld bc,3
 226+ 86F4 ED B0        	ldir										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 227+ 86F6              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 228+ 86F6
 229+ 86F6 01 09 00     	ld bc,9
 230+ 86F9 CD 39 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 231+ 86FC
 232+ 86FC 01 02 00     	ld bc,2
 233+ 86FF ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 234+ 8701
 235+ 8701 01 08 00     	ld bc,8
 236+ 8704 CD 39 87     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 237+ 8707
 238+ 8707 3E 03        	ld a,3 										; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 239+ 8709 12           	ld (de),a 									; Vuelco (Frames_explosion).
 240+ 870A
 241+ 870A C9           	ret
 242+ 870B
 243+ 870B              ; ----------------------------------------------------------------------------------------------------------
 244+ 870B              ;
 245+ 870B              ;	22/01/24
 246+ 870B              ;
 247+ 870B              ;	Guarda la definición que ha generado los movimientos masticados de este tipo de entidad en su correspondiente caja.
 248+ 870B              ;
 249+ 870B              ;	Las cajas contienen entidades iniciadas:
 250+ 870B              ;
 251+ 870B              ;	Disponen de un (Puntero_de_impresión), (Coordenadas X e Y), ...
 252+ 870B              ;
 253+ 870B              ;	OUTPUT: HL apunta al .db (Ctrl_2) de la bandeja DRAW.
 254+ 870B              ;			DE apunta al 1er .db de la siguiente caja de entidades.
 255+ 870B              ;
 256+ 870B              ;	MODIFICA: HL,DE y BC
 257+ 870B
 258+ 870B 21 67 87     Parametros_de_bandeja_DRAW_a_caja ld hl,Variables_DRAW+7	; HL situado en (Coordenada_X) de la bandeja DRAW.
 259+ 870E ED 5B A5 87  	ld de,(Puntero_store_caja) 								; DE situado en el 1er .db de la correspondiente caja de entidades.
 260+ 8712 01 02 00     	ld bc,2
 261+ 8715 ED B0        	ldir 													; Hemos volcado (Coordenada_X) y (Coordenada_y).
 262+ 8717              ;															; DE apunta ahora a (Attr) de la caja de entidades. Hemos de recolocar HL.
 263+ 8717 23           	inc hl
 264+ 8718 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (attr).
 265+ 8719 12           	ld (de),a
 266+ 871A 13           	inc de 													; DE apunta a (Impacto), situamos HL.
 267+ 871B
 268+ 871B 01 0C 00     	ld bc,12
 269+ 871E CD 3F 87     	call Situa_HL
 270+ 8721 7E           	ld a,(hl)			 									; HL, situado ahora correctamente: (Impacto).
 271+ 8722 12           	ld (de),a
 272+ 8723 13           	inc de 													; (Impacto), volcado a la caja.
 273+ 8724              ;															; DE situado ahora en (Puntero_de_impresion).
 274+ 8724 01 07 00     	ld bc,7
 275+ 8727 CD 3F 87     	call Situa_HL
 276+ 872A 01 07 00     	ld bc,7
 277+ 872D ED B0        	ldir													; Hemos volcado (Puntero_de_impresion), (Puntero_de_almacen_de_mov_masticados), _
 278+ 872F              ; 															; _ (Contador_de_mov_masticados) y (Ctrl_0).
 279+ 872F              ;															; HL apunta ahora a (Columnas).
 280+ 872F 01 04 00     	ld bc,4
 281+ 8732 CD 3F 87     	call Situa_HL
 282+ 8735 7E           	ld a,(hl)
 283+ 8736 12           	ld (de),a 												; Volcamos (Ctrl_2).
 284+ 8737 13           	inc de
 285+ 8738
 286+ 8738 C9           	ret
 287+ 8739
 288+ 8739              ; -------------------------------------------------------------
 289+ 8739
 290+ 8739 EB           Situa_DE ex de,hl
 291+ 873A A7           	and a
 292+ 873B ED 4A        	adc hl,bc
 293+ 873D EB           	ex de,hl
 294+ 873E C9           	ret
 295+ 873F
 296+ 873F A7           Situa_HL and a
 297+ 8740 ED 4A        	adc hl,bc
 298+ 8742 C9           	ret
 299+ 8743
 300+ 8743              ;---------------------------------------------------------------------------------------------------------------
 301+ 8743              ;
 302+ 8743              ;	5/1/24
 303+ 8743              ;
 304+ 8743              ;	INICIALIZA (Numero_parcial_de_entidades).
 305+ 8743              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 306+ 8743              ;
 307+ 8743              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 308+ 8743              ;
 309+ 8743              ;	(Numero_parcial_de_entidades)="7".
 310+ 8743              ;
 311+ 8743              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 312+ 8743              ;
 313+ 8743              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 314+ 8743              ;
 315+ 8743              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 316+ 8743              ;	MODIFICA: A y B.
 317+ 8743              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 318+ 8743
 319+ 8743              Inicializa_Numero_parcial_de_entidades
 320+ 8743
 321+ 8743              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 322+ 8743
 323+ 8743 3A AB 87     	ld a,(Numero_de_entidades)
 324+ 8746 A7           	and a
 325+ 8747
 326+ 8747              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 327+ 8747              ;	jr z,$
 328+ 8747              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 329+ 8747
 330+ 8747 20 03        	jr nz,3F
 331+ 8749
 332+ 8749              ; ---------- ---------- ----------
 333+ 8749
 334+ 8749              ;! RESET para pruebas. Omitir esta línea en modo normal.
 335+ 8749              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 336+ 8749
 337+ 8749 CD 49 86     	call Inicializa_Nivel							 ; Inicializa el 1er NIVEL.
 338+ 874C
 339+ 874C              ; ---------- ---------- ----------
 340+ 874C
 341+ 874C 3A AB 87     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 342+ 874F FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 343+ 8751 38 08        	jr c,1F
 344+ 8753
 345+ 8753              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 346+ 8753              ; Actualizamos variables.
 347+ 8753
 348+ 8753 3E 07        	ld a,7
 349+ 8755 32 AC 87     	ld (Numero_parcial_de_entidades),a
 350+ 8758 47           	ld b,a
 351+ 8759 18 04        	jr 2F
 352+ 875B
 353+ 875B              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 354+ 875B              ; (Numero_de_entidades)="0".
 355+ 875B
 356+ 875B 32 AC 87     1 ld (Numero_parcial_de_entidades),a
 357+ 875E 47           	ld b,a
 358+ 875F C9           2 ret
# file closed: Niveles.asm
 106  8760
 107  8760              ; ******************************************************************************************************************************************************************************************
 108  8760              ; Constantes.
 109  8760              ; ******************************************************************************************************************************************************************************************
 110  8760              ;
 111  8760              ; 25/12/23
 112  8760
 113  8760              ;
 114  8760              ; Constantes.
 115  8760              ;
 116  8760
 117  8760              Sprite_vacio equ $f000
 118  8760              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  8760              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  8760              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  8760              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  8760
 123  8760              Almacen_de_movimientos_masticados_Entidad_1 equ $eb00	; $eb00 - $ff09 ..... $1409 / 5129 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  8760              ;														;
 125  8760              Almacen_de_movimientos_masticados_Amadeus equ $e700
 126  8760
 127  8760              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 128  8760              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 129  8760              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 130  8760              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 131  8760              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 132  8760
 133  8760              ;														; 55 Bytes.
 134  8760              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 135  8760              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 136  8760
 137  8760              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 138  8760
 139  8760              ; ******************************************************************************************************************************************************************************************
 140  8760              ; Variables.
 141  8760              ; ******************************************************************************************************************************************************************************************
 142  8760              ;
 143  8760              ; 18/01/24
 144  8760              ;
 145  8760              ; Variables de DRAW. (Motor principal).	42 Bytes.
 146  8760              ;
 147  8760
 148  8760              Variables_DRAW ; -----------------------------------------------------------------------------------------------
 149  8760
 150  8760 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 151  8761              ;															- Patrón de movimiento.
 152  8761              ;															- Aspecto
 153  8761 00           Filas db 0												; Filas. [DRAW]
 154  8762 00           Columns db 0  											; Nº de columnas. [DRAW]
 155  8763 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 156  8765 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 157  8767 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  8768 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  8769
 160  8769              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 161  8769
 162  8769 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 163  876A              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 164  876A              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 165  876A 00           Attr db 0												; Atributos de la entidad:
 166  876B
 167  876B              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 168  876B              ;
 169  876B              ;	COLORES: 0 ..... NEGRO
 170  876B              ;    		 1 ..... AZUL
 171  876B              ; 			 2 ..... ROJO
 172  876B              ;			 3 ..... MAGENTA
 173  876B              ; 			 4 ..... VERDE
 174  876B              ; 			 5 ..... CIAN
 175  876B              ;			 6 ..... AMARILLO
 176  876B              ; 			 7 ..... BLANCO
 177  876B
 178  876B 00 00        Indice_Sprite_der defw 0
 179  876D 00 00        Indice_Sprite_izq defw 0
 180  876F 00 00        Puntero_DESPLZ_der defw 0
 181  8771 00 00        Puntero_DESPLZ_izq defw 0
 182  8773
 183  8773 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 184  8775 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 185  8776
 186  8776              ; Variables de objeto. (Características).
 187  8776
 188  8776 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 189  8777              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 190  8777              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 191  8777 00 00 00...  Variables_de_borrado ds 6
 192  877D
 193  877D 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 194  877F              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 195  877F
 196  877F 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 197  8781
 198  8781              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 199  8781              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 200  8781
 201  8781 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 202  8783              ;														; _palabras que componen el "movimiento_masticado".
 203  8783
 204  8783              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 205  8783
 206  8783 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 207  8784              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 208  8784              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 209  8784              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 210  8784              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 211  8784              ;
 212  8784              ; 														DESCRIPCIÖN:
 213  8784              ;
 214  8784              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 215  8784              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 216  8784              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 217  8784              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 218  8784              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 219  8784              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 220  8784              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 221  8784              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 222  8784              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 223  8784              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 224  8784              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 225  8784              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 226  8784              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 227  8784              ;
 228  8784              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 229  8784              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 230  8784              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 231  8784
 232  8784              ; Variables de funcionamiento. [DRAW].
 233  8784
 234  8784 00           Columnas db 0
 235  8785 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 236  8787              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 237  8787 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 238  8788
 239  8788              ; variables de control general.
 240  8788
 241  8788 00           Ctrl_2 db 0
 242  8789              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 243  8789              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 244  8789              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 245  8789              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 246  8789              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 247  8789              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 248  8789              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 249  8789              ;
 250  8789              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 251  8789              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 252  8789              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 253  8789              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 254  8789              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 255  8789              ;														BIT 4, ???
 256  8789              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 257  8789
 258  8789 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 259  878A
 260  878A              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 261  878A
 262  878A              ;					         		---------;      ;---------
 263  878A
 264  878A              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 265  878A
 266  878A              Perfiles_de_velocidad
 267  878A
 268  878A 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 269  878B 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 270  878C 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 271  878D 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 272  878E
 273  878E              ; Contadores de 16 bits.
 274  878E
 275  878E 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 276  8790 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 277  8792 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 278  8794 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 279  8796
 280  8796              ; Movimiento. ------------------------------------------------------------------------------------------------------
 281  8796
 282  8796 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 283  8798 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 284  879A 00 00        Puntero_indice_mov_bucle defw 0							;
 285  879C              ;
 286  879C              ;
 287  879C 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 288  879D              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 289  879D              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 290  879D 00           Incrementa_puntero_backup db 0
 291  879E 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 292  879F              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 293  879F 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 294  87A0 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 295  87A1 00           Cola_de_desplazamiento db 0								; Este byte indica:
 296  87A2              ;
 297  87A2              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 298  87A2              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 299  87A2              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 300  87A2              ;
 301  87A2              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 302  87A2              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 303  87A2              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 304  87A2              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 305  87A2              ;
 306  87A2              ;														;	"$ff" ..... Bucle infinito de repetición.
 307  87A2              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 308  87A2              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 309  87A2              ; Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 310  87A2
 311  87A2 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 312  87A3
 313  87A3              ;														DESCRIPCIÓN:
 314  87A3              ;
 315  87A3              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 316  87A3              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 317  87A3              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 318  87A3              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 319  87A3              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 320  87A3              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 321  87A3
 322  87A3              ;														BIT 3, Recarga de nueva oleada.
 323  87A3              ;														BIT 4, Recarga de nueva oleada.
 324  87A3              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 325  87A3              ;														BIT 6, **** Frame completo.
 326  87A3              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 327  87A3
 328  87A3 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 329  87A5              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 330  87A5              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 331  87A5              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 332  87A5
 333  87A5              ; Gestión de ENTIDADES y CAJAS.
 334  87A5
 335  87A5 00 00        Puntero_store_caja defw 0
 336  87A7 00 00        Puntero_restore_caja defw 0
 337  87A9 00 00        Indice_restore_caja defw 0
 338  87AB 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 339  87AC 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 340  87AD 00           Entidades_en_curso db 0									; ..... ..... .....
 341  87AE 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 342  87AF              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 343  87AF              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 344  87AF              ;														; _ (Numero_de_malotes)="0".
 345  87AF 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 346  87B1 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 347  87B3              ;														; _ puntero (Indice_entidades).
 348  87B3
 349  87B3              ;---------------------------------------------------------------------------------------------------------------
 350  87B3              ;
 351  87B3              ;	11/01/24
 352  87B3              ;
 353  87B3              ;	Álbumes.
 354  87B3
 355  87B3 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 356  87B5              ;														; _variable para almacenar lo posición del puntero_
 357  87B5              ; 														; _de pila, SP.
 358  87B5 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 359  87B7              ;														; La utiliza la rutina [Extrae_foto_registros].
 360  87B7 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 361  87B9 00 70        Stack_snapshot defw Album_de_fotos
 362  87BB 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 363  87BD
 364  87BD              ;End_Snapshot defw Album_de_fotos
 365  87BD              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 366  87BD 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 367  87BF              ;														; _el snapshot de los registros del siguiente disparo.
 368  87BF              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 369  87BF AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 370  87C1
 371  87C1 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 372  87C2              ;
 373  87C2              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 374  87C2              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 375  87C2              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 376  87C2
 377  87C2 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad.
 378  87C3              ;
 379  87C3              ;															BIT 0, "1" Indica que el almacén de movimientos de la Entidad_1 está completo.
 380  87C3
 381  87C3              ; Gestión de Disparos.
 382  87C3
 383  87C3 00           Numero_de_disparotes db 0
 384  87C4 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 385  87C6 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 386  87C8 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 387  87C9              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 388  87C9              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 389  87C9 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 390  87CB              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 391  87CB              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 392  87CB              ;														; _produzca colisión.
 393  87CB 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 394  87CD              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 395  87CD 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 396  87D0              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 397  87D0 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 398  87D3              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 399  87D3 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 400  87D4
 401  87D4              ;---------------------------------------------------------------------------------------------------------------
 402  87D4
 403  87D4              ; Relojes y temporizaciones.
 404  87D4
 405  87D4 00           Contador_de_frames db 0
 406  87D5 00           Contador_de_frames_2 db 0
 407  87D6
 408  87D6 04           Clock_explosion db 4
 409  87D7 14           Clock_Entidades_en_curso db 20
 410  87D8 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 411  87D9              ;														; Repite la oleada de entidades.
 412  87D9 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 413  87DA 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 414  87DB 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 415  87DC
 416  87DC 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 417  87DD 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 418  87DE 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 419  87DF
 420  87DF              ;---------------------------------------------------------------------------------------------------------------
 421  87DF
 422  87DF              ; Gestión de NIVELES.
 423  87DF
 424  87DF 00           Nivel db 0												; Nivel actual del juego.
 425  87E0 00 00        Puntero_indice_NIVELES defw 0
 426  87E2 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 427  87E4              ; 														; _ que definen el NIVEL.
 428  87E4              ; Y todo comienza aquí .....
 429  87E4              ;
 430  87E4              ; 	INICIO  *************************************************************************************************************************************************************************
 431  87E4              ;
 432  87E4              ;	5/1/24
 433  87E4
 434  87E4              START
 435  87E4
 436  87E4 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 437  87E7 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 438  87E9 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 439  87EB ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 440  87ED F3           	DI
 441  87EE
 442  87EE 3E 07        	ld a,%00000111
 443  87F0 CD 7A 97     	call Cls
 444  87F3 CD C5 8B     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 445  87F6
 446  87F6              ; INICIALIZACIÓN.
 447  87F6
 448  87F6              ;	Inicializa 1er Nivel.
 449  87F6
 450  87F6 21 2A 86     	ld hl,Indice_de_niveles
 451  87F9 22 E0 87     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 452  87FC CD 49 86     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 453  87FF              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 454  87FF              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 455  87FF              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 456  87FF
 457  87FF CD 78 86     4 call Prepara_cajas_de_entidades
 458  8802
 459  8802 CD 99 8A     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 460  8805              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 461  8805 CD 75 8B     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 462  8808
 463  8808 21 AC 87     	ld hl,Numero_parcial_de_entidades
 464  880B 46           	ld b,(hl)
 465  880C              ;	inc b
 466  880C              ;	dec b
 467  880C              ;	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 468  880C
 469  880C              ;	INICIA ENTIDADES !!!!!
 470  880C
 471  880C              ;1 push bc  												; Guardo el contador de entidades.
 472  880C              ;	call Inicia_entidad
 473  880C
 474  880C              ;	pop bc
 475  880C              ;	djnz 1B  											; Decremento el contador de entidades.
 476  880C
 477  880C              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 478  880C              ; (Esto se dá cuando se inicia una nueva oleada).
 479  880C
 480  880C              ;	ld a,(Ctrl_1)
 481  880C              ;	bit 3,a
 482  880C              ;	jr nz,5F											; Loop
 483  880C
 484  880C              ; 	INICIA AMADEUS !!!!!
 485  880C
 486  880C              ;3 call Restore_Amadeus
 487  880C              ;	call Inicia_Puntero_objeto
 488  880C              ;	call Draw
 489  880C
 490  880C              ;	call Guarda_movimiento_masticado	;! Provisional
 491  880C
 492  880C              ;	call Guarda_foto_registros
 493  880C              ;	call Guarda_datos_de_borrado_Amadeus
 494  880C
 495  880C              ;	ld de,Amadeus_db
 496  880C              ;	call Store_Amadeus
 497  880C
 498  880C              ; 	INICIA DISPAROS !!!!!
 499  880C
 500  880C              ;	call Inicia_Puntero_Disparo_Entidades
 501  880C              ;	call Inicia_Puntero_Disparo_Amadeus
 502  880C
 503  880C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 504  880C
 505  880C CD 99 8A     5 call Inicia_punteros_de_cajas
 506  880F CD 75 8B     	call Restore_entidad
 507  8812
 508  8812 3A A2 87     	ld a,(Ctrl_1)
 509  8815 CB 5F        	bit 3,a
 510  8817 28 07        	jr z,6F
 511  8819
 512  8819              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 513  8819
 514  8819 21 A2 87     	ld hl,Ctrl_1
 515  881C CB 9E        	res 3,(hl)
 516  881E 18 07        	jr Main
 517  8820
 518  8820              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 519  8820
 520  8820 21 C1 87     6 ld hl,Ctrl_3
 521  8823 CB C6        	set 0,(hl)											; Frame completo.
 522  8825 FB           	ei
 523  8826 76           	halt
 524  8827
 525  8827              ; ------------------------------------
 526  8827
 527  8827              Main
 528  8827              ;
 529  8827              ;	11/12/23
 530  8827
 531  8827              ; Aparece nueva entidad ???
 532  8827
 533  8827              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 534  8827              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 535  8827              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 536  8827              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 537  8827              ;														; _un 2º bloque.
 538  8827
 539  8827 3E 01        	ld a,1
 540  8829 D3 FE        	out ($fe),a
 541  882B
 542  882B 3A D7 87     	ld a,(Clock_Entidades_en_curso)
 543  882E 47           	ld b,a
 544  882F 3A D4 87     	ld a,(Contador_de_frames)
 545  8832 B8           	cp b
 546  8833 20 18        	jr nz,13F
 547  8835
 548  8835              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 549  8835              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 550  8835
 551  8835 3A AC 87     21 ld a,(Numero_parcial_de_entidades)
 552  8838 47           	ld b,a
 553  8839 3A AD 87     	ld a,(Entidades_en_curso)
 554  883C B8           	cp b
 555  883D 28 0E        	jr z,13F
 556  883F 30 0C        	jr nc,13F
 557  8841
 558  8841 3C           	inc a
 559  8842 32 AD 87     	ld (Entidades_en_curso),a
 560  8845
 561  8845              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 562  8845
 563  8845 3A D7 87     	ld a,(Clock_Entidades_en_curso)
 564  8848              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 565  8848              ;! _ IMPREDECIBLE !!!!
 566  8848 C6 64        	add 100
 567  884A 32 D7 87     	ld (Clock_Entidades_en_curso),a
 568  884D
 569  884D              ; -------------------------------------------------------------------------------------------------------------
 570  884D
 571  884D              ; Habilita disparos.
 572  884D
 573  884D 21 D9 87     13 ld hl,Disparo_Amadeus
 574  8850 11 DB 87     	ld de,CLOCK_repone_disparo_Amadeus
 575  8853 CD 4C 9B     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 576  8856
 577  8856 21 DC 87     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 578  8859 11 DE 87     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 579  885C CD 4C 9B     	call Habilita_disparos
 580  885F
 581  885F              ; COLISIONES.
 582  885F
 583  885F CD 64 90     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 584  8862
 585  8862              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 586  8862              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 587  8862              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 588  8862
 589  8862 AF           	xor a
 590  8863 32 C8 87     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 591  8866
 592  8866 CD 99 8A     	call Inicia_punteros_de_cajas
 593  8869 CD 75 8B     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 594  886C              ; 														; _ en DRAW.
 595  886C 3A 61 87     	ld a,(Filas)
 596  886F A7           	and a
 597  8870 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 598  8872 CD 87 8B     	call Incrementa_punteros_de_cajas
 599  8875 18 F2        	jr 12B
 600  8877
 601  8877              ; ---------------------------------------------------------------------------------------
 602  8877
 603  8877 3A AC 87     10 ld a,(Numero_parcial_de_entidades)
 604  887A 47               ld b,a
 605  887B A7           	and a
 606  887C 20 14        	jr nz,11F
 607  887E
 608  887E 21 A2 87     	ld hl,Ctrl_1
 609  8881 CB 66        	bit 4,(hl)
 610  8883 C2 2B 89     	jp nz,16F
 611  8886
 612  8886              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 613  8886
 614  8886 21 A2 87     	ld hl,Ctrl_1
 615  8889 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 616  888B
 617  888B 3A D4 87     	ld a,(Contador_de_frames)
 618  888E 3C           	inc a
 619  888F 32 D8 87     	ld (Activa_recarga_cajas),a
 620  8892
 621  8892              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 622  8892
 623  8892 3A AD 87     11 ld a,(Entidades_en_curso)
 624  8895 A7           	and a
 625  8896 CA 2B 89     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 626  8899 47           	ld b,a												; No hay entidades que gestionar.
 627  889A
 628  889A              ; ( Código que ejecutamos con cada entidad: ).
 629  889A
 630  889A              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 631  889A
 632  889A C5           15 push bc 												; Nº de entidades en curso.
 633  889B
 634  889B              ; Existe "Entidad_guía" ???.
 635  889B              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 636  889B
 637  889B 3A C1 87     	ld a,(Ctrl_3)
 638  889E CB 4F        	bit 1,a
 639  88A0 20 11        	jr nz,22F
 640  88A2
 641  88A2              ; Almacén de "Movimientos_masticados" lleno ???
 642  88A2              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 643  88A2              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 644  88A2
 645  88A2 3A C1 87     	ld a,(Ctrl_3)
 646  88A5 CB 5F        	bit 3,a
 647  88A7 20 0A        	jr nz,22F
 648  88A9
 649  88A9              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 650  88A9
 651  88A9 21 88 87     	ld hl,Ctrl_2
 652  88AC CB EE        	set 5,(hl)
 653  88AE 21 C1 87     	ld hl,Ctrl_3
 654  88B1 CB CE        	set 1,(hl)
 655  88B3
 656  88B3              ; Impacto ???
 657  88B3
 658  88B3 3A 76 87     22 ld a,(Impacto)
 659  88B6 A7           	and a
 660  88B7 28 31        	jr z,8F
 661  88B9
 662  88B9              ; Hay Impacto en esta entidad.
 663  88B9
 664  88B9 21 D6 87     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 665  88BC 35           	dec (hl)
 666  88BD C2 1E 89     	jp nz,17F
 667  88C0
 668  88C0              ;! Velocidad de la animación de la explosión.
 669  88C0
 670  88C0 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 671  88C2              ;														; _,(velocidad de la explosión).
 672  88C2              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 673  88C2
 674  88C2 CD 39 8C     	call Repone_datos_de_borrado
 675  88C5 CD D7 8A     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 676  88C8
 677  88C8              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 678  88C8
 679  88C8 3A 88 87     	ld a,(Ctrl_2)
 680  88CB CB 4F        	bit 1,a
 681  88CD 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 682  88CF
 683  88CF              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 684  88CF
 685  88CF 3A 69 87     	ld a,(CTRL_DESPLZ)
 686  88D2 A7           	and a
 687  88D3 20 08        	jr nz,18F
 688  88D5
 689  88D5 21 84 84     	ld hl,Indice_Explosion_2x2-2
 690  88D8 22 6F 87     	ld (Puntero_DESPLZ_der),hl
 691  88DB 18 06        	jr 19F
 692  88DD
 693  88DD 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 694  88E0 22 6F 87     	ld (Puntero_DESPLZ_der),hl
 695  88E3
 696  88E3 21 88 87     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 697  88E6 CB CE        	set 1,(hl)
 698  88E8 18 22        	jr 7F
 699  88EA
 700  88EA              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 701  88EA              ; _con las coordenadas de la entidad almacenada en DRAW.
 702  88EA
 703  88EA 3A A2 87     8 ld a,(Ctrl_1)
 704  88ED CB 57        	bit 2,a
 705  88EF 28 1B        	jr z,7F
 706  88F1
 707  88F1 2A CB 87     	ld hl,(Coordenadas_disparo_certero)
 708  88F4 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 709  88F5              ;														; E contiene la coordenada_X del disparo.
 710  88F5 2A 67 87     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 711  88F8              ;														; H FILA, (Coordenada_y de la entidad).
 712  88F8 A7           	and a
 713  88F9 ED 52        	sbc hl,de
 714  88FB
 715  88FB CD 7D 90     	call Determina_resultado_comparativa
 716  88FE
 717  88FE 78           	ld a,b
 718  88FF A7           	and a
 719  8900 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 720  8902
 721  8902              ; ----- ----- -----
 722  8902
 723  8902 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 724  8904 32 76 87     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 725  8907
 726  8907 21 A2 87     	ld hl,Ctrl_1
 727  890A CB 96        	res 2,(hl)
 728  890C
 729  890C CD 7C 89     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 730  890F
 731  890F 3A 83 87     	ld a,(Ctrl_0)
 732  8912 CB 67        	bit 4,a
 733  8914 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 734  8916
 735  8916              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 736  8916              ; [[[
 737  8916              ;	call Detecta_disparo_entidad
 738  8916              ; ]]]
 739  8916
 740  8916 CD 54 8A     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 741  8919
 742  8919 21 83 87     	ld hl,Ctrl_0
 743  891C CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 744  891E
 745  891E CD 6C 8B     17 call Store_Restore_cajas
 746  8921
 747  8921 C1           	pop bc
 748  8922
 749  8922 05           	dec b
 750  8923 C2 9A 88     	jp nz,15B
 751  8926
 752  8926              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 753  8926              ; Hemos gestionado todas las unidades.
 754  8926              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 755  8926
 756  8926 21 A2 87     	ld hl,Ctrl_1
 757  8929 CB 96        	res 2,(hl)
 758  892B
 759  892B 21 C1 87     16 ld hl,Ctrl_3
 760  892E CB C6        	set 0,(hl)											; Frame completo.
 761  8930
 762  8930 AF           	xor a
 763  8931 D3 FE        	out ($fe),a
 764  8933
 765  8933 FB           	ei
 766  8934 76           	halt
 767  8935
 768  8935              ; ----------------------------------------
 769  8935
 770  8935 3A A2 87     	ld a,(Ctrl_1) 										; Existe Loop?
 771  8938 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 772  893A CA 27 88     	jp z,Main
 773  893D
 774  893D              ; RECARGA DE NUEVA OLEADA.
 775  893D
 776  893D 3A D4 87     	ld a,(Contador_de_frames)
 777  8940 47           	ld b,a
 778  8941 3A D8 87     	ld a,(Activa_recarga_cajas)
 779  8944 B8           	cp b
 780  8945 28 08        	jr z,20F
 781  8947
 782  8947 21 A2 87     	ld hl,Ctrl_1
 783  894A CB E6        	set 4,(hl)
 784  894C C3 27 88     	jp Main
 785  894F
 786  894F 21 A2 87     20 ld hl,Ctrl_1
 787  8952 CB A6        	res 4,(hl)
 788  8954
 789  8954 3A D4 87     	ld a,(Contador_de_frames)
 790  8957
 791  8957              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 792  8957              ;! _ IMPREDECIBLE !!!!
 793  8957
 794  8957 C6 0A        	add 10
 795  8959 32 D7 87     	ld (Clock_Entidades_en_curso),a
 796  895C
 797  895C C3 FF 87     	jp 4B
 798  895F
 799  895F C9           	ret
 800  8960
 801  8960              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 802  8960              ;
 803  8960              ;	16/11/23
 804  8960
 805  8960              Gestiona_Amadeus
 806  8960
 807  8960              ;! Activa/desactiva impacto con Amadeus.
 808  8960
 809  8960              ;	ld a,(Impacto)
 810  8960              ;	and a
 811  8960              ;	jr nz,2F
 812  8960
 813  8960 CD D9 89     	call Mov_Amadeus
 814  8963
 815  8963 3A 83 87     2 ld a,(Ctrl_0)
 816  8966 CB 67        	bit 4,a
 817  8968 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 818  896A
 819  896A CD 54 8A     	call Guarda_foto_entidad_a_pintar
 820  896D CD 19 8C     	call Guarda_datos_de_borrado_Amadeus
 821  8970
 822  8970 21 83 87     1 ld hl,Ctrl_0
 823  8973 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 824  8975
 825  8975 CD 08 8F     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 826  8978
 827  8978              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 828  8978
 829  8978 CD 19 8B     	call Calcula_numero_de_disparotes
 830  897B
 831  897B C9           	ret
 832  897C
 833  897C              ; --------------------------------------------------------------------------------------------------------------
 834  897C              ;
 835  897C              ;	15/12/23
 836  897C
 837  897C              Mov_obj
 838  897C
 839  897C 3A 88 87     	ld a,(Ctrl_2)
 840  897F CB 4F        	bit 1,a
 841  8981 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 842  8983
 843  8983              ; Explosión:
 844  8983
 845  8983 3A 89 87     	ld a,(Frames_explosion)
 846  8986 A7           	and a
 847  8987 20 1D        	jr nz,4F
 848  8989
 849  8989              ;!  Una alimaña menos!!!!!!!!!1
 850  8989
 851  8989              ; Se trataba de una Entidad_guía ???
 852  8989
 853  8989 3A 88 87     	ld a,(Ctrl_2)
 854  898C CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 855  898E 28 05        	jr z,5F
 856  8990
 857  8990 21 C1 87     	ld hl,Ctrl_3
 858  8993 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 859  8995
 860  8995              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 861  8995              ;!! _generado puede ser distinto, (aletoriedad).
 862  8995
 863  8995 CD B7 8B     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 864  8998 21 AC 87     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 865  899B 35           	dec (hl)
 866  899C 21 AD 87     	ld hl,Entidades_en_curso
 867  899F 35           	dec (hl)
 868  89A0 21 AB 87     	ld hl,Numero_de_entidades
 869  89A3 35           	dec (hl)
 870  89A4 18 32        	jr 3F
 871  89A6
 872  89A6              ; -----
 873  89A6
 874  89A6              ;	`Movemos´ la explosión.
 875  89A6
 876  89A6 2A 6F 87     4 ld hl,(Puntero_DESPLZ_der)
 877  89A9 23           	inc hl
 878  89AA 23           	inc hl
 879  89AB 22 6F 87     	ld (Puntero_DESPLZ_der),hl
 880  89AE CD 31 8B     	call Extrae_address
 881  89B1 22 65 87     	ld (Puntero_objeto),hl
 882  89B4
 883  89B4 21 89 87     	ld hl,Frames_explosion
 884  89B7 35           	dec (hl)
 885  89B8
 886  89B8 21 83 87     	ld hl,Ctrl_0
 887  89BB CB E6        	set 4,(hl)
 888  89BD
 889  89BD 18 19        	jr 3F
 890  89BF
 891  89BF              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 892  89BF
 893  89BF AF           2 xor a
 894  89C0 32 83 87     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 895  89C3
 896  89C3              ; Movemos Entidades malignas.
 897  89C3              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 898  89C3
 899  89C3              ;	ld a,(Ctrl_2)
 900  89C3              ;	bit 5,a
 901  89C3              ;	jr nz,8F
 902  89C3
 903  89C3              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 904  89C3              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 905  89C3              ;	jr 7F
 906  89C3
 907  89C3              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 908  89C3
 909  89C3              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 910  89C3              ;	bit 4,a
 911  89C3              ;	ret z
 912  89C3
 913  89C3              ; Ha habido desplazamiento de la entidad maligna.
 914  89C3              ; Ha llegado a zona de AMADEUS ???
 915  89C3
 916  89C3 3A 68 87     7 ld a,(Coordenada_y)
 917  89C6 FE 14        	cp $14
 918  89C8 38 08        	jr c,1F
 919  89CA
 920  89CA              ; ---------
 921  89CA
 922  89CA              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 923  89CA              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 924  89CA
 925  89CA F3           	di
 926  89CB CD 2D 8E     	call Genera_coordenadas_X
 927  89CE CD 69 8E     	call Compara_coordenadas_X
 928  89D1 FB           	ei
 929  89D2
 930  89D2              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 931  89D2
 932  89D2              ; ---------
 933  89D2
 934  89D2              1
 935  89D2
 936  89D2              ;	call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 937  89D2 CD 39 8C     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 938  89D5 CD D7 8A     	call Limpia_Variables_de_borrado
 939  89D8
 940  89D8 C9           3 ret
 941  89D9
 942  89D9              ; --------------------------------------------------------------------------------------------------------------
 943  89D9              ;
 944  89D9              ;	29/1/23
 945  89D9
 946  89D9              Mov_Amadeus
 947  89D9
 948  89D9              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 949  89D9
 950  89D9 CD 32 98     	call Mov_right
 951  89DC
 952  89DC 3A 83 87     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 953  89DF CB 67        	bit 4,a
 954  89E1 C8           	ret z
 955  89E2
 956  89E2              ; ---------
 957  89E2
 958  89E2              ;    call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 959  89E2 CD 29 8C     	call Repone_datos_de_borrado_Amadeus
 960  89E5 CD D7 8A     	call Limpia_Variables_de_borrado
 961  89E8
 962  89E8 C9           	ret
 963  89E9
 964  89E9              ; -----------------------------------------------------------------------------------
 965  89E9              ;
 966  89E9              ;	20/01/24
 967  89E9              ;
 968  89E9              ;
 969  89E9
 970  89E9              Construye_movimientos_masticados_entidad
 971  89E9
 972  89E9 2A 7F 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 973  89EC E5           	push hl
 974  89ED
 975  89ED CD 31 8A     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 976  89F0              ;															; _ el (Contador_de_mov_masticados).
 977  89F0 CD 37 8B     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 978  89F3              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 979  89F3 CD 8E 97     	call Recompone_posicion_inicio
 980  89F6
 981  89F6 CD 64 91     1 call Draw
 982  89F9 CD 15 8A     	call Guarda_movimiento_masticado
 983  89FC CD F7 9C     	call Movimiento
 984  89FF
 985  89FF 3A C1 87     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
 986  8A02 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
 987  8A04 28 F0        	jr z,1B
 988  8A06
 989  8A06              ;	Hemos completado el almacén de movimientos masticados de la entidad.
 990  8A06              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
 991  8A06
 992  8A06 E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
 993  8A07 22 7F 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
 994  8A0A
 995  8A0A
 996  8A0A              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
 997  8A0A
 998  8A0A CD 68 9E     	call Vuelca_en_Contador_general_de_mov_masticados
 999  8A0D
1000  8A0D              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1001  8A0D              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1002  8A0D
1003  8A0D ED 4B 81 87  	ld bc,(Contador_de_mov_masticados)
1004  8A11 71           	ld (hl),c
1005  8A12 23           	inc hl
1006  8A13 70           	ld (hl),b
1007  8A14
1008  8A14 C9           	ret
1009  8A15
1010  8A15              ; -----------------------------------------------------------------------------------
1011  8A15              ;
1012  8A15              ;	28/12/23
1013  8A15              ;
1014  8A15              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1015  8A15              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1016  8A15
1017  8A15              Guarda_movimiento_masticado
1018  8A15
1019  8A15 ED 73 B3 87  	ld (Stack),sp
1020  8A19 ED 7B 7F 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1021  8A1D
1022  8A1D E5           	push hl
1023  8A1E DD E5            push ix
1024  8A20 FD E5            push iy
1025  8A22
1026  8A22 ED 7B B3 87      ld sp,(Stack)
1027  8A26
1028  8A26              ;    push hl
1029  8A26
1030  8A26 2A 81 87        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1031  8A29 23           	inc hl
1032  8A2A 22 81 87     	ld (Contador_de_mov_masticados),hl
1033  8A2D
1034  8A2D              ;	pop hl
1035  8A2D
1036  8A2D CD 31 8A         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1037  8A30              ;															; _ el (Contador_de_mov_masticados).
1038  8A30 C9               ret
1039  8A31
1040  8A31              ; --------------------------------------------------------------------------------------------------------------
1041  8A31              ;
1042  8A31              ;	12/1/24
1043  8A31              ;
1044  8A31              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1045  8A31
1046  8A31              Actualiza_Puntero_de_almacen_de_mov_masticados
1047  8A31
1048  8A31              ;	push hl
1049  8A31              ;	push bc
1050  8A31
1051  8A31 2A 7F 87     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1052  8A34 01 06 00     	ld bc,6
1053  8A37 A7           	and a
1054  8A38 ED 4A        	adc hl,bc
1055  8A3A 22 7F 87     	ld (Puntero_de_almacen_de_mov_masticados),hl
1056  8A3D
1057  8A3D              ;	pop bc
1058  8A3D              ;	pop hl
1059  8A3D
1060  8A3D C9           	ret
1061  8A3E
1062  8A3E              ; --------------------------------------------------------------------------------------------------------------
1063  8A3E              ;
1064  8A3E              ;	15/01/24
1065  8A3E              ;
1066  8A3E              ;	Cargamos los registros_
1067  8A3E              ;	_ HL,IX e IY con las 3 palabras que componen el movimiento masticado a ejecutar.
1068  8A3E              ;
1069  8A3E              ;	HL contiene la dirección de la rutina de impresión.
1070  8A3E              ;	IX contiene el puntero de impresión.
1071  8A3E              ;	IY contiene (Puntero_objeto).
1072  8A3E
1073  8A3E
1074  8A3E ED 73 B3 87  Cargamos_registros_con_mov_masticado ld (Stack),sp
1075  8A42 ED 7B 7F 87  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1076  8A46
1077  8A46 FD E1        	pop iy
1078  8A48 DD E1        	pop ix
1079  8A4A E1           	pop hl
1080  8A4B
1081  8A4B ED 73 7F 87  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1082  8A4F
1083  8A4F ED 7B B3 87  	ld sp,(Stack)
1084  8A53
1085  8A53 C9           	ret
1086  8A54
1087  8A54              ; --------------------------------------------------------------------------------------------------------------
1088  8A54              ;
1089  8A54              ;	28/12/23
1090  8A54              ;
1091  8A54              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1092  8A54              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1093  8A54
1094  8A54              Guarda_foto_entidad_a_pintar
1095  8A54
1096  8A54 3A 83 87     	ld a,(Ctrl_0)
1097  8A57 CB 77        	bit 6,a
1098  8A59 28 0E        	jr z,5F
1099  8A5B
1100  8A5B              ;	Guarda la foto de Amadeus.
1101  8A5B
1102  8A5B CD 64 91     	call Draw
1103  8A5E
1104  8A5E CD 15 8A     	call Guarda_movimiento_masticado	;! Provisional
1105  8A61
1106  8A61 CD 16 71     	call Guarda_foto_registros
1107  8A64
1108  8A64 F3           	di
1109  8A65 18 FE        	jr $
1110  8A67 FB           	ei
1111  8A68
1112  8A68 C9           	ret
1113  8A69
1114  8A69              ; ENTIDADES!
1115  8A69              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1116  8A69
1117  8A69 3A C1 87     5 ld a,(Ctrl_3)
1118  8A6C CB 5F        	bit 3,a
1119  8A6E 28 01        	jr z,1F
1120  8A70
1121  8A70              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1122  8A70
1123  8A70              4
1124  8A70              ;	call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1125  8A70 C9           	ret
1126  8A71
1127  8A71              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1128  8A71
1129  8A71 3A C1 87     1 ld a,(Ctrl_3)
1130  8A74 CB 57        	bit 2,a
1131  8A76 20 10        	jr nz,6F
1132  8A78
1133  8A78              ; Entidad guía o fantasma ???
1134  8A78
1135  8A78 3A 88 87     	ld a,(Ctrl_2)
1136  8A7B CB 6F        	bit 5,a
1137  8A7D 20 10        	jr nz,3F
1138  8A7F
1139  8A7F              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1140  8A7F
1141  8A7F 18 EF        	jr 4B
1142  8A81
1143  8A81              ; ENTIDAD_GUÍA:
1144  8A81              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1145  8A81              ; _guardando "movimientos_masticados".
1146  8A81
1147  8A81 3A C1 87     2 ld a,(Ctrl_3)
1148  8A84 CB 57        	bit 2,a
1149  8A86 28 07        	jr z,3F
1150  8A88
1151  8A88              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1152  8A88              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1153  8A88
1154  8A88 CB 97        6 res 2,a
1155  8A8A CB DF        	set 3,a
1156  8A8C 32 C1 87     	ld (Ctrl_3),a
1157  8A8F
1158  8A8F
1159  8A8F              ;	Esto sólo lo ejecuta una entidad guía.
1160  8A8F
1161  8A8F CD 64 91     3 	call Draw
1162  8A92 CD 15 8A     	call Guarda_movimiento_masticado
1163  8A95 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1164  8A98
1165  8A98              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1166  8A98              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1167  8A98
1168  8A98              ;	call Convierte_guia_en_fantasma
1169  8A98 C9           	ret
1170  8A99
1171  8A99              ; --------------------------------------------------------------------------------------------------------------
1172  8A99              ;
1173  8A99              ;	19/9/23
1174  8A99
1175  8A99              ;Prepara_var_pintado
1176  8A99
1177  8A99              ;	ld hl,Filas
1178  8A99              ;	ld de,Variables_de_pintado
1179  8A99              ;	ld bc,8
1180  8A99              ;	ldir
1181  8A99              ;	ret
1182  8A99
1183  8A99              ; --------------------------------------------------------------------------------------------------------------
1184  8A99
1185  8A99              ;Repone_pintar
1186  8A99
1187  8A99              ;	ld hl,Variables_de_pintado
1188  8A99              ;	ld de,Filas
1189  8A99              ;	ld bc,8
1190  8A99              ;	ldir
1191  8A99              ;	ret
1192  8A99
1193  8A99              ; *************************************************************************************************************************************************************
1194  8A99              ;
1195  8A99              ; 8/1/23
1196  8A99              ;
1197  8A99              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1198  8A99              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1199  8A99              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1200  8A99
1201  8A99              ; Destruye HL y DE !!!!!
1202  8A99
1203  8A99              Inicia_punteros_de_cajas
1204  8A99
1205  8A99 21 70 85     	ld hl,Indice_de_cajas_de_entidades
1206  8A9C CD 31 8B         call Extrae_address
1207  8A9F 22 A5 87         ld (Puntero_store_caja),hl
1208  8AA2 21 72 85     	ld hl,Indice_de_cajas_de_entidades+2
1209  8AA5 22 A9 87     	ld (Indice_restore_caja),hl
1210  8AA8 CD 31 8B     	call Extrae_address
1211  8AAB 22 A7 87     	ld (Puntero_restore_caja),hl
1212  8AAE C9               ret
1213  8AAF
1214  8AAF              ; *************************************************************************************************************************************************************
1215  8AAF              ;
1216  8AAF              ; 8/1/23
1217  8AAF              ;
1218  8AAF              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1219  8AAF
1220  8AAF 21 08 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1221  8AB2 22 C4 87     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1222  8AB5 C9           	ret
1223  8AB6 21 F0 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1224  8AB9 22 C6 87     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1225  8ABC C9           	ret
1226  8ABD
1227  8ABD              ; -------------------------------------------------------------------------------------------------------------
1228  8ABD              ;
1229  8ABD              ; 21/9/23
1230  8ABD              ;
1231  8ABD
1232  8ABD              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1233  8ABD
1234  8ABD              Limpia_album_Amadeus
1235  8ABD
1236  8ABD 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1237  8AC0 7E           	ld a,(hl)
1238  8AC1 A7           	and a
1239  8AC2 C8           	ret z
1240  8AC3
1241  8AC3 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1242  8AC6 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1243  8AC9 01 0B 00     	ld bc,11
1244  8ACC AF           	xor a
1245  8ACD 77           	ld (hl),a
1246  8ACE ED B0        	ldir
1247  8AD0
1248  8AD0 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1249  8AD3 22 BF 87     	ld (End_Snapshot_Amadeus),hl
1250  8AD6
1251  8AD6 C9           	ret
1252  8AD7
1253  8AD7 21 77 87     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1254  8ADA 11 78 87     	ld de,Variables_de_borrado+1
1255  8ADD 01 05 00     	ld bc,5
1256  8AE0 AF           	xor a
1257  8AE1 77           	ld (hl),a
1258  8AE2 ED B0        	ldir
1259  8AE4 C9           	ret
1260  8AE5
1261  8AE5              ; -------------------------------------------------------------------------------------------------------------
1262  8AE5              ;
1263  8AE5              ; 8/9/23
1264  8AE5              ;
1265  8AE5
1266  8AE5              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1267  8AE5              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1268  8AE5
1269  8AE5              Calcula_numero_de_malotes
1270  8AE5
1271  8AE5 21 00 70     	ld hl,Album_de_fotos
1272  8AE8 EB           	ex de,hl
1273  8AE9 2A B9 87     	ld hl,(Stack_snapshot)
1274  8AEC
1275  8AEC 06 00        	ld b,0
1276  8AEE 7D           	ld a,l
1277  8AEF 93           	sub e
1278  8AF0 28 07        	jr z,1F
1279  8AF2
1280  8AF2              ; Nº de malotes no es "0".
1281  8AF2
1282  8AF2 D6 06        2 sub 6
1283  8AF4 04           	inc b
1284  8AF5 A7           	and a
1285  8AF6 20 FA        	jr nz,2B
1286  8AF8 78           	ld a,b
1287  8AF9
1288  8AF9 32 AE 87     1 ld (Numero_de_malotes),a
1289  8AFC C9           	ret
1290  8AFD
1291  8AFD              ; -------------------------------------------------------------------------------------------------------------
1292  8AFD              ;
1293  8AFD              ; 8/9/23
1294  8AFD              ;
1295  8AFD
1296  8AFD              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1297  8AFD              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1298  8AFD
1299  8AFD              Calcula_malotes_Amadeus
1300  8AFD
1301  8AFD 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1302  8B00 EB           	ex de,hl
1303  8B01 2A BF 87     	ld hl,(End_Snapshot_Amadeus)
1304  8B04
1305  8B04 7C           	ld a,h
1306  8B05 A7           	and a
1307  8B06 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1308  8B08
1309  8B08 06 00        	ld b,0
1310  8B0A 7D           	ld a,l
1311  8B0B 93           	sub e
1312  8B0C 28 07        	jr z,1F
1313  8B0E
1314  8B0E              ; Nº de malotes no es "0".
1315  8B0E
1316  8B0E D6 06        2 sub 6
1317  8B10 04           	inc b
1318  8B11 A7           	and a
1319  8B12 20 FA        	jr nz,2B
1320  8B14 78           	ld a,b
1321  8B15
1322  8B15 32 AE 87     1 ld (Numero_de_malotes),a
1323  8B18 C9           	ret
1324  8B19
1325  8B19              ; -------------------------------------------------------------------------------------------------------------
1326  8B19              ;
1327  8B19              ; 28/2/23
1328  8B19              ;
1329  8B19
1330  8B19              Calcula_numero_de_disparotes
1331  8B19
1332  8B19 21 56 70     	ld hl,Album_de_fotos_disparos
1333  8B1C EB           	ex de,hl
1334  8B1D 2A BD 87     	ld hl,(End_Snapshot_disparos)
1335  8B20
1336  8B20 06 00        	ld b,0
1337  8B22 7D           	ld a,l
1338  8B23 93           	sub e
1339  8B24 28 07        	jr z,1F
1340  8B26
1341  8B26              ; Nº de malotes no es "0".
1342  8B26
1343  8B26 D6 06        2 sub 6
1344  8B28 04           	inc b
1345  8B29 A7           	and a
1346  8B2A 20 FA        	jr nz,2B
1347  8B2C 78           	ld a,b
1348  8B2D
1349  8B2D 32 C3 87     1 ld (Numero_de_disparotes),a
1350  8B30 C9           	ret
1351  8B31
1352  8B31              ; *************************************************************************************************************************************************************
1353  8B31              ;
1354  8B31              ; 20/10/22
1355  8B31              ;
1356  8B31              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1357  8B31              ;
1358  8B31              ; Destruye el puntero y DE !!!!!
1359  8B31
1360  8B31 5E           Extrae_address ld e,(hl)
1361  8B32 23           	inc hl
1362  8B33 56           	ld d,(hl)
1363  8B34 2B           	dec hl
1364  8B35 EB           	ex de,hl
1365  8B36 C9           	ret
1366  8B37
1367  8B37              ; *************************************************************************************************************************************************************
1368  8B37              ;
1369  8B37              ;	20/1/24
1370  8B37              ;
1371  8B37              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1372  8B37              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1373  8B37              ;
1374  8B37              ;   Destruye HL y BC !!!!!,
1375  8B37              ;
1376  8B37              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1377  8B37              ;					"0" ..... Izquierda.
1378  8B37
1379  8B37              Inicia_Puntero_objeto
1380  8B37
1381  8B37 3A 75 87     	ld a,(Cuad_objeto)
1382  8B3A E6 01        	and 1
1383  8B3C F5           	push af
1384  8B3D CC 59 8B     	call z,Inicia_puntero_objeto_izq
1385  8B40 F1           	pop af
1386  8B41 C8           	ret z
1387  8B42 CD 46 8B     	call Inicia_puntero_objeto_der
1388  8B45 C9           	ret
1389  8B46
1390  8B46              ; Arrancamos desde la parte izquierda de la pantalla.
1391  8B46              ; Iniciamos (Indice_Sprite_der).
1392  8B46
1393  8B46 2A 6B 87     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1394  8B49 22 6F 87     	ld (Puntero_DESPLZ_der),hl
1395  8B4C CD 31 8B     	call Extrae_address
1396  8B4F 22 65 87     	ld (Puntero_objeto),hl
1397  8B52
1398  8B52 2A 6D 87     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1399  8B55 22 71 87     	ld (Puntero_DESPLZ_izq),hl
1400  8B58 C9           	ret
1401  8B59
1402  8B59              ; Arrancamos desde la parte derecha de la pantalla.
1403  8B59              ; Iniciamos (Indice_Sprite_izq).
1404  8B59
1405  8B59 2A 6D 87     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1406  8B5C 22 71 87     	ld (Puntero_DESPLZ_izq),hl
1407  8B5F CD 31 8B     	call Extrae_address
1408  8B62 22 65 87     	ld (Puntero_objeto),hl
1409  8B65
1410  8B65 2A 6B 87     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1411  8B68 22 6F 87     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1412  8B6B C9           	ret
1413  8B6C
1414  8B6C              ; *************************************************************************************************************************************************************
1415  8B6C              ;
1416  8B6C              ;	21/12/23
1417  8B6C              ;
1418  8B6C              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1419  8B6C              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1420  8B6C
1421  8B6C              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1422  8B6C              ;	_de la 2ª y 3ª entidad respectivamente.
1423  8B6C
1424  8B6C              Store_Restore_cajas
1425  8B6C
1426  8B6C              ;	push hl
1427  8B6C              ;	push de
1428  8B6C              ; 	push bc
1429  8B6C
1430  8B6C              ;	STORE !!!!!
1431  8B6C              ;	Guarda los parámetros de la bandeja DRAW en la correspondiente caja de entidades..
1432  8B6C
1433  8B6C CD 0B 87     	call Parametros_de_bandeja_DRAW_a_caja
1434  8B6F
1435  8B6F              ; 	Entidad_sospechosa. 20/4/23
1436  8B6F
1437  8B6F              ;	ld a,(Impacto)
1438  8B6F              ;	and a
1439  8B6F              ;	jr z,1F
1440  8B6F
1441  8B6F              ;	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1442  8B6F              ;	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1443  8B6F              ;	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1444  8B6F              ;	adc hl,bc 											; _ "0" más adelante.
1445  8B6F              ;	ld (Entidad_sospechosa_de_colision),hl
1446  8B6F
1447  8B6F              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1448  8B6F
1449  8B6F 18 FE        	jr $
1450  8B71
1451  8B71
1452  8B71              ;1 ld hl,(Puntero_restore_caja)
1453  8B71              ;	ld a,(hl)
1454  8B71              ;	and a
1455  8B71              ;	push af
1456  8B71              ;	jr z,2F
1457  8B71
1458  8B71              ;	di
1459  8B71              ;	jr $
1460  8B71              ;	ei
1461  8B71
1462  8B71              ;	di
1463  8B71              ;	ld de,Variables_DRAW
1464  8B71              ;	ld bc,42
1465  8B71              ;	ldir
1466  8B71              ;	ei
1467  8B71
1468  8B71 CD 87 8B     2 call Incrementa_punteros_de_cajas
1469  8B74
1470  8B74              ;	pop af
1471  8B74              ;	jr z,1B
1472  8B74
1473  8B74              ;	pop bc
1474  8B74              ;	pop de
1475  8B74              ;	pop hl
1476  8B74
1477  8B74 C9           	ret
1478  8B75
1479  8B75              ; **************************************************************************************************
1480  8B75              ;
1481  8B75              ;	21/12/23
1482  8B75              ;
1483  8B75              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1484  8B75
1485  8B75 E5           Restore_entidad push hl
1486  8B76 D5           	push de
1487  8B77 C5            	push bc
1488  8B78
1489  8B78 2A A5 87     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1490  8B7B 11 60 87     	ld de,Variables_DRAW
1491  8B7E 01 2A 00     	ld bc,42
1492  8B81 ED B0        	ldir
1493  8B83
1494  8B83 C1           	pop bc
1495  8B84 D1           	pop de
1496  8B85 E1           	pop hl
1497  8B86 C9           	ret
1498  8B87
1499  8B87              ; **************************************************************************************************
1500  8B87              ;
1501  8B87              ;	08/05/23
1502  8B87              ;
1503  8B87              ;	Incrementamos los dos punteros de entidades. (+1).
1504  8B87
1505  8B87              Incrementa_punteros_de_cajas
1506  8B87
1507  8B87 2A A7 87     	ld hl,(Puntero_restore_caja)
1508  8B8A 22 A5 87     	ld (Puntero_store_caja),hl
1509  8B8D 2A A9 87     	ld hl,(Indice_restore_caja)
1510  8B90 23           	inc hl
1511  8B91 23           	inc hl
1512  8B92 22 A9 87     	ld (Indice_restore_caja),hl
1513  8B95 CD 31 8B         call Extrae_address
1514  8B98 22 A7 87         ld (Puntero_restore_caja),hl
1515  8B9B C9               ret
1516  8B9C
1517  8B9C              ; **************************************************************************************************
1518  8B9C              ;
1519  8B9C              ;	21/12/23
1520  8B9C              ;
1521  8B9C              ;	Restore_Amadeus
1522  8B9C              ;
1523  8B9C              ;	Cargamos en DRAW los parámetros de Amadeus.
1524  8B9C              ;
1525  8B9C
1526  8B9C E5           Restore_Amadeus	push hl
1527  8B9D D5           	push de
1528  8B9E C5            	push bc
1529  8B9F 21 82 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1530  8BA2 11 60 87     	ld de,Variables_DRAW
1531  8BA5 01 2A 00     	ld bc,42
1532  8BA8 ED B0        	ldir
1533  8BAA C1           	pop bc
1534  8BAB D1           	pop de
1535  8BAC E1           	pop hl
1536  8BAD C9           	ret
1537  8BAE
1538  8BAE              ; *************************************************************************************************************************************************************
1539  8BAE              ;
1540  8BAE              ;	21/12/23
1541  8BAE              ;
1542  8BAE              ;	Store_Amadeus
1543  8BAE              ;
1544  8BAE              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1545  8BAE              ;
1546  8BAE              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1547  8BAE              ;
1548  8BAE              ;	DESTRUYE: HL y BC y DE.
1549  8BAE
1550  8BAE 21 60 87     Store_Amadeus ld hl,Variables_DRAW											; Cargamos en DRAW los parámetros de Amadeus.
1551  8BB1 01 2A 00     	ld bc,42
1552  8BB4 ED B0        	ldir
1553  8BB6 C9           	ret
1554  8BB7
1555  8BB7              ; -----------------------------------------------------------
1556  8BB7              ;
1557  8BB7              ;	21/12/23
1558  8BB7              ;
1559  8BB7              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1560  8BB7              ;
1561  8BB7              ;	Destruye: HL,BC,DE,A
1562  8BB7
1563  8BB7 21 60 87     Borra_datos_entidad ld hl,Variables_DRAW
1564  8BBA 01 29 00     	ld bc,41
1565  8BBD AF           	xor a
1566  8BBE 77           	ld (hl),a
1567  8BBF 11 61 87     	ld de,Variables_DRAW+1
1568  8BC2 ED B0        	ldir
1569  8BC4 C9           	ret
1570  8BC5
1571  8BC5              ; -----------------------------------------------------------
1572  8BC5
1573  8BC5              ; Teclado.
1574  8BC5
1575  8BC5 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1576  8BC7 DB FE        	in a,($fe)
1577  8BC9 E6 01        	and $01
1578  8BCB 28 02        	jr z,1f
1579  8BCD 18 F6        	jr Pulsa_ENTER
1580  8BCF C9           1 ret
1581  8BD0
1582  8BD0              ; **************************************************************************************************
1583  8BD0              ;
1584  8BD0              ; Temporización.
1585  8BD0
1586  8BD0              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1587  8BD0              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1588  8BD0              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1589  8BD0              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1590  8BD0
1591  8BD0              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1592  8BD0              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1593  8BD0              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1594  8BD0
1595  8BD0              ; A partir de $4f61 no hace falta DELAY.
1596  8BD0
1597  8BD0              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1598  8BD0
1599  8BD0 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1600  8BD3 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1601  8BD4 78           	LD A,B
1602  8BD5 A7           	AND A
1603  8BD6 20 FB        	JR NZ,wait
1604  8BD8 C9           	RET
1605  8BD9
1606  8BD9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1607  8BD9              ;
1608  8BD9              ;	5/3/23
1609  8BD9              ;
1610  8BD9              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1611  8BD9
1612  8BD9              Movimiento_Amadeus
1613  8BD9
1614  8BD9              ; Disparo.
1615  8BD9
1616  8BD9 3A D9 87     	ld a,(Disparo_Amadeus)
1617  8BDC A7           	and a
1618  8BDD 20 02        	jr nz,1F
1619  8BDF 18 15        	jr 2F
1620  8BE1
1621  8BE1 3E F7        1 ld a,$f7													; "5" para disparar.
1622  8BE3 DB FE        	in a,($fe)
1623  8BE5 E6 10        	and $10
1624  8BE7
1625  8BE7 F5           	push af
1626  8BE8 CC 90 8C     	call z,Genera_disparo
1627  8BEB F1           	pop af
1628  8BEC 20 08        	jr nz,2F
1629  8BEE
1630  8BEE 3A D9 87     	ld a,(Disparo_Amadeus)
1631  8BF1 EE 01        	xor 1
1632  8BF3 32 D9 87     	ld (Disparo_Amadeus),a
1633  8BF6 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1634  8BF8 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1635  8BFA E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1636  8BFC CC 55 99         call z,Mov_left											;			"			"			"			"			"			"			"			"
1637  8BFF
1638  8BFF 3E F7        	ld a,$f7
1639  8C01 DB FE        	in a,($fe)
1640  8C03 E6 01        	and $01
1641  8C05 C8           	ret z
1642  8C06
1643  8C06 3E F7        	ld a,$f7
1644  8C08 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1645  8C0A E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1646  8C0C CC 32 98     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1647  8C0F C9           	ret
1648  8C10
1649  8C10              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1650  8C10              ;
1651  8C10              ;	Rutina provisional para que los malotes cagen balas.
1652  8C10
1653  8C10              Detecta_disparo_entidad
1654  8C10
1655  8C10 3A DC 87     	ld a,(Disparo_entidad)
1656  8C13 A7           	and a
1657  8C14 C8           	ret z
1658  8C15
1659  8C15              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1660  8C15
1661  8C15              ;	ld a,$7f				; Detecta SPACE.
1662  8C15              ;	in a,($fe)
1663  8C15              ;	and 1
1664  8C15              ;	ret nz
1665  8C15
1666  8C15 CD 90 8C     	call Genera_disparo
1667  8C18 C9           	ret
1668  8C19
1669  8C19              ; ----------------------------------------------------------------------
1670  8C19              ;
1671  8C19              ;	8/9/23
1672  8C19
1673  8C19 2A BF 87     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1674  8C1C 2B            	dec hl
1675  8C1D 7E           	ld a,(hl)
1676  8C1E A7           	and a
1677  8C1F C8           	ret z										; Salimos si es álbum está vacío.
1678  8C20
1679  8C20 11 7C 87     	ld de,Variables_de_borrado+5
1680  8C23 01 06 00     	ld bc,6
1681  8C26 ED B8        	lddr
1682  8C28 C9           	ret
1683  8C29
1684  8C29              ; ----------------------------------------------------------------------
1685  8C29              ;
1686  8C29              ;	9/9/23
1687  8C29
1688  8C29              Repone_datos_de_borrado_Amadeus
1689  8C29
1690  8C29 21 77 87     	ld hl,Variables_de_borrado
1691  8C2C 11 AC 70     	ld de,Album_de_fotos_Amadeus
1692  8C2F 01 06 00     	ld bc,6
1693  8C32 ED B0        	ldir
1694  8C34
1695  8C34 EB           	ex de,hl
1696  8C35 22 BF 87     	ld (End_Snapshot_Amadeus),hl
1697  8C38
1698  8C38 C9           	ret
1699  8C39
1700  8C39              ; ----------------------------------------------------------------------
1701  8C39              ;
1702  8C39              ;	27/10/23
1703  8C39              ;
1704  8C39
1705  8C39              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1706  8C39              ;	_ Album_de_fotos correspondiente.
1707  8C39
1708  8C39              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1709  8C39              ;	_ durante el proceso de escritura.
1710  8C39
1711  8C39              Repone_datos_de_borrado
1712  8C39
1713  8C39 F3           	di
1714  8C3A ED 5B B9 87  	ld de,(Stack_snapshot)
1715  8C3E 21 77 87     	ld hl,Variables_de_borrado
1716  8C41 01 06 00     	ld bc,6
1717  8C44 ED B0        	ldir
1718  8C46 FB           	ei
1719  8C47
1720  8C47 EB           	ex de,hl
1721  8C48 22 B9 87     	ld (Stack_snapshot),hl
1722  8C4B
1723  8C4B C9           	ret
1724  8C4C
1725  8C4C              ; --------------------------------------------------------------------------------------
1726  8C4C
1727  8C4C              Pinta_Amadeus
1728  8C4C
1729  8C4C CD FD 8A        	call Calcula_malotes_Amadeus
1730  8C4F CD FD 94     	call Extrae_foto_Amadeus
1731  8C52 CD BD 8A     	call Limpia_album_Amadeus
1732  8C55
1733  8C55 C9           	ret
1734  8C56
1735  8C56              Pinta_entidades
1736  8C56
1737  8C56              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1738  8C56
1739  8C56 3A C1 87     	ld a,(Ctrl_3)
1740  8C59 CB 47        	bit 0,a
1741  8C5B C8           	ret z
1742  8C5C
1743  8C5C CD E5 8A     	call Calcula_numero_de_malotes
1744  8C5F CD 7B 94     	call Extrae_foto_entidades
1745  8C62 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1746  8C65
1747  8C65 C9           	ret
1748  8C66
1749  8C66              ; -----------------------------------------------------------------------------------
1750  8C66              ;
1751  8C66              ;	10/12/23
1752  8C66              ;
1753  8C66              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1754  8C66
1755  8C66              Actualiza_relojes
1756  8C66
1757  8C66 3A C1 87     	ld a,(Ctrl_3)
1758  8C69 CB 47        	bit 0,a
1759  8C6B C8           	ret z 						;	Salimos si no hemos pintado unidades.
1760  8C6C
1761  8C6C 21 D4 87     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1762  8C6F 34           	inc (hl)
1763  8C70
1764  8C70 34           	inc (hl)
1765  8C71 35           	dec (hl)
1766  8C72 C0           	ret nz
1767  8C73
1768  8C73 21 D5 87     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1769  8C76 34           	inc (hl)
1770  8C77 C9           	ret
1771  8C78
1772  8C78              ; ---------------------------------------------------------------
1773  8C78              ;
1774  8C78              ;	21/12/23
1775  8C78
1776  8C78              Guarda_parametros_DRAW
1777  8C78
1778  8C78 21 60 87     	ld hl,Variables_DRAW
1779  8C7B 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1780  8C7E 01 2A 00     	ld bc,42
1781  8C81 ED B0        	ldir
1782  8C83 C9           	ret
1783  8C84
1784  8C84              Recupera_parametros_DRAW
1785  8C84
1786  8C84 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1787  8C87 11 60 87     	ld de,Variables_DRAW
1788  8C8A 01 2A 00     	ld bc,42
1789  8C8D ED B0        	ldir
1790  8C8F C9           	ret
1791  8C90
1792  8C90              ; ---------------------------------------------------------------
1793  8C90
1794  8C90              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8C90              ; ******************************************************************************************************************************************************************************************
   2+ 8C90              ;
   3+ 8C90              ;   21/07/23
   4+ 8C90              ;
   5+ 8C90              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8C90              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8C90              ;
   8+ 8C90              ;
   9+ 8C90              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8C90              ;
  11+ 8C90              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8C90              ;               _ hacen las entidades hacia abajo.
  13+ 8C90              ;
  14+ 8C90              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8C90              ;
  16+ 8C90              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8C90              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8C90              ;
  19+ 8C90              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8C90              ;           _ la bala.
  21+ 8C90              ;
  22+ 8C90              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8C90              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8C90              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8C90              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8C90              ;           _ en el momento de generarse la bala)).
  27+ 8C90
  28+ 8C90              Genera_disparo
  29+ 8C90
  30+ 8C90              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8C90              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8C90              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8C90              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8C90              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8C90              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8C90              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8C90
  38+ 8C90              ; Exclusiones:
  39+ 8C90
  40+ 8C90 3A 8D 87         ld a,(Vel_down)
  41+ 8C93 47               ld b,a
  42+ 8C94 3A D3 87         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8C97 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8C98 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8C99 3A 84 87         ld a,(Columnas)
  46+ 8C9C 47               ld b,a
  47+ 8C9D 3A 62 87         ld a,(Columns)
  48+ 8CA0 B8               cp b
  49+ 8CA1 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8CA2
  51+ 8CA2              ; ----- ----- -----
  52+ 8CA2
  53+ 8CA2 3A 83 87         ld a,(Ctrl_0)
  54+ 8CA5 CB 77            bit 6,a
  55+ 8CA7 20 06            jr nz,14F
  56+ 8CA9
  57+ 8CA9 3A 68 87         ld a,(Coordenada_y)
  58+ 8CAC FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8CAE D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8CAF
  61+ 8CAF 21 00 80     14 ld hl,Indice_disparo
  62+ 8CB2 3A 69 87         ld a,(CTRL_DESPLZ)
  63+ 8CB5 4F               ld c,a
  64+ 8CB6 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8CB8              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8CB8              ;                                            ""        ""       "f9", B="1"
  67+ 8CB8              ;                                            ""        ""       "fb", B="2"
  68+ 8CB8              ;                                            ""        ""       "fb", B="3"
  69+ 8CB8 A7               and a
  70+ 8CB9 28 10            jr z,1F
  71+ 8CBB E6 01            and 1
  72+ 8CBD C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8CBE
  74+ 8CBE 79               ld a,c
  75+ 8CBF 16 F9            ld d,$f9
  76+ 8CC1 23           2 inc hl
  77+ 8CC2 23               inc hl
  78+ 8CC3 04               inc b
  79+ 8CC4 BA               cp d
  80+ 8CC5 28 04            jr z,1F
  81+ 8CC7 14               inc d
  82+ 8CC8 14               inc d
  83+ 8CC9 18 F6            jr 2B
  84+ 8CCB
  85+ 8CCB CD 31 8B     1 call Extrae_address
  86+ 8CCE E5               push hl
  87+ 8CCF FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8CD1 DD 21 43 97  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8CD5
  90+ 8CD5              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8CD5              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8CD5
  93+ 8CD5 3A 83 87         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8CD8 CB 77            bit 6,a
  95+ 8CDA 20 04            jr nz,19F
  96+ 8CDC
  97+ 8CDC AF               xor a
  98+ 8CDD 32 DC 87         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8CE0
 100+ 8CE0 3A 75 87     19 ld a,(Cuad_objeto)
 101+ 8CE3 FE 02            cp 2
 102+ 8CE5 38 66            jr c,3F
 103+ 8CE7 28 64            jr z,3F
 104+ 8CE9
 105+ 8CE9              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8CE9
 107+ 8CE9 E6 01            and 1
 108+ 8CEB 28 30            jr z,4F
 109+ 8CED
 110+ 8CED              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8CED              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8CED              ;
 113+ 8CED              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8CED              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8CED              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8CED
 117+ 8CED 2A 63 87     	ld hl,(Posicion_actual)
 118+ 8CF0
 119+ 8CF0              ;   Amadeus o entidad ???.
 120+ 8CF0
 121+ 8CF0 3A 83 87         ld a,(Ctrl_0)
 122+ 8CF3 CB 77            bit 6,a
 123+ 8CF5 28 0A            jr z,8F
 124+ 8CF7
 125+ 8CF7              ; 	Dispara Amadeus.
 126+ 8CF7
 127+ 8CF7 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8CF9 CD 6C 94         call PreviousScan
 129+ 8CFC CD 6C 94         call PreviousScan
 130+ 8CFF
 131+ 8CFF              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8CFF              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8CFF              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8CFF              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8CFF
 136+ 8CFF 18 11            jr 10F
 137+ 8D01
 138+ 8D01              ; 	Dispara Entidad.
 139+ 8D01
 140+ 8D01 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8D04              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8D04
 143+ 8D04              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8D04              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8D04
 146+ 8D04 C5               push bc
 147+ 8D05 06 10            ld b,16
 148+ 8D07 CD 5D 94     9 call NextScan
 149+ 8D0A 10 FB            djnz 9B
 150+ 8D0C C1               pop bc
 151+ 8D0D CD 77 8D         call Ajusta_disparo_parte_izquierda
 152+ 8D10 18 06            jr 17F
 153+ 8D12
 154+ 8D12              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8D12              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8D12              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8D12              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8D12
 159+ 8D12 CD 77 8D     10 call Ajusta_disparo_parte_izquierda
 160+ 8D15 CD EC 8D         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8D18              ;                                                      ; _al generar el disparo.
 162+ 8D18
 163+ 8D18              ; 	LLegados a este punto tendremos:
 164+ 8D18              ;
 165+ 8D18              ;       Puntero_objeto_disparo en IY.
 166+ 8D18              ;       Rutinas_de_impresion en IX.
 167+ 8D18              ;       Puntero_de_impresion en HL.
 168+ 8D18              ;       Impacto/Dirección en BC.
 169+ 8D18
 170+ 8D18 CD 7F 8D     17 call Almacena_disparo
 171+ 8D1B 18 52            jr 6F                                             ; RET.
 172+ 8D1D
 173+ 8D1D              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8D1D              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8D1D              ;
 176+ 8D1D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8D1D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8D1D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8D1D
 180+ 8D1D 2A 63 87     4 ld hl,(Posicion_actual)
 181+ 8D20
 182+ 8D20              ;   Amadeus o entidad ???.
 183+ 8D20
 184+ 8D20 3A 83 87         ld a,(Ctrl_0)
 185+ 8D23 CB 77            bit 6,a
 186+ 8D25 28 0A            jr z,11F
 187+ 8D27
 188+ 8D27              ; 	Dispara Amadeus.
 189+ 8D27
 190+ 8D27 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8D29 CD 6C 94         call PreviousScan
 192+ 8D2C CD 6C 94         call PreviousScan
 193+ 8D2F
 194+ 8D2F              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8D2F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8D2F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8D2F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8D2F
 199+ 8D2F 18 11            jr 13F
 200+ 8D31
 201+ 8D31              ; 	Dispara Entidad.
 202+ 8D31
 203+ 8D31 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8D34              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8D34
 206+ 8D34              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8D34              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8D34
 209+ 8D34 C5               push bc
 210+ 8D35 06 10            ld b,16
 211+ 8D37 CD 5D 94     12 call NextScan
 212+ 8D3A 10 FB            djnz 12B
 213+ 8D3C C1               pop bc
 214+ 8D3D
 215+ 8D3D CD 70 8D         call Ajusta_disparo_parte_derecha
 216+ 8D40 18 06            jr 18F
 217+ 8D42
 218+ 8D42              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8D42              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8D42              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8D42              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8D42
 223+ 8D42 CD 70 8D     13 call Ajusta_disparo_parte_derecha
 224+ 8D45 CD EC 8D         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8D48              ;                                                       ; _al generar el disparo.
 226+ 8D48
 227+ 8D48              ; LLegados a este punto tendremos:
 228+ 8D48              ;
 229+ 8D48              ;       Puntero_objeto_disparo en IY.
 230+ 8D48              ;       Rutinas_de_impresion en IX.
 231+ 8D48              ;       Puntero_de_impresion en HL.
 232+ 8D48              ;       Impacto/Dirección en BC.
 233+ 8D48
 234+ 8D48 CD 7F 8D     18 call Almacena_disparo
 235+ 8D4B 18 22            jr 6F                                               ; RET.
 236+ 8D4D
 237+ 8D4D              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8D4D
 239+ 8D4D 28 11        3 jr z,5F
 240+ 8D4F
 241+ 8D4F              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8D4F              ;
 243+ 8D4F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8D4F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8D4F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8D4F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8D4F
 248+ 8D4F              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8D4F              ;	   ""        ""       "f9", B="1"
 250+ 8D4F              ;	   ""        ""       "fb", B="2"
 251+ 8D4F              ; 	   ""        ""       "fb", B="3"
 252+ 8D4F
 253+ 8D4F 2A 63 87     	ld hl,(Posicion_actual)
 254+ 8D52 CD 5D 94     	call NextScan
 255+ 8D55
 256+ 8D55              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8D55              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8D55              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8D55              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8D55
 261+ 8D55 CD 77 8D         call Ajusta_disparo_parte_izquierda
 262+ 8D58
 263+ 8D58              ; 	No se produce impacto. B="$80"
 264+ 8D58              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8D58
 266+ 8D58 01 80 80         ld bc,$8080
 267+ 8D5B
 268+ 8D5B              ; 	LLegados a este punto tendremos:
 269+ 8D5B              ;
 270+ 8D5B              ;       Puntero_objeto_disparo en IY.
 271+ 8D5B              ;       Rutinas_de_impresion en IX.
 272+ 8D5B              ;       Puntero_de_impresion en HL.
 273+ 8D5B              ;       Impacto/Dirección en BC.
 274+ 8D5B
 275+ 8D5B CD 7F 8D         call Almacena_disparo
 276+ 8D5E 18 0F            jr 6F                                           ; RET.
 277+ 8D60
 278+ 8D60              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8D60              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8D60              ;
 281+ 8D60              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8D60              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8D60              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8D60              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8D60
 286+ 8D60 2A 63 87     5 ld hl,(Posicion_actual)
 287+ 8D63 CD 5D 94     	call NextScan
 288+ 8D66
 289+ 8D66              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8D66              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8D66              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8D66              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8D66
 294+ 8D66 CD 70 8D         call Ajusta_disparo_parte_derecha
 295+ 8D69
 296+ 8D69              ; 	No se produce impacto. B="$80"
 297+ 8D69              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8D69
 299+ 8D69 01 80 80     15 ld bc,$8080
 300+ 8D6C
 301+ 8D6C              ; 	LLegados a este punto tendremos:
 302+ 8D6C              ;
 303+ 8D6C              ;       Puntero_objeto_disparo en IY.
 304+ 8D6C              ;       Rutinas_de_impresion en IX.
 305+ 8D6C              ;       Puntero_de_impresion en HL.
 306+ 8D6C              ;       Impacto/Dirección en BC.
 307+ 8D6C
 308+ 8D6C CD 7F 8D         call Almacena_disparo
 309+ 8D6F
 310+ 8D6F C9           6 ret
 311+ 8D70
 312+ 8D70              ; ----------------------------------------------------------------
 313+ 8D70              ;
 314+ 8D70              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8D70              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8D70              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8D70
 318+ 8D70 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8D71 FE 02            cp 2
 320+ 8D73 38 01            jr c,1F
 321+ 8D75 23               inc hl
 322+ 8D76 C9           1 ret
 323+ 8D77
 324+ 8D77 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8D78 FE 01        	cp 1
 326+ 8D7A 20 01        	jr nz,1F
 327+ 8D7C 2B           	dec hl
 328+ 8D7D 2B           1 dec hl
 329+ 8D7E C9               ret
 330+ 8D7F
 331+ 8D7F              ; ----------------------------------------------------------------
 332+ 8D7F              ;
 333+ 8D7F              ;   25/02/23
 334+ 8D7F              ;
 335+ 8D7F              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8D7F              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8D7F              ;
 338+ 8D7F              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8D7F              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8D7F
 341+ 8D7F              Almacena_disparo
 342+ 8D7F
 343+ 8D7F E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8D80 F1               pop af
 345+ 8D81 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8D82
 347+ 8D82 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8D83 E6 01            and 1
 349+ 8D85 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8D87              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8D87              ; 	Dispara AMADEUS.
 352+ 8D87
 353+ 8D87              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8D87              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8D87              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8D87              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8D87
 358+ 8D87 C5               push bc
 359+ 8D88 01 F4 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8D8B 2A C6 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8D8E A7               and a
 362+ 8D8F ED 42            sbc hl,bc
 363+ 8D91 CC B6 8A         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8D94 C1               pop bc
 365+ 8D95 28 54            jr z,4F
 366+ 8D97
 367+ 8D97 2A C6 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8D9A 23               inc hl
 369+ 8D9B 23               inc hl
 370+ 8D9C 22 C6 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8D9F              ;                                                   ; _ Disparo_(+1).
 372+ 8D9F 18 18            jr 2F
 373+ 8DA1
 374+ 8DA1              ; Dispara una entidad.
 375+ 8DA1
 376+ 8DA1 C5           1 push bc
 377+ 8DA2 01 1C 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8DA5 2A C4 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8DA8 A7               and a
 380+ 8DA9 ED 42            sbc hl,bc
 381+ 8DAB CC AF 8A         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8DAE C1               pop bc
 383+ 8DAF 28 3A            jr z,4F
 384+ 8DB1
 385+ 8DB1 2A C4 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8DB4 23               inc hl
 387+ 8DB5 23               inc hl
 388+ 8DB6 22 C4 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8DB9              ;                                                   ; _ Disparo_(+1).
 390+ 8DB9 CD 31 8B     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8DBC              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8DBC              ;
 393+ 8DBC              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8DBC              ;                                                     Rutinas_de_impresion en IX.
 395+ 8DBC              ;                                                     Puntero_de_impresion en HL.
 396+ 8DBC              ;                                                     Impacto/Dirección en BC.
 397+ 8DBC
 398+ 8DBC 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8DBD 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8DBE 23               inc hl                                          ; _ al siguiente.
 401+ 8DBF A7               and a
 402+ 8DC0 20 C0            jr nz,3B
 403+ 8DC2
 404+ 8DC2 08               ex af,af
 405+ 8DC3 ED 73 B3 87      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8DC7 F9               ld sp,hl
 407+ 8DC8
 408+ 8DC8 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8DCA F5               push af                                         ; Puntero de impresión.
 410+ 8DCB FD E5            push iy                                         ; Puntero objeto.
 411+ 8DCD C5               push bc                                         ; Control.
 412+ 8DCE
 413+ 8DCE ED 7B B3 87      ld sp,(Stack)
 414+ 8DD2
 415+ 8DD2              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8DD2
 417+ 8DD2 21 A2 87     	ld hl,Ctrl_1
 418+ 8DD5 CB C6        	set 0,(hl)
 419+ 8DD7
 420+ 8DD7 DD E5        	push ix
 421+ 8DD9 E1               pop hl
 422+ 8DDA F5               push af
 423+ 8DDB DD E1            pop ix
 424+ 8DDD
 425+ 8DDD CD 16 71     	call Guarda_foto_registros
 426+ 8DE0
 427+ 8DE0 21 A2 87     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8DE3 CB 86        	res 0,(hl)
 429+ 8DE5
 430+ 8DE5              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8DE5              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8DE5
 433+ 8DE5 CD B6 8A         call Inicia_Puntero_Disparo_Amadeus
 434+ 8DE8 CD AF 8A         call Inicia_Puntero_Disparo_Entidades
 435+ 8DEB
 436+ 8DEB C9           4 ret
 437+ 8DEC
 438+ 8DEC              ; ----------------------------------------------------------------
 439+ 8DEC              ;
 440+ 8DEC              ;   4/3/23
 441+ 8DEC              ;
 442+ 8DEC              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8DEC              ;   _ al generarse el disparo.
 444+ 8DEC              ;
 445+ 8DEC              ;       "$80" ..... No se produce colisión.
 446+ 8DEC              ;       "$81" ..... Se produce colisión.
 447+ 8DEC              ;
 448+ 8DEC              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8DEC              ;         _ que forman el disparo.
 450+ 8DEC
 451+ 8DEC
 452+ 8DEC              Comprueba_Colision
 453+ 8DEC
 454+ 8DEC              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8DEC
 456+ 8DEC FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8DEE E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8DEF
 459+ 8DEF CD 25 8E         call Modifica_H_Velocidad_disparo
 460+ 8DF2
 461+ 8DF2 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8DF3 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8DF5 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8DF7
 465+ 8DF7 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8DF9 CD 15 8E         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8DFC
 468+ 8DFC 7B               ld a,e
 469+ 8DFD E6 01            and 1
 470+ 8DFF 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8E01              ;                                                  ; _ para activar IMPACTO.
 472+ 8E01 E1               pop hl
 473+ 8E02 E5               push hl
 474+ 8E03 CD 5D 94         call NextScan
 475+ 8E06
 476+ 8E06 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8E07 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8E09 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8E0B              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8E0B 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8E0D CD 15 8E         call Bucle_2
 482+ 8E10
 483+ 8E10 43           1 ld b,e
 484+ 8E11 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8E12 FD E1            pop iy
 486+ 8E14 C9               ret
 487+ 8E15
 488+ 8E15              ; ---------- ----------
 489+ 8E15
 490+ 8E15 06 02        Bucle_2 ld b,2
 491+ 8E17 FD 7E 00     2 ld a,(iy)
 492+ 8E1A A6               and (hl)
 493+ 8E1B 28 02            jr z,1F
 494+ 8E1D 1E 81            ld e,$81
 495+ 8E1F 23           1 inc hl
 496+ 8E20 FD 23            inc iy
 497+ 8E22 10 F3            djnz 2B
 498+ 8E24 C9               ret
 499+ 8E25
 500+ 8E25              ; ---------- ----------
 501+ 8E25              ;
 502+ 8E25              ;   21/7/23
 503+ 8E25
 504+ 8E25              Modifica_H_Velocidad_disparo
 505+ 8E25
 506+ 8E25 3A D3 87         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8E28 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8E2A D0               ret nc                                         ; _ incrementamos H.
 509+ 8E2B 24               inc h
 510+ 8E2C
 511+ 8E2C C9               ret
 512+ 8E2D
 513+ 8E2D              ; -------------------------------------------------------------------------------------------------------------
 514+ 8E2D              ;
 515+ 8E2D              ;   04/12/23
 516+ 8E2D              ;
 517+ 8E2D              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8E2D              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8E2D              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8E2D              ;
 521+ 8E2D              ;   MODIFICA: HL,DE,B y A.
 522+ 8E2D
 523+ 8E2D              Genera_coordenadas_X
 524+ 8E2D
 525+ 8E2D              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8E2D              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8E2D
 528+ 8E2D              ;   Limpiamos almacenes.
 529+ 8E2D
 530+ 8E2D CD 5E 8E         call Limpia_Coordenadas_X
 531+ 8E30
 532+ 8E30              ;   Almacenamos coordenadas X.
 533+ 8E30
 534+ 8E30              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 8E30
 536+ 8E30 2A 7D 87         ld hl,(Puntero_de_impresion)
 537+ 8E33 11 D0 87         ld de,Coordenadas_X_Entidad
 538+ 8E36 06 02            ld b,2
 539+ 8E38
 540+ 8E38 3A 69 87         ld a,(CTRL_DESPLZ)
 541+ 8E3B A7               and a
 542+ 8E3C 28 01            jr z,1F
 543+ 8E3E 04               inc b
 544+ 8E3F
 545+ 8E3F CD 55 8E     1 call Guarda_coordenadas_X
 546+ 8E42
 547+ 8E42              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 8E42
 549+ 8E42 2A 9F 85         ld hl,(p.imp.amadeus)
 550+ 8E45 11 CD 87         ld de,Coordenadas_X_Amadeus
 551+ 8E48 06 02            ld b,2
 552+ 8E4A
 553+ 8E4A 3A 8B 85         ld a,(ctrl_desplz_amadeus)
 554+ 8E4D A7               and a
 555+ 8E4E 28 01            jr z,2F
 556+ 8E50 04               inc b
 557+ 8E51
 558+ 8E51 CD 55 8E     2 call Guarda_coordenadas_X
 559+ 8E54
 560+ 8E54              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 8E54
 562+ 8E54 C9               ret
 563+ 8E55
 564+ 8E55              ; ----- ----- ----- ----- -----
 565+ 8E55
 566+ 8E55 7D           Guarda_coordenadas_X  ld a,l
 567+ 8E56 E6 1F            and $1f
 568+ 8E58 12           1 ld (de),a
 569+ 8E59 3C               inc a
 570+ 8E5A 13               inc de
 571+ 8E5B 10 FB            djnz 1B
 572+ 8E5D C9               ret
 573+ 8E5E
 574+ 8E5E AF           Limpia_Coordenadas_X xor a
 575+ 8E5F 06 06            ld b,6
 576+ 8E61 21 CD 87         ld hl,Coordenadas_X_Amadeus
 577+ 8E64 77           1 ld (hl),a
 578+ 8E65 23               inc hl
 579+ 8E66 10 FC            djnz 1B
 580+ 8E68 C9               ret
 581+ 8E69
 582+ 8E69              ; ----- ----- ----- ----- -----
 583+ 8E69
 584+ 8E69              Compara_coordenadas_X
 585+ 8E69
 586+ 8E69 06 03            ld b,3
 587+ 8E6B 11 D2 87         ld de,Coordenadas_X_Entidad+2
 588+ 8E6E
 589+ 8E6E 1A               ld a,(de)
 590+ 8E6F A7               and a
 591+ 8E70 20 01            jr nz,2F
 592+ 8E72 05               dec b
 593+ 8E73
 594+ 8E73 1B           2 dec de
 595+ 8E74 1B               dec de
 596+ 8E75 21 CD 87         ld hl,Coordenadas_X_Amadeus
 597+ 8E78
 598+ 8E78 D5           1 push de
 599+ 8E79 E5               push hl
 600+ 8E7A C5               push bc
 601+ 8E7B
 602+ 8E7B CD 85 8E         call Comparando
 603+ 8E7E
 604+ 8E7E C1               pop bc
 605+ 8E7F E1               pop hl
 606+ 8E80 D1               pop de
 607+ 8E81
 608+ 8E81 13               inc de
 609+ 8E82 10 F4            djnz 1B
 610+ 8E84
 611+ 8E84 C9               ret
 612+ 8E85
 613+ 8E85              ; ----- ----- ----- ----- -----
 614+ 8E85              ;
 615+ 8E85              ;   4/12/23
 616+ 8E85              ;
 617+ 8E85              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 8E85
 619+ 8E85 06 03        Comparando ld b,3
 620+ 8E87 1A               ld a,(de)
 621+ 8E88 4E           2 ld c,(hl)
 622+ 8E89 B9               cp c
 623+ 8E8A 28 04            jr z,1F
 624+ 8E8C 23               inc hl
 625+ 8E8D 10 F9            djnz 2B
 626+ 8E8F C9               ret
 627+ 8E90
 628+ 8E90 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 8E92 32 76 87         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 8E95 21 C8 87         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 8E98 CB D6            set 2,(hl)
 632+ 8E9A C9               ret
 633+ 8E9B
 634+ 8E9B              ; -----------------------------------------------------------------------
 635+ 8E9B              ;
 636+ 8E9B              ;   7/12/23
 637+ 8E9B              ;
 638+ 8E9B
 639+ 8E9B              Detecta_colision_nave_entidad
 640+ 8E9B
 641+ 8E9B              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 8E9B
 643+ 8E9B FD 2A 65 87      ld iy,(Puntero_objeto)
 644+ 8E9F 2A 7D 87         ld hl,(Puntero_de_impresion)
 645+ 8EA2
 646+ 8EA2 E5               push hl
 647+ 8EA3
 648+ 8EA3              ; ----- ----- -----
 649+ 8EA3 1E 00            ld e,0                                         ; Indica impacto.
 650+ 8EA5 06 0A            ld b,10
 651+ 8EA7 CD D7 8E     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 8EAA 7B               ld a,e
 653+ 8EAB FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 8EAD 38 0E            jr c,3F
 655+ 8EAF
 656+ 8EAF              ; LLegados a este punto:
 657+ 8EAF              ;
 658+ 8EAF              ;   HAY COLISIÓN !!!!!.
 659+ 8EAF              ;
 660+ 8EAF              ;   .db (Impacto) de Amadeus a "1".
 661+ 8EAF              ;   SET el bit3 de (Impacto2).
 662+ 8EAF              ;
 663+ 8EAF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 8EAF
 665+ 8EAF 21 76 87         ld hl,Impacto
 666+ 8EB2 36 01            ld (hl),1
 667+ 8EB4 21 C8 87         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 8EB7 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 8EB9 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 8EBB
 671+ 8EBB 18 18            jr 1F
 672+ 8EBD
 673+ 8EBD              ; -----
 674+ 8EBD
 675+ 8EBD E1           3 pop hl
 676+ 8EBE CD 5D 94         call NextScan
 677+ 8EC1 E5               push hl
 678+ 8EC2 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 8EC3 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 8EC5 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 8EC7 30 0C            jr nc,1F
 682+ 8EC9              ;                                                  ; _ 2º scanline si esto es así.
 683+ 8EC9 10 DC            djnz 2B
 684+ 8ECB
 685+ 8ECB              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 8ECB
 687+ 8ECB              ; LLegados a este punto:
 688+ 8ECB              ;
 689+ 8ECB              ;   NO HAY COLISIÓN !!!!!.
 690+ 8ECB              ;
 691+ 8ECB              ;   .db (Impacto) de Amadeus a "0".
 692+ 8ECB              ;   RES el bit2 de (Impacto2).
 693+ 8ECB              ;
 694+ 8ECB              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 8ECB              ;   Lo colocamos a "0".
 696+ 8ECB
 697+ 8ECB 21 C8 87         ld hl,Impacto2
 698+ 8ECE CB 96            res 2,(hl)
 699+ 8ED0 2A C9 87         ld hl,(Entidad_sospechosa_de_colision)
 700+ 8ED3 36 00            ld (hl),0
 701+ 8ED5
 702+ 8ED5 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 8ED6 C9               ret
 704+ 8ED7
 705+ 8ED7               ; ---------- ----------
 706+ 8ED7
 707+ 8ED7 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 8ED8 3A 62 87         ld a,(Columns)
 709+ 8EDB 47               ld b,a
 710+ 8EDC FD 7E 00     2 ld a,(iy)
 711+ 8EDF BE               cp (hl)
 712+ 8EE0 28 01            jr z,1F
 713+ 8EE2
 714+ 8EE2 1C               inc e
 715+ 8EE3
 716+ 8EE3 23           1 inc hl
 717+ 8EE4 FD 23            inc iy
 718+ 8EE6 10 F4            djnz 2B
 719+ 8EE8 C1               pop bc
 720+ 8EE9 C9               ret
 721+ 8EEA
 722+ 8EEA              ; -------------------------------------------------------------------------------------------------------------
 723+ 8EEA              ;
 724+ 8EEA              ;   13/03/23
 725+ 8EEA              ;
 726+ 8EEA              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 8EEA              ;
 728+ 8EEA              ;   DESTRUYE: HL,BC,DE y A.
 729+ 8EEA
 730+ 8EEA 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 8EED 7E               ld a,(hl)
 732+ 8EEE A7               and a
 733+ 8EEF C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 8EF0
 735+ 8EF0 44               ld b,h
 736+ 8EF1 4D               ld c,l
 737+ 8EF2 2A BB 87         ld hl,(Stack_snapshot_disparos)
 738+ 8EF5 E5               push hl
 739+ 8EF6 A7               and a
 740+ 8EF7 ED 42            sbc hl,bc
 741+ 8EF9 E5               push hl
 742+ 8EFA C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 8EFB
 744+ 8EFB E1               pop hl
 745+ 8EFC 54               ld d,h
 746+ 8EFD 5D               ld e,l
 747+ 8EFE 1B               dec de
 748+ 8EFF ED B8            lddr                                                ; Limpiamos.
 749+ 8F01
 750+ 8F01 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 8F04 22 BB 87         ld (Stack_snapshot_disparos),hl
 752+ 8F07
 753+ 8F07 C9               ret
 754+ 8F08
 755+ 8F08              ; -------------------------------------------------------------------------------------------------------------
 756+ 8F08              ;
 757+ 8F08              ;   18/07/23
 758+ 8F08              ;
 759+ 8F08
 760+ 8F08              Motor_de_disparos
 761+ 8F08
 762+ 8F08              ; Gestiona DISPAROS DE AMADEUS.
 763+ 8F08
 764+ 8F08 01 06 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 8F0B 2A C6 87         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 8F0E
 767+ 8F0E CD 31 8B     2 call Extrae_address
 768+ 8F11 7E               ld a,(hl)
 769+ 8F12 A7               and a
 770+ 8F13 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 8F15
 772+ 8F15              ; ----- ----- ----- ----- ----- -----
 773+ 8F15
 774+ 8F15 C5               push bc
 775+ 8F16 CD DA 8F         call foto_disparo_a_borrar
 776+ 8F19
 777+ 8F19              ; Existe colisión con este disparo???
 778+ 8F19
 779+ 8F19 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 8F1A 7E               ld a,(hl)
 781+ 8F1B 2B               dec hl
 782+ 8F1C E6 01            and 1
 783+ 8F1E 28 1D            jr z,9F
 784+ 8F20
 785+ 8F20              ;   En este punto:
 786+ 8F20              ;
 787+ 8F20              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 8F20              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 8F20              ;   _con la entidad).
 790+ 8F20              ;
 791+ 8F20              ;   Disparo_2A defw 0                                ; Control.
 792+ 8F20              ;    defw 0                                          ; Puntero objeto.
 793+ 8F20              ;    defw 0                                          ; Puntero de impresión.
 794+ 8F20              ;    defw 0                                          ; Rutina de impresión.
 795+ 8F20
 796+ 8F20 E5               push hl
 797+ 8F21
 798+ 8F21 06 04            ld b,4
 799+ 8F23 23           19 inc hl
 800+ 8F24 10 FD            djnz 19B
 801+ 8F26
 802+ 8F26 CD 31 8B         call Extrae_address
 803+ 8F29 CD 34 9B         call Genera_coordenadas_disparo
 804+ 8F2C
 805+ 8F2C              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 8F2C
 807+ 8F2C 21 CB 87         ld hl,Coordenadas_disparo_certero
 808+ 8F2F 72               ld (hl),d
 809+ 8F30 23               inc hl
 810+ 8F31 73               ld (hl),e
 811+ 8F32
 812+ 8F32              ; Elimino el disparo de la base de datos.
 813+ 8F32
 814+ 8F32 E1               pop hl
 815+ 8F33 CD 59 90         call Elimina_disparo_de_base_de_datos
 816+ 8F36 21 C8 87         ld hl,Impacto2
 817+ 8F39 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 8F3B
 819+ 8F3B 18 06            jr 11F
 820+ 8F3D
 821+ 8F3D CD 03 90     9 call Mueve_disparo
 822+ 8F40 CD DA 8F         call foto_disparo_a_borrar
 823+ 8F43
 824+ 8F43 C1           11 pop bc
 825+ 8F44 18 04            jr 7F
 826+ 8F46
 827+ 8F46              ; ----- ----- ----- ----- ----- -----
 828+ 8F46
 829+ 8F46 ED 42        1 sbc hl,bc
 830+ 8F48 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 8F4A
 832+ 8F4A 2A C6 87     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 8F4D 23               inc hl
 834+ 8F4E 23               inc hl
 835+ 8F4F 22 C6 87         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 8F52 18 BA            jr 2B
 837+ 8F54
 838+ 8F54 CD B6 8A     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 8F57              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 8F57
 841+ 8F57              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 8F57
 843+ 8F57 01 6E 85         ld bc,Disparo_11
 844+ 8F5A 2A C4 87         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 8F5D
 846+ 8F5D CD 31 8B     5 call Extrae_address
 847+ 8F60 7E               ld a,(hl)
 848+ 8F61 A7               and a
 849+ 8F62 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 8F64
 851+ 8F64              ; ----- ----- ----- ----- ----- -----
 852+ 8F64
 853+ 8F64 C5               push bc
 854+ 8F65 CD DA 8F         call foto_disparo_a_borrar
 855+ 8F68
 856+ 8F68              ; Existe colisión con este disparo???
 857+ 8F68
 858+ 8F68 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 8F69 7E               ld a,(hl)
 860+ 8F6A 2B               dec hl
 861+ 8F6B E6 01            and 1
 862+ 8F6D 28 4D            jr z,10F
 863+ 8F6F
 864+ 8F6F              ;! La colisión se produce con Amadeus???
 865+ 8F6F              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 8F6F
 867+ 8F6F E5               push hl
 868+ 8F70
 869+ 8F70 06 04            ld b,4
 870+ 8F72 23           16 inc hl
 871+ 8F73 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 8F75
 873+ 8F75 CD 31 8B         call Extrae_address
 874+ 8F78 CD 34 9B         call Genera_coordenadas_disparo
 875+ 8F7B
 876+ 8F7B 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 8F7C FE 16            cp $16
 878+ 8F7E 38 2A            jr c,15F
 879+ 8F80
 880+ 8F80
 881+ 8F80              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 8F80
 883+ 8F80 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 8F81
 885+ 8F81              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 8F81
 887+ 8F81 2A 9F 85         ld hl,(p.imp.amadeus)
 888+ 8F84
 889+ 8F84              ; Coordenada X de Amadeus en D.
 890+ 8F84
 891+ 8F84 7D               ld a,l
 892+ 8F85 E6 1F            and $1F
 893+ 8F87 57               ld d,a
 894+ 8F88
 895+ 8F88 21 8A 85         ld hl,Amadeus_db+8
 896+ 8F8B 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 8F8C
 898+ 8F8C 21 CD 87         ld hl,Coordenadas_X_Amadeus
 899+ 8F8F CD 55 8E         call Guarda_coordenadas_X
 900+ 8F92
 901+ 8F92 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 8F93
 903+ 8F93              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 8F93
 905+ 8F93 06 02            ld b,2
 906+ 8F95 C5           20 push bc
 907+ 8F96
 908+ 8F96 06 03            ld b,3
 909+ 8F98 21 CD 87         ld hl,Coordenadas_X_Amadeus
 910+ 8F9B 7E           18 ld a,(hl)
 911+ 8F9C BA               cp d
 912+ 8F9D 20 04            jr nz,17F
 913+ 8F9F
 914+ 8F9F              ;! Colisión Amadeus !!!!!!!!!!
 915+ 8F9F
 916+ 8F9F C1               pop bc
 917+ 8FA0 E1               pop hl
 918+ 8FA1 18 0D            jr 14F
 919+ 8FA3
 920+ 8FA3 23           17 inc hl
 921+ 8FA4 10 F5            djnz 18B
 922+ 8FA6
 923+ 8FA6 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 8FA7
 925+ 8FA7 C1               pop bc
 926+ 8FA8 10 EB            djnz 20B
 927+ 8FAA
 928+ 8FAA
 929+ 8FAA              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 8FAA              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 8FAA
 932+ 8FAA E1           15 pop hl
 933+ 8FAB 23               inc hl
 934+ 8FAC 35               dec (hl)
 935+ 8FAD 2B               dec hl
 936+ 8FAE 18 0C            jr 10F
 937+ 8FB0
 938+ 8FB0              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 8FB0              ; _ almacén de coordenadas_X de Amadeus.
 940+ 8FB0
 941+ 8FB0 E5           14 push hl
 942+ 8FB1 CD 59 90         call Elimina_disparo_de_base_de_datos
 943+ 8FB4 21 C8 87         ld hl,Impacto2
 944+ 8FB7 CB CE            set 1,(hl)
 945+ 8FB9 E1               pop hl
 946+ 8FBA 18 06            jr 12F
 947+ 8FBC
 948+ 8FBC              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 8FBC
 950+ 8FBC CD 03 90     10 call Mueve_disparo
 951+ 8FBF CD DA 8F         call foto_disparo_a_borrar
 952+ 8FC2 C1           12 pop bc
 953+ 8FC3
 954+ 8FC3 18 04            jr 8F
 955+ 8FC5
 956+ 8FC5              ; ----- ----- ----- ----- ----- -----
 957+ 8FC5
 958+ 8FC5 ED 42        4 sbc hl,bc
 959+ 8FC7 28 0A            jr z,6F
 960+ 8FC9
 961+ 8FC9 2A C4 87     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 8FCC 23               inc hl
 963+ 8FCD 23               inc hl
 964+ 8FCE 22 C4 87         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 8FD1 18 8A            jr 5B
 966+ 8FD3
 967+ 8FD3 CD AF 8A     6 call Inicia_Puntero_Disparo_Entidades
 968+ 8FD6 CD 5E 8E         call Limpia_Coordenadas_X
 969+ 8FD9 C9               ret
 970+ 8FDA
 971+ 8FDA              ; ------------------------------------------------------------------
 972+ 8FDA
 973+ 8FDA              foto_disparo_a_borrar
 974+ 8FDA
 975+ 8FDA 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 8FDB A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 8FDC C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 8FDD
 979+ 8FDD E5               push hl
 980+ 8FDE 23               inc hl
 981+ 8FDF 23               inc hl
 982+ 8FE0 ED 73 B3 87      ld (Stack),sp
 983+ 8FE4 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 8FE5 FD E1            pop iy
 985+ 8FE7 DD E1            pop ix
 986+ 8FE9 E1               pop hl
 987+ 8FEA ED 7B B3 87      ld sp,(Stack)
 988+ 8FEE 3A A2 87         ld a,(Ctrl_1)
 989+ 8FF1 CB C7            set 0,a
 990+ 8FF3 32 A2 87         ld (Ctrl_1),a
 991+ 8FF6 CD 16 71         call Guarda_foto_registros
 992+ 8FF9 3A A2 87         ld a,(Ctrl_1)
 993+ 8FFC CB 87            res 0,a
 994+ 8FFE 32 A2 87         ld (Ctrl_1),a
 995+ 9001 E1               pop hl
 996+ 9002 C9               ret
 997+ 9003
 998+ 9003              ;---------------------------------------------------
 999+ 9003              ;
1000+ 9003              ;   18/07/23
1001+ 9003              ;
1002+ 9003
1003+ 9003              Mueve_disparo
1004+ 9003
1005+ 9003              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9003              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9003              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9003
1009+ 9003 E5               push hl
1010+ 9004
1011+ 9004 7E               ld a,(hl)
1012+ 9005
1013+ 9005 06 04            ld b,4
1014+ 9007 23           1 inc hl
1015+ 9008 10 FD            djnz 1B
1016+ 900A
1017+ 900A              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 900A
1019+ 900A CD 31 8B         call Extrae_address
1020+ 900D
1021+ 900D E6 01            and 1
1022+ 900F 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9011
1024+ 9011              ; Disparo hacia arriba, (Amadeus).
1025+ 9011
1026+ 9011              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9011              ; _ de la dificultad.
1028+ 9011
1029+ 9011 CD 6C 94         call PreviousScan
1030+ 9014 CD 6C 94         call PreviousScan
1031+ 9017 CD 6C 94         call PreviousScan
1032+ 901A CD 6C 94         call PreviousScan
1033+ 901D
1034+ 901D              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 901D
1036+ 901D 7C               ld a,h
1037+ 901E FE 40            cp $40
1038+ 9020 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9022
1040+ 9022              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9022
1042+ 9022 EB               ex de,hl
1043+ 9023 06 04            ld b,4
1044+ 9025 2B           6 dec hl
1045+ 9026 10 FD            djnz 6B
1046+ 9028
1047+ 9028 CD 59 90         call Elimina_disparo_de_base_de_datos
1048+ 902B E1               pop hl
1049+ 902C 18 10            jr 7F
1050+ 902E
1051+ 902E              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 902E              ; HL contiene el puntero de impresión del disparo.
1053+ 902E              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 902E
1055+ 902E D5           3 push de
1056+ 902F C5               push bc
1057+ 9030
1058+ 9030 CD EC 8D         call Comprueba_Colision
1059+ 9033
1060+ 9033              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9033
1062+ 9033 78               ld a,b
1063+ 9034
1064+ 9034 C1               pop bc
1065+ 9035 D1               pop de
1066+ 9036
1067+ 9036 EB               ex de,hl
1068+ 9037
1069+ 9037 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 9038 23               inc hl                                      ; _ movimiento.
1071+ 9039 72               ld (hl),d
1072+ 903A
1073+ 903A E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 903B
1075+ 903B 23               inc hl                                      ; _ en curso.
1076+ 903C 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 903D 2B               dec hl
1078+ 903E
1079+ 903E C9           7 ret
1080+ 903F
1081+ 903F              ; Disparo hacia abajo, (Entidad).
1082+ 903F
1083+ 903F 3A D3 87     2 ld a,(Velocidad_disparo_entidades)
1084+ 9042 47               ld b,a
1085+ 9043
1086+ 9043 CD 5D 94     4 call NextScan
1087+ 9046 10 FB            djnz 4B
1088+ 9048
1089+ 9048              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 9048
1091+ 9048 7C               ld a,h
1092+ 9049 FE 58            cp $58
1093+ 904B 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 904D
1095+ 904D EB               ex de,hl
1096+ 904E 06 04            ld b,4
1097+ 9050 2B           5 dec hl
1098+ 9051 10 FD            djnz 5B
1099+ 9053
1100+ 9053 CD 59 90         call Elimina_disparo_de_base_de_datos
1101+ 9056 E1               pop hl
1102+ 9057 18 E5            jr 7B
1103+ 9059
1104+ 9059              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 9059
1106+ 9059 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 905C AF               xor a
1108+ 905D 77               ld (hl),a
1109+ 905E 54               ld d,h
1110+ 905F 5D               ld e,l
1111+ 9060 13               inc de
1112+ 9061 ED B0            ldir
1113+ 9063 C9               ret
1114+ 9064
1115+ 9064              ; -----------------------------------------------------------------
1116+ 9064              ;
1117+ 9064              ;   7/12/23
1118+ 9064              ;
1119+ 9064
1120+ 9064 3A C8 87     Selector_de_impactos ld a,(Impacto2)
1121+ 9067 A7               and a
1122+ 9068 C8               ret z
1123+ 9069
1124+ 9069              ; Analizamos si hay impacto por disparos.
1125+ 9069
1126+ 9069              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 9069
1128+ 9069 CB 4F            bit 1,a
1129+ 906B 28 07            jr z,1F
1130+ 906D
1131+ 906D 21 9B 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 9070 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 9072 18 08            jr 2F
1134+ 9074
1135+ 9074 CB 47        1 bit 0,a
1136+ 9076 C8               ret z
1137+ 9077
1138+ 9077              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 9077
1140+ 9077 21 A2 87         ld hl,Ctrl_1
1141+ 907A CB D6            set 2,(hl)
1142+ 907C
1143+ 907C C9           2 ret
1144+ 907D
1145+ 907D              ; -----------------------------------------------------------------
1146+ 907D              ;
1147+ 907D              ;   25/04/23
1148+ 907D              ;
1149+ 907D
1150+ 907D              Determina_resultado_comparativa
1151+ 907D
1152+ 907D              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 907D              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 907D              ;
1155+ 907D              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 907D              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 907D              ;
1158+ 907D              ;   SBC HL,DE
1159+ 907D
1160+ 907D              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 907D              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 907D
1163+ 907D              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 907D              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 907D
1166+ 907D
1167+ 907D 3A 75 87         ld a,(Cuad_objeto)
1168+ 9080 FE 02            cp 2
1169+ 9082 28 26            jr z,2F
1170+ 9084 38 24            jr c,2F
1171+ 9086
1172+ 9086              ; Cuadrantes 3º y 4º
1173+ 9086
1174+ 9086 E6 01            and 1
1175+ 9088 28 10            jr z,4F
1176+ 908A
1177+ 908A              ; Cuadrante 3º
1178+ 908A
1179+ 908A 7C               ld a,h
1180+ 908B 06 00            ld b,0
1181+ 908D
1182+ 908D CD 18 91         call Compara_cositas_H3
1183+ 9090
1184+ 9090 04               inc b
1185+ 9091 05               dec b
1186+ 9092 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 9093
1188+ 9093 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 9094 06 00            ld b,0
1190+ 9096
1191+ 9096 CD 2A 91         call Compara_cositas_L3
1192+ 9099 C9               ret
1193+ 909A
1194+ 909A              ; Cuadrante 4º
1195+ 909A
1196+ 909A 7C           4 ld a,h
1197+ 909B 06 00            ld b,0
1198+ 909D
1199+ 909D CD 3C 91         call Compara_cositas_H4
1200+ 90A0
1201+ 90A0 04               inc b
1202+ 90A1 05               dec b
1203+ 90A2 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 90A3
1205+ 90A3 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 90A4 06 00            ld b,0
1207+ 90A6
1208+ 90A6 CD 52 91         call Compara_cositas_L4
1209+ 90A9 C9               ret
1210+ 90AA
1211+ 90AA              ; Cuadrantes 1º y 2º.
1212+ 90AA
1213+ 90AA 28 10        2 jr z,3F
1214+ 90AC
1215+ 90AC              ; 1er Cuadrante
1216+ 90AC
1217+ 90AC 7C               ld a,h
1218+ 90AD 06 00            ld b,0
1219+ 90AF
1220+ 90AF CD F0 90         call Compara_cositas_H1
1221+ 90B2
1222+ 90B2 04               inc b
1223+ 90B3 05               dec b
1224+ 90B4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 90B5
1226+ 90B5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 90B6 06 00            ld b,0
1228+ 90B8
1229+ 90B8 CD 06 91         call Compara_cositas_L1
1230+ 90BB C9               ret
1231+ 90BC
1232+ 90BC
1233+ 90BC              ; 2º Cuadrante
1234+ 90BC
1235+ 90BC 7C           3 ld a,h
1236+ 90BD 06 00            ld b,0
1237+ 90BF
1238+ 90BF CD CC 90         call Compara_cositas_H2
1239+ 90C2
1240+ 90C2 04               inc b
1241+ 90C3 05               dec b
1242+ 90C4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 90C5
1244+ 90C5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 90C6 06 00            ld b,0
1246+ 90C8
1247+ 90C8 CD DE 90         call Compara_cositas_L2
1248+ 90CB C9               ret
1249+ 90CC
1250+ 90CC A7           Compara_cositas_H2 and a
1251+ 90CD 28 0D            jr z,1F
1252+ 90CF              ;    cp $fd
1253+ 90CF              ;    jr z,1F
1254+ 90CF              ;    cp $fe
1255+ 90CF              ;    jr z,1F
1256+ 90CF FE FF            cp $ff
1257+ 90D1 28 09            jr z,1F
1258+ 90D3 FE 01            cp $01
1259+ 90D5 28 05            jr z,1F
1260+ 90D7 FE 02            cp $02
1261+ 90D9 28 01            jr z,1F
1262+ 90DB C0               ret nz
1263+ 90DC 04           1 inc b
1264+ 90DD C9               ret
1265+ 90DE
1266+ 90DE A7           Compara_cositas_L2 and a
1267+ 90DF 28 0D            jr z,1F
1268+ 90E1              ;    cp $fd
1269+ 90E1              ;    jr z,1F
1270+ 90E1 FE FE            cp $fe
1271+ 90E3 28 09            jr z,1F
1272+ 90E5 FE FF            cp $ff
1273+ 90E7 28 05            jr z,1F
1274+ 90E9 FE 01            cp $01
1275+ 90EB 28 01            jr z,1F
1276+ 90ED              ;    cp $02
1277+ 90ED              ;    jr z,1F
1278+ 90ED C0               ret nz
1279+ 90EE 04           1 inc b
1280+ 90EF C9               ret
1281+ 90F0
1282+ 90F0 A7           Compara_cositas_H1 and a
1283+ 90F1 28 11            jr z,1F
1284+ 90F3              ;    cp $fd
1285+ 90F3              ;    jr z,1F
1286+ 90F3              ;    cp $fe
1287+ 90F3              ;    jr z,1F
1288+ 90F3 FE FF            cp $ff
1289+ 90F5 28 0D            jr z,1F
1290+ 90F7 FE 01            cp $01
1291+ 90F9 28 09            jr z,1F
1292+ 90FB FE 02            cp $02
1293+ 90FD 28 05            jr z,1F
1294+ 90FF FE 03            cp $03
1295+ 9101 28 01            jr z,1F
1296+ 9103 C0               ret nz
1297+ 9104 04           1 inc b
1298+ 9105 C9               ret
1299+ 9106
1300+ 9106 A7           Compara_cositas_L1 and a
1301+ 9107 28 0D            jr z,1F
1302+ 9109              ;    cp $fd
1303+ 9109              ;    jr z,1F
1304+ 9109              ;    cp $fe
1305+ 9109              ;    jr z,1F
1306+ 9109              ;    cp $ff
1307+ 9109              ;    jr z,1F
1308+ 9109 FE 01            cp $01
1309+ 910B 28 09            jr z,1F
1310+ 910D FE 02            cp $02
1311+ 910F 28 05            jr z,1F
1312+ 9111 FE 03            cp $03
1313+ 9113 28 01            jr z,1F
1314+ 9115 C0               ret nz
1315+ 9116 04           1 inc b
1316+ 9117 C9               ret
1317+ 9118
1318+ 9118 A7           Compara_cositas_H3 and a
1319+ 9119 28 0D            jr z,1F
1320+ 911B              ;    cp $fd
1321+ 911B              ;    jr z,1F
1322+ 911B FE FE            cp $fe
1323+ 911D 28 09            jr z,1F
1324+ 911F FE FF            cp $ff
1325+ 9121 28 05            jr z,1F
1326+ 9123 FE 01            cp $01
1327+ 9125 28 01            jr z,1F
1328+ 9127              ;    cp $02
1329+ 9127              ;    jr z,1F
1330+ 9127              ;    cp $03
1331+ 9127              ;    jr z,1F
1332+ 9127 C0               ret nz
1333+ 9128 04           1 inc b
1334+ 9129 C9               ret
1335+ 912A
1336+ 912A A7           Compara_cositas_L3 and a
1337+ 912B 28 0D            jr z,1F
1338+ 912D              ;    cp $fd
1339+ 912D              ;    jr z,1F
1340+ 912D              ;    cp $fe
1341+ 912D              ;    jr z,1F
1342+ 912D              ;    cp $ff
1343+ 912D              ;    jr z,1F
1344+ 912D FE 01            cp $01
1345+ 912F 28 09            jr z,1F
1346+ 9131 FE 02            cp $02
1347+ 9133 28 05            jr z,1F
1348+ 9135 FE 03            cp $03
1349+ 9137 28 01            jr z,1F
1350+ 9139 C0               ret nz
1351+ 913A 04           1 inc b
1352+ 913B C9               ret
1353+ 913C
1354+ 913C A7           Compara_cositas_H4 and a
1355+ 913D 28 11            jr z,1F
1356+ 913F FE FD            cp $fd
1357+ 9141 28 0D            jr z,1F
1358+ 9143 FE FE            cp $fe
1359+ 9145 28 09            jr z,1F
1360+ 9147 FE FF            cp $ff
1361+ 9149 28 05            jr z,1F
1362+ 914B FE 01            cp $01
1363+ 914D 28 01            jr z,1F
1364+ 914F              ;    cp $02
1365+ 914F              ;    jr z,1F
1366+ 914F              ;    cp $03
1367+ 914F              ;    jr z,1F
1368+ 914F C0               ret nz
1369+ 9150 04           1 inc b
1370+ 9151 C9               ret
1371+ 9152
1372+ 9152 A7           Compara_cositas_L4 and a
1373+ 9153 28 0D            jr z,1F
1374+ 9155              ;    cp $fd
1375+ 9155              ;    jr z,1F
1376+ 9155 FE FE            cp $fe
1377+ 9157 28 09            jr z,1F
1378+ 9159 FE FF            cp $ff
1379+ 915B 28 05            jr z,1F
1380+ 915D FE 01            cp $01
1381+ 915F 28 01            jr z,1F
1382+ 9161              ;    cp $02
1383+ 9161              ;    jr z,1F
1384+ 9161              ;    cp $03
1385+ 9161              ;    jr z,1F
1386+ 9161 C0               ret nz
1387+ 9162 04           1 inc b
1388+ 9163 C9               ret
# file closed: Disparo.asm
1795  9164              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9164              ; ******************************************************************************************************************************************************************************************
   2+ 9164              ;
   3+ 9164              ; 26/06/23
   4+ 9164              ;
   5+ 9164              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9164
   7+ 9164              Draw
   8+ 9164
   9+ 9164 CD 51 94     	call Prepara_draw
  10+ 9167 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9168 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9169 28 05        	jr z,2F
  13+ 916B
  14+ 916B 3A 75 87     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 916E 18 0C        	jr 1F
  16+ 9170
  17+ 9170 2A 73 87     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 9173 22 63 87     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 9176 CD 05 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9179              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9179
  22+ 9179 CD C5 9D     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 917C
  24+ 917C 3A 83 87     1 ld a,(Ctrl_0)
  25+ 917F CB 6F        	bit 5,a
  26+ 9181 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 9183
  28+ 9183 CD 9B 91     	call Comprueba_limite_horizontal
  29+ 9186 CD 2B 92     	call Comprueba_limite_vertical
  30+ 9189
  31+ 9189              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9189              ; -----------------------
  33+ 9189              ; -----------------------
  34+ 9189              ; -----------------------
  35+ 9189
  36+ 9189 CD 81 93     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 918C CD B8 93     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 918F CD 17 94     	call Define_rutina_de_impresion
  39+ 9192
  40+ 9192 3A 83 87     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  41+ 9195 CB AF        	res 5,a											; _a ser de utilidad.
  42+ 9197 32 83 87     	ld (Ctrl_0),a
  43+ 919A
  44+ 919A C9           	ret
  45+ 919B
  46+ 919B              ; *******************************************************************************************************************************************************************************************
  47+ 919B              ;	21/01/23
  48+ 919B              ;
  49+ 919B              ; 	Comprueba_limite_horizontal.
  50+ 919B              ;
  51+ 919B              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  52+ 919B              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  53+ 919B              ;
  54+ 919B              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  55+ 919B              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  56+ 919B              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  57+ 919B              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  58+ 919B
  59+ 919B
  60+ 919B
  61+ 919B 3A 83 87     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  62+ 919E CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  63+ 91A0 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  64+ 91A2 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  65+ 91A4 32 83 87     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  66+ 91A7 18 09            jr 6F
  67+ 91A9 CB 5F        1 bit 3,a
  68+ 91AB 28 0A            jr z,2F
  69+ 91AD E6 F7            and $f7
  70+ 91AF 32 83 87         ld (Ctrl_0),a
  71+ 91B2 CD 05 93     6 call Inicializacion
  72+ 91B5 18 5B            jr 5F
  73+ 91B7 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  74+ 91B8
  75+ 91B8              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  76+ 91B8              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  77+ 91B8
  78+ 91B8 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  79+ 91B9 2A 85 87     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  80+ 91BC CD 70 97     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  81+ 91BF 67           	ld h,a
  82+ 91C0 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  83+ 91C1 CD 70 97     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  84+ 91C4 67           	ld h,a
  85+ 91C5 A7           	and a
  86+ 91C6 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  87+ 91C8 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  88+ 91C9 3A 75 87     	ld a,(Cuad_objeto)
  89+ 91CC FE 02        	cp 2
  90+ 91CE 38 1E        	jr c,3F
  91+ 91D0 28 1C        	jr z,3F
  92+ 91D2 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  93+ 91D3 28 23            jr z,7F
  94+ 91D5 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  95+ 91D7 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  96+ 91D9 E1           	pop hl
  97+ 91DA
  98+ 91DA              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  99+ 91DA              ; _para indicar con E="2" en caso necesario.
 100+ 91DA
 101+ 91DA E5               push hl
 102+ 91DB C5               push bc
 103+ 91DC CD 70 97     	call calcula_tercio
 104+ 91DF FE 01        	cp 1
 105+ 91E1 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 106+ 91E3 CD 13 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 107+ 91E6 28 26            jr z,9F
 108+ 91E8 38 24            jr c,9F
 109+ 91EA 1E 00        11 ld e,0
 110+ 91EC 18 22            jr 8F
 111+ 91EE 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 112+ 91EF 28 07        	jr z, 7F
 113+ 91F1 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 114+ 91F3 1E 00         	ld e,0
 115+ 91F5 E1           	pop hl
 116+ 91F6 18 04        	jr 4F
 117+ 91F8 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 118+ 91FA 18 15            jr 10F
 119+ 91FC
 120+ 91FC              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 121+ 91FC              ; _para indicar con E="2" en caso necesario.
 122+ 91FC
 123+ 91FC E5           4 push hl
 124+ 91FD C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 125+ 91FE CD 70 97     	call calcula_tercio
 126+ 9201 FE 01        	cp 1
 127+ 9203 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 128+ 9205 CD 13 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 129+ 9208 28 04            jr z,9F
 130+ 920A 30 02            jr nc,9F
 131+ 920C 18 02        	jr 8F
 132+ 920E 1E 02        9 ld e,2
 133+ 9210 C1           8 pop bc
 134+ 9211 E1           10 pop hl
 135+ 9212 C9           5 ret
 136+ 9213
 137+ 9213              ; --------------------
 138+ 9213              ;
 139+ 9213              ; 25/08/22
 140+ 9213
 141+ 9213 CD 70 97     Comprueba_centro call calcula_tercio
 142+ 9216 67               ld h,a
 143+ 9217 08           	ex af,af
 144+ 9218 FE 02        	cp 2
 145+ 921A 38 07        	jr c,1F
 146+ 921C 28 05        	jr z,1F
 147+ 921E 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 148+ 9221 18 03        	jr 2F
 149+ 9223 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 150+ 9226 08           2 ex af,af
 151+ 9227 A7               and a
 152+ 9228 ED 42            sbc hl,bc
 153+ 922A C9               ret
 154+ 922B
 155+ 922B              ; *********************************************************************************************************************************************************************************************
 156+ 922B              ;
 157+ 922B              ;   16/8/22
 158+ 922B              ;
 159+ 922B              ;	Comprueba_limite_vertical
 160+ 922B              ;
 161+ 922B              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 162+ 922B              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 163+ 922B              ;
 164+ 922B
 165+ 922B 2A 63 87     Comprueba_limite_vertical ld hl,(Posicion_actual)
 166+ 922E 7D           	ld a,l
 167+ 922F E6 1F        	and $1F
 168+ 9231 57           	ld d,a
 169+ 9232 3A 87 87     	ld a,(Limite_vertical)
 170+ 9235 BA           	cp d 											; Límite - Posición.
 171+ 9236 08           	ex af,af 										; Resultado de CP d en F'.
 172+ 9237 3A 75 87     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 173+ 923A CB 47        	bit 0,a
 174+ 923C 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 175+ 923E
 176+ 923E              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 177+ 923E
 178+ 923E 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 179+ 923F 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 180+ 9241
 181+ 9241              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 182+ 9241              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 183+ 9241
 184+ 9241 3A 67 87         ld a,(Coordenada_X)
 185+ 9244 16 0F            ld d,Centro_izquierda
 186+ 9246 A7               and a
 187+ 9247 92               sub d 											 ; Posición - Centro_izquierda.
 188+ 9248 28 1E            jr z,3F
 189+ 924A 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 190+ 924C              ;                                                    ; _salimos sin modificar nada.
 191+ 924C 18 0E            jr 2F
 192+ 924E 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 193+ 924F 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 194+ 9251
 195+ 9251              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 196+ 9251              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 197+ 9251
 198+ 9251 3A 67 87         ld a,(Coordenada_X)
 199+ 9254 16 10            ld d,Centro_derecha
 200+ 9256 A7               and a
 201+ 9257 92               sub d
 202+ 9258 28 0E            jr z,3F
 203+ 925A 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 204+ 925C              ;                                                    ; _salimos sin modificar nada.
 205+ 925C CB 43        2 bit 0,e
 206+ 925E 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 207+ 9260 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 208+ 9261 CD F5 92         call Modificaccionne
 209+ 9264 C1           	pop bc
 210+ 9265 CD 05 93         call Inicializacion
 211+ 9268 C9           3 ret 				 								 ; Salimos de la rutina.
 212+ 9269
 213+ 9269              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 214+ 9269
 215+ 9269 C5           4 push bc
 216+ 926A 01 62 87     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 217+ 926D 0A           	ld a,(bc)
 218+ 926E 3D           	dec a
 219+ 926F 47           	ld b,a 											 ; Columnas-1 en B.
 220+ 9270 7D           	ld a,l
 221+ 9271 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 222+ 9272 CB 47        	bit 0,a
 223+ 9274 28 03        	jr z,5F
 224+ 9276 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 225+ 9277 18 2E        	jr 7F
 226+ 9279
 227+ 9279              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 228+ 9279
 229+ 9279 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 230+ 927A F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 231+ 927B 3A 83 87     	ld a,(Ctrl_0)
 232+ 927E CB 4F        	bit 1,a
 233+ 9280 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 234+ 9282 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 235+ 9283
 236+ 9283              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 237+ 9283
 238+ 9283 1C               inc e
 239+ 9284 1D               dec e
 240+ 9285 20 07            jr nz,12F
 241+ 9287 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 242+ 9288 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 243+ 9289 22 63 87     	ld (Posicion_actual),hl
 244+ 928C 18 44        13 jr 9F
 245+ 928E CB 43        12 bit 0,e
 246+ 9290 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 247+ 9292              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 248+ 9292 C1           	pop bc
 249+ 9293 18 D3        	jr 3B
 250+ 9295 80           14 add b
 251+ 9296 6F               ld l,a
 252+ 9297 22 63 87     	ld (Posicion_actual),hl
 253+ 929A CD F5 92         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 254+ 929D 18 33            jr 9F 											 ; _inicializamos y salimos.
 255+ 929F E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 256+ 92A1 32 83 87         ld (Ctrl_0),a
 257+ 92A4 F1           	pop af
 258+ 92A5 18 2B        	jr 9F
 259+ 92A7
 260+ 92A7              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 261+ 92A7
 262+ 92A7 F5           7 push af
 263+ 92A8 3A 83 87     	ld a,(Ctrl_0)
 264+ 92AB CB 47        	bit 0,a
 265+ 92AD 20 1D        	jr nz,8F
 266+ 92AF F1           	pop af
 267+ 92B0
 268+ 92B0              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 269+ 92B0
 270+ 92B0 1C           	inc e
 271+ 92B1 1D               dec e
 272+ 92B2 20 07            jr nz,10F
 273+ 92B4 90           	sub b
 274+ 92B5 6F               ld l,a
 275+ 92B6 22 63 87     	ld (Posicion_actual),hl
 276+ 92B9 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 277+ 92BB              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 278+ 92BB CB 43        10 bit 0,e
 279+ 92BD 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 280+ 92BF              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 281+ 92BF C1           	pop bc
 282+ 92C0 18 A6        	jr 3B
 283+ 92C2 90           16 sub b
 284+ 92C3 6F               ld l,a
 285+ 92C4 22 63 87     	ld (Posicion_actual),hl
 286+ 92C7 CD F5 92         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 287+ 92CA 18 06            jr 9F
 288+ 92CC E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 289+ 92CE 32 83 87         ld (Ctrl_0),a
 290+ 92D1 F1           	pop af
 291+ 92D2 C1           9 pop bc
 292+ 92D3 1E 00        	ld e,0
 293+ 92D5 CD 05 93         call Inicializacion
 294+ 92D8 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 295+ 92D9 08           	ex af,af
 296+ 92DA F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 297+ 92DB 18 8B            jr 3B
 298+ 92DD
 299+ 92DD              ; --------------------
 300+ 92DD
 301+ 92DD 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 302+ 92DF CD 6C 94     1 call PreviousScan
 303+ 92E2 10 FB            djnz 1B
 304+ 92E4 22 63 87     	ld (Posicion_actual),hl
 305+ 92E7 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 306+ 92E8 C9           	ret
 307+ 92E9
 308+ 92E9              ; --------------------
 309+ 92E9
 310+ 92E9 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 311+ 92EB CD 5D 94     1 call NextScan
 312+ 92EE 10 FB            djnz 1B
 313+ 92F0 22 63 87     	ld (Posicion_actual),hl
 314+ 92F3 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 315+ 92F4 C9           	ret
 316+ 92F5
 317+ 92F5              ; --------------------
 318+ 92F5              ;
 319+ 92F5              ;	22/01/23
 320+ 92F5              ;
 321+ 92F5              ;	E="1". Hemos cambiado de cuadrante.
 322+ 92F5              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 323+ 92F5              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 324+ 92F5
 325+ 92F5
 326+ 92F5              Modificaccionne
 327+ 92F5
 328+ 92F5 3A 75 87     	ld a,(Cuad_objeto)
 329+ 92F8 FE 02        	cp 2
 330+ 92FA CC DD 92         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 331+ 92FD DC DD 92         call c,Modifica_Pos_actual
 332+ 9300 C8           	ret z
 333+ 9301 CD E9 92         call Modifica_Pos_actual2
 334+ 9304 C9               ret
 335+ 9305
 336+ 9305              ; *************************************************************************************************************************************************************************************************
 337+ 9305              ;
 338+ 9305              ;	13/8/22
 339+ 9305              ;
 340+ 9305              ;	Inicializacion
 341+ 9305              ;
 342+ 9305              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 343+ 9305              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 344+ 9305              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 345+ 9305              ;
 346+ 9305              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 347+ 9305              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 348+ 9305              ;	_ desaparece/aparece.
 349+ 9305
 350+ 9305              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 351+ 9305              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 352+ 9305              ;
 353+ 9305              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 354+ 9305              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 355+ 9305              ; 		   [E] ="0"
 356+ 9305
 357+ 9305              ; 	OUTPUT: DESTRUYE [AF] y [D].
 358+ 9305
 359+ 9305 CD 70 97     Inicializacion call calcula_tercio
 360+ 9308 28 36        	jr z,primit
 361+ 930A E6 02        	and 2
 362+ 930C 20 07        	jr nz,segmit
 363+ 930E 7D           	ld a,l
 364+ 930F FE 7F        	cp $7f
 365+ 9311 38 2D        	jr c,primit
 366+ 9313 28 2B        	jr z,primit
 367+ 9315 CD 7B 93     segmit call column
 368+ 9318 38 13        	jr c,tercuad
 369+ 931A 3E 04        cuarcuad ld a,4
 370+ 931C 32 75 87     	ld (Cuad_objeto),a
 371+ 931F 21 20 48     	ld hl,$4820
 372+ 9322 22 85 87     	ld (Limite_horizontal),hl
 373+ 9325 21 87 87     	ld hl,Limite_vertical
 374+ 9328 36 0D        	ld (hl),$0d
 375+ 932A 08           	ex af,af
 376+ 932B 18 3C        	jr 1F
 377+ 932D              tercuad
 378+ 932D 3E 03        	ld a,3
 379+ 932F 32 75 87     	ld (Cuad_objeto),a
 380+ 9332 21 20 48     	ld hl,$4820
 381+ 9335 22 85 87     	ld (Limite_horizontal),hl
 382+ 9338 21 87 87     	ld hl,Limite_vertical
 383+ 933B 36 12        	ld (hl),$12
 384+ 933D 08           	ex af,af
 385+ 933E 18 29        	jr 1F
 386+ 9340 CD 7B 93     primit call column
 387+ 9343 38 13        	jr c, primcuad
 388+ 9345              segcuad
 389+ 9345 3E 02        	ld a,2
 390+ 9347 32 75 87     	ld (Cuad_objeto),a
 391+ 934A 21 C0 4F     	ld hl,$4fc0
 392+ 934D 22 85 87     	ld (Limite_horizontal),hl
 393+ 9350 21 87 87     	ld hl,Limite_vertical
 394+ 9353 36 0D        	ld (hl),$0d
 395+ 9355 08           	ex af,af
 396+ 9356 18 11        	jr 1F
 397+ 9358              primcuad
 398+ 9358 3E 01        	ld a,1
 399+ 935A 32 75 87     	ld (Cuad_objeto),a
 400+ 935D 21 C0 4F     	ld hl,$4fc0
 401+ 9360 22 85 87     	ld (Limite_horizontal),hl
 402+ 9363 21 87 87     	ld hl,Limite_vertical
 403+ 9366 36 12        	ld (hl),$12
 404+ 9368 08           	ex af,af
 405+ 9369
 406+ 9369 C5           1 push bc
 407+ 936A E5           	push hl
 408+ 936B D5           	push de
 409+ 936C
 410+ 936C 2A 63 87     	ld hl,(Posicion_actual)
 411+ 936F CD 08 9B     	call Genera_coordenadas
 412+ 9372
 413+ 9372 D1           	pop de
 414+ 9373 E1           	pop hl
 415+ 9374 C1           	pop bc
 416+ 9375
 417+ 9375 21 83 87     	ld hl,Ctrl_0
 418+ 9378 CB EE        	set 5,(hl)
 419+ 937A C9           	ret
 420+ 937B
 421+ 937B              ; ------------------------------------------------------------------------------------------------------------------
 422+ 937B
 423+ 937B              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 424+ 937B              ;
 425+ 937B              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 426+ 937B
 427+ 937B 7D           column ld a,l
 428+ 937C E6 1F        	and $1f
 429+ 937E FE 10         	cp $10
 430+ 9380 C9            	ret
 431+ 9381
 432+ 9381              ; --------------------------------------------------------------------------------------------------------------------
 433+ 9381              ;
 434+ 9381              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 435+ 9381              ;
 436+ 9381              ; 14/12/22
 437+ 9381              ;
 438+ 9381              ;	Modifica: A y BC.
 439+ 9381
 440+ 9381 3A 75 87     calcula_CColumnass ld a,(Cuad_objeto)
 441+ 9384 E6 01        	and 1
 442+ 9386 28 17        	jr z,1F
 443+ 9388
 444+ 9388              ; Nos encontramos en la parte izquierda de la pantalla
 445+ 9388
 446+ 9388 3A 67 87     	ld a,(Coordenada_X)
 447+ 938B 47           	ld b,a
 448+ 938C 04           	inc b											; (Coordenada_X)+1 en B.
 449+ 938D 79           	ld a,c
 450+ 938E 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 451+ 938F 38 08        	jr c,2F
 452+ 9391 47           	ld b,a
 453+ 9392 79           	ld a,c
 454+ 9393 90           	sub b
 455+ 9394 32 84 87     	ld (Columnas),a
 456+ 9397 18 1B        	jr 4F
 457+ 9399 79           2 ld a,c
 458+ 939A 32 84 87     	ld (Columnas),a
 459+ 939D 18 15        	jr 4F
 460+ 939F
 461+ 939F              ; Nos encontramos en la parte derecha de la pantalla.
 462+ 939F
 463+ 939F 3A 67 87     1 ld a,(Coordenada_X)
 464+ 93A2 81           	add c
 465+ 93A3 3D           	dec a
 466+ 93A4 D6 1F        	sub $1f
 467+ 93A6 38 08        	jr c,3F
 468+ 93A8 47           	ld b,a
 469+ 93A9 79           	ld a,c
 470+ 93AA 90           	sub b
 471+ 93AB 32 84 87     	ld (Columnas),a
 472+ 93AE 18 04        	jr 4F
 473+ 93B0 79           3 ld a,c
 474+ 93B1 32 84 87     	ld (Columnas),a
 475+ 93B4 D9           4 exx
 476+ 93B5 4F           	ld c,a
 477+ 93B6 D9           	exx
 478+ 93B7 C9            ret
 479+ 93B8
 480+ 93B8              ; --------------------------------------------------------------------------------------------------------------------
 481+ 93B8              ;
 482+ 93B8              ;   19/7/23
 483+ 93B8              ;
 484+ 93B8              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 485+ 93B8              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 486+ 93B8              ;
 487+ 93B8              ;	OUTPUT: IX Contienen el puntero de impresión.
 488+ 93B8              ;			HL e IY Contienen (Puntero_objeto).
 489+ 93B8              ;
 490+ 93B8              ;	DESTRUYE: HL,B Y A.
 491+ 93B8
 492+ 93B8 3A 75 87     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 493+ 93BB FE 02        	cp 2
 494+ 93BD 38 18        	jr c,1F
 495+ 93BF 28 16        	jr z,1F
 496+ 93C1 E6 01        	and 1
 497+ 93C3 28 0D        	jr z,3F
 498+ 93C5
 499+ 93C5              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 500+ 93C5
 501+ 93C5 CD 0B 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 502+ 93C8
 503+ 93C8 7D           9 ld a,l
 504+ 93C9 E6 1F        	and $1f
 505+ 93CB 28 2A        	jr z,7F
 506+ 93CD 2B           	dec hl
 507+ 93CE 10 F8        	djnz 9B
 508+ 93D0 18 25        	jr 7F
 509+ 93D2
 510+ 93D2              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 511+ 93D2
 512+ 93D2 2A 63 87     3 ld hl,(Posicion_actual)
 513+ 93D5 18 20        	jr 7F
 514+ 93D7
 515+ 93D7 28 14        1 jr z,2F
 516+ 93D9
 517+ 93D9              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 518+ 93D9
 519+ 93D9 CD 0B 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 93DC
 521+ 93DC 7D           4 ld a,l
 522+ 93DD E6 1F        	and $1f
 523+ 93DF 28 03        	jr z,6F
 524+ 93E1 2B           	dec hl
 525+ 93E2 10 F8        	djnz 4B
 526+ 93E4 06 0F        6 ld b,15
 527+ 93E6 CD 6C 94     5 call PreviousScan
 528+ 93E9 10 FB        	djnz 5B
 529+ 93EB 18 0A        	jr 7F
 530+ 93ED
 531+ 93ED              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 532+ 93ED
 533+ 93ED CD 0B 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 534+ 93F0 06 0F        	ld b,15
 535+ 93F2 CD 6C 94     8 call PreviousScan
 536+ 93F5 10 FB        	djnz 8B
 537+ 93F7
 538+ 93F7 E5           7 push hl
 539+ 93F8 DD E1        	pop ix
 540+ 93FA
 541+ 93FA 2A 65 87     	ld hl,(Puntero_objeto)
 542+ 93FD E5           	push hl
 543+ 93FE FD E1        	pop iy
 544+ 9400
 545+ 9400              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 546+ 9400
 547+ 9400 3A 83 87     	ld a,(Ctrl_0)
 548+ 9403 CB 77        	bit 6,a
 549+ 9405 C8           	ret z
 550+ 9406
 551+ 9406              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 552+ 9406              ; _ entidad / Amadeus´.
 553+ 9406
 554+ 9406 DD 22 9F 85  	ld (p.imp.amadeus),ix
 555+ 940A
 556+ 940A C9           	ret
 557+ 940B
 558+ 940B              ; --------------------------------------------------------------------------------------------------------------------
 559+ 940B              ;
 560+ 940B              ;	2/1/23
 561+ 940B              ;
 562+ 940B              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 563+ 940B              ;
 564+ 940B              ;	Tras esta rutina tenemos:
 565+ 940B              ;
 566+ 940B              ;	OUTPUT: HL contiene (Posicion_actual).
 567+ 940B              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 568+ 940B              ;
 569+ 940B              ;	DESTRUYE!!!!! HL,B y A.
 570+ 940B
 571+ 940B 2A 63 87     Operandos ld hl,(Posicion_actual)
 572+ 940E 3A 84 87     	ld a,(Columnas)
 573+ 9411 3D           	dec a
 574+ 9412 20 01        	jr nz,1F
 575+ 9414 3C           	inc a
 576+ 9415 47           1 ld b,a
 577+ 9416 C9           	ret
 578+ 9417
 579+ 9417              ; --------------------------------------------------------------------------------------------------------------------
 580+ 9417              ;
 581+ 9417              ;	3/1/23
 582+ 9417              ;
 583+ 9417              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 584+ 9417              ;
 585+ 9417              ;	Destruye: A,B,HL y DE.
 586+ 9417
 587+ 9417              Define_rutina_de_impresion
 588+ 9417
 589+ 9417 3A 62 87     	ld a,(Columns)
 590+ 941A 47           	ld b,a
 591+ 941B 3A 84 87     	ld a,(Columnas)
 592+ 941E B8           	cp b
 593+ 941F 20 0D        	jr nz,2f
 594+ 9421
 595+ 9421              ;	La entidad se imprime entera.
 596+ 9421
 597+ 9421 21 40 95     	ld hl, Indice_entidades_completas
 598+ 9424 E6 01        	and 1
 599+ 9426 28 02        	jr z,1F
 600+ 9428
 601+ 9428 23           	inc hl
 602+ 9429 23           	inc hl
 603+ 942A
 604+ 942A CD 31 8B     1 call Extrae_address
 605+ 942D C9           	ret		;	ret
 606+ 942E
 607+ 942E              ;	La entidad no se imprime entera en pantalla.
 608+ 942E
 609+ 942E 3A 75 87     2 ld a,(Cuad_objeto)
 610+ 9431 E6 01        	and 1
 611+ 9433 28 17        	jr z,3F
 612+ 9435
 613+ 9435              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 614+ 9435
 615+ 9435 21 44 95     	ld hl, Indice_entidades_incompletas_izquierda
 616+ 9438 3A 62 87     4 ld a,(Columns)
 617+ 943B E6 01        	and 1
 618+ 943D 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 619+ 943F
 620+ 943F 23           	inc hl
 621+ 9440 23           	inc hl
 622+ 9441
 623+ 9441 3A 84 87     	ld a,(Columnas)
 624+ 9444 E6 01        	and 1
 625+ 9446 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 626+ 9448
 627+ 9448 23           	inc hl
 628+ 9449 23           	inc hl
 629+ 944A
 630+ 944A 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 631+ 944C
 632+ 944C 21 4A 95     3 ld hl, Indice_entidades_incompletas_derecha
 633+ 944F 18 E7        	jr 4B
 634+ 9451
 635+ 9451              ; --------------------------------------------------------------------------------------------------------------------
 636+ 9451              ;
 637+ 9451              ;	Prepara_draw
 638+ 9451              ;
 639+ 9451              ;	Es una rutina de carga.
 640+ 9451              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 641+ 9451              ;
 642+ 9451              ;	FUNCIONAMIENTO:
 643+ 9451              ;
 644+ 9451              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 645+ 9451              ;	- LD (Posicion_actual) del objeto en [HL].
 646+ 9451              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 647+ 9451              ;
 648+ 9451              ;	DESTRUYE:
 649+ 9451              ;
 650+ 9451              ;	Logicamente, BC,HL y E quedan destruidos.
 651+ 9451
 652+ 9451 21 61 87     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 653+ 9454 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 654+ 9455 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 655+ 9456 4E           	ld c,(hl)
 656+ 9457 2A 63 87     	ld hl,(Posicion_actual)
 657+ 945A 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 658+ 945C C9           	ret
 659+ 945D
 660+ 945D              ;----------------------------------------------------------------------------------------------------------------
 661+ 945D              ;
 662+ 945D              ;	5/08/22
 663+ 945D              ;
 664+ 945D              ;   NextScan.
 665+ 945D              ;
 666+ 945D              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 667+ 945D              ;
 668+ 945D              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 669+ 945D              ;
 670+ 945D              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 671+ 945D              ;
 672+ 945D              ;       DESTRUIDOS: AF y HL !!!
 673+ 945D              ;
 674+ 945D              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 675+ 945D              ;
 676+ 945D
 677+ 945D 24           NextScan inc h          ; Incrementamos el scanline.
 678+ 945E 7C               ld a,h
 679+ 945F E6 07            and 7
 680+ 9461 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 681+ 9462
 682+ 9462 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 683+ 9463 C6 20            add a,$20           ; Vamos a comprobarlo...
 684+ 9465 6F               ld l,a
 685+ 9466 D8               ret c               ; Salimos si se produce el cambio de tercio.
 686+ 9467
 687+ 9467 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 688+ 9468 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 689+ 946A 67               ld h,a
 690+ 946B C9               ret
 691+ 946C
 692+ 946C              ;----------------------------------------------------------------------------------------------------------------
 693+ 946C              ;
 694+ 946C              ;	5/08/22
 695+ 946C              ;
 696+ 946C              ;   PreviousScan.
 697+ 946C              ;
 698+ 946C              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 699+ 946C              ;
 700+ 946C              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 701+ 946C              ;
 702+ 946C              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 703+ 946C              ;
 704+ 946C              ;       DESTRUIDOS: AF y HL !!!
 705+ 946C              ;
 706+ 946C              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 707+ 946C              ;
 708+ 946C
 709+ 946C 7C           PreviousScan ld a,h
 710+ 946D 25               dec h               ; Dec H.
 711+ 946E E6 07            and 7
 712+ 9470 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 713+ 9471
 714+ 9471 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 715+ 9472 D6 20            sub $20             ; Vamos a comprobarlo...
 716+ 9474 6F               ld l,a
 717+ 9475 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 718+ 9476
 719+ 9476 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 720+ 9477 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 721+ 9479 67               ld h,a
 722+ 947A C9               ret
 723+ 947B
 724+ 947B              ; -----------------------------------------------------------------------------------
 725+ 947B              ;
 726+ 947B              ;	31/7/23
 727+ 947B              ;
 728+ 947B              ;	Rutina principal de pintado de entidades.
 729+ 947B              ;	Extrae la foto del frame, (entidades).
 730+ 947B
 731+ 947B              Extrae_foto_entidades
 732+ 947B
 733+ 947B 21 01 70     	ld hl,Album_de_fotos+1
 734+ 947E 7E           	ld a,(hl)
 735+ 947F A7           	and a
 736+ 9480 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 737+ 9481
 738+ 9481              ;	No hay datos, (entidades para pintar en este frame).
 739+ 9481
 740+ 9481 3A AE 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 741+ 9484 A7           	and a
 742+ 9485 C8           	ret z
 743+ 9486
 744+ 9486              ; -----------------------------------
 745+ 9486
 746+ 9486 ED 73 B3 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 747+ 948A 31 00 70     	ld sp,Album_de_fotos
 748+ 948D
 749+ 948D FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 750+ 948F E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 751+ 9490 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 752+ 9491
 753+ 9491 ED 73 B5 87  	ld (Stack_2),sp
 754+ 9495 ED 7B B3 87  	ld sp,(Stack)
 755+ 9499
 756+ 9499              ; Fabrica la llamada a la correspondiente rutina de impresión.
 757+ 9499
 758+ 9499 3E CD        	ld a,$cd
 759+ 949B 32 A3 94     	ld (Imprime),a
 760+ 949E EB           	ex de,hl
 761+ 949F 22 A4 94     	ld (Imprime+1),hl
 762+ 94A2 EB           	ex de,hl
 763+ 94A3
 764+ 94A3              ; Ejecuta la llamada:	CALL $xx,xx
 765+ 94A3
 766+ 94A3 00 00 00     Imprime db 0,0,0
 767+ 94A6
 768+ 94A6 ED 73 B3 87  	ld (Stack),sp
 769+ 94AA
 770+ 94AA 3A AE 87     	ld a,(Numero_de_malotes)
 771+ 94AD 3D           	dec a
 772+ 94AE 28 09        	jr z,1F
 773+ 94B0 32 AE 87      	ld (Numero_de_malotes),a
 774+ 94B3
 775+ 94B3 ED 7B B5 87  	ld sp,(Stack_2)
 776+ 94B7 18 D4        	jr 2B
 777+ 94B9
 778+ 94B9 AF           1 xor a
 779+ 94BA 32 B5 87     	ld (Stack_2),a
 780+ 94BD
 781+ 94BD C9           	ret
 782+ 94BE
 783+ 94BE              ; -----------------------------------------------------------------------------------
 784+ 94BE              ;
 785+ 94BE              ;	28/2/23
 786+ 94BE              ;
 787+ 94BE              ;	Pinta los disparos generados.
 788+ 94BE
 789+ 94BE              Extrae_foto_disparos
 790+ 94BE
 791+ 94BE 21 57 70     	ld hl,Album_de_fotos_disparos+1
 792+ 94C1 7E               ld a,(hl)
 793+ 94C2 A7               and a
 794+ 94C3 C8               ret z
 795+ 94C4
 796+ 94C4 3A C3 87     	ld a,(Numero_de_disparotes)
 797+ 94C7 A7           	and a
 798+ 94C8 C8           	ret z
 799+ 94C9 ED 73 B3 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 800+ 94CD 31 56 70     	ld sp,Album_de_fotos_disparos
 801+ 94D0
 802+ 94D0 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 803+ 94D2 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 804+ 94D3 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 805+ 94D4
 806+ 94D4 ED 73 B5 87  	ld (Stack_2),sp
 807+ 94D8 ED 7B B3 87  	ld sp,(Stack)
 808+ 94DC
 809+ 94DC              ; Fabrica la llamada a la correspondiente rutina de impresión.
 810+ 94DC
 811+ 94DC 3E CD        	ld a,$cd
 812+ 94DE 32 E6 94     	ld (Imprime2),a
 813+ 94E1 EB           	ex de,hl
 814+ 94E2 22 E7 94     	ld (Imprime2+1),hl
 815+ 94E5 EB           	ex de,hl
 816+ 94E6
 817+ 94E6              ; Ejecuta la llamada:	CALL $xx,xx
 818+ 94E6
 819+ 94E6 00 00 00     Imprime2 db 0,0,0
 820+ 94E9
 821+ 94E9 3A C3 87     	ld a,(Numero_de_disparotes)
 822+ 94EC 3D           	dec a
 823+ 94ED 28 09        	jr z,1F
 824+ 94EF 32 C3 87      	ld (Numero_de_disparotes),a
 825+ 94F2
 826+ 94F2 ED 7B B5 87  	ld sp,(Stack_2)
 827+ 94F6 18 D8        	jr 2B
 828+ 94F8
 829+ 94F8 AF           1 xor a
 830+ 94F9 32 B5 87     	ld (Stack_2),a
 831+ 94FC C9           	ret
 832+ 94FD
 833+ 94FD              ; -----------------------------------------------------------------------------------
 834+ 94FD              ;
 835+ 94FD              ;	4/9/23
 836+ 94FD              ;
 837+ 94FD              ;	Rutina principal de pintado de Amadeus.
 838+ 94FD              ;	Extrae fotos de Album_de_fotos_Amadeus.
 839+ 94FD
 840+ 94FD 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 841+ 9500 7E           	ld a,(hl)
 842+ 9501 A7           	and a
 843+ 9502 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 844+ 9503
 845+ 9503 3A AE 87     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 846+ 9506 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 847+ 9507 C8           	ret z
 848+ 9508
 849+ 9508              ; -----------------------------------
 850+ 9508
 851+ 9508 ED 73 B3 87  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 852+ 950C 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 853+ 950F
 854+ 950F FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 855+ 9511 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 856+ 9512 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 857+ 9513
 858+ 9513 ED 73 B5 87  	ld (Stack_2),sp
 859+ 9517 ED 7B B3 87  	ld sp,(Stack)
 860+ 951B
 861+ 951B              ; Fabrica la llamada a la correspondiente rutina de impresión.
 862+ 951B
 863+ 951B 3E CD        	ld a,$cd
 864+ 951D 32 25 95     	ld (Imprime_Amadeus),a
 865+ 9520 EB           	ex de,hl
 866+ 9521 22 26 95     	ld (Imprime_Amadeus+1),hl
 867+ 9524 EB           	ex de,hl
 868+ 9525
 869+ 9525              ; Ejecuta la llamada:	CALL $xx,xx
 870+ 9525
 871+ 9525 00 00 00     Imprime_Amadeus db 0,0,0
 872+ 9528
 873+ 9528 ED 73 B3 87  	ld (Stack),sp
 874+ 952C
 875+ 952C 3A AE 87     	ld a,(Numero_de_malotes)
 876+ 952F 3D           	dec a
 877+ 9530 28 09        	jr z,1F
 878+ 9532 32 AE 87      	ld (Numero_de_malotes),a
 879+ 9535
 880+ 9535 ED 7B B5 87  	ld sp,(Stack_2)
 881+ 9539 18 D4        	jr 2B
 882+ 953B
 883+ 953B AF           1 xor a
 884+ 953C 32 B5 87     	ld (Stack_2),a
 885+ 953F
 886+ 953F C9           	ret
# file closed: Draw_XOR.asm
1796  9540              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9540              ;   índices de Rutinas de impresión.
   2+ 9540
   3+ 9540 50 95        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 9542 7D 95            defw Pinta_Amadeus_3x2
   5+ 9544
   6+ 9544 D3 95        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9546 73 96            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9548 27 96            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 954A
  10+ 954A FD 95        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 954C 01 97            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 954E B5 96            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9550
  14+ 9550
  15+ 9550              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9550              ;
  17+ 9550              ;   12/12/22
  18+ 9550              ;
  19+ 9550              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9550              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9550              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9550              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9550              ;
  24+ 9550              ;   Modifica: DE y HL.
  25+ 9550
  26+ 9550 ED 73 B3 87  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 9554 FD F9        	ld sp,iy
  28+ 9556 06 10            ld b,16
  29+ 9558 D1           1 pop de
  30+ 9559 7B               ld a,e
  31+ 955A AE               xor (hl)
  32+ 955B 77           	ld (hl),a
  33+ 955C 23           	inc hl
  34+ 955D 7A               ld a,d
  35+ 955E AE               xor (hl)
  36+ 955F 77           	ld (hl),a
  37+ 9560 2B           	dec hl
  38+ 9561 24           	inc h
  39+ 9562 7C               ld a,h
  40+ 9563 E6 07            and 7
  41+ 9565 20 0A            jr nz,2F
  42+ 9567 7D               ld a,l
  43+ 9568 C6 20            add a,$20
  44+ 956A 6F               ld l,a
  45+ 956B 38 04            jr c,2F
  46+ 956D 7C               ld a,h
  47+ 956E D6 08            sub 8
  48+ 9570 67               ld h,a
  49+ 9571 7C           2 ld a,h
  50+ 9572 FE 58            cp $58
  51+ 9574 28 02            jr z,3F
  52+ 9576 10 E0            djnz 1B
  53+ 9578 ED 7B B3 87  3 ld sp,(Stack)
  54+ 957C C9           	ret
  55+ 957D
  56+ 957D ED 73 B3 87  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9581 FD F9        	ld sp,iy
  58+ 9583 06 08            ld b,8
  59+ 9585 D1           1 pop de
  60+ 9586 7B               ld a,e
  61+ 9587 AE               xor (hl)
  62+ 9588 77           	ld (hl),a
  63+ 9589 23           	inc hl
  64+ 958A 7A               ld a,d
  65+ 958B AE               xor (hl)
  66+ 958C 77           	ld (hl),a
  67+ 958D 23           	inc hl
  68+ 958E D1           	pop de
  69+ 958F 7B               ld a,e
  70+ 9590 AE               xor (hl)
  71+ 9591 77           	ld (hl),a
  72+ 9592 2B           	dec hl
  73+ 9593 2B           	dec hl
  74+ 9594 24           	inc h
  75+ 9595 7C               ld a,h
  76+ 9596 E6 07            and 7
  77+ 9598 20 0A            jr nz,2F
  78+ 959A 7D               ld a,l
  79+ 959B C6 20            add a,$20
  80+ 959D 6F               ld l,a
  81+ 959E 38 04            jr c,2F
  82+ 95A0 7C               ld a,h
  83+ 95A1 D6 08            sub 8
  84+ 95A3 67               ld h,a
  85+ 95A4 7C           2 ld a,h
  86+ 95A5 FE 58            cp $58
  87+ 95A7 28 25            jr z,4F
  88+ 95A9 7A               ld a,d
  89+ 95AA AE               xor (hl)
  90+ 95AB 77               ld (hl),a
  91+ 95AC D1           	pop de
  92+ 95AD 23           	inc hl
  93+ 95AE 7B               ld a,e
  94+ 95AF AE               xor (hl)
  95+ 95B0 77           	ld (hl),a
  96+ 95B1 23           	inc hl
  97+ 95B2 7A               ld a,d
  98+ 95B3 AE               xor (hl)
  99+ 95B4 77           	ld (hl),a
 100+ 95B5 2B           	dec hl
 101+ 95B6 2B           	dec hl
 102+ 95B7 24           	inc h
 103+ 95B8 7C               ld a,h
 104+ 95B9 E6 07            and 7
 105+ 95BB 20 0A            jr nz,3F
 106+ 95BD 7D               ld a,l
 107+ 95BE C6 20            add a,$20
 108+ 95C0 6F               ld l,a
 109+ 95C1 38 04            jr c,3F
 110+ 95C3 7C               ld a,h
 111+ 95C4 D6 08            sub 8
 112+ 95C6 67               ld h,a
 113+ 95C7 7C           3 ld a,h
 114+ 95C8 FE 58            cp $58
 115+ 95CA 28 02            jr z,4F
 116+ 95CC 10 B7            djnz 1B
 117+ 95CE ED 7B B3 87  4 ld sp,(Stack)
 118+ 95D2 C9           	ret
 119+ 95D3
 120+ 95D3              ; ---------------------------------------------------
 121+ 95D3
 122+ 95D3 ED 73 B3 87  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 95D7 FD F9        	ld sp,iy
 124+ 95D9
 125+ 95D9              ; >>>
 126+ 95D9
 127+ 95D9 06 10            ld b,16
 128+ 95DB D1           1 pop de
 129+ 95DC 7A           	ld a,d
 130+ 95DD AE           	xor (hl)
 131+ 95DE 77           	ld (hl),a
 132+ 95DF 24           	inc h
 133+ 95E0 7C               ld a,h
 134+ 95E1 E6 07            and 7
 135+ 95E3 20 0C            jr nz,2F
 136+ 95E5 7D               ld a,l
 137+ 95E6 C6 20            add a,$20
 138+ 95E8 6F               ld l,a
 139+ 95E9 38 06            jr c,2F
 140+ 95EB 7C               ld a,h
 141+ 95EC D6 08            sub 8
 142+ 95EE 67               ld h,a
 143+ 95EF 18 00            jr 2F
 144+ 95F1 7C           2 ld a,h
 145+ 95F2 FE 58            cp $58
 146+ 95F4 28 02            jr z,3F
 147+ 95F6 10 E3            djnz 1B
 148+ 95F8 ED 7B B3 87  3 ld sp,(Stack)
 149+ 95FC C9           	ret
 150+ 95FD
 151+ 95FD ED 73 B3 87  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9601 FD F9        	ld sp,iy
 153+ 9603
 154+ 9603              ; >>>
 155+ 9603
 156+ 9603 06 10            ld b,16
 157+ 9605 D1           1 pop de
 158+ 9606 7B           	ld a,e
 159+ 9607 AE           	xor (hl)
 160+ 9608 77           	ld (hl),a
 161+ 9609 24           	inc h
 162+ 960A 7C               ld a,h
 163+ 960B E6 07            and 7
 164+ 960D 20 0C            jr nz,2F
 165+ 960F 7D               ld a,l
 166+ 9610 C6 20            add a,$20
 167+ 9612 6F               ld l,a
 168+ 9613 38 06            jr c,2F
 169+ 9615 7C               ld a,h
 170+ 9616 D6 08            sub 8
 171+ 9618 67               ld h,a
 172+ 9619 18 00            jr 2F
 173+ 961B 7C           2 ld a,h
 174+ 961C FE 58            cp $58
 175+ 961E 28 02            jr z,3F
 176+ 9620 10 E3            djnz 1B
 177+ 9622 ED 7B B3 87  3 ld sp,(Stack)
 178+ 9626 C9           	ret
 179+ 9627
 180+ 9627              ; ---------------------------------------------------
 181+ 9627
 182+ 9627 ED 73 B3 87  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 962B FD F9        	ld sp,iy
 184+ 962D 06 08            ld b,8
 185+ 962F D1           1 pop de
 186+ 9630 7A           	ld a,d
 187+ 9631 AE           	xor (hl)
 188+ 9632 77           	ld (hl),a
 189+ 9633 23           	inc hl
 190+ 9634 D1           	pop de
 191+ 9635 7B           	ld a,e
 192+ 9636 AE           	xor (hl)
 193+ 9637 77           	ld (hl),a
 194+ 9638 2B           	dec hl
 195+ 9639 24            	inc h
 196+ 963A 7C               ld a,h
 197+ 963B E6 07            and 7
 198+ 963D 20 0A            jr nz,2F
 199+ 963F 7D               ld a,l
 200+ 9640 C6 20            add a,$20
 201+ 9642 6F               ld l,a
 202+ 9643 38 04            jr c,2F
 203+ 9645 7C               ld a,h
 204+ 9646 D6 08            sub 8
 205+ 9648 67               ld h,a
 206+ 9649 7C           2 ld a,h
 207+ 964A FE 58            cp $58
 208+ 964C 28 20            jr z,4F
 209+ 964E D1               pop de
 210+ 964F 7B           	ld a,e
 211+ 9650 AE           	xor (hl)
 212+ 9651 77           	ld (hl),a
 213+ 9652 23           	inc hl
 214+ 9653 7A           	ld a,d
 215+ 9654 AE           	xor (hl)
 216+ 9655 77           	ld (hl),a
 217+ 9656 2B           	dec hl
 218+ 9657 24           	inc h
 219+ 9658 7C               ld a,h
 220+ 9659 E6 07            and 7
 221+ 965B 20 0A            jr nz,3F
 222+ 965D 7D               ld a,l
 223+ 965E C6 20            add a,$20
 224+ 9660 6F               ld l,a
 225+ 9661 38 04            jr c,3F
 226+ 9663 7C               ld a,h
 227+ 9664 D6 08            sub 8
 228+ 9666 67               ld h,a
 229+ 9667 7C           3 ld a,h
 230+ 9668 FE 58            cp $58
 231+ 966A 28 02            jr z,4F
 232+ 966C 10 C1            djnz 1B
 233+ 966E ED 7B B3 87  4 ld sp,(Stack)
 234+ 9672 C9           	ret
 235+ 9673
 236+ 9673 ED 73 B3 87  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 9677 FD F9        	ld sp,iy
 238+ 9679 06 08            ld b,8
 239+ 967B D1           1 pop de
 240+ 967C D1           	pop de
 241+ 967D 7B           	ld a,e
 242+ 967E AE           	xor (hl)
 243+ 967F 77           	ld (hl),a
 244+ 9680 24            	inc h
 245+ 9681 7C               ld a,h
 246+ 9682 E6 07            and 7
 247+ 9684 20 0A            jr nz,2F
 248+ 9686 7D               ld a,l
 249+ 9687 C6 20            add a,$20
 250+ 9689 6F               ld l,a
 251+ 968A 38 04            jr c,2F
 252+ 968C 7C               ld a,h
 253+ 968D D6 08            sub 8
 254+ 968F 67               ld h,a
 255+ 9690 7C           2 ld a,h
 256+ 9691 FE 58            cp $58
 257+ 9693 28 1B            jr z,4F
 258+ 9695 D1               pop de
 259+ 9696 7A           	ld a,d
 260+ 9697 AE           	xor (hl)
 261+ 9698 77           	ld (hl),a
 262+ 9699 24           	inc h
 263+ 969A 7C               ld a,h
 264+ 969B E6 07            and 7
 265+ 969D 20 0A            jr nz,3F
 266+ 969F 7D               ld a,l
 267+ 96A0 C6 20            add a,$20
 268+ 96A2 6F               ld l,a
 269+ 96A3 38 04            jr c,3F
 270+ 96A5 7C               ld a,h
 271+ 96A6 D6 08            sub 8
 272+ 96A8 67               ld h,a
 273+ 96A9 7C           3 ld a,h
 274+ 96AA FE 58            cp $58
 275+ 96AC 28 02            jr z,4F
 276+ 96AE 10 CB            djnz 1B
 277+ 96B0 ED 7B B3 87  4 ld sp,(Stack)
 278+ 96B4 C9           	ret
 279+ 96B5
 280+ 96B5 ED 73 B3 87  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 96B9 FD F9        	ld sp,iy
 282+ 96BB 06 08            ld b,8
 283+ 96BD D1           1 pop de
 284+ 96BE 7B           	ld a,e
 285+ 96BF AE           	xor (hl)
 286+ 96C0 77           	ld (hl),a
 287+ 96C1 23           	inc hl
 288+ 96C2 7A           	ld a,d
 289+ 96C3 AE           	xor (hl)
 290+ 96C4 77           	ld (hl),a
 291+ 96C5 2B           	dec hl
 292+ 96C6 24             	inc h
 293+ 96C7 7C               ld a,h
 294+ 96C8 E6 07            and 7
 295+ 96CA 20 0A            jr nz,2F
 296+ 96CC 7D               ld a,l
 297+ 96CD C6 20            add a,$20
 298+ 96CF 6F               ld l,a
 299+ 96D0 38 04            jr c,2F
 300+ 96D2 7C               ld a,h
 301+ 96D3 D6 08            sub 8
 302+ 96D5 67               ld h,a
 303+ 96D6 7C           2 ld a,h
 304+ 96D7 FE 58            cp $58
 305+ 96D9 28 21            jr z,4F
 306+ 96DB D1               pop de
 307+ 96DC 7A           	ld a,d
 308+ 96DD AE           	xor (hl)
 309+ 96DE 77           	ld (hl),a
 310+ 96DF 23           	inc hl
 311+ 96E0 D1               pop de
 312+ 96E1 7B           	ld a,e
 313+ 96E2 AE           	xor (hl)
 314+ 96E3 77           	ld (hl),a
 315+ 96E4 2B           	dec hl
 316+ 96E5 24           	inc h
 317+ 96E6 7C               ld a,h
 318+ 96E7 E6 07            and 7
 319+ 96E9 20 0A            jr nz,3F
 320+ 96EB 7D               ld a,l
 321+ 96EC C6 20            add a,$20
 322+ 96EE 6F               ld l,a
 323+ 96EF 38 04            jr c,3F
 324+ 96F1 7C               ld a,h
 325+ 96F2 D6 08            sub 8
 326+ 96F4 67               ld h,a
 327+ 96F5 7C           3 ld a,h
 328+ 96F6 FE 58            cp $58
 329+ 96F8 28 02            jr z,4F
 330+ 96FA 10 C1            djnz 1B
 331+ 96FC ED 7B B3 87  4 ld sp,(Stack)
 332+ 9700 C9           	ret
 333+ 9701
 334+ 9701 ED 73 B3 87  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9705 FD F9        	ld sp,iy
 336+ 9707 06 08            ld b,8
 337+ 9709 D1           1 pop de
 338+ 970A 7B           	ld a,e
 339+ 970B AE           	xor (hl)
 340+ 970C 77           	ld (hl),a
 341+ 970D 24            	inc h
 342+ 970E 7C               ld a,h
 343+ 970F E6 07            and 7
 344+ 9711 20 0A            jr nz,2F
 345+ 9713 7D               ld a,l
 346+ 9714 C6 20            add a,$20
 347+ 9716 6F               ld l,a
 348+ 9717 38 04            jr c,2F
 349+ 9719 7C               ld a,h
 350+ 971A D6 08            sub 8
 351+ 971C 67               ld h,a
 352+ 971D 7C           2 ld a,h
 353+ 971E FE 58            cp $58
 354+ 9720 28 1C            jr z,4F
 355+ 9722 D1               pop de
 356+ 9723 7A           	ld a,d
 357+ 9724 AE           	xor (hl)
 358+ 9725 77           	ld (hl),a
 359+ 9726 24           	inc h
 360+ 9727 7C               ld a,h
 361+ 9728 E6 07            and 7
 362+ 972A 20 0A            jr nz,3F
 363+ 972C 7D               ld a,l
 364+ 972D C6 20            add a,$20
 365+ 972F 6F               ld l,a
 366+ 9730 38 04            jr c,3F
 367+ 9732 7C               ld a,h
 368+ 9733 D6 08            sub 8
 369+ 9735 67               ld h,a
 370+ 9736 7C           3 ld a,h
 371+ 9737 FE 58            cp $58
 372+ 9739 28 03            jr z,4F
 373+ 973B D1               pop de
 374+ 973C 10 CB            djnz 1B
 375+ 973E ED 7B B3 87  4 ld sp,(Stack)
 376+ 9742 C9           	ret
 377+ 9743
 378+ 9743              ; ---------------------------------------------------
 379+ 9743              ;
 380+ 9743              ;   27/02/23
 381+ 9743              ;
 382+ 9743              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 9743              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 9743              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 9743
 386+ 9743 ED 73 B3 87  Pinta_Disparo ld (Stack),sp
 387+ 9747 FD F9            ld sp,iy
 388+ 9749 06 03            ld b,3
 389+ 974B D1           1 pop de
 390+ 974C 7B               ld a,e
 391+ 974D AE               xor (hl)
 392+ 974E 77               ld (hl),a
 393+ 974F 23               inc hl
 394+ 9750 7A               ld a,d
 395+ 9751 AE               xor (hl)
 396+ 9752 77               ld (hl),a
 397+ 9753 2B               dec hl
 398+ 9754
 399+ 9754 24               inc h
 400+ 9755 7C               ld a,h
 401+ 9756 E6 07            and 7
 402+ 9758 20 0A            jr nz,2F
 403+ 975A 7D               ld a,l
 404+ 975B C6 20            add a,$20
 405+ 975D 6F               ld l,a
 406+ 975E 38 04            jr c,2F
 407+ 9760 7C               ld a,h
 408+ 9761 D6 08            sub 8
 409+ 9763 67               ld h,a
 410+ 9764 7C           2 ld a,h
 411+ 9765 FE 58            cp $58
 412+ 9767 28 02            jr z,3F
 413+ 9769
 414+ 9769 10 E0            djnz 1B
 415+ 976B ED 7B B3 87  3 ld sp,(Stack)
 416+ 976F C9               ret
 417+ 9770
# file closed: Rutinas_de_impresion_sprites.asm
1797  9770              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9770              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9770              ;
   3+ 9770              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9770              ;
   5+ 9770              ; *****************************************************************************************************************************************************************************************
   6+ 9770              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9770
   8+ 9770 7C           calcula_tercio ld a,h
   9+ 9771 E6 18        	and $18
  10+ 9773 CB 2F        	sra a
  11+ 9775 CB 2F        	sra a
  12+ 9777 CB 2F        	sra a
  13+ 9779 C9           	ret
  14+ 977A
# file closed: calcula_tercio.asm
1798  977A              	include "Cls.asm"
# file opened: Cls.asm
   1+ 977A              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 977A              ;
   3+ 977A              ;
   4+ 977A              ;	CLS.
   5+ 977A              ;
   6+ 977A              ;	Limpia la pantalla y define sus atributos.
   7+ 977A              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 977A              ;
   9+ 977A              ;	COLORES: 0 ..... NEGRO
  10+ 977A              ;    		 1 ..... AZUL
  11+ 977A              ; 			 2 ..... ROJO
  12+ 977A              ;			 3 ..... MAGENTA
  13+ 977A              ; 			 4 ..... VERDE
  14+ 977A              ; 			 5 ..... CIAN
  15+ 977A              ;			 6 ..... AMARILLO
  16+ 977A              ; 			 7 ..... BLANCO
  17+ 977A              ;
  18+ 977A              ;	INPUT: A contiene los atributos de pantalla.
  19+ 977A              ;
  20+ 977A              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 977A
  22+ 977A
  23+ 977A 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 977D 11 01 40     	LD DE,$4001
  25+ 9780 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 9783 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 9785 ED B0        	LDIR
  28+ 9787 01 FF 02     	LD BC,767
  29+ 978A 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 978B ED B0        	LDIR
  31+ 978D C9           	ret
  32+ 978E
# file closed: Cls.asm
1799  978E              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 978E
   2+ 978E              ; ******************************************************************************************************************************************************************************************
   3+ 978E              ;
   4+ 978E              ;   20/05/23
   5+ 978E              ;
   6+ 978E              ;	Recompone_posicion_inicio
   7+ 978E              ;
   8+ 978E              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 978E              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 978E              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 978E              ;	_ a una u otra rutina.
  12+ 978E
  13+ 978E              Recompone_posicion_inicio
  14+ 978E
  15+ 978E 2A 73 87     	ld hl,(Posicion_inicio)
  16+ 9791 7D           	ld a,l
  17+ 9792 E6 1F        	and $1f
  18+ 9794 28 16        	jr z,1F
  19+ 9796
  20+ 9796 FE 1F        	cp $1f
  21+ 9798 28 0D        	jr z,3F
  22+ 979A
  23+ 979A 21 88 87     	ld hl,Ctrl_2
  24+ 979D CB C6        	set 0,(hl)
  25+ 979F 2A 65 87     	ld hl,(Puntero_objeto)
  26+ 97A2 22 A3 87     	ld (Repone_puntero_objeto),hl
  27+ 97A5 18 08        	jr 2F
  28+ 97A7
  29+ 97A7 CD 55 99     3 call Mov_left
  30+ 97AA 18 03        	jr 2F
  31+ 97AC
  32+ 97AC CD 32 98     1 call Mov_right
  33+ 97AF 21 00 F0     2 ld hl,Sprite_vacio
  34+ 97B2 22 65 87     	ld (Puntero_objeto),hl
  35+ 97B5 C9           	ret
  36+ 97B6
  37+ 97B6              ; ******************************************************************************************************************************************************************************************
  38+ 97B6              ;
  39+ 97B6              ;   27/05/23
  40+ 97B6              ;
  41+ 97B6              ;	Mov_down
  42+ 97B6              ;
  43+ 97B6              ; 	Mueve el Sprite X px hacia abajo.
  44+ 97B6              ;
  45+ 97B6              ;
  46+ 97B6              Mov_down
  47+ 97B6
  48+ 97B6 CD 20 98     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 97B9              ;																	; _ repone (Puntero_objeto).
  50+ 97B9 21 83 87     	ld hl,Ctrl_0
  51+ 97BC CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 97BE              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 97BE              ; 																	; _ en el caso de que no lo haya.
  54+ 97BE 3A 8D 87     	ld a,(Vel_down)
  55+ 97C1 47           	ld b,a
  56+ 97C2 2A 63 87         ld hl,(Posicion_actual)
  57+ 97C5 CD 70 97     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 97C8 E6 02        	and 2
  59+ 97CA 28 17        	jr z,1F
  60+ 97CC
  61+ 97CC              ; Nos encontramos en el último tercio de pantalla.
  62+ 97CC              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 97CC
  64+ 97CC 7C           	ld a,h
  65+ 97CD FE 57        	cp $57
  66+ 97CF 20 12        	jr nz,1F
  67+ 97D1
  68+ 97D1 7D           	ld a,l
  69+ 97D2 C6 20        	add $20
  70+ 97D4 30 0D        	jr nc,1F
  71+ 97D6
  72+ 97D6              ; ------------------------------
  73+ 97D6              ;
  74+ 97D6              ;	12/01/24
  75+ 97D6
  76+ 97D6              ;	call Reaparece_arriba
  77+ 97D6 CD E2 9A     	call Reinicio
  78+ 97D9
  79+ 97D9              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 97D9
  81+ 97D9 3A C1 87     	ld a,(Ctrl_3)
  82+ 97DC CB CF        	set 1,a
  83+ 97DE 32 C1 87     	ld (Ctrl_3),a
  84+ 97E1
  85+ 97E1 18 08        	jr 3F
  86+ 97E3              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 97E3              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 97E3              ; ------------------------------
  89+ 97E3
  90+ 97E3 CD 5D 94     1 call NextScan
  91+ 97E6 22 63 87     	ld (Posicion_actual),hl
  92+ 97E9 10 DA            djnz 2B
  93+ 97EB CD 08 9B     3 call Genera_coordenadas
  94+ 97EE C9           	ret
  95+ 97EF
  96+ 97EF              ; ******************************************************************************************************************************************************************************************
  97+ 97EF              ;
  98+ 97EF              ;   27/05/23
  99+ 97EF              ;
 100+ 97EF              ;	Mov_up
 101+ 97EF              ;
 102+ 97EF              ; 	Mueve el Sprite hacia arriba.
 103+ 97EF              ;
 104+ 97EF              ;
 105+ 97EF              Mov_up
 106+ 97EF
 107+ 97EF CD 20 98     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 97F2              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 97F2 21 83 87     	ld hl,Ctrl_0
 110+ 97F5 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 97F7              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 97F7              ; 																		; _ en el caso de que no lo haya.
 113+ 97F7 3A 8C 87     	ld a,(Vel_up)
 114+ 97FA 47           	ld b,a
 115+ 97FB 2A 63 87     	ld hl,(Posicion_actual)
 116+ 97FE CD 70 97     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 9801 A7           	and a
 118+ 9802 20 10        	jr nz,1F
 119+ 9804
 120+ 9804              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9804              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9804
 123+ 9804 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9805 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9807 20 0B            jr nz,1F
 126+ 9809 7D               ld a,l
 127+ 980A D6 20            sub $20
 128+ 980C 30 06            jr nc,1F
 129+ 980E 25               dec h
 130+ 980F
 131+ 980F              ; -----------------------------
 132+ 980F CD C3 9A         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9812              ;	call Reinicio
 134+ 9812              ; -----------------------------
 135+ 9812
 136+ 9812 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9814 CD 6C 94     1 call PreviousScan
 138+ 9817 22 63 87     	ld (Posicion_actual),hl
 139+ 981A 10 E2            djnz 3B
 140+ 981C CD 08 9B     2 call Genera_coordenadas
 141+ 981F C9           	ret
 142+ 9820
 143+ 9820              ; -----------------------------
 144+ 9820              ;
 145+ 9820              ;	27/5/23
 146+ 9820              ;
 147+ 9820              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 9820              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 9820              ;
 150+ 9820              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 9820              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 9820              ;
 153+ 9820              ;	Modifica: A y (Puntero_objeto).
 154+ 9820
 155+ 9820 3A 88 87     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 9823 CB 47        	bit 0,a
 157+ 9825 C8           	ret z
 158+ 9826 CB 87        	res 0,a
 159+ 9828 32 88 87     	ld (Ctrl_2),a
 160+ 982B 2A A3 87     	ld hl,(Repone_puntero_objeto)
 161+ 982E 22 65 87     	ld (Puntero_objeto),hl
 162+ 9831 C9           	ret
 163+ 9832
 164+ 9832              ; ******************************************************************************************************************************************************************************************
 165+ 9832              ;
 166+ 9832              ;	19/10/22
 167+ 9832              ;
 168+ 9832              ;	Mov_right.
 169+ 9832              ;
 170+ 9832              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 9832              ;
 172+ 9832
 173+ 9832 3A 83 87     Mov_right ld a,(Ctrl_0)
 174+ 9835 CB 77        	bit 6,a
 175+ 9837 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 9839
 177+ 9839 CD 71 9A     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 983C C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 983D
 180+ 983D 21 83 87     	ld hl,Ctrl_0
 181+ 9840 CB E6        	set 4,(hl)
 182+ 9842 18 52        	jr 8F
 183+ 9844
 184+ 9844 21 83 87     10 ld hl,Ctrl_0
 185+ 9847 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 9849              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 9849              ; 																	; _ en el caso de que no lo haya.
 188+ 9849 3A 67 87     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 984C FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 984E 20 46        	jr nz,8F
 191+ 9850
 192+ 9850 3A 69 87     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 9853 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 9854 28 40        	jr z,8F
 195+ 9856
 196+ 9856              ; ---------- ---------- ----------
 197+ 9856              ;
 198+ 9856              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 9856
 200+ 9856 3A 8B 87     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 9859 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 985B 28 11        	jr z,1F
 203+ 985D 38 06        	jr c,6F
 204+ 985F FE 04        	cp 4
 205+ 9861 28 14        	jr z,7F
 206+ 9863 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 9865
 208+ 9865              ; ---------- ---------- ----------
 209+ 9865              ;
 210+ 9865              ; Perfiles de velocidad
 211+ 9865              ;
 212+ 9865
 213+ 9865 3A 69 87     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 9868 FE FE        	cp $fe
 215+ 986A 20 2A        	jr nz,8F
 216+ 986C 18 10        	jr 3F
 217+ 986E 3A 69 87     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 9871 FE FD        	cp $fd
 219+ 9873 20 21        	jr nz,8F
 220+ 9875 18 07        	jr 3F
 221+ 9877 3A 69 87     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 987A FE FB        	cp $fb
 223+ 987C 20 18        	jr nz,8F
 224+ 987E
 225+ 987E              ; ---------- ---------- ----------
 226+ 987E
 227+ 987E              3
 228+ 987E CD B1 9A     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 9881              ;	call Reinicio
 230+ 9881
 231+ 9881              ; ---------- ---------- ----------
 232+ 9881              ;
 233+ 9881              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 9881
 235+ 9881 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9883 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9884 CD 9D 98     	call DESPLZ_DER
 238+ 9887 C1           	pop bc
 239+ 9888 10 F9        	djnz 5B
 240+ 988A 2A 63 87     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 988D 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 988E 22 63 87     	ld (Posicion_actual),hl
 243+ 9891 CD 08 9B     	call Genera_coordenadas
 244+ 9894 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9896
 246+ 9896              ; ---------- ---------- ----------
 247+ 9896
 248+ 9896 2A 63 87     8 ld hl,(Posicion_actual)
 249+ 9899 CD 9D 98     	call DESPLZ_DER
 250+ 989C C9           2 ret
 251+ 989D
 252+ 989D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 989D              ;
 254+ 989D              ;	22/9/22
 255+ 989D              ;
 256+ 989D
 257+ 989D CD AC 98     DESPLZ_DER call Desplaza_derecha
 258+ 98A0 CD F8 98         call modifica_parametros_1er_DESPLZ_2
 259+ 98A3 CD 21 99         call Ciclo_completo
 260+ 98A6 21 83 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 98A9 CB FE        	set 7,(hl)
 262+ 98AB C9           	ret
 263+ 98AC
 264+ 98AC              ; ******************************************************************************************************************************************************************************************
 265+ 98AC              ;	15/02/23
 266+ 98AC              ;
 267+ 98AC
 268+ 98AC 3A 8B 87     Desplaza_derecha ld a,(Vel_right)
 269+ 98AF 47           	ld b,a
 270+ 98B0 2A 6F 87     	ld hl,(Puntero_DESPLZ_der)
 271+ 98B3 23           1 inc hl
 272+ 98B4 23           	inc hl
 273+ 98B5 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 98B7 22 6F 87     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 98BA CD 31 8B     	call Extrae_address
 276+ 98BD 22 65 87     	ld (Puntero_objeto),hl
 277+ 98C0
 278+ 98C0              ; Modifica (Puntero_DESPLZ_izq).
 279+ 98C0
 280+ 98C0              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 98C0              ; Cuántos movimientos hemos hecho ??
 282+ 98C0              ; DE contiene (Puntero_DESPLZ_der).
 283+ 98C0
 284+ 98C0 2A 6B 87     7 ld hl,(Indice_Sprite_der)
 285+ 98C3 EB           	ex de,hl
 286+ 98C4 A7           	and a
 287+ 98C5 ED 52        	sbc hl,de
 288+ 98C7 CB 3D        	srl l
 289+ 98C9 3E 08        6 ld a,8
 290+ 98CB 95           	sub l
 291+ 98CC 30 1E        	jr nc,3F
 292+ 98CE
 293+ 98CE              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 98CE              ; B="0".
 295+ 98CE
 296+ 98CE 04           4 inc b
 297+ 98CF 3C           	inc a
 298+ 98D0 20 FC        	jr nz,4B
 299+ 98D2 78           	ld a,b
 300+ 98D3 08           	ex af,af
 301+ 98D4 2A 6B 87     	ld hl,(Indice_Sprite_der)
 302+ 98D7 23           5 inc hl
 303+ 98D8 23           	inc hl
 304+ 98D9 10 FC        	djnz 5B
 305+ 98DB 22 6F 87     	ld (Puntero_DESPLZ_der),hl
 306+ 98DE CD 31 8B     	call Extrae_address
 307+ 98E1 22 65 87     	ld (Puntero_objeto),hl
 308+ 98E4
 309+ 98E4              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 98E4              ; _(Posicion_actual).
 311+ 98E4
 312+ 98E4 21 63 87     	ld hl,Posicion_actual
 313+ 98E7 34           	inc (hl)
 314+ 98E8 08               ex af,af
 315+ 98E9 6F           	ld l,a
 316+ 98EA 18 DD        	jr 6B
 317+ 98EC
 318+ 98EC              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 98EC
 320+ 98EC 47           3 ld b,a
 321+ 98ED 2A 6D 87     	ld hl,(Indice_Sprite_izq)
 322+ 98F0 23           2 inc hl
 323+ 98F1 23           	inc hl
 324+ 98F2 10 FC        	djnz 2B
 325+ 98F4 22 71 87     	ld (Puntero_DESPLZ_izq),hl
 326+ 98F7 C9           8 ret
 327+ 98F8
 328+ 98F8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 98F8              ;
 330+ 98F8              ;	24/7/22
 331+ 98F8              ;
 332+ 98F8              ;	modifica_parametros_1er_DESPLZ_2
 333+ 98F8              ;
 334+ 98F8              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 98F8              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 98F8              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 98F8
 338+ 98F8 3A 69 87     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 98FB A7           	and a
 340+ 98FC 20 1F        	jr nz,1F
 341+ 98FE D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 9900 32 69 87         ld (CTRL_DESPLZ),a
 343+ 9903
 344+ 9903 21 62 87     	ld hl,Columns
 345+ 9906 34           	inc (hl)
 346+ 9907 3A 75 87     	ld a,(Cuad_objeto)
 347+ 990A E6 01        	and 1
 348+ 990C 28 0F        	jr z,1F
 349+ 990E 2A 63 87     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 9911 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9912 22 63 87     	ld (Posicion_actual),hl
 352+ 9915 CD 08 9B     	call Genera_coordenadas
 353+ 9918 CD 7D 9A     	call Inc_CTRL_DESPLZ
 354+ 991B 18 03        	jr 2F
 355+ 991D CD 7D 9A     1 call Inc_CTRL_DESPLZ
 356+ 9920 C9           2 ret
 357+ 9921
 358+ 9921              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 9921              ;
 360+ 9921              ;	24/7/22
 361+ 9921              ;
 362+ 9921              ;	Ciclo_completo.
 363+ 9921              ;
 364+ 9921              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 9921              ;
 366+ 9921              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 9921              ; 	Decrementamos (Columns).
 368+ 9921              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 9921              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 9921
 371+ 9921
 372+ 9921 3A 69 87     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 9924 FE FF        	cp $ff
 374+ 9926 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 9928 E6 F0        	and $f0
 376+ 992A 20 28        	jr nz,3F
 377+ 992C
 378+ 992C              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 992C
 380+ 992C 3A 69 87     	ld a,(CTRL_DESPLZ)
 381+ 992F 47           	ld b,a
 382+ 9930 3E F8        	ld a,$f8
 383+ 9932 80           	add b
 384+ 9933 32 69 87     	ld (CTRL_DESPLZ),a
 385+ 9936 18 1C        	jr 3F
 386+ 9938 21 62 87     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 993B 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 993C AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 993D 32 69 87     	ld (CTRL_DESPLZ),a
 390+ 9940 3A 75 87     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 9943 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 9945 20 0A        	jr nz,2F
 393+ 9947 2A 63 87     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 994A 23           	inc hl
 395+ 994B 22 63 87     	ld (Posicion_actual),hl
 396+ 994E CD 08 9B     	call Genera_coordenadas
 397+ 9951
 398+ 9951              ; Inicia el puntero de Sprite.
 399+ 9951
 400+ 9951 CD 46 8B     2 call Inicia_puntero_objeto_der
 401+ 9954 C9           3 ret
 402+ 9955
 403+ 9955              ; ******************************************************************************************************************************************************************************************
 404+ 9955              ;
 405+ 9955              ;	15/02/23
 406+ 9955              ;
 407+ 9955              ;	Mov_left.
 408+ 9955              ;
 409+ 9955              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 9955              ;
 411+ 9955              Mov_left
 412+ 9955
 413+ 9955 21 83 87     	ld hl,Ctrl_0
 414+ 9958 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 995A              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 995A              ; 																	; _ en el caso de que no lo haya.
 417+ 995A 3A 83 87     	ld a,(Ctrl_0)
 418+ 995D CB 77        	bit 6,a
 419+ 995F 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 9961
 421+ 9961 CD 77 9A     	call Stop_Amadeus_left
 422+ 9964 C8           	ret z
 423+ 9965 20 4A        	jr nz,8F
 424+ 9967
 425+ 9967 3A 67 87     11 ld a,(Coordenada_X)
 426+ 996A A7           	and a
 427+ 996B 20 44        	jr nz,8F
 428+ 996D
 429+ 996D 3A 69 87     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 9970 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 9971 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 9973
 433+ 9973              ; ---------- ---------- ----------
 434+ 9973
 435+ 9973 3A 8A 87     	ld a,(Vel_left)
 436+ 9976 FE 02        	cp 2
 437+ 9978 28 0F        	jr z,1F
 438+ 997A 38 04        	jr c,6F
 439+ 997C FE 04        	cp 4
 440+ 997E 28 12        	jr z,7F
 441+ 9980
 442+ 9980              ; ---------- ---------- ----------
 443+ 9980
 444+ 9980 3A 69 87     6 ld a,(CTRL_DESPLZ)
 445+ 9983 FE F8        	cp $f8
 446+ 9985 20 2A        	jr nz,8F
 447+ 9987 18 10        	jr 4F
 448+ 9989 3A 69 87     1 ld a,(CTRL_DESPLZ)
 449+ 998C FE F9        	cp $f9
 450+ 998E 20 21        	jr nz,8F
 451+ 9990 18 07        	jr 4F
 452+ 9992 3A 69 87     7 ld a,(CTRL_DESPLZ)
 453+ 9995 FE FB        	cp $fb
 454+ 9997 20 18        	jr nz,8F
 455+ 9999
 456+ 9999              ; ---------- ---------- ----------
 457+ 9999
 458+ 9999              4
 459+ 9999 CD 9F 9A     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 999C              ;	call Reinicio
 461+ 999C
 462+ 999C              ; ---------- ---------- ----------
 463+ 999C
 464+ 999C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 999E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 999F
 467+ 999F              ;	ld hl,(Indice_Sprite_izq)
 468+ 999F              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 999F
 470+ 999F CD B8 99     	call DESPLZ_IZQ
 471+ 99A2 C1           	pop bc
 472+ 99A3 10 F9        	djnz 5B
 473+ 99A5 2A 63 87     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 99A8 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 99A9 22 63 87     	ld (Posicion_actual),hl
 476+ 99AC CD 08 9B     	call Genera_coordenadas
 477+ 99AF 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 99B1
 479+ 99B1              ; ---------- ---------- ----------
 480+ 99B1
 481+ 99B1              ; Movemos, no hay recolocación.
 482+ 99B1
 483+ 99B1 2A 63 87     8 ld hl,(Posicion_actual)
 484+ 99B4 CD B8 99     	call DESPLZ_IZQ
 485+ 99B7 C9           2 ret
 486+ 99B8
 487+ 99B8              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 99B8              ;
 489+ 99B8              ;	22/9/22
 490+ 99B8
 491+ 99B8              DESPLZ_IZQ
 492+ 99B8
 493+ 99B8 CD C7 99     	call Desplaza_izquierda
 494+ 99BB CD 13 9A         call modifica_parametros_1er_DESPLZ
 495+ 99BE CD 3B 9A     	call Ciclo_completo_2
 496+ 99C1 21 83 87     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 99C4 CB BE        	res 7,(hl)
 498+ 99C6 C9           	ret
 499+ 99C7
 500+ 99C7              Desplaza_izquierda
 501+ 99C7
 502+ 99C7 3A 8A 87     	ld a,(Vel_left)
 503+ 99CA 47           	ld b,a
 504+ 99CB 2A 71 87     	ld hl,(Puntero_DESPLZ_izq)
 505+ 99CE 23           1 inc hl
 506+ 99CF 23           	inc hl
 507+ 99D0 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 99D2 22 71 87     	ld (Puntero_DESPLZ_izq),hl
 509+ 99D5 CD 31 8B     	call Extrae_address
 510+ 99D8 22 65 87     	ld (Puntero_objeto),hl
 511+ 99DB
 512+ 99DB              ; Modifica (Puntero_DESPLZ_der).
 513+ 99DB
 514+ 99DB              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 99DB              ; Cuántos movimientos hemos hecho ??
 516+ 99DB              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 99DB
 518+ 99DB 2A 6D 87     7 ld hl,(Indice_Sprite_izq)
 519+ 99DE EB           	ex de,hl
 520+ 99DF A7           	and a
 521+ 99E0 ED 52        	sbc hl,de
 522+ 99E2 CB 3D        	srl l
 523+ 99E4 3E 08        6 ld a,8
 524+ 99E6 95           	sub l
 525+ 99E7 30 1E        	jr nc,3F
 526+ 99E9
 527+ 99E9              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 99E9              ; B="0".
 529+ 99E9
 530+ 99E9 04           4 inc b
 531+ 99EA 3C           	inc a
 532+ 99EB 20 FC        	jr nz,4B
 533+ 99ED 78           	ld a,b
 534+ 99EE 08           	ex af,af
 535+ 99EF 2A 6D 87     	ld hl,(Indice_Sprite_izq)
 536+ 99F2 23           5 inc hl
 537+ 99F3 23           	inc hl
 538+ 99F4 10 FC        	djnz 5B
 539+ 99F6 22 71 87     	ld (Puntero_DESPLZ_izq),hl
 540+ 99F9 CD 31 8B     	call Extrae_address
 541+ 99FC 22 65 87     	ld (Puntero_objeto),hl
 542+ 99FF
 543+ 99FF              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 99FF              ; _(Posicion_actual).
 545+ 99FF
 546+ 99FF 21 63 87     	ld hl,Posicion_actual
 547+ 9A02 35           	dec (hl)
 548+ 9A03 08           	ex af,af
 549+ 9A04 6F           	ld l,a
 550+ 9A05 18 DD        	jr 6B
 551+ 9A07
 552+ 9A07              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9A07
 554+ 9A07 47           3 ld b,a
 555+ 9A08 2A 6B 87     	ld hl,(Indice_Sprite_der)
 556+ 9A0B 23           2 inc hl
 557+ 9A0C 23           	inc hl
 558+ 9A0D 10 FC        	djnz 2B
 559+ 9A0F 22 6F 87     	ld (Puntero_DESPLZ_der),hl
 560+ 9A12 C9           8 ret
 561+ 9A13
 562+ 9A13              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9A13              ;
 564+ 9A13              ;	modifica_parametros_1er_DESPLZ
 565+ 9A13              ;
 566+ 9A13              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9A13              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9A13              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9A13
 570+ 9A13 3A 69 87     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9A16 A7           	and a
 572+ 9A17 20 1E        	jr nz,1F
 573+ 9A19 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9A1A 32 69 87         ld (CTRL_DESPLZ),a
 575+ 9A1D 21 62 87     	ld hl,Columns
 576+ 9A20 34           	inc (hl)
 577+ 9A21 3A 75 87     	ld a,(Cuad_objeto)
 578+ 9A24 E6 01        	and 1
 579+ 9A26 20 0F        	jr nz,1F
 580+ 9A28 2A 63 87     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 9A2B 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 9A2C 22 63 87     	ld (Posicion_actual),hl
 583+ 9A2F CD 08 9B     	call Genera_coordenadas
 584+ 9A32 CD 8E 9A     	call Dec_CTRL_DESPLZ
 585+ 9A35 18 03        	jr 2F
 586+ 9A37 CD 8E 9A     1 call Dec_CTRL_DESPLZ
 587+ 9A3A C9           2 ret
 588+ 9A3B
 589+ 9A3B              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 9A3B
 591+ 9A3B 3A 69 87     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 9A3E FE F7        	cp $f7
 593+ 9A40 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 9A42 30 2C        	jr nc,3F
 595+ 9A44
 596+ 9A44              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 9A44
 598+ 9A44 06 00        	ld b,0
 599+ 9A46 04           4 inc b
 600+ 9A47 3C           	inc a
 601+ 9A48 FE F7        	cp $f7
 602+ 9A4A 20 FA        	jr nz,4B
 603+ 9A4C 3E FF        	ld a,$ff
 604+ 9A4E 90           	sub b
 605+ 9A4F 32 69 87     	ld (CTRL_DESPLZ),a
 606+ 9A52 18 1C        	jr 3F
 607+ 9A54
 608+ 9A54              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 9A54
 610+ 9A54 21 62 87     1 ld hl,Columns
 611+ 9A57 35           	dec (hl)
 612+ 9A58 AF           	xor a
 613+ 9A59 32 69 87     	ld (CTRL_DESPLZ),a
 614+ 9A5C 3A 75 87     	ld a,(Cuad_objeto)
 615+ 9A5F E6 01        	and 1
 616+ 9A61 28 0A        	jr z,2F
 617+ 9A63 2A 63 87     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 9A66 2B           	dec hl
 619+ 9A67 22 63 87     	ld (Posicion_actual),hl
 620+ 9A6A CD 08 9B     	call Genera_coordenadas
 621+ 9A6D
 622+ 9A6D              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 9A6D
 624+ 9A6D CD 59 8B     2 call Inicia_puntero_objeto_izq
 625+ 9A70 C9           3 ret
 626+ 9A71
 627+ 9A71              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 9A71              ;
 629+ 9A71              ;	19/10/22
 630+ 9A71              ;
 631+ 9A71              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 9A71              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 9A71
 634+ 9A71 3A 67 87     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 9A74 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 9A76 C9           	ret
 637+ 9A77
 638+ 9A77              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 9A77              ;
 640+ 9A77              ;	19/10/22
 641+ 9A77              ;
 642+ 9A77              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 9A77              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 9A77
 645+ 9A77 3A 67 87     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 9A7A FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 9A7C C9           	ret
 648+ 9A7D
 649+ 9A7D              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 9A7D              ;
 651+ 9A7D              ;	24/7/22
 652+ 9A7D              ;
 653+ 9A7D              ;	Inc_CTRL_DESPLZ
 654+ 9A7D              ;
 655+ 9A7D              ;
 656+ 9A7D              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 9A7D
 658+ 9A7D 21 69 87     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 9A80 3A 8B 87     	ld a,(Vel_right)
 660+ 9A83 A7           	and a
 661+ 9A84 28 06        	jr z,1F
 662+ 9A86 47           	ld b,a
 663+ 9A87 34           3 inc (hl)
 664+ 9A88 10 FD        	djnz 3B
 665+ 9A8A 18 01        	jr 2F
 666+ 9A8C 34           1 inc (hl)
 667+ 9A8D C9           2 ret
 668+ 9A8E
 669+ 9A8E              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 9A8E              ;
 671+ 9A8E              ;	5/2/23
 672+ 9A8E              ;
 673+ 9A8E              ;	Dec_CTRL_DESPLZ
 674+ 9A8E              ;
 675+ 9A8E              ;
 676+ 9A8E              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 9A8E
 678+ 9A8E 21 69 87     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 9A91 3A 8A 87     	ld a,(Vel_left)
 680+ 9A94 A7           	and a
 681+ 9A95 28 06        	jr z,1F
 682+ 9A97 47           	ld b,a
 683+ 9A98 35           3 dec (hl)
 684+ 9A99 10 FD        	djnz 3B
 685+ 9A9B 18 01        	jr 2F
 686+ 9A9D 35           1 dec (hl)
 687+ 9A9E C9           2 ret
 688+ 9A9F
 689+ 9A9F              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 9A9F
 691+ 9A9F 2A 63 87     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9AA2 01 1F 00     	ld bc,31
 693+ 9AA5 A7           	and a
 694+ 9AA6 ED 4A        	adc hl,bc
 695+ 9AA8 22 63 87     	ld (Posicion_actual),hl
 696+ 9AAB 21 83 87     	ld hl,Ctrl_0														; $xxx1
 697+ 9AAE CB C6        	set 0,(hl)
 698+ 9AB0 C9           	ret
 699+ 9AB1
 700+ 9AB1              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 9AB1
 702+ 9AB1 2A 63 87     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9AB4 01 1F 00     	ld bc,31
 704+ 9AB7 A7           	and a
 705+ 9AB8 ED 42        	sbc hl,bc
 706+ 9ABA 22 63 87     	ld (Posicion_actual),hl 											; $xx1x
 707+ 9ABD 21 83 87     	ld hl,Ctrl_0
 708+ 9AC0 CB CE        	set 1,(hl)
 709+ 9AC2 C9           	ret
 710+ 9AC3
 711+ 9AC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9AC3
 713+ 9AC3 24           Reaparece_abajo inc h
 714+ 9AC4 01 E0 17     	ld bc,$17e0
 715+ 9AC7 A7           	and a
 716+ 9AC8 ED 4A        	adc hl,bc
 717+ 9ACA 22 63 87     	ld (Posicion_actual),hl
 718+ 9ACD 21 83 87     	ld hl,Ctrl_0
 719+ 9AD0 CB D6        	set 2,(hl)
 720+ 9AD2 C9           	ret
 721+ 9AD3
 722+ 9AD3              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9AD3
 724+ 9AD3 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9AD6 A7           	and a
 726+ 9AD7 ED 42        	sbc hl,bc
 727+ 9AD9 22 63 87     	ld (Posicion_actual),hl
 728+ 9ADC 21 83 87     	ld hl,Ctrl_0
 729+ 9ADF CB DE        	set 3,(hl)
 730+ 9AE1 C9           	ret
 731+ 9AE2
 732+ 9AE2              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9AE2              ;
 734+ 9AE2              ;	15/07/23
 735+ 9AE2
 736+ 9AE2              Reinicio
 737+ 9AE2
 738+ 9AE2              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9AE2
 740+ 9AE2 AF           	xor a
 741+ 9AE3 21 9A 87     	ld hl,Puntero_indice_mov_bucle
 742+ 9AE6 CD 04 9B     	call Limpia_contenido_hl
 743+ 9AE9
 744+ 9AE9 21 63 87     	ld hl,Posicion_actual
 745+ 9AEC CD 04 9B     	call Limpia_contenido_hl
 746+ 9AEF
 747+ 9AEF CD 67 86     	call Inicializa_Puntero_indice_mov
 748+ 9AF2 CD C5 9D     	call Inicia_Puntero_mov
 749+ 9AF5
 750+ 9AF5 21 9C 87     	ld hl,Incrementa_puntero
 751+ 9AF8 06 05        	ld b,5
 752+ 9AFA 77           1 ld (hl),a
 753+ 9AFB 23           	inc hl
 754+ 9AFC 10 FC        	djnz 1B
 755+ 9AFE
 756+ 9AFE 21 88 87     	ld hl,Ctrl_2
 757+ 9B01 CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9B03
 759+ 9B03 C9           	ret
 760+ 9B04
 761+ 9B04 77           Limpia_contenido_hl	ld (hl),a
 762+ 9B05 23           	inc hl
 763+ 9B06 77           	ld (hl),a
 764+ 9B07 C9           	ret
 765+ 9B08
 766+ 9B08
# file closed: Direcciones.asm
1800  9B08              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9B08              ; ------------------------------------------------------------------------
   2+ 9B08              ;
   3+ 9B08              ;	22/1/24
   4+ 9B08              ;
   5+ 9B08              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9B08              ;	Fila superior "0", Columna izquierda "0".
   7+ 9B08              ;
   8+ 9B08              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9B08              ;
  10+ 9B08              ;	Modifica: A,BC y DE.
  11+ 9B08
  12+ 9B08 7D           Genera_coordenadas ld a,l
  13+ 9B09 E6 1F        	and $1f
  14+ 9B0B 32 67 87     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ 9B0E
  16+ 9B0E 3E 39        	ld a,$39											; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ 9B10 BC           	cp h
  18+ 9B11 20 05        	jr nz,4F
  19+ 9B13
  20+ 9B13 AF           	xor a
  21+ 9B14 32 68 87     	ld (Coordenada_y),a
  22+ 9B17 C9           	ret
  23+ 9B18
  24+ 9B18 CD 70 97     4 call calcula_tercio
  25+ 9B1B 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  26+ 9B1C
  27+ 9B1C 1E 00        	ld e,0
  28+ 9B1E 7D           	ld a,l
  29+ 9B1F E6 E0        	and $e0
  30+ 9B21 28 01        	jr z,1F
  31+ 9B23 04           	inc b
  32+ 9B24
  33+ 9B24 04           1 inc b
  34+ 9B25 05           	dec b
  35+ 9B26 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  36+ 9B28              ;														; _ , salimos.
  37+ 9B28 1C           3 inc e
  38+ 9B29 D6 20        	sub 32
  39+ 9B2B 20 FB        	jr nz,3B
  40+ 9B2D 10 F5        	djnz 1B
  41+ 9B2F
  42+ 9B2F 7B           2 ld a,e
  43+ 9B30 32 68 87     	ld (Coordenada_y),a
  44+ 9B33
  45+ 9B33 C9           	ret
  46+ 9B34
  47+ 9B34              ; ------------------------------------------------------------------------
  48+ 9B34              ;	28/05/23
  49+ 9B34              ;
  50+ 9B34              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  51+ 9B34              ;	Fila superior "0", Columna izquierda "0".
  52+ 9B34              ;
  53+ 9B34              ;	Input: HL contendrá la posición del proyectil en pantalla.
  54+ 9B34              ;	Output: DE contendrá las coordenadas del disparo:
  55+ 9B34              ;
  56+ 9B34              ;		DE="$120d"
  57+ 9B34              ;
  58+ 9B34              ;		D, (Coordenada_X), Columnas, $12
  59+ 9B34              ;		E, (Coordenada_y), Filas, $0d
  60+ 9B34              ;
  61+ 9B34              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  62+ 9B34
  63+ 9B34              ;	Modifica: A,BC y DE.
  64+ 9B34
  65+ 9B34
  66+ 9B34              Genera_coordenadas_disparo
  67+ 9B34
  68+ 9B34              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  69+ 9B34
  70+ 9B34 7D           	ld a,l
  71+ 9B35 E6 1F        	and $1f
  72+ 9B37 57           	ld d,a 												; Columnas en D. Coordenada_X.
  73+ 9B38 CD 70 97     	call calcula_tercio
  74+ 9B3B 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  75+ 9B3C 1E 00        	ld e,0
  76+ 9B3E 7D           	ld a,l
  77+ 9B3F E6 E0        	and $e0
  78+ 9B41 28 01        	jr z,1F
  79+ 9B43 04           	inc b
  80+ 9B44 1C           1 inc e
  81+ 9B45 D6 20        	sub 32
  82+ 9B47 20 FB        	jr nz,1B
  83+ 9B49 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  84+ 9B4B C9           	ret
  85+ 9B4C
# file closed: Genera_coordenadas.asm
1801  9B4C              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9B4C              ; Relojes y temporizaciones.
   2+ 9B4C
   3+ 9B4C              ; ------------------------------------------------------
   4+ 9B4C              ;
   5+ 9B4C              ;	16/7/23
   6+ 9B4C              ;
   7+ 9B4C              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9B4C              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9B4C              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9B4C              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9B4C              ;
  12+ 9B4C              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9B4C              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9B4C
  15+ 9B4C              ; Disparo_entidad db 1
  16+ 9B4C              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9B4C              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9B4C
  19+ 9B4C              Habilita_disparos
  20+ 9B4C
  21+ 9B4C 7E           	ld a,(hl)
  22+ 9B4D A7           	and a
  23+ 9B4E C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9B4F
  25+ 9B4F EB           	ex de,hl
  26+ 9B50
  27+ 9B50 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9B51 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9B52
  30+ 9B52              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9B52
  32+ 9B52 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9B53 7E           	ld a,(hl)
  34+ 9B54 23           	inc hl
  35+ 9B55 77           	ld (hl),a
  36+ 9B56
  37+ 9B56 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9B57 3E 01        	ld a,1
  39+ 9B59 77           	ld (hl),a
  40+ 9B5A C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1802  9B5B              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9B5B
   2+ 9B5B
   3+ 9B5B              ;   07/07/23
   4+ 9B5B              ;
   5+ 9B5B              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9B5B              ;
   7+ 9B5B              ;   Codificación:
   8+ 9B5B              ;
   9+ 9B5B              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9B5B              ;
  11+ 9B5B              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9B5B              ;
  13+ 9B5B              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9B5B              ;
  15+ 9B5B              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9B5B              ;
  17+ 9B5B              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9B5B              ;                               ..... %01000010 Vel_up 4
  19+ 9B5B              ;                                               Vel_down 2
  20+ 9B5B              ;                               ..... $42
  21+ 9B5B              ;
  22+ 9B5B              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9B5B              ;
  24+ 9B5B              ;                               ..... %01000010 Vel_left 4
  25+ 9B5B              ;                                               Vel_right 2
  26+ 9B5B              ;                               ..... $42
  27+ 9B5B              ;
  28+ 9B5B              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9B5B              ;
  30+ 9B5B              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9B5B              ;
  32+ 9B5B              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9B5B              ;
  34+ 9B5B              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9B5B              ;                                     $53
  36+ 9B5B              ;
  37+ 9B5B              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9B5B              ;
  39+ 9B5B              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9B5B              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9B5B              ;
  42+ 9B5B              ;                       Arriba ..... $81
  43+ 9B5B              ;                       Arriba - izquierda ..... $a1
  44+ 9B5B              ;                       Arriba - derecha ..... $91
  45+ 9B5B              ;
  46+ 9B5B              ;                       Abajo ..... $41
  47+ 9B5B              ;                       Abajo - izquierda ..... $61
  48+ 9B5B              ;                       Abajo - derecha ..... $51
  49+ 9B5B              ;
  50+ 9B5B              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9B5B              ;
  52+ 9B5B              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9B5B              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9B5B              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9B5B              ;
  56+ 9B5B              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9B5B              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9B5B              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9B5B              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9B5B              ;
  61+ 9B5B              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9B5B              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9B5B              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9B5B              ;
  65+ 9B5B              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9B5B              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9B5B              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9B5B              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9B5B
  70+ 9B5B              ; ----- ----- ----- ----- -----
  71+ 9B5B
  72+ 9B5B 87 9B        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9B5D 8F 9B            defw F_1
  74+ 9B5F 99 9B            defw F_2
  75+ 9B61 A3 9B            defw Codo_abajo_derecha
  76+ 9B63 D7 9B            defw Derecha_y_subiendo
  77+ 9B65 E1 9B            defw Derecha_y_subiendo_1
  78+ 9B67 EB 9B            defw F_3
  79+ 9B69 F5 9B            defw F_4
  80+ 9B6B FF 9B            defw Derecha_y_bajando
  81+ 9B6D 09 9C            defw Derecha_y_bajando_1
  82+ 9B6F 13 9C            defw Derecha_y_bajando_2
  83+ 9B71 1D 9C            defw Codo_derecha_abajo
  84+ 9B73 4D 9C            defw Codo_abajo_izq.
  85+ 9B75 81 9C            defw Izquierda_y_subiendo
  86+ 9B77 8B 9C            defw Izquierda_y_subiendo_1
  87+ 9B79 95 9C            defw F_5
  88+ 9B7B 9F 9C            defw F_6
  89+ 9B7D A9 9C            defw Izquierda_y_bajando
  90+ 9B7F B3 9C            defw Izquierda_y_bajando_1
  91+ 9B81 BD 9C            defw Izquierda_y_bajando_2
  92+ 9B83 C7 9C            defw Codo_izquierda_abajo
  93+ 9B85 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9B87
  95+ 9B87 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9B8B 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9B8F
  98+ 9B8F 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9B93 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9B97 08 00
 100+ 9B99 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9B9D 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9BA1 0F FE
 102+ 9BA3
 103+ 9BA3 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9BA7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9BAB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9BAF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9BB3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9BB7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9BBB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9BBF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9BC3 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9BC7 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9BCB 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9BCF 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9BD3 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9BD7
 117+ 9BD7 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9BDB 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9BDF 06 00
 119+ 9BE1
 120+ 9BE1 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9BE5 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9BE9 02 00
 122+ 9BEB
 123+ 9BEB 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9BEF 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9BF3 04 00
 125+ 9BF5 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9BF9 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9BFD 08 00
 127+ 9BFF
 128+ 9BFF 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9C03 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9C07 02 00
 130+ 9C09
 131+ 9C09 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9C0D 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9C11 06 00
 133+ 9C13
 134+ 9C13 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9C17 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9C1B 06 00
 136+ 9C1D
 137+ 9C1D              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9C1D
 139+ 9C1D 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9C21 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9C25 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9C29 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9C2D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9C31 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9C35 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9C39 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9C3D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9C41 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9C45 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9C49 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9C4D
 152+ 9C4D 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9C51 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9C55 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9C59 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9C5D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9C61 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9C65 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9C69 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9C6D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9C71 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9C75 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9C79 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9C7D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9C81
 166+ 9C81 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9C85 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9C89 06 00
 168+ 9C8B
 169+ 9C8B 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9C8F 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9C93 02 00
 171+ 9C95
 172+ 9C95 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9C99 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9C9D 04 00
 174+ 9C9F 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9CA3 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9CA7 08 00
 176+ 9CA9
 177+ 9CA9 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9CAD 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9CB1 02 00
 179+ 9CB3
 180+ 9CB3 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9CB7 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9CBB 06 00
 182+ 9CBD
 183+ 9CBD 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9CC1 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9CC5 06 00
 185+ 9CC7
 186+ 9CC7 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9CCB 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9CCF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9CD3 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9CD7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9CDB 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9CDF 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9CE3 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9CE7 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9CEB 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9CEF 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9CF3 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9CF7
 199+ 9CF7              ; ----- ----- ----- ----- -----
 200+ 9CF7              ;
 201+ 9CF7              ;   28/12/23
 202+ 9CF7
 203+ 9CF7              Movimiento
 204+ 9CF7
 205+ 9CF7              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9CF7
 207+ 9CF7 3A 88 87         ld a,(Ctrl_2)
 208+ 9CFA CB 57            bit 2,a
 209+ 9CFC 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9CFE
 211+ 9CFE 2A 98 87         ld hl,(Puntero_mov)
 212+ 9D01 7E               ld a,(hl)
 213+ 9D02
 214+ 9D02              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9D02
 216+ 9D02              Inicia_desplazamiento.
 217+ 9D02
 218+ 9D02              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9D02
 220+ 9D02 CD 02 9E         call Ajusta_velocidad_desplazamiento
 221+ 9D05
 222+ 9D05              ; Iniciamos (Repetimos_mov).
 223+ 9D05
 224+ 9D05 7E               ld a,(hl)
 225+ 9D06 E6 0F            and $0f
 226+ 9D08 32 9E 87         ld (Repetimos_desplazamiento),a
 227+ 9D0B 32 9F 87         ld (Repetimos_desplazamiento_backup),a
 228+ 9D0E
 229+ 9D0E              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9D0E
 231+ 9D0E 23               inc hl
 232+ 9D0F 7E               ld a,(hl)
 233+ 9D10 32 A1 87         ld (Cola_de_desplazamiento),a
 234+ 9D13 2B               dec hl
 235+ 9D14
 236+ 9D14 21 88 87         ld hl,Ctrl_2
 237+ 9D17 CB D6            set 2,(hl)
 238+ 9D19
 239+ 9D19              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9D19              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9D19
 242+ 9D19              Desplazamiento_iniciado
 243+ 9D19
 244+ 9D19 CD D0 9D         call Aplica_desplazamiento
 245+ 9D1C
 246+ 9D1C              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9D1C
 248+ 9D1C 3A C1 87         ld a,(Ctrl_3)
 249+ 9D1F CB 57            bit 2,a
 250+ 9D21 C0               ret nz
 251+ 9D22
 252+ 9D22 3A 88 87         ld a,(Ctrl_2)
 253+ 9D25 CB 67            bit 4,a
 254+ 9D27 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9D28
 256+ 9D28 21 9E 87     3 ld hl,Repetimos_desplazamiento
 257+ 9D2B 35               dec (hl)
 258+ 9D2C C0               ret nz
 259+ 9D2D
 260+ 9D2D              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9D2D              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9D2D              ; Analiza (Cola_de_desplazamiento).
 263+ 9D2D
 264+ 9D2D 3A A1 87     Cola ld a,(Cola_de_desplazamiento)
 265+ 9D30 A7               and a
 266+ 9D31 CC 2B 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9D34 28 30            jr z,Reinicia_el_movimiento
 268+ 9D36
 269+ 9D36 FE FF            cp $ff
 270+ 9D38 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9D3A
 272+ 9D3A FE FE            cp $fe
 273+ 9D3C CC A9 9D         call z,Fijamos_bucle
 274+ 9D3F 28 25            jr z,Reinicia_el_movimiento
 275+ 9D41
 276+ 9D41 FE FD            cp $fd
 277+ 9D43 20 11            jr nz,1F
 278+ 9D45
 279+ 9D45              ; ---
 280+ 9D45              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9D45
 282+ 9D45 3A 88 87         ld a,(Ctrl_2)
 283+ 9D48 CB 5F            bit 3,a
 284+ 9D4A 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9D4C
 286+ 9D4C              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9D4C
 288+ 9D4C 21 88 87         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9D4F CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9D51
 291+ 9D51 CD BA 9D         call Inicia_Repetimos_movimiento
 292+ 9D54 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9D56              ; ---
 294+ 9D56
 295+ 9D56 FE 01        1 cp 1
 296+ 9D58 CA 93 9D         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9D5B
 298+ 9D5B 3D               dec a
 299+ 9D5C 32 A1 87         ld (Cola_de_desplazamiento),a
 300+ 9D5F
 301+ 9D5F 3A 9F 87         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9D62 32 9E 87         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9D65              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9D65 C9               ret
 305+ 9D66
 306+ 9D66              Reinicia_el_movimiento
 307+ 9D66
 308+ 9D66 3A 88 87         ld a,(Ctrl_2)
 309+ 9D69 CB 5F            bit 3,a
 310+ 9D6B 28 1B            jr z,2F
 311+ 9D6D
 312+ 9D6D              ; (Cola_de_desplazamiento)="254".
 313+ 9D6D
 314+ 9D6D 21 A0 87         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9D70 35               dec (hl)
 316+ 9D71 20 15            jr nz,2F
 317+ 9D73
 318+ 9D73              ; Fin de las repeticiones del último movimiento.
 319+ 9D73
 320+ 9D73 21 88 87         ld hl,Ctrl_2
 321+ 9D76 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9D78
 323+ 9D78 2A 98 87         ld hl,(Puntero_mov)
 324+ 9D7B 23               inc hl
 325+ 9D7C 23               inc hl
 326+ 9D7D 23               inc hl
 327+ 9D7E 22 98 87         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9D81              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9D81 7E               ld a,(hl)
 330+ 9D82 32 A1 87         ld (Cola_de_desplazamiento),a
 331+ 9D85
 332+ 9D85 C3 2D 9D         jp Cola
 333+ 9D88
 334+ 9D88 CD C5 9D     2 call Inicia_Puntero_mov
 335+ 9D8B
 336+ 9D8B 21 88 87         ld hl,Ctrl_2
 337+ 9D8E CB 96            res 2,(hl)
 338+ 9D90
 339+ 9D90 C3 F7 9C         jp Movimiento
 340+ 9D93
 341+ 9D93              Siguiente_desplazamiento
 342+ 9D93
 343+ 9D93              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9D93              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9D93
 346+ 9D93 21 88 87         ld hl,Ctrl_2
 347+ 9D96 CB 96            res 2,(hl)
 348+ 9D98
 349+ 9D98 2A 98 87         ld hl,(Puntero_mov)
 350+ 9D9B 23               inc hl
 351+ 9D9C 23               inc hl
 352+ 9D9D 22 98 87         ld (Puntero_mov),hl
 353+ 9DA0
 354+ 9DA0 7E               ld a,(hl)
 355+ 9DA1 A7               and a
 356+ 9DA2 CC 2B 9E         call z,Incrementa_Puntero_indice_mov
 357+ 9DA5 CA 66 9D         jp z,Reinicia_el_movimiento
 358+ 9DA8
 359+ 9DA8 C9               ret
 360+ 9DA9
 361+ 9DA9              ; Subrutinas -----------------------------------------
 362+ 9DA9              ; ---------- --------- --------- ---------- ----------
 363+ 9DA9              ;
 364+ 9DA9              ;   24/07/23
 365+ 9DA9              ;
 366+ 9DA9              ;   Fijamos_bucle
 367+ 9DA9              ;
 368+ 9DA9              ;
 369+ 9DA9
 370+ 9DA9              Fijamos_bucle
 371+ 9DA9
 372+ 9DA9 3A 9C 87         ld a,(Incrementa_puntero)
 373+ 9DAC 3C               inc a
 374+ 9DAD 32 9D 87         ld (Incrementa_puntero_backup),a
 375+ 9DB0
 376+ 9DB0 CD 2B 9E         call Incrementa_Puntero_indice_mov
 377+ 9DB3 2A 96 87         ld hl,(Puntero_indice_mov)
 378+ 9DB6 22 9A 87         ld (Puntero_indice_mov_bucle),hl
 379+ 9DB9 C9               ret
 380+ 9DBA
 381+ 9DBA              ; ---------- --------- --------- ---------- ----------
 382+ 9DBA              ;
 383+ 9DBA              ;   07/7/23
 384+ 9DBA              ;
 385+ 9DBA              ;   Inicia_Repetimos_movimiento
 386+ 9DBA              ;
 387+ 9DBA              ;
 388+ 9DBA
 389+ 9DBA              Inicia_Repetimos_movimiento
 390+ 9DBA
 391+ 9DBA              ; Iniciamos (Repetimos_movimiento).
 392+ 9DBA
 393+ 9DBA DD 2A 98 87      ld ix,(Puntero_mov)
 394+ 9DBE DD 7E 02         ld a,(ix+2)
 395+ 9DC1 32 A0 87         ld (Repetimos_movimiento),a
 396+ 9DC4
 397+ 9DC4 C9               ret
 398+ 9DC5
 399+ 9DC5              ; ---------- --------- --------- ---------- ----------
 400+ 9DC5              ;
 401+ 9DC5              ;   26/6/23
 402+ 9DC5              ;
 403+ 9DC5              ;   Inicia_Puntero_mov
 404+ 9DC5              ;
 405+ 9DC5              ;
 406+ 9DC5
 407+ 9DC5 2A 96 87     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ 9DC8 5E               ld e,(hl)
 409+ 9DC9 23               inc hl
 410+ 9DCA 56               ld d,(hl)
 411+ 9DCB EB               ex de,hl
 412+ 9DCC 22 98 87         ld (Puntero_mov),hl
 413+ 9DCF C9               ret
 414+ 9DD0
 415+ 9DD0              ; ---------- --------- --------- ---------- ----------
 416+ 9DD0              ;
 417+ 9DD0              ;   27/06/23
 418+ 9DD0              ;
 419+ 9DD0              ;   Aplica_movimiento.
 420+ 9DD0
 421+ 9DD0              Aplica_desplazamiento
 422+ 9DD0
 423+ 9DD0              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ 9DD0
 425+ 9DD0 2A 98 87         ld hl, (Puntero_mov)
 426+ 9DD3
 427+ 9DD3 7E               ld a,(hl)
 428+ 9DD4 E6 F0            and $f0
 429+ 9DD6 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ 9DD7
 431+ 9DD7 CB 7E            bit 7,(hl)
 432+ 9DD9 28 03            jr z,1F
 433+ 9DDB CD EF 97         call Mov_up
 434+ 9DDE 2A 98 87     1 ld hl, (Puntero_mov)
 435+ 9DE1 CB 76            bit 6,(hl)
 436+ 9DE3 28 09            jr z,2F
 437+ 9DE5 CD B6 97         call Mov_down
 438+ 9DE8
 439+ 9DE8              ; Se ha aplicado reinicio ???
 440+ 9DE8              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ 9DE8
 442+ 9DE8 3A C1 87         ld a,(Ctrl_3)
 443+ 9DEB CB 57            bit 2,a
 444+ 9DED C0               ret nz
 445+ 9DEE
 446+ 9DEE 2A 98 87     2 ld hl, (Puntero_mov)
 447+ 9DF1 CB 6E            bit 5,(hl)
 448+ 9DF3 28 03            jr z,3F
 449+ 9DF5 CD 55 99         call Mov_left
 450+ 9DF8 2A 98 87     3 ld hl, (Puntero_mov)
 451+ 9DFB CB 66            bit 4,(hl)
 452+ 9DFD C8               ret z
 453+ 9DFE CD 32 98         call Mov_right
 454+ 9E01 C9               ret
 455+ 9E02
 456+ 9E02              ; ---------- --------- --------- ---------- ----------
 457+ 9E02              ;
 458+ 9E02              ;   26/06/23
 459+ 9E02              ;
 460+ 9E02              ;   Ajusta_velocidad_desplazamiento.
 461+ 9E02
 462+ 9E02              Ajusta_velocidad_desplazamiento
 463+ 9E02
 464+ 9E02              ; 1er byte de la cadena de movimiento.
 465+ 9E02              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ 9E02
 467+ 9E02 CD 20 9E         call Extrae_nibble_alto
 468+ 9E05
 469+ 9E05 32 8C 87         ld (Vel_up),a
 470+ 9E08 79               ld a,c
 471+ 9E09 E6 0F            and $0f
 472+ 9E0B 32 8D 87         ld (Vel_down),a
 473+ 9E0E
 474+ 9E0E              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ 9E0E              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ 9E0E
 477+ 9E0E 23               inc hl
 478+ 9E0F CD 20 9E         call Extrae_nibble_alto
 479+ 9E12
 480+ 9E12 32 8A 87         ld (Vel_left),a
 481+ 9E15 79               ld a,c
 482+ 9E16 E6 0F            and $0f
 483+ 9E18 32 8B 87         ld (Vel_right),a
 484+ 9E1B
 485+ 9E1B              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ 9E1B
 487+ 9E1B 23               inc hl
 488+ 9E1C 22 98 87         ld (Puntero_mov),hl
 489+ 9E1F C9               ret
 490+ 9E20
 491+ 9E20 06 04        Extrae_nibble_alto ld b,4
 492+ 9E22 7E               ld a,(hl)
 493+ 9E23 4F               ld c,a
 494+ 9E24 E6 F0            and $f0
 495+ 9E26 CB 3F        1 srl a
 496+ 9E28 10 FC            djnz 1B
 497+ 9E2A C9               ret
 498+ 9E2B
 499+ 9E2B              ; ---------- --------- --------- ---------- ----------
 500+ 9E2B              ;
 501+ 9E2B              ;   5/7/23
 502+ 9E2B              ;
 503+ 9E2B              ;   Incrementa_Puntero_indice_mov
 504+ 9E2B
 505+ 9E2B              Incrementa_Puntero_indice_mov
 506+ 9E2B
 507+ 9E2B 21 9C 87         ld hl,Incrementa_puntero
 508+ 9E2E 34               inc (hl)
 509+ 9E2F
 510+ 9E2F 2A 96 87         ld hl,(Puntero_indice_mov)
 511+ 9E32 01 02 00         ld bc,2
 512+ 9E35 A7               and a
 513+ 9E36 09               add hl,bc
 514+ 9E37 22 96 87         ld (Puntero_indice_mov),hl
 515+ 9E3A
 516+ 9E3A 7E               ld a,(hl)
 517+ 9E3B A7               and a
 518+ 9E3C
 519+ 9E3C              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ 9E3C
 521+ 9E3C              ;    jr z,$
 522+ 9E3C
 523+ 9E3C              ;! Reinicia el Patrón de movimiento.
 524+ 9E3C
 525+ 9E3C CC 41 9E         call z,Inicializa_Puntero_indice_mov_2
 526+ 9E3F
 527+ 9E3F AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ 9E40
 529+ 9E40 C9               ret
 530+ 9E41
 531+ 9E41              ; ---------- --------- --------- ---------- ----------
 532+ 9E41              ;
 533+ 9E41              ;   15/01/24
 534+ 9E41              ;
 535+ 9E41              ;   Inicializa_Puntero_indice_mov
 536+ 9E41
 537+ 9E41              Inicializa_Puntero_indice_mov_2
 538+ 9E41
 539+ 9E41              ; Existe etiqueta de bucle principal???
 540+ 9E41
 541+ 9E41 2A 9A 87         ld hl,(Puntero_indice_mov_bucle)
 542+ 9E44 24               inc h
 543+ 9E45 25               dec h
 544+ 9E46 28 05            jr z,2F
 545+ 9E48
 546+ 9E48 22 96 87         ld (Puntero_indice_mov),hl
 547+ 9E4B 18 14            jr 3F
 548+ 9E4D
 549+ 9E4D              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 550+ 9E4D
 551+ 9E4D 3A 9C 87     2 ld a,(Incrementa_puntero)
 552+ 9E50 47               ld b,a
 553+ 9E51
 554+ 9E51 2A 96 87         ld hl,(Puntero_indice_mov)
 555+ 9E54 2B           1 dec hl
 556+ 9E55 2B               dec hl
 557+ 9E56 10 FC            djnz 1B
 558+ 9E58 22 96 87         ld (Puntero_indice_mov),hl
 559+ 9E5B
 560+ 9E5B AF               xor a
 561+ 9E5C 32 9C 87         ld (Incrementa_puntero),a
 562+ 9E5F 18 06            jr 4F
 563+ 9E61
 564+ 9E61 3A 9D 87     3 ld a,(Incrementa_puntero_backup)
 565+ 9E64 32 9C 87         ld (Incrementa_puntero),a
 566+ 9E67 C9           4 ret
 567+ 9E68
 568+ 9E68 3A 60 87     Vuelca_en_Contador_general_de_mov_masticados ld a,(Tipo)
 569+ 9E6B CD BC 86         call Calcula_salto_en_BC
 570+ 9E6E 21 8E 87         ld hl,Contador_general_de_mov_masticados_Entidad_1
 571+ 9E71 A7               and a
 572+ 9E72 ED 4A            adc hl,bc
 573+ 9E74 C9               ret
 574+ 9E75
 575+ 9E75
# file closed: Patrones_de_mov.asm
1803  9E75              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9E75              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9E75              ;
   3+ 9E75              ;	12/12/23
   4+ 9E75              ;
   5+ 9E75              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9E75
   7+ 9E75              ;	ADC HL,SP	LD (addr),SP
   8+ 9E75              ;	ADD HL,SP	LD SP,(addr)
   9+ 9E75              ;	ADD IX,SP	LD SP,nn
  10+ 9E75              ; 	ADD IY,SP	LD SP,HL
  11+ 9E75              ;				LD SP,IX
  12+ 9E75              ;	DEC SP		LD SP,IY
  13+ 9E75
  14+ 9E75              ;	EX (SP),HL
  15+ 9E75              ;	EX (SP),IX
  16+ 9E75              ;	EX (SP),IY
  17+ 9E75
  18+ 9E75              ;	INC SP
  19+ 9E75
  20+ 9E75                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 B3 87      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 7D 87         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 7F 87         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A A2 87         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A BB 87         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 83 87     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A BF 87         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A B9 87     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A A2 87         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 BB 87         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 83 87     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 BF 87         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B B3 87      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 B9 87     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B B3 87  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A B9 87         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 B9 87         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1804  718B
1805  718B              	SAVESNA "Pruebas.sna", START
1806  718B
1807  718B
1808  718B
1809  718B
# file closed: Banco_de_pruebas.asm
