# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a0ff
   7  A0FF
   8  A0FF              ;	Vector de interrupciones.
   9  A0FF
  10  A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
  11  A101
  12  A101              	org $a101
  13  A101
  14  A101 CD DB 8A     	call Frame
  15  A104
  16  A104 3A FE 89     	ld a,(Ctrl_2)
  17  A107 CB 67        	bit 4,a
  18  A109 20 FE        	jr nz,$
  19  A10B
  20  A10B 3A 00 8A     	ld a,(Ctrl_1) 										; Existe Loop?
  21  A10E CB 5F        	bit 3,a
  22  A110 ED 4D        	reti
  23  A112
  24  A112              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  25  A112
  26  A112              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ A112              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A112              ;
   3+ A112              ;	17/02/23
   4+ A112              ;
   5+ A112              ;	Sprites e índices.
   6+ A112
   7+ A112              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
# file closed: Sprites_e_indices.asm
  27  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C
  95+ 856C              Indice_de_cajas										 ;! 66 Bytes por entidad.
  96+ 856C
  97+ 856C C6 85        	defw Caja_1
  98+ 856E 08 86        	defw Caja_2
  99+ 8570 4A 86        	defw Caja_3
 100+ 8572 8C 86        	defw Caja_4
 101+ 8574 CE 86        	defw Caja_5
 102+ 8576 10 87        	defw Caja_6
 103+ 8578 52 87        	defw Caja_7
 104+ 857A 94 87        	defw Caja_8
 105+ 857C D6 87        	defw Caja_9
 106+ 857E 18 88        	defw Caja_10
 107+ 8580              ;	...
 108+ 8580              ;	...
 109+ 8580              ;	+ entidades ...
 110+ 8580 00 00        	defw 0
 111+ 8582 00 00        	defw 0
 112+ 8584
 113+ 8584              ; ---------- ---------- ---------- ---------- ----------
 114+ 8584
 115+ 8584 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 116+ 8586 00 00        	defw 0		 									; (Posicion_actual).
 117+ 8588 00 00        	defw 0	 										; (Puntero_objeto).
 118+ 858A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 119+ 858D
 120+ 858D 05           	db %00000101									; (Attr).
 121+ 858E 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 122+ 8590 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 123+ 8592
 124+ 8592 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 125+ 8594 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 126+ 8596
 127+ 8596 D0 50        	defw $50d0										; (Posicion_inicio).
 128+ 8598 04           	db 4 											; (Cuad_objeto).
 129+ 8599 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 130+ 859D
 131+ 859D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 132+ 859E
 133+ 859E 00 00        	db 0,0											; Variables_de_borrado
 134+ 85A0 00 00        	defw 0											;	" " " " " " "
 135+ 85A2 00 00        	defw 0											;	" " " " " " "
 136+ 85A4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 137+ 85A8
 138+ 85A8 00 00        	db 0,0											; Variables_de_pintado
 139+ 85AA 00 00        	defw 0											;	" " " " " " "
 140+ 85AC 00 00        	defw 0											;	" " " " " " "
 141+ 85AE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 142+ 85B2
 143+ 85B2 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 144+ 85B4
 145+ 85B4 00           	db 0											; (Autoriza_movimiento).
 146+ 85B5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 146+ 85B9 00 00
 147+ 85BB 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 148+ 85BD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 149+ 85BF 00           	db 0											; (Cola_de_desplazamiento).
 150+ 85C0
 151+ 85C0 00           	db 0 											; (Columnas).
 152+ 85C1 00 00        	defw 0											; (Limite_horizontal).
 153+ 85C3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 154+ 85C6
 155+ 85C6              ; ---------- ---------- ---------- ---------- ----------
 156+ 85C6
 157+ 85C6 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 158+ 85C8 00 00        	defw 0											; (Posicion_actual).
 159+ 85CA 00 00        	defw 0 											; (Puntero_objeto).
 160+ 85CC 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 161+ 85CF
 162+ 85CF 00           	db %00000000 									; (Attr).
 163+ 85D0
 164+ 85D0 00 00        	defw 0											; (Indice_Sprite_der).
 165+ 85D2 00 00        	defw 0											; (Indice_Sprite_izq).
 166+ 85D4 00 00        	defw 0											; (Puntero_DESPLZ_der).
 167+ 85D6 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 168+ 85D8
 169+ 85D8 00 00        	defw 0											; (Posicion_inicio).
 170+ 85DA 00           	db 0											; (Cuad_objeto).
 171+ 85DB
 172+ 85DB 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 173+ 85DF
 174+ 85DF 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 175+ 85E0
 176+ 85E0 00 00        	db 0,0										    ; Variables_de_borrado
 177+ 85E2 00 00        	defw 0											;	" " " " " " "
 178+ 85E4 00 00        	defw 0											;	" " " " " " "
 179+ 85E6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 180+ 85EA
 181+ 85EA 00 00        	db 0,0											; Variables_de_pintado
 182+ 85EC 00 00        	defw 0											;	" " " " " " "
 183+ 85EE 00 00        	defw 0											;	" " " " " " "
 184+ 85F0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 185+ 85F4
 186+ 85F4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 187+ 85F6
 188+ 85F6 00           	db 0											; (Autoriza_movimiento).
 189+ 85F7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 189+ 85FB 00 00
 190+ 85FD 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 191+ 85FF 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 192+ 8601 00           	db 0											; (Cola_de_desplazamiento).
 193+ 8602
 194+ 8602 00           	db 0 											; (Columnas).
 195+ 8603 00 00        	defw 0											; (Limite_horizontal).
 196+ 8605 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 197+ 8608
 198+ 8608              ; ---------- ---------- ---------- ---------- ----------
 199+ 8608
 200+ 8608 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 201+ 860A 00 00        	defw 0											; (Posicion_actual).
 202+ 860C 00 00        	defw 0 											; (Puntero_objeto).
 203+ 860E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 204+ 8611
 205+ 8611 00           	db %00000000 									; (Attr).
 206+ 8612
 207+ 8612 00 00        	defw 0											; (Indice_Sprite_der).
 208+ 8614 00 00        	defw 0											; (Indice_Sprite_izq).
 209+ 8616 00 00        	defw 0											; (Puntero_DESPLZ_der).
 210+ 8618 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 211+ 861A
 212+ 861A 00 00        	defw 0											; (Posicion_inicio).
 213+ 861C 00           	db 0											; (Cuad_objeto).
 214+ 861D
 215+ 861D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 216+ 8621
 217+ 8621 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 218+ 8622
 219+ 8622 00 00        	db 0,0										    ; Variables_de_borrado
 220+ 8624 00 00        	defw 0											;	" " " " " " "
 221+ 8626 00 00        	defw 0											;	" " " " " " "
 222+ 8628 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 223+ 862C
 224+ 862C 00 00        	db 0,0											; Variables_de_pintado
 225+ 862E 00 00        	defw 0											;	" " " " " " "
 226+ 8630 00 00        	defw 0											;	" " " " " " "
 227+ 8632 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 228+ 8636
 229+ 8636 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 230+ 8638
 231+ 8638 00           	db 0											; (Autoriza_movimiento).
 232+ 8639 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 232+ 863D 00 00
 233+ 863F 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 234+ 8641 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 235+ 8643 00           	db 0											; (Cola_de_desplazamiento).
 236+ 8644
 237+ 8644 00           	db 0 											; (Columnas).
 238+ 8645 00 00        	defw 0											; (Limite_horizontal).
 239+ 8647 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 240+ 864A
 241+ 864A              ; ---------- ---------- ---------- ---------- ----------
 242+ 864A
 243+ 864A 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 244+ 864C 00 00        	defw 0											; (Posicion_actual).
 245+ 864E 00 00        	defw 0 											; (Puntero_objeto).
 246+ 8650 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 247+ 8653
 248+ 8653 00           	db %00000000 									; (Attr).
 249+ 8654
 250+ 8654 00 00        	defw 0											; (Indice_Sprite_der).
 251+ 8656 00 00        	defw 0											; (Indice_Sprite_izq).
 252+ 8658 00 00        	defw 0											; (Puntero_DESPLZ_der).
 253+ 865A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 254+ 865C
 255+ 865C 00 00        	defw 0											; (Posicion_inicio).
 256+ 865E 00           	db 0											; (Cuad_objeto).
 257+ 865F
 258+ 865F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 259+ 8663
 260+ 8663 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 261+ 8664
 262+ 8664 00 00        	db 0,0										    ; Variables_de_borrado
 263+ 8666 00 00        	defw 0											;	" " " " " " "
 264+ 8668 00 00        	defw 0											;	" " " " " " "
 265+ 866A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 266+ 866E
 267+ 866E 00 00        	db 0,0											; Variables_de_pintado
 268+ 8670 00 00        	defw 0											;	" " " " " " "
 269+ 8672 00 00        	defw 0											;	" " " " " " "
 270+ 8674 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 271+ 8678
 272+ 8678 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 273+ 867A
 274+ 867A 00           	db 0											; (Autoriza_movimiento).
 275+ 867B 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 275+ 867F 00 00
 276+ 8681 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 277+ 8683 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 278+ 8685 00           	db 0											; (Cola_de_desplazamiento).
 279+ 8686
 280+ 8686 00           	db 0 											; (Columnas).
 281+ 8687 00 00        	defw 0											; (Limite_horizontal).
 282+ 8689 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 283+ 868C
 284+ 868C              ; ---------- ---------- ---------- ---------- ----------
 285+ 868C
 286+ 868C 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 287+ 868E 00 00        	defw 0											; (Posicion_actual).
 288+ 8690 00 00        	defw 0 											; (Puntero_objeto).
 289+ 8692 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 290+ 8695
 291+ 8695 00           	db %00000000 									; (Attr).
 292+ 8696
 293+ 8696 00 00        	defw 0											; (Indice_Sprite_der).
 294+ 8698 00 00        	defw 0											; (Indice_Sprite_izq).
 295+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 296+ 869C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 297+ 869E
 298+ 869E 00 00        	defw 0											; (Posicion_inicio).
 299+ 86A0 00           	db 0											; (Cuad_objeto).
 300+ 86A1
 301+ 86A1 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 302+ 86A5
 303+ 86A5 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 304+ 86A6
 305+ 86A6 00 00        	db 0,0										    ; Variables_de_borrado
 306+ 86A8 00 00        	defw 0											;	" " " " " " "
 307+ 86AA 00 00        	defw 0											;	" " " " " " "
 308+ 86AC 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 309+ 86B0
 310+ 86B0 00 00        	db 0,0											; Variables_de_pintado
 311+ 86B2 00 00        	defw 0											;	" " " " " " "
 312+ 86B4 00 00        	defw 0											;	" " " " " " "
 313+ 86B6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 314+ 86BA
 315+ 86BA 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 316+ 86BC
 317+ 86BC 00           	db 0											; (Autoriza_movimiento).
 318+ 86BD 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 318+ 86C1 00 00
 319+ 86C3 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 320+ 86C5 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 321+ 86C7 00           	db 0											; (Cola_de_desplazamiento).
 322+ 86C8
 323+ 86C8 00           	db 0 											; (Columnas).
 324+ 86C9 00 00        	defw 0											; (Limite_horizontal).
 325+ 86CB 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 326+ 86CE
 327+ 86CE              ; ---------- ---------- ---------- ---------- ----------
 328+ 86CE
 329+ 86CE 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 330+ 86D0 00 00        	defw 0											; (Posicion_actual).
 331+ 86D2 00 00        	defw 0 											; (Puntero_objeto).
 332+ 86D4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 333+ 86D7
 334+ 86D7 00           	db %00000000 									; (Attr).
 335+ 86D8
 336+ 86D8 00 00        	defw 0											; (Indice_Sprite_der).
 337+ 86DA 00 00        	defw 0											; (Indice_Sprite_izq).
 338+ 86DC 00 00        	defw 0											; (Puntero_DESPLZ_der).
 339+ 86DE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 340+ 86E0
 341+ 86E0 00 00        	defw 0											; (Posicion_inicio).
 342+ 86E2 00           	db 0											; (Cuad_objeto).
 343+ 86E3
 344+ 86E3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 345+ 86E7
 346+ 86E7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 347+ 86E8
 348+ 86E8 00 00        	db 0,0										    ; Variables_de_borrado
 349+ 86EA 00 00        	defw 0											;	" " " " " " "
 350+ 86EC 00 00        	defw 0											;	" " " " " " "
 351+ 86EE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 352+ 86F2
 353+ 86F2 00 00        	db 0,0											; Variables_de_pintado
 354+ 86F4 00 00        	defw 0											;	" " " " " " "
 355+ 86F6 00 00        	defw 0											;	" " " " " " "
 356+ 86F8 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 357+ 86FC
 358+ 86FC 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 359+ 86FE
 360+ 86FE 00           	db 0											; (Autoriza_movimiento).
 361+ 86FF 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 361+ 8703 00 00
 362+ 8705 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 363+ 8707 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 364+ 8709 00           	db 0											; (Cola_de_desplazamiento).
 365+ 870A
 366+ 870A 00           	db 0 											; (Columnas).
 367+ 870B 00 00        	defw 0											; (Limite_horizontal).
 368+ 870D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 369+ 8710
 370+ 8710              ; ---------- ---------- ---------- ---------- ----------
 371+ 8710
 372+ 8710 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 373+ 8712 00 00        	defw 0											; (Posicion_actual).
 374+ 8714 00 00        	defw 0 											; (Puntero_objeto).
 375+ 8716 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 376+ 8719
 377+ 8719 00           	db %00000000 									; (Attr).
 378+ 871A
 379+ 871A 00 00        	defw 0											; (Indice_Sprite_der).
 380+ 871C 00 00        	defw 0											; (Indice_Sprite_izq).
 381+ 871E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 382+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 383+ 8722
 384+ 8722 00 00        	defw 0											; (Posicion_inicio).
 385+ 8724 00           	db 0											; (Cuad_objeto).
 386+ 8725
 387+ 8725 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 388+ 8729
 389+ 8729 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 390+ 872A
 391+ 872A 00 00        	db 0,0										    ; Variables_de_borrado
 392+ 872C 00 00        	defw 0											;	" " " " " " "
 393+ 872E 00 00        	defw 0											;	" " " " " " "
 394+ 8730 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 395+ 8734
 396+ 8734 00 00        	db 0,0											; Variables_de_pintado
 397+ 8736 00 00        	defw 0											;	" " " " " " "
 398+ 8738 00 00        	defw 0											;	" " " " " " "
 399+ 873A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 400+ 873E
 401+ 873E 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 402+ 8740
 403+ 8740 00           	db 0											; (Autoriza_movimiento).
 404+ 8741 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 404+ 8745 00 00
 405+ 8747 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 406+ 8749 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 407+ 874B 00           	db 0											; (Cola_de_desplazamiento).
 408+ 874C
 409+ 874C 00           	db 0 											; (Columnas).
 410+ 874D 00 00        	defw 0											; (Limite_horizontal).
 411+ 874F 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 412+ 8752
 413+ 8752              ; ---------- ---------- ---------- ---------- ----------
 414+ 8752
 415+ 8752 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 416+ 8754 00 00        	defw 0											; (Posicion_actual).
 417+ 8756 00 00        	defw 0 											; (Puntero_objeto).
 418+ 8758 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 419+ 875B
 420+ 875B 00           	db %00000000 									; (Attr).
 421+ 875C
 422+ 875C 00 00        	defw 0											; (Indice_Sprite_der).
 423+ 875E 00 00        	defw 0											; (Indice_Sprite_izq).
 424+ 8760 00 00        	defw 0											; (Puntero_DESPLZ_der).
 425+ 8762 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 426+ 8764
 427+ 8764 00 00        	defw 0											; (Posicion_inicio).
 428+ 8766 00           	db 0											; (Cuad_objeto).
 429+ 8767
 430+ 8767 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 431+ 876B
 432+ 876B 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 433+ 876C
 434+ 876C 00 00        	db 0,0										    ; Variables_de_borrado
 435+ 876E 00 00        	defw 0											;	" " " " " " "
 436+ 8770 00 00        	defw 0											;	" " " " " " "
 437+ 8772 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 438+ 8776
 439+ 8776 00 00        	db 0,0											; Variables_de_pintado
 440+ 8778 00 00        	defw 0											;	" " " " " " "
 441+ 877A 00 00        	defw 0											;	" " " " " " "
 442+ 877C 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 443+ 8780
 444+ 8780 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 445+ 8782
 446+ 8782 00           	db 0											; (Autoriza_movimiento).
 447+ 8783 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 447+ 8787 00 00
 448+ 8789 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 449+ 878B 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 450+ 878D 00           	db 0											; (Cola_de_desplazamiento).
 451+ 878E
 452+ 878E 00           	db 0 											; (Columnas).
 453+ 878F 00 00        	defw 0											; (Limite_horizontal).
 454+ 8791 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 455+ 8794
 456+ 8794              ; ---------- ---------- ---------- ---------- ----------
 457+ 8794
 458+ 8794 00 00        Caja_8 db 0,0										; (Filas) / (Columns).
 459+ 8796 00 00        	defw 0											; (Posicion_actual).
 460+ 8798 00 00        	defw 0 											; (Puntero_objeto).
 461+ 879A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 462+ 879D
 463+ 879D 00           	db %00000000 									; (Attr).
 464+ 879E
 465+ 879E 00 00        	defw 0											; (Indice_Sprite_der).
 466+ 87A0 00 00        	defw 0											; (Indice_Sprite_izq).
 467+ 87A2 00 00        	defw 0											; (Puntero_DESPLZ_der).
 468+ 87A4 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 469+ 87A6
 470+ 87A6 00 00        	defw 0											; (Posicion_inicio).
 471+ 87A8 00           	db 0											; (Cuad_objeto).
 472+ 87A9
 473+ 87A9 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 474+ 87AD
 475+ 87AD 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 476+ 87AE
 477+ 87AE 00 00        	db 0,0										    ; Variables_de_borrado
 478+ 87B0 00 00        	defw 0											;	" " " " " " "
 479+ 87B2 00 00        	defw 0											;	" " " " " " "
 480+ 87B4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 481+ 87B8
 482+ 87B8 00 00        	db 0,0											; Variables_de_pintado
 483+ 87BA 00 00        	defw 0											;	" " " " " " "
 484+ 87BC 00 00        	defw 0											;	" " " " " " "
 485+ 87BE 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 486+ 87C2
 487+ 87C2 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 488+ 87C4
 489+ 87C4 00           	db 0											; (Autoriza_movimiento).
 490+ 87C5 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 490+ 87C9 00 00
 491+ 87CB 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 492+ 87CD 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 493+ 87CF 00           	db 0											; (Cola_de_desplazamiento).
 494+ 87D0
 495+ 87D0 00           	db 0 											; (Columnas).
 496+ 87D1 00 00        	defw 0											; (Limite_horizontal).
 497+ 87D3 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 498+ 87D6
 499+ 87D6              ; ---------- ---------- ---------- ---------- ----------
 500+ 87D6
 501+ 87D6 00 00        Caja_9 db 0,0										; (Filas) / (Columns).
 502+ 87D8 00 00        	defw 0											; (Posicion_actual).
 503+ 87DA 00 00        	defw 0 											; (Puntero_objeto).
 504+ 87DC 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 505+ 87DF
 506+ 87DF 00           	db %00000000 									; (Attr).
 507+ 87E0
 508+ 87E0 00 00        	defw 0											; (Indice_Sprite_der).
 509+ 87E2 00 00        	defw 0											; (Indice_Sprite_izq).
 510+ 87E4 00 00        	defw 0											; (Puntero_DESPLZ_der).
 511+ 87E6 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 512+ 87E8
 513+ 87E8 00 00        	defw 0											; (Posicion_inicio).
 514+ 87EA 00           	db 0											; (Cuad_objeto).
 515+ 87EB
 516+ 87EB 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 517+ 87EF
 518+ 87EF 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 519+ 87F0
 520+ 87F0 00 00        	db 0,0										    ; Variables_de_borrado
 521+ 87F2 00 00        	defw 0											;	" " " " " " "
 522+ 87F4 00 00        	defw 0											;	" " " " " " "
 523+ 87F6 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 524+ 87FA
 525+ 87FA 00 00        	db 0,0											; Variables_de_pintado
 526+ 87FC 00 00        	defw 0											;	" " " " " " "
 527+ 87FE 00 00        	defw 0											;	" " " " " " "
 528+ 8800 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 529+ 8804
 530+ 8804 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 531+ 8806
 532+ 8806 00           	db 0											; (Autoriza_movimiento).
 533+ 8807 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 533+ 880B 00 00
 534+ 880D 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 535+ 880F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 536+ 8811 00           	db 0											; (Cola_de_desplazamiento).
 537+ 8812
 538+ 8812 00           	db 0 											; (Columnas).
 539+ 8813 00 00        	defw 0											; (Limite_horizontal).
 540+ 8815 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 541+ 8818
 542+ 8818              ; ---------- ---------- ---------- ---------- ----------
 543+ 8818
 544+ 8818 00 00        Caja_10 db 0,0										; (Filas) / (Columns).
 545+ 881A 00 00        	defw 0											; (Posicion_actual).
 546+ 881C 00 00        	defw 0 											; (Puntero_objeto).
 547+ 881E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 548+ 8821
 549+ 8821 00           	db %00000000 									; (Attr).
 550+ 8822
 551+ 8822 00 00        	defw 0											; (Indice_Sprite_der).
 552+ 8824 00 00        	defw 0											; (Indice_Sprite_izq).
 553+ 8826 00 00        	defw 0											; (Puntero_DESPLZ_der).
 554+ 8828 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 555+ 882A
 556+ 882A 00 00        	defw 0											; (Posicion_inicio).
 557+ 882C 00           	db 0											; (Cuad_objeto).
 558+ 882D
 559+ 882D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 560+ 8831
 561+ 8831 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 562+ 8832
 563+ 8832 00 00        	db 0,0										    ; Variables_de_borrado
 564+ 8834 00 00        	defw 0											;	" " " " " " "
 565+ 8836 00 00        	defw 0											;	" " " " " " "
 566+ 8838 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 567+ 883C
 568+ 883C 00 00        	db 0,0											; Variables_de_pintado
 569+ 883E 00 00        	defw 0											;	" " " " " " "
 570+ 8840 00 00        	defw 0											;	" " " " " " "
 571+ 8842 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 572+ 8846
 573+ 8846 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 574+ 8848
 575+ 8848 00           	db 0											; (Autoriza_movimiento).
 576+ 8849 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 576+ 884D 00 00
 577+ 884F 00 00        	db 0,0											; (Incrementa_puntero) / (Repetimos_desplazamiento).
 578+ 8851 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 579+ 8853 00           	db 0											; (Cola_de_desplazamiento).
 580+ 8854
 581+ 8854 00           	db 0 											; (Columnas).
 582+ 8855 00 00        	defw 0											; (Limite_horizontal).
 583+ 8857 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 584+ 885A
 585+ 885A              ; -------------------------------------------------------------------------------------
 586+ 885A              ;
 587+ 885A              ;	20/05/23
 588+ 885A              ;
 589+ 885A              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 590+ 885A              ;
 591+ 885A              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 592+ 885A              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 593+ 885A              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 594+ 885A              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 595+ 885A
 596+ 885A              Indice_de_entidades
 597+ 885A
 598+ 885A 64 88        	defw Entidad_1
 599+ 885C 74 88        	defw Entidad_2
 600+ 885E 84 88        	defw Entidad_3
 601+ 8860 94 88        	defw Entidad_4
 602+ 8862 A4 88        	defw Entidad_5
 603+ 8864
 604+ 8864              ;	BADSAT, (Satélite malvado).
 605+ 8864
 606+ 8864 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 607+ 8866 04           	db %00000100									; (Attr).
 608+ 8867 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 609+ 8869 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 610+ 886B 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 611+ 886D 01           	db 1											; (Cuad_objeto).
 612+ 886E 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 613+ 8872 B5 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 614+ 8874
 615+ 8874 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 616+ 8876 02           	db %00000010									; (Attr).
 617+ 8877 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 618+ 8879 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 619+ 887B 40 50        	defw $5040                                      ; (Posicion_inicio).
 620+ 887D 01           	db 1											; (Cuad_objeto).
 621+ 887E 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 622+ 8882 B5 9C        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 623+ 8884
 624+ 8884 02 02        Entidad_3 db 2,2		                     		; (Filas) / (Columns).
 625+ 8886 04           	db %00000100									; (Attr).
 626+ 8887 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 627+ 8889 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 628+ 888B A0 47        	defw $47a0                                      ; (Posicion_inicio).
 629+ 888D 01           	db 1											; (Cuad_objeto).
 630+ 888E 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 631+ 8892 B5 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 632+ 8894
 633+ 8894 02 02        Entidad_4 db 2,2		                     		; (Filas) / (Columns).
 634+ 8896 01           	db %00000001									; (Attr).
 635+ 8897 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 636+ 8899 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 637+ 889B BF 47        	defw $47bf                                      ; (Posicion_inicio).
 638+ 889D 01           	db 1											; (Cuad_objeto).
 639+ 889E 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 640+ 88A2 B5 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 641+ 88A4
 642+ 88A4 02 02        Entidad_5 db 2,2		                     		; (Filas) / (Columns).
 643+ 88A6 01           	db %00000001									; (Attr).
 644+ 88A7 A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 645+ 88A9 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 646+ 88AB 07 40        	defw $4007                                      ; (Posicion_inicio).
 647+ 88AD 01           	db 1											; (Cuad_objeto).
 648+ 88AE 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 649+ 88B2 B5 9C        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 650+ 88B4
# file closed: Cajas_y_disparos.asm
  28  88B4              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 88B4              ; 13/05/23
   2+ 88B4
   3+ 88B4              Indice_de_niveles
   4+ 88B4
   5+ 88B4 C2 88        	defw Nivel_1
   6+ 88B6 C4 88        	defw Nivel_2
   7+ 88B8 D1 88        	defw Nivel_3
   8+ 88BA E1 88        	defw Nivel_4
   9+ 88BC F3 88        	defw Nivel_5
  10+ 88BE
  11+ 88BE              ;	...
  12+ 88BE              ;	...
  13+ 88BE              ;	+ Niveles ...
  14+ 88BE
  15+ 88BE 00 00        	defw 0
  16+ 88C0 00 00        	defw 0
  17+ 88C2
  18+ 88C2 01           Nivel_1 db 1	                                ; Nº de entidades.
  19+ 88C3 01           	db 1										; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  20+ 88C4 0C           Nivel_2 db 12									; Nº de entidades.
  21+ 88C5 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  21+ 88C9 01 02
  22+ 88CB 02 01 01 01  	db 2,1,1,1,1,2
  22+ 88CF 01 02
  23+ 88D1 0F           Nivel_3 db 15									; Nº de entidades.
  24+ 88D2 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  24+ 88D6 01
  25+ 88D7 03 01 01 01  	db 3,1,1,1,1
  25+ 88DB 01
  26+ 88DC 03 01 01 01  	db 3,1,1,1,1
  26+ 88E0 01
  27+ 88E1 11           Nivel_4 db 17									; Nº de entidades.
  28+ 88E2 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  28+ 88E6 01
  29+ 88E7 04 01 01 01  	db 4,1,1,1,1
  29+ 88EB 01
  30+ 88EC 04 01 01 01  	db 4,1,1,1,1
  30+ 88F0 01
  31+ 88F1 02 03        	db 2,3
  32+ 88F3 14           Nivel_5 db 20									; Nº de entidades.
  33+ 88F4 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  33+ 88F8 01
  34+ 88F9 05 01 01 01  	db 5,1,1,1,1
  34+ 88FD 01
  35+ 88FE 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 5 cajas de DRAW.
  35+ 8902 01
  36+ 8903 05 01 01 01  	db 5,1,1,1,1
  36+ 8907 01
  37+ 8908
  38+ 8908              ;---------------------------------------------------------------------------------------------------------------
  39+ 8908              ;
  40+ 8908              ;   21/5/23
  41+ 8908              ;
  42+ 8908              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  43+ 8908              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  44+ 8908              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  45+ 8908              ;	_en la caja DRAW correspondiente.
  46+ 8908              ;
  47+ 8908              ;	MODIFICA: HL,DE y A.
  48+ 8908              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  49+ 8908
  50+ 8908              Inicializa_Punteros_de_nivel
  51+ 8908
  52+ 8908 21 B4 88     	ld hl,Indice_de_niveles
  53+ 890B 22 36 8A     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  54+ 890E CD 28 8D     	call Extrae_address
  55+ 8911 7E           	ld a,(hl)
  56+ 8912 32 09 8A     	ld (Numero_de_entidades),a
  57+ 8915 23           	inc hl
  58+ 8916 22 38 8A     	ld (Datos_de_nivel),hl
  59+ 8919 C9           	ret
  60+ 891A
  61+ 891A              ;---------------------------------------------------------------------------------------------------------------
  62+ 891A              ;
  63+ 891A              ;   13/5/23
  64+ 891A              ;
  65+ 891A              ;	Destruye A,BC,HL,DE
  66+ 891A
  67+ 891A              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  68+ 891A              ;	_del juego.
  69+ 891A
  70+ 891A              Prepara_cajas
  71+ 891A
  72+ 891A              ; Preparamos los punteros de las cajas.
  73+ 891A
  74+ 891A 21 6C 85     	ld hl,Indice_de_cajas
  75+ 891D CD 28 8D     	call Extrae_address
  76+ 8920 CD 5D 89     	call Avanza_caja
  77+ 8923
  78+ 8923 CD A1 89     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8926
  80+ 8926 2A 38 8A     	ld hl,(Datos_de_nivel)
  81+ 8929
  82+ 8929              ; HL está en los datos del nivel correspondiente.
  83+ 8929              ; B actuará como contador de cajas.
  84+ 8929
  85+ 8929 C5           1 push bc
  86+ 892A
  87+ 892A 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  88+ 892B CD 4E 89     	call PreparaBC
  89+ 892E
  90+ 892E 21 5A 88     	ld hl,Indice_de_entidades
  91+ 8931 CD 56 89     	call SBC_HL_con_BC_y_Extrae
  92+ 8934 22 0F 8A         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  93+ 8937
  94+ 8937 CD 67 89     	call Datos_de_entidad_a_caja
  95+ 893A
  96+ 893A 2A 07 8A     	ld hl,(Indice_restore_caja)
  97+ 893D CD 28 8D     	call Extrae_address
  98+ 8940 CD 5D 89     	call Avanza_caja
  99+ 8943
 100+ 8943 2A 38 8A     	ld hl,(Datos_de_nivel)
 101+ 8946 23           	inc hl
 102+ 8947 22 38 8A     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 103+ 894A
 104+ 894A C1           	pop bc
 105+ 894B 10 DC        	djnz 1B
 106+ 894D C9           	ret
 107+ 894E
 108+ 894E CB 27        PreparaBC sla a
 109+ 8950 D6 02        	sub 2										; [(Nivel)*2]-2.
 110+ 8952 4F           	ld c,a
 111+ 8953 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 112+ 8955 C9           	ret
 113+ 8956
 114+ 8956 A7           SBC_HL_con_BC_y_Extrae and a
 115+ 8957 ED 4A        	adc hl,bc
 116+ 8959 CD 28 8D     	call Extrae_address
 117+ 895C C9           	ret
 118+ 895D
 119+ 895D 22 03 8A     Avanza_caja	ld (Puntero_store_caja),hl
 120+ 8960 13           	inc de
 121+ 8961 13           	inc de
 122+ 8962 EB           	ex de,hl
 123+ 8963 22 07 8A     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 124+ 8966 C9           	ret
 125+ 8967
 126+ 8967              Datos_de_entidad_a_caja
 127+ 8967
 128+ 8967              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 129+ 8967
 130+ 8967
 131+ 8967 ED 5B 03 8A  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 132+ 896B
 133+ 896B 01 02 00     	ld bc,2
 134+ 896E ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 135+ 8970
 136+ 8970 01 07 00     	ld bc,7
 137+ 8973 CD 9B 89     	call Situa_DE
 138+ 8976
 139+ 8976 01 05 00     	ld bc,5
 140+ 8979 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 141+ 897B
 142+ 897B 01 04 00     	ld bc,4
 143+ 897E CD 9B 89     	call Situa_DE
 144+ 8981
 145+ 8981 01 07 00     	ld bc,7
 146+ 8984 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 147+ 8986
 148+ 8986 01 18 00     	ld bc,24
 149+ 8989 CD 9B 89     	call Situa_DE
 150+ 898C
 151+ 898C 01 02 00     	ld bc,2
 152+ 898F ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 153+ 8991
 154+ 8991              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 155+ 8991              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 156+ 8991
 157+ 8991 01 0E 00     	ld bc,14									; *****
 158+ 8994 CD 9B 89     	call Situa_DE
 159+ 8997
 160+ 8997 3E 03        	ld a,3
 161+ 8999 12           	ld (de),a 									; Vuelco (Frames_explosion).
 162+ 899A
 163+ 899A C9           	ret
 164+ 899B
 165+ 899B EB           Situa_DE ex de,hl
 166+ 899C A7           	and a
 167+ 899D ED 4A        	adc hl,bc
 168+ 899F EB           	ex de,hl
 169+ 89A0 C9           	ret
 170+ 89A1
 171+ 89A1              ;---------------------------------------------------------------------------------------------------------------
 172+ 89A1              ;
 173+ 89A1              ;	21/5/23
 174+ 89A1              ;
 175+ 89A1              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 176+ 89A1              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 177+ 89A1              ;
 178+ 89A1              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 179+ 89A1              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 180+ 89A1              ;	_ total de entidades que contiene (Numero_de_entidades).
 181+ 89A1              ;
 182+ 89A1              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 183+ 89A1              ;	MODIFICA: A y B.
 184+ 89A1              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 185+ 89A1
 186+ 89A1              Admin_num_entidades
 187+ 89A1
 188+ 89A1              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 189+ 89A1
 190+ 89A1 3A 09 8A     	ld a,(Numero_de_entidades)
 191+ 89A4 A7           	and a
 192+ 89A5              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 193+ 89A5              ;	jr z,$
 194+ 89A5              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 195+ 89A5
 196+ 89A5 20 03        	jr nz,3F
 197+ 89A7
 198+ 89A7              ;! RESET para pruebas. Omitir esta línea en modo normal.
 199+ 89A7
 200+ 89A7 CD 08 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 201+ 89AA
 202+ 89AA
 203+ 89AA 3A 09 8A     3 ld a,(Numero_de_entidades)
 204+ 89AD FE 0A        	cp 10
 205+ 89AF 38 08        	jr c,1F
 206+ 89B1
 207+ 89B1              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 208+ 89B1              ; Actualizamos variables.
 209+ 89B1
 210+ 89B1 3E 0A        	ld a,10
 211+ 89B3 32 0A 8A     	ld (Numero_parcial_de_entidades),a
 212+ 89B6 47           	ld b,a
 213+ 89B7 18 04        	jr 2F
 214+ 89B9
 215+ 89B9              ; El nº total de entidades no llena las 5 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 216+ 89B9              ; (Numero_de_entidades)="0".
 217+ 89B9
 218+ 89B9 32 0A 8A     1 ld (Numero_parcial_de_entidades),a
 219+ 89BC 47           	ld b,a
 220+ 89BD C9           2 ret
# file closed: Niveles.asm
  29  89BE
  30  89BE              ; ******************************************************************************************************************************************************************************************
  31  89BE              ; Constantes.
  32  89BE              ; ******************************************************************************************************************************************************************************************
  33  89BE              ;
  34  89BE              ; 25/05/23
  35  89BE              ;
  36  89BE              ; Constantes generales.
  37  89BE              ;
  38  89BE
  39  89BE              Sprite_vacio equ $f000
  40  89BE              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  41  89BE              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  42  89BE              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  43  89BE              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  44  89BE
  45  89BE              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
  46  89BE              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  47  89BE              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 10 entidades + AMADEUS.
  48  89BE              Album_de_fotos_disparos equ $7085						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  49  89BE              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  50  89BE              ;                               				        ; De momento situamos este almacén en $7060.
  51  89BE
  52  89BE              ; ******************************************************************************************************************************************************************************************
  53  89BE              ; Variables.
  54  89BE              ; ******************************************************************************************************************************************************************************************
  55  89BE              ;
  56  89BE              ; 01/07/23
  57  89BE              ;
  58  89BE              ; Variables de DRAW. (Motor principal).
  59  89BE              ;
  60  89BE              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
  61  89BE
  62  89BE 00           Filas db 0												; Filas. [DRAW]
  63  89BF 00           Columns db 0  											; Nº de columnas. [DRAW]
  64  89C0 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
  65  89C2 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
  66  89C4 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
  67  89C5 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
  68  89C6
  69  89C6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
  70  89C6
  71  89C6 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
  72  89C7              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
  73  89C7              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
  74  89C7 00           Attr db 0												; Atributos de la entidad:
  75  89C8
  76  89C8              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  77  89C8              ;
  78  89C8              ;	COLORES: 0 ..... NEGRO
  79  89C8              ;    		 1 ..... AZUL
  80  89C8              ; 			 2 ..... ROJO
  81  89C8              ;			 3 ..... MAGENTA
  82  89C8              ; 			 4 ..... VERDE
  83  89C8              ; 			 5 ..... CIAN
  84  89C8              ;			 6 ..... AMARILLO
  85  89C8              ; 			 7 ..... BLANCO
  86  89C8
  87  89C8 00 00        Indice_Sprite_der defw 0
  88  89CA 00 00        Indice_Sprite_izq defw 0
  89  89CC 00 00        Puntero_DESPLZ_der defw 0
  90  89CE 00 00        Puntero_DESPLZ_izq defw 0
  91  89D0
  92  89D0 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
  93  89D2 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
  94  89D3
  95  89D3              ; Variables de objeto. (Características).
  96  89D3
  97  89D3 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
  98  89D4 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
  99  89D5 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 100  89D6 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 101  89D7
 102  89D7 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 103  89D8              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 104  89D8              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 105  89D8
 106  89D8 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 107  89DA 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 108  89DC 00 00        	defw 0
 109  89DE 00 00 00 00  	db 0,0,0,0
 110  89E2
 111  89E2 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 112  89E4 00 00        	defw 0
 113  89E6 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 114  89E8 00 00 00 00  	db 0,0,0,0
 115  89EC
 116  89EC              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 117  89EC
 118  89EC 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 119  89ED              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 120  89ED              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 121  89ED              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 122  89ED              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 123  89ED              ;
 124  89ED              ; 														DESCRIPCIÖN:
 125  89ED              ;
 126  89ED              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 127  89ED              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 128  89ED              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 129  89ED              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 130  89ED              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 131  89ED              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 132  89ED              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 133  89ED              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 134  89ED              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 135  89ED              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 136  89ED              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 137  89ED              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 138  89ED              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 139  89ED              ;
 140  89ED              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 141  89ED              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 142  89ED              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 143  89ED
 144  89ED 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 145  89EE
 146  89EE              ; Movimiento. ------------------------------------------------------------------------------------------------------
 147  89EE
 148  89EE 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 149  89EF 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 150  89F1 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 151  89F3 00 00        Puntero_indice_mov_bucle defw 0							;
 152  89F5              ;
 153  89F5              ;
 154  89F5 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 155  89F6              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 156  89F6              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 157  89F6 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 158  89F7              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 159  89F7 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 160  89F8 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 161  89F9 00           Cola_de_desplazamiento db 0								; Este byte indica:
 162  89FA              ;
 163  89FA              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 164  89FA              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 165  89FA              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 166  89FA              ;
 167  89FA              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 168  89FA              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 169  89FA              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 170  89FA              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 171  89FA              ;
 172  89FA              ;														;	"$ff" ..... Bucle infinito de repetición.
 173  89FA              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 174  89FA              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 175  89FA
 176  89FA
 177  89FA              ; Variables de funcionamiento. [DRAW].
 178  89FA
 179  89FA 00           Columnas db 0
 180  89FB 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 181  89FD              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 182  89FD 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 183  89FE
 184  89FE              ; variables de control general.
 185  89FE
 186  89FE 00           Ctrl_2 db 0
 187  89FF              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 188  89FF              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 189  89FF              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 190  89FF              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 191  89FF              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 192  89FF              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 193  89FF              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 194  89FF              ;
 195  89FF              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 196  89FF              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 197  89FF              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 198  89FF              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 199  89FF              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 200  89FF
 201  89FF 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 202  8A00
 203  8A00              ;! 66 Bytes por entidad.
 204  8A00
 205  8A00              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 206  8A00              ;					         		---------;      ;---------
 207  8A00
 208  8A00
 209  8A00              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 210  8A00
 211  8A00 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 212  8A01
 213  8A01              ;														DESCRIPCIÓN:
 214  8A01              ;
 215  8A01              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 216  8A01              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 217  8A01              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 218  8A01              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 219  8A01              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 220  8A01              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 221  8A01              ;														BIT 3, Recarga de nueva oleada.
 222  8A01              ;														BIT 4, Recarga de nueva oleada.
 223  8A01
 224  8A01 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 225  8A03              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 226  8A03              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 227  8A03              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 228  8A03
 229  8A03
 230  8A03
 231  8A03              ; Gestión de ENTIDADES y CAJAS.
 232  8A03
 233  8A03 00 00        Puntero_store_caja defw 0
 234  8A05 00 00        Puntero_restore_caja defw 0
 235  8A07 00 00        Indice_restore_caja defw 0
 236  8A09 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 237  8A0A 00           Numero_parcial_de_entidades db 0
 238  8A0B 00           Entidades_en_curso db 0									; ..... ..... .....
 239  8A0C 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 240  8A0D              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 241  8A0D              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 242  8A0D              ;														; _ (Numero_de_malotes)="0".
 243  8A0D 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 244  8A0F 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 245  8A11              ;														; _ puntero (Indice_entidades).
 246  8A11
 247  8A11
 248  8A11              ;---------------------------------------------------------------------------------------------------------------
 249  8A11              ;
 250  8A11              ; Sirven para PINTAR.
 251  8A11
 252  8A11 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 253  8A13              ;														; _variable para almacenar lo posición del puntero_
 254  8A13              ; 														; _de pila, SP.
 255  8A13 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 256  8A15              ;														; La utiliza la rutina [Extrae_foto_registros].
 257  8A15 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
 258  8A17              ;														; _el snapshot de los registros de la siguiente entidad.
 259  8A17              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 260  8A17 85 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
 261  8A19              ;														; _el snapshot de los registros del siguiente disparo.
 262  8A19              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 263  8A19
 264  8A19              ;---------------------------------------------------------------------------------------------------------------
 265  8A19
 266  8A19              ; Gestión de Disparos.
 267  8A19
 268  8A19 00           Numero_de_disparotes db 0
 269  8A1A 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 270  8A1C 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 271  8A1E 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 272  8A1F              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 273  8A1F              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 274  8A1F 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 275  8A21              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 276  8A21              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 277  8A21              ;														; _produzca colisión.
 278  8A21 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 279  8A23              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 280  8A23 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 281  8A26              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 282  8A26 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 283  8A29              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 284  8A29 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 285  8A2B
 286  8A2B              ;---------------------------------------------------------------------------------------------------------------
 287  8A2B
 288  8A2B              ; Relojes y temporizaciones.
 289  8A2B
 290  8A2B 00           Contador_de_frames db 0
 291  8A2C 04           Clock_explosion db 4
 292  8A2D 1E           Clock_Entidades_en_curso db 30
 293  8A2E 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 294  8A2F              ;														; Repite la oleada de entidades.
 295  8A2F 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 296  8A30 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 297  8A31 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 298  8A32
 299  8A32 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 300  8A33 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 301  8A34 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 302  8A35
 303  8A35              ;---------------------------------------------------------------------------------------------------------------
 304  8A35
 305  8A35              ; Gestión de NIVELES.
 306  8A35
 307  8A35 00           Nivel db 0												; Nivel actual del juego.
 308  8A36 00 00        Puntero_indice_NIVELES defw 0
 309  8A38 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 310  8A3A              ; 														; _ que definen el NIVEL.
 311  8A3A              ; Y todo comienza aquí .....
 312  8A3A              ;
 313  8A3A              ; Rutina principal *************************************************************************************************************************************************************************
 314  8A3A              ;
 315  8A3A              ;	14/11/22
 316  8A3A
 317  8A3A              START
 318  8A3A
 319  8A3A 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 320  8A3D 3E A0        	ld a,$a0 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
 321  8A3F ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
 322  8A41 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 323  8A43 F3           	DI
 324  8A44
 325  8A44 3E 07        	ld a,%00000111
 326  8A46 CD F1 98     	call Cls
 327  8A49
 328  8A49              ;	call Pinta_marco
 329  8A49
 330  8A49 CD 08 89     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 331  8A4C
 332  8A4C CD 01 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 333  8A4F
 334  8A4F CD 1A 89     4 call Prepara_cajas 									 ; (Niveles.asm).
 335  8A52
 336  8A52 CD D4 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 337  8A55              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 338  8A55 CD B1 8D     	call Restore_entidad
 339  8A58
 340  8A58 21 0A 8A     	ld hl,Numero_parcial_de_entidades
 341  8A5B 46           	ld b,(hl)
 342  8A5C 04           	inc b
 343  8A5D 05           	dec b
 344  8A5E 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 345  8A60
 346  8A60              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 347  8A60              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 348  8A60              ;	Pintamos el resto de entidades:
 349  8A60
 350  8A60              ;	INICIA ENTIDADES !!!!!
 351  8A60
 352  8A60 C5           1 push bc  												; Guardo el contador de entidades.
 353  8A61
 354  8A61 CD CB 8A     	call Inicia_entidad
 355  8A64
 356  8A64 C1           	pop bc
 357  8A65 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 358  8A67
 359  8A67              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 360  8A67              ; (Esto se dá cuando se inicia una nueva oleada).
 361  8A67
 362  8A67 3A 00 8A     	ld a,(Ctrl_1)
 363  8A6A CB 5F        	bit 3,a
 364  8A6C 20 18        	jr nz,5F											; Loop
 365  8A6E
 366  8A6E              ; 	INICIA AMADEUS !!!!!
 367  8A6E
 368  8A6E CD D8 8D     3 call Restore_Amadeus
 369  8A71 CD 2E 8D     	call Inicia_Puntero_objeto
 370  8A74 CD 37 93     	call Draw
 371  8A77 CD A0 7F     	call Guarda_foto_registros
 372  8A7A 11 84 85     	ld de,Amadeus_db
 373  8A7D CD EA 8D     	call Store_Amadeus
 374  8A80
 375  8A80              ; 	INICIA DISPAROS !!!!!
 376  8A80
 377  8A80 CD EA 8C     	call Inicia_Puntero_Disparo_Entidades
 378  8A83 CD F1 8C     	call Inicia_Puntero_Disparo_Amadeus
 379  8A86
 380  8A86              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 381  8A86
 382  8A86 CD D4 8C     5 call Inicia_punteros_de_cajas
 383  8A89 CD B1 8D     	call Restore_entidad
 384  8A8C
 385  8A8C 3A 00 8A     	ld a,(Ctrl_1)
 386  8A8F CB 5F        	bit 3,a
 387  8A91 28 0A        	jr z,6F
 388  8A93
 389  8A93              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 390  8A93
 391  8A93 21 00 8A     	ld hl,Ctrl_1
 392  8A96 CB 9E        	res 3,(hl)
 393  8A98 CD F8 8C     	call Calcula_numero_de_malotes
 394  8A9B 18 07        	jr 7F
 395  8A9D
 396  8A9D              ; ----------
 397  8A9D
 398  8A9D 3A 0A 8A     6 ld a,(Numero_parcial_de_entidades)
 399  8AA0 3C           	inc a
 400  8AA1 32 0C 8A     	ld (Numero_de_malotes),a
 401  8AA4
 402  8AA4 AF           7 xor a
 403  8AA5 FB           2 ei
 404  8AA6 28 FD        	jr z,2B
 405  8AA8
 406  8AA8 3A 2B 8A     	ld a,(Contador_de_frames)
 407  8AAB 47           	ld b,a
 408  8AAC 3A 2E 8A     	ld a,(Activa_recarga_cajas)
 409  8AAF B8           	cp b
 410  8AB0 28 08        	jr z,8F
 411  8AB2
 412  8AB2 21 00 8A     	ld hl,Ctrl_1
 413  8AB5 CB E6        	set 4,(hl)
 414  8AB7 AF           	xor a
 415  8AB8 18 EB        	jr 2B
 416  8ABA
 417  8ABA 21 00 8A     8 ld hl,Ctrl_1
 418  8ABD CB A6        	res 4,(hl)
 419  8ABF F3           	di
 420  8AC0
 421  8AC0 3A 2B 8A     	ld a,(Contador_de_frames)
 422  8AC3
 423  8AC3              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 424  8AC3              ;! _ IMPREDECIBLE !!!!
 425  8AC3
 426  8AC3 C6 0A        	add 10
 427  8AC5 32 2D 8A     	ld (Clock_Entidades_en_curso),a
 428  8AC8
 429  8AC8 C3 4F 8A     	jp 4B
 430  8ACB
 431  8ACB              ; -----------------------------------------------------------------------------------
 432  8ACB
 433  8ACB CD 2E 8D     Inicia_entidad	call Inicia_Puntero_objeto
 434  8ACE CD 05 99     	call Recompone_posicion_inicio
 435  8AD1 CD 37 93     	call Draw
 436  8AD4 CD A0 7F     	call Guarda_foto_registros
 437  8AD7 CD 76 8D      	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 438  8ADA C9           	ret
 439  8ADB
 440  8ADB              ; -----------------------------------------------------------------------------------
 441  8ADB
 442  8ADB              Frame
 443  8ADB
 444  8ADB              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
 445  8ADB              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
 446  8ADB
 447  8ADB              ; PINTAMOS.
 448  8ADB
 449  8ADB 3E 02            ld a,2
 450  8ADD D3 FE            out ($fe),a
 451  8ADF CD 45 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
 452  8AE2 CD 7E 96     	call Extrae_foto_disparos
 453  8AE5 3E 01            ld a,1
 454  8AE7 D3 FE            out ($fe),a
 455  8AE9
 456  8AE9              ; ----------------------------------------------------------------------
 457  8AE9
 458  8AE9              ; RELOJES.
 459  8AE9
 460  8AE9 21 2B 8A     	ld hl,Contador_de_frames
 461  8AEC 34           	inc (hl)											; 0 - 255
 462  8AED
 463  8AED 3A 2D 8A     	ld a,(Clock_Entidades_en_curso)
 464  8AF0 47           	ld b,a
 465  8AF1 3A 2B 8A     	ld a,(Contador_de_frames)
 466  8AF4 B8           	cp b
 467  8AF5 20 18        	jr nz,13F
 468  8AF7
 469  8AF7 3A 0A 8A     	ld a,(Numero_parcial_de_entidades)
 470  8AFA 47           	ld b,a
 471  8AFB 3A 0B 8A     	ld a,(Entidades_en_curso)
 472  8AFE B8           	cp b
 473  8AFF 28 0E        	jr z,13F
 474  8B01 30 0C        	jr nc,13F
 475  8B03
 476  8B03 3C           	inc a
 477  8B04 32 0B 8A     	ld (Entidades_en_curso),a
 478  8B07
 479  8B07 3A 2D 8A     	ld a,(Clock_Entidades_en_curso)
 480  8B0A
 481  8B0A              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 482  8B0A              ;! _ IMPREDECIBLE !!!!
 483  8B0A
 484  8B0A C6 64        	add 100
 485  8B0C 32 2D 8A     	ld (Clock_Entidades_en_curso),a
 486  8B0F
 487  8B0F              ; Habilita disparos.
 488  8B0F
 489  8B0F 21 2F 8A     13 ld hl,Disparo_Amadeus
 490  8B12 11 31 8A     	ld de,CLOCK_repone_disparo_Amadeus
 491  8B15 CD 17 9F     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 492  8B18
 493  8B18 21 32 8A     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 494  8B1B 11 34 8A     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 495  8B1E CD 17 9F     	call Habilita_disparos
 496  8B21
 497  8B21              ; COLISIONES.
 498  8B21
 499  8B21 CD 19 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 500  8B24
 501  8B24              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 502  8B24              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 503  8B24              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 504  8B24
 505  8B24 AF           	xor a
 506  8B25 32 1E 8A     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 507  8B28
 508  8B28 CD D4 8C     	call Inicia_punteros_de_cajas
 509  8B2B CD B1 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 510  8B2E              ; 														; _ en DRAW.
 511  8B2E 3A BE 89     	ld a,(Filas)
 512  8B31 A7           	and a
 513  8B32 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 514  8B34 CD C3 8D     	call Incrementa_punteros_de_cajas
 515  8B37 18 F2        	jr 12B
 516  8B39
 517  8B39              ; ---------------------------------------------------------------------------------------
 518  8B39
 519  8B39 CD 8A 90     10 call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
 520  8B3C 21 00 70     	ld hl,Album_de_fotos
 521  8B3F 22 15 8A         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
 522  8B42              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
 523  8B42 3A 0A 8A     	ld a,(Numero_parcial_de_entidades)
 524  8B45 47               ld b,a
 525  8B46 A7           	and a
 526  8B47 20 14        	jr nz,2F
 527  8B49
 528  8B49 21 00 8A     	ld hl,Ctrl_1
 529  8B4C CB 66        	bit 4,(hl)
 530  8B4E C2 DA 8B     	jp nz,4F
 531  8B51
 532  8B51 21 00 8A     	ld hl,Ctrl_1
 533  8B54 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 534  8B56
 535  8B56 3A 2B 8A     	ld a,(Contador_de_frames)
 536  8B59 3C           	inc a
 537  8B5A 32 2E 8A     	ld (Activa_recarga_cajas),a
 538  8B5D
 539  8B5D              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 540  8B5D
 541  8B5D 3A 0B 8A     2 ld a,(Entidades_en_curso)
 542  8B60 A7           	and a
 543  8B61 CA DA 8B     	jp z,4F												; Si no hay entidades en curso, RESTORE AMADEUS.
 544  8B64 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 545  8B65
 546  8B65              ; Código que ejecutamos con cada entidad:
 547  8B65              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 548  8B65
 549  8B65 C5           15 push bc 												; Nº de entidades en curso.
 550  8B66
 551  8B66              ; Impacto ???
 552  8B66
 553  8B66 3A D7 89     33 ld a,(Impacto)
 554  8B69 A7           	and a
 555  8B6A 28 2D        	jr z,8F
 556  8B6C
 557  8B6C              ; Hay Impacto en esta entidad.
 558  8B6C
 559  8B6C 21 2C 8A     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 560  8B6F 35           	dec (hl)
 561  8B70 20 62        	jr nz,6F
 562  8B72
 563  8B72              ;! Velocidad de la animación de la explosión.
 564  8B72
 565  8B72 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 566  8B74              ;														; _,(velocidad de la explosión).
 567  8B74 CD 8B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 568  8B77
 569  8B77              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 570  8B77
 571  8B77 3A FE 89     	ld a,(Ctrl_2)
 572  8B7A CB 4F        	bit 1,a
 573  8B7C 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 574  8B7E
 575  8B7E              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 576  8B7E
 577  8B7E 3A C6 89     	ld a,(CTRL_DESPLZ)
 578  8B81 A7           	and a
 579  8B82 20 08        	jr nz,21F
 580  8B84
 581  8B84 21 84 84     	ld hl,Indice_Explosion_2x2-2
 582  8B87 22 CC 89     	ld (Puntero_DESPLZ_der),hl
 583  8B8A 18 06        	jr 22F
 584  8B8C
 585  8B8C 21 EE 83     21 ld hl,Indice_Explosion_2x3-2
 586  8B8F 22 CC 89     	ld (Puntero_DESPLZ_der),hl
 587  8B92
 588  8B92 21 FE 89     22 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 589  8B95 CB CE        	set 1,(hl)
 590  8B97 18 22        	jr 7F
 591  8B99
 592  8B99              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 593  8B99              ; _con las coordenadas de la entidad almacenada en DRAW.
 594  8B99
 595  8B99 3A 00 8A     8 ld a,(Ctrl_1)
 596  8B9C CB 57        	bit 2,a
 597  8B9E 28 1B        	jr z,7F
 598  8BA0
 599  8BA0 2A 21 8A     	ld hl,(Coordenadas_disparo_certero)
 600  8BA3 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 601  8BA4              ;														; E contiene la coordenada_X del disparo.
 602  8BA4 2A C4 89     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 603  8BA7              ;														; H FILA, (Coordenada_y de la entidad).
 604  8BA7 A7           	and a
 605  8BA8 ED 52        	sbc hl,de
 606  8BAA
 607  8BAA CD 50 92     	call Determina_resultado_comparativa
 608  8BAD
 609  8BAD              ;! Debug colisiones
 610  8BAD 78           	ld a,b
 611  8BAE A7           	and a
 612  8BAF              ;	ld a,(Cuad_objeto)
 613  8BAF              ;	inc b
 614  8BAF              ;	dec b
 615  8BAF 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 616  8BB1              ;	jr z,$
 617  8BB1
 618  8BB1              ;! Debug colisiones
 619  8BB1
 620  8BB1              ; ----- ----- -----
 621  8BB1
 622  8BB1 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 623  8BB3 32 D7 89     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 624  8BB6
 625  8BB6 21 00 8A     	ld hl,Ctrl_1
 626  8BB9 CB 96        	res 2,(hl)
 627  8BBB
 628  8BBB CD 0D 8C     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 629  8BBE
 630  8BBE 3A EC 89     	ld a,(Ctrl_0)
 631  8BC1 CB 67        	bit 4,a
 632  8BC3 28 0F        	jr z,6F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 633  8BC5
 634  8BC5              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 635  8BC5              ; [[[
 636  8BC5 CD 4C 8E     	call Detecta_disparo_entidad
 637  8BC8              ; ]]]
 638  8BC8 CD 9B 8C     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 639  8BCB
 640  8BCB 21 EC 89     	ld hl,Ctrl_0
 641  8BCE CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 642  8BD0 AF           	xor a
 643  8BD1 32 ED 89     	ld (Obj_dibujado),a
 644  8BD4
 645  8BD4
 646  8BD4
 647  8BD4 CD 76 8D     6 call Store_Restore_cajas
 648  8BD7
 649  8BD7 C1           	pop bc
 650  8BD8 10 8B        	djnz 15B
 651  8BDA
 652  8BDA              ; Hemos gestionado todas las Entidades_en_curso, restauramos el limitador.
 653  8BDA
 654  8BDA              ;	ld a,2
 655  8BDA              ;	ld (Limitador_de_entidades_x_frame),a
 656  8BDA
 657  8BDA              ; ------------------------------------
 658  8BDA              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 659  8BDA              ; Hemos gestionado todas las unidades.
 660  8BDA              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 661  8BDA
 662  8BDA              ;	ld hl,Ctrl_1
 663  8BDA              ;	res 2,(hl)
 664  8BDA
 665  8BDA              ; ------------------------------------
 666  8BDA
 667  8BDA              ; Tras la gestión de las entidades, ... AMADEUS.
 668  8BDA
 669  8BDA CD D8 8D     4 call Restore_Amadeus
 670  8BDD
 671  8BDD 3A D7 89     	ld a,(Impacto)
 672  8BE0 A7           	and a
 673  8BE1 20 FE        	jr nz,$
 674  8BE3
 675  8BE3 CD 6C 8C     	call Mov_Amadeus
 676  8BE6
 677  8BE6 3A EC 89     	ld a,(Ctrl_0)
 678  8BE9 CB 67        	bit 4,a
 679  8BEB 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
 680  8BED
 681  8BED CD 9B 8C     	call Guarda_foto_entidad_a_pintar
 682  8BF0
 683  8BF0 21 EC 89     3 ld hl,Ctrl_0
 684  8BF3 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 685  8BF5 AF           	xor a
 686  8BF6 32 ED 89     	ld (Obj_dibujado),a
 687  8BF9
 688  8BF9 11 84 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 689  8BFC CD EA 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 690  8BFF
 691  8BFF CD A8 90     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 692  8C02
 693  8C02              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 694  8C02
 695  8C02 CD 10 8D     	call Calcula_numero_de_disparotes
 696  8C05 CD F8 8C     9 call Calcula_numero_de_malotes
 697  8C08
 698  8C08 3E 04        	ld a,4
 699  8C0A D3 FE        	out ($fe),a
 700  8C0C
 701  8C0C C9           	ret
 702  8C0D
 703  8C0D              ; --------------------------------------------------------------------------------------------------------------
 704  8C0D              ;
 705  8C0D              ;	27/05/23
 706  8C0D
 707  8C0D              Mov_obj
 708  8C0D
 709  8C0D              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
 710  8C0D
 711  8C0D 3A FE 89     	ld a,(Ctrl_2)
 712  8C10 CB 4F        	bit 1,a
 713  8C12 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 714  8C14
 715  8C14              ; Explosión:
 716  8C14
 717  8C14 3A FF 89     	ld a,(Frames_explosion)
 718  8C17 A7           	and a
 719  8C18 20 11        	jr nz,4F
 720  8C1A
 721  8C1A              ; Una alimaña menos!!!!!!!!!1
 722  8C1A
 723  8C1A CD F3 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 724  8C1D 21 0A 8A     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 725  8C20 35           	dec (hl)
 726  8C21 21 0B 8A     	ld hl,Entidades_en_curso
 727  8C24 35           	dec (hl)
 728  8C25 21 09 8A     	ld hl,Numero_de_entidades
 729  8C28 35           	dec (hl)
 730  8C29 18 40        	jr 3F
 731  8C2B
 732  8C2B              ; -----
 733  8C2B
 734  8C2B              ;	`Movemos´ la explosión.
 735  8C2B
 736  8C2B 2A CC 89     4 ld hl,(Puntero_DESPLZ_der)
 737  8C2E 23           	inc hl
 738  8C2F 23           	inc hl
 739  8C30 22 CC 89     	ld (Puntero_DESPLZ_der),hl
 740  8C33 CD 28 8D     	call Extrae_address
 741  8C36 22 C2 89     	ld (Puntero_objeto),hl
 742  8C39
 743  8C39 21 FF 89     	ld hl,Frames_explosion
 744  8C3C 35           	dec (hl)
 745  8C3D
 746  8C3D CD 8B 8C     	call Guarda_foto_entidad_a_borrar
 747  8C40 18 29        	jr 3F
 748  8C42
 749  8C42 AF           2 xor a
 750  8C43 32 ED 89     	ld (Obj_dibujado),a
 751  8C46 32 EC 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 752  8C49              ;														; Necesito restaurarlo, lo utilizaremos para detectar el movimiento_
 753  8C49              ; 														; _de la entidad.
 754  8C49 CD A5 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
 755  8C4C              ;														; Obj_dibujado="0".
 756  8C4C              ; Movemos Entidades malignas.
 757  8C4C
 758  8C4C              ;	ld a,(Autoriza_movimiento)							; Salimos de la rutina si no estamos autorizados_
 759  8C4C              ;	and a 												; _a movernos. (Limitador_de_entidades).
 760  8C4C              ;	ret z
 761  8C4C
 762  8C4C CD C5 9D     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 763  8C4F
 764  8C4F 3A EC 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 765  8C52 CB 67        	bit 4,a
 766  8C54 C8           	ret z
 767  8C55
 768  8C55              ; Ha habido desplazamiento de la entidad maligna.
 769  8C55              ; Ha llegado a zona de AMADEUS ???
 770  8C55
 771  8C55 3A C5 89     	ld a,(Coordenada_y)
 772  8C58 FE 14        	cp $14
 773  8C5A D4 D9 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 774  8C5D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 775  8C5D              ; ---------
 776  8C5D
 777  8C5D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 778  8C5F 32 ED 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 779  8C62 CD A5 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 780  8C65 CD BC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 781  8C68 CD 8B 8C     1 call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
 782  8C6B C9           3 ret													; _de la misma.
 783  8C6C
 784  8C6C              ; --------------------------------------------------------------------------------------------------------------
 785  8C6C              ;
 786  8C6C              ;	29/1/23
 787  8C6C
 788  8C6C              Mov_Amadeus
 789  8C6C
 790  8C6C AF           	xor a
 791  8C6D 32 ED 89     	ld (Obj_dibujado),a
 792  8C70 CD A5 8C         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
 793  8C73              ;														; Obj_dibujado="0".
 794  8C73              ; Movemos Amadeus.
 795  8C73
 796  8C73 CD 15 8E     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 797  8C76 3A EC 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 798  8C79 CB 67        	bit 4,a
 799  8C7B C8           	ret z
 800  8C7C
 801  8C7C              ; ---------
 802  8C7C
 803  8C7C 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 804  8C7E 32 ED 89     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 805  8C81 CD A5 8C         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 806  8C84 CD BC 8C         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
 807  8C87 CD 8B 8C     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
 808  8C8A C9           	ret													; _de la nave.
 809  8C8B
 810  8C8B              ; --------------------------------------------------------------------------------------------------------------
 811  8C8B              ;
 812  8C8B              ;	31/01/23
 813  8C8B              ;
 814  8C8B              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 815  8C8B
 816  8C8B              Guarda_foto_entidad_a_borrar
 817  8C8B
 818  8C8B CD 1B 96     	call Prepara_draw
 819  8C8E CD 4B 95     	call calcula_CColumnass
 820  8C91 CD 82 95     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 821  8C94 CD E1 95     	call Define_rutina_de_impresion
 822  8C97 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 823  8C9A C9           	ret
 824  8C9B
 825  8C9B              ; --------------------------------------------------------------------------------------------------------------
 826  8C9B              ;
 827  8C9B              ;	31/01/23
 828  8C9B              ;
 829  8C9B              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 830  8C9B              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 831  8C9B
 832  8C9B              Guarda_foto_entidad_a_pintar
 833  8C9B
 834  8C9B CD C8 8C     	call Repone_pintar
 835  8C9E CD 37 93     	call Draw
 836  8CA1 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 837  8CA4 C9           	ret
 838  8CA5
 839  8CA5              ; --------------------------------------------------------------------------------------------------------------
 840  8CA5              ;
 841  8CA5              ;
 842  8CA5
 843  8CA5 21 BE 89     Prepara_var_pintado_borrado	ld hl,Filas
 844  8CA8 3A ED 89     	ld a,(Obj_dibujado)
 845  8CAB A7           	and a
 846  8CAC 28 05        	jr z,1F
 847  8CAE 11 E2 89     	ld de,Variables_de_pintado
 848  8CB1 18 03        	jr 2F
 849  8CB3 11 D8 89     1 ld de,Variables_de_borrado
 850  8CB6 01 08 00     2 ld bc,8
 851  8CB9 ED B0        	ldir
 852  8CBB C9           	ret
 853  8CBC
 854  8CBC              ; --------------------------------------------------------------------------------------------------------------
 855  8CBC
 856  8CBC 21 D8 89     Repone_borrar ld hl,Variables_de_borrado
 857  8CBF 11 BE 89     	ld de,Filas
 858  8CC2 01 08 00     	ld bc,8
 859  8CC5 ED B0        	ldir
 860  8CC7 C9           	ret
 861  8CC8
 862  8CC8 21 E2 89     Repone_pintar ld hl,Variables_de_pintado
 863  8CCB 11 BE 89     	ld de,Filas
 864  8CCE 01 08 00     	ld bc,8
 865  8CD1 ED B0        	ldir
 866  8CD3 C9           	ret
 867  8CD4
 868  8CD4              ; *************************************************************************************************************************************************************
 869  8CD4              ;
 870  8CD4              ; 8/1/23
 871  8CD4              ;
 872  8CD4              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 873  8CD4              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 874  8CD4              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 875  8CD4
 876  8CD4              ; Destruye HL y DE !!!!!
 877  8CD4
 878  8CD4              Inicia_punteros_de_cajas
 879  8CD4
 880  8CD4 21 6C 85     	ld hl,Indice_de_cajas
 881  8CD7 CD 28 8D         call Extrae_address
 882  8CDA 22 03 8A         ld (Puntero_store_caja),hl
 883  8CDD 21 6E 85     	ld hl,Indice_de_cajas+2
 884  8CE0 22 07 8A     	ld (Indice_restore_caja),hl
 885  8CE3 CD 28 8D     	call Extrae_address
 886  8CE6 22 05 8A     	ld (Puntero_restore_caja),hl
 887  8CE9 C9               ret
 888  8CEA
 889  8CEA              ; *************************************************************************************************************************************************************
 890  8CEA              ;
 891  8CEA              ; 8/1/23
 892  8CEA              ;
 893  8CEA              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
 894  8CEA
 895  8CEA 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
 896  8CED 22 1A 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 897  8CF0 C9           	ret
 898  8CF1 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
 899  8CF4 22 1C 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 900  8CF7 C9           	ret
 901  8CF8
 902  8CF8              ; -------------------------------------------------------------------------------------------------------------
 903  8CF8              ;
 904  8CF8              ; 28/2/23
 905  8CF8              ;
 906  8CF8
 907  8CF8              Calcula_numero_de_malotes
 908  8CF8
 909  8CF8 21 00 70     	ld hl,Album_de_fotos
 910  8CFB EB           	ex de,hl
 911  8CFC 2A 15 8A     	ld hl,(Stack_snapshot)
 912  8CFF
 913  8CFF 06 00        	ld b,0
 914  8D01 7D           	ld a,l
 915  8D02 93           	sub e
 916  8D03 28 07        	jr z,1F
 917  8D05
 918  8D05              ; Nº de malotes no es "0".
 919  8D05
 920  8D05 D6 06        2 sub 6
 921  8D07 04           	inc b
 922  8D08 A7           	and a
 923  8D09 20 FA        	jr nz,2B
 924  8D0B 78           	ld a,b
 925  8D0C
 926  8D0C 32 0C 8A     1 ld (Numero_de_malotes),a
 927  8D0F C9           	ret
 928  8D10
 929  8D10              ; -------------------------------------------------------------------------------------------------------------
 930  8D10              ;
 931  8D10              ; 28/2/23
 932  8D10              ;
 933  8D10
 934  8D10              Calcula_numero_de_disparotes
 935  8D10
 936  8D10 21 85 70     	ld hl,Album_de_fotos_disparos
 937  8D13 EB           	ex de,hl
 938  8D14 2A 17 8A     	ld hl,(Stack_snapshot_disparos)
 939  8D17
 940  8D17 06 00        	ld b,0
 941  8D19 7D           	ld a,l
 942  8D1A 93           	sub e
 943  8D1B 28 07        	jr z,1F
 944  8D1D
 945  8D1D              ; Nº de malotes no es "0".
 946  8D1D
 947  8D1D D6 06        2 sub 6
 948  8D1F 04           	inc b
 949  8D20 A7           	and a
 950  8D21 20 FA        	jr nz,2B
 951  8D23 78           	ld a,b
 952  8D24
 953  8D24 32 19 8A     1 ld (Numero_de_disparotes),a
 954  8D27 C9           	ret
 955  8D28              ; *************************************************************************************************************************************************************
 956  8D28              ;
 957  8D28              ; 20/10/22
 958  8D28              ;
 959  8D28              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
 960  8D28              ;
 961  8D28              ; Destruye el puntero y DE !!!!!
 962  8D28
 963  8D28 5E           Extrae_address ld e,(hl)
 964  8D29 23           	inc hl
 965  8D2A 56           	ld d,(hl)
 966  8D2B 2B           	dec hl
 967  8D2C EB           	ex de,hl
 968  8D2D C9           	ret
 969  8D2E
 970  8D2E              ; *************************************************************************************************************************************************************
 971  8D2E              ;
 972  8D2E              ;	7/2/23
 973  8D2E              ;
 974  8D2E              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 975  8D2E              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
 976  8D2E              ;
 977  8D2E              ;   Destruye HL y BC !!!!!,
 978  8D2E              ;
 979  8D2E              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
 980  8D2E              ;					"0" ..... Izquierda.
 981  8D2E
 982  8D2E              Inicia_Puntero_objeto
 983  8D2E
 984  8D2E 3A D2 89     	ld a,(Cuad_objeto)
 985  8D31 E6 01        	and 1
 986  8D33 F5           	push af
 987  8D34 CC 52 8D     	call z,Inicia_puntero_objeto_izq
 988  8D37 F1           	pop af
 989  8D38 28 2B        	jr z,1F
 990  8D3A CD 3F 8D     	call Inicia_puntero_objeto_der
 991  8D3D 18 26        	jr 1F
 992  8D3F
 993  8D3F              ; Arrancamos desde la parte izquierda de la pantalla.
 994  8D3F              ; Iniciamos (Indice_Sprite_der).
 995  8D3F
 996  8D3F 2A C8 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
 997  8D42 22 CC 89     	ld (Puntero_DESPLZ_der),hl
 998  8D45 CD 28 8D     	call Extrae_address
 999  8D48 22 C2 89     	ld (Puntero_objeto),hl
1000  8D4B
1001  8D4B 2A CA 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1002  8D4E 22 CE 89     	ld (Puntero_DESPLZ_izq),hl
1003  8D51 C9           	ret
1004  8D52
1005  8D52              ; Arrancamos desde la parte derecha de la pantalla.
1006  8D52              ; Iniciamos (Indice_Sprite_izq).
1007  8D52
1008  8D52 2A CA 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1009  8D55 22 CE 89     	ld (Puntero_DESPLZ_izq),hl
1010  8D58 CD 28 8D     	call Extrae_address
1011  8D5B 22 C2 89     	ld (Puntero_objeto),hl
1012  8D5E
1013  8D5E 2A C8 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1014  8D61 22 CC 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1015  8D64 C9           	ret
1016  8D65
1017  8D65              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1018  8D65
1019  8D65 21 40 83     1 ld hl,Amadeus
1020  8D68 ED 4B C2 89  	ld bc,(Puntero_objeto)
1021  8D6C B7 ED 42     	sub hl,bc
1022  8D6F C0           	ret nz
1023  8D70 21 EC 89     	ld hl,Ctrl_0
1024  8D73 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1025  8D75 C9           	ret 												; _de nuestra nave en los extremos.
1026  8D76
1027  8D76              ; *************************************************************************************************************************************************************
1028  8D76              ;
1029  8D76              ;	14/5/23
1030  8D76              ;
1031  8D76              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1032  8D76              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1033  8D76
1034  8D76              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1035  8D76              ;	_de la 2ª y 3ª entidad respectivamente.
1036  8D76
1037  8D76              Store_Restore_cajas
1038  8D76
1039  8D76 E5           	push hl
1040  8D77 D5           	push de
1041  8D78 C5            	push bc
1042  8D79
1043  8D79              ;	STORE !!!!!
1044  8D79              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1045  8D79
1046  8D79 21 BE 89     	ld hl,Filas
1047  8D7C ED 5B 03 8A  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1048  8D80 01 42 00     	ld bc,66
1049  8D83 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1050  8D85
1051  8D85              ; 	Entidad_sospechosa. 20/4/23
1052  8D85
1053  8D85 3A D7 89     	ld a,(Impacto)
1054  8D88 A7           	and a
1055  8D89 28 0C        	jr z,1F
1056  8D8B
1057  8D8B 2A 03 8A     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1058  8D8E 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1059  8D91 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1060  8D92 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1061  8D94 22 1F 8A     	ld (Entidad_sospechosa_de_colision),hl
1062  8D97
1063  8D97              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1064  8D97
1065  8D97 2A 05 8A     1 ld hl,(Puntero_restore_caja)
1066  8D9A 7E           	ld a,(hl)
1067  8D9B A7           	and a
1068  8D9C F5           	push af
1069  8D9D 28 08        	jr z,2F
1070  8D9F
1071  8D9F 11 BE 89     	ld de,Filas
1072  8DA2 01 42 00     	ld bc,66
1073  8DA5 ED B0        	ldir
1074  8DA7
1075  8DA7 CD C3 8D     2 call Incrementa_punteros_de_cajas
1076  8DAA F1           	pop af
1077  8DAB 28 EA        	jr z,1B
1078  8DAD
1079  8DAD C1           	pop bc
1080  8DAE D1           	pop de
1081  8DAF E1           	pop hl
1082  8DB0
1083  8DB0 C9           	ret
1084  8DB1
1085  8DB1              ; **************************************************************************************************
1086  8DB1              ;
1087  8DB1              ;	12/05/23
1088  8DB1              ;
1089  8DB1              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1090  8DB1
1091  8DB1 E5           Restore_entidad push hl
1092  8DB2 D5           	push de
1093  8DB3 C5            	push bc
1094  8DB4
1095  8DB4 2A 03 8A     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1096  8DB7 11 BE 89     	ld de,Filas
1097  8DBA 01 42 00     	ld bc,66
1098  8DBD ED B0        	ldir
1099  8DBF
1100  8DBF C1           	pop bc
1101  8DC0 D1           	pop de
1102  8DC1 E1           	pop hl
1103  8DC2 C9           	ret
1104  8DC3
1105  8DC3
1106  8DC3              ; **************************************************************************************************
1107  8DC3              ;
1108  8DC3              ;	08/05/23
1109  8DC3              ;
1110  8DC3              ;	Incrementamos los dos punteros de entidades. (+1).
1111  8DC3
1112  8DC3 2A 05 8A     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1113  8DC6 22 03 8A     	ld (Puntero_store_caja),hl
1114  8DC9 2A 07 8A     	ld hl,(Indice_restore_caja)
1115  8DCC 23           	inc hl
1116  8DCD 23           	inc hl
1117  8DCE 22 07 8A     	ld (Indice_restore_caja),hl
1118  8DD1 CD 28 8D         call Extrae_address
1119  8DD4 22 05 8A         ld (Puntero_restore_caja),hl
1120  8DD7 C9               ret
1121  8DD8
1122  8DD8              ; **************************************************************************************************
1123  8DD8              ;
1124  8DD8              ;	25/01/23
1125  8DD8              ;
1126  8DD8              ;	Restore_Amadeus
1127  8DD8              ;
1128  8DD8              ;	Cargamos en DRAW los parámetros de Amadeus.
1129  8DD8              ;
1130  8DD8
1131  8DD8 E5           Restore_Amadeus	push hl
1132  8DD9 D5           	push de
1133  8DDA C5            	push bc
1134  8DDB 21 84 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1135  8DDE 11 BE 89     	ld de,Filas
1136  8DE1 01 42 00     	ld bc,66
1137  8DE4 ED B0        	ldir
1138  8DE6 C1           	pop bc
1139  8DE7 D1           	pop de
1140  8DE8 E1           	pop hl
1141  8DE9 C9           	ret
1142  8DEA
1143  8DEA              ; *************************************************************************************************************************************************************
1144  8DEA              ;
1145  8DEA              ;	29/04/23
1146  8DEA              ;
1147  8DEA              ;	Store_Amadeus
1148  8DEA              ;
1149  8DEA              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1150  8DEA              ;
1151  8DEA              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1152  8DEA              ;
1153  8DEA              ;	DESTRUYE: HL y BC y DE.
1154  8DEA
1155  8DEA 21 BE 89     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1156  8DED 01 42 00     	ld bc,66
1157  8DF0 ED B0        	ldir
1158  8DF2 C9           	ret
1159  8DF3
1160  8DF3              ; -----------------------------------------------------------
1161  8DF3              ;
1162  8DF3              ;	27/04/23
1163  8DF3              ;
1164  8DF3              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1165  8DF3              ;
1166  8DF3              ;	Destruye: HL,BC,DE,A
1167  8DF3
1168  8DF3 21 BE 89     Borra_datos_entidad ld hl,Filas
1169  8DF6 01 41 00     	ld bc,65
1170  8DF9 AF           	xor a
1171  8DFA 77           	ld (hl),a
1172  8DFB 11 BF 89     	ld de,Filas+1
1173  8DFE ED B0        	ldir
1174  8E00 C9           	ret
1175  8E01
1176  8E01              ; -----------------------------------------------------------
1177  8E01
1178  8E01              ; Teclado.
1179  8E01
1180  8E01 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1181  8E03 DB FE        	in a,($fe)
1182  8E05 E6 01        	and $01
1183  8E07 28 02        	jr z,1f
1184  8E09 18 F6        	jr Pulsa_ENTER
1185  8E0B C9           1 ret
1186  8E0C
1187  8E0C              ; **************************************************************************************************
1188  8E0C              ;
1189  8E0C              ; Temporización.
1190  8E0C
1191  8E0C              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1192  8E0C              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1193  8E0C              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1194  8E0C              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1195  8E0C
1196  8E0C              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1197  8E0C              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1198  8E0C              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1199  8E0C
1200  8E0C              ; A partir de $4f61 no hace falta DELAY.
1201  8E0C
1202  8E0C              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1203  8E0C
1204  8E0C 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1205  8E0F 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1206  8E10 78           	LD A,B
1207  8E11 A7           	AND A
1208  8E12 20 FB        	JR NZ,wait
1209  8E14 C9           	RET
1210  8E15
1211  8E15              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1212  8E15              ;
1213  8E15              ;	5/3/23
1214  8E15              ;
1215  8E15              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1216  8E15
1217  8E15              Movimiento_Amadeus
1218  8E15
1219  8E15              ; Disparo.
1220  8E15
1221  8E15 3A 2F 8A     	ld a,(Disparo_Amadeus)
1222  8E18 A7           	and a
1223  8E19 20 02        	jr nz,1F
1224  8E1B 18 15        	jr 2F
1225  8E1D
1226  8E1D 3E F7        1 ld a,$f7													; "5" para disparar.
1227  8E1F DB FE        	in a,($fe)
1228  8E21 E6 10        	and $10
1229  8E23
1230  8E23 F5           	push af
1231  8E24 CC 55 8E     	call z,Genera_disparo
1232  8E27 F1           	pop af
1233  8E28 20 08        	jr nz,2F
1234  8E2A
1235  8E2A 3A 2F 8A     	ld a,(Disparo_Amadeus)
1236  8E2D EE 01        	xor 1
1237  8E2F 32 2F 8A     	ld (Disparo_Amadeus),a
1238  8E32
1239  8E32 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1240  8E34 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1241  8E36 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1242  8E38 CC BF 9A         call z,Mov_left											;			"			"			"			"			"			"			"			"
1243  8E3B 3E F7        	ld a,$f7
1244  8E3D DB FE        	in a,($fe)
1245  8E3F E6 01        	and $01
1246  8E41 C8           	ret z
1247  8E42
1248  8E42 3E F7        	ld a,$f7
1249  8E44 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1250  8E46 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1251  8E48 CC A1 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1252  8E4B C9           	ret
1253  8E4C
1254  8E4C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1255  8E4C              ;
1256  8E4C              ;	Rutina provisional para que los malotes cagen balas.
1257  8E4C
1258  8E4C              Detecta_disparo_entidad
1259  8E4C
1260  8E4C 3A 32 8A     	ld a,(Disparo_entidad)
1261  8E4F A7           	and a
1262  8E50 C8           	ret z
1263  8E51
1264  8E51              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1265  8E51
1266  8E51              ;	ld a,$7f				; Detecta SPACE.
1267  8E51              ;	in a,($fe)
1268  8E51              ;	and 1
1269  8E51              ;	ret nz
1270  8E51
1271  8E51 CD 55 8E     	call Genera_disparo
1272  8E54 C9           	ret
1273  8E55
1274  8E55              ; ---------------------------------------------------------------
1275  8E55
1276  8E55              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E55              ; ******************************************************************************************************************************************************************************************
   2+ 8E55              ;
   3+ 8E55              ;   16/07/23
   4+ 8E55              ;
   5+ 8E55              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E55              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E55              ;
   8+ 8E55              ;
   9+ 8E55              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E55              ;
  11+ 8E55              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E55              ;               _ hacen las entidades hacia abajo.
  13+ 8E55              ;
  14+ 8E55              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E55              ;
  16+ 8E55              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E55              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E55              ;
  19+ 8E55              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E55              ;           _ la bala.
  21+ 8E55              ;
  22+ 8E55              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E55              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E55              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E55              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E55              ;           _ en el momento de generarse la bala)).
  27+ 8E55
  28+ 8E55              Genera_disparo
  29+ 8E55
  30+ 8E55              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E55              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E55              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E55              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E55              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E55              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E55              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E55
  38+ 8E55              ; Exclusiones:
  39+ 8E55
  40+ 8E55 3A FA 89         ld a,(Columnas)
  41+ 8E58 47               ld b,a
  42+ 8E59 3A BF 89         ld a,(Columns)
  43+ 8E5C B8               cp b
  44+ 8E5D C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  45+ 8E5E
  46+ 8E5E              ; ----- ----- -----
  47+ 8E5E
  48+ 8E5E 3A EC 89         ld a,(Ctrl_0)
  49+ 8E61 CB 77            bit 6,a
  50+ 8E63 20 06            jr nz,14F
  51+ 8E65
  52+ 8E65 3A C5 89         ld a,(Coordenada_y)
  53+ 8E68 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  54+ 8E6A D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  55+ 8E6B
  56+ 8E6B 21 00 80     14 ld hl,Indice_disparo
  57+ 8E6E 3A C6 89         ld a,(CTRL_DESPLZ)
  58+ 8E71 4F               ld c,a
  59+ 8E72 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  60+ 8E74              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  61+ 8E74              ;                                            ""        ""       "f9", B="1"
  62+ 8E74              ;                                            ""        ""       "fb", B="2"
  63+ 8E74              ;                                            ""        ""       "fb", B="3"
  64+ 8E74 A7               and a
  65+ 8E75 28 10            jr z,1F
  66+ 8E77 E6 01            and 1
  67+ 8E79 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  68+ 8E7A
  69+ 8E7A 79               ld a,c
  70+ 8E7B 16 F9            ld d,$f9
  71+ 8E7D 23           2 inc hl
  72+ 8E7E 23               inc hl
  73+ 8E7F 04               inc b
  74+ 8E80 BA               cp d
  75+ 8E81 28 04            jr z,1F
  76+ 8E83 14               inc d
  77+ 8E84 14               inc d
  78+ 8E85 18 F6            jr 2B
  79+ 8E87
  80+ 8E87 CD 28 8D     1 call Extrae_address
  81+ 8E8A E5               push hl
  82+ 8E8B FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  83+ 8E8D DD 21 BA 98  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  84+ 8E91
  85+ 8E91              ;	Se cumplen las condiciones necesarias para generar un disparo.
  86+ 8E91              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  87+ 8E91
  88+ 8E91 3A EC 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  89+ 8E94 CB 77            bit 6,a
  90+ 8E96 20 04            jr nz,19F
  91+ 8E98
  92+ 8E98 AF               xor a
  93+ 8E99 32 32 8A         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  94+ 8E9C
  95+ 8E9C 3A D2 89     19 ld a,(Cuad_objeto)
  96+ 8E9F FE 02            cp 2
  97+ 8EA1 38 66            jr c,3F
  98+ 8EA3 28 64            jr z,3F
  99+ 8EA5
 100+ 8EA5              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 101+ 8EA5
 102+ 8EA5 E6 01            and 1
 103+ 8EA7 28 30            jr z,4F
 104+ 8EA9
 105+ 8EA9              ; 	Estamos en el 3er cuadrante de pantalla.
 106+ 8EA9              ; 	3er CUAD. ----- ----- ----- ----- -----
 107+ 8EA9              ;
 108+ 8EA9              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 109+ 8EA9              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 110+ 8EA9              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 111+ 8EA9
 112+ 8EA9 2A C0 89     	ld hl,(Posicion_actual)
 113+ 8EAC
 114+ 8EAC              ;   Amadeus o entidad ???.
 115+ 8EAC
 116+ 8EAC 3A EC 89         ld a,(Ctrl_0)
 117+ 8EAF CB 77            bit 6,a
 118+ 8EB1 28 0A            jr z,8F
 119+ 8EB3
 120+ 8EB3              ; 	Dispara Amadeus.
 121+ 8EB3
 122+ 8EB3 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 123+ 8EB5 CD 36 96         call PreviousScan
 124+ 8EB8 CD 36 96         call PreviousScan
 125+ 8EBB
 126+ 8EBB              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 127+ 8EBB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 128+ 8EBB              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 129+ 8EBB              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 130+ 8EBB
 131+ 8EBB 18 11            jr 10F
 132+ 8EBD
 133+ 8EBD              ; 	Dispara Entidad.
 134+ 8EBD
 135+ 8EBD 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 136+ 8EC0              ;                                                   ; Impacto B="$80", no hay impacto.
 137+ 8EC0
 138+ 8EC0              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 139+ 8EC0              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 140+ 8EC0
 141+ 8EC0 C5               push bc
 142+ 8EC1 06 10            ld b,16
 143+ 8EC3 CD 27 96     9 call NextScan
 144+ 8EC6 10 FB            djnz 9B
 145+ 8EC8 C1               pop bc
 146+ 8EC9 CD 33 8F         call Ajusta_disparo_parte_izquierda
 147+ 8ECC 18 06            jr 17F
 148+ 8ECE
 149+ 8ECE              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 150+ 8ECE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 151+ 8ECE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 152+ 8ECE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 153+ 8ECE
 154+ 8ECE CD 33 8F     10 call Ajusta_disparo_parte_izquierda
 155+ 8ED1 CD A8 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 156+ 8ED4              ;                                                      ; _al generar el disparo.
 157+ 8ED4
 158+ 8ED4              ; 	LLegados a este punto tendremos:
 159+ 8ED4              ;
 160+ 8ED4              ;       Puntero_objeto_disparo en IY.
 161+ 8ED4              ;       Rutinas_de_impresion en IX.
 162+ 8ED4              ;       Puntero_de_impresion en HL.
 163+ 8ED4              ;       Impacto/Dirección en BC.
 164+ 8ED4
 165+ 8ED4 CD 3B 8F     17 call Almacena_disparo
 166+ 8ED7 18 52            jr 6F                                             ; RET.
 167+ 8ED9
 168+ 8ED9              ; 	Estamos en el 4º cuadrante de pantalla.
 169+ 8ED9              ; 	4º CUAD. ----- ----- ----- ----- -----
 170+ 8ED9              ;
 171+ 8ED9              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 172+ 8ED9              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 173+ 8ED9              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 174+ 8ED9
 175+ 8ED9 2A C0 89     4 ld hl,(Posicion_actual)
 176+ 8EDC
 177+ 8EDC              ;   Amadeus o entidad ???.
 178+ 8EDC
 179+ 8EDC 3A EC 89         ld a,(Ctrl_0)
 180+ 8EDF CB 77            bit 6,a
 181+ 8EE1 28 0A            jr z,11F
 182+ 8EE3
 183+ 8EE3              ; 	Dispara Amadeus.
 184+ 8EE3
 185+ 8EE3 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 186+ 8EE5 CD 36 96         call PreviousScan
 187+ 8EE8 CD 36 96         call PreviousScan
 188+ 8EEB
 189+ 8EEB              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 190+ 8EEB              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 191+ 8EEB              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 192+ 8EEB              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 193+ 8EEB
 194+ 8EEB 18 11            jr 13F
 195+ 8EED
 196+ 8EED              ; 	Dispara Entidad.
 197+ 8EED
 198+ 8EED 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 199+ 8EF0              ;                                                     ; Impacto B="$80", no hay impacto.
 200+ 8EF0
 201+ 8EF0              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 202+ 8EF0              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 203+ 8EF0
 204+ 8EF0 C5               push bc
 205+ 8EF1 06 10            ld b,16
 206+ 8EF3 CD 27 96     12 call NextScan
 207+ 8EF6 10 FB            djnz 12B
 208+ 8EF8 C1               pop bc
 209+ 8EF9
 210+ 8EF9 CD 2C 8F         call Ajusta_disparo_parte_derecha
 211+ 8EFC 18 06            jr 18F
 212+ 8EFE
 213+ 8EFE              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 214+ 8EFE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 215+ 8EFE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 216+ 8EFE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 217+ 8EFE
 218+ 8EFE CD 2C 8F     13 call Ajusta_disparo_parte_derecha
 219+ 8F01 CD A8 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 220+ 8F04              ;                                                       ; _al generar el disparo.
 221+ 8F04
 222+ 8F04              ; LLegados a este punto tendremos:
 223+ 8F04              ;
 224+ 8F04              ;       Puntero_objeto_disparo en IY.
 225+ 8F04              ;       Rutinas_de_impresion en IX.
 226+ 8F04              ;       Puntero_de_impresion en HL.
 227+ 8F04              ;       Impacto/Dirección en BC.
 228+ 8F04
 229+ 8F04 CD 3B 8F     18 call Almacena_disparo
 230+ 8F07 18 22            jr 6F                                               ; RET.
 231+ 8F09
 232+ 8F09              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 233+ 8F09
 234+ 8F09 28 11        3 jr z,5F
 235+ 8F0B
 236+ 8F0B              ; 	1er CUAD. ----- ----- ----- ----- -----
 237+ 8F0B              ;
 238+ 8F0B              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 239+ 8F0B              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 240+ 8F0B              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 241+ 8F0B              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 242+ 8F0B
 243+ 8F0B              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 244+ 8F0B              ;	   ""        ""       "f9", B="1"
 245+ 8F0B              ;	   ""        ""       "fb", B="2"
 246+ 8F0B              ; 	   ""        ""       "fb", B="3"
 247+ 8F0B
 248+ 8F0B 2A C0 89     	ld hl,(Posicion_actual)
 249+ 8F0E CD 27 96     	call NextScan
 250+ 8F11
 251+ 8F11              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 252+ 8F11              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 253+ 8F11              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 254+ 8F11              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 255+ 8F11
 256+ 8F11 CD 33 8F         call Ajusta_disparo_parte_izquierda
 257+ 8F14
 258+ 8F14              ; 	No se produce impacto. B="$80"
 259+ 8F14              ; 	Dirección del proyectil hacia abajo. C="$80"
 260+ 8F14
 261+ 8F14 01 80 80         ld bc,$8080
 262+ 8F17
 263+ 8F17              ; 	LLegados a este punto tendremos:
 264+ 8F17              ;
 265+ 8F17              ;       Puntero_objeto_disparo en IY.
 266+ 8F17              ;       Rutinas_de_impresion en IX.
 267+ 8F17              ;       Puntero_de_impresion en HL.
 268+ 8F17              ;       Impacto/Dirección en BC.
 269+ 8F17
 270+ 8F17 CD 3B 8F         call Almacena_disparo
 271+ 8F1A 18 0F            jr 6F                                           ; RET.
 272+ 8F1C
 273+ 8F1C              ; 	Estamos en el 2º cuadrante de pantalla.
 274+ 8F1C              ; 	2º CUAD. ----- ----- ----- ----- -----
 275+ 8F1C              ;
 276+ 8F1C              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 277+ 8F1C              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 278+ 8F1C              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 279+ 8F1C              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 280+ 8F1C
 281+ 8F1C 2A C0 89     5 ld hl,(Posicion_actual)
 282+ 8F1F CD 27 96     	call NextScan
 283+ 8F22
 284+ 8F22              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 285+ 8F22              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 286+ 8F22              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 287+ 8F22              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 288+ 8F22
 289+ 8F22 CD 2C 8F         call Ajusta_disparo_parte_derecha
 290+ 8F25
 291+ 8F25              ; 	No se produce impacto. B="$80"
 292+ 8F25              ; 	Dirección del proyectil hacia abajo. C="80"
 293+ 8F25
 294+ 8F25 01 80 80     15 ld bc,$8080
 295+ 8F28
 296+ 8F28              ; 	LLegados a este punto tendremos:
 297+ 8F28              ;
 298+ 8F28              ;       Puntero_objeto_disparo en IY.
 299+ 8F28              ;       Rutinas_de_impresion en IX.
 300+ 8F28              ;       Puntero_de_impresion en HL.
 301+ 8F28              ;       Impacto/Dirección en BC.
 302+ 8F28
 303+ 8F28 CD 3B 8F         call Almacena_disparo
 304+ 8F2B
 305+ 8F2B C9           6 ret
 306+ 8F2C
 307+ 8F2C              ; ----------------------------------------------------------------
 308+ 8F2C              ;
 309+ 8F2C              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 310+ 8F2C              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 311+ 8F2C              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 312+ 8F2C
 313+ 8F2C 78           Ajusta_disparo_parte_derecha ld a,b
 314+ 8F2D FE 02            cp 2
 315+ 8F2F 38 01            jr c,1F
 316+ 8F31 23               inc hl
 317+ 8F32 C9           1 ret
 318+ 8F33
 319+ 8F33 78           Ajusta_disparo_parte_izquierda ld a,b
 320+ 8F34 FE 01        	cp 1
 321+ 8F36 20 01        	jr nz,1F
 322+ 8F38 2B           	dec hl
 323+ 8F39 2B           1 dec hl
 324+ 8F3A C9               ret
 325+ 8F3B
 326+ 8F3B              ; ----------------------------------------------------------------
 327+ 8F3B              ;
 328+ 8F3B              ;   25/02/23
 329+ 8F3B              ;
 330+ 8F3B              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 331+ 8F3B              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 332+ 8F3B              ;
 333+ 8F3B              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 334+ 8F3B              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 335+ 8F3B
 336+ 8F3B              Almacena_disparo
 337+ 8F3B
 338+ 8F3B E5               push hl  										; HL contiene el puntero de impresión.
 339+ 8F3C F1               pop af
 340+ 8F3D 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 341+ 8F3E
 342+ 8F3E 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 343+ 8F3F E6 01            and 1
 344+ 8F41 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 345+ 8F43              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 346+ 8F43              ; 	Dispara AMADEUS.
 347+ 8F43
 348+ 8F43              ;	Comprobamos que a Amadeus aún le quedan disparos.
 349+ 8F43              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 350+ 8F43              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 351+ 8F43              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 352+ 8F43
 353+ 8F43 C5               push bc
 354+ 8F44 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 355+ 8F47 2A 1C 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 356+ 8F4A A7               and a
 357+ 8F4B ED 42            sbc hl,bc
 358+ 8F4D CC F1 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 359+ 8F50 C1               pop bc
 360+ 8F51 28 54            jr z,4F
 361+ 8F53
 362+ 8F53 2A 1C 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 363+ 8F56 23               inc hl
 364+ 8F57 23               inc hl
 365+ 8F58 22 1C 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 366+ 8F5B              ;                                                   ; _ Disparo_(+1).
 367+ 8F5B 18 18            jr 2F
 368+ 8F5D
 369+ 8F5D              ; Dispara una entidad.
 370+ 8F5D
 371+ 8F5D C5           1 push bc
 372+ 8F5E 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 373+ 8F61 2A 1A 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 374+ 8F64 A7               and a
 375+ 8F65 ED 42            sbc hl,bc
 376+ 8F67 CC EA 8C         call z,Inicia_Puntero_Disparo_Entidades
 377+ 8F6A C1               pop bc
 378+ 8F6B 28 3A            jr z,4F
 379+ 8F6D
 380+ 8F6D 2A 1A 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 381+ 8F70 23               inc hl
 382+ 8F71 23               inc hl
 383+ 8F72 22 1A 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 384+ 8F75              ;                                                   ; _ Disparo_(+1).
 385+ 8F75 CD 28 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 386+ 8F78              ;                                                   ; _ los 8 bytes que definen el disparo:
 387+ 8F78              ;
 388+ 8F78              ;                                                     Puntero_objeto_disparo en IY.
 389+ 8F78              ;                                                     Rutinas_de_impresion en IX.
 390+ 8F78              ;                                                     Puntero_de_impresion en HL.
 391+ 8F78              ;                                                     Impacto/Dirección en BC.
 392+ 8F78
 393+ 8F78 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 394+ 8F79 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 395+ 8F7A 23               inc hl                                          ; _ al siguiente.
 396+ 8F7B A7               and a
 397+ 8F7C 20 C0            jr nz,3B
 398+ 8F7E
 399+ 8F7E 08               ex af,af
 400+ 8F7F ED 73 11 8A      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 401+ 8F83 F9               ld sp,hl
 402+ 8F84
 403+ 8F84 DD E5            push ix                                         ; Rutina de impresión.
 404+ 8F86 F5               push af                                         ; Puntero de impresión.
 405+ 8F87 FD E5            push iy                                         ; Puntero objeto.
 406+ 8F89 C5               push bc                                         ; Control.
 407+ 8F8A
 408+ 8F8A ED 7B 11 8A      ld sp,(Stack)
 409+ 8F8E
 410+ 8F8E              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 411+ 8F8E
 412+ 8F8E 21 00 8A     	ld hl,Ctrl_1
 413+ 8F91 CB C6        	set 0,(hl)
 414+ 8F93
 415+ 8F93 DD E5        	push ix
 416+ 8F95 E1               pop hl
 417+ 8F96 F5               push af
 418+ 8F97 DD E1            pop ix
 419+ 8F99
 420+ 8F99 CD A0 7F     	call Guarda_foto_registros
 421+ 8F9C
 422+ 8F9C 21 00 8A     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 423+ 8F9F CB 86        	res 0,(hl)
 424+ 8FA1
 425+ 8FA1              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 426+ 8FA1              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 427+ 8FA1
 428+ 8FA1 CD F1 8C         call Inicia_Puntero_Disparo_Amadeus
 429+ 8FA4 CD EA 8C         call Inicia_Puntero_Disparo_Entidades
 430+ 8FA7
 431+ 8FA7 C9           4 ret
 432+ 8FA8
 433+ 8FA8              ; ----------------------------------------------------------------
 434+ 8FA8              ;
 435+ 8FA8              ;   4/3/23
 436+ 8FA8              ;
 437+ 8FA8              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 438+ 8FA8              ;   _ al generarse el disparo.
 439+ 8FA8              ;
 440+ 8FA8              ;       "$80" ..... No se produce colisión.
 441+ 8FA8              ;       "$81" ..... Se produce colisión.
 442+ 8FA8              ;
 443+ 8FA8              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 444+ 8FA8              ;         _ que forman el disparo.
 445+ 8FA8
 446+ 8FA8
 447+ 8FA8              Comprueba_Colision
 448+ 8FA8
 449+ 8FA8              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 450+ 8FA8
 451+ 8FA8 FD E5            push iy                                        ; Puntero objeto (disparo).
 452+ 8FAA E5               push hl                                        ; Puntero de impresión (disparo).
 453+ 8FAB
 454+ 8FAB 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 455+ 8FAD CD C9 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 456+ 8FB0
 457+ 8FB0 7B               ld a,e
 458+ 8FB1 E6 01            and 1
 459+ 8FB3 28 0F            jr z,2F    ;""""                               ; Salimos si E="$81". Hay colisión.
 460+ 8FB5
 461+ 8FB5 E1               pop hl
 462+ 8FB6 E5               push hl
 463+ 8FB7 CD 27 96         call NextScan
 464+ 8FBA
 465+ 8FBA 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 466+ 8FBB FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 467+ 8FBD 28 05            jr z,2F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 468+ 8FBF              ;                                                  ; _ 2º scanline si esto es así.
 469+ 8FBF 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 470+ 8FC1 CD C9 8F         call Bucle_2
 471+ 8FC4
 472+ 8FC4 43           2 ld b,e
 473+ 8FC5 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 474+ 8FC6 FD E1            pop iy
 475+ 8FC8 C9               ret
 476+ 8FC9
 477+ 8FC9               ; ---------- ----------
 478+ 8FC9
 479+ 8FC9 06 02        Bucle_2 ld b,2
 480+ 8FCB FD 7E 00     2 ld a,(iy)
 481+ 8FCE A6               and (hl)
 482+ 8FCF 28 02            jr z,1F
 483+ 8FD1 1E 81            ld e,$81
 484+ 8FD3 23           1 inc hl
 485+ 8FD4 FD 23            inc iy
 486+ 8FD6 10 F3            djnz 2B
 487+ 8FD8 C9               ret
 488+ 8FD9
 489+ 8FD9              ; -------------------------------------------------------------------------------------------------------------
 490+ 8FD9              ;
 491+ 8FD9              ;   11/04/23
 492+ 8FD9              ;
 493+ 8FD9              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 494+ 8FD9              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 495+ 8FD9              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 496+ 8FD9              ;
 497+ 8FD9              ;   MODIFICA: HL,DE,BC,A y AF´.
 498+ 8FD9
 499+ 8FD9              Compara_coordenadas_X
 500+ 8FD9
 501+ 8FD9              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 502+ 8FD9              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 503+ 8FD9
 504+ 8FD9              ; Preparamos registros:
 505+ 8FD9
 506+ 8FD9 21 C4 89         ld hl,Filas+6
 507+ 8FDC 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 508+ 8FDD 23               inc hl
 509+ 8FDE 23               inc hl
 510+ 8FDF 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 511+ 8FE0 43               ld b,e
 512+ 8FE1
 513+ 8FE1 21 D2 89         ld hl,Filas+20
 514+ 8FE4 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 515+ 8FE5 21 26 8A         ld hl,Coordenadas_X_Entidad
 516+ 8FE8 CD 09 92         call Guarda_coordenadas_X
 517+ 8FEB
 518+ 8FEB              ; Preparamos registros:
 519+ 8FEB
 520+ 8FEB 21 8A 85         ld hl,Amadeus_db+6
 521+ 8FEE 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 522+ 8FEF 23               inc hl
 523+ 8FF0 23               inc hl
 524+ 8FF1 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 525+ 8FF2 7B               ld a,e
 526+ 8FF3 08               ex af,af'
 527+ 8FF4 21 98 85         ld hl,Amadeus_db+20
 528+ 8FF7 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 529+ 8FF8 21 23 8A         ld hl,Coordenadas_X_Amadeus
 530+ 8FFB CD 09 92         call Guarda_coordenadas_X
 531+ 8FFE
 532+ 8FFE              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 533+ 8FFE              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 534+ 8FFE
 535+ 8FFE 04               inc b
 536+ 8FFF 05               dec b
 537+ 9000 28 04            jr z,1F
 538+ 9002 06 03            ld b,3
 539+ 9004 18 02            jr 2F
 540+ 9006 06 02        1 ld b,2
 541+ 9008 08           2 ex af,af'
 542+ 9009 3C               inc a
 543+ 900A 3D               dec a
 544+ 900B 28 04            jr z,5F
 545+ 900D 0E 03            ld c,3
 546+ 900F 18 02            jr 6F
 547+ 9011 0E 02        5 ld c,2
 548+ 9013 79           6 ld a,c
 549+ 9014 08               ex af,af'
 550+ 9015 11 26 8A         ld de,Coordenadas_X_Entidad
 551+ 9018 1A           4 ld a,(de)
 552+ 9019 21 23 8A         ld hl,Coordenadas_X_Amadeus
 553+ 901C BE           3 cp (hl)
 554+ 901D 28 0E            jr z,7F
 555+ 901F 23               inc hl
 556+ 9020 0D               dec c
 557+ 9021 20 F9            jr nz,3B
 558+ 9023 13               inc de
 559+ 9024 08               ex af,af'
 560+ 9025 4F               ld c,a
 561+ 9026 08               ex af,af'
 562+ 9027 10 EF            djnz 4B
 563+ 9029
 564+ 9029              ; Limpiamos los almacenes de coordenadas y salimos.
 565+ 9029
 566+ 9029 CD 45 92     8 call Limpia_Coordenadas_X
 567+ 902C C9               ret
 568+ 902D
 569+ 902D 3E 01        7 ld a,1                                              ; El .db (Impacto)="1" indica que es altamente probable que esta_
 570+ 902F 32 D7 89         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 571+ 9032 21 1E 8A         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 572+ 9035 CB D6            set 2,(hl)
 573+ 9037 18 F0            jr 8B
 574+ 9039
 575+ 9039              ; -----------------------------------------------------------------------
 576+ 9039              ;
 577+ 9039              ;   17/04/23
 578+ 9039              ;
 579+ 9039
 580+ 9039              Detecta_colision_nave_entidad
 581+ 9039
 582+ 9039              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 583+ 9039
 584+ 9039 2A C0 89         ld hl,(Posicion_actual)
 585+ 903C CD 82 95         call Calcula_puntero_de_impresion
 586+ 903F
 587+ 903F              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 588+ 903F              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 589+ 903F
 590+ 903F DD E5            push ix
 591+ 9041 E1               pop hl
 592+ 9042 E5               push hl
 593+ 9043
 594+ 9043              ; ----- ----- -----
 595+ 9043 1E 00            ld e,0                                         ; Indica impacto.
 596+ 9045 06 0A            ld b,10
 597+ 9047 CD 77 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 598+ 904A 7B               ld a,e
 599+ 904B FE 05            cp 5
 600+ 904D 38 0E            jr c,3F
 601+ 904F
 602+ 904F              ; LLegados a este punto:
 603+ 904F              ;
 604+ 904F              ;   HAY COLISIÓN !!!!!.
 605+ 904F              ;
 606+ 904F              ;   .db (Impacto) de Amadeus a "1".
 607+ 904F              ;   SET el bit3 de (Impacto2).
 608+ 904F              ;
 609+ 904F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 610+ 904F
 611+ 904F 21 9D 85         ld hl,Amadeus_db+25
 612+ 9052 36 01            ld (hl),1
 613+ 9054 21 1E 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 614+ 9057 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 615+ 9059 CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 616+ 905B 18 18            jr 1F
 617+ 905D
 618+ 905D              ; -----
 619+ 905D
 620+ 905D E1           3 pop hl
 621+ 905E CD 27 96         call NextScan
 622+ 9061 E5               push hl
 623+ 9062 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 624+ 9063 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 625+ 9065 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 626+ 9067 30 0C            jr nc,1F
 627+ 9069              ;                                                  ; _ 2º scanline si esto es así.
 628+ 9069 10 DC            djnz 2B
 629+ 906B
 630+ 906B              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 631+ 906B
 632+ 906B              ; LLegados a este punto:
 633+ 906B              ;
 634+ 906B              ;   NO HAY COLISIÓN !!!!!.
 635+ 906B              ;
 636+ 906B              ;   .db (Impacto) de Amadeus a "0".
 637+ 906B              ;   RES el bit2 de (Impacto2).
 638+ 906B              ;
 639+ 906B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 640+ 906B              ;   Lo colocamos a "0".
 641+ 906B
 642+ 906B 21 1E 8A         ld hl,Impacto2
 643+ 906E CB 96            res 2,(hl)
 644+ 9070 2A 1F 8A         ld hl,(Entidad_sospechosa_de_colision)
 645+ 9073 36 00            ld (hl),0
 646+ 9075
 647+ 9075 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 648+ 9076 C9               ret
 649+ 9077
 650+ 9077               ; ---------- ----------
 651+ 9077
 652+ 9077 C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 653+ 9078 3A BF 89         ld a,(Columns)
 654+ 907B 47               ld b,a
 655+ 907C FD 7E 00     2 ld a,(iy)
 656+ 907F BE               cp (hl)
 657+ 9080 28 01            jr z,1F
 658+ 9082
 659+ 9082 1C               inc e
 660+ 9083
 661+ 9083 23           1 inc hl
 662+ 9084 FD 23            inc iy
 663+ 9086 10 F4            djnz 2B
 664+ 9088 C1               pop bc
 665+ 9089 C9               ret
 666+ 908A
 667+ 908A              ; -------------------------------------------------------------------------------------------------------------
 668+ 908A              ;
 669+ 908A              ;   13/03/23
 670+ 908A              ;
 671+ 908A              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 672+ 908A              ;
 673+ 908A              ;   DESTRUYE: HL,BC,DE y A.
 674+ 908A
 675+ 908A 21 85 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 676+ 908D 7E               ld a,(hl)
 677+ 908E A7               and a
 678+ 908F C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 679+ 9090
 680+ 9090 44               ld b,h
 681+ 9091 4D               ld c,l
 682+ 9092 2A 17 8A         ld hl,(Stack_snapshot_disparos)
 683+ 9095 E5               push hl
 684+ 9096 A7               and a
 685+ 9097 ED 42            sbc hl,bc
 686+ 9099 E5               push hl
 687+ 909A C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 688+ 909B
 689+ 909B E1               pop hl
 690+ 909C 54               ld d,h
 691+ 909D 5D               ld e,l
 692+ 909E 1B               dec de
 693+ 909F ED B8            lddr                                                ; Limpiamos.
 694+ 90A1
 695+ 90A1 21 85 70         ld hl,Album_de_fotos_disparos
 696+ 90A4 22 17 8A         ld (Stack_snapshot_disparos),hl
 697+ 90A7
 698+ 90A7 C9               ret
 699+ 90A8
 700+ 90A8              ; -------------------------------------------------------------------------------------------------------------
 701+ 90A8              ;
 702+ 90A8              ;   18/07/23
 703+ 90A8              ;
 704+ 90A8
 705+ 90A8              Motor_de_disparos
 706+ 90A8
 707+ 90A8              ; Gestiona DISPAROS DE AMADEUS.
 708+ 90A8
 709+ 90A8 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 710+ 90AB 2A 1C 8A         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 711+ 90AE
 712+ 90AE CD 28 8D     2 call Extrae_address
 713+ 90B1 7E               ld a,(hl)
 714+ 90B2 A7               and a
 715+ 90B3 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 716+ 90B5
 717+ 90B5              ; ----- ----- ----- ----- ----- -----
 718+ 90B5
 719+ 90B5 C5               push bc
 720+ 90B6 CD 7B 91         call foto_disparo_a_borrar
 721+ 90B9
 722+ 90B9              ; Existe colisión con este disparo???
 723+ 90B9
 724+ 90B9 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 725+ 90BA 7E               ld a,(hl)
 726+ 90BB 2B               dec hl
 727+ 90BC E6 01            and 1
 728+ 90BE 28 1D            jr z,9F
 729+ 90C0
 730+ 90C0              ;   En este punto:
 731+ 90C0              ;
 732+ 90C0              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 733+ 90C0              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 734+ 90C0              ;   _con la entidad).
 735+ 90C0              ;
 736+ 90C0              ;   Disparo_2A defw 0                                ; Control.
 737+ 90C0              ;    defw 0                                          ; Puntero objeto.
 738+ 90C0              ;    defw 0                                          ; Puntero de impresión.
 739+ 90C0              ;    defw 0                                          ; Rutina de impresión.
 740+ 90C0
 741+ 90C0 E5               push hl
 742+ 90C1
 743+ 90C1 06 04            ld b,4
 744+ 90C3 23           19 inc hl
 745+ 90C4 10 FD            djnz 19B
 746+ 90C6
 747+ 90C6 CD 28 8D         call Extrae_address
 748+ 90C9 CD 9D 9C         call Genera_coordenadas_disparo
 749+ 90CC
 750+ 90CC              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 751+ 90CC
 752+ 90CC 21 21 8A         ld hl,Coordenadas_disparo_certero
 753+ 90CF 72               ld (hl),d
 754+ 90D0 23               inc hl
 755+ 90D1 73               ld (hl),e
 756+ 90D2
 757+ 90D2              ; Elimino el disparo de la base de datos.
 758+ 90D2
 759+ 90D2 E1               pop hl
 760+ 90D3 CD FE 91         call Elimina_disparo_de_base_de_datos
 761+ 90D6 21 1E 8A         ld hl,Impacto2
 762+ 90D9 CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 763+ 90DB
 764+ 90DB 18 06            jr 11F
 765+ 90DD
 766+ 90DD CD A4 91     9 call Mueve_disparo
 767+ 90E0 CD 7B 91         call foto_disparo_a_borrar
 768+ 90E3
 769+ 90E3 C1           11 pop bc
 770+ 90E4 18 04            jr 7F
 771+ 90E6
 772+ 90E6              ; ----- ----- ----- ----- ----- -----
 773+ 90E6
 774+ 90E6 ED 42        1 sbc hl,bc
 775+ 90E8 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 776+ 90EA
 777+ 90EA 2A 1C 8A     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 778+ 90ED 23               inc hl
 779+ 90EE 23               inc hl
 780+ 90EF 22 1C 8A         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 781+ 90F2 18 BA            jr 2B
 782+ 90F4
 783+ 90F4 CD F1 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 784+ 90F7              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 785+ 90F7
 786+ 90F7              ; Gestiona DISPAROS DE ENTIDADES.
 787+ 90F7
 788+ 90F7 01 6A 85         ld bc,Disparo_11
 789+ 90FA 2A 1A 8A         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 790+ 90FD
 791+ 90FD CD 28 8D     5 call Extrae_address
 792+ 9100 7E               ld a,(hl)
 793+ 9101 A7               and a
 794+ 9102 28 62            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 795+ 9104
 796+ 9104              ; ----- ----- ----- ----- ----- -----
 797+ 9104
 798+ 9104 C5               push bc
 799+ 9105 CD 7B 91         call foto_disparo_a_borrar
 800+ 9108
 801+ 9108              ; Existe colisión con este disparo???
 802+ 9108
 803+ 9108 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 804+ 9109 7E               ld a,(hl)
 805+ 910A 2B               dec hl
 806+ 910B E6 01            and 1
 807+ 910D 28 4E            jr z,10F
 808+ 910F
 809+ 910F              ;! La colisión se produce con Amadeus???
 810+ 910F              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 811+ 910F
 812+ 910F E5               push hl
 813+ 9110
 814+ 9110 06 04            ld b,4
 815+ 9112 23           16 inc hl
 816+ 9113 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 817+ 9115
 818+ 9115 CD 28 8D         call Extrae_address
 819+ 9118 CD 9D 9C         call Genera_coordenadas_disparo
 820+ 911B
 821+ 911B 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 822+ 911C FE 16            cp $16
 823+ 911E
 824+ 911E              ;    jr c,15F
 825+ 911E 20 2B            jr nz,15F
 826+ 9120
 827+ 9120              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 828+ 9120
 829+ 9120 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 830+ 9121
 831+ 9121              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 832+ 9121
 833+ 9121
 834+ 9121 2A 29 8A         ld hl,(Puntero_de_impresion_Amadeus)
 835+ 9124
 836+ 9124              ; Coordenada X de Amadeus en D.
 837+ 9124
 838+ 9124 7D               ld a,l
 839+ 9125 E6 1F            and $1F
 840+ 9127 57               ld d,a
 841+ 9128
 842+ 9128 21 8C 85         ld hl,Amadeus_db+8
 843+ 912B 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 844+ 912C
 845+ 912C 21 23 8A         ld hl,Coordenadas_X_Amadeus
 846+ 912F CD 09 92         call Guarda_coordenadas_X
 847+ 9132
 848+ 9132 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 849+ 9133
 850+ 9133              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 851+ 9133
 852+ 9133 06 02            ld b,2
 853+ 9135 C5           20 push bc
 854+ 9136
 855+ 9136 06 03            ld b,3
 856+ 9138 21 23 8A         ld hl,Coordenadas_X_Amadeus
 857+ 913B 7E           18 ld a,(hl)
 858+ 913C BA               cp d
 859+ 913D 20 05            jr nz,17F
 860+ 913F
 861+ 913F              ; Colisión Amadeus !!!!!!!!!!
 862+ 913F
 863+ 913F 18 FE            jr $
 864+ 9141
 865+ 9141 E1               pop hl
 866+ 9142 18 0D            jr 14F
 867+ 9144
 868+ 9144 23           17 inc hl
 869+ 9145 10 F4            djnz 18B
 870+ 9147
 871+ 9147 14               inc d                       ; 2ª Coordenada_X del disparo.
 872+ 9148
 873+ 9148 C1               pop bc
 874+ 9149 10 EA            djnz 20B
 875+ 914B
 876+ 914B
 877+ 914B              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 878+ 914B              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 879+ 914B
 880+ 914B E1           15 pop hl
 881+ 914C 23               inc hl
 882+ 914D 35               dec (hl)
 883+ 914E 2B               dec hl
 884+ 914F 18 0C            jr 10F
 885+ 9151
 886+ 9151              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 887+ 9151              ; _ almacén de coordenadas_X de Amadeus.
 888+ 9151
 889+ 9151 E5           14 push hl
 890+ 9152 CD FE 91         call Elimina_disparo_de_base_de_datos
 891+ 9155 21 1E 8A         ld hl,Impacto2
 892+ 9158 CB CE            set 1,(hl)
 893+ 915A
 894+ 915A              ;    call Limpia_Coordenadas_X
 895+ 915A
 896+ 915A E1               pop hl
 897+ 915B 18 06            jr 12F
 898+ 915D
 899+ 915D              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 900+ 915D
 901+ 915D CD A4 91     10 call Mueve_disparo
 902+ 9160 CD 7B 91         call foto_disparo_a_borrar
 903+ 9163 C1           12 pop bc
 904+ 9164
 905+ 9164 18 04            jr 8F
 906+ 9166
 907+ 9166              ; ----- ----- ----- ----- ----- -----
 908+ 9166
 909+ 9166 ED 42        4 sbc hl,bc
 910+ 9168 28 0A            jr z,6F
 911+ 916A
 912+ 916A 2A 1A 8A     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 913+ 916D 23               inc hl
 914+ 916E 23               inc hl
 915+ 916F 22 1A 8A         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 916+ 9172 18 89            jr 5B
 917+ 9174
 918+ 9174 CD EA 8C     6 call Inicia_Puntero_Disparo_Entidades
 919+ 9177 CD 45 92         call Limpia_Coordenadas_X
 920+ 917A C9               ret
 921+ 917B
 922+ 917B              ; ------------------------------------------------------------------
 923+ 917B
 924+ 917B              foto_disparo_a_borrar
 925+ 917B
 926+ 917B 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 927+ 917C A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 928+ 917D C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 929+ 917E
 930+ 917E E5               push hl
 931+ 917F 23               inc hl
 932+ 9180 23               inc hl
 933+ 9181 ED 73 11 8A      ld (Stack),sp
 934+ 9185 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 935+ 9186 FD E1            pop iy
 936+ 9188 DD E1            pop ix
 937+ 918A E1               pop hl
 938+ 918B ED 7B 11 8A      ld sp,(Stack)
 939+ 918F 3A 00 8A         ld a,(Ctrl_1)
 940+ 9192 CB C7            set 0,a
 941+ 9194 32 00 8A         ld (Ctrl_1),a
 942+ 9197 CD A0 7F         call Guarda_foto_registros
 943+ 919A 3A 00 8A         ld a,(Ctrl_1)
 944+ 919D CB 87            res 0,a
 945+ 919F 32 00 8A         ld (Ctrl_1),a
 946+ 91A2 E1               pop hl
 947+ 91A3 C9               ret
 948+ 91A4
 949+ 91A4              ;---------------------------------------------------
 950+ 91A4              ;
 951+ 91A4              ;   18/07/23
 952+ 91A4              ;
 953+ 91A4
 954+ 91A4              Mueve_disparo
 955+ 91A4
 956+ 91A4              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 957+ 91A4              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 958+ 91A4              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 959+ 91A4
 960+ 91A4 E5               push hl
 961+ 91A5
 962+ 91A5 7E               ld a,(hl)
 963+ 91A6
 964+ 91A6 06 04            ld b,4
 965+ 91A8 23           1 inc hl
 966+ 91A9 10 FD            djnz 1B
 967+ 91AB
 968+ 91AB              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 969+ 91AB
 970+ 91AB CD 28 8D         call Extrae_address
 971+ 91AE
 972+ 91AE E6 01            and 1
 973+ 91B0 28 32            jr z,2F                             ; Disparamos hacia arriba o abajo???
 974+ 91B2
 975+ 91B2              ; Disparo hacia arriba, (Amadeus).
 976+ 91B2
 977+ 91B2              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 978+ 91B2              ; _ de la dificultad.
 979+ 91B2
 980+ 91B2 CD 36 96         call PreviousScan
 981+ 91B5 CD 36 96         call PreviousScan
 982+ 91B8 CD 36 96         call PreviousScan
 983+ 91BB CD 36 96         call PreviousScan
 984+ 91BE
 985+ 91BE              ; Detecta si el disparo de Amadeus sale de pantalla:
 986+ 91BE
 987+ 91BE 7C               ld a,h
 988+ 91BF FE 40            cp $40
 989+ 91C1 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
 990+ 91C3
 991+ 91C3              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
 992+ 91C3
 993+ 91C3 EB               ex de,hl
 994+ 91C4 06 04            ld b,4
 995+ 91C6 2B           6 dec hl
 996+ 91C7 10 FD            djnz 6B
 997+ 91C9
 998+ 91C9 CD FE 91         call Elimina_disparo_de_base_de_datos
 999+ 91CC E1               pop hl
1000+ 91CD 18 14            jr 7F
1001+ 91CF
1002+ 91CF              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1003+ 91CF              ; HL contiene el puntero de impresión del disparo.
1004+ 91CF              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1005+ 91CF
1006+ 91CF C5           3 push bc
1007+ 91D0 D5               push de
1008+ 91D1
1009+ 91D1 CD A8 8F         call Comprueba_Colision
1010+ 91D4
1011+ 91D4              ; B="$80", no hay colisión. B="$81", existe colisión.
1012+ 91D4
1013+ 91D4 78               ld a,b
1014+ 91D5
1015+ 91D5              ; debuggg
1016+ 91D5 E6 01            and 1
1017+ 91D7 20 FE            jr nz,$
1018+ 91D9              ; debuggg
1019+ 91D9
1020+ 91D9 D1               pop de
1021+ 91DA C1               pop bc
1022+ 91DB
1023+ 91DB EB               ex de,hl
1024+ 91DC
1025+ 91DC 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1026+ 91DD 23               inc hl                                      ; _ movimiento.
1027+ 91DE 72               ld (hl),d
1028+ 91DF
1029+ 91DF E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1030+ 91E0
1031+ 91E0 23               inc hl                                      ; _ en curso.
1032+ 91E1 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1033+ 91E2 2B               dec hl
1034+ 91E3
1035+ 91E3 C9           7 ret
1036+ 91E4
1037+ 91E4              ; Disparo hacia abajo, (Entidad).
1038+ 91E4
1039+ 91E4              ;! Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1040+ 91E4              ;! _ de la dificultad.
1041+ 91E4
1042+ 91E4 CD 27 96     2 call NextScan
1043+ 91E7 CD 27 96         call NextScan
1044+ 91EA CD 27 96         call NextScan
1045+ 91ED              ;    call NextScan
1046+ 91ED
1047+ 91ED              ; Detecta si el disparo de la entidad sale de la pantalla.
1048+ 91ED
1049+ 91ED 7C               ld a,h
1050+ 91EE FE 58            cp $58
1051+ 91F0 38 DD            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1052+ 91F2
1053+ 91F2 EB               ex de,hl
1054+ 91F3 06 04            ld b,4
1055+ 91F5 2B           5 dec hl
1056+ 91F6 10 FD            djnz 5B
1057+ 91F8
1058+ 91F8 CD FE 91         call Elimina_disparo_de_base_de_datos
1059+ 91FB E1               pop hl
1060+ 91FC 18 E5            jr 7B
1061+ 91FE
1062+ 91FE              ; HL apunta al primer byte de la base de datos del disparo.
1063+ 91FE
1064+ 91FE 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1065+ 9201 AF               xor a
1066+ 9202 77               ld (hl),a
1067+ 9203 54               ld d,h
1068+ 9204 5D               ld e,l
1069+ 9205 13               inc de
1070+ 9206 ED B0            ldir
1071+ 9208 C9               ret
1072+ 9209
1073+ 9209              ; -----------------------------------------------------------------
1074+ 9209              ;
1075+ 9209              ;   19/7/23
1076+ 9209              ;
1077+ 9209              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1078+ 9209              ;
1079+ 9209              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1080+ 9209              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1081+ 9209              ;
1082+ 9209              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1083+ 9209              ;
1084+ 9209              ;   INPUTS:
1085+ 9209              ;
1086+ 9209              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1087+ 9209              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1088+ 9209
1089+ 9209              ;   MODIFICA: A, HL, BC y DE.
1090+ 9209
1091+ 9209              Guarda_coordenadas_X
1092+ 9209
1093+ 9209 7B               ld a,e
1094+ 920A A7               and a
1095+ 920B 20 04            jr nz,1F
1096+ 920D
1097+ 920D 06 02            ld b,2
1098+ 920F 18 02            jr 2F
1099+ 9211
1100+ 9211 06 03        1 ld b,3
1101+ 9213 72           2 ld (hl),d
1102+ 9214 23               inc hl
1103+ 9215 14               inc d
1104+ 9216 10 FB            djnz 2B
1105+ 9218
1106+ 9218 C9               ret
1107+ 9219
1108+ 9219              ; -----------------------------------------------------------------
1109+ 9219              ;
1110+ 9219              ;   12/04/23
1111+ 9219              ;
1112+ 9219
1113+ 9219 3A 1E 8A     Selector_de_impactos ld a,(Impacto2)
1114+ 921C A7               and a
1115+ 921D C8               ret z
1116+ 921E
1117+ 921E FE 04            cp 4
1118+ 9220 20 09            jr nz,1F
1119+ 9222
1120+ 9222
1121+ 9222              ; La colisión se produce por contacto entre Amadeus y una entidad.
1122+ 9222
1123+ 9222 CD 39 90         call Detecta_colision_nave_entidad
1124+ 9225
1125+ 9225 21 1E 8A         ld hl,Impacto2
1126+ 9228 CB 5E            bit 3,(hl)
1127+ 922A C0               ret nz                                               ; Existe colisión, RET.
1128+ 922B
1129+ 922B              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1130+ 922B              ; Primero analizamos si algún disparo impacta en Amadeus.
1131+ 922B
1132+ 922B 21 1E 8A     1 ld hl,Impacto2
1133+ 922E CB 4E            bit 1,(hl)
1134+ 9230 28 07            jr z,2F
1135+ 9232
1136+ 9232 21 9D 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1137+ 9235 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1138+ 9237 18 0B            jr 3F
1139+ 9239
1140+ 9239 21 1E 8A     2 ld hl,Impacto2
1141+ 923C CB 46            bit 0,(hl)
1142+ 923E C8               ret z
1143+ 923F
1144+ 923F              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1145+ 923F
1146+ 923F 21 00 8A         ld hl,Ctrl_1
1147+ 9242 CB D6            set 2,(hl)
1148+ 9244
1149+ 9244 C9           3 ret
1150+ 9245
1151+ 9245              ; -----------------------------------------------------------------
1152+ 9245              ;
1153+ 9245              ;   19/7/23
1154+ 9245              ;
1155+ 9245              ;   Limpia las coordenadas_x de Amadeus y entidad.
1156+ 9245
1157+ 9245 AF           Limpia_Coordenadas_X xor a
1158+ 9246 06 06            ld b,6
1159+ 9248 21 23 8A         ld hl,Coordenadas_X_Amadeus
1160+ 924B 77           1 ld (hl),a
1161+ 924C 23               inc hl
1162+ 924D 10 FC            djnz 1B
1163+ 924F C9               ret
1164+ 9250
1165+ 9250              ; -----------------------------------------------------------------
1166+ 9250              ;
1167+ 9250              ;   25/04/23
1168+ 9250              ;
1169+ 9250
1170+ 9250              Determina_resultado_comparativa
1171+ 9250
1172+ 9250              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1173+ 9250              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1174+ 9250              ;
1175+ 9250              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1176+ 9250              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1177+ 9250              ;
1178+ 9250              ;   SBC HL,DE
1179+ 9250
1180+ 9250              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1181+ 9250              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1182+ 9250
1183+ 9250              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1184+ 9250              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1185+ 9250
1186+ 9250
1187+ 9250 3A D2 89         ld a,(Cuad_objeto)
1188+ 9253 FE 02            cp 2
1189+ 9255 28 26            jr z,2F
1190+ 9257 38 24            jr c,2F
1191+ 9259
1192+ 9259              ; Cuadrantes 3º y 4º
1193+ 9259
1194+ 9259 E6 01            and 1
1195+ 925B 28 10            jr z,4F
1196+ 925D
1197+ 925D              ; Cuadrante 3º
1198+ 925D
1199+ 925D 7C               ld a,h
1200+ 925E 06 00            ld b,0
1201+ 9260
1202+ 9260 CD EB 92         call Compara_cositas_H3
1203+ 9263
1204+ 9263 04               inc b
1205+ 9264 05               dec b
1206+ 9265 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1207+ 9266
1208+ 9266 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1209+ 9267 06 00            ld b,0
1210+ 9269
1211+ 9269 CD FD 92         call Compara_cositas_L3
1212+ 926C C9               ret
1213+ 926D
1214+ 926D              ; Cuadrante 4º
1215+ 926D
1216+ 926D 7C           4 ld a,h
1217+ 926E 06 00            ld b,0
1218+ 9270
1219+ 9270 CD 0F 93         call Compara_cositas_H4
1220+ 9273
1221+ 9273 04               inc b
1222+ 9274 05               dec b
1223+ 9275 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1224+ 9276
1225+ 9276 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1226+ 9277 06 00            ld b,0
1227+ 9279
1228+ 9279 CD 25 93         call Compara_cositas_L4
1229+ 927C C9               ret
1230+ 927D
1231+ 927D              ; Cuadrantes 1º y 2º.
1232+ 927D
1233+ 927D 28 10        2 jr z,3F
1234+ 927F
1235+ 927F              ; 1er Cuadrante
1236+ 927F
1237+ 927F 7C               ld a,h
1238+ 9280 06 00            ld b,0
1239+ 9282
1240+ 9282 CD C3 92         call Compara_cositas_H1
1241+ 9285
1242+ 9285 04               inc b
1243+ 9286 05               dec b
1244+ 9287 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1245+ 9288
1246+ 9288 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1247+ 9289 06 00            ld b,0
1248+ 928B
1249+ 928B CD D9 92         call Compara_cositas_L1
1250+ 928E C9               ret
1251+ 928F
1252+ 928F
1253+ 928F              ; 2º Cuadrante
1254+ 928F
1255+ 928F 7C           3 ld a,h
1256+ 9290 06 00            ld b,0
1257+ 9292
1258+ 9292 CD 9F 92         call Compara_cositas_H2
1259+ 9295
1260+ 9295 04               inc b
1261+ 9296 05               dec b
1262+ 9297 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1263+ 9298
1264+ 9298 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1265+ 9299 06 00            ld b,0
1266+ 929B
1267+ 929B CD B1 92         call Compara_cositas_L2
1268+ 929E C9               ret
1269+ 929F
1270+ 929F A7           Compara_cositas_H2 and a
1271+ 92A0 28 0D            jr z,1F
1272+ 92A2              ;    cp $fd
1273+ 92A2              ;    jr z,1F
1274+ 92A2              ;    cp $fe
1275+ 92A2              ;    jr z,1F
1276+ 92A2 FE FF            cp $ff
1277+ 92A4 28 09            jr z,1F
1278+ 92A6 FE 01            cp $01
1279+ 92A8 28 05            jr z,1F
1280+ 92AA FE 02            cp $02
1281+ 92AC 28 01            jr z,1F
1282+ 92AE C0               ret nz
1283+ 92AF 04           1 inc b
1284+ 92B0 C9               ret
1285+ 92B1
1286+ 92B1 A7           Compara_cositas_L2 and a
1287+ 92B2 28 0D            jr z,1F
1288+ 92B4              ;    cp $fd
1289+ 92B4              ;    jr z,1F
1290+ 92B4 FE FE            cp $fe
1291+ 92B6 28 09            jr z,1F
1292+ 92B8 FE FF            cp $ff
1293+ 92BA 28 05            jr z,1F
1294+ 92BC FE 01            cp $01
1295+ 92BE 28 01            jr z,1F
1296+ 92C0              ;    cp $02
1297+ 92C0              ;    jr z,1F
1298+ 92C0 C0               ret nz
1299+ 92C1 04           1 inc b
1300+ 92C2 C9               ret
1301+ 92C3
1302+ 92C3 A7           Compara_cositas_H1 and a
1303+ 92C4 28 11            jr z,1F
1304+ 92C6              ;    cp $fd
1305+ 92C6              ;    jr z,1F
1306+ 92C6              ;    cp $fe
1307+ 92C6              ;    jr z,1F
1308+ 92C6 FE FF            cp $ff
1309+ 92C8 28 0D            jr z,1F
1310+ 92CA FE 01            cp $01
1311+ 92CC 28 09            jr z,1F
1312+ 92CE FE 02            cp $02
1313+ 92D0 28 05            jr z,1F
1314+ 92D2 FE 03            cp $03
1315+ 92D4 28 01            jr z,1F
1316+ 92D6 C0               ret nz
1317+ 92D7 04           1 inc b
1318+ 92D8 C9               ret
1319+ 92D9
1320+ 92D9 A7           Compara_cositas_L1 and a
1321+ 92DA 28 0D            jr z,1F
1322+ 92DC              ;    cp $fd
1323+ 92DC              ;    jr z,1F
1324+ 92DC              ;    cp $fe
1325+ 92DC              ;    jr z,1F
1326+ 92DC              ;    cp $ff
1327+ 92DC              ;    jr z,1F
1328+ 92DC FE 01            cp $01
1329+ 92DE 28 09            jr z,1F
1330+ 92E0 FE 02            cp $02
1331+ 92E2 28 05            jr z,1F
1332+ 92E4 FE 03            cp $03
1333+ 92E6 28 01            jr z,1F
1334+ 92E8 C0               ret nz
1335+ 92E9 04           1 inc b
1336+ 92EA C9               ret
1337+ 92EB
1338+ 92EB A7           Compara_cositas_H3 and a
1339+ 92EC 28 0D            jr z,1F
1340+ 92EE              ;    cp $fd
1341+ 92EE              ;    jr z,1F
1342+ 92EE FE FE            cp $fe
1343+ 92F0 28 09            jr z,1F
1344+ 92F2 FE FF            cp $ff
1345+ 92F4 28 05            jr z,1F
1346+ 92F6 FE 01            cp $01
1347+ 92F8 28 01            jr z,1F
1348+ 92FA              ;    cp $02
1349+ 92FA              ;    jr z,1F
1350+ 92FA              ;    cp $03
1351+ 92FA              ;    jr z,1F
1352+ 92FA C0               ret nz
1353+ 92FB 04           1 inc b
1354+ 92FC C9               ret
1355+ 92FD
1356+ 92FD A7           Compara_cositas_L3 and a
1357+ 92FE 28 0D            jr z,1F
1358+ 9300              ;    cp $fd
1359+ 9300              ;    jr z,1F
1360+ 9300              ;    cp $fe
1361+ 9300              ;    jr z,1F
1362+ 9300              ;    cp $ff
1363+ 9300              ;    jr z,1F
1364+ 9300 FE 01            cp $01
1365+ 9302 28 09            jr z,1F
1366+ 9304 FE 02            cp $02
1367+ 9306 28 05            jr z,1F
1368+ 9308 FE 03            cp $03
1369+ 930A 28 01            jr z,1F
1370+ 930C C0               ret nz
1371+ 930D 04           1 inc b
1372+ 930E C9               ret
1373+ 930F
1374+ 930F A7           Compara_cositas_H4 and a
1375+ 9310 28 11            jr z,1F
1376+ 9312 FE FD            cp $fd
1377+ 9314 28 0D            jr z,1F
1378+ 9316 FE FE            cp $fe
1379+ 9318 28 09            jr z,1F
1380+ 931A FE FF            cp $ff
1381+ 931C 28 05            jr z,1F
1382+ 931E FE 01            cp $01
1383+ 9320 28 01            jr z,1F
1384+ 9322              ;    cp $02
1385+ 9322              ;    jr z,1F
1386+ 9322              ;    cp $03
1387+ 9322              ;    jr z,1F
1388+ 9322 C0               ret nz
1389+ 9323 04           1 inc b
1390+ 9324 C9               ret
1391+ 9325
1392+ 9325 A7           Compara_cositas_L4 and a
1393+ 9326 28 0D            jr z,1F
1394+ 9328              ;    cp $fd
1395+ 9328              ;    jr z,1F
1396+ 9328 FE FE            cp $fe
1397+ 932A 28 09            jr z,1F
1398+ 932C FE FF            cp $ff
1399+ 932E 28 05            jr z,1F
1400+ 9330 FE 01            cp $01
1401+ 9332 28 01            jr z,1F
1402+ 9334              ;    cp $02
1403+ 9334              ;    jr z,1F
1404+ 9334              ;    cp $03
1405+ 9334              ;    jr z,1F
1406+ 9334 C0               ret nz
1407+ 9335 04           1 inc b
1408+ 9336 C9               ret
# file closed: Disparo.asm
1277  9337              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9337              ; ******************************************************************************************************************************************************************************************
   2+ 9337              ;
   3+ 9337              ; 26/06/23
   4+ 9337              ;
   5+ 9337              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9337
   7+ 9337 CD 1B 96     Draw call Prepara_draw
   8+ 933A 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 933B A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 933C 28 05        	jr z,2F
  11+ 933E
  12+ 933E 3A D2 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 9341 18 0C        	jr 1F
  14+ 9343 2A D0 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  15+ 9346 22 C0 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  16+ 9349 CD D8 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  17+ 934C              ;													; _la esquina superior izquierda de la pantalla.
  18+ 934C CD 86 9E     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  19+ 934F 3A EC 89     1 ld a,(Ctrl_0)
  20+ 9352 CB 6F        	bit 5,a
  21+ 9354 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  22+ 9356
  23+ 9356 CD 6E 93     	call Comprueba_limite_horizontal
  24+ 9359 CD FE 93     	call Comprueba_limite_vertical
  25+ 935C
  26+ 935C              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  27+ 935C
  28+ 935C CD 4B 95     3 call calcula_CColumnass
  29+ 935F CD 82 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  30+ 9362 CD E1 95     	call Define_rutina_de_impresion
  31+ 9365
  32+ 9365 3A EC 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  33+ 9368 CB AF        	res 5,a											; _a ser de utilidad.
  34+ 936A 32 EC 89     	ld (Ctrl_0),a
  35+ 936D
  36+ 936D C9           	ret
  37+ 936E
  38+ 936E              ; *******************************************************************************************************************************************************************************************
  39+ 936E              ;	21/01/23
  40+ 936E              ;
  41+ 936E              ; 	Comprueba_limite_horizontal.
  42+ 936E              ;
  43+ 936E              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  44+ 936E              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  45+ 936E              ;
  46+ 936E              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  47+ 936E              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  48+ 936E              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  49+ 936E              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  50+ 936E
  51+ 936E
  52+ 936E
  53+ 936E 3A EC 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  54+ 9371 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  55+ 9373 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  56+ 9375 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  57+ 9377 32 EC 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  58+ 937A 18 09            jr 6F
  59+ 937C CB 5F        1 bit 3,a
  60+ 937E 28 0A            jr z,2F
  61+ 9380 E6 F7            and $f7
  62+ 9382 32 EC 89         ld (Ctrl_0),a
  63+ 9385 CD D8 94     6 call Inicializacion
  64+ 9388 18 5B            jr 5F
  65+ 938A E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  66+ 938B
  67+ 938B              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  68+ 938B              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  69+ 938B
  70+ 938B EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  71+ 938C 2A FB 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  72+ 938F CD E7 98     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  73+ 9392 67           	ld h,a
  74+ 9393 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  75+ 9394 CD E7 98     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  76+ 9397 67           	ld h,a
  77+ 9398 A7           	and a
  78+ 9399 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  79+ 939B 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  80+ 939C 3A D2 89     	ld a,(Cuad_objeto)
  81+ 939F FE 02        	cp 2
  82+ 93A1 38 1E        	jr c,3F
  83+ 93A3 28 1C        	jr z,3F
  84+ 93A5 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  85+ 93A6 28 23            jr z,7F
  86+ 93A8 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  87+ 93AA 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  88+ 93AC E1           	pop hl
  89+ 93AD
  90+ 93AD              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  91+ 93AD              ; _para indicar con E="2" en caso necesario.
  92+ 93AD
  93+ 93AD E5               push hl
  94+ 93AE C5               push bc
  95+ 93AF CD E7 98     	call calcula_tercio
  96+ 93B2 FE 01        	cp 1
  97+ 93B4 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
  98+ 93B6 CD E6 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
  99+ 93B9 28 26            jr z,9F
 100+ 93BB 38 24            jr c,9F
 101+ 93BD 1E 00        11 ld e,0
 102+ 93BF 18 22            jr 8F
 103+ 93C1 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 104+ 93C2 28 07        	jr z, 7F
 105+ 93C4 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 106+ 93C6 1E 00         	ld e,0
 107+ 93C8 E1           	pop hl
 108+ 93C9 18 04        	jr 4F
 109+ 93CB 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 110+ 93CD 18 15            jr 10F
 111+ 93CF
 112+ 93CF              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 113+ 93CF              ; _para indicar con E="2" en caso necesario.
 114+ 93CF
 115+ 93CF E5           4 push hl
 116+ 93D0 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 117+ 93D1 CD E7 98     	call calcula_tercio
 118+ 93D4 FE 01        	cp 1
 119+ 93D6 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 120+ 93D8 CD E6 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 121+ 93DB 28 04            jr z,9F
 122+ 93DD 30 02            jr nc,9F
 123+ 93DF 18 02        	jr 8F
 124+ 93E1 1E 02        9 ld e,2
 125+ 93E3 C1           8 pop bc
 126+ 93E4 E1           10 pop hl
 127+ 93E5 C9           5 ret
 128+ 93E6
 129+ 93E6              ; --------------------
 130+ 93E6              ;
 131+ 93E6              ; 25/08/22
 132+ 93E6
 133+ 93E6 CD E7 98     Comprueba_centro call calcula_tercio
 134+ 93E9 67               ld h,a
 135+ 93EA 08           	ex af,af
 136+ 93EB FE 02        	cp 2
 137+ 93ED 38 07        	jr c,1F
 138+ 93EF 28 05        	jr z,1F
 139+ 93F1 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 140+ 93F4 18 03        	jr 2F
 141+ 93F6 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 142+ 93F9 08           2 ex af,af
 143+ 93FA A7               and a
 144+ 93FB ED 42            sbc hl,bc
 145+ 93FD C9               ret
 146+ 93FE
 147+ 93FE              ; *********************************************************************************************************************************************************************************************
 148+ 93FE              ;
 149+ 93FE              ;   16/8/22
 150+ 93FE              ;
 151+ 93FE              ;	Comprueba_limite_vertical
 152+ 93FE              ;
 153+ 93FE              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 154+ 93FE              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 155+ 93FE              ;
 156+ 93FE
 157+ 93FE 2A C0 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 158+ 9401 7D           	ld a,l
 159+ 9402 E6 1F        	and $1F
 160+ 9404 57           	ld d,a
 161+ 9405 3A FD 89     	ld a,(Limite_vertical)
 162+ 9408 BA           	cp d 											; Límite - Posición.
 163+ 9409 08           	ex af,af 										; Resultado de CP d en F'.
 164+ 940A 3A D2 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 165+ 940D CB 47        	bit 0,a
 166+ 940F 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 167+ 9411
 168+ 9411              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 169+ 9411
 170+ 9411 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 171+ 9412 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 172+ 9414
 173+ 9414              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 174+ 9414              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 175+ 9414
 176+ 9414 3A C4 89         ld a,(Coordenada_X)
 177+ 9417 16 0F            ld d,Centro_izquierda
 178+ 9419 A7               and a
 179+ 941A 92               sub d 											 ; Posición - Centro_izquierda.
 180+ 941B 28 1E            jr z,3F
 181+ 941D 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 182+ 941F              ;                                                    ; _salimos sin modificar nada.
 183+ 941F 18 0E            jr 2F
 184+ 9421 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 185+ 9422 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 186+ 9424
 187+ 9424              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 188+ 9424              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 189+ 9424
 190+ 9424 3A C4 89         ld a,(Coordenada_X)
 191+ 9427 16 10            ld d,Centro_derecha
 192+ 9429 A7               and a
 193+ 942A 92               sub d
 194+ 942B 28 0E            jr z,3F
 195+ 942D 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 196+ 942F              ;                                                    ; _salimos sin modificar nada.
 197+ 942F CB 43        2 bit 0,e
 198+ 9431 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 199+ 9433 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 200+ 9434 CD C8 94         call Modificaccionne
 201+ 9437 C1           	pop bc
 202+ 9438 CD D8 94         call Inicializacion
 203+ 943B C9           3 ret 				 								 ; Salimos de la rutina.
 204+ 943C
 205+ 943C              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 206+ 943C
 207+ 943C C5           4 push bc
 208+ 943D 01 BF 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 209+ 9440 0A           	ld a,(bc)
 210+ 9441 3D           	dec a
 211+ 9442 47           	ld b,a 											 ; Columnas-1 en B.
 212+ 9443 7D           	ld a,l
 213+ 9444 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 214+ 9445 CB 47        	bit 0,a
 215+ 9447 28 03        	jr z,5F
 216+ 9449 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 217+ 944A 18 2E        	jr 7F
 218+ 944C
 219+ 944C              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 220+ 944C
 221+ 944C 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 222+ 944D F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 223+ 944E 3A EC 89     	ld a,(Ctrl_0)
 224+ 9451 CB 4F        	bit 1,a
 225+ 9453 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 226+ 9455 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 227+ 9456
 228+ 9456              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 229+ 9456
 230+ 9456 1C               inc e
 231+ 9457 1D               dec e
 232+ 9458 20 07            jr nz,12F
 233+ 945A 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 234+ 945B 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 235+ 945C 22 C0 89     	ld (Posicion_actual),hl
 236+ 945F 18 44        13 jr 9F
 237+ 9461 CB 43        12 bit 0,e
 238+ 9463 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 239+ 9465              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 240+ 9465 C1           	pop bc
 241+ 9466 18 D3        	jr 3B
 242+ 9468 80           14 add b
 243+ 9469 6F               ld l,a
 244+ 946A 22 C0 89     	ld (Posicion_actual),hl
 245+ 946D CD C8 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 246+ 9470 18 33            jr 9F 											 ; _inicializamos y salimos.
 247+ 9472 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 248+ 9474 32 EC 89         ld (Ctrl_0),a
 249+ 9477 F1           	pop af
 250+ 9478 18 2B        	jr 9F
 251+ 947A
 252+ 947A              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 253+ 947A
 254+ 947A F5           7 push af
 255+ 947B 3A EC 89     	ld a,(Ctrl_0)
 256+ 947E CB 47        	bit 0,a
 257+ 9480 20 1D        	jr nz,8F
 258+ 9482 F1           	pop af
 259+ 9483
 260+ 9483              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 261+ 9483
 262+ 9483 1C           	inc e
 263+ 9484 1D               dec e
 264+ 9485 20 07            jr nz,10F
 265+ 9487 90           	sub b
 266+ 9488 6F               ld l,a
 267+ 9489 22 C0 89     	ld (Posicion_actual),hl
 268+ 948C 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 269+ 948E              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 270+ 948E CB 43        10 bit 0,e
 271+ 9490 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 272+ 9492              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 273+ 9492 C1           	pop bc
 274+ 9493 18 A6        	jr 3B
 275+ 9495 90           16 sub b
 276+ 9496 6F               ld l,a
 277+ 9497 22 C0 89     	ld (Posicion_actual),hl
 278+ 949A CD C8 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 279+ 949D 18 06            jr 9F
 280+ 949F E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 281+ 94A1 32 EC 89         ld (Ctrl_0),a
 282+ 94A4 F1           	pop af
 283+ 94A5 C1           9 pop bc
 284+ 94A6 1E 00        	ld e,0
 285+ 94A8 CD D8 94         call Inicializacion
 286+ 94AB F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 287+ 94AC 08           	ex af,af
 288+ 94AD F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 289+ 94AE 18 8B            jr 3B
 290+ 94B0
 291+ 94B0              ; --------------------
 292+ 94B0
 293+ 94B0 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 294+ 94B2 CD 36 96     1 call PreviousScan
 295+ 94B5 10 FB            djnz 1B
 296+ 94B7 22 C0 89     	ld (Posicion_actual),hl
 297+ 94BA AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 298+ 94BB C9           	ret
 299+ 94BC
 300+ 94BC              ; --------------------
 301+ 94BC
 302+ 94BC 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 303+ 94BE CD 27 96     1 call NextScan
 304+ 94C1 10 FB            djnz 1B
 305+ 94C3 22 C0 89     	ld (Posicion_actual),hl
 306+ 94C6 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 307+ 94C7 C9           	ret
 308+ 94C8
 309+ 94C8              ; --------------------
 310+ 94C8              ;
 311+ 94C8              ;	22/01/23
 312+ 94C8              ;
 313+ 94C8              ;	E="1". Hemos cambiado de cuadrante.
 314+ 94C8              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 315+ 94C8              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 316+ 94C8
 317+ 94C8
 318+ 94C8              Modificaccionne
 319+ 94C8
 320+ 94C8 3A D2 89     	ld a,(Cuad_objeto)
 321+ 94CB FE 02        	cp 2
 322+ 94CD CC B0 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 323+ 94D0 DC B0 94         call c,Modifica_Pos_actual
 324+ 94D3 C8           	ret z
 325+ 94D4 CD BC 94         call Modifica_Pos_actual2
 326+ 94D7 C9               ret
 327+ 94D8
 328+ 94D8              ; *************************************************************************************************************************************************************************************************
 329+ 94D8              ;
 330+ 94D8              ;	13/8/22
 331+ 94D8              ;
 332+ 94D8              ;	Inicializacion
 333+ 94D8              ;
 334+ 94D8              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 335+ 94D8              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 336+ 94D8              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 337+ 94D8              ;
 338+ 94D8              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 339+ 94D8              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 340+ 94D8              ;	_ desaparece/aparece.
 341+ 94D8
 342+ 94D8              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 343+ 94D8              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 344+ 94D8              ;
 345+ 94D8              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 346+ 94D8              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 347+ 94D8              ; 		   [E] ="0"
 348+ 94D8
 349+ 94D8              ; 	OUTPUT: DESTRUYE [AF] y [D].
 350+ 94D8
 351+ 94D8 CD E7 98     Inicializacion call calcula_tercio
 352+ 94DB 28 36        	jr z,primit
 353+ 94DD E6 02        	and 2
 354+ 94DF 20 07        	jr nz,segmit
 355+ 94E1 7D           	ld a,l
 356+ 94E2 FE 7F        	cp $7f
 357+ 94E4 38 2D        	jr c,primit
 358+ 94E6 28 2B        	jr z,primit
 359+ 94E8 CD 45 95     segmit call column
 360+ 94EB 38 13        	jr c,tercuad
 361+ 94ED 3E 04        cuarcuad ld a,4
 362+ 94EF 32 D2 89     	ld (Cuad_objeto),a
 363+ 94F2 21 20 48     	ld hl,$4820
 364+ 94F5 22 FB 89     	ld (Limite_horizontal),hl
 365+ 94F8 21 FD 89     	ld hl,Limite_vertical
 366+ 94FB 36 0D        	ld (hl),$0d
 367+ 94FD 08           	ex af,af
 368+ 94FE 18 3C        	jr 1F
 369+ 9500              tercuad
 370+ 9500 3E 03        	ld a,3
 371+ 9502 32 D2 89     	ld (Cuad_objeto),a
 372+ 9505 21 20 48     	ld hl,$4820
 373+ 9508 22 FB 89     	ld (Limite_horizontal),hl
 374+ 950B 21 FD 89     	ld hl,Limite_vertical
 375+ 950E 36 12        	ld (hl),$12
 376+ 9510 08           	ex af,af
 377+ 9511 18 29        	jr 1F
 378+ 9513 CD 45 95     primit call column
 379+ 9516 38 13        	jr c, primcuad
 380+ 9518              segcuad
 381+ 9518 3E 02        	ld a,2
 382+ 951A 32 D2 89     	ld (Cuad_objeto),a
 383+ 951D 21 C0 4F     	ld hl,$4fc0
 384+ 9520 22 FB 89     	ld (Limite_horizontal),hl
 385+ 9523 21 FD 89     	ld hl,Limite_vertical
 386+ 9526 36 0D        	ld (hl),$0d
 387+ 9528 08           	ex af,af
 388+ 9529 18 11        	jr 1F
 389+ 952B              primcuad
 390+ 952B 3E 01        	ld a,1
 391+ 952D 32 D2 89     	ld (Cuad_objeto),a
 392+ 9530 21 C0 4F     	ld hl,$4fc0
 393+ 9533 22 FB 89     	ld (Limite_horizontal),hl
 394+ 9536 21 FD 89     	ld hl,Limite_vertical
 395+ 9539 36 12        	ld (hl),$12
 396+ 953B 08           	ex af,af
 397+ 953C CD 72 9C     1 call Genera_coordenadas
 398+ 953F 21 EC 89     	ld hl,Ctrl_0
 399+ 9542 CB EE        	set 5,(hl)
 400+ 9544 C9           	ret
 401+ 9545
 402+ 9545              ; ------------------------------------------------------------------------------------------------------------------
 403+ 9545
 404+ 9545              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 405+ 9545              ;
 406+ 9545              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 407+ 9545
 408+ 9545 7D           column ld a,l
 409+ 9546 E6 1F        	and $1f
 410+ 9548 FE 10         	cp $10
 411+ 954A C9            	ret
 412+ 954B
 413+ 954B              ; --------------------------------------------------------------------------------------------------------------------
 414+ 954B              ;
 415+ 954B              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 416+ 954B              ;
 417+ 954B              ; 14/12/22
 418+ 954B              ;
 419+ 954B              ;	Modifica: A y BC.
 420+ 954B
 421+ 954B 3A D2 89     calcula_CColumnass ld a,(Cuad_objeto)
 422+ 954E E6 01        	and 1
 423+ 9550 28 17        	jr z,1F
 424+ 9552
 425+ 9552              ; Nos encontramos en la parte izquierda de la pantalla
 426+ 9552
 427+ 9552 3A C4 89     	ld a,(Coordenada_X)
 428+ 9555 47           	ld b,a
 429+ 9556 04           	inc b											; (Coordenada_X)+1 en B.
 430+ 9557 79           	ld a,c
 431+ 9558 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 432+ 9559 38 08        	jr c,2F
 433+ 955B 47           	ld b,a
 434+ 955C 79           	ld a,c
 435+ 955D 90           	sub b
 436+ 955E 32 FA 89     	ld (Columnas),a
 437+ 9561 18 1B        	jr 4F
 438+ 9563 79           2 ld a,c
 439+ 9564 32 FA 89     	ld (Columnas),a
 440+ 9567 18 15        	jr 4F
 441+ 9569
 442+ 9569              ; Nos encontramos en la parte derecha de la pantalla.
 443+ 9569
 444+ 9569 3A C4 89     1 ld a,(Coordenada_X)
 445+ 956C 81           	add c
 446+ 956D 3D           	dec a
 447+ 956E D6 1F        	sub $1f
 448+ 9570 38 08        	jr c,3F
 449+ 9572 47           	ld b,a
 450+ 9573 79           	ld a,c
 451+ 9574 90           	sub b
 452+ 9575 32 FA 89     	ld (Columnas),a
 453+ 9578 18 04        	jr 4F
 454+ 957A 79           3 ld a,c
 455+ 957B 32 FA 89     	ld (Columnas),a
 456+ 957E D9           4 exx
 457+ 957F 4F           	ld c,a
 458+ 9580 D9           	exx
 459+ 9581 C9            ret
 460+ 9582
 461+ 9582              ; --------------------------------------------------------------------------------------------------------------------
 462+ 9582              ;
 463+ 9582              ;   19/7/23
 464+ 9582              ;
 465+ 9582              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 466+ 9582              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 467+ 9582              ;
 468+ 9582              ;	OUTPUT: IX Contienen el puntero de impresión.
 469+ 9582              ;			HL e IY Contienen (Puntero_objeto).
 470+ 9582              ;
 471+ 9582              ;	DESTRUYE: HL,B Y A.
 472+ 9582
 473+ 9582 3A D2 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 474+ 9585 FE 02        	cp 2
 475+ 9587 38 18        	jr c,1F
 476+ 9589 28 16        	jr z,1F
 477+ 958B E6 01        	and 1
 478+ 958D 28 0D        	jr z,3F
 479+ 958F
 480+ 958F              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 481+ 958F
 482+ 958F CD D5 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 483+ 9592
 484+ 9592 7D           9 ld a,l
 485+ 9593 E6 1F        	and $1f
 486+ 9595 28 2A        	jr z,7F
 487+ 9597 2B           	dec hl
 488+ 9598 10 F8        	djnz 9B
 489+ 959A 18 25        	jr 7F
 490+ 959C
 491+ 959C              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 492+ 959C
 493+ 959C 2A C0 89     3 ld hl,(Posicion_actual)
 494+ 959F 18 20        	jr 7F
 495+ 95A1
 496+ 95A1 28 14        1 jr z,2F
 497+ 95A3
 498+ 95A3              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 499+ 95A3
 500+ 95A3 CD D5 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 95A6
 502+ 95A6 7D           4 ld a,l
 503+ 95A7 E6 1F        	and $1f
 504+ 95A9 28 03        	jr z,6F
 505+ 95AB 2B           	dec hl
 506+ 95AC 10 F8        	djnz 4B
 507+ 95AE 06 0F        6 ld b,15
 508+ 95B0 CD 36 96     5 call PreviousScan
 509+ 95B3 10 FB        	djnz 5B
 510+ 95B5 18 0A        	jr 7F
 511+ 95B7
 512+ 95B7              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 513+ 95B7
 514+ 95B7 CD D5 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 515+ 95BA 06 0F        	ld b,15
 516+ 95BC CD 36 96     8 call PreviousScan
 517+ 95BF 10 FB        	djnz 8B
 518+ 95C1
 519+ 95C1 E5           7 push hl
 520+ 95C2 DD E1        	pop ix
 521+ 95C4
 522+ 95C4 2A C2 89     	ld hl,(Puntero_objeto)
 523+ 95C7 E5           	push hl
 524+ 95C8 FD E1        	pop iy
 525+ 95CA
 526+ 95CA              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 527+ 95CA
 528+ 95CA 3A EC 89     	ld a,(Ctrl_0)
 529+ 95CD CB 77        	bit 6,a
 530+ 95CF C8           	ret z
 531+ 95D0
 532+ 95D0              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 533+ 95D0              ; _ entidad / Amadeus´.
 534+ 95D0
 535+ 95D0 DD 22 29 8A  	ld (Puntero_de_impresion_Amadeus),ix
 536+ 95D4
 537+ 95D4 C9           	ret
 538+ 95D5
 539+ 95D5              ; --------------------------------------------------------------------------------------------------------------------
 540+ 95D5              ;
 541+ 95D5              ;	2/1/23
 542+ 95D5              ;
 543+ 95D5              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 544+ 95D5              ;
 545+ 95D5              ;	Tras esta rutina tenemos:
 546+ 95D5              ;
 547+ 95D5              ;	OUTPUT: HL contiene (Posicion_actual).
 548+ 95D5              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 549+ 95D5              ;
 550+ 95D5              ;	DESTRUYE!!!!! HL,B y A.
 551+ 95D5
 552+ 95D5 2A C0 89     Operandos ld hl,(Posicion_actual)
 553+ 95D8 3A FA 89     	ld a,(Columnas)
 554+ 95DB 3D           	dec a
 555+ 95DC 20 01        	jr nz,1F
 556+ 95DE 3C           	inc a
 557+ 95DF 47           1 ld b,a
 558+ 95E0 C9           	ret
 559+ 95E1
 560+ 95E1              ; --------------------------------------------------------------------------------------------------------------------
 561+ 95E1              ;
 562+ 95E1              ;	3/1/23
 563+ 95E1              ;
 564+ 95E1              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 565+ 95E1              ;
 566+ 95E1              ;	Destruye: A,B,HL y DE.
 567+ 95E1
 568+ 95E1              Define_rutina_de_impresion
 569+ 95E1
 570+ 95E1 3A BF 89     	ld a,(Columns)
 571+ 95E4 47           	ld b,a
 572+ 95E5 3A FA 89     	ld a,(Columnas)
 573+ 95E8 B8           	cp b
 574+ 95E9 20 0D        	jr nz,2f
 575+ 95EB
 576+ 95EB              ;	La entidad se imprime entera.
 577+ 95EB
 578+ 95EB 21 B7 96     	ld hl, Indice_entidades_completas
 579+ 95EE E6 01        	and 1
 580+ 95F0 28 02        	jr z,1F
 581+ 95F2
 582+ 95F2 23           	inc hl
 583+ 95F3 23           	inc hl
 584+ 95F4
 585+ 95F4 CD 28 8D     1 call Extrae_address
 586+ 95F7 C9           	ret		;	ret
 587+ 95F8
 588+ 95F8              ;	La entidad no se imprime entera en pantalla.
 589+ 95F8
 590+ 95F8 3A D2 89     2 ld a,(Cuad_objeto)
 591+ 95FB E6 01        	and 1
 592+ 95FD 28 17        	jr z,3F
 593+ 95FF
 594+ 95FF              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 595+ 95FF
 596+ 95FF 21 BB 96     	ld hl, Indice_entidades_incompletas_izquierda
 597+ 9602 3A BF 89     4 ld a,(Columns)
 598+ 9605 E6 01        	and 1
 599+ 9607 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 600+ 9609
 601+ 9609 23           	inc hl
 602+ 960A 23           	inc hl
 603+ 960B
 604+ 960B 3A FA 89     	ld a,(Columnas)
 605+ 960E E6 01        	and 1
 606+ 9610 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 607+ 9612
 608+ 9612 23           	inc hl
 609+ 9613 23           	inc hl
 610+ 9614
 611+ 9614 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 612+ 9616
 613+ 9616 21 C1 96     3 ld hl, Indice_entidades_incompletas_derecha
 614+ 9619 18 E7        	jr 4B
 615+ 961B
 616+ 961B              ; --------------------------------------------------------------------------------------------------------------------
 617+ 961B              ;
 618+ 961B              ;	Prepara_draw
 619+ 961B              ;
 620+ 961B              ;	Es una rutina de carga.
 621+ 961B              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 622+ 961B              ;
 623+ 961B              ;	FUNCIONAMIENTO:
 624+ 961B              ;
 625+ 961B              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 626+ 961B              ;	- LD (Posicion_actual) del objeto en [HL].
 627+ 961B              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 628+ 961B              ;
 629+ 961B              ;	DESTRUYE:
 630+ 961B              ;
 631+ 961B              ;	Logicamente, BC,HL y E quedan destruidos.
 632+ 961B
 633+ 961B 21 BE 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 634+ 961E 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 635+ 961F 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 636+ 9620 4E           	ld c,(hl)
 637+ 9621 2A C0 89     	ld hl,(Posicion_actual)
 638+ 9624 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 639+ 9626 C9           	ret
 640+ 9627
 641+ 9627              ;----------------------------------------------------------------------------------------------------------------
 642+ 9627              ;
 643+ 9627              ;	5/08/22
 644+ 9627              ;
 645+ 9627              ;   NextScan.
 646+ 9627              ;
 647+ 9627              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 648+ 9627              ;
 649+ 9627              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 650+ 9627              ;
 651+ 9627              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 652+ 9627              ;
 653+ 9627              ;       DESTRUIDOS: AF y HL !!!
 654+ 9627              ;
 655+ 9627              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 656+ 9627              ;
 657+ 9627
 658+ 9627 24           NextScan inc h          ; Incrementamos el scanline.
 659+ 9628 7C               ld a,h
 660+ 9629 E6 07            and 7
 661+ 962B C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 662+ 962C
 663+ 962C 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 664+ 962D C6 20            add a,$20           ; Vamos a comprobarlo...
 665+ 962F 6F               ld l,a
 666+ 9630 D8               ret c               ; Salimos si se produce el cambio de tercio.
 667+ 9631
 668+ 9631 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 669+ 9632 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 670+ 9634 67               ld h,a
 671+ 9635 C9               ret
 672+ 9636
 673+ 9636              ;----------------------------------------------------------------------------------------------------------------
 674+ 9636              ;
 675+ 9636              ;	5/08/22
 676+ 9636              ;
 677+ 9636              ;   PreviousScan.
 678+ 9636              ;
 679+ 9636              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 680+ 9636              ;
 681+ 9636              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 682+ 9636              ;
 683+ 9636              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 684+ 9636              ;
 685+ 9636              ;       DESTRUIDOS: AF y HL !!!
 686+ 9636              ;
 687+ 9636              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 688+ 9636              ;
 689+ 9636
 690+ 9636 7C           PreviousScan ld a,h
 691+ 9637 25               dec h               ; Dec H.
 692+ 9638 E6 07            and 7
 693+ 963A C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 694+ 963B
 695+ 963B 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 696+ 963C D6 20            sub $20             ; Vamos a comprobarlo...
 697+ 963E 6F               ld l,a
 698+ 963F D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 699+ 9640
 700+ 9640 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 701+ 9641 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 702+ 9643 67               ld h,a
 703+ 9644 C9               ret
 704+ 9645
 705+ 9645              ; -----------------------------------------------------------------------------------
 706+ 9645              ;
 707+ 9645              ;	28/2/23
 708+ 9645              ;
 709+ 9645              ;	Rutina principal de pintado de entidades/Amadeus.
 710+ 9645              ;	Extrae fotos de Album_de_fotos.
 711+ 9645
 712+ 9645 3A 0C 8A     Extrae_foto_entidades ld a,(Numero_de_malotes)
 713+ 9648 A7           	and a
 714+ 9649 C8           	ret z
 715+ 964A ED 73 11 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 716+ 964E 31 00 70     	ld sp,Album_de_fotos
 717+ 9651
 718+ 9651 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 719+ 9653 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 720+ 9654 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 721+ 9655
 722+ 9655 ED 73 13 8A  	ld (Stack_2),sp
 723+ 9659 ED 7B 11 8A  	ld sp,(Stack)
 724+ 965D
 725+ 965D              ; Fabrica la llamada a la correspondiente rutina de impresión.
 726+ 965D
 727+ 965D 3E CD        	ld a,$cd
 728+ 965F 32 67 96     	ld (Imprime),a
 729+ 9662 EB           	ex de,hl
 730+ 9663 22 68 96     	ld (Imprime+1),hl
 731+ 9666 EB           	ex de,hl
 732+ 9667
 733+ 9667              ; Ejecuta la llamada:	CALL $xx,xx
 734+ 9667
 735+ 9667 00 00 00     Imprime db 0,0,0
 736+ 966A
 737+ 966A 3A 0C 8A     	ld a,(Numero_de_malotes)
 738+ 966D 3D           	dec a
 739+ 966E 28 09        	jr z,1F
 740+ 9670 32 0C 8A      	ld (Numero_de_malotes),a
 741+ 9673
 742+ 9673 ED 7B 13 8A   	ld sp,(Stack_2)
 743+ 9677 18 D8        	jr 2B
 744+ 9679
 745+ 9679 AF           1 xor a
 746+ 967A 32 13 8A     	ld (Stack_2),a
 747+ 967D C9           	ret
 748+ 967E
 749+ 967E              ; -----------------------------------------------------------------------------------
 750+ 967E              ;
 751+ 967E              ;	28/2/23
 752+ 967E              ;
 753+ 967E              ;	Pinta los disparos generados.
 754+ 967E
 755+ 967E              Extrae_foto_disparos
 756+ 967E
 757+ 967E 3A 19 8A     	ld a,(Numero_de_disparotes)
 758+ 9681 A7           	and a
 759+ 9682 C8           	ret z
 760+ 9683 ED 73 11 8A  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 761+ 9687 31 85 70     	ld sp,Album_de_fotos_disparos
 762+ 968A
 763+ 968A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 764+ 968C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 765+ 968D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 766+ 968E
 767+ 968E ED 73 13 8A  	ld (Stack_2),sp
 768+ 9692 ED 7B 11 8A  	ld sp,(Stack)
 769+ 9696
 770+ 9696              ; Fabrica la llamada a la correspondiente rutina de impresión.
 771+ 9696
 772+ 9696 3E CD        	ld a,$cd
 773+ 9698 32 A0 96     	ld (Imprime2),a
 774+ 969B EB           	ex de,hl
 775+ 969C 22 A1 96     	ld (Imprime2+1),hl
 776+ 969F EB           	ex de,hl
 777+ 96A0
 778+ 96A0              ; Ejecuta la llamada:	CALL $xx,xx
 779+ 96A0
 780+ 96A0 00 00 00     Imprime2 db 0,0,0
 781+ 96A3
 782+ 96A3 3A 19 8A     	ld a,(Numero_de_disparotes)
 783+ 96A6 3D           	dec a
 784+ 96A7 28 09        	jr z,1F
 785+ 96A9 32 19 8A      	ld (Numero_de_disparotes),a
 786+ 96AC
 787+ 96AC ED 7B 13 8A  	ld sp,(Stack_2)
 788+ 96B0 18 D8        	jr 2B
 789+ 96B2
 790+ 96B2 AF           1 xor a
 791+ 96B3 32 13 8A     	ld (Stack_2),a
 792+ 96B6 C9           	ret
 793+ 96B7
# file closed: Draw_XOR.asm
1278  96B7              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 96B7              ;   índices de Rutinas de impresión.
   2+ 96B7
   3+ 96B7 C7 96        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 96B9 F4 96            defw Pinta_Amadeus_3x2
   5+ 96BB
   6+ 96BB 4A 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 96BD EA 97            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 96BF 9E 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 96C1
  10+ 96C1 74 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 96C3 78 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 96C5 2C 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 96C7
  14+ 96C7
  15+ 96C7              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 96C7              ;
  17+ 96C7              ;   12/12/22
  18+ 96C7              ;
  19+ 96C7              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 96C7              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 96C7              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 96C7              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 96C7              ;
  24+ 96C7              ;   Modifica: DE y HL.
  25+ 96C7
  26+ 96C7 ED 73 11 8A  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 96CB FD F9        	ld sp,iy
  28+ 96CD 06 10            ld b,16
  29+ 96CF D1           1 pop de
  30+ 96D0 7B               ld a,e
  31+ 96D1 AE               xor (hl)
  32+ 96D2 77           	ld (hl),a
  33+ 96D3 23           	inc hl
  34+ 96D4 7A               ld a,d
  35+ 96D5 AE               xor (hl)
  36+ 96D6 77           	ld (hl),a
  37+ 96D7 2B           	dec hl
  38+ 96D8 24           	inc h
  39+ 96D9 7C               ld a,h
  40+ 96DA E6 07            and 7
  41+ 96DC 20 0A            jr nz,2F
  42+ 96DE 7D               ld a,l
  43+ 96DF C6 20            add a,$20
  44+ 96E1 6F               ld l,a
  45+ 96E2 38 04            jr c,2F
  46+ 96E4 7C               ld a,h
  47+ 96E5 D6 08            sub 8
  48+ 96E7 67               ld h,a
  49+ 96E8 7C           2 ld a,h
  50+ 96E9 FE 58            cp $58
  51+ 96EB 28 02            jr z,3F
  52+ 96ED 10 E0            djnz 1B
  53+ 96EF ED 7B 11 8A  3 ld sp,(Stack)
  54+ 96F3 C9           	ret
  55+ 96F4
  56+ 96F4 ED 73 11 8A  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 96F8 FD F9        	ld sp,iy
  58+ 96FA 06 08            ld b,8
  59+ 96FC D1           1 pop de
  60+ 96FD 7B               ld a,e
  61+ 96FE AE               xor (hl)
  62+ 96FF 77           	ld (hl),a
  63+ 9700 23           	inc hl
  64+ 9701 7A               ld a,d
  65+ 9702 AE               xor (hl)
  66+ 9703 77           	ld (hl),a
  67+ 9704 23           	inc hl
  68+ 9705 D1           	pop de
  69+ 9706 7B               ld a,e
  70+ 9707 AE               xor (hl)
  71+ 9708 77           	ld (hl),a
  72+ 9709 2B           	dec hl
  73+ 970A 2B           	dec hl
  74+ 970B 24           	inc h
  75+ 970C 7C               ld a,h
  76+ 970D E6 07            and 7
  77+ 970F 20 0A            jr nz,2F
  78+ 9711 7D               ld a,l
  79+ 9712 C6 20            add a,$20
  80+ 9714 6F               ld l,a
  81+ 9715 38 04            jr c,2F
  82+ 9717 7C               ld a,h
  83+ 9718 D6 08            sub 8
  84+ 971A 67               ld h,a
  85+ 971B 7C           2 ld a,h
  86+ 971C FE 58            cp $58
  87+ 971E 28 25            jr z,4F
  88+ 9720 7A               ld a,d
  89+ 9721 AE               xor (hl)
  90+ 9722 77               ld (hl),a
  91+ 9723 D1           	pop de
  92+ 9724 23           	inc hl
  93+ 9725 7B               ld a,e
  94+ 9726 AE               xor (hl)
  95+ 9727 77           	ld (hl),a
  96+ 9728 23           	inc hl
  97+ 9729 7A               ld a,d
  98+ 972A AE               xor (hl)
  99+ 972B 77           	ld (hl),a
 100+ 972C 2B           	dec hl
 101+ 972D 2B           	dec hl
 102+ 972E 24           	inc h
 103+ 972F 7C               ld a,h
 104+ 9730 E6 07            and 7
 105+ 9732 20 0A            jr nz,3F
 106+ 9734 7D               ld a,l
 107+ 9735 C6 20            add a,$20
 108+ 9737 6F               ld l,a
 109+ 9738 38 04            jr c,3F
 110+ 973A 7C               ld a,h
 111+ 973B D6 08            sub 8
 112+ 973D 67               ld h,a
 113+ 973E 7C           3 ld a,h
 114+ 973F FE 58            cp $58
 115+ 9741 28 02            jr z,4F
 116+ 9743 10 B7            djnz 1B
 117+ 9745 ED 7B 11 8A  4 ld sp,(Stack)
 118+ 9749 C9           	ret
 119+ 974A
 120+ 974A              ; ---------------------------------------------------
 121+ 974A
 122+ 974A ED 73 11 8A  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 974E FD F9        	ld sp,iy
 124+ 9750
 125+ 9750              ; >>>
 126+ 9750
 127+ 9750 06 10            ld b,16
 128+ 9752 D1           1 pop de
 129+ 9753 7A           	ld a,d
 130+ 9754 AE           	xor (hl)
 131+ 9755 77           	ld (hl),a
 132+ 9756 24           	inc h
 133+ 9757 7C               ld a,h
 134+ 9758 E6 07            and 7
 135+ 975A 20 0C            jr nz,2F
 136+ 975C 7D               ld a,l
 137+ 975D C6 20            add a,$20
 138+ 975F 6F               ld l,a
 139+ 9760 38 06            jr c,2F
 140+ 9762 7C               ld a,h
 141+ 9763 D6 08            sub 8
 142+ 9765 67               ld h,a
 143+ 9766 18 00            jr 2F
 144+ 9768 7C           2 ld a,h
 145+ 9769 FE 58            cp $58
 146+ 976B 28 02            jr z,3F
 147+ 976D 10 E3            djnz 1B
 148+ 976F ED 7B 11 8A  3 ld sp,(Stack)
 149+ 9773 C9           	ret
 150+ 9774
 151+ 9774 ED 73 11 8A  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 9778 FD F9        	ld sp,iy
 153+ 977A
 154+ 977A              ; >>>
 155+ 977A
 156+ 977A 06 10            ld b,16
 157+ 977C D1           1 pop de
 158+ 977D 7B           	ld a,e
 159+ 977E AE           	xor (hl)
 160+ 977F 77           	ld (hl),a
 161+ 9780 24           	inc h
 162+ 9781 7C               ld a,h
 163+ 9782 E6 07            and 7
 164+ 9784 20 0C            jr nz,2F
 165+ 9786 7D               ld a,l
 166+ 9787 C6 20            add a,$20
 167+ 9789 6F               ld l,a
 168+ 978A 38 06            jr c,2F
 169+ 978C 7C               ld a,h
 170+ 978D D6 08            sub 8
 171+ 978F 67               ld h,a
 172+ 9790 18 00            jr 2F
 173+ 9792 7C           2 ld a,h
 174+ 9793 FE 58            cp $58
 175+ 9795 28 02            jr z,3F
 176+ 9797 10 E3            djnz 1B
 177+ 9799 ED 7B 11 8A  3 ld sp,(Stack)
 178+ 979D C9           	ret
 179+ 979E
 180+ 979E              ; ---------------------------------------------------
 181+ 979E
 182+ 979E ED 73 11 8A  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97A2 FD F9        	ld sp,iy
 184+ 97A4 06 08            ld b,8
 185+ 97A6 D1           1 pop de
 186+ 97A7 7A           	ld a,d
 187+ 97A8 AE           	xor (hl)
 188+ 97A9 77           	ld (hl),a
 189+ 97AA 23           	inc hl
 190+ 97AB D1           	pop de
 191+ 97AC 7B           	ld a,e
 192+ 97AD AE           	xor (hl)
 193+ 97AE 77           	ld (hl),a
 194+ 97AF 2B           	dec hl
 195+ 97B0 24            	inc h
 196+ 97B1 7C               ld a,h
 197+ 97B2 E6 07            and 7
 198+ 97B4 20 0A            jr nz,2F
 199+ 97B6 7D               ld a,l
 200+ 97B7 C6 20            add a,$20
 201+ 97B9 6F               ld l,a
 202+ 97BA 38 04            jr c,2F
 203+ 97BC 7C               ld a,h
 204+ 97BD D6 08            sub 8
 205+ 97BF 67               ld h,a
 206+ 97C0 7C           2 ld a,h
 207+ 97C1 FE 58            cp $58
 208+ 97C3 28 20            jr z,4F
 209+ 97C5 D1               pop de
 210+ 97C6 7B           	ld a,e
 211+ 97C7 AE           	xor (hl)
 212+ 97C8 77           	ld (hl),a
 213+ 97C9 23           	inc hl
 214+ 97CA 7A           	ld a,d
 215+ 97CB AE           	xor (hl)
 216+ 97CC 77           	ld (hl),a
 217+ 97CD 2B           	dec hl
 218+ 97CE 24           	inc h
 219+ 97CF 7C               ld a,h
 220+ 97D0 E6 07            and 7
 221+ 97D2 20 0A            jr nz,3F
 222+ 97D4 7D               ld a,l
 223+ 97D5 C6 20            add a,$20
 224+ 97D7 6F               ld l,a
 225+ 97D8 38 04            jr c,3F
 226+ 97DA 7C               ld a,h
 227+ 97DB D6 08            sub 8
 228+ 97DD 67               ld h,a
 229+ 97DE 7C           3 ld a,h
 230+ 97DF FE 58            cp $58
 231+ 97E1 28 02            jr z,4F
 232+ 97E3 10 C1            djnz 1B
 233+ 97E5 ED 7B 11 8A  4 ld sp,(Stack)
 234+ 97E9 C9           	ret
 235+ 97EA
 236+ 97EA ED 73 11 8A  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 97EE FD F9        	ld sp,iy
 238+ 97F0 06 08            ld b,8
 239+ 97F2 D1           1 pop de
 240+ 97F3 D1           	pop de
 241+ 97F4 7B           	ld a,e
 242+ 97F5 AE           	xor (hl)
 243+ 97F6 77           	ld (hl),a
 244+ 97F7 24            	inc h
 245+ 97F8 7C               ld a,h
 246+ 97F9 E6 07            and 7
 247+ 97FB 20 0A            jr nz,2F
 248+ 97FD 7D               ld a,l
 249+ 97FE C6 20            add a,$20
 250+ 9800 6F               ld l,a
 251+ 9801 38 04            jr c,2F
 252+ 9803 7C               ld a,h
 253+ 9804 D6 08            sub 8
 254+ 9806 67               ld h,a
 255+ 9807 7C           2 ld a,h
 256+ 9808 FE 58            cp $58
 257+ 980A 28 1B            jr z,4F
 258+ 980C D1               pop de
 259+ 980D 7A           	ld a,d
 260+ 980E AE           	xor (hl)
 261+ 980F 77           	ld (hl),a
 262+ 9810 24           	inc h
 263+ 9811 7C               ld a,h
 264+ 9812 E6 07            and 7
 265+ 9814 20 0A            jr nz,3F
 266+ 9816 7D               ld a,l
 267+ 9817 C6 20            add a,$20
 268+ 9819 6F               ld l,a
 269+ 981A 38 04            jr c,3F
 270+ 981C 7C               ld a,h
 271+ 981D D6 08            sub 8
 272+ 981F 67               ld h,a
 273+ 9820 7C           3 ld a,h
 274+ 9821 FE 58            cp $58
 275+ 9823 28 02            jr z,4F
 276+ 9825 10 CB            djnz 1B
 277+ 9827 ED 7B 11 8A  4 ld sp,(Stack)
 278+ 982B C9           	ret
 279+ 982C
 280+ 982C ED 73 11 8A  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9830 FD F9        	ld sp,iy
 282+ 9832 06 08            ld b,8
 283+ 9834 D1           1 pop de
 284+ 9835 7B           	ld a,e
 285+ 9836 AE           	xor (hl)
 286+ 9837 77           	ld (hl),a
 287+ 9838 23           	inc hl
 288+ 9839 7A           	ld a,d
 289+ 983A AE           	xor (hl)
 290+ 983B 77           	ld (hl),a
 291+ 983C 2B           	dec hl
 292+ 983D 24             	inc h
 293+ 983E 7C               ld a,h
 294+ 983F E6 07            and 7
 295+ 9841 20 0A            jr nz,2F
 296+ 9843 7D               ld a,l
 297+ 9844 C6 20            add a,$20
 298+ 9846 6F               ld l,a
 299+ 9847 38 04            jr c,2F
 300+ 9849 7C               ld a,h
 301+ 984A D6 08            sub 8
 302+ 984C 67               ld h,a
 303+ 984D 7C           2 ld a,h
 304+ 984E FE 58            cp $58
 305+ 9850 28 21            jr z,4F
 306+ 9852 D1               pop de
 307+ 9853 7A           	ld a,d
 308+ 9854 AE           	xor (hl)
 309+ 9855 77           	ld (hl),a
 310+ 9856 23           	inc hl
 311+ 9857 D1               pop de
 312+ 9858 7B           	ld a,e
 313+ 9859 AE           	xor (hl)
 314+ 985A 77           	ld (hl),a
 315+ 985B 2B           	dec hl
 316+ 985C 24           	inc h
 317+ 985D 7C               ld a,h
 318+ 985E E6 07            and 7
 319+ 9860 20 0A            jr nz,3F
 320+ 9862 7D               ld a,l
 321+ 9863 C6 20            add a,$20
 322+ 9865 6F               ld l,a
 323+ 9866 38 04            jr c,3F
 324+ 9868 7C               ld a,h
 325+ 9869 D6 08            sub 8
 326+ 986B 67               ld h,a
 327+ 986C 7C           3 ld a,h
 328+ 986D FE 58            cp $58
 329+ 986F 28 02            jr z,4F
 330+ 9871 10 C1            djnz 1B
 331+ 9873 ED 7B 11 8A  4 ld sp,(Stack)
 332+ 9877 C9           	ret
 333+ 9878
 334+ 9878 ED 73 11 8A  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 987C FD F9        	ld sp,iy
 336+ 987E 06 08            ld b,8
 337+ 9880 D1           1 pop de
 338+ 9881 7B           	ld a,e
 339+ 9882 AE           	xor (hl)
 340+ 9883 77           	ld (hl),a
 341+ 9884 24            	inc h
 342+ 9885 7C               ld a,h
 343+ 9886 E6 07            and 7
 344+ 9888 20 0A            jr nz,2F
 345+ 988A 7D               ld a,l
 346+ 988B C6 20            add a,$20
 347+ 988D 6F               ld l,a
 348+ 988E 38 04            jr c,2F
 349+ 9890 7C               ld a,h
 350+ 9891 D6 08            sub 8
 351+ 9893 67               ld h,a
 352+ 9894 7C           2 ld a,h
 353+ 9895 FE 58            cp $58
 354+ 9897 28 1C            jr z,4F
 355+ 9899 D1               pop de
 356+ 989A 7A           	ld a,d
 357+ 989B AE           	xor (hl)
 358+ 989C 77           	ld (hl),a
 359+ 989D 24           	inc h
 360+ 989E 7C               ld a,h
 361+ 989F E6 07            and 7
 362+ 98A1 20 0A            jr nz,3F
 363+ 98A3 7D               ld a,l
 364+ 98A4 C6 20            add a,$20
 365+ 98A6 6F               ld l,a
 366+ 98A7 38 04            jr c,3F
 367+ 98A9 7C               ld a,h
 368+ 98AA D6 08            sub 8
 369+ 98AC 67               ld h,a
 370+ 98AD 7C           3 ld a,h
 371+ 98AE FE 58            cp $58
 372+ 98B0 28 03            jr z,4F
 373+ 98B2 D1               pop de
 374+ 98B3 10 CB            djnz 1B
 375+ 98B5 ED 7B 11 8A  4 ld sp,(Stack)
 376+ 98B9 C9           	ret
 377+ 98BA
 378+ 98BA              ; ---------------------------------------------------
 379+ 98BA              ;
 380+ 98BA              ;   27/02/23
 381+ 98BA              ;
 382+ 98BA              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 98BA              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 98BA              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 98BA
 386+ 98BA ED 73 11 8A  Pinta_Disparo ld (Stack),sp
 387+ 98BE FD F9            ld sp,iy
 388+ 98C0 06 04            ld b,4
 389+ 98C2 D1           1 pop de
 390+ 98C3 7B               ld a,e
 391+ 98C4 AE               xor (hl)
 392+ 98C5 77               ld (hl),a
 393+ 98C6 23               inc hl
 394+ 98C7 7A               ld a,d
 395+ 98C8 AE               xor (hl)
 396+ 98C9 77               ld (hl),a
 397+ 98CA 2B               dec hl
 398+ 98CB
 399+ 98CB 24               inc h
 400+ 98CC 7C               ld a,h
 401+ 98CD E6 07            and 7
 402+ 98CF 20 0A            jr nz,2F
 403+ 98D1 7D               ld a,l
 404+ 98D2 C6 20            add a,$20
 405+ 98D4 6F               ld l,a
 406+ 98D5 38 04            jr c,2F
 407+ 98D7 7C               ld a,h
 408+ 98D8 D6 08            sub 8
 409+ 98DA 67               ld h,a
 410+ 98DB 7C           2 ld a,h
 411+ 98DC FE 58            cp $58
 412+ 98DE 28 02            jr z,3F
 413+ 98E0
 414+ 98E0 10 E0            djnz 1B
 415+ 98E2 ED 7B 11 8A  3 ld sp,(Stack)
 416+ 98E6 C9               ret
 417+ 98E7
# file closed: Rutinas_de_impresion_sprites.asm
1279  98E7              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 98E7              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 98E7              ;
   3+ 98E7              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 98E7              ;
   5+ 98E7              ; *****************************************************************************************************************************************************************************************
   6+ 98E7              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 98E7
   8+ 98E7 7C           calcula_tercio ld a,h
   9+ 98E8 E6 18        	and $18
  10+ 98EA CB 2F        	sra a
  11+ 98EC CB 2F        	sra a
  12+ 98EE CB 2F        	sra a
  13+ 98F0 C9           	ret
  14+ 98F1
# file closed: calcula_tercio.asm
1280  98F1              	include "Cls.asm"
# file opened: Cls.asm
   1+ 98F1              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 98F1              ;
   3+ 98F1              ;
   4+ 98F1              ;	CLS.
   5+ 98F1              ;
   6+ 98F1              ;	Limpia la pantalla y define sus atributos.
   7+ 98F1              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 98F1              ;
   9+ 98F1              ;	COLORES: 0 ..... NEGRO
  10+ 98F1              ;    		 1 ..... AZUL
  11+ 98F1              ; 			 2 ..... ROJO
  12+ 98F1              ;			 3 ..... MAGENTA
  13+ 98F1              ; 			 4 ..... VERDE
  14+ 98F1              ; 			 5 ..... CIAN
  15+ 98F1              ;			 6 ..... AMARILLO
  16+ 98F1              ; 			 7 ..... BLANCO
  17+ 98F1              ;
  18+ 98F1              ;	INPUT: A contiene los atributos de pantalla.
  19+ 98F1              ;
  20+ 98F1              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 98F1
  22+ 98F1
  23+ 98F1 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 98F4 11 01 40     	LD DE,$4001
  25+ 98F7 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 98FA 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 98FC ED B0        	LDIR
  28+ 98FE 01 FF 02     	LD BC,767
  29+ 9901 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9902 ED B0        	LDIR
  31+ 9904 C9           	ret
  32+ 9905
# file closed: Cls.asm
1281  9905              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9905              ; ******************************************************************************************************************************************************************************************
   2+ 9905              ;
   3+ 9905              ;   20/05/23
   4+ 9905              ;
   5+ 9905              ;	Recompone_posicion_inicio
   6+ 9905              ;
   7+ 9905              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9905              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9905              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9905              ;	_ a una u otra rutina.
  11+ 9905
  12+ 9905              Recompone_posicion_inicio
  13+ 9905
  14+ 9905 2A D0 89     	ld hl,(Posicion_inicio)
  15+ 9908 7D           	ld a,l
  16+ 9909 E6 1F        	and $1f
  17+ 990B 28 16        	jr z,1F
  18+ 990D
  19+ 990D FE 1F        	cp $1f
  20+ 990F 28 0D        	jr z,3F
  21+ 9911
  22+ 9911 21 FE 89     	ld hl,Ctrl_2
  23+ 9914 CB C6        	set 0,(hl)
  24+ 9916 2A C2 89     	ld hl,(Puntero_objeto)
  25+ 9919 22 01 8A     	ld (Repone_puntero_objeto),hl
  26+ 991C 18 08        	jr 2F
  27+ 991E
  28+ 991E CD BF 9A     3 call Mov_left
  29+ 9921 18 03        	jr 2F
  30+ 9923
  31+ 9923 CD A1 99     1 call Mov_right
  32+ 9926 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9929 22 C2 89     	ld (Puntero_objeto),hl
  34+ 992C C9           	ret
  35+ 992D
  36+ 992D              ; ******************************************************************************************************************************************************************************************
  37+ 992D              ;
  38+ 992D              ;   27/05/23
  39+ 992D              ;
  40+ 992D              ;	Mov_down
  41+ 992D              ;
  42+ 992D              ; 	Mueve el Sprite X px hacia abajo.
  43+ 992D              ;
  44+ 992D              ;
  45+ 992D              Mov_down
  46+ 992D
  47+ 992D CD 8F 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9930              ;																	; _ repone (Puntero_objeto).
  49+ 9930 21 EC 89     	ld hl,Ctrl_0
  50+ 9933 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9935              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9935              ; 																	; _ en el caso de que no lo haya.
  53+ 9935 3A D6 89     	ld a,(Vel_down)
  54+ 9938 47           	ld b,a
  55+ 9939 2A C0 89         ld hl,(Posicion_actual)
  56+ 993C CD E7 98     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 993F E6 02        	and 2
  58+ 9941 28 0F        	jr z,1F
  59+ 9943
  60+ 9943              ; Nos encontramos en el último tercio de pantalla.
  61+ 9943              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9943
  63+ 9943 7C           	ld a,h
  64+ 9944 FE 57        	cp $57
  65+ 9946 20 0A        	jr nz,1F
  66+ 9948 7D           	ld a,l
  67+ 9949 C6 20        	add $20
  68+ 994B 30 05        	jr nc,1F
  69+ 994D
  70+ 994D              ; ------------------------------
  71+ 994D              ;	call Reaparece_arriba
  72+ 994D CD 4C 9C     	call Reinicio
  73+ 9950              ; ------------------------------
  74+ 9950
  75+ 9950 18 08        	jr 3F
  76+ 9952 CD 27 96     1 call NextScan
  77+ 9955 22 C0 89     	ld (Posicion_actual),hl
  78+ 9958 10 E2            djnz 2B
  79+ 995A CD 72 9C     3 call Genera_coordenadas
  80+ 995D C9           	ret
  81+ 995E
  82+ 995E              ; ******************************************************************************************************************************************************************************************
  83+ 995E              ;
  84+ 995E              ;   27/05/23
  85+ 995E              ;
  86+ 995E              ;	Mov_up
  87+ 995E              ;
  88+ 995E              ; 	Mueve el Sprite hacia arriba.
  89+ 995E              ;
  90+ 995E              ;
  91+ 995E              Mov_up
  92+ 995E
  93+ 995E CD 8F 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  94+ 9961              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  95+ 9961 21 EC 89     	ld hl,Ctrl_0
  96+ 9964 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  97+ 9966              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  98+ 9966              ; 																		; _ en el caso de que no lo haya.
  99+ 9966 3A D5 89     	ld a,(Vel_up)
 100+ 9969 47           	ld b,a
 101+ 996A 2A C0 89     	ld hl,(Posicion_actual)
 102+ 996D CD E7 98     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 103+ 9970 A7           	and a
 104+ 9971 20 10        	jr nz,1F
 105+ 9973
 106+ 9973              ; Nos encontramos en el 1er tercio de pantalla.
 107+ 9973              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 108+ 9973
 109+ 9973 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 110+ 9974 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 111+ 9976 20 0B            jr nz,1F
 112+ 9978 7D               ld a,l
 113+ 9979 D6 20            sub $20
 114+ 997B 30 06            jr nc,1F
 115+ 997D 25               dec h
 116+ 997E
 117+ 997E              ; -----------------------------
 118+ 997E CD 2D 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 119+ 9981              ;	call Reinicio
 120+ 9981              ; -----------------------------
 121+ 9981
 122+ 9981 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 123+ 9983 CD 36 96     1 call PreviousScan
 124+ 9986 22 C0 89     	ld (Posicion_actual),hl
 125+ 9989 10 E2            djnz 3B
 126+ 998B CD 72 9C     2 call Genera_coordenadas
 127+ 998E C9           	ret
 128+ 998F
 129+ 998F              ; -----------------------------
 130+ 998F              ;
 131+ 998F              ;	27/5/23
 132+ 998F              ;
 133+ 998F              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 134+ 998F              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 135+ 998F              ;
 136+ 998F              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 137+ 998F              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 138+ 998F              ;
 139+ 998F              ;	Modifica: A y (Puntero_objeto).
 140+ 998F
 141+ 998F 3A FE 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 142+ 9992 CB 47        	bit 0,a
 143+ 9994 C8           	ret z
 144+ 9995 CB 87        	res 0,a
 145+ 9997 32 FE 89     	ld (Ctrl_2),a
 146+ 999A 2A 01 8A     	ld hl,(Repone_puntero_objeto)
 147+ 999D 22 C2 89     	ld (Puntero_objeto),hl
 148+ 99A0 C9           	ret
 149+ 99A1
 150+ 99A1              ; ******************************************************************************************************************************************************************************************
 151+ 99A1              ;
 152+ 99A1              ;	19/10/22
 153+ 99A1              ;
 154+ 99A1              ;	Mov_right.
 155+ 99A1              ;
 156+ 99A1              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 157+ 99A1              ;
 158+ 99A1
 159+ 99A1 21 EC 89     Mov_right ld hl,Ctrl_0
 160+ 99A4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 161+ 99A6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 162+ 99A6              ; 																	; _ en el caso de que no lo haya.
 163+ 99A6 3A EC 89     	ld a,(Ctrl_0)
 164+ 99A9 CB 77        	bit 6,a
 165+ 99AB 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 166+ 99AD
 167+ 99AD CD DB 9B     	call Stop_Amadeus_right
 168+ 99B0 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 169+ 99B1 18 4D        	jr 8F
 170+ 99B3
 171+ 99B3 3A C4 89     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 172+ 99B6 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 173+ 99B8 20 46        	jr nz,8F
 174+ 99BA
 175+ 99BA 3A C6 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 176+ 99BD A7           	and a 															; _[3] para continuar con el DESPLZ.
 177+ 99BE 28 40        	jr z,8F
 178+ 99C0
 179+ 99C0              ; ---------- ---------- ----------
 180+ 99C0              ;
 181+ 99C0              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 182+ 99C0
 183+ 99C0 3A D4 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 184+ 99C3 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 185+ 99C5 28 11        	jr z,1F
 186+ 99C7 38 06        	jr c,6F
 187+ 99C9 FE 04        	cp 4
 188+ 99CB 28 14        	jr z,7F
 189+ 99CD 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 190+ 99CF
 191+ 99CF              ; ---------- ---------- ----------
 192+ 99CF              ;
 193+ 99CF              ; Perfiles de velocidad
 194+ 99CF              ;
 195+ 99CF
 196+ 99CF 3A C6 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 197+ 99D2 FE FE        	cp $fe
 198+ 99D4 20 2A        	jr nz,8F
 199+ 99D6 18 10        	jr 3F
 200+ 99D8 3A C6 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 201+ 99DB FE FD        	cp $fd
 202+ 99DD 20 21        	jr nz,8F
 203+ 99DF 18 07        	jr 3F
 204+ 99E1 3A C6 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 205+ 99E4 FE FB        	cp $fb
 206+ 99E6 20 18        	jr nz,8F
 207+ 99E8
 208+ 99E8              ; ---------- ---------- ----------
 209+ 99E8
 210+ 99E8              3
 211+ 99E8 CD 1B 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 212+ 99EB              ;	call Reinicio
 213+ 99EB
 214+ 99EB              ; ---------- ---------- ----------
 215+ 99EB              ;
 216+ 99EB              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 217+ 99EB
 218+ 99EB 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 219+ 99ED C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 220+ 99EE CD 07 9A     	call DESPLZ_DER
 221+ 99F1 C1           	pop bc
 222+ 99F2 10 F9        	djnz 5B
 223+ 99F4 2A C0 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 224+ 99F7 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 225+ 99F8 22 C0 89     	ld (Posicion_actual),hl
 226+ 99FB CD 72 9C     	call Genera_coordenadas
 227+ 99FE 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 228+ 9A00
 229+ 9A00              ; ---------- ---------- ----------
 230+ 9A00
 231+ 9A00 2A C0 89     8 ld hl,(Posicion_actual)
 232+ 9A03 CD 07 9A     	call DESPLZ_DER
 233+ 9A06 C9           2 ret
 234+ 9A07
 235+ 9A07              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 236+ 9A07              ;
 237+ 9A07              ;	22/9/22
 238+ 9A07              ;
 239+ 9A07
 240+ 9A07 CD 16 9A     DESPLZ_DER call Desplaza_derecha
 241+ 9A0A CD 62 9A         call modifica_parametros_1er_DESPLZ_2
 242+ 9A0D CD 8B 9A         call Ciclo_completo
 243+ 9A10 21 EC 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 244+ 9A13 CB FE        	set 7,(hl)
 245+ 9A15 C9           	ret
 246+ 9A16
 247+ 9A16              ; ******************************************************************************************************************************************************************************************
 248+ 9A16              ;	15/02/23
 249+ 9A16              ;
 250+ 9A16
 251+ 9A16 3A D4 89     Desplaza_derecha ld a,(Vel_right)
 252+ 9A19 47           	ld b,a
 253+ 9A1A 2A CC 89     	ld hl,(Puntero_DESPLZ_der)
 254+ 9A1D 23           1 inc hl
 255+ 9A1E 23           	inc hl
 256+ 9A1F 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 257+ 9A21 22 CC 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 258+ 9A24 CD 28 8D     	call Extrae_address
 259+ 9A27 22 C2 89     	ld (Puntero_objeto),hl
 260+ 9A2A
 261+ 9A2A              ; Modifica (Puntero_DESPLZ_izq).
 262+ 9A2A
 263+ 9A2A              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 264+ 9A2A              ; Cuántos movimientos hemos hecho ??
 265+ 9A2A              ; DE contiene (Puntero_DESPLZ_der).
 266+ 9A2A
 267+ 9A2A 2A C8 89     7 ld hl,(Indice_Sprite_der)
 268+ 9A2D EB           	ex de,hl
 269+ 9A2E A7           	and a
 270+ 9A2F ED 52        	sbc hl,de
 271+ 9A31 CB 3D        	srl l
 272+ 9A33 3E 08        6 ld a,8
 273+ 9A35 95           	sub l
 274+ 9A36 30 1E        	jr nc,3F
 275+ 9A38
 276+ 9A38              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 277+ 9A38              ; B="0".
 278+ 9A38
 279+ 9A38 04           4 inc b
 280+ 9A39 3C           	inc a
 281+ 9A3A 20 FC        	jr nz,4B
 282+ 9A3C 78           	ld a,b
 283+ 9A3D 08           	ex af,af
 284+ 9A3E 2A C8 89     	ld hl,(Indice_Sprite_der)
 285+ 9A41 23           5 inc hl
 286+ 9A42 23           	inc hl
 287+ 9A43 10 FC        	djnz 5B
 288+ 9A45 22 CC 89     	ld (Puntero_DESPLZ_der),hl
 289+ 9A48 CD 28 8D     	call Extrae_address
 290+ 9A4B 22 C2 89     	ld (Puntero_objeto),hl
 291+ 9A4E
 292+ 9A4E              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 293+ 9A4E              ; _(Posicion_actual).
 294+ 9A4E
 295+ 9A4E 21 C0 89     	ld hl,Posicion_actual
 296+ 9A51 34           	inc (hl)
 297+ 9A52 08               ex af,af
 298+ 9A53 6F           	ld l,a
 299+ 9A54 18 DD        	jr 6B
 300+ 9A56
 301+ 9A56              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 302+ 9A56
 303+ 9A56 47           3 ld b,a
 304+ 9A57 2A CA 89     	ld hl,(Indice_Sprite_izq)
 305+ 9A5A 23           2 inc hl
 306+ 9A5B 23           	inc hl
 307+ 9A5C 10 FC        	djnz 2B
 308+ 9A5E 22 CE 89     	ld (Puntero_DESPLZ_izq),hl
 309+ 9A61 C9           8 ret
 310+ 9A62
 311+ 9A62              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 312+ 9A62              ;
 313+ 9A62              ;	24/7/22
 314+ 9A62              ;
 315+ 9A62              ;	modifica_parametros_1er_DESPLZ_2
 316+ 9A62              ;
 317+ 9A62              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 318+ 9A62              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 319+ 9A62              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 320+ 9A62
 321+ 9A62 3A C6 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 322+ 9A65 A7           	and a
 323+ 9A66 20 1F        	jr nz,1F
 324+ 9A68 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 325+ 9A6A 32 C6 89         ld (CTRL_DESPLZ),a
 326+ 9A6D
 327+ 9A6D 21 BF 89     	ld hl,Columns
 328+ 9A70 34           	inc (hl)
 329+ 9A71 3A D2 89     	ld a,(Cuad_objeto)
 330+ 9A74 E6 01        	and 1
 331+ 9A76 28 0F        	jr z,1F
 332+ 9A78 2A C0 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 333+ 9A7B 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 334+ 9A7C 22 C0 89     	ld (Posicion_actual),hl
 335+ 9A7F CD 72 9C     	call Genera_coordenadas
 336+ 9A82 CD E7 9B     	call Inc_CTRL_DESPLZ
 337+ 9A85 18 03        	jr 2F
 338+ 9A87 CD E7 9B     1 call Inc_CTRL_DESPLZ
 339+ 9A8A C9           2 ret
 340+ 9A8B
 341+ 9A8B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 342+ 9A8B              ;
 343+ 9A8B              ;	24/7/22
 344+ 9A8B              ;
 345+ 9A8B              ;	Ciclo_completo.
 346+ 9A8B              ;
 347+ 9A8B              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 348+ 9A8B              ;
 349+ 9A8B              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 350+ 9A8B              ; 	Decrementamos (Columns).
 351+ 9A8B              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 352+ 9A8B              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 353+ 9A8B
 354+ 9A8B
 355+ 9A8B 3A C6 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 356+ 9A8E FE FF        	cp $ff
 357+ 9A90 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 358+ 9A92 E6 F0        	and $f0
 359+ 9A94 20 28        	jr nz,3F
 360+ 9A96
 361+ 9A96              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 362+ 9A96
 363+ 9A96 3A C6 89     	ld a,(CTRL_DESPLZ)
 364+ 9A99 47           	ld b,a
 365+ 9A9A 3E F8        	ld a,$f8
 366+ 9A9C 80           	add b
 367+ 9A9D 32 C6 89     	ld (CTRL_DESPLZ),a
 368+ 9AA0 18 1C        	jr 3F
 369+ 9AA2 21 BF 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 370+ 9AA5 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 371+ 9AA6 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 372+ 9AA7 32 C6 89     	ld (CTRL_DESPLZ),a
 373+ 9AAA 3A D2 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 374+ 9AAD E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 375+ 9AAF 20 0A        	jr nz,2F
 376+ 9AB1 2A C0 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 377+ 9AB4 23           	inc hl
 378+ 9AB5 22 C0 89     	ld (Posicion_actual),hl
 379+ 9AB8 CD 72 9C     	call Genera_coordenadas
 380+ 9ABB
 381+ 9ABB              ; Inicia el puntero de Sprite.
 382+ 9ABB
 383+ 9ABB CD 3F 8D     2 call Inicia_puntero_objeto_der
 384+ 9ABE C9           3 ret
 385+ 9ABF
 386+ 9ABF              ; ******************************************************************************************************************************************************************************************
 387+ 9ABF              ;
 388+ 9ABF              ;	15/02/23
 389+ 9ABF              ;
 390+ 9ABF              ;	Mov_left.
 391+ 9ABF              ;
 392+ 9ABF              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 393+ 9ABF              ;
 394+ 9ABF 21 EC 89     Mov_left ld hl,Ctrl_0
 395+ 9AC2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 396+ 9AC4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 397+ 9AC4              ; 																	; _ en el caso de que no lo haya.
 398+ 9AC4 3A EC 89     	ld a,(Ctrl_0)
 399+ 9AC7 CB 77        	bit 6,a
 400+ 9AC9 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 401+ 9ACB
 402+ 9ACB CD E1 9B     	call Stop_Amadeus_left
 403+ 9ACE C8           	ret z
 404+ 9ACF 20 4A        	jr nz,8F
 405+ 9AD1
 406+ 9AD1 3A C4 89     11 ld a,(Coordenada_X)
 407+ 9AD4 A7           	and a
 408+ 9AD5 20 44        	jr nz,8F
 409+ 9AD7
 410+ 9AD7 3A C6 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 411+ 9ADA A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 412+ 9ADB 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 413+ 9ADD
 414+ 9ADD              ; ---------- ---------- ----------
 415+ 9ADD
 416+ 9ADD 3A D3 89     	ld a,(Vel_left)
 417+ 9AE0 FE 02        	cp 2
 418+ 9AE2 28 0F        	jr z,1F
 419+ 9AE4 38 04        	jr c,6F
 420+ 9AE6 FE 04        	cp 4
 421+ 9AE8 28 12        	jr z,7F
 422+ 9AEA
 423+ 9AEA              ; ---------- ---------- ----------
 424+ 9AEA
 425+ 9AEA 3A C6 89     6 ld a,(CTRL_DESPLZ)
 426+ 9AED FE F8        	cp $f8
 427+ 9AEF 20 2A        	jr nz,8F
 428+ 9AF1 18 10        	jr 4F
 429+ 9AF3 3A C6 89     1 ld a,(CTRL_DESPLZ)
 430+ 9AF6 FE F9        	cp $f9
 431+ 9AF8 20 21        	jr nz,8F
 432+ 9AFA 18 07        	jr 4F
 433+ 9AFC 3A C6 89     7 ld a,(CTRL_DESPLZ)
 434+ 9AFF FE FB        	cp $fb
 435+ 9B01 20 18        	jr nz,8F
 436+ 9B03
 437+ 9B03              ; ---------- ---------- ----------
 438+ 9B03
 439+ 9B03              4
 440+ 9B03 CD 09 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 441+ 9B06              ;	call Reinicio
 442+ 9B06
 443+ 9B06              ; ---------- ---------- ----------
 444+ 9B06
 445+ 9B06 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 446+ 9B08 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 447+ 9B09
 448+ 9B09              ;	ld hl,(Indice_Sprite_izq)
 449+ 9B09              ;	ld (Puntero_DESPLZ_izq),hl
 450+ 9B09
 451+ 9B09 CD 22 9B     	call DESPLZ_IZQ
 452+ 9B0C C1           	pop bc
 453+ 9B0D 10 F9        	djnz 5B
 454+ 9B0F 2A C0 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 455+ 9B12 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 456+ 9B13 22 C0 89     	ld (Posicion_actual),hl
 457+ 9B16 CD 72 9C     	call Genera_coordenadas
 458+ 9B19 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 459+ 9B1B
 460+ 9B1B              ; ---------- ---------- ----------
 461+ 9B1B
 462+ 9B1B              ; Movemos, no hay recolocación.
 463+ 9B1B
 464+ 9B1B 2A C0 89     8 ld hl,(Posicion_actual)
 465+ 9B1E CD 22 9B     	call DESPLZ_IZQ
 466+ 9B21 C9           2 ret
 467+ 9B22
 468+ 9B22              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 469+ 9B22              ;
 470+ 9B22              ;	22/9/22
 471+ 9B22
 472+ 9B22              DESPLZ_IZQ
 473+ 9B22
 474+ 9B22 CD 31 9B     	call Desplaza_izquierda
 475+ 9B25 CD 7D 9B         call modifica_parametros_1er_DESPLZ
 476+ 9B28 CD A5 9B     	call Ciclo_completo_2
 477+ 9B2B 21 EC 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 478+ 9B2E CB BE        	res 7,(hl)
 479+ 9B30 C9           	ret
 480+ 9B31
 481+ 9B31              Desplaza_izquierda
 482+ 9B31
 483+ 9B31 3A D3 89     	ld a,(Vel_left)
 484+ 9B34 47           	ld b,a
 485+ 9B35 2A CE 89     	ld hl,(Puntero_DESPLZ_izq)
 486+ 9B38 23           1 inc hl
 487+ 9B39 23           	inc hl
 488+ 9B3A 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 489+ 9B3C 22 CE 89     	ld (Puntero_DESPLZ_izq),hl
 490+ 9B3F CD 28 8D     	call Extrae_address
 491+ 9B42 22 C2 89     	ld (Puntero_objeto),hl
 492+ 9B45
 493+ 9B45              ; Modifica (Puntero_DESPLZ_der).
 494+ 9B45
 495+ 9B45              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 496+ 9B45              ; Cuántos movimientos hemos hecho ??
 497+ 9B45              ; DE contiene (Puntero_DESPLZ_izq).
 498+ 9B45
 499+ 9B45 2A CA 89     7 ld hl,(Indice_Sprite_izq)
 500+ 9B48 EB           	ex de,hl
 501+ 9B49 A7           	and a
 502+ 9B4A ED 52        	sbc hl,de
 503+ 9B4C CB 3D        	srl l
 504+ 9B4E 3E 08        6 ld a,8
 505+ 9B50 95           	sub l
 506+ 9B51 30 1E        	jr nc,3F
 507+ 9B53
 508+ 9B53              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 509+ 9B53              ; B="0".
 510+ 9B53
 511+ 9B53 04           4 inc b
 512+ 9B54 3C           	inc a
 513+ 9B55 20 FC        	jr nz,4B
 514+ 9B57 78           	ld a,b
 515+ 9B58 08           	ex af,af
 516+ 9B59 2A CA 89     	ld hl,(Indice_Sprite_izq)
 517+ 9B5C 23           5 inc hl
 518+ 9B5D 23           	inc hl
 519+ 9B5E 10 FC        	djnz 5B
 520+ 9B60 22 CE 89     	ld (Puntero_DESPLZ_izq),hl
 521+ 9B63 CD 28 8D     	call Extrae_address
 522+ 9B66 22 C2 89     	ld (Puntero_objeto),hl
 523+ 9B69
 524+ 9B69              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 525+ 9B69              ; _(Posicion_actual).
 526+ 9B69
 527+ 9B69 21 C0 89     	ld hl,Posicion_actual
 528+ 9B6C 35           	dec (hl)
 529+ 9B6D 08           	ex af,af
 530+ 9B6E 6F           	ld l,a
 531+ 9B6F 18 DD        	jr 6B
 532+ 9B71
 533+ 9B71              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 534+ 9B71
 535+ 9B71 47           3 ld b,a
 536+ 9B72 2A C8 89     	ld hl,(Indice_Sprite_der)
 537+ 9B75 23           2 inc hl
 538+ 9B76 23           	inc hl
 539+ 9B77 10 FC        	djnz 2B
 540+ 9B79 22 CC 89     	ld (Puntero_DESPLZ_der),hl
 541+ 9B7C C9           8 ret
 542+ 9B7D
 543+ 9B7D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 544+ 9B7D              ;
 545+ 9B7D              ;	modifica_parametros_1er_DESPLZ
 546+ 9B7D              ;
 547+ 9B7D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 548+ 9B7D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 549+ 9B7D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 550+ 9B7D
 551+ 9B7D 3A C6 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 552+ 9B80 A7           	and a
 553+ 9B81 20 1E        	jr nz,1F
 554+ 9B83 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 555+ 9B84 32 C6 89         ld (CTRL_DESPLZ),a
 556+ 9B87 21 BF 89     	ld hl,Columns
 557+ 9B8A 34           	inc (hl)
 558+ 9B8B 3A D2 89     	ld a,(Cuad_objeto)
 559+ 9B8E E6 01        	and 1
 560+ 9B90 20 0F        	jr nz,1F
 561+ 9B92 2A C0 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 562+ 9B95 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 563+ 9B96 22 C0 89     	ld (Posicion_actual),hl
 564+ 9B99 CD 72 9C     	call Genera_coordenadas
 565+ 9B9C CD F8 9B     	call Dec_CTRL_DESPLZ
 566+ 9B9F 18 03        	jr 2F
 567+ 9BA1 CD F8 9B     1 call Dec_CTRL_DESPLZ
 568+ 9BA4 C9           2 ret
 569+ 9BA5
 570+ 9BA5              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 571+ 9BA5
 572+ 9BA5 3A C6 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 573+ 9BA8 FE F7        	cp $f7
 574+ 9BAA 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 575+ 9BAC 30 2C        	jr nc,3F
 576+ 9BAE
 577+ 9BAE              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 578+ 9BAE
 579+ 9BAE 06 00        	ld b,0
 580+ 9BB0 04           4 inc b
 581+ 9BB1 3C           	inc a
 582+ 9BB2 FE F7        	cp $f7
 583+ 9BB4 20 FA        	jr nz,4B
 584+ 9BB6 3E FF        	ld a,$ff
 585+ 9BB8 90           	sub b
 586+ 9BB9 32 C6 89     	ld (CTRL_DESPLZ),a
 587+ 9BBC 18 1C        	jr 3F
 588+ 9BBE
 589+ 9BBE              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 590+ 9BBE
 591+ 9BBE 21 BF 89     1 ld hl,Columns
 592+ 9BC1 35           	dec (hl)
 593+ 9BC2 AF           	xor a
 594+ 9BC3 32 C6 89     	ld (CTRL_DESPLZ),a
 595+ 9BC6 3A D2 89     	ld a,(Cuad_objeto)
 596+ 9BC9 E6 01        	and 1
 597+ 9BCB 28 0A        	jr z,2F
 598+ 9BCD 2A C0 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 599+ 9BD0 2B           	dec hl
 600+ 9BD1 22 C0 89     	ld (Posicion_actual),hl
 601+ 9BD4 CD 72 9C     	call Genera_coordenadas
 602+ 9BD7
 603+ 9BD7              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 604+ 9BD7
 605+ 9BD7 CD 52 8D     2 call Inicia_puntero_objeto_izq
 606+ 9BDA C9           3 ret
 607+ 9BDB
 608+ 9BDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 609+ 9BDB              ;
 610+ 9BDB              ;	19/10/22
 611+ 9BDB              ;
 612+ 9BDB              ;	(cp 29) para un Amadeus de 3 Columns.
 613+ 9BDB              ;	(cp 30)   ""  ""    ""     2 Columns.
 614+ 9BDB
 615+ 9BDB 3A C4 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 616+ 9BDE FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 617+ 9BE0 C9           	ret
 618+ 9BE1
 619+ 9BE1              ; ---------- ---------- ---------- ---------- ---------- ----------
 620+ 9BE1              ;
 621+ 9BE1              ;	19/10/22
 622+ 9BE1              ;
 623+ 9BE1              ;	(cp 2) para un Amadeus de 3 Columns.
 624+ 9BE1              ;	(cp 1)   ""  ""    ""     2 Columns.
 625+ 9BE1
 626+ 9BE1 3A C4 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 627+ 9BE4 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 628+ 9BE6 C9           	ret
 629+ 9BE7
 630+ 9BE7              ; ---------- ---------- ---------- ---------- ---------- ----------
 631+ 9BE7              ;
 632+ 9BE7              ;	24/7/22
 633+ 9BE7              ;
 634+ 9BE7              ;	Inc_CTRL_DESPLZ
 635+ 9BE7              ;
 636+ 9BE7              ;
 637+ 9BE7              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 638+ 9BE7
 639+ 9BE7 21 C6 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 640+ 9BEA 3A D4 89     	ld a,(Vel_right)
 641+ 9BED A7           	and a
 642+ 9BEE 28 06        	jr z,1F
 643+ 9BF0 47           	ld b,a
 644+ 9BF1 34           3 inc (hl)
 645+ 9BF2 10 FD        	djnz 3B
 646+ 9BF4 18 01        	jr 2F
 647+ 9BF6 34           1 inc (hl)
 648+ 9BF7 C9           2 ret
 649+ 9BF8
 650+ 9BF8              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9BF8              ;
 652+ 9BF8              ;	5/2/23
 653+ 9BF8              ;
 654+ 9BF8              ;	Dec_CTRL_DESPLZ
 655+ 9BF8              ;
 656+ 9BF8              ;
 657+ 9BF8              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9BF8
 659+ 9BF8 21 C6 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9BFB 3A D3 89     	ld a,(Vel_left)
 661+ 9BFE A7           	and a
 662+ 9BFF 28 06        	jr z,1F
 663+ 9C01 47           	ld b,a
 664+ 9C02 35           3 dec (hl)
 665+ 9C03 10 FD        	djnz 3B
 666+ 9C05 18 01        	jr 2F
 667+ 9C07 35           1 dec (hl)
 668+ 9C08 C9           2 ret
 669+ 9C09
 670+ 9C09              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9C09
 672+ 9C09 2A C0 89     Reaparece_derecha ld hl,(Posicion_actual)
 673+ 9C0C 01 1F 00     	ld bc,31
 674+ 9C0F A7           	and a
 675+ 9C10 ED 4A        	adc hl,bc
 676+ 9C12 22 C0 89     	ld (Posicion_actual),hl
 677+ 9C15 21 EC 89     	ld hl,Ctrl_0														; $xxx1
 678+ 9C18 CB C6        	set 0,(hl)
 679+ 9C1A C9           	ret
 680+ 9C1B
 681+ 9C1B              ; ---------- ---------- ---------- ---------- ---------- ----------
 682+ 9C1B
 683+ 9C1B 2A C0 89     Reaparece_izquierda ld hl,(Posicion_actual)
 684+ 9C1E 01 1F 00     	ld bc,31
 685+ 9C21 A7           	and a
 686+ 9C22 ED 42        	sbc hl,bc
 687+ 9C24 22 C0 89     	ld (Posicion_actual),hl 											; $xx1x
 688+ 9C27 21 EC 89     	ld hl,Ctrl_0
 689+ 9C2A CB CE        	set 1,(hl)
 690+ 9C2C C9           	ret
 691+ 9C2D
 692+ 9C2D              ; ---------- ---------- ---------- ---------- ---------- ----------
 693+ 9C2D
 694+ 9C2D 24           Reaparece_abajo inc h
 695+ 9C2E 01 E0 17     	ld bc,$17e0
 696+ 9C31 A7           	and a
 697+ 9C32 ED 4A        	adc hl,bc
 698+ 9C34 22 C0 89     	ld (Posicion_actual),hl
 699+ 9C37 21 EC 89     	ld hl,Ctrl_0
 700+ 9C3A CB D6        	set 2,(hl)
 701+ 9C3C C9           	ret
 702+ 9C3D
 703+ 9C3D              ; ---------- ---------- ---------- ---------- ---------- ----------
 704+ 9C3D
 705+ 9C3D 01 E0 17     Reaparece_arriba ld bc,$17e0
 706+ 9C40 A7           	and a
 707+ 9C41 ED 42        	sbc hl,bc
 708+ 9C43 22 C0 89     	ld (Posicion_actual),hl
 709+ 9C46 21 EC 89     	ld hl,Ctrl_0
 710+ 9C49 CB DE        	set 3,(hl)
 711+ 9C4B C9           	ret
 712+ 9C4C
 713+ 9C4C              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 714+ 9C4C              ;
 715+ 9C4C              ;	15/07/23
 716+ 9C4C
 717+ 9C4C              Reinicio
 718+ 9C4C
 719+ 9C4C              ; Vamos a reiniciar los punteros y variables de movimiento.
 720+ 9C4C
 721+ 9C4C AF           	xor a
 722+ 9C4D 21 F3 89     	ld hl,Puntero_indice_mov_bucle
 723+ 9C50 CD 6E 9C     	call Limpia_contenido_hl
 724+ 9C53
 725+ 9C53 21 C0 89     	ld hl,Posicion_actual
 726+ 9C56 CD 6E 9C     	call Limpia_contenido_hl
 727+ 9C59
 728+ 9C59 CD F8 9E     	call Inicializa_Puntero_indice_mov
 729+ 9C5C CD 86 9E     	call Inicia_Puntero_mov
 730+ 9C5F
 731+ 9C5F 21 F5 89     	ld hl,Incrementa_puntero
 732+ 9C62 06 05        	ld b,5
 733+ 9C64 77           1 ld (hl),a
 734+ 9C65 23           	inc hl
 735+ 9C66 10 FC        	djnz 1B
 736+ 9C68
 737+ 9C68 21 FE 89     	ld hl,Ctrl_2
 738+ 9C6B CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 739+ 9C6D
 740+ 9C6D C9           	ret
 741+ 9C6E
 742+ 9C6E 77           Limpia_contenido_hl	ld (hl),a
 743+ 9C6F 23           	inc hl
 744+ 9C70 77           	ld (hl),a
 745+ 9C71 C9           	ret
 746+ 9C72
 747+ 9C72
# file closed: Direcciones.asm
1282  9C72              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9C72              ; ------------------------------------------------------------------------
   2+ 9C72              ;
   3+ 9C72              ;	02/04/23
   4+ 9C72              ;
   5+ 9C72              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9C72              ;	Fila superior "0", Columna izquierda "0".
   7+ 9C72              ;
   8+ 9C72              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9C72              ;
  10+ 9C72              ;	Modifica: A,BC y DE.
  11+ 9C72
  12+ 9C72 C5           Genera_coordenadas push bc
  13+ 9C73 E5           	push hl
  14+ 9C74 D5           	push de
  15+ 9C75
  16+ 9C75 2A C0 89     	ld hl,(Posicion_actual)
  17+ 9C78
  18+ 9C78 7D           	ld a,l
  19+ 9C79 E6 1F        	and $1f
  20+ 9C7B 32 C4 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9C7E
  22+ 9C7E CD E7 98     	call calcula_tercio
  23+ 9C81 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9C82
  25+ 9C82 1E 00        	ld e,0
  26+ 9C84 7D           	ld a,l
  27+ 9C85 E6 E0        	and $e0
  28+ 9C87 28 01        	jr z,1F
  29+ 9C89 04           	inc b
  30+ 9C8A
  31+ 9C8A 04           1 inc b
  32+ 9C8B 05           	dec b
  33+ 9C8C 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9C8E              ;														; _ , salimos.
  35+ 9C8E 1C           3 inc e
  36+ 9C8F D6 20        	sub 32
  37+ 9C91 20 FB        	jr nz,3B
  38+ 9C93 10 F5        	djnz 1B
  39+ 9C95
  40+ 9C95 7B           2 ld a,e
  41+ 9C96 32 C5 89     	ld (Coordenada_y),a
  42+ 9C99
  43+ 9C99 D1           	pop de
  44+ 9C9A E1           	pop hl
  45+ 9C9B C1           	pop bc
  46+ 9C9C
  47+ 9C9C C9           	ret
  48+ 9C9D
  49+ 9C9D              ; ------------------------------------------------------------------------
  50+ 9C9D              ;	28/05/23
  51+ 9C9D              ;
  52+ 9C9D              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9C9D              ;	Fila superior "0", Columna izquierda "0".
  54+ 9C9D              ;
  55+ 9C9D              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9C9D              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9C9D              ;
  58+ 9C9D              ;		DE="$120d"
  59+ 9C9D              ;
  60+ 9C9D              ;		D, (Coordenada_X), Columnas, $12
  61+ 9C9D              ;		E, (Coordenada_y), Filas, $0d
  62+ 9C9D              ;
  63+ 9C9D              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9C9D
  65+ 9C9D              ;	Modifica: A,BC y DE.
  66+ 9C9D
  67+ 9C9D
  68+ 9C9D              Genera_coordenadas_disparo
  69+ 9C9D
  70+ 9C9D              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9C9D
  72+ 9C9D 7D           	ld a,l
  73+ 9C9E E6 1F        	and $1f
  74+ 9CA0 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CA1 CD E7 98     	call calcula_tercio
  76+ 9CA4 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CA5 1E 00        	ld e,0
  78+ 9CA7 7D           	ld a,l
  79+ 9CA8 E6 E0        	and $e0
  80+ 9CAA 28 01        	jr z,1F
  81+ 9CAC 04           	inc b
  82+ 9CAD 1C           1 inc e
  83+ 9CAE D6 20        	sub 32
  84+ 9CB0 20 FB        	jr nz,1B
  85+ 9CB2 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9CB4 C9           	ret
  87+ 9CB5
# file closed: Genera_coordenadas.asm
1283  9CB5              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9CB5
   2+ 9CB5
   3+ 9CB5              ;   07/07/23
   4+ 9CB5              ;
   5+ 9CB5              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9CB5              ;
   7+ 9CB5              ;   Codificación:
   8+ 9CB5              ;
   9+ 9CB5              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9CB5              ;
  11+ 9CB5              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9CB5              ;
  13+ 9CB5              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9CB5              ;
  15+ 9CB5              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9CB5              ;
  17+ 9CB5              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9CB5              ;                               ..... %01000010 Vel_up 4
  19+ 9CB5              ;                                               Vel_down 2
  20+ 9CB5              ;                               ..... $42
  21+ 9CB5              ;
  22+ 9CB5              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9CB5              ;
  24+ 9CB5              ;                               ..... %01000010 Vel_left 4
  25+ 9CB5              ;                                               Vel_right 2
  26+ 9CB5              ;                               ..... $42
  27+ 9CB5              ;
  28+ 9CB5              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9CB5              ;
  30+ 9CB5              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9CB5              ;
  32+ 9CB5              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9CB5              ;
  34+ 9CB5              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9CB5              ;                                     $53
  36+ 9CB5              ;
  37+ 9CB5              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9CB5              ;
  39+ 9CB5              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9CB5              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9CB5              ;
  42+ 9CB5              ;                       Arriba ..... $81
  43+ 9CB5              ;                       Arriba - izquierda ..... $a1
  44+ 9CB5              ;                       Arriba - derecha ..... $91
  45+ 9CB5              ;
  46+ 9CB5              ;                       Abajo ..... $41
  47+ 9CB5              ;                       Abajo - izquierda ..... $61
  48+ 9CB5              ;                       Abajo - derecha ..... $51
  49+ 9CB5              ;
  50+ 9CB5              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9CB5              ;
  52+ 9CB5              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9CB5              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9CB5              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9CB5              ;
  56+ 9CB5              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9CB5              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9CB5              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9CB5              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9CB5              ;
  61+ 9CB5              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del DESPLAZAMIENTO.
  62+ 9CB5              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9CB5              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9CB5              ;
  65+ 9CB5              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9CB5              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9CB5              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9CB5              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9CB5
  70+ 9CB5              ; ----- ----- ----- ----- -----
  71+ 9CB5
  72+ 9CB5 C9 9C        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9CB7
  74+ 9CB7 D5 9C            defw Codo_abajo_derecha
  75+ 9CB9
  76+ 9CB9 09 9D            defw Derecha_y_subiendo
  77+ 9CBB 13 9D            defw Derecha_y_subiendo_1
  78+ 9CBD
  79+ 9CBD 1D 9D            defw Codo_derecha_abajo
  80+ 9CBF 4D 9D            defw Codo_abajo_izq.
  81+ 9CC1
  82+ 9CC1 81 9D            defw Izquierda_y_subiendo
  83+ 9CC3 8B 9D            defw Izquierda_y_subiendo_1
  84+ 9CC5
  85+ 9CC5 95 9D            defw Codo_izquierda_abajo
  86+ 9CC7
  87+ 9CC7 00 00            defw 0                                  ; Fin de patrón de movimiento.
  88+ 9CC9
  89+ 9CC9 14 11 45 01  Bajo_decelerando db $14,$11,$45,1           ; Abajo. 5rep. vel.4
  90+ 9CCD 12 11 47 01      db $12,$11,$47,1                        ; Abajo. 7rep. vel.2
  91+ 9CD1 11 11 47 FE      db $11,$11,$47,254                      ; Abajo  7rep. --- Termina movimiento.
  92+ 9CD5
  93+ 9CD5 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
  94+ 9CD9 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
  95+ 9CDD 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
  96+ 9CE1 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
  97+ 9CE5 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
  98+ 9CE9 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
  99+ 9CED 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 100+ 9CF1 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 101+ 9CF5 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 102+ 9CF9 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 103+ 9CFD 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 104+ 9D01 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 105+ 9D05 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 106+ 9D09
 107+ 9D09
 108+ 9D09 11 12 14 01  Derecha_y_subiendo db $11,$12,$14,1         ; Derecha. 4rep. vel.2
 109+ 9D0D 11 11 91 FD      db $11,$11,$91,253,12,0                 ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 109+ 9D11 0C 00
 110+ 9D13 11 11 1A 01  Derecha_y_subiendo_1 db $11,$11,$1a,1       ; Derecha. 8rep.
 111+ 9D17 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 7rep. --- Termina movimiento.
 111+ 9D1B 06 00
 112+ 9D1D
 113+ 9D1D              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 114+ 9D1D
 115+ 9D1D
 116+ 9D1D 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 117+ 9D21 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 118+ 9D25 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 119+ 9D29 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 120+ 9D2D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 121+ 9D31 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 122+ 9D35 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 123+ 9D39 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 124+ 9D3D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 125+ 9D41 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 126+ 9D45 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 127+ 9D49 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 128+ 9D4D
 129+ 9D4D 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 130+ 9D51 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 131+ 9D55 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 132+ 9D59 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 133+ 9D5D 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 134+ 9D61 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 135+ 9D65 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 136+ 9D69 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 137+ 9D6D 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 138+ 9D71 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 139+ 9D75 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 140+ 9D79 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 141+ 9D7D 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 142+ 9D81
 143+ 9D81 11 21 24 01  Izquierda_y_subiendo db $11,$21,$24,1          ; Izq. 4rep.
 144+ 9D85 11 11 A1 FD      db $11,$11,$a1,253,12,0                    ; Arriba/Izq. 1rep. --- Repite Mov 18rep. --- Termina movimiento.
 144+ 9D89 0C 00
 145+ 9D8B 11 11 2A 01  Izquierda_y_subiendo_1 db $11,$11,$2a,1        ; Izq. 6rep.
 146+ 9D8F 11 11 A1 FD      db $11,$11,$a1,253,6,0                     ; Arriba/Izq. 1rep. --- Repite Mov 18rep. --- Termina movimiento.
 146+ 9D93 06 00
 147+ 9D95
 148+ 9D95 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 149+ 9D99 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 150+ 9D9D 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 151+ 9DA1 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 152+ 9DA5 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 153+ 9DA9 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 154+ 9DAD 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 155+ 9DB1 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 156+ 9DB5 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 157+ 9DB9 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 158+ 9DBD 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 159+ 9DC1 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 160+ 9DC5
 161+ 9DC5              ; ----- ----- ----- ----- -----
 162+ 9DC5              ;
 163+ 9DC5              ;   27/06/23
 164+ 9DC5
 165+ 9DC5              Movimiento
 166+ 9DC5
 167+ 9DC5              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 168+ 9DC5
 169+ 9DC5 3A FE 89         ld a,(Ctrl_2)
 170+ 9DC8 CB 57            bit 2,a
 171+ 9DCA 20 1B            jr nz, Desplazamiento_iniciado
 172+ 9DCC
 173+ 9DCC 2A F1 89         ld hl,(Puntero_mov)
 174+ 9DCF 7E               ld a,(hl)
 175+ 9DD0
 176+ 9DD0              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 177+ 9DD0
 178+ 9DD0              Inicia_desplazamiento.
 179+ 9DD0
 180+ 9DD0              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 181+ 9DD0
 182+ 9DD0 CD B9 9E         call Ajusta_velocidad_desplazamiento
 183+ 9DD3
 184+ 9DD3              ; Iniciamos (Repetimos_mov).
 185+ 9DD3
 186+ 9DD3 7E               ld a,(hl)
 187+ 9DD4 E6 0F            and $0f
 188+ 9DD6 32 F6 89         ld (Repetimos_desplazamiento),a
 189+ 9DD9 32 F7 89         ld (Repetimos_desplazamiento_backup),a
 190+ 9DDC
 191+ 9DDC              ; Iniciamos (Cola_de_desplazamiento).
 192+ 9DDC
 193+ 9DDC 23               inc hl
 194+ 9DDD 7E               ld a,(hl)
 195+ 9DDE 32 F9 89         ld (Cola_de_desplazamiento),a
 196+ 9DE1 2B               dec hl
 197+ 9DE2
 198+ 9DE2 21 FE 89         ld hl,Ctrl_2
 199+ 9DE5 CB D6            set 2,(hl)
 200+ 9DE7
 201+ 9DE7              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 202+ 9DE7              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 203+ 9DE7
 204+ 9DE7              Desplazamiento_iniciado
 205+ 9DE7
 206+ 9DE7 CD 91 9E         call Aplica_desplazamiento
 207+ 9DEA
 208+ 9DEA 3A FE 89         ld a,(Ctrl_2)
 209+ 9DED CB 67            bit 4,a
 210+ 9DEF C0               ret nz                              ; Salimos si se ha producido reinicio.
 211+ 9DF0
 212+ 9DF0 21 F6 89     3 ld hl,Repetimos_desplazamiento
 213+ 9DF3 35               dec (hl)
 214+ 9DF4 C0               ret nz
 215+ 9DF5
 216+ 9DF5              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 217+ 9DF5              ; Hay que volver a ejecutar este desplazamiento ???.
 218+ 9DF5              ; Analiza (Cola_de_desplazamiento).
 219+ 9DF5
 220+ 9DF5 3A F9 89     Cola ld a,(Cola_de_desplazamiento)
 221+ 9DF8 A7               and a
 222+ 9DF9 CC E2 9E         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 223+ 9DFC 28 30            jr z,Reinicia_el_movimiento
 224+ 9DFE
 225+ 9DFE FE FF            cp $ff
 226+ 9E00 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 227+ 9E02
 228+ 9E02 FE FE            cp $fe
 229+ 9E04 CC 71 9E         call z,Fijamos_bucle
 230+ 9E07 28 25            jr z,Reinicia_el_movimiento
 231+ 9E09
 232+ 9E09 FE FD            cp $fd
 233+ 9E0B 20 11            jr nz,1F
 234+ 9E0D
 235+ 9E0D              ; ---
 236+ 9E0D              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 237+ 9E0D
 238+ 9E0D 3A FE 89         ld a,(Ctrl_2)
 239+ 9E10 CB 5F            bit 3,a
 240+ 9E12 20 1A            jr nz,Reinicia_el_movimiento
 241+ 9E14
 242+ 9E14              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 243+ 9E14
 244+ 9E14 21 FE 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 245+ 9E17 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 246+ 9E19
 247+ 9E19 CD 7B 9E         call Inicia_Repetimos_movimiento
 248+ 9E1C 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 249+ 9E1E              ; ---
 250+ 9E1E
 251+ 9E1E FE 01        1 cp 1
 252+ 9E20 CA 5B 9E         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 253+ 9E23
 254+ 9E23 3D               dec a
 255+ 9E24 32 F9 89         ld (Cola_de_desplazamiento),a
 256+ 9E27
 257+ 9E27 3A F7 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 258+ 9E2A 32 F6 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 259+ 9E2D              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 260+ 9E2D C9               ret
 261+ 9E2E
 262+ 9E2E              Reinicia_el_movimiento
 263+ 9E2E
 264+ 9E2E 3A FE 89         ld a,(Ctrl_2)
 265+ 9E31 CB 5F            bit 3,a
 266+ 9E33 28 1B            jr z,2F
 267+ 9E35
 268+ 9E35              ; (Cola_de_desplazamiento)="254".
 269+ 9E35
 270+ 9E35 21 F8 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 271+ 9E38 35               dec (hl)
 272+ 9E39 20 15            jr nz,2F
 273+ 9E3B
 274+ 9E3B              ; Fin de las repeticiones del último movimiento.
 275+ 9E3B
 276+ 9E3B 21 FE 89         ld hl,Ctrl_2
 277+ 9E3E CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 278+ 9E40
 279+ 9E40 2A F1 89         ld hl,(Puntero_mov)
 280+ 9E43 23               inc hl
 281+ 9E44 23               inc hl
 282+ 9E45 23               inc hl
 283+ 9E46 22 F1 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 284+ 9E49              ;                                                               ; _ para ejecutar su mandato. :)
 285+ 9E49 7E               ld a,(hl)
 286+ 9E4A 32 F9 89         ld (Cola_de_desplazamiento),a
 287+ 9E4D
 288+ 9E4D C3 F5 9D         jp Cola
 289+ 9E50
 290+ 9E50
 291+ 9E50 CD 86 9E     2 call Inicia_Puntero_mov
 292+ 9E53
 293+ 9E53 21 FE 89         ld hl,Ctrl_2
 294+ 9E56 CB 96            res 2,(hl)
 295+ 9E58
 296+ 9E58 C3 C5 9D         jp Movimiento
 297+ 9E5B
 298+ 9E5B              Siguiente_desplazamiento
 299+ 9E5B
 300+ 9E5B              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 301+ 9E5B              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 302+ 9E5B
 303+ 9E5B 21 FE 89         ld hl,Ctrl_2
 304+ 9E5E CB 96            res 2,(hl)
 305+ 9E60
 306+ 9E60 2A F1 89         ld hl,(Puntero_mov)
 307+ 9E63 23               inc hl
 308+ 9E64 23               inc hl
 309+ 9E65 22 F1 89         ld (Puntero_mov),hl
 310+ 9E68
 311+ 9E68 7E               ld a,(hl)
 312+ 9E69 A7               and a
 313+ 9E6A CC E2 9E         call z,Incrementa_Puntero_indice_mov
 314+ 9E6D CA 2E 9E         jp z,Reinicia_el_movimiento
 315+ 9E70
 316+ 9E70 C9               ret
 317+ 9E71              ; Subrutinas -----------------------------------------
 318+ 9E71              ; ---------- --------- --------- ---------- ----------
 319+ 9E71              ;
 320+ 9E71              ;   12/07/23
 321+ 9E71              ;
 322+ 9E71              ;   Fijamos_bucle
 323+ 9E71              ;
 324+ 9E71              ;
 325+ 9E71
 326+ 9E71 CD E2 9E     Fijamos_bucle call Incrementa_Puntero_indice_mov
 327+ 9E74 2A EF 89         ld hl,(Puntero_indice_mov)
 328+ 9E77 22 F3 89         ld (Puntero_indice_mov_bucle),hl
 329+ 9E7A C9               ret
 330+ 9E7B
 331+ 9E7B              ; ---------- --------- --------- ---------- ----------
 332+ 9E7B              ;
 333+ 9E7B              ;   07/7/23
 334+ 9E7B              ;
 335+ 9E7B              ;   Inicia_Repetimos_movimiento
 336+ 9E7B              ;
 337+ 9E7B              ;
 338+ 9E7B
 339+ 9E7B              Inicia_Repetimos_movimiento
 340+ 9E7B
 341+ 9E7B              ; Iniciamos (Repetimos_movimiento).
 342+ 9E7B
 343+ 9E7B DD 2A F1 89      ld ix,(Puntero_mov)
 344+ 9E7F DD 7E 02         ld a,(ix+2)
 345+ 9E82 32 F8 89         ld (Repetimos_movimiento),a
 346+ 9E85
 347+ 9E85 C9               ret
 348+ 9E86
 349+ 9E86              ; ---------- --------- --------- ---------- ----------
 350+ 9E86              ;
 351+ 9E86              ;   26/6/23
 352+ 9E86              ;
 353+ 9E86              ;   Inicia_Puntero_mov
 354+ 9E86              ;
 355+ 9E86              ;
 356+ 9E86
 357+ 9E86 2A EF 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 358+ 9E89 5E               ld e,(hl)
 359+ 9E8A 23               inc hl
 360+ 9E8B 56               ld d,(hl)
 361+ 9E8C EB               ex de,hl
 362+ 9E8D 22 F1 89         ld (Puntero_mov),hl
 363+ 9E90 C9               ret
 364+ 9E91
 365+ 9E91              ; ---------- --------- --------- ---------- ----------
 366+ 9E91              ;
 367+ 9E91              ;   27/06/23
 368+ 9E91              ;
 369+ 9E91              ;   Aplica_movimiento.
 370+ 9E91
 371+ 9E91              Aplica_desplazamiento
 372+ 9E91
 373+ 9E91              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 374+ 9E91
 375+ 9E91 2A F1 89         ld hl, (Puntero_mov)
 376+ 9E94 CB 7E            bit 7,(hl)
 377+ 9E96 28 03            jr z,1F
 378+ 9E98 CD 5E 99         call Mov_up
 379+ 9E9B 2A F1 89     1 ld hl, (Puntero_mov)
 380+ 9E9E CB 76            bit 6,(hl)
 381+ 9EA0 28 03            jr z,2F
 382+ 9EA2 CD 2D 99         call Mov_down
 383+ 9EA5 2A F1 89     2 ld hl, (Puntero_mov)
 384+ 9EA8 CB 6E            bit 5,(hl)
 385+ 9EAA 28 03            jr z,3F
 386+ 9EAC CD BF 9A         call Mov_left
 387+ 9EAF 2A F1 89     3 ld hl, (Puntero_mov)
 388+ 9EB2 CB 66            bit 4,(hl)
 389+ 9EB4 C8               ret z
 390+ 9EB5 CD A1 99         call Mov_right
 391+ 9EB8 C9               ret
 392+ 9EB9
 393+ 9EB9              ; ---------- --------- --------- ---------- ----------
 394+ 9EB9              ;
 395+ 9EB9              ;   26/06/23
 396+ 9EB9              ;
 397+ 9EB9              ;   Ajusta_velocidad_desplazamiento.
 398+ 9EB9
 399+ 9EB9              Ajusta_velocidad_desplazamiento
 400+ 9EB9
 401+ 9EB9              ; 1er byte de la cadena de movimiento.
 402+ 9EB9              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 403+ 9EB9
 404+ 9EB9 CD D7 9E         call Extrae_nibble_alto
 405+ 9EBC
 406+ 9EBC 32 D5 89         ld (Vel_up),a
 407+ 9EBF 79               ld a,c
 408+ 9EC0 E6 0F            and $0f
 409+ 9EC2 32 D6 89         ld (Vel_down),a
 410+ 9EC5
 411+ 9EC5              ; Saltamos al 2º byte de la cadena de movimiento.
 412+ 9EC5              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 413+ 9EC5
 414+ 9EC5 23               inc hl
 415+ 9EC6 CD D7 9E         call Extrae_nibble_alto
 416+ 9EC9
 417+ 9EC9 32 D3 89         ld (Vel_left),a
 418+ 9ECC 79               ld a,c
 419+ 9ECD E6 0F            and $0f
 420+ 9ECF 32 D4 89         ld (Vel_right),a
 421+ 9ED2
 422+ 9ED2              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 423+ 9ED2
 424+ 9ED2 23               inc hl
 425+ 9ED3 22 F1 89         ld (Puntero_mov),hl
 426+ 9ED6 C9               ret
 427+ 9ED7
 428+ 9ED7 06 04        Extrae_nibble_alto ld b,4
 429+ 9ED9 7E               ld a,(hl)
 430+ 9EDA 4F               ld c,a
 431+ 9EDB E6 F0            and $f0
 432+ 9EDD CB 3F        1 srl a
 433+ 9EDF 10 FC            djnz 1B
 434+ 9EE1 C9               ret
 435+ 9EE2
 436+ 9EE2              ; ---------- --------- --------- ---------- ----------
 437+ 9EE2              ;
 438+ 9EE2              ;   5/7/23
 439+ 9EE2              ;
 440+ 9EE2              ;   Incrementa_Puntero_indice_mov
 441+ 9EE2
 442+ 9EE2              Incrementa_Puntero_indice_mov
 443+ 9EE2
 444+ 9EE2 21 F5 89         ld hl,Incrementa_puntero
 445+ 9EE5 34               inc (hl)
 446+ 9EE6
 447+ 9EE6 2A EF 89         ld hl,(Puntero_indice_mov)
 448+ 9EE9 01 02 00         ld bc,2
 449+ 9EEC A7               and a
 450+ 9EED 09               add hl,bc
 451+ 9EEE 22 EF 89         ld (Puntero_indice_mov),hl
 452+ 9EF1
 453+ 9EF1 7E               ld a,(hl)
 454+ 9EF2 A7               and a
 455+ 9EF3
 456+ 9EF3              ;! STOP. Fin del patrón de movimiento de la entidad.
 457+ 9EF3
 458+ 9EF3              ;    jr z,$
 459+ 9EF3
 460+ 9EF3              ;! Reinicia el Patrón de movimiento.
 461+ 9EF3
 462+ 9EF3 CC F8 9E         call z,Inicializa_Puntero_indice_mov
 463+ 9EF6
 464+ 9EF6 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 465+ 9EF7
 466+ 9EF7 C9               ret
 467+ 9EF8
 468+ 9EF8
 469+ 9EF8              ; ---------- --------- --------- ---------- ----------
 470+ 9EF8              ;
 471+ 9EF8              ;   12/07/23
 472+ 9EF8              ;
 473+ 9EF8              ;   Inicializa_Puntero_indice_mov
 474+ 9EF8
 475+ 9EF8              Inicializa_Puntero_indice_mov
 476+ 9EF8
 477+ 9EF8              ; Existe etiqueta de bucle principal???
 478+ 9EF8
 479+ 9EF8              ;    jr $
 480+ 9EF8
 481+ 9EF8              ;    ld hl,Ctrl_2
 482+ 9EF8              ;    res 4,(hl)
 483+ 9EF8
 484+ 9EF8 2A F3 89         ld hl,(Puntero_indice_mov_bucle)
 485+ 9EFB 24               inc h
 486+ 9EFC 25               dec h
 487+ 9EFD 28 05            jr z,2F
 488+ 9EFF
 489+ 9EFF 22 EF 89         ld (Puntero_indice_mov),hl
 490+ 9F02 18 0E            jr 3F
 491+ 9F04
 492+ 9F04
 493+ 9F04
 494+ 9F04              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 495+ 9F04
 496+ 9F04 3A F5 89     2 ld a,(Incrementa_puntero)
 497+ 9F07 47               ld b,a
 498+ 9F08
 499+ 9F08 2A EF 89         ld hl,(Puntero_indice_mov)
 500+ 9F0B 2B           1 dec hl
 501+ 9F0C 2B               dec hl
 502+ 9F0D 10 FC            djnz 1B
 503+ 9F0F
 504+ 9F0F 22 EF 89         ld (Puntero_indice_mov),hl
 505+ 9F12
 506+ 9F12 AF           3 xor a
 507+ 9F13 32 F5 89         ld (Incrementa_puntero),a
 508+ 9F16
 509+ 9F16 C9               ret
 510+ 9F17
 511+ 9F17
 512+ 9F17
# file closed: Patrones_de_mov.asm
1284  9F17              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9F17              ; Relojes y temporizaciones.
   2+ 9F17
   3+ 9F17              ; ------------------------------------------------------
   4+ 9F17              ;
   5+ 9F17              ;	16/7/23
   6+ 9F17              ;
   7+ 9F17              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9F17              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9F17              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9F17              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9F17              ;
  12+ 9F17              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9F17              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9F17
  15+ 9F17              ; Disparo_entidad db 1
  16+ 9F17              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9F17              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9F17
  19+ 9F17              Habilita_disparos
  20+ 9F17
  21+ 9F17 7E           	ld a,(hl)
  22+ 9F18 A7           	and a
  23+ 9F19 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9F1A
  25+ 9F1A EB           	ex de,hl
  26+ 9F1B
  27+ 9F1B 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9F1C C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9F1D
  30+ 9F1D              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9F1D
  32+ 9F1D 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9F1E 7E           	ld a,(hl)
  34+ 9F1F 23           	inc hl
  35+ 9F20 77           	ld (hl),a
  36+ 9F21
  37+ 9F21 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9F22 3E 01        	ld a,1
  39+ 9F24 77           	ld (hl),a
  40+ 9F25 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1285  9F26              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ 9F26              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ 9F26              ;
   3+ 9F26              ;	3/1/23
   4+ 9F26              ;
   5+ 9F26              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ 9F26
   7+ 9F26              ;	ADC HL,SP	LD (addr),SP
   8+ 9F26              ;	ADD HL,SP	LD SP,(addr)
   9+ 9F26              ;	ADD IX,SP	LD SP,nn
  10+ 9F26              ; 	ADD IY,SP	LD SP,HL
  11+ 9F26              ;				LD SP,IX
  12+ 9F26              ;	DEC SP		LD SP,IY
  13+ 9F26
  14+ 9F26              ;	EX (SP),HL
  15+ 9F26              ;	EX (SP),IX
  16+ 9F26              ;	EX (SP),IY
  17+ 9F26
  18+ 9F26              ;	INC SP
  19+ 9F26
  20+ 9F26
  21+ 9F26                  org $7fa0
  22+ 7FA0
  23+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  24+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  25+ 7FA0              ;
  26+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  27+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  28+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  29+ 7FA0
  30+ 7FA0              Guarda_foto_registros
  31+ 7FA0
  32+ 7FA0 ED 73 11 8A      ld (Stack),sp                                 ; Guardo SP en (Stack).
  33+ 7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  34+ 7FA7
  35+ 7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  36+ 7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  37+ 7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  38+ 7FAC
  39+ 7FAC 3A 00 8A         ld a,(Ctrl_1)
  40+ 7FAF CB 47            bit 0,a
  41+ 7FB1 28 05            jr z,2F
  42+ 7FB3
  43+ 7FB3 2A 17 8A         ld hl,(Stack_snapshot_disparos)
  44+ 7FB6
  45+ 7FB6 18 03            jr 4F
  46+ 7FB8
  47+ 7FB8 2A 15 8A     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  48+ 7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  49+ 7FBD
  50+ 7FBD D1           1 pop de
  51+ 7FBE 73               ld (hl),e
  52+ 7FBF 23               inc hl
  53+ 7FC0 72               ld (hl),d
  54+ 7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  55+ 7FC2 10 F9            djnz 1B
  56+ 7FC4
  57+ 7FC4 CB 47            bit 0,a
  58+ 7FC6 28 05            jr z,5F
  59+ 7FC8
  60+ 7FC8 22 17 8A         ld (Stack_snapshot_disparos),hl
  61+ 7FCB 18 03            jr 6F
  62+ 7FCD
  63+ 7FCD 22 15 8A     5 ld (Stack_snapshot),hl
  64+ 7FD0 ED 7B 11 8A  6 ld sp,(Stack)
  65+ 7FD4 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
  66+ 7FD5
  67+ 7FD5
# file closed: Guarda_foto_registros.asm
1286  7FD5
1287  7FD5              	SAVESNA "Pruebas.sna", START
1288  7FD5
1289  7FD5
1290  7FD5
1291  7FD5
# file closed: Banco_de_pruebas.asm
