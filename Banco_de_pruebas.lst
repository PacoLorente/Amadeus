# file opened: Banco_de_pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos SP.
  15  AA01
  16  AA01 ED 73 1A 89  FRAME ld (Stack_3),sp
  17  AA05
  18  AA05              ; Guardo registros.
  19  AA05
  20  AA05 08           	ex af,af'
  21  AA06 F5           	push af	;af'
  22  AA07 D9           	exx
  23  AA08 E5           	push hl	;hl'
  24  AA09 D5           	push de	;de'
  25  AA0A C5           	push bc	;bc'
  26  AA0B D9           	exx
  27  AA0C E5           	push hl	;hl
  28  AA0D D5           	push de	;de
  29  AA0E C5           	push bc	;bc
  30  AA0F 08           	ex af,af'
  31  AA10 F5           	push af	;af
  32  AA11 DD E5        	push ix
  33  AA13 FD E5        	push iy
  34  AA15
  35  AA15              ; En 1er lugar guardamos los 61 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  36  AA15              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  37  AA15
  38  AA15              ; Guardamos DRAW.
  39  AA15
  40  AA15              ;	call Guarda_parametros_DRAW
  41  AA15
  42  AA15              ; Pintamos y actualizamos los álbumes de fotos, (entidades).
  43  AA15
  44  AA15              ;! Debuggggggggggggggggggg
  45  AA15
  46  AA15 3A 54 89     	ld a,(Contador_de_frames_2)
  47  AA18 FE 01        	cp 1
  48  AA1A 20 0A        	jr nz,1F
  49  AA1C 08           	ex af,af
  50  AA1D 3A 53 89     	ld a,(Contador_de_frames)
  51  AA20 FE BA        	cp $ba ;	$c1 es el último FRAME que se ve bien.
  52  AA22 28 FE        	jr z,$
  53  AA24 30 FE        	jr nc,$
  54  AA26
  55  AA26 CD 0C 8E     1 call Pinta_entidades
  56  AA29              ;	call Pinta_Amadeus
  57  AA29 CD E0 8D     	call Gestiona_entidades
  58  AA2C              ;	call Gestiona_Amadeus
  59  AA2C
  60  AA2C              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  61  AA2C
  62  AA2C CD 19 8E     	call Actualiza_relojes
  63  AA2F
  64  AA2F              ;	call Recupera_parametros_DRAW
  65  AA2F
  66  AA2F              ;! Debuggg
  67  AA2F
  68  AA2F FD E1        	pop iy
  69  AA31 DD E1        	pop ix
  70  AA33 F1           	pop af
  71  AA34 C1           	pop bc
  72  AA35 D1           	pop de
  73  AA36 E1           	pop hl
  74  AA37 D9           	exx
  75  AA38 C1           	pop bc
  76  AA39 D1           	pop de
  77  AA3A E1           	pop hl
  78  AA3B 08           	ex af,af'
  79  AA3C F1           	pop af
  80  AA3D 08           	ex af,af'
  81  AA3E D9           	exx
  82  AA3F
  83  AA3F ED 7B 1A 89  	ld sp,(Stack_3)
  84  AA43
  85  AA43 FB           	ei
  86  AA44 C9           	ret
  87  AA45
  88  AA45              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  89  AA45
  90  AA45              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA45              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA45              ;
   3+ AA45              ;	17/02/23
   4+ AA45              ;
   5+ AA45              ;	Sprites e índices.
   6+ AA45
   7+ AA45              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 20 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 26 89        	defw End_Snapshot_1
 267+ 8500 2A 89        	defw End_Snapshot_2
 268+ 8502 2E 89        	defw End_Snapshot_3
 269+ 8504 22 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 28 89        	defw End_Snapshot_disparos_1
 271+ 8508 2C 89        	defw End_Snapshot_disparos_2
 272+ 850A 30 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  91  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 15 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 15 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  92  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CE 87        	defw Nivel_2
   7+ 87BE DB 87        	defw Nivel_3
   8+ 87C0 EB 87        	defw Nivel_4
   9+ 87C2 FD 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 05           Nivel_1 db 5	                                ; Nº de entidades.
  18+ 87C9 01 01 01 01  	db 1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  18+ 87CD 01
  19+ 87CE 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CF 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D3 01 02
  21+ 87D5 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D9 01 02
  22+ 87DB 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DC 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87E0 01
  24+ 87E1 03 01 01 01  	db 3,1,1,1,1
  24+ 87E5 01
  25+ 87E6 03 01 01 01  	db 3,1,1,1,1
  25+ 87EA 01
  26+ 87EB 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EC 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87F0 01
  28+ 87F1 04 01 01 01  	db 4,1,1,1,1
  28+ 87F5 01
  29+ 87F6 04 01 01 01  	db 4,1,1,1,1
  29+ 87FA 01
  30+ 87FB 02 03        	db 2,3
  31+ 87FD 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FE 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8802 01
  33+ 8803 05 01 01 01  	db 5,1,1,1,1
  33+ 8807 01
  34+ 8808 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880C 01
  35+ 880D 05 01 01 01  	db 5,1,1,1,1
  35+ 8811 01
  36+ 8812
  37+ 8812              ;---------------------------------------------------------------------------------------------------------------
  38+ 8812              ;
  39+ 8812              ;   3/9/23
  40+ 8812              ;
  41+ 8812              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8812              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8812              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8812              ;	_en la caja DRAW correspondiente.
  45+ 8812              ;
  46+ 8812              ;	MODIFICA: HL,DE y A.
  47+ 8812              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8812
  49+ 8812              Inicializa_Punteros_de_nivel
  50+ 8812
  51+ 8812 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8815 22 5F 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8818 CD 83 8C     	call Extrae_address
  54+ 881B 7E           	ld a,(hl)
  55+ 881C 32 0E 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881F 23           	inc hl
  57+ 8820 22 61 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8823 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8824
  60+ 8824              ;---------------------------------------------------------------------------------------------------------------
  61+ 8824              ;
  62+ 8824              ;   13/5/23
  63+ 8824              ;
  64+ 8824              ;	Destruye A,BC,HL,DE
  65+ 8824
  66+ 8824              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8824              ;	_del juego.
  68+ 8824
  69+ 8824              Prepara_cajas
  70+ 8824
  71+ 8824              ; Preparamos los punteros de las cajas.
  72+ 8824
  73+ 8824 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8827 CD 83 8C     	call Extrae_address
  75+ 882A CD 67 88     	call Avanza_caja
  76+ 882D
  77+ 882D CD AB 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 8830
  79+ 8830 2A 61 89     	ld hl,(Datos_de_nivel)
  80+ 8833
  81+ 8833              ; HL está en los datos del nivel correspondiente.
  82+ 8833              ; B actuará como contador de cajas.
  83+ 8833
  84+ 8833 C5           1 push bc
  85+ 8834
  86+ 8834 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8835 CD 58 88     	call PreparaBC
  88+ 8838
  89+ 8838 21 96 87     	ld hl,Indice_de_entidades
  90+ 883B CD 60 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883E 22 14 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 8841
  93+ 8841 CD 71 88     	call Datos_de_entidad_a_caja
  94+ 8844
  95+ 8844 2A 0C 89     	ld hl,(Indice_restore_caja)
  96+ 8847 CD 83 8C     	call Extrae_address
  97+ 884A CD 67 88     	call Avanza_caja
  98+ 884D
  99+ 884D 2A 61 89     	ld hl,(Datos_de_nivel)
 100+ 8850 23           	inc hl
 101+ 8851 22 61 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8854
 103+ 8854 C1           	pop bc
 104+ 8855 10 DC        	djnz 1B
 105+ 8857 C9           	ret
 106+ 8858
 107+ 8858 CB 27        PreparaBC sla a
 108+ 885A D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 885C 4F           	ld c,a
 110+ 885D 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885F C9           	ret
 112+ 8860
 113+ 8860 A7           SBC_HL_con_BC_y_Extrae and a
 114+ 8861 ED 4A        	adc hl,bc
 115+ 8863 CD 83 8C     	call Extrae_address
 116+ 8866 C9           	ret
 117+ 8867
 118+ 8867 22 08 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 886A 13           	inc de
 120+ 886B 13           	inc de
 121+ 886C EB           	ex de,hl
 122+ 886D 22 0C 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 8870 C9           	ret
 124+ 8871
 125+ 8871              Datos_de_entidad_a_caja
 126+ 8871
 127+ 8871              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 8871
 129+ 8871
 130+ 8871 ED 5B 08 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8875
 132+ 8875 01 02 00     	ld bc,2
 133+ 8878 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 887A
 135+ 887A 01 07 00     	ld bc,7
 136+ 887D CD A5 88     	call Situa_DE
 137+ 8880
 138+ 8880 01 05 00     	ld bc,5
 139+ 8883 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8885
 141+ 8885 01 04 00     	ld bc,4
 142+ 8888 CD A5 88     	call Situa_DE
 143+ 888B
 144+ 888B 01 07 00     	ld bc,7
 145+ 888E ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 8890
 147+ 8890 01 12 00     	ld bc,18
 148+ 8893 CD A5 88     	call Situa_DE
 149+ 8896
 150+ 8896 01 02 00     	ld bc,2
 151+ 8899 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 889B
 153+ 889B              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 889B              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 889B
 156+ 889B 01 0F 00     	ld bc,15									; *****
 157+ 889E CD A5 88     	call Situa_DE
 158+ 88A1
 159+ 88A1 3E 03        	ld a,3
 160+ 88A3 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A4
 162+ 88A4 C9           	ret
 163+ 88A5
 164+ 88A5 EB           Situa_DE ex de,hl
 165+ 88A6 A7           	and a
 166+ 88A7 ED 4A        	adc hl,bc
 167+ 88A9 EB           	ex de,hl
 168+ 88AA C9           	ret
 169+ 88AB
 170+ 88AB              ;---------------------------------------------------------------------------------------------------------------
 171+ 88AB              ;
 172+ 88AB              ;	21/5/23
 173+ 88AB              ;
 174+ 88AB              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88AB              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88AB              ;
 177+ 88AB              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88AB              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88AB              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88AB              ;
 181+ 88AB              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88AB              ;	MODIFICA: A y B.
 183+ 88AB              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88AB
 185+ 88AB              Admin_num_entidades
 186+ 88AB
 187+ 88AB              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88AB
 189+ 88AB 3A 0E 89     	ld a,(Numero_de_entidades)
 190+ 88AE A7           	and a
 191+ 88AF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AF              ;	jr z,$
 193+ 88AF              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AF
 195+ 88AF 20 03        	jr nz,3F
 196+ 88B1
 197+ 88B1              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88B1
 199+ 88B1 CD 12 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B4
 201+ 88B4 3A 0E 89     3 ld a,(Numero_de_entidades)
 202+ 88B7 FE 0A        	cp 10
 203+ 88B9 38 08        	jr c,1F
 204+ 88BB
 205+ 88BB              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88BB              ; Actualizamos variables.
 207+ 88BB
 208+ 88BB 3E 0A        	ld a,10
 209+ 88BD 32 0F 89     	ld (Numero_parcial_de_entidades),a
 210+ 88C0 47           	ld b,a
 211+ 88C1 18 04        	jr 2F
 212+ 88C3
 213+ 88C3              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C3              ; (Numero_de_entidades)="0".
 215+ 88C3
 216+ 88C3 32 0F 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C6 47           	ld b,a
 218+ 88C7 C9           2 ret
# file closed: Niveles.asm
  93  88C8
  94  88C8              ; ******************************************************************************************************************************************************************************************
  95  88C8              ; Constantes.
  96  88C8              ; ******************************************************************************************************************************************************************************************
  97  88C8              ;
  98  88C8              ; 4/9/23
  99  88C8              ;
 100  88C8              ; Constantes generales.
 101  88C8              ;
 102  88C8
 103  88C8              Sprite_vacio equ $f000
 104  88C8              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 105  88C8              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 106  88C8              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 107  88C8              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 108  88C8
 109  88C8              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 110  88C8              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 111  88C8              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 112  88C8              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 113  88C8              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 114  88C8              ;
 115  88C8              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
 116  88C8              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
 117  88C8              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
 118  88C8              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
 119  88C8              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
 120  88C8              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
 121  88C8
 122  88C8              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 123  88C8              Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 124  88C8
 125  88C8
 126  88C8
 127  88C8              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 128  88C8
 129  88C8              ; ******************************************************************************************************************************************************************************************
 130  88C8              ; Variables.
 131  88C8              ; ******************************************************************************************************************************************************************************************
 132  88C8              ;
 133  88C8              ; 28/07/23
 134  88C8              ;
 135  88C8              ; Variables de DRAW. (Motor principal).
 136  88C8              ;
 137  88C8              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 138  88C8
 139  88C8 00           Filas db 0												; Filas. [DRAW]
 140  88C9 00           Columns db 0  											; Nº de columnas. [DRAW]
 141  88CA 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 142  88CC 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 143  88CE 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 144  88CF 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 145  88D0
 146  88D0              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 147  88D0
 148  88D0 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 149  88D1              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 150  88D1              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 151  88D1 00           Attr db 0												; Atributos de la entidad:
 152  88D2
 153  88D2              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 154  88D2              ;
 155  88D2              ;	COLORES: 0 ..... NEGRO
 156  88D2              ;    		 1 ..... AZUL
 157  88D2              ; 			 2 ..... ROJO
 158  88D2              ;			 3 ..... MAGENTA
 159  88D2              ; 			 4 ..... VERDE
 160  88D2              ; 			 5 ..... CIAN
 161  88D2              ;			 6 ..... AMARILLO
 162  88D2              ; 			 7 ..... BLANCO
 163  88D2
 164  88D2 00 00        Indice_Sprite_der defw 0
 165  88D4 00 00        Indice_Sprite_izq defw 0
 166  88D6 00 00        Puntero_DESPLZ_der defw 0
 167  88D8 00 00        Puntero_DESPLZ_izq defw 0
 168  88DA
 169  88DA 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 170  88DC 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 171  88DD
 172  88DD              ; Variables de objeto. (Características).
 173  88DD
 174  88DD 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 175  88DE 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 176  88DF 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 177  88E0 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 178  88E1
 179  88E1 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 180  88E2              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 181  88E2              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 182  88E2 00 00 00...  Variables_de_borrado ds 6
 183  88E8
 184  88E8 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 185  88EA 00 00        	defw 0
 186  88EC 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 187  88EE 00 00 00 00  	db 0,0,0,0
 188  88F2
 189  88F2              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 190  88F2
 191  88F2 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 192  88F3              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 193  88F3              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 194  88F3              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 195  88F3              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 196  88F3              ;
 197  88F3              ; 														DESCRIPCIÖN:
 198  88F3              ;
 199  88F3              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 200  88F3              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 201  88F3              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 202  88F3              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 203  88F3              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 204  88F3              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 205  88F3              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 206  88F3              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 207  88F3              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 208  88F3              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 209  88F3              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 210  88F3              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 211  88F3              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 212  88F3              ;
 213  88F3              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 214  88F3              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 215  88F3              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 216  88F3
 217  88F3              ; Movimiento. ------------------------------------------------------------------------------------------------------
 218  88F3
 219  88F3 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 220  88F5 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 221  88F7 00 00        Puntero_indice_mov_bucle defw 0							;
 222  88F9              ;
 223  88F9              ;
 224  88F9 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 225  88FA              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 226  88FA              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 227  88FA 00           Incrementa_puntero_backup db 0
 228  88FB 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 229  88FC              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 230  88FC 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 231  88FD 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 232  88FE 00           Cola_de_desplazamiento db 0								; Este byte indica:
 233  88FF              ;
 234  88FF              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 235  88FF              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 236  88FF              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 237  88FF              ;
 238  88FF              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 239  88FF              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 240  88FF              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 241  88FF              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 242  88FF              ;
 243  88FF              ;														;	"$ff" ..... Bucle infinito de repetición.
 244  88FF              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 245  88FF              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 246  88FF
 247  88FF
 248  88FF              ; Variables de funcionamiento. [DRAW].
 249  88FF
 250  88FF 00           Columnas db 0
 251  8900 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 252  8902              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 253  8902 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 254  8903
 255  8903              ; variables de control general.
 256  8903
 257  8903 00           Ctrl_2 db 0
 258  8904              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 259  8904              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 260  8904              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 261  8904              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 262  8904              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 263  8904              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 264  8904              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 265  8904              ;
 266  8904              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 267  8904              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 268  8904              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 269  8904              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 270  8904              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 271  8904
 272  8904 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 273  8905
 274  8905              ;! 61 Bytes por entidad.
 275  8905
 276  8905              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 277  8905              ;					         		---------;      ;---------
 278  8905
 279  8905
 280  8905              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 281  8905
 282  8905 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 283  8906
 284  8906              ;														DESCRIPCIÓN:
 285  8906              ;
 286  8906              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 287  8906              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 288  8906              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 289  8906              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 290  8906              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 291  8906              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 292  8906
 293  8906              ;														BIT 3, Recarga de nueva oleada.
 294  8906              ;														BIT 4, Recarga de nueva oleada.
 295  8906              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 296  8906              ;														BIT 6, **** Frame completo.
 297  8906              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 298  8906
 299  8906 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 300  8908              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 301  8908              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 302  8908              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 303  8908
 304  8908              ; Ctrl_3 db 0											; Byte de control de propósito general.
 305  8908
 306  8908              ;														DESCRIPCIÓN:
 307  8908              ;
 308  8908              ;														BIT 0,
 309  8908
 310  8908              ; Gestión de ENTIDADES y CAJAS.
 311  8908
 312  8908 00 00        Puntero_store_caja defw 0
 313  890A 00 00        Puntero_restore_caja defw 0
 314  890C 00 00        Indice_restore_caja defw 0
 315  890E 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 316  890F 00           Numero_parcial_de_entidades db 0
 317  8910 00           Entidades_en_curso db 0									; ..... ..... .....
 318  8911 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 319  8912              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 320  8912              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 321  8912              ;														; _ (Numero_de_malotes)="0".
 322  8912 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 323  8914 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 324  8916              ;														; _ puntero (Indice_entidades).
 325  8916
 326  8916
 327  8916              ;---------------------------------------------------------------------------------------------------------------
 328  8916              ;
 329  8916              ;	2/9/23
 330  8916              ;
 331  8916              ;	Álbumes.
 332  8916
 333  8916 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 334  8918              ;														; _variable para almacenar lo posición del puntero_
 335  8918              ; 														; _de pila, SP.
 336  8918 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 337  891A              ;														; La utiliza la rutina [Extrae_foto_registros].
 338  891A 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 339  891C 00 00        Stack_snapshot defw 0
 340  891E 00 00        Stack_snapshot_disparos defw 0
 341  8920
 342  8920 00 00        End_Snapshot defw 0
 343  8922              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 344  8922 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 345  8924              ;														; _el snapshot de los registros del siguiente disparo.
 346  8924              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 347  8924 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 348  8926 00 00        End_Snapshot_1 defw 0
 349  8928 00 00        End_Snapshot_disparos_1 defw 0
 350  892A 00 00        End_Snapshot_2 defw 0
 351  892C 00 00        End_Snapshot_disparos_2 defw 0
 352  892E 00 00        End_Snapshot_3 defw 0
 353  8930 00 00        End_Snapshot_disparos_3 defw 0
 354  8932
 355  8932 00 00        Puntero_indice_album_de_fotos defw 0
 356  8934 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 357  8936
 358  8936 00 00        Puntero_indice_End_Snapshot defw 0
 359  8938 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 360  893A 00 00        Puntero_de_End_Snapshot defw 0
 361  893C 00 00        Puntero_de_End_Snapshot_disparos defw 0
 362  893E
 363  893E F0           Semaforo db $f0											; Indicador necesario para poder gestionar los álbumes de fotos de las entidades. Indica en que álbum_
 364  893F              ;														; _ nos encontramos y si el cuadro, (frame), está completo en el álbum, o no.
 365  893F 00           Ctrl_Semaforo db 0										; Byte de control utilizado por la rutina [Gestiona_albumes_de_fotos] para la recolocación de los álbumes vacíos.
 366  8940              ;
 367  8940              ;														DESCRIPCIÓN:
 368  8940              ;
 369  8940              ;														BIT 0, Indica que el último álbum que tenemos abierto, NO ESTÁ COMPLETO. Este bit lo activa la rutina [Gestiona_albumes_de_fotos]_
 370  8940              ;																_ e indica a la función [Gestiona_entidades], que no ha de modificar punteros, (hemos de continuar escribiendo en el mismo_
 371  8940              ;																_ álbum.
 372  8940              ;
 373  8940
 374  8940              ;---------------------------------------------------------------------------------------------------------------
 375  8940
 376  8940              ; Gestión de Disparos.
 377  8940
 378  8940 00           Numero_de_disparotes db 0
 379  8941 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 380  8943 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 381  8945 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 382  8946              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 383  8946              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 384  8946 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 385  8948              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 386  8948              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 387  8948              ;														; _produzca colisión.
 388  8948 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 389  894A              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 390  894A 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 391  894D              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 392  894D 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 393  8950              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 394  8950 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 395  8952 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 396  8953
 397  8953              ;---------------------------------------------------------------------------------------------------------------
 398  8953
 399  8953              ; Relojes y temporizaciones.
 400  8953
 401  8953 00           Contador_de_frames db 0
 402  8954 00           Contador_de_frames_2 db 0
 403  8955
 404  8955 04           Clock_explosion db 4
 405  8956 1E           Clock_Entidades_en_curso db 30
 406  8957 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 407  8958              ;														; Repite la oleada de entidades.
 408  8958 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 409  8959 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 410  895A 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 411  895B
 412  895B 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 413  895C 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 414  895D 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 415  895E
 416  895E              ;---------------------------------------------------------------------------------------------------------------
 417  895E
 418  895E              ; Gestión de NIVELES.
 419  895E
 420  895E 00           Nivel db 0												; Nivel actual del juego.
 421  895F 00 00        Puntero_indice_NIVELES defw 0
 422  8961 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 423  8963              ; 														; _ que definen el NIVEL.
 424  8963              ; Y todo comienza aquí .....
 425  8963              ;
 426  8963              ; Rutina principal *************************************************************************************************************************************************************************
 427  8963              ;
 428  8963              ;	14/11/22
 429  8963
 430  8963              START
 431  8963
 432  8963 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 433  8966 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 434  8968 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 435  896A ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 436  896C F3           	DI
 437  896D
 438  896D 3E 07        	ld a,%00000111
 439  896F CD 42 99     	call Cls
 440  8972
 441  8972 CD 5C 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 442  8975
 443  8975              ; INICIALIZACIÓN.
 444  8975
 445  8975 CD 12 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 446  8978 CD 24 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 447  897B CD 81 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 448  897E              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 449  897E CD 97 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 450  8981              ;													     ; _ malotes antes de guardar ninguna foto.
 451  8981              ; ----------
 452  8981
 453  8981 CD 0C 8D     	call Restore_entidad
 454  8984
 455  8984 21 0F 89     	ld hl,Numero_parcial_de_entidades
 456  8987 46           	ld b,(hl)
 457  8988 04           	inc b
 458  8989 05           	dec b
 459  898A 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 460  898C
 461  898C              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 462  898C              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 463  898C              ;	Pintamos el resto de entidades:
 464  898C
 465  898C              ;	INICIA ENTIDADES !!!!!
 466  898C
 467  898C C5           1 push bc  												; Guardo el contador de entidades.
 468  898D CD 51 8B     	call Inicia_entidad
 469  8990 C1           	pop bc
 470  8991 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 471  8993
 472  8993              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 473  8993              ; (Esto se dá cuando se inicia una nueva oleada).
 474  8993
 475  8993 3A 05 89     	ld a,(Ctrl_1)
 476  8996 CB 5F        	bit 3,a
 477  8998 20 00        	jr nz,5F											; Loop
 478  899A
 479  899A              ; 	INICIA AMADEUS !!!!!
 480  899A
 481  899A              3
 482  899A
 483  899A              ;	call Restore_Amadeus
 484  899A              ;	call Inicia_Puntero_objeto
 485  899A              ;	call Draw
 486  899A              ;	call Guarda_foto_registros
 487  899A              ;	call Guarda_datos_de_borrado_Amadeus
 488  899A
 489  899A              ;	ld de,Amadeus_db
 490  899A              ;	call Store_Amadeus
 491  899A
 492  899A              ; 	INICIA DISPAROS !!!!!
 493  899A
 494  899A              ;	call Inicia_Puntero_Disparo_Entidades
 495  899A              ;	call Inicia_Puntero_Disparo_Amadeus
 496  899A
 497  899A              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 498  899A
 499  899A CD 81 8B     5 call Inicia_punteros_de_cajas
 500  899D CD 0C 8D     	call Restore_entidad
 501  89A0
 502  89A0 3A 05 89     	ld a,(Ctrl_1)
 503  89A3 CB 5F        	bit 3,a
 504  89A5 28 07        	jr z,6F
 505  89A7
 506  89A7              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 507  89A7
 508  89A7 21 05 89     	ld hl,Ctrl_1
 509  89AA CB 9E        	res 3,(hl)
 510  89AC 18 03        	jr Main
 511  89AE
 512  89AE              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 513  89AE              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 514  89AE              ; _ para situarnos en el siguiente album.
 515  89AE
 516  89AE CD C8 8B     6 call Avanza_puntero_de_album_de_fotos_de_entidades
 517  89B1
 518  89B1
 519  89B1              ; ------------------------------------
 520  89B1
 521  89B1              Main
 522  89B1              ;
 523  89B1              ;	3/8/23
 524  89B1
 525  89B1              ; 	ei
 526  89B1
 527  89B1 3A 56 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 528  89B4 47           	ld b,a
 529  89B5 3A 53 89     	ld a,(Contador_de_frames)
 530  89B8 B8           	cp b
 531  89B9 20 18        	jr nz,13F
 532  89BB
 533  89BB 3A 0F 89     	ld a,(Numero_parcial_de_entidades)
 534  89BE 47           	ld b,a
 535  89BF 3A 10 89     	ld a,(Entidades_en_curso)
 536  89C2 B8           	cp b
 537  89C3 28 0E        	jr z,13F
 538  89C5 30 0C        	jr nc,13F
 539  89C7
 540  89C7 3C           	inc a
 541  89C8 32 10 89     	ld (Entidades_en_curso),a
 542  89CB
 543  89CB 3A 56 89     	ld a,(Clock_Entidades_en_curso)
 544  89CE
 545  89CE              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 546  89CE              ;! _ IMPREDECIBLE !!!!
 547  89CE
 548  89CE C6 64        	add 100
 549  89D0 32 56 89     	ld (Clock_Entidades_en_curso),a
 550  89D3
 551  89D3              ; Habilita disparos.
 552  89D3
 553  89D3 21 58 89     13 ld hl,Disparo_Amadeus
 554  89D6 11 5A 89     	ld de,CLOCK_repone_disparo_Amadeus
 555  89D9 CD 06 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 556  89DC
 557  89DC 21 5B 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 558  89DF 11 5D 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 559  89E2 CD 06 9D     	call Habilita_disparos
 560  89E5
 561  89E5              ; COLISIONES.
 562  89E5
 563  89E5 CD 17 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 564  89E8
 565  89E8              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 566  89E8              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 567  89E8              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 568  89E8
 569  89E8 AF           	xor a
 570  89E9 32 45 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 571  89EC
 572  89EC CD 81 8B     	call Inicia_punteros_de_cajas
 573  89EF CD 0C 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 574  89F2              ; 														; _ en DRAW.
 575  89F2 3A C8 88     	ld a,(Filas)
 576  89F5 A7           	and a
 577  89F6 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 578  89F8 CD 1E 8D     	call Incrementa_punteros_de_cajas
 579  89FB 18 F2        	jr 12B
 580  89FD
 581  89FD              ; ---------------------------------------------------------------------------------------
 582  89FD
 583  89FD 3A 0F 89     10 ld a,(Numero_parcial_de_entidades)
 584  8A00 47               ld b,a
 585  8A01 A7           	and a
 586  8A02 20 14        	jr nz,11F
 587  8A04
 588  8A04 21 05 89     	ld hl,Ctrl_1
 589  8A07 CB 66        	bit 4,(hl)
 590  8A09 C2 96 8A     	jp nz,16F
 591  8A0C
 592  8A0C 21 05 89     	ld hl,Ctrl_1
 593  8A0F CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 594  8A11
 595  8A11 3A 53 89     	ld a,(Contador_de_frames)
 596  8A14 3C           	inc a
 597  8A15 32 57 89     	ld (Activa_recarga_cajas),a
 598  8A18
 599  8A18              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 600  8A18
 601  8A18 3A 10 89     11 ld a,(Entidades_en_curso)
 602  8A1B A7           	and a
 603  8A1C CA 96 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 604  8A1F 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 605  8A20
 606  8A20              ; Código que ejecutamos con cada entidad:
 607  8A20              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 608  8A20
 609  8A20 C5           15 push bc 												; Nº de entidades en curso.
 610  8A21
 611  8A21              ; Impacto ???
 612  8A21
 613  8A21 3A E1 88     	ld a,(Impacto)
 614  8A24 A7           	and a
 615  8A25 28 32        	jr z,8F
 616  8A27
 617  8A27              ; Hay Impacto en esta entidad.
 618  8A27
 619  8A27 21 55 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 620  8A2A 35           	dec (hl)
 621  8A2B 20 63        	jr nz,17F
 622  8A2D
 623  8A2D              ;! Velocidad de la animación de la explosión.
 624  8A2D
 625  8A2D 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 626  8A2F              ;														; _,(velocidad de la explosión).
 627  8A2F
 628  8A2F              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 629  8A2F 18 FE        	jr $
 630  8A31
 631  8A31 CD CD 8D     	call Repone_datos_de_borrado
 632  8A34 CD 25 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 633  8A37
 634  8A37
 635  8A37              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 636  8A37
 637  8A37 3A 03 89     	ld a,(Ctrl_2)
 638  8A3A CB 4F        	bit 1,a
 639  8A3C 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 640  8A3E
 641  8A3E              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 642  8A3E
 643  8A3E 3A D0 88     	ld a,(CTRL_DESPLZ)
 644  8A41 A7           	and a
 645  8A42 20 08        	jr nz,18F
 646  8A44
 647  8A44 21 84 84     	ld hl,Indice_Explosion_2x2-2
 648  8A47 22 D6 88     	ld (Puntero_DESPLZ_der),hl
 649  8A4A 18 06        	jr 19F
 650  8A4C
 651  8A4C 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 652  8A4F 22 D6 88     	ld (Puntero_DESPLZ_der),hl
 653  8A52
 654  8A52 21 03 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 655  8A55 CB CE        	set 1,(hl)
 656  8A57 18 22        	jr 7F
 657  8A59
 658  8A59              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 659  8A59              ; _con las coordenadas de la entidad almacenada en DRAW.
 660  8A59
 661  8A59 3A 05 89     8 ld a,(Ctrl_1)
 662  8A5C CB 57        	bit 2,a
 663  8A5E 28 1B        	jr z,7F
 664  8A60
 665  8A60 2A 48 89     	ld hl,(Coordenadas_disparo_certero)
 666  8A63 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 667  8A64              ;														; E contiene la coordenada_X del disparo.
 668  8A64 2A CE 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 669  8A67              ;														; H FILA, (Coordenada_y de la entidad).
 670  8A67 A7           	and a
 671  8A68 ED 52        	sbc hl,de
 672  8A6A
 673  8A6A CD 4E 92     	call Determina_resultado_comparativa
 674  8A6D
 675  8A6D 78           	ld a,b
 676  8A6E A7           	and a
 677  8A6F 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 678  8A71
 679  8A71              ; ----- ----- -----
 680  8A71
 681  8A71 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 682  8A73 32 E1 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 683  8A76
 684  8A76 21 05 89     	ld hl,Ctrl_1
 685  8A79 CB 96        	res 2,(hl)
 686  8A7B
 687  8A7B CD ED 8A     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 688  8A7E
 689  8A7E 3A F2 88     	ld a,(Ctrl_0)
 690  8A81 CB 67        	bit 4,a
 691  8A83 28 0B        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 692  8A85
 693  8A85              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 694  8A85              ; [[[
 695  8A85 CD A7 8D     	call Detecta_disparo_entidad
 696  8A88              ; ]]]
 697  8A88
 698  8A88 CD 62 8B     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 699  8A8B              ;	call Guarda_datos_de_borrado
 700  8A8B
 701  8A8B 21 F2 88     	ld hl,Ctrl_0
 702  8A8E CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 703  8A90
 704  8A90 CD D1 8C     17 call Store_Restore_cajas
 705  8A93
 706  8A93 C1           	pop bc
 707  8A94 10 8A        	djnz 15B
 708  8A96
 709  8A96              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 710  8A96              ; Hemos gestionado todas las unidades.
 711  8A96              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 712  8A96
 713  8A96              ;	ld hl,Ctrl_1
 714  8A96              ;	res 2,(hl)
 715  8A96
 716  8A96 CD C8 8B     16 call Avanza_puntero_de_album_de_fotos_de_entidades	; Hemos terminado de "grabar" el frame completo de entidades.
 717  8A99              ;														; Avanzamos al siguiente álbum para iniciar el siguiente FRAME.
 718  8A99
 719  8A99              ; ----------------------------------------
 720  8A99
 721  8A99 3A 05 89     	ld a,(Ctrl_1) 										; Existe Loop?
 722  8A9C CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 723  8A9E CA B1 89     	jp z,Main
 724  8AA1
 725  8AA1 3A 53 89     	ld a,(Contador_de_frames)
 726  8AA4 47           	ld b,a
 727  8AA5 3A 57 89     	ld a,(Activa_recarga_cajas)
 728  8AA8 B8           	cp b
 729  8AA9 28 08        	jr z,20F
 730  8AAB
 731  8AAB 21 05 89     	ld hl,Ctrl_1
 732  8AAE CB E6        	set 4,(hl)
 733  8AB0 C3 B1 89     	jp Main
 734  8AB3
 735  8AB3 21 05 89     20 ld hl,Ctrl_1
 736  8AB6 CB A6        	res 4,(hl)
 737  8AB8
 738  8AB8 3A 53 89     	ld a,(Contador_de_frames)
 739  8ABB
 740  8ABB              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 741  8ABB              ;! _ IMPREDECIBLE !!!!
 742  8ABB
 743  8ABB C6 0A        	add 10
 744  8ABD 32 56 89     	ld (Clock_Entidades_en_curso),a
 745  8AC0
 746  8AC0 C3 78 89     	jp 4B
 747  8AC3
 748  8AC3 C9           	ret
 749  8AC4
 750  8AC4              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 751  8AC4
 752  8AC4              Gestiona_Amadeus
 753  8AC4
 754  8AC4 3E 04            ld a,4
 755  8AC6 D3 FE        	out ($fe),a											; Azul.
 756  8AC8
 757  8AC8 CD 33 8D     	call Restore_Amadeus
 758  8ACB
 759  8ACB              ;! Activa/desactiva impacto con Amadeus.
 760  8ACB
 761  8ACB 3A E1 88     	ld a,(Impacto)
 762  8ACE A7           	and a
 763  8ACF 20 FE        	jr nz,$
 764  8AD1
 765  8AD1 CD 3E 8B     	call Mov_Amadeus
 766  8AD4
 767  8AD4 3A F2 88     	ld a,(Ctrl_0)
 768  8AD7 CB 67        	bit 4,a
 769  8AD9 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 770  8ADB
 771  8ADB CD 62 8B     	call Guarda_foto_entidad_a_pintar
 772  8ADE CD AD 8D     	call Guarda_datos_de_borrado_Amadeus
 773  8AE1
 774  8AE1 21 F2 88     14 ld hl,Ctrl_0
 775  8AE4 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 776  8AE6
 777  8AE6 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 778  8AE9 CD 45 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 779  8AEC
 780  8AEC              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 781  8AEC
 782  8AEC              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 783  8AEC
 784  8AEC              ;	call Calcula_numero_de_disparotes
 785  8AEC
 786  8AEC C9           	ret
 787  8AED
 788  8AED              ; --------------------------------------------------------------------------------------------------------------
 789  8AED              ;
 790  8AED              ;	27/05/23
 791  8AED
 792  8AED              Mov_obj
 793  8AED
 794  8AED 3A 03 89     	ld a,(Ctrl_2)
 795  8AF0 CB 4F        	bit 1,a
 796  8AF2 28 2B        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 797  8AF4
 798  8AF4              ; Explosión:
 799  8AF4
 800  8AF4 3A 04 89     	ld a,(Frames_explosion)
 801  8AF7 A7           	and a
 802  8AF8 20 11        	jr nz,4F
 803  8AFA
 804  8AFA              ; Una alimaña menos!!!!!!!!!1
 805  8AFA
 806  8AFA CD 4E 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 807  8AFD 21 0F 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 808  8B00 35           	dec (hl)
 809  8B01 21 10 89     	ld hl,Entidades_en_curso
 810  8B04 35           	dec (hl)
 811  8B05 21 0E 89     	ld hl,Numero_de_entidades
 812  8B08 35           	dec (hl)
 813  8B09 18 32        	jr 3F
 814  8B0B
 815  8B0B              ; -----
 816  8B0B
 817  8B0B              ;	`Movemos´ la explosión.
 818  8B0B
 819  8B0B 2A D6 88     4 ld hl,(Puntero_DESPLZ_der)
 820  8B0E 23           	inc hl
 821  8B0F 23           	inc hl
 822  8B10 22 D6 88     	ld (Puntero_DESPLZ_der),hl
 823  8B13 CD 83 8C     	call Extrae_address
 824  8B16 22 CC 88     	ld (Puntero_objeto),hl
 825  8B19
 826  8B19 21 04 89     	ld hl,Frames_explosion
 827  8B1C 35           	dec (hl)
 828  8B1D
 829  8B1D              ;!!!!!	call Guarda_foto_entidad_a_borrar -----
 830  8B1D 18 1E        	jr 3F
 831  8B1F
 832  8B1F AF           2 xor a
 833  8B20 32 F2 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 834  8B23
 835  8B23              ; Movemos Entidades malignas.
 836  8B23
 837  8B23 CD B1 9E     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 838  8B26
 839  8B26 3A F2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 840  8B29 CB 67        	bit 4,a
 841  8B2B C8           	ret z
 842  8B2C
 843  8B2C              ; Ha habido desplazamiento de la entidad maligna.
 844  8B2C              ; Ha llegado a zona de AMADEUS ???
 845  8B2C
 846  8B2C 3A CF 88     	ld a,(Coordenada_y)
 847  8B2F FE 14        	cp $14
 848  8B31 D4 DC 8F     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 849  8B34              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 850  8B34              ; ---------
 851  8B34
 852  8B34 CD 69 8B         call Prepara_var_pintado 			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 853  8B37 CD CD 8D     	call Repone_datos_de_borrado
 854  8B3A CD 25 8C     	call Limpia_Variables_de_borrado
 855  8B3D
 856  8B3D C9           3 ret													; _de la misma.
 857  8B3E
 858  8B3E              ; --------------------------------------------------------------------------------------------------------------
 859  8B3E              ;
 860  8B3E              ;	29/1/23
 861  8B3E
 862  8B3E              Mov_Amadeus
 863  8B3E
 864  8B3E CD 70 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 865  8B41
 866  8B41 3A F2 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 867  8B44 CB 67        	bit 4,a
 868  8B46 C8           	ret z
 869  8B47
 870  8B47              ; ---------
 871  8B47
 872  8B47 CD 69 8B         call Prepara_var_pintado			                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 873  8B4A CD BD 8D     	call Repone_datos_de_borrado_Amadeus
 874  8B4D CD 25 8C     	call Limpia_Variables_de_borrado
 875  8B50
 876  8B50 C9           	ret
 877  8B51
 878  8B51              ; -----------------------------------------------------------------------------------
 879  8B51              ;
 880  8B51              ;	01/11/23
 881  8B51
 882  8B51 CD 89 8C     Inicia_entidad	call Inicia_Puntero_objeto
 883  8B54 CD 56 99     	call Recompone_posicion_inicio
 884  8B57 CD 35 93     	call Draw
 885  8B5A CD A0 7F     	call Guarda_foto_registros
 886  8B5D F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 887  8B5E              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 888  8B5E CD D1 8C     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 889  8B61 C9           	ret
 890  8B62
 891  8B62              ; --------------------------------------------------------------------------------------------------------------
 892  8B62              ;
 893  8B62              ;	31/08/23
 894  8B62              ;
 895  8B62              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 896  8B62              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 897  8B62
 898  8B62              Guarda_foto_entidad_a_pintar
 899  8B62
 900  8B62              ; LLegados a este punto SIEMPRE tenemos cargadas las Variables_de_pintado en DRAW.
 901  8B62
 902  8B62 CD 35 93     	call Draw
 903  8B65 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 904  8B68 C9           	ret													; Modificamos también el (End_Snapshot) correspondiente al álbum en el que nos encontramos.
 905  8B69
 906  8B69              ; --------------------------------------------------------------------------------------------------------------
 907  8B69              ;
 908  8B69              ;	19/9/23
 909  8B69
 910  8B69 21 C8 88     Prepara_var_pintado ld hl,Filas
 911  8B6C 11 E8 88     	ld de,Variables_de_pintado
 912  8B6F 01 08 00     	ld bc,8
 913  8B72 ED B0        	ldir
 914  8B74 C9           	ret
 915  8B75
 916  8B75              ; --------------------------------------------------------------------------------------------------------------
 917  8B75
 918  8B75 21 E8 88     Repone_pintar ld hl,Variables_de_pintado
 919  8B78 11 C8 88     	ld de,Filas
 920  8B7B 01 08 00     	ld bc,8
 921  8B7E ED B0        	ldir
 922  8B80 C9           	ret
 923  8B81
 924  8B81              ; *************************************************************************************************************************************************************
 925  8B81              ;
 926  8B81              ; 8/1/23
 927  8B81              ;
 928  8B81              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 929  8B81              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 930  8B81              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 931  8B81
 932  8B81              ; Destruye HL y DE !!!!!
 933  8B81
 934  8B81              Inicia_punteros_de_cajas
 935  8B81
 936  8B81 21 8C 85     	ld hl,Indice_de_cajas
 937  8B84 CD 83 8C         call Extrae_address
 938  8B87 22 08 89         ld (Puntero_store_caja),hl
 939  8B8A 21 8E 85     	ld hl,Indice_de_cajas+2
 940  8B8D 22 0C 89     	ld (Indice_restore_caja),hl
 941  8B90 CD 83 8C     	call Extrae_address
 942  8B93 22 0A 89     	ld (Puntero_restore_caja),hl
 943  8B96 C9               ret
 944  8B97
 945  8B97              ; ---------------------------------------------------------------
 946  8B97              ;
 947  8B97              ;	9/8/23
 948  8B97              ;
 949  8B97              ;	Inicialización y gestión de álbumes de fotos y cajas.
 950  8B97
 951  8B97              Inicia_punteros_de_albumes_y_malotes
 952  8B97
 953  8B97 21 EC 84     	ld hl,Indice_album_de_fotos
 954  8B9A 22 32 89     	ld (Puntero_indice_album_de_fotos),hl
 955  8B9D CD 83 8C     	call Extrae_address
 956  8BA0 22 1C 89     	ld (Stack_snapshot),hl
 957  8BA3
 958  8BA3 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 959  8BA6 22 34 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 960  8BA9 CD 83 8C     	call Extrae_address
 961  8BAC 22 1E 89     	ld (Stack_snapshot_disparos),hl
 962  8BAF
 963  8BAF 21 FC 84     	ld hl,Indice_End_Snapshot
 964  8BB2 22 36 89     	ld (Puntero_indice_End_Snapshot),hl
 965  8BB5 CD 83 8C     	call Extrae_address
 966  8BB8 22 3A 89     	ld (Puntero_de_End_Snapshot),hl
 967  8BBB
 968  8BBB 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 969  8BBE 22 38 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 970  8BC1 CD 83 8C     	call Extrae_address
 971  8BC4 22 3C 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 972  8BC7
 973  8BC7 C9           	ret
 974  8BC8
 975  8BC8              ;	23/10/23
 976  8BC8
 977  8BC8              Avanza_puntero_de_album_de_fotos_de_entidades
 978  8BC8
 979  8BC8              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 980  8BC8
 981  8BC8              ; Hemos completado de guardar en el álbum correspondiente la foto con todas las entidades.
 982  8BC8              ; Estamos en el último álbum del índice???.
 983  8BC8              ;
 984  8BC8 2A 32 89     	ld hl,(Puntero_indice_album_de_fotos)
 985  8BCB 01 F2 84     	ld bc,Indice_album_de_fotos+6
 986  8BCE A7           	and a
 987  8BCF ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 988  8BD1 20 08        	jr nz,1F								 		; El buffer está lleno. HALT.
 989  8BD3
 990  8BD3              ; Hemos completado Album_de_fotos_3. Frame buffer lleno.
 991  8BD3              ; Actualizamos (Semaforo).
 992  8BD3
 993  8BD3 21 3E 89     	ld hl,Semaforo
 994  8BD6 CB 06        	rlc (hl)										; Semaforo contendrá $08. (Rota a izq. sin carry).
 995  8BD8
 996  8BD8              ; Inicia con el buffer de video completo !!!
 997  8BD8
 998  8BD8 FB           	ei
 999  8BD9 76           	halt
1000  8BDA C9           	ret
1001  8BDB
1002  8BDB 2A 32 89     1 ld hl,(Puntero_indice_album_de_fotos)
1003  8BDE 23           	inc hl
1004  8BDF 23           	inc hl
1005  8BE0 22 32 89     	ld (Puntero_indice_album_de_fotos),hl
1006  8BE3 CD 83 8C     	call Extrae_address
1007  8BE6 22 1C 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1008  8BE9
1009  8BE9 2A 36 89     	ld hl,(Puntero_indice_End_Snapshot)
1010  8BEC 23           	inc hl
1011  8BED 23           	inc hl
1012  8BEE 22 36 89     	ld (Puntero_indice_End_Snapshot),hl
1013  8BF1 CD 83 8C     	call Extrae_address
1014  8BF4 22 3A 89     	ld (Puntero_de_End_Snapshot),hl
1015  8BF7
1016  8BF7 21 3E 89     	ld hl,Semaforo
1017  8BFA CB 06        	rlc (hl) 										; (Rota a izq. sin carry).
1018  8BFC
1019  8BFC C9           	ret
1020  8BFD
1021  8BFD              ; *************************************************************************************************************************************************************
1022  8BFD              ;
1023  8BFD              ; 8/1/23
1024  8BFD              ;
1025  8BFD              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1026  8BFD
1027  8BFD 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1028  8C00 22 41 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1029  8C03 C9           	ret
1030  8C04 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1031  8C07 22 43 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1032  8C0A C9           	ret
1033  8C0B
1034  8C0B              ; -------------------------------------------------------------------------------------------------------------
1035  8C0B              ;
1036  8C0B              ; 21/9/23
1037  8C0B              ;
1038  8C0B
1039  8C0B              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1040  8C0B
1041  8C0B              Limpia_album_Amadeus
1042  8C0B
1043  8C0B 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1044  8C0E 7E           	ld a,(hl)
1045  8C0F A7           	and a
1046  8C10 C8           	ret z
1047  8C11
1048  8C11 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1049  8C14 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1050  8C17 01 0B 00     	ld bc,11
1051  8C1A AF           	xor a
1052  8C1B 77           	ld (hl),a
1053  8C1C ED B0        	ldir
1054  8C1E
1055  8C1E 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1056  8C21 22 24 89     	ld (End_Snapshot_Amadeus),hl
1057  8C24
1058  8C24 C9           	ret
1059  8C25
1060  8C25 21 E2 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1061  8C28 11 E3 88     	ld de,Variables_de_borrado+1
1062  8C2B 01 05 00     	ld bc,5
1063  8C2E AF           	xor a
1064  8C2F 77           	ld (hl),a
1065  8C30 ED B0        	ldir
1066  8C32 C9           	ret
1067  8C33
1068  8C33              ; -------------------------------------------------------------------------------------------------------------
1069  8C33              ;
1070  8C33              ; 8/9/23
1071  8C33              ;
1072  8C33
1073  8C33              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1074  8C33              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1075  8C33
1076  8C33              Calcula_numero_de_malotes
1077  8C33
1078  8C33 21 00 70     	ld hl,Album_de_fotos
1079  8C36 EB           	ex de,hl
1080  8C37 2A 20 89     	ld hl,(End_Snapshot)
1081  8C3A
1082  8C3A 7C           	ld a,h
1083  8C3B A7           	and a
1084  8C3C 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1085  8C3E
1086  8C3E 06 00        4 ld b,0
1087  8C40 7D           	ld a,l
1088  8C41 93           	sub e
1089  8C42 28 07        	jr z,1F
1090  8C44
1091  8C44              ; Nº de malotes no es "0".
1092  8C44
1093  8C44 D6 06        2 sub 6
1094  8C46 04           	inc b
1095  8C47 A7           	and a
1096  8C48 20 FA        	jr nz,2B
1097  8C4A 78           	ld a,b
1098  8C4B
1099  8C4B 32 11 89     1 ld (Numero_de_malotes),a
1100  8C4E C9           	ret
1101  8C4F
1102  8C4F              ; -------------------------------------------------------------------------------------------------------------
1103  8C4F              ;
1104  8C4F              ; 8/9/23
1105  8C4F              ;
1106  8C4F
1107  8C4F              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1108  8C4F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1109  8C4F
1110  8C4F              Calcula_malotes_Amadeus
1111  8C4F
1112  8C4F 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1113  8C52 EB           	ex de,hl
1114  8C53 2A 24 89     	ld hl,(End_Snapshot_Amadeus)
1115  8C56
1116  8C56 7C           	ld a,h
1117  8C57 A7           	and a
1118  8C58 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1119  8C5A
1120  8C5A 06 00        	ld b,0
1121  8C5C 7D           	ld a,l
1122  8C5D 93           	sub e
1123  8C5E 28 07        	jr z,1F
1124  8C60
1125  8C60              ; Nº de malotes no es "0".
1126  8C60
1127  8C60 D6 06        2 sub 6
1128  8C62 04           	inc b
1129  8C63 A7           	and a
1130  8C64 20 FA        	jr nz,2B
1131  8C66 78           	ld a,b
1132  8C67
1133  8C67 32 11 89     1 ld (Numero_de_malotes),a
1134  8C6A C9           	ret
1135  8C6B
1136  8C6B              ; -------------------------------------------------------------------------------------------------------------
1137  8C6B              ;
1138  8C6B              ; 28/2/23
1139  8C6B              ;
1140  8C6B
1141  8C6B              Calcula_numero_de_disparotes
1142  8C6B
1143  8C6B 21 50 71     	ld hl,Album_de_fotos_disparos
1144  8C6E EB           	ex de,hl
1145  8C6F 2A 3C 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1146  8C72
1147  8C72 06 00        	ld b,0
1148  8C74 7D           	ld a,l
1149  8C75 93           	sub e
1150  8C76 28 07        	jr z,1F
1151  8C78
1152  8C78              ; Nº de malotes no es "0".
1153  8C78
1154  8C78 D6 06        2 sub 6
1155  8C7A 04           	inc b
1156  8C7B A7           	and a
1157  8C7C 20 FA        	jr nz,2B
1158  8C7E 78           	ld a,b
1159  8C7F
1160  8C7F 32 40 89     1 ld (Numero_de_disparotes),a
1161  8C82 C9           	ret
1162  8C83
1163  8C83              ; *************************************************************************************************************************************************************
1164  8C83              ;
1165  8C83              ; 20/10/22
1166  8C83              ;
1167  8C83              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1168  8C83              ;
1169  8C83              ; Destruye el puntero y DE !!!!!
1170  8C83
1171  8C83 5E           Extrae_address ld e,(hl)
1172  8C84 23           	inc hl
1173  8C85 56           	ld d,(hl)
1174  8C86 2B           	dec hl
1175  8C87 EB           	ex de,hl
1176  8C88 C9           	ret
1177  8C89
1178  8C89              ; *************************************************************************************************************************************************************
1179  8C89              ;
1180  8C89              ;	7/2/23
1181  8C89              ;
1182  8C89              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1183  8C89              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1184  8C89              ;
1185  8C89              ;   Destruye HL y BC !!!!!,
1186  8C89              ;
1187  8C89              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1188  8C89              ;					"0" ..... Izquierda.
1189  8C89
1190  8C89              Inicia_Puntero_objeto
1191  8C89
1192  8C89 3A DC 88     	ld a,(Cuad_objeto)
1193  8C8C E6 01        	and 1
1194  8C8E F5           	push af
1195  8C8F CC AD 8C     	call z,Inicia_puntero_objeto_izq
1196  8C92 F1           	pop af
1197  8C93 28 2B        	jr z,1F
1198  8C95 CD 9A 8C     	call Inicia_puntero_objeto_der
1199  8C98 18 26        	jr 1F
1200  8C9A
1201  8C9A              ; Arrancamos desde la parte izquierda de la pantalla.
1202  8C9A              ; Iniciamos (Indice_Sprite_der).
1203  8C9A
1204  8C9A 2A D2 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1205  8C9D 22 D6 88     	ld (Puntero_DESPLZ_der),hl
1206  8CA0 CD 83 8C     	call Extrae_address
1207  8CA3 22 CC 88     	ld (Puntero_objeto),hl
1208  8CA6
1209  8CA6 2A D4 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1210  8CA9 22 D8 88     	ld (Puntero_DESPLZ_izq),hl
1211  8CAC C9           	ret
1212  8CAD
1213  8CAD              ; Arrancamos desde la parte derecha de la pantalla.
1214  8CAD              ; Iniciamos (Indice_Sprite_izq).
1215  8CAD
1216  8CAD 2A D4 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1217  8CB0 22 D8 88     	ld (Puntero_DESPLZ_izq),hl
1218  8CB3 CD 83 8C     	call Extrae_address
1219  8CB6 22 CC 88     	ld (Puntero_objeto),hl
1220  8CB9
1221  8CB9 2A D2 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1222  8CBC 22 D6 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1223  8CBF C9           	ret
1224  8CC0
1225  8CC0              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1226  8CC0
1227  8CC0 21 40 83     1 ld hl,Amadeus
1228  8CC3 ED 4B CC 88  	ld bc,(Puntero_objeto)
1229  8CC7 B7 ED 42     	sub hl,bc
1230  8CCA C0           	ret nz
1231  8CCB 21 F2 88     	ld hl,Ctrl_0
1232  8CCE CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1233  8CD0 C9           	ret 												; _de nuestra nave en los extremos.
1234  8CD1
1235  8CD1              ; *************************************************************************************************************************************************************
1236  8CD1              ;
1237  8CD1              ;	14/5/23
1238  8CD1              ;
1239  8CD1              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1240  8CD1              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1241  8CD1
1242  8CD1              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1243  8CD1              ;	_de la 2ª y 3ª entidad respectivamente.
1244  8CD1
1245  8CD1              Store_Restore_cajas
1246  8CD1
1247  8CD1 E5           	push hl
1248  8CD2 D5           	push de
1249  8CD3 C5            	push bc
1250  8CD4
1251  8CD4              ;	STORE !!!!!
1252  8CD4              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1253  8CD4
1254  8CD4 21 C8 88     	ld hl,Filas
1255  8CD7 ED 5B 08 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1256  8CDB 01 3D 00     	ld bc,61
1257  8CDE ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1258  8CE0
1259  8CE0              ; 	Entidad_sospechosa. 20/4/23
1260  8CE0
1261  8CE0 3A E1 88     	ld a,(Impacto)
1262  8CE3 A7           	and a
1263  8CE4 28 0C        	jr z,1F
1264  8CE6
1265  8CE6 2A 08 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1266  8CE9 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1267  8CEC A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1268  8CED ED 4A        	adc hl,bc 											; _ "0" más adelante.
1269  8CEF 22 46 89     	ld (Entidad_sospechosa_de_colision),hl
1270  8CF2
1271  8CF2              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1272  8CF2
1273  8CF2 2A 0A 89     1 ld hl,(Puntero_restore_caja)
1274  8CF5 7E           	ld a,(hl)
1275  8CF6 A7           	and a
1276  8CF7 F5           	push af
1277  8CF8 28 08        	jr z,2F
1278  8CFA
1279  8CFA 11 C8 88     	ld de,Filas
1280  8CFD 01 3D 00     	ld bc,61
1281  8D00 ED B0        	ldir
1282  8D02
1283  8D02 CD 1E 8D     2 call Incrementa_punteros_de_cajas
1284  8D05
1285  8D05 F1           	pop af
1286  8D06 28 EA        	jr z,1B
1287  8D08
1288  8D08 C1           	pop bc
1289  8D09 D1           	pop de
1290  8D0A E1           	pop hl
1291  8D0B
1292  8D0B C9           	ret
1293  8D0C
1294  8D0C              ; **************************************************************************************************
1295  8D0C              ;
1296  8D0C              ;	12/05/23
1297  8D0C              ;
1298  8D0C              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1299  8D0C
1300  8D0C E5           Restore_entidad push hl
1301  8D0D D5           	push de
1302  8D0E C5            	push bc
1303  8D0F
1304  8D0F 2A 08 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1305  8D12 11 C8 88     	ld de,Filas
1306  8D15 01 3D 00     	ld bc,61
1307  8D18 ED B0        	ldir
1308  8D1A
1309  8D1A C1           	pop bc
1310  8D1B D1           	pop de
1311  8D1C E1           	pop hl
1312  8D1D C9           	ret
1313  8D1E
1314  8D1E              ; **************************************************************************************************
1315  8D1E              ;
1316  8D1E              ;	08/05/23
1317  8D1E              ;
1318  8D1E              ;	Incrementamos los dos punteros de entidades. (+1).
1319  8D1E
1320  8D1E              Incrementa_punteros_de_cajas
1321  8D1E
1322  8D1E 2A 0A 89     	ld hl,(Puntero_restore_caja)
1323  8D21 22 08 89     	ld (Puntero_store_caja),hl
1324  8D24 2A 0C 89     	ld hl,(Indice_restore_caja)
1325  8D27 23           	inc hl
1326  8D28 23           	inc hl
1327  8D29 22 0C 89     	ld (Indice_restore_caja),hl
1328  8D2C CD 83 8C         call Extrae_address
1329  8D2F 22 0A 89         ld (Puntero_restore_caja),hl
1330  8D32 C9               ret
1331  8D33
1332  8D33              ; **************************************************************************************************
1333  8D33              ;
1334  8D33              ;	25/01/23
1335  8D33              ;
1336  8D33              ;	Restore_Amadeus
1337  8D33              ;
1338  8D33              ;	Cargamos en DRAW los parámetros de Amadeus.
1339  8D33              ;
1340  8D33
1341  8D33 E5           Restore_Amadeus	push hl
1342  8D34 D5           	push de
1343  8D35 C5            	push bc
1344  8D36 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1345  8D39 11 C8 88     	ld de,Filas
1346  8D3C 01 3D 00     	ld bc,61
1347  8D3F ED B0        	ldir
1348  8D41 C1           	pop bc
1349  8D42 D1           	pop de
1350  8D43 E1           	pop hl
1351  8D44 C9           	ret
1352  8D45
1353  8D45              ; *************************************************************************************************************************************************************
1354  8D45              ;
1355  8D45              ;	29/04/23
1356  8D45              ;
1357  8D45              ;	Store_Amadeus
1358  8D45              ;
1359  8D45              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1360  8D45              ;
1361  8D45              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1362  8D45              ;
1363  8D45              ;	DESTRUYE: HL y BC y DE.
1364  8D45
1365  8D45 21 C8 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1366  8D48 01 3D 00     	ld bc,61
1367  8D4B ED B0        	ldir
1368  8D4D C9           	ret
1369  8D4E
1370  8D4E              ; -----------------------------------------------------------
1371  8D4E              ;
1372  8D4E              ;	27/04/23
1373  8D4E              ;
1374  8D4E              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1375  8D4E              ;
1376  8D4E              ;	Destruye: HL,BC,DE,A
1377  8D4E
1378  8D4E 21 C8 88     Borra_datos_entidad ld hl,Filas
1379  8D51 01 3C 00     	ld bc,60
1380  8D54 AF           	xor a
1381  8D55 77           	ld (hl),a
1382  8D56 11 C9 88     	ld de,Filas+1
1383  8D59 ED B0        	ldir
1384  8D5B C9           	ret
1385  8D5C
1386  8D5C              ; -----------------------------------------------------------
1387  8D5C
1388  8D5C              ; Teclado.
1389  8D5C
1390  8D5C 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1391  8D5E DB FE        	in a,($fe)
1392  8D60 E6 01        	and $01
1393  8D62 28 02        	jr z,1f
1394  8D64 18 F6        	jr Pulsa_ENTER
1395  8D66 C9           1 ret
1396  8D67
1397  8D67              ; **************************************************************************************************
1398  8D67              ;
1399  8D67              ; Temporización.
1400  8D67
1401  8D67              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1402  8D67              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1403  8D67              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1404  8D67              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1405  8D67
1406  8D67              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1407  8D67              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1408  8D67              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1409  8D67
1410  8D67              ; A partir de $4f61 no hace falta DELAY.
1411  8D67
1412  8D67              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1413  8D67
1414  8D67 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1415  8D6A 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1416  8D6B 78           	LD A,B
1417  8D6C A7           	AND A
1418  8D6D 20 FB        	JR NZ,wait
1419  8D6F C9           	RET
1420  8D70
1421  8D70              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1422  8D70              ;
1423  8D70              ;	5/3/23
1424  8D70              ;
1425  8D70              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1426  8D70
1427  8D70              Movimiento_Amadeus
1428  8D70
1429  8D70              ; Disparo.
1430  8D70
1431  8D70 3A 58 89     	ld a,(Disparo_Amadeus)
1432  8D73 A7           	and a
1433  8D74 20 02        	jr nz,1F
1434  8D76 18 15        	jr 2F
1435  8D78
1436  8D78 3E F7        1 ld a,$f7													; "5" para disparar.
1437  8D7A DB FE        	in a,($fe)
1438  8D7C E6 10        	and $10
1439  8D7E
1440  8D7E F5           	push af
1441  8D7F CC 3F 8E     	call z,Genera_disparo
1442  8D82 F1           	pop af
1443  8D83 20 08        	jr nz,2F
1444  8D85
1445  8D85 3A 58 89     	ld a,(Disparo_Amadeus)
1446  8D88 EE 01        	xor 1
1447  8D8A 32 58 89     	ld (Disparo_Amadeus),a
1448  8D8D
1449  8D8D 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1450  8D8F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1451  8D91 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1452  8D93 CC 10 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1453  8D96
1454  8D96 3E F7        	ld a,$f7
1455  8D98 DB FE        	in a,($fe)
1456  8D9A E6 01        	and $01
1457  8D9C C8           	ret z
1458  8D9D
1459  8D9D 3E F7        	ld a,$f7
1460  8D9F DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1461  8DA1 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1462  8DA3 CC F2 99     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1463  8DA6 C9           	ret
1464  8DA7
1465  8DA7              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1466  8DA7              ;
1467  8DA7              ;	Rutina provisional para que los malotes cagen balas.
1468  8DA7
1469  8DA7              Detecta_disparo_entidad
1470  8DA7
1471  8DA7 3A 5B 89     	ld a,(Disparo_entidad)
1472  8DAA A7           	and a
1473  8DAB C8           	ret z
1474  8DAC
1475  8DAC              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1476  8DAC
1477  8DAC              ;	ld a,$7f				; Detecta SPACE.
1478  8DAC              ;	in a,($fe)
1479  8DAC              ;	and 1
1480  8DAC              ;	ret nz
1481  8DAC
1482  8DAC              ;	call Genera_disparo
1483  8DAC C9           	ret
1484  8DAD
1485  8DAD              ; ----------------------------------------------------------------------
1486  8DAD              ;
1487  8DAD              ;	8/9/23
1488  8DAD
1489  8DAD 2A 24 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1490  8DB0 2B            	dec hl
1491  8DB1 7E           	ld a,(hl)
1492  8DB2 A7           	and a
1493  8DB3 C8           	ret z										; Salimos si es álbum está vacío.
1494  8DB4
1495  8DB4 11 E7 88     	ld de,Variables_de_borrado+5
1496  8DB7 01 06 00     	ld bc,6
1497  8DBA ED B8        	lddr
1498  8DBC C9           	ret
1499  8DBD
1500  8DBD              ; ----------------------------------------------------------------------
1501  8DBD              ;
1502  8DBD              ;	9/9/23
1503  8DBD
1504  8DBD              Repone_datos_de_borrado_Amadeus
1505  8DBD
1506  8DBD 21 E2 88     	ld hl,Variables_de_borrado
1507  8DC0 11 A0 72     	ld de,Album_de_fotos_Amadeus
1508  8DC3 01 06 00     	ld bc,6
1509  8DC6 ED B0        	ldir
1510  8DC8
1511  8DC8 EB           	ex de,hl
1512  8DC9 22 24 89     	ld (End_Snapshot_Amadeus),hl
1513  8DCC
1514  8DCC C9           	ret
1515  8DCD
1516  8DCD              ; ----------------------------------------------------------------------
1517  8DCD              ;
1518  8DCD              ;	27/10/23
1519  8DCD              ;
1520  8DCD
1521  8DCD              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1522  8DCD              ;	_ Album_de_fotos correspondiente.
1523  8DCD
1524  8DCD              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1525  8DCD              ;	_ durante el proceso de escritura.
1526  8DCD
1527  8DCD              Repone_datos_de_borrado
1528  8DCD
1529  8DCD F3           	di
1530  8DCE ED 5B 1C 89  	ld de,(Stack_snapshot)
1531  8DD2 21 E2 88     	ld hl,Variables_de_borrado
1532  8DD5 01 06 00     	ld bc,6
1533  8DD8 ED B0        	ldir
1534  8DDA FB           	ei
1535  8DDB
1536  8DDB EB           	ex de,hl
1537  8DDC 22 1C 89     	ld (Stack_snapshot),hl
1538  8DDF
1539  8DDF C9           	ret
1540  8DE0
1541  8DE0              ; ----------------------------------------------------------------------
1542  8DE0              ;
1543  8DE0              ;	11/8/23
1544  8DE0
1545  8DE0              Gestiona_entidades
1546  8DE0
1547  8DE0              ;	Consultamos el estado de buffer. Si Album_de_fotos no está completo, salimos de la rutina, no hay nada que gestionar.
1548  8DE0
1549  8DE0 3A 3E 89     	ld a,(Semaforo)
1550  8DE3 CB 47        	bit 0,a
1551  8DE5 28 FE        	jr z,$												;! STOP el buffer está vacío.
1552  8DE7 C8           	ret z
1553  8DE8
1554  8DE8              ;	call Extrae_foto_disparos
1555  8DE8              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1556  8DE8
1557  8DE8 CD EC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1558  8DEB
1559  8DEB              ;	Album incompleto ?????
1560  8DEB              ;	Si es así, salimos de la rutina sin modificar punteros. Tenemos que terminar de pinter el FRAME.
1561  8DEB
1562  8DEB 3A 3F 89     	ld a,(Ctrl_Semaforo)
1563  8DEE CB 67        	bit 4,a
1564  8DF0 28 05        	jr z,1F
1565  8DF2
1566  8DF2              ;! Buffer vacío. Inicializar (Ctrl_Semaforo) y salir sin modificar punteros.
1567  8DF2
1568  8DF2 AF           	xor a
1569  8DF3 32 3F 89     	ld (Ctrl_Semaforo),a
1570  8DF6 C9           	ret
1571  8DF7
1572  8DF7 CB 47        1 bit 0,a
1573  8DF9 C0           	ret nz
1574  8DFA
1575  8DFA              ; El buffer estaba completo y hemos pintado el frame y desplazado los álbumes.
1576  8DFA              ; Nos situamos al comienzo del último álbum.
1577  8DFA
1578  8DFA CD 3F 73     	call Modifica_Stack_snapshot
1579  8DFD
1580  8DFD C9           	ret
1581  8DFE
1582  8DFE
1583  8DFE
1584  8DFE              ; -----------------------------------------------------------------------------------
1585  8DFE
1586  8DFE              Pinta_Amadeus
1587  8DFE
1588  8DFE 3E 06        	ld a,6
1589  8E00 D3 FE            out ($fe),a										; Amarillo
1590  8E02
1591  8E02 CD 4F 8C        	call Calcula_malotes_Amadeus
1592  8E05 CD C5 96     	call Extrae_foto_Amadeus
1593  8E08 CD 0B 8C     	call Limpia_album_Amadeus
1594  8E0B
1595  8E0B C9           	ret
1596  8E0C
1597  8E0C              Pinta_entidades
1598  8E0C
1599  8E0C 3A 3E 89     	ld a,(Semaforo)
1600  8E0F CB 47        	bit 0,a
1601  8E11 C8           	ret z
1602  8E12
1603  8E12              ; Pintamos siempre que Album_de_fotos contenga un frame completo.
1604  8E12
1605  8E12 CD 33 8C     	call Calcula_numero_de_malotes
1606  8E15 CD 43 96     	call Extrae_foto_entidades
1607  8E18
1608  8E18 C9           	ret
1609  8E19
1610  8E19              ; -----------------------------------------------------------------------------------
1611  8E19
1612  8E19              Actualiza_relojes
1613  8E19
1614  8E19 21 53 89     	ld hl,Contador_de_frames
1615  8E1C 7E           	ld a,(hl)
1616  8E1D FE FF        	cp $ff
1617  8E1F 20 04        	jr nz,1F
1618  8E21 34           	inc (hl)
1619  8E22 21 54 89     	ld hl,Contador_de_frames_2
1620  8E25 34           1 inc (hl)											; 0 - 255
1621  8E26 C9           	ret
1622  8E27
1623  8E27              ; ---------------------------------------------------------------
1624  8E27              ;
1625  8E27              ;	27/9/23
1626  8E27
1627  8E27              Guarda_parametros_DRAW
1628  8E27
1629  8E27 21 C8 88     	ld hl,Filas
1630  8E2A 11 AC 72     	ld de,Almacen_de_parametros_DRAW
1631  8E2D 01 3D 00     	ld bc,61
1632  8E30 ED B0        	ldir
1633  8E32 C9           	ret
1634  8E33
1635  8E33              Recupera_parametros_DRAW
1636  8E33
1637  8E33 21 AC 72     	ld hl,Almacen_de_parametros_DRAW
1638  8E36 11 C8 88     	ld de,Filas
1639  8E39 01 3D 00     	ld bc,61
1640  8E3C ED B0        	ldir
1641  8E3E C9           	ret
1642  8E3F
1643  8E3F              ; ---------------------------------------------------------------
1644  8E3F
1645  8E3F              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8E3F              ; ******************************************************************************************************************************************************************************************
   2+ 8E3F              ;
   3+ 8E3F              ;   21/07/23
   4+ 8E3F              ;
   5+ 8E3F              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8E3F              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8E3F              ;
   8+ 8E3F              ;
   9+ 8E3F              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8E3F              ;
  11+ 8E3F              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8E3F              ;               _ hacen las entidades hacia abajo.
  13+ 8E3F              ;
  14+ 8E3F              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8E3F              ;
  16+ 8E3F              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8E3F              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8E3F              ;
  19+ 8E3F              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8E3F              ;           _ la bala.
  21+ 8E3F              ;
  22+ 8E3F              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8E3F              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8E3F              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8E3F              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8E3F              ;           _ en el momento de generarse la bala)).
  27+ 8E3F
  28+ 8E3F              Genera_disparo
  29+ 8E3F
  30+ 8E3F              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8E3F              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8E3F              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8E3F              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8E3F              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8E3F              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8E3F              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8E3F
  38+ 8E3F              ; Exclusiones:
  39+ 8E3F
  40+ 8E3F 3A E0 88         ld a,(Vel_down)
  41+ 8E42 47               ld b,a
  42+ 8E43 3A 52 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8E46 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8E47 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8E48 3A FF 88         ld a,(Columnas)
  46+ 8E4B 47               ld b,a
  47+ 8E4C 3A C9 88         ld a,(Columns)
  48+ 8E4F B8               cp b
  49+ 8E50 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8E51
  51+ 8E51              ; ----- ----- -----
  52+ 8E51
  53+ 8E51 3A F2 88         ld a,(Ctrl_0)
  54+ 8E54 CB 77            bit 6,a
  55+ 8E56 20 06            jr nz,14F
  56+ 8E58
  57+ 8E58 3A CF 88         ld a,(Coordenada_y)
  58+ 8E5B FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8E5D D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8E5E
  61+ 8E5E 21 00 80     14 ld hl,Indice_disparo
  62+ 8E61 3A D0 88         ld a,(CTRL_DESPLZ)
  63+ 8E64 4F               ld c,a
  64+ 8E65 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8E67              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8E67              ;                                            ""        ""       "f9", B="1"
  67+ 8E67              ;                                            ""        ""       "fb", B="2"
  68+ 8E67              ;                                            ""        ""       "fb", B="3"
  69+ 8E67 A7               and a
  70+ 8E68 28 10            jr z,1F
  71+ 8E6A E6 01            and 1
  72+ 8E6C C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8E6D
  74+ 8E6D 79               ld a,c
  75+ 8E6E 16 F9            ld d,$f9
  76+ 8E70 23           2 inc hl
  77+ 8E71 23               inc hl
  78+ 8E72 04               inc b
  79+ 8E73 BA               cp d
  80+ 8E74 28 04            jr z,1F
  81+ 8E76 14               inc d
  82+ 8E77 14               inc d
  83+ 8E78 18 F6            jr 2B
  84+ 8E7A
  85+ 8E7A CD 83 8C     1 call Extrae_address
  86+ 8E7D E5               push hl
  87+ 8E7E FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8E80 DD 21 0B 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8E84
  90+ 8E84              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8E84              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8E84
  93+ 8E84 3A F2 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8E87 CB 77            bit 6,a
  95+ 8E89 20 04            jr nz,19F
  96+ 8E8B
  97+ 8E8B AF               xor a
  98+ 8E8C 32 5B 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8E8F
 100+ 8E8F 3A DC 88     19 ld a,(Cuad_objeto)
 101+ 8E92 FE 02            cp 2
 102+ 8E94 38 66            jr c,3F
 103+ 8E96 28 64            jr z,3F
 104+ 8E98
 105+ 8E98              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8E98
 107+ 8E98 E6 01            and 1
 108+ 8E9A 28 30            jr z,4F
 109+ 8E9C
 110+ 8E9C              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8E9C              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8E9C              ;
 113+ 8E9C              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8E9C              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8E9C              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8E9C
 117+ 8E9C 2A CA 88     	ld hl,(Posicion_actual)
 118+ 8E9F
 119+ 8E9F              ;   Amadeus o entidad ???.
 120+ 8E9F
 121+ 8E9F 3A F2 88         ld a,(Ctrl_0)
 122+ 8EA2 CB 77            bit 6,a
 123+ 8EA4 28 0A            jr z,8F
 124+ 8EA6
 125+ 8EA6              ; 	Dispara Amadeus.
 126+ 8EA6
 127+ 8EA6 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8EA8 CD 34 96         call PreviousScan
 129+ 8EAB CD 34 96         call PreviousScan
 130+ 8EAE
 131+ 8EAE              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8EAE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8EAE              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8EAE              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8EAE
 136+ 8EAE 18 11            jr 10F
 137+ 8EB0
 138+ 8EB0              ; 	Dispara Entidad.
 139+ 8EB0
 140+ 8EB0 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8EB3              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8EB3
 143+ 8EB3              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8EB3              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8EB3
 146+ 8EB3 C5               push bc
 147+ 8EB4 06 10            ld b,16
 148+ 8EB6 CD 25 96     9 call NextScan
 149+ 8EB9 10 FB            djnz 9B
 150+ 8EBB C1               pop bc
 151+ 8EBC CD 26 8F         call Ajusta_disparo_parte_izquierda
 152+ 8EBF 18 06            jr 17F
 153+ 8EC1
 154+ 8EC1              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8EC1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8EC1              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8EC1              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8EC1
 159+ 8EC1 CD 26 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8EC4 CD 9B 8F         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8EC7              ;                                                      ; _al generar el disparo.
 162+ 8EC7
 163+ 8EC7              ; 	LLegados a este punto tendremos:
 164+ 8EC7              ;
 165+ 8EC7              ;       Puntero_objeto_disparo en IY.
 166+ 8EC7              ;       Rutinas_de_impresion en IX.
 167+ 8EC7              ;       Puntero_de_impresion en HL.
 168+ 8EC7              ;       Impacto/Dirección en BC.
 169+ 8EC7
 170+ 8EC7 CD 2E 8F     17 call Almacena_disparo
 171+ 8ECA 18 52            jr 6F                                             ; RET.
 172+ 8ECC
 173+ 8ECC              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8ECC              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8ECC              ;
 176+ 8ECC              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8ECC              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8ECC              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8ECC
 180+ 8ECC 2A CA 88     4 ld hl,(Posicion_actual)
 181+ 8ECF
 182+ 8ECF              ;   Amadeus o entidad ???.
 183+ 8ECF
 184+ 8ECF 3A F2 88         ld a,(Ctrl_0)
 185+ 8ED2 CB 77            bit 6,a
 186+ 8ED4 28 0A            jr z,11F
 187+ 8ED6
 188+ 8ED6              ; 	Dispara Amadeus.
 189+ 8ED6
 190+ 8ED6 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8ED8 CD 34 96         call PreviousScan
 192+ 8EDB CD 34 96         call PreviousScan
 193+ 8EDE
 194+ 8EDE              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8EDE              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8EDE              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8EDE              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8EDE
 199+ 8EDE 18 11            jr 13F
 200+ 8EE0
 201+ 8EE0              ; 	Dispara Entidad.
 202+ 8EE0
 203+ 8EE0 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8EE3              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8EE3
 206+ 8EE3              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8EE3              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8EE3
 209+ 8EE3 C5               push bc
 210+ 8EE4 06 10            ld b,16
 211+ 8EE6 CD 25 96     12 call NextScan
 212+ 8EE9 10 FB            djnz 12B
 213+ 8EEB C1               pop bc
 214+ 8EEC
 215+ 8EEC CD 1F 8F         call Ajusta_disparo_parte_derecha
 216+ 8EEF 18 06            jr 18F
 217+ 8EF1
 218+ 8EF1              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8EF1              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8EF1              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8EF1              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8EF1
 223+ 8EF1 CD 1F 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8EF4 CD 9B 8F         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8EF7              ;                                                       ; _al generar el disparo.
 226+ 8EF7
 227+ 8EF7              ; LLegados a este punto tendremos:
 228+ 8EF7              ;
 229+ 8EF7              ;       Puntero_objeto_disparo en IY.
 230+ 8EF7              ;       Rutinas_de_impresion en IX.
 231+ 8EF7              ;       Puntero_de_impresion en HL.
 232+ 8EF7              ;       Impacto/Dirección en BC.
 233+ 8EF7
 234+ 8EF7 CD 2E 8F     18 call Almacena_disparo
 235+ 8EFA 18 22            jr 6F                                               ; RET.
 236+ 8EFC
 237+ 8EFC              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8EFC
 239+ 8EFC 28 11        3 jr z,5F
 240+ 8EFE
 241+ 8EFE              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8EFE              ;
 243+ 8EFE              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8EFE              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8EFE              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8EFE              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8EFE
 248+ 8EFE              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8EFE              ;	   ""        ""       "f9", B="1"
 250+ 8EFE              ;	   ""        ""       "fb", B="2"
 251+ 8EFE              ; 	   ""        ""       "fb", B="3"
 252+ 8EFE
 253+ 8EFE 2A CA 88     	ld hl,(Posicion_actual)
 254+ 8F01 CD 25 96     	call NextScan
 255+ 8F04
 256+ 8F04              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F04              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F04              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F04              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F04
 261+ 8F04 CD 26 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F07
 263+ 8F07              ; 	No se produce impacto. B="$80"
 264+ 8F07              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F07
 266+ 8F07 01 80 80         ld bc,$8080
 267+ 8F0A
 268+ 8F0A              ; 	LLegados a este punto tendremos:
 269+ 8F0A              ;
 270+ 8F0A              ;       Puntero_objeto_disparo en IY.
 271+ 8F0A              ;       Rutinas_de_impresion en IX.
 272+ 8F0A              ;       Puntero_de_impresion en HL.
 273+ 8F0A              ;       Impacto/Dirección en BC.
 274+ 8F0A
 275+ 8F0A CD 2E 8F         call Almacena_disparo
 276+ 8F0D 18 0F            jr 6F                                           ; RET.
 277+ 8F0F
 278+ 8F0F              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8F0F              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8F0F              ;
 281+ 8F0F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8F0F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8F0F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8F0F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8F0F
 286+ 8F0F 2A CA 88     5 ld hl,(Posicion_actual)
 287+ 8F12 CD 25 96     	call NextScan
 288+ 8F15
 289+ 8F15              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8F15              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8F15              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8F15              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8F15
 294+ 8F15 CD 1F 8F         call Ajusta_disparo_parte_derecha
 295+ 8F18
 296+ 8F18              ; 	No se produce impacto. B="$80"
 297+ 8F18              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8F18
 299+ 8F18 01 80 80     15 ld bc,$8080
 300+ 8F1B
 301+ 8F1B              ; 	LLegados a este punto tendremos:
 302+ 8F1B              ;
 303+ 8F1B              ;       Puntero_objeto_disparo en IY.
 304+ 8F1B              ;       Rutinas_de_impresion en IX.
 305+ 8F1B              ;       Puntero_de_impresion en HL.
 306+ 8F1B              ;       Impacto/Dirección en BC.
 307+ 8F1B
 308+ 8F1B CD 2E 8F         call Almacena_disparo
 309+ 8F1E
 310+ 8F1E C9           6 ret
 311+ 8F1F
 312+ 8F1F              ; ----------------------------------------------------------------
 313+ 8F1F              ;
 314+ 8F1F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8F1F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8F1F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8F1F
 318+ 8F1F 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8F20 FE 02            cp 2
 320+ 8F22 38 01            jr c,1F
 321+ 8F24 23               inc hl
 322+ 8F25 C9           1 ret
 323+ 8F26
 324+ 8F26 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8F27 FE 01        	cp 1
 326+ 8F29 20 01        	jr nz,1F
 327+ 8F2B 2B           	dec hl
 328+ 8F2C 2B           1 dec hl
 329+ 8F2D C9               ret
 330+ 8F2E
 331+ 8F2E              ; ----------------------------------------------------------------
 332+ 8F2E              ;
 333+ 8F2E              ;   25/02/23
 334+ 8F2E              ;
 335+ 8F2E              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8F2E              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8F2E              ;
 338+ 8F2E              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8F2E              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8F2E
 341+ 8F2E              Almacena_disparo
 342+ 8F2E
 343+ 8F2E E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8F2F F1               pop af
 345+ 8F30 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8F31
 347+ 8F31 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8F32 E6 01            and 1
 349+ 8F34 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8F36              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8F36              ; 	Dispara AMADEUS.
 352+ 8F36
 353+ 8F36              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8F36              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8F36              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8F36              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8F36
 358+ 8F36 C5               push bc
 359+ 8F37 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8F3A 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8F3D A7               and a
 362+ 8F3E ED 42            sbc hl,bc
 363+ 8F40 CC 04 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8F43 C1               pop bc
 365+ 8F44 28 54            jr z,4F
 366+ 8F46
 367+ 8F46 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8F49 23               inc hl
 369+ 8F4A 23               inc hl
 370+ 8F4B 22 43 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8F4E              ;                                                   ; _ Disparo_(+1).
 372+ 8F4E 18 18            jr 2F
 373+ 8F50
 374+ 8F50              ; Dispara una entidad.
 375+ 8F50
 376+ 8F50 C5           1 push bc
 377+ 8F51 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8F54 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8F57 A7               and a
 380+ 8F58 ED 42            sbc hl,bc
 381+ 8F5A CC FD 8B         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8F5D C1               pop bc
 383+ 8F5E 28 3A            jr z,4F
 384+ 8F60
 385+ 8F60 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8F63 23               inc hl
 387+ 8F64 23               inc hl
 388+ 8F65 22 41 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8F68              ;                                                   ; _ Disparo_(+1).
 390+ 8F68 CD 83 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8F6B              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8F6B              ;
 393+ 8F6B              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8F6B              ;                                                     Rutinas_de_impresion en IX.
 395+ 8F6B              ;                                                     Puntero_de_impresion en HL.
 396+ 8F6B              ;                                                     Impacto/Dirección en BC.
 397+ 8F6B
 398+ 8F6B 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8F6C 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8F6D 23               inc hl                                          ; _ al siguiente.
 401+ 8F6E A7               and a
 402+ 8F6F 20 C0            jr nz,3B
 403+ 8F71
 404+ 8F71 08               ex af,af
 405+ 8F72 ED 73 16 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 8F76 F9               ld sp,hl
 407+ 8F77
 408+ 8F77 DD E5            push ix                                         ; Rutina de impresión.
 409+ 8F79 F5               push af                                         ; Puntero de impresión.
 410+ 8F7A FD E5            push iy                                         ; Puntero objeto.
 411+ 8F7C C5               push bc                                         ; Control.
 412+ 8F7D
 413+ 8F7D ED 7B 16 89      ld sp,(Stack)
 414+ 8F81
 415+ 8F81              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 8F81
 417+ 8F81 21 05 89     	ld hl,Ctrl_1
 418+ 8F84 CB C6        	set 0,(hl)
 419+ 8F86
 420+ 8F86 DD E5        	push ix
 421+ 8F88 E1               pop hl
 422+ 8F89 F5               push af
 423+ 8F8A DD E1            pop ix
 424+ 8F8C
 425+ 8F8C CD A0 7F     	call Guarda_foto_registros
 426+ 8F8F
 427+ 8F8F 21 05 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 8F92 CB 86        	res 0,(hl)
 429+ 8F94
 430+ 8F94              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 8F94              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 8F94
 433+ 8F94 CD 04 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 8F97 CD FD 8B         call Inicia_Puntero_Disparo_Entidades
 435+ 8F9A
 436+ 8F9A C9           4 ret
 437+ 8F9B
 438+ 8F9B              ; ----------------------------------------------------------------
 439+ 8F9B              ;
 440+ 8F9B              ;   4/3/23
 441+ 8F9B              ;
 442+ 8F9B              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 8F9B              ;   _ al generarse el disparo.
 444+ 8F9B              ;
 445+ 8F9B              ;       "$80" ..... No se produce colisión.
 446+ 8F9B              ;       "$81" ..... Se produce colisión.
 447+ 8F9B              ;
 448+ 8F9B              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 8F9B              ;         _ que forman el disparo.
 450+ 8F9B
 451+ 8F9B
 452+ 8F9B              Comprueba_Colision
 453+ 8F9B
 454+ 8F9B              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 8F9B
 456+ 8F9B FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 8F9D E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 8F9E
 459+ 8F9E CD D4 8F         call Modifica_H_Velocidad_disparo
 460+ 8FA1
 461+ 8FA1 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 8FA2 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 8FA4 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 8FA6
 465+ 8FA6 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 8FA8 CD C4 8F         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 8FAB
 468+ 8FAB 7B               ld a,e
 469+ 8FAC E6 01            and 1
 470+ 8FAE 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 8FB0              ;                                                  ; _ para activar IMPACTO.
 472+ 8FB0 E1               pop hl
 473+ 8FB1 E5               push hl
 474+ 8FB2 CD 25 96         call NextScan
 475+ 8FB5
 476+ 8FB5 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 8FB6 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 8FB8 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 8FBA              ;                                                  ; _ 2º scanline si esto es así.
 480+ 8FBA 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 8FBC CD C4 8F         call Bucle_2
 482+ 8FBF
 483+ 8FBF 43           1 ld b,e
 484+ 8FC0 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 8FC1 FD E1            pop iy
 486+ 8FC3 C9               ret
 487+ 8FC4
 488+ 8FC4              ; ---------- ----------
 489+ 8FC4
 490+ 8FC4 06 02        Bucle_2 ld b,2
 491+ 8FC6 FD 7E 00     2 ld a,(iy)
 492+ 8FC9 A6               and (hl)
 493+ 8FCA 28 02            jr z,1F
 494+ 8FCC 1E 81            ld e,$81
 495+ 8FCE 23           1 inc hl
 496+ 8FCF FD 23            inc iy
 497+ 8FD1 10 F3            djnz 2B
 498+ 8FD3 C9               ret
 499+ 8FD4
 500+ 8FD4              ; ---------- ----------
 501+ 8FD4              ;
 502+ 8FD4              ;   21/7/23
 503+ 8FD4
 504+ 8FD4              Modifica_H_Velocidad_disparo
 505+ 8FD4
 506+ 8FD4 3A 52 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 8FD7 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 8FD9 D0               ret nc                                         ; _ incrementamos H.
 509+ 8FDA 24               inc h
 510+ 8FDB
 511+ 8FDB C9               ret
 512+ 8FDC
 513+ 8FDC              ; -------------------------------------------------------------------------------------------------------------
 514+ 8FDC              ;
 515+ 8FDC              ;   11/04/23
 516+ 8FDC              ;
 517+ 8FDC              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 8FDC              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 8FDC              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 8FDC              ;
 521+ 8FDC              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 8FDC
 523+ 8FDC              Compara_coordenadas_X
 524+ 8FDC
 525+ 8FDC              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 8FDC              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 8FDC
 528+ 8FDC              ; Preparamos registros:
 529+ 8FDC
 530+ 8FDC 21 CE 88         ld hl,Filas+6
 531+ 8FDF 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 8FE0 23               inc hl
 533+ 8FE1 23               inc hl
 534+ 8FE2 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 8FE3 43               ld b,e
 536+ 8FE4
 537+ 8FE4 21 DC 88         ld hl,Filas+20
 538+ 8FE7 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 8FE8 21 4D 89         ld hl,Coordenadas_X_Entidad
 540+ 8FEB CD 07 92         call Guarda_coordenadas_X
 541+ 8FEE
 542+ 8FEE              ; Preparamos registros:
 543+ 8FEE
 544+ 8FEE 21 A4 85         ld hl,Amadeus_db+6
 545+ 8FF1 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 8FF2 23               inc hl
 547+ 8FF3 23               inc hl
 548+ 8FF4 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 8FF5 7B               ld a,e
 550+ 8FF6 08               ex af,af'
 551+ 8FF7 21 B2 85         ld hl,Amadeus_db+20
 552+ 8FFA 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 8FFB 21 4A 89         ld hl,Coordenadas_X_Amadeus
 554+ 8FFE CD 07 92         call Guarda_coordenadas_X
 555+ 9001
 556+ 9001              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9001              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9001
 559+ 9001 04               inc b
 560+ 9002 05               dec b
 561+ 9003 28 04            jr z,1F
 562+ 9005 06 03            ld b,3
 563+ 9007 18 02            jr 2F
 564+ 9009 06 02        1 ld b,2
 565+ 900B 08           2 ex af,af'
 566+ 900C 3C               inc a
 567+ 900D 3D               dec a
 568+ 900E 28 04            jr z,5F
 569+ 9010 0E 03            ld c,3
 570+ 9012 18 02            jr 6F
 571+ 9014 0E 02        5 ld c,2
 572+ 9016 79           6 ld a,c
 573+ 9017 08               ex af,af'
 574+ 9018 11 4D 89         ld de,Coordenadas_X_Entidad
 575+ 901B 1A           4 ld a,(de)
 576+ 901C 21 4A 89         ld hl,Coordenadas_X_Amadeus
 577+ 901F BE           3 cp (hl)
 578+ 9020 28 0E            jr z,7F
 579+ 9022 23               inc hl
 580+ 9023 0D               dec c
 581+ 9024 20 F9            jr nz,3B
 582+ 9026 13               inc de
 583+ 9027 08               ex af,af'
 584+ 9028 4F               ld c,a
 585+ 9029 08               ex af,af'
 586+ 902A 10 EF            djnz 4B
 587+ 902C
 588+ 902C              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 902C
 590+ 902C CD 43 92     8 call Limpia_Coordenadas_X
 591+ 902F C9               ret
 592+ 9030
 593+ 9030 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 9032 32 E1 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 9035 21 45 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 9038 CB D6            set 2,(hl)
 597+ 903A 18 F0            jr 8B
 598+ 903C
 599+ 903C              ; -----------------------------------------------------------------------
 600+ 903C              ;
 601+ 903C              ;   17/04/23
 602+ 903C              ;
 603+ 903C
 604+ 903C              Detecta_colision_nave_entidad
 605+ 903C
 606+ 903C              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 903C
 608+ 903C 2A CA 88         ld hl,(Posicion_actual)
 609+ 903F CD 80 95         call Calcula_puntero_de_impresion
 610+ 9042
 611+ 9042              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 9042              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 9042
 614+ 9042 DD E5            push ix
 615+ 9044 E1               pop hl
 616+ 9045 E5               push hl
 617+ 9046
 618+ 9046              ; ----- ----- -----
 619+ 9046 1E 00            ld e,0                                         ; Indica impacto.
 620+ 9048 06 0A            ld b,10
 621+ 904A CD 7A 90     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 904D 7B               ld a,e
 623+ 904E FE 05            cp 5
 624+ 9050 38 0E            jr c,3F
 625+ 9052
 626+ 9052              ; LLegados a este punto:
 627+ 9052              ;
 628+ 9052              ;   HAY COLISIÓN !!!!!.
 629+ 9052              ;
 630+ 9052              ;   .db (Impacto) de Amadeus a "1".
 631+ 9052              ;   SET el bit3 de (Impacto2).
 632+ 9052              ;
 633+ 9052              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 9052
 635+ 9052 21 B7 85         ld hl,Amadeus_db+25
 636+ 9055 36 01            ld (hl),1
 637+ 9057 21 45 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 905A CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 905C CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 905E 18 18            jr 1F
 641+ 9060
 642+ 9060              ; -----
 643+ 9060
 644+ 9060 E1           3 pop hl
 645+ 9061 CD 25 96         call NextScan
 646+ 9064 E5               push hl
 647+ 9065 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 9066 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 9068 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 906A 30 0C            jr nc,1F
 651+ 906C              ;                                                  ; _ 2º scanline si esto es así.
 652+ 906C 10 DC            djnz 2B
 653+ 906E
 654+ 906E              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 906E
 656+ 906E              ; LLegados a este punto:
 657+ 906E              ;
 658+ 906E              ;   NO HAY COLISIÓN !!!!!.
 659+ 906E              ;
 660+ 906E              ;   .db (Impacto) de Amadeus a "0".
 661+ 906E              ;   RES el bit2 de (Impacto2).
 662+ 906E              ;
 663+ 906E              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 906E              ;   Lo colocamos a "0".
 665+ 906E
 666+ 906E 21 45 89         ld hl,Impacto2
 667+ 9071 CB 96            res 2,(hl)
 668+ 9073 2A 46 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9076 36 00            ld (hl),0
 670+ 9078
 671+ 9078 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 9079 C9               ret
 673+ 907A
 674+ 907A               ; ---------- ----------
 675+ 907A
 676+ 907A C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 907B 3A C9 88         ld a,(Columns)
 678+ 907E 47               ld b,a
 679+ 907F FD 7E 00     2 ld a,(iy)
 680+ 9082 BE               cp (hl)
 681+ 9083 28 01            jr z,1F
 682+ 9085
 683+ 9085 1C               inc e
 684+ 9086
 685+ 9086 23           1 inc hl
 686+ 9087 FD 23            inc iy
 687+ 9089 10 F4            djnz 2B
 688+ 908B C1               pop bc
 689+ 908C C9               ret
 690+ 908D
 691+ 908D              ; -------------------------------------------------------------------------------------------------------------
 692+ 908D              ;
 693+ 908D              ;   13/03/23
 694+ 908D              ;
 695+ 908D              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 908D              ;
 697+ 908D              ;   DESTRUYE: HL,BC,DE y A.
 698+ 908D
 699+ 908D 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9090 7E               ld a,(hl)
 701+ 9091 A7               and a
 702+ 9092 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9093
 704+ 9093 44               ld b,h
 705+ 9094 4D               ld c,l
 706+ 9095 2A 1E 89         ld hl,(Stack_snapshot_disparos)
 707+ 9098 E5               push hl
 708+ 9099 A7               and a
 709+ 909A ED 42            sbc hl,bc
 710+ 909C E5               push hl
 711+ 909D C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 909E
 713+ 909E E1               pop hl
 714+ 909F 54               ld d,h
 715+ 90A0 5D               ld e,l
 716+ 90A1 1B               dec de
 717+ 90A2 ED B8            lddr                                                ; Limpiamos.
 718+ 90A4
 719+ 90A4 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 90A7 22 1E 89         ld (Stack_snapshot_disparos),hl
 721+ 90AA
 722+ 90AA C9               ret
 723+ 90AB
 724+ 90AB              ; -------------------------------------------------------------------------------------------------------------
 725+ 90AB              ;
 726+ 90AB              ;   18/07/23
 727+ 90AB              ;
 728+ 90AB
 729+ 90AB              Motor_de_disparos
 730+ 90AB
 731+ 90AB              ; Gestiona DISPAROS DE AMADEUS.
 732+ 90AB
 733+ 90AB 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 90AE 2A 43 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 90B1
 736+ 90B1 CD 83 8C     2 call Extrae_address
 737+ 90B4 7E               ld a,(hl)
 738+ 90B5 A7               and a
 739+ 90B6 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 90B8
 741+ 90B8              ; ----- ----- ----- ----- ----- -----
 742+ 90B8
 743+ 90B8 C5               push bc
 744+ 90B9 CD 7D 91         call foto_disparo_a_borrar
 745+ 90BC
 746+ 90BC              ; Existe colisión con este disparo???
 747+ 90BC
 748+ 90BC 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 90BD 7E               ld a,(hl)
 750+ 90BE 2B               dec hl
 751+ 90BF E6 01            and 1
 752+ 90C1 28 1D            jr z,9F
 753+ 90C3
 754+ 90C3              ;   En este punto:
 755+ 90C3              ;
 756+ 90C3              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 90C3              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 90C3              ;   _con la entidad).
 759+ 90C3              ;
 760+ 90C3              ;   Disparo_2A defw 0                                ; Control.
 761+ 90C3              ;    defw 0                                          ; Puntero objeto.
 762+ 90C3              ;    defw 0                                          ; Puntero de impresión.
 763+ 90C3              ;    defw 0                                          ; Rutina de impresión.
 764+ 90C3
 765+ 90C3 E5               push hl
 766+ 90C4
 767+ 90C4 06 04            ld b,4
 768+ 90C6 23           19 inc hl
 769+ 90C7 10 FD            djnz 19B
 770+ 90C9
 771+ 90C9 CD 83 8C         call Extrae_address
 772+ 90CC CD EE 9C         call Genera_coordenadas_disparo
 773+ 90CF
 774+ 90CF              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 90CF
 776+ 90CF 21 48 89         ld hl,Coordenadas_disparo_certero
 777+ 90D2 72               ld (hl),d
 778+ 90D3 23               inc hl
 779+ 90D4 73               ld (hl),e
 780+ 90D5
 781+ 90D5              ; Elimino el disparo de la base de datos.
 782+ 90D5
 783+ 90D5 E1               pop hl
 784+ 90D6 CD FC 91         call Elimina_disparo_de_base_de_datos
 785+ 90D9 21 45 89         ld hl,Impacto2
 786+ 90DC CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 90DE
 788+ 90DE 18 06            jr 11F
 789+ 90E0
 790+ 90E0 CD A6 91     9 call Mueve_disparo
 791+ 90E3 CD 7D 91         call foto_disparo_a_borrar
 792+ 90E6
 793+ 90E6 C1           11 pop bc
 794+ 90E7 18 04            jr 7F
 795+ 90E9
 796+ 90E9              ; ----- ----- ----- ----- ----- -----
 797+ 90E9
 798+ 90E9 ED 42        1 sbc hl,bc
 799+ 90EB 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 90ED
 801+ 90ED 2A 43 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 90F0 23               inc hl
 803+ 90F1 23               inc hl
 804+ 90F2 22 43 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 90F5 18 BA            jr 2B
 806+ 90F7
 807+ 90F7 CD 04 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 90FA              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 90FA
 810+ 90FA              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 90FA
 812+ 90FA 01 8A 85         ld bc,Disparo_11
 813+ 90FD 2A 41 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9100
 815+ 9100 CD 83 8C     5 call Extrae_address
 816+ 9103 7E               ld a,(hl)
 817+ 9104 A7               and a
 818+ 9105 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9107
 820+ 9107              ; ----- ----- ----- ----- ----- -----
 821+ 9107
 822+ 9107 C5               push bc
 823+ 9108 CD 7D 91         call foto_disparo_a_borrar
 824+ 910B
 825+ 910B              ; Existe colisión con este disparo???
 826+ 910B
 827+ 910B 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 910C 7E               ld a,(hl)
 829+ 910D 2B               dec hl
 830+ 910E E6 01            and 1
 831+ 9110 28 4D            jr z,10F
 832+ 9112
 833+ 9112              ;! La colisión se produce con Amadeus???
 834+ 9112              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 9112
 836+ 9112 E5               push hl
 837+ 9113
 838+ 9113 06 04            ld b,4
 839+ 9115 23           16 inc hl
 840+ 9116 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 9118
 842+ 9118 CD 83 8C         call Extrae_address
 843+ 911B CD EE 9C         call Genera_coordenadas_disparo
 844+ 911E
 845+ 911E 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 911F FE 16            cp $16
 847+ 9121 38 2A            jr c,15F
 848+ 9123
 849+ 9123
 850+ 9123              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 9123
 852+ 9123 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 9124
 854+ 9124              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 9124
 856+ 9124
 857+ 9124 2A 50 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 9127
 859+ 9127              ; Coordenada X de Amadeus en D.
 860+ 9127
 861+ 9127 7D               ld a,l
 862+ 9128 E6 1F            and $1F
 863+ 912A 57               ld d,a
 864+ 912B
 865+ 912B 21 A6 85         ld hl,Amadeus_db+8
 866+ 912E 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 912F
 868+ 912F 21 4A 89         ld hl,Coordenadas_X_Amadeus
 869+ 9132 CD 07 92         call Guarda_coordenadas_X
 870+ 9135
 871+ 9135 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 9136
 873+ 9136              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 9136
 875+ 9136 06 02            ld b,2
 876+ 9138 C5           20 push bc
 877+ 9139
 878+ 9139 06 03            ld b,3
 879+ 913B 21 4A 89         ld hl,Coordenadas_X_Amadeus
 880+ 913E 7E           18 ld a,(hl)
 881+ 913F BA               cp d
 882+ 9140 20 04            jr nz,17F
 883+ 9142
 884+ 9142              ;! Colisión Amadeus !!!!!!!!!!
 885+ 9142
 886+ 9142 C1               pop bc
 887+ 9143 E1               pop hl
 888+ 9144 18 0D            jr 14F
 889+ 9146
 890+ 9146 23           17 inc hl
 891+ 9147 10 F5            djnz 18B
 892+ 9149
 893+ 9149 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 914A
 895+ 914A C1               pop bc
 896+ 914B 10 EB            djnz 20B
 897+ 914D
 898+ 914D
 899+ 914D              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 914D              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 914D
 902+ 914D E1           15 pop hl
 903+ 914E 23               inc hl
 904+ 914F 35               dec (hl)
 905+ 9150 2B               dec hl
 906+ 9151 18 0C            jr 10F
 907+ 9153
 908+ 9153              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 9153              ; _ almacén de coordenadas_X de Amadeus.
 910+ 9153
 911+ 9153 E5           14 push hl
 912+ 9154 CD FC 91         call Elimina_disparo_de_base_de_datos
 913+ 9157 21 45 89         ld hl,Impacto2
 914+ 915A CB CE            set 1,(hl)
 915+ 915C E1               pop hl
 916+ 915D 18 06            jr 12F
 917+ 915F
 918+ 915F              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 915F
 920+ 915F CD A6 91     10 call Mueve_disparo
 921+ 9162 CD 7D 91         call foto_disparo_a_borrar
 922+ 9165 C1           12 pop bc
 923+ 9166
 924+ 9166 18 04            jr 8F
 925+ 9168
 926+ 9168              ; ----- ----- ----- ----- ----- -----
 927+ 9168
 928+ 9168 ED 42        4 sbc hl,bc
 929+ 916A 28 0A            jr z,6F
 930+ 916C
 931+ 916C 2A 41 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 916F 23               inc hl
 933+ 9170 23               inc hl
 934+ 9171 22 41 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9174 18 8A            jr 5B
 936+ 9176
 937+ 9176 CD FD 8B     6 call Inicia_Puntero_Disparo_Entidades
 938+ 9179 CD 43 92         call Limpia_Coordenadas_X
 939+ 917C C9               ret
 940+ 917D
 941+ 917D              ; ------------------------------------------------------------------
 942+ 917D
 943+ 917D              foto_disparo_a_borrar
 944+ 917D
 945+ 917D 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 917E A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 917F C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9180
 949+ 9180 E5               push hl
 950+ 9181 23               inc hl
 951+ 9182 23               inc hl
 952+ 9183 ED 73 16 89      ld (Stack),sp
 953+ 9187 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9188 FD E1            pop iy
 955+ 918A DD E1            pop ix
 956+ 918C E1               pop hl
 957+ 918D ED 7B 16 89      ld sp,(Stack)
 958+ 9191 3A 05 89         ld a,(Ctrl_1)
 959+ 9194 CB C7            set 0,a
 960+ 9196 32 05 89         ld (Ctrl_1),a
 961+ 9199 CD A0 7F         call Guarda_foto_registros
 962+ 919C 3A 05 89         ld a,(Ctrl_1)
 963+ 919F CB 87            res 0,a
 964+ 91A1 32 05 89         ld (Ctrl_1),a
 965+ 91A4 E1               pop hl
 966+ 91A5 C9               ret
 967+ 91A6
 968+ 91A6              ;---------------------------------------------------
 969+ 91A6              ;
 970+ 91A6              ;   18/07/23
 971+ 91A6              ;
 972+ 91A6
 973+ 91A6              Mueve_disparo
 974+ 91A6
 975+ 91A6              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 91A6              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 91A6              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 91A6
 979+ 91A6 E5               push hl
 980+ 91A7
 981+ 91A7 7E               ld a,(hl)
 982+ 91A8
 983+ 91A8 06 04            ld b,4
 984+ 91AA 23           1 inc hl
 985+ 91AB 10 FD            djnz 1B
 986+ 91AD
 987+ 91AD              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 91AD
 989+ 91AD CD 83 8C         call Extrae_address
 990+ 91B0
 991+ 91B0 E6 01            and 1
 992+ 91B2 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 91B4
 994+ 91B4              ; Disparo hacia arriba, (Amadeus).
 995+ 91B4
 996+ 91B4              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 91B4              ; _ de la dificultad.
 998+ 91B4
 999+ 91B4 CD 34 96         call PreviousScan
1000+ 91B7 CD 34 96         call PreviousScan
1001+ 91BA CD 34 96         call PreviousScan
1002+ 91BD CD 34 96         call PreviousScan
1003+ 91C0
1004+ 91C0              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 91C0
1006+ 91C0 7C               ld a,h
1007+ 91C1 FE 40            cp $40
1008+ 91C3 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 91C5
1010+ 91C5              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 91C5
1012+ 91C5 EB               ex de,hl
1013+ 91C6 06 04            ld b,4
1014+ 91C8 2B           6 dec hl
1015+ 91C9 10 FD            djnz 6B
1016+ 91CB
1017+ 91CB CD FC 91         call Elimina_disparo_de_base_de_datos
1018+ 91CE E1               pop hl
1019+ 91CF 18 10            jr 7F
1020+ 91D1
1021+ 91D1              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 91D1              ; HL contiene el puntero de impresión del disparo.
1023+ 91D1              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 91D1
1025+ 91D1 D5           3 push de
1026+ 91D2 C5               push bc
1027+ 91D3
1028+ 91D3 CD 9B 8F         call Comprueba_Colision
1029+ 91D6
1030+ 91D6              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 91D6
1032+ 91D6 78               ld a,b
1033+ 91D7
1034+ 91D7 C1               pop bc
1035+ 91D8 D1               pop de
1036+ 91D9
1037+ 91D9 EB               ex de,hl
1038+ 91DA
1039+ 91DA 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 91DB 23               inc hl                                      ; _ movimiento.
1041+ 91DC 72               ld (hl),d
1042+ 91DD
1043+ 91DD E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 91DE
1045+ 91DE 23               inc hl                                      ; _ en curso.
1046+ 91DF 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 91E0 2B               dec hl
1048+ 91E1
1049+ 91E1 C9           7 ret
1050+ 91E2
1051+ 91E2              ; Disparo hacia abajo, (Entidad).
1052+ 91E2
1053+ 91E2 3A 52 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 91E5 47               ld b,a
1055+ 91E6
1056+ 91E6 CD 25 96     4 call NextScan
1057+ 91E9 10 FB            djnz 4B
1058+ 91EB
1059+ 91EB              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 91EB
1061+ 91EB 7C               ld a,h
1062+ 91EC FE 58            cp $58
1063+ 91EE 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 91F0
1065+ 91F0 EB               ex de,hl
1066+ 91F1 06 04            ld b,4
1067+ 91F3 2B           5 dec hl
1068+ 91F4 10 FD            djnz 5B
1069+ 91F6
1070+ 91F6 CD FC 91         call Elimina_disparo_de_base_de_datos
1071+ 91F9 E1               pop hl
1072+ 91FA 18 E5            jr 7B
1073+ 91FC
1074+ 91FC              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 91FC
1076+ 91FC 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 91FF AF               xor a
1078+ 9200 77               ld (hl),a
1079+ 9201 54               ld d,h
1080+ 9202 5D               ld e,l
1081+ 9203 13               inc de
1082+ 9204 ED B0            ldir
1083+ 9206 C9               ret
1084+ 9207
1085+ 9207              ; -----------------------------------------------------------------
1086+ 9207              ;
1087+ 9207              ;   19/7/23
1088+ 9207              ;
1089+ 9207              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9207              ;
1091+ 9207              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9207              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9207              ;
1094+ 9207              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9207              ;
1096+ 9207              ;   INPUTS:
1097+ 9207              ;
1098+ 9207              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9207              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9207
1101+ 9207              ;   MODIFICA: A, HL, BC y DE.
1102+ 9207
1103+ 9207              Guarda_coordenadas_X
1104+ 9207
1105+ 9207 7B               ld a,e
1106+ 9208 A7               and a
1107+ 9209 20 04            jr nz,1F
1108+ 920B
1109+ 920B 06 02            ld b,2
1110+ 920D 18 02            jr 2F
1111+ 920F
1112+ 920F 06 03        1 ld b,3
1113+ 9211 72           2 ld (hl),d
1114+ 9212 23               inc hl
1115+ 9213 14               inc d
1116+ 9214 10 FB            djnz 2B
1117+ 9216
1118+ 9216 C9               ret
1119+ 9217
1120+ 9217              ; -----------------------------------------------------------------
1121+ 9217              ;
1122+ 9217              ;   12/04/23
1123+ 9217              ;
1124+ 9217
1125+ 9217 3A 45 89     Selector_de_impactos ld a,(Impacto2)
1126+ 921A A7               and a
1127+ 921B C8               ret z
1128+ 921C
1129+ 921C FE 04            cp 4
1130+ 921E 20 09            jr nz,1F
1131+ 9220
1132+ 9220
1133+ 9220              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 9220
1135+ 9220 CD 3C 90         call Detecta_colision_nave_entidad
1136+ 9223
1137+ 9223 21 45 89         ld hl,Impacto2
1138+ 9226 CB 5E            bit 3,(hl)
1139+ 9228 C0               ret nz                                               ; Existe colisión, RET.
1140+ 9229
1141+ 9229              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 9229              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 9229
1144+ 9229 21 45 89     1 ld hl,Impacto2
1145+ 922C CB 4E            bit 1,(hl)
1146+ 922E 28 07            jr z,2F
1147+ 9230
1148+ 9230 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 9233 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 9235 18 0B            jr 3F
1151+ 9237
1152+ 9237 21 45 89     2 ld hl,Impacto2
1153+ 923A CB 46            bit 0,(hl)
1154+ 923C C8               ret z
1155+ 923D
1156+ 923D              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 923D
1158+ 923D 21 05 89         ld hl,Ctrl_1
1159+ 9240 CB D6            set 2,(hl)
1160+ 9242
1161+ 9242 C9           3 ret
1162+ 9243
1163+ 9243              ; -----------------------------------------------------------------
1164+ 9243              ;
1165+ 9243              ;   19/7/23
1166+ 9243              ;
1167+ 9243              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 9243
1169+ 9243 AF           Limpia_Coordenadas_X xor a
1170+ 9244 06 06            ld b,6
1171+ 9246 21 4A 89         ld hl,Coordenadas_X_Amadeus
1172+ 9249 77           1 ld (hl),a
1173+ 924A 23               inc hl
1174+ 924B 10 FC            djnz 1B
1175+ 924D C9               ret
1176+ 924E
1177+ 924E              ; -----------------------------------------------------------------
1178+ 924E              ;
1179+ 924E              ;   25/04/23
1180+ 924E              ;
1181+ 924E
1182+ 924E              Determina_resultado_comparativa
1183+ 924E
1184+ 924E              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 924E              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 924E              ;
1187+ 924E              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 924E              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 924E              ;
1190+ 924E              ;   SBC HL,DE
1191+ 924E
1192+ 924E              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 924E              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 924E
1195+ 924E              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 924E              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 924E
1198+ 924E
1199+ 924E 3A DC 88         ld a,(Cuad_objeto)
1200+ 9251 FE 02            cp 2
1201+ 9253 28 26            jr z,2F
1202+ 9255 38 24            jr c,2F
1203+ 9257
1204+ 9257              ; Cuadrantes 3º y 4º
1205+ 9257
1206+ 9257 E6 01            and 1
1207+ 9259 28 10            jr z,4F
1208+ 925B
1209+ 925B              ; Cuadrante 3º
1210+ 925B
1211+ 925B 7C               ld a,h
1212+ 925C 06 00            ld b,0
1213+ 925E
1214+ 925E CD E9 92         call Compara_cositas_H3
1215+ 9261
1216+ 9261 04               inc b
1217+ 9262 05               dec b
1218+ 9263 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 9264
1220+ 9264 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 9265 06 00            ld b,0
1222+ 9267
1223+ 9267 CD FB 92         call Compara_cositas_L3
1224+ 926A C9               ret
1225+ 926B
1226+ 926B              ; Cuadrante 4º
1227+ 926B
1228+ 926B 7C           4 ld a,h
1229+ 926C 06 00            ld b,0
1230+ 926E
1231+ 926E CD 0D 93         call Compara_cositas_H4
1232+ 9271
1233+ 9271 04               inc b
1234+ 9272 05               dec b
1235+ 9273 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9274
1237+ 9274 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9275 06 00            ld b,0
1239+ 9277
1240+ 9277 CD 23 93         call Compara_cositas_L4
1241+ 927A C9               ret
1242+ 927B
1243+ 927B              ; Cuadrantes 1º y 2º.
1244+ 927B
1245+ 927B 28 10        2 jr z,3F
1246+ 927D
1247+ 927D              ; 1er Cuadrante
1248+ 927D
1249+ 927D 7C               ld a,h
1250+ 927E 06 00            ld b,0
1251+ 9280
1252+ 9280 CD C1 92         call Compara_cositas_H1
1253+ 9283
1254+ 9283 04               inc b
1255+ 9284 05               dec b
1256+ 9285 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9286
1258+ 9286 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9287 06 00            ld b,0
1260+ 9289
1261+ 9289 CD D7 92         call Compara_cositas_L1
1262+ 928C C9               ret
1263+ 928D
1264+ 928D
1265+ 928D              ; 2º Cuadrante
1266+ 928D
1267+ 928D 7C           3 ld a,h
1268+ 928E 06 00            ld b,0
1269+ 9290
1270+ 9290 CD 9D 92         call Compara_cositas_H2
1271+ 9293
1272+ 9293 04               inc b
1273+ 9294 05               dec b
1274+ 9295 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9296
1276+ 9296 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9297 06 00            ld b,0
1278+ 9299
1279+ 9299 CD AF 92         call Compara_cositas_L2
1280+ 929C C9               ret
1281+ 929D
1282+ 929D A7           Compara_cositas_H2 and a
1283+ 929E 28 0D            jr z,1F
1284+ 92A0              ;    cp $fd
1285+ 92A0              ;    jr z,1F
1286+ 92A0              ;    cp $fe
1287+ 92A0              ;    jr z,1F
1288+ 92A0 FE FF            cp $ff
1289+ 92A2 28 09            jr z,1F
1290+ 92A4 FE 01            cp $01
1291+ 92A6 28 05            jr z,1F
1292+ 92A8 FE 02            cp $02
1293+ 92AA 28 01            jr z,1F
1294+ 92AC C0               ret nz
1295+ 92AD 04           1 inc b
1296+ 92AE C9               ret
1297+ 92AF
1298+ 92AF A7           Compara_cositas_L2 and a
1299+ 92B0 28 0D            jr z,1F
1300+ 92B2              ;    cp $fd
1301+ 92B2              ;    jr z,1F
1302+ 92B2 FE FE            cp $fe
1303+ 92B4 28 09            jr z,1F
1304+ 92B6 FE FF            cp $ff
1305+ 92B8 28 05            jr z,1F
1306+ 92BA FE 01            cp $01
1307+ 92BC 28 01            jr z,1F
1308+ 92BE              ;    cp $02
1309+ 92BE              ;    jr z,1F
1310+ 92BE C0               ret nz
1311+ 92BF 04           1 inc b
1312+ 92C0 C9               ret
1313+ 92C1
1314+ 92C1 A7           Compara_cositas_H1 and a
1315+ 92C2 28 11            jr z,1F
1316+ 92C4              ;    cp $fd
1317+ 92C4              ;    jr z,1F
1318+ 92C4              ;    cp $fe
1319+ 92C4              ;    jr z,1F
1320+ 92C4 FE FF            cp $ff
1321+ 92C6 28 0D            jr z,1F
1322+ 92C8 FE 01            cp $01
1323+ 92CA 28 09            jr z,1F
1324+ 92CC FE 02            cp $02
1325+ 92CE 28 05            jr z,1F
1326+ 92D0 FE 03            cp $03
1327+ 92D2 28 01            jr z,1F
1328+ 92D4 C0               ret nz
1329+ 92D5 04           1 inc b
1330+ 92D6 C9               ret
1331+ 92D7
1332+ 92D7 A7           Compara_cositas_L1 and a
1333+ 92D8 28 0D            jr z,1F
1334+ 92DA              ;    cp $fd
1335+ 92DA              ;    jr z,1F
1336+ 92DA              ;    cp $fe
1337+ 92DA              ;    jr z,1F
1338+ 92DA              ;    cp $ff
1339+ 92DA              ;    jr z,1F
1340+ 92DA FE 01            cp $01
1341+ 92DC 28 09            jr z,1F
1342+ 92DE FE 02            cp $02
1343+ 92E0 28 05            jr z,1F
1344+ 92E2 FE 03            cp $03
1345+ 92E4 28 01            jr z,1F
1346+ 92E6 C0               ret nz
1347+ 92E7 04           1 inc b
1348+ 92E8 C9               ret
1349+ 92E9
1350+ 92E9 A7           Compara_cositas_H3 and a
1351+ 92EA 28 0D            jr z,1F
1352+ 92EC              ;    cp $fd
1353+ 92EC              ;    jr z,1F
1354+ 92EC FE FE            cp $fe
1355+ 92EE 28 09            jr z,1F
1356+ 92F0 FE FF            cp $ff
1357+ 92F2 28 05            jr z,1F
1358+ 92F4 FE 01            cp $01
1359+ 92F6 28 01            jr z,1F
1360+ 92F8              ;    cp $02
1361+ 92F8              ;    jr z,1F
1362+ 92F8              ;    cp $03
1363+ 92F8              ;    jr z,1F
1364+ 92F8 C0               ret nz
1365+ 92F9 04           1 inc b
1366+ 92FA C9               ret
1367+ 92FB
1368+ 92FB A7           Compara_cositas_L3 and a
1369+ 92FC 28 0D            jr z,1F
1370+ 92FE              ;    cp $fd
1371+ 92FE              ;    jr z,1F
1372+ 92FE              ;    cp $fe
1373+ 92FE              ;    jr z,1F
1374+ 92FE              ;    cp $ff
1375+ 92FE              ;    jr z,1F
1376+ 92FE FE 01            cp $01
1377+ 9300 28 09            jr z,1F
1378+ 9302 FE 02            cp $02
1379+ 9304 28 05            jr z,1F
1380+ 9306 FE 03            cp $03
1381+ 9308 28 01            jr z,1F
1382+ 930A C0               ret nz
1383+ 930B 04           1 inc b
1384+ 930C C9               ret
1385+ 930D
1386+ 930D A7           Compara_cositas_H4 and a
1387+ 930E 28 11            jr z,1F
1388+ 9310 FE FD            cp $fd
1389+ 9312 28 0D            jr z,1F
1390+ 9314 FE FE            cp $fe
1391+ 9316 28 09            jr z,1F
1392+ 9318 FE FF            cp $ff
1393+ 931A 28 05            jr z,1F
1394+ 931C FE 01            cp $01
1395+ 931E 28 01            jr z,1F
1396+ 9320              ;    cp $02
1397+ 9320              ;    jr z,1F
1398+ 9320              ;    cp $03
1399+ 9320              ;    jr z,1F
1400+ 9320 C0               ret nz
1401+ 9321 04           1 inc b
1402+ 9322 C9               ret
1403+ 9323
1404+ 9323 A7           Compara_cositas_L4 and a
1405+ 9324 28 0D            jr z,1F
1406+ 9326              ;    cp $fd
1407+ 9326              ;    jr z,1F
1408+ 9326 FE FE            cp $fe
1409+ 9328 28 09            jr z,1F
1410+ 932A FE FF            cp $ff
1411+ 932C 28 05            jr z,1F
1412+ 932E FE 01            cp $01
1413+ 9330 28 01            jr z,1F
1414+ 9332              ;    cp $02
1415+ 9332              ;    jr z,1F
1416+ 9332              ;    cp $03
1417+ 9332              ;    jr z,1F
1418+ 9332 C0               ret nz
1419+ 9333 04           1 inc b
1420+ 9334 C9               ret
# file closed: Disparo.asm
1646  9335              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 9335              ; ******************************************************************************************************************************************************************************************
   2+ 9335              ;
   3+ 9335              ; 26/06/23
   4+ 9335              ;
   5+ 9335              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 9335
   7+ 9335 CD 19 96     Draw call Prepara_draw
   8+ 9338 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 9339 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 933A 28 05        	jr z,2F
  11+ 933C
  12+ 933C 3A DC 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 933F 18 0C        	jr 1F
  14+ 9341
  15+ 9341 2A DA 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 9344 22 CA 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 9347 CD D6 94     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 934A              ;													; _la esquina superior izquierda de la pantalla.
  19+ 934A CD 79 9F     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 934D
  21+ 934D 3A F2 88     1 ld a,(Ctrl_0)
  22+ 9350 CB 6F        	bit 5,a
  23+ 9352 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 9354
  25+ 9354 CD 6C 93     	call Comprueba_limite_horizontal
  26+ 9357 CD FC 93     	call Comprueba_limite_vertical
  27+ 935A
  28+ 935A              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 935A              ; -----------------------
  30+ 935A              ; -----------------------
  31+ 935A              ; -----------------------
  32+ 935A
  33+ 935A CD 49 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 935D CD 80 95     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 9360 CD DF 95     	call Define_rutina_de_impresion
  36+ 9363
  37+ 9363 3A F2 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 9366 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 9368 32 F2 88     	ld (Ctrl_0),a
  40+ 936B
  41+ 936B C9           	ret
  42+ 936C
  43+ 936C              ; *******************************************************************************************************************************************************************************************
  44+ 936C              ;	21/01/23
  45+ 936C              ;
  46+ 936C              ; 	Comprueba_limite_horizontal.
  47+ 936C              ;
  48+ 936C              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 936C              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 936C              ;
  51+ 936C              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 936C              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 936C              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 936C              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 936C
  56+ 936C
  57+ 936C
  58+ 936C 3A F2 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 936F CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9371 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9373 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9375 32 F2 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9378 18 09            jr 6F
  64+ 937A CB 5F        1 bit 3,a
  65+ 937C 28 0A            jr z,2F
  66+ 937E E6 F7            and $f7
  67+ 9380 32 F2 88         ld (Ctrl_0),a
  68+ 9383 CD D6 94     6 call Inicializacion
  69+ 9386 18 5B            jr 5F
  70+ 9388 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 9389
  72+ 9389              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 9389              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 9389
  75+ 9389 EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 938A 2A 00 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 938D CD 38 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9390 67           	ld h,a
  79+ 9391 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9392 CD 38 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9395 67           	ld h,a
  82+ 9396 A7           	and a
  83+ 9397 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 9399 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 939A 3A DC 88     	ld a,(Cuad_objeto)
  86+ 939D FE 02        	cp 2
  87+ 939F 38 1E        	jr c,3F
  88+ 93A1 28 1C        	jr z,3F
  89+ 93A3 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 93A4 28 23            jr z,7F
  91+ 93A6 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 93A8 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 93AA E1           	pop hl
  94+ 93AB
  95+ 93AB              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 93AB              ; _para indicar con E="2" en caso necesario.
  97+ 93AB
  98+ 93AB E5               push hl
  99+ 93AC C5               push bc
 100+ 93AD CD 38 99     	call calcula_tercio
 101+ 93B0 FE 01        	cp 1
 102+ 93B2 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 93B4 CD E4 93         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 93B7 28 26            jr z,9F
 105+ 93B9 38 24            jr c,9F
 106+ 93BB 1E 00        11 ld e,0
 107+ 93BD 18 22            jr 8F
 108+ 93BF 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 93C0 28 07        	jr z, 7F
 110+ 93C2 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 93C4 1E 00         	ld e,0
 112+ 93C6 E1           	pop hl
 113+ 93C7 18 04        	jr 4F
 114+ 93C9 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 93CB 18 15            jr 10F
 116+ 93CD
 117+ 93CD              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 93CD              ; _para indicar con E="2" en caso necesario.
 119+ 93CD
 120+ 93CD E5           4 push hl
 121+ 93CE C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 93CF CD 38 99     	call calcula_tercio
 123+ 93D2 FE 01        	cp 1
 124+ 93D4 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 93D6 CD E4 93         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 93D9 28 04            jr z,9F
 127+ 93DB 30 02            jr nc,9F
 128+ 93DD 18 02        	jr 8F
 129+ 93DF 1E 02        9 ld e,2
 130+ 93E1 C1           8 pop bc
 131+ 93E2 E1           10 pop hl
 132+ 93E3 C9           5 ret
 133+ 93E4
 134+ 93E4              ; --------------------
 135+ 93E4              ;
 136+ 93E4              ; 25/08/22
 137+ 93E4
 138+ 93E4 CD 38 99     Comprueba_centro call calcula_tercio
 139+ 93E7 67               ld h,a
 140+ 93E8 08           	ex af,af
 141+ 93E9 FE 02        	cp 2
 142+ 93EB 38 07        	jr c,1F
 143+ 93ED 28 05        	jr z,1F
 144+ 93EF 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 93F2 18 03        	jr 2F
 146+ 93F4 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 93F7 08           2 ex af,af
 148+ 93F8 A7               and a
 149+ 93F9 ED 42            sbc hl,bc
 150+ 93FB C9               ret
 151+ 93FC
 152+ 93FC              ; *********************************************************************************************************************************************************************************************
 153+ 93FC              ;
 154+ 93FC              ;   16/8/22
 155+ 93FC              ;
 156+ 93FC              ;	Comprueba_limite_vertical
 157+ 93FC              ;
 158+ 93FC              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 93FC              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 93FC              ;
 161+ 93FC
 162+ 93FC 2A CA 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 93FF 7D           	ld a,l
 164+ 9400 E6 1F        	and $1F
 165+ 9402 57           	ld d,a
 166+ 9403 3A 02 89     	ld a,(Limite_vertical)
 167+ 9406 BA           	cp d 											; Límite - Posición.
 168+ 9407 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9408 3A DC 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 940B CB 47        	bit 0,a
 171+ 940D 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 940F
 173+ 940F              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 940F
 175+ 940F 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 9410 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 9412
 178+ 9412              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 9412              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 9412
 181+ 9412 3A CE 88         ld a,(Coordenada_X)
 182+ 9415 16 0F            ld d,Centro_izquierda
 183+ 9417 A7               and a
 184+ 9418 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 9419 28 1E            jr z,3F
 186+ 941B 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 941D              ;                                                    ; _salimos sin modificar nada.
 188+ 941D 18 0E            jr 2F
 189+ 941F 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 9420 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 9422
 192+ 9422              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 9422              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 9422
 195+ 9422 3A CE 88         ld a,(Coordenada_X)
 196+ 9425 16 10            ld d,Centro_derecha
 197+ 9427 A7               and a
 198+ 9428 92               sub d
 199+ 9429 28 0E            jr z,3F
 200+ 942B 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 942D              ;                                                    ; _salimos sin modificar nada.
 202+ 942D CB 43        2 bit 0,e
 203+ 942F 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 9431 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 9432 CD C6 94         call Modificaccionne
 206+ 9435 C1           	pop bc
 207+ 9436 CD D6 94         call Inicializacion
 208+ 9439 C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 943A
 210+ 943A              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 943A
 212+ 943A C5           4 push bc
 213+ 943B 01 C9 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 943E 0A           	ld a,(bc)
 215+ 943F 3D           	dec a
 216+ 9440 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 9441 7D           	ld a,l
 218+ 9442 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 9443 CB 47        	bit 0,a
 220+ 9445 28 03        	jr z,5F
 221+ 9447 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 9448 18 2E        	jr 7F
 223+ 944A
 224+ 944A              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 944A
 226+ 944A 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 944B F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 944C 3A F2 88     	ld a,(Ctrl_0)
 229+ 944F CB 4F        	bit 1,a
 230+ 9451 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 9453 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 9454
 233+ 9454              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 9454
 235+ 9454 1C               inc e
 236+ 9455 1D               dec e
 237+ 9456 20 07            jr nz,12F
 238+ 9458 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 9459 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 945A 22 CA 88     	ld (Posicion_actual),hl
 241+ 945D 18 44        13 jr 9F
 242+ 945F CB 43        12 bit 0,e
 243+ 9461 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 9463              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 9463 C1           	pop bc
 246+ 9464 18 D3        	jr 3B
 247+ 9466 80           14 add b
 248+ 9467 6F               ld l,a
 249+ 9468 22 CA 88     	ld (Posicion_actual),hl
 250+ 946B CD C6 94         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 946E 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9470 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9472 32 F2 88         ld (Ctrl_0),a
 254+ 9475 F1           	pop af
 255+ 9476 18 2B        	jr 9F
 256+ 9478
 257+ 9478              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9478
 259+ 9478 F5           7 push af
 260+ 9479 3A F2 88     	ld a,(Ctrl_0)
 261+ 947C CB 47        	bit 0,a
 262+ 947E 20 1D        	jr nz,8F
 263+ 9480 F1           	pop af
 264+ 9481
 265+ 9481              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9481
 267+ 9481 1C           	inc e
 268+ 9482 1D               dec e
 269+ 9483 20 07            jr nz,10F
 270+ 9485 90           	sub b
 271+ 9486 6F               ld l,a
 272+ 9487 22 CA 88     	ld (Posicion_actual),hl
 273+ 948A 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 948C              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 948C CB 43        10 bit 0,e
 276+ 948E 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9490              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9490 C1           	pop bc
 279+ 9491 18 A6        	jr 3B
 280+ 9493 90           16 sub b
 281+ 9494 6F               ld l,a
 282+ 9495 22 CA 88     	ld (Posicion_actual),hl
 283+ 9498 CD C6 94         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 949B 18 06            jr 9F
 285+ 949D E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 949F 32 F2 88         ld (Ctrl_0),a
 287+ 94A2 F1           	pop af
 288+ 94A3 C1           9 pop bc
 289+ 94A4 1E 00        	ld e,0
 290+ 94A6 CD D6 94         call Inicializacion
 291+ 94A9 F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 94AA 08           	ex af,af
 293+ 94AB F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 94AC 18 8B            jr 3B
 295+ 94AE
 296+ 94AE              ; --------------------
 297+ 94AE
 298+ 94AE 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 94B0 CD 34 96     1 call PreviousScan
 300+ 94B3 10 FB            djnz 1B
 301+ 94B5 22 CA 88     	ld (Posicion_actual),hl
 302+ 94B8 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 94B9 C9           	ret
 304+ 94BA
 305+ 94BA              ; --------------------
 306+ 94BA
 307+ 94BA 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 94BC CD 25 96     1 call NextScan
 309+ 94BF 10 FB            djnz 1B
 310+ 94C1 22 CA 88     	ld (Posicion_actual),hl
 311+ 94C4 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 94C5 C9           	ret
 313+ 94C6
 314+ 94C6              ; --------------------
 315+ 94C6              ;
 316+ 94C6              ;	22/01/23
 317+ 94C6              ;
 318+ 94C6              ;	E="1". Hemos cambiado de cuadrante.
 319+ 94C6              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 94C6              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 94C6
 322+ 94C6
 323+ 94C6              Modificaccionne
 324+ 94C6
 325+ 94C6 3A DC 88     	ld a,(Cuad_objeto)
 326+ 94C9 FE 02        	cp 2
 327+ 94CB CC AE 94         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 94CE DC AE 94         call c,Modifica_Pos_actual
 329+ 94D1 C8           	ret z
 330+ 94D2 CD BA 94         call Modifica_Pos_actual2
 331+ 94D5 C9               ret
 332+ 94D6
 333+ 94D6              ; *************************************************************************************************************************************************************************************************
 334+ 94D6              ;
 335+ 94D6              ;	13/8/22
 336+ 94D6              ;
 337+ 94D6              ;	Inicializacion
 338+ 94D6              ;
 339+ 94D6              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 94D6              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 94D6              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 94D6              ;
 343+ 94D6              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 94D6              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 94D6              ;	_ desaparece/aparece.
 346+ 94D6
 347+ 94D6              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 94D6              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 94D6              ;
 350+ 94D6              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 94D6              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 94D6              ; 		   [E] ="0"
 353+ 94D6
 354+ 94D6              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 94D6
 356+ 94D6 CD 38 99     Inicializacion call calcula_tercio
 357+ 94D9 28 36        	jr z,primit
 358+ 94DB E6 02        	and 2
 359+ 94DD 20 07        	jr nz,segmit
 360+ 94DF 7D           	ld a,l
 361+ 94E0 FE 7F        	cp $7f
 362+ 94E2 38 2D        	jr c,primit
 363+ 94E4 28 2B        	jr z,primit
 364+ 94E6 CD 43 95     segmit call column
 365+ 94E9 38 13        	jr c,tercuad
 366+ 94EB 3E 04        cuarcuad ld a,4
 367+ 94ED 32 DC 88     	ld (Cuad_objeto),a
 368+ 94F0 21 20 48     	ld hl,$4820
 369+ 94F3 22 00 89     	ld (Limite_horizontal),hl
 370+ 94F6 21 02 89     	ld hl,Limite_vertical
 371+ 94F9 36 0D        	ld (hl),$0d
 372+ 94FB 08           	ex af,af
 373+ 94FC 18 3C        	jr 1F
 374+ 94FE              tercuad
 375+ 94FE 3E 03        	ld a,3
 376+ 9500 32 DC 88     	ld (Cuad_objeto),a
 377+ 9503 21 20 48     	ld hl,$4820
 378+ 9506 22 00 89     	ld (Limite_horizontal),hl
 379+ 9509 21 02 89     	ld hl,Limite_vertical
 380+ 950C 36 12        	ld (hl),$12
 381+ 950E 08           	ex af,af
 382+ 950F 18 29        	jr 1F
 383+ 9511 CD 43 95     primit call column
 384+ 9514 38 13        	jr c, primcuad
 385+ 9516              segcuad
 386+ 9516 3E 02        	ld a,2
 387+ 9518 32 DC 88     	ld (Cuad_objeto),a
 388+ 951B 21 C0 4F     	ld hl,$4fc0
 389+ 951E 22 00 89     	ld (Limite_horizontal),hl
 390+ 9521 21 02 89     	ld hl,Limite_vertical
 391+ 9524 36 0D        	ld (hl),$0d
 392+ 9526 08           	ex af,af
 393+ 9527 18 11        	jr 1F
 394+ 9529              primcuad
 395+ 9529 3E 01        	ld a,1
 396+ 952B 32 DC 88     	ld (Cuad_objeto),a
 397+ 952E 21 C0 4F     	ld hl,$4fc0
 398+ 9531 22 00 89     	ld (Limite_horizontal),hl
 399+ 9534 21 02 89     	ld hl,Limite_vertical
 400+ 9537 36 12        	ld (hl),$12
 401+ 9539 08           	ex af,af
 402+ 953A CD C3 9C     1 call Genera_coordenadas
 403+ 953D 21 F2 88     	ld hl,Ctrl_0
 404+ 9540 CB EE        	set 5,(hl)
 405+ 9542 C9           	ret
 406+ 9543
 407+ 9543              ; ------------------------------------------------------------------------------------------------------------------
 408+ 9543
 409+ 9543              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 9543              ;
 411+ 9543              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 9543
 413+ 9543 7D           column ld a,l
 414+ 9544 E6 1F        	and $1f
 415+ 9546 FE 10         	cp $10
 416+ 9548 C9            	ret
 417+ 9549
 418+ 9549              ; --------------------------------------------------------------------------------------------------------------------
 419+ 9549              ;
 420+ 9549              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 9549              ;
 422+ 9549              ; 14/12/22
 423+ 9549              ;
 424+ 9549              ;	Modifica: A y BC.
 425+ 9549
 426+ 9549 3A DC 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 954C E6 01        	and 1
 428+ 954E 28 17        	jr z,1F
 429+ 9550
 430+ 9550              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 9550
 432+ 9550 3A CE 88     	ld a,(Coordenada_X)
 433+ 9553 47           	ld b,a
 434+ 9554 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 9555 79           	ld a,c
 436+ 9556 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 9557 38 08        	jr c,2F
 438+ 9559 47           	ld b,a
 439+ 955A 79           	ld a,c
 440+ 955B 90           	sub b
 441+ 955C 32 FF 88     	ld (Columnas),a
 442+ 955F 18 1B        	jr 4F
 443+ 9561 79           2 ld a,c
 444+ 9562 32 FF 88     	ld (Columnas),a
 445+ 9565 18 15        	jr 4F
 446+ 9567
 447+ 9567              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 9567
 449+ 9567 3A CE 88     1 ld a,(Coordenada_X)
 450+ 956A 81           	add c
 451+ 956B 3D           	dec a
 452+ 956C D6 1F        	sub $1f
 453+ 956E 38 08        	jr c,3F
 454+ 9570 47           	ld b,a
 455+ 9571 79           	ld a,c
 456+ 9572 90           	sub b
 457+ 9573 32 FF 88     	ld (Columnas),a
 458+ 9576 18 04        	jr 4F
 459+ 9578 79           3 ld a,c
 460+ 9579 32 FF 88     	ld (Columnas),a
 461+ 957C D9           4 exx
 462+ 957D 4F           	ld c,a
 463+ 957E D9           	exx
 464+ 957F C9            ret
 465+ 9580
 466+ 9580              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9580              ;
 468+ 9580              ;   19/7/23
 469+ 9580              ;
 470+ 9580              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9580              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9580              ;
 473+ 9580              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9580              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9580              ;
 476+ 9580              ;	DESTRUYE: HL,B Y A.
 477+ 9580
 478+ 9580 3A DC 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9583 FE 02        	cp 2
 480+ 9585 38 18        	jr c,1F
 481+ 9587 28 16        	jr z,1F
 482+ 9589 E6 01        	and 1
 483+ 958B 28 0D        	jr z,3F
 484+ 958D
 485+ 958D              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 958D
 487+ 958D CD D3 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9590
 489+ 9590 7D           9 ld a,l
 490+ 9591 E6 1F        	and $1f
 491+ 9593 28 2A        	jr z,7F
 492+ 9595 2B           	dec hl
 493+ 9596 10 F8        	djnz 9B
 494+ 9598 18 25        	jr 7F
 495+ 959A
 496+ 959A              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 959A
 498+ 959A 2A CA 88     3 ld hl,(Posicion_actual)
 499+ 959D 18 20        	jr 7F
 500+ 959F
 501+ 959F 28 14        1 jr z,2F
 502+ 95A1
 503+ 95A1              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 95A1
 505+ 95A1 CD D3 95     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 95A4
 507+ 95A4 7D           4 ld a,l
 508+ 95A5 E6 1F        	and $1f
 509+ 95A7 28 03        	jr z,6F
 510+ 95A9 2B           	dec hl
 511+ 95AA 10 F8        	djnz 4B
 512+ 95AC 06 0F        6 ld b,15
 513+ 95AE CD 34 96     5 call PreviousScan
 514+ 95B1 10 FB        	djnz 5B
 515+ 95B3 18 0A        	jr 7F
 516+ 95B5
 517+ 95B5              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 95B5
 519+ 95B5 CD D3 95     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 95B8 06 0F        	ld b,15
 521+ 95BA CD 34 96     8 call PreviousScan
 522+ 95BD 10 FB        	djnz 8B
 523+ 95BF
 524+ 95BF E5           7 push hl
 525+ 95C0 DD E1        	pop ix
 526+ 95C2
 527+ 95C2 2A CC 88     	ld hl,(Puntero_objeto)
 528+ 95C5 E5           	push hl
 529+ 95C6 FD E1        	pop iy
 530+ 95C8
 531+ 95C8              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 95C8
 533+ 95C8 3A F2 88     	ld a,(Ctrl_0)
 534+ 95CB CB 77        	bit 6,a
 535+ 95CD C8           	ret z
 536+ 95CE
 537+ 95CE              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 95CE              ; _ entidad / Amadeus´.
 539+ 95CE
 540+ 95CE DD 22 50 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 95D2
 542+ 95D2 C9           	ret
 543+ 95D3
 544+ 95D3              ; --------------------------------------------------------------------------------------------------------------------
 545+ 95D3              ;
 546+ 95D3              ;	2/1/23
 547+ 95D3              ;
 548+ 95D3              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 95D3              ;
 550+ 95D3              ;	Tras esta rutina tenemos:
 551+ 95D3              ;
 552+ 95D3              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 95D3              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 95D3              ;
 555+ 95D3              ;	DESTRUYE!!!!! HL,B y A.
 556+ 95D3
 557+ 95D3 2A CA 88     Operandos ld hl,(Posicion_actual)
 558+ 95D6 3A FF 88     	ld a,(Columnas)
 559+ 95D9 3D           	dec a
 560+ 95DA 20 01        	jr nz,1F
 561+ 95DC 3C           	inc a
 562+ 95DD 47           1 ld b,a
 563+ 95DE C9           	ret
 564+ 95DF
 565+ 95DF              ; --------------------------------------------------------------------------------------------------------------------
 566+ 95DF              ;
 567+ 95DF              ;	3/1/23
 568+ 95DF              ;
 569+ 95DF              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 95DF              ;
 571+ 95DF              ;	Destruye: A,B,HL y DE.
 572+ 95DF
 573+ 95DF              Define_rutina_de_impresion
 574+ 95DF
 575+ 95DF 3A C9 88     	ld a,(Columns)
 576+ 95E2 47           	ld b,a
 577+ 95E3 3A FF 88     	ld a,(Columnas)
 578+ 95E6 B8           	cp b
 579+ 95E7 20 0D        	jr nz,2f
 580+ 95E9
 581+ 95E9              ;	La entidad se imprime entera.
 582+ 95E9
 583+ 95E9 21 08 97     	ld hl, Indice_entidades_completas
 584+ 95EC E6 01        	and 1
 585+ 95EE 28 02        	jr z,1F
 586+ 95F0
 587+ 95F0 23           	inc hl
 588+ 95F1 23           	inc hl
 589+ 95F2
 590+ 95F2 CD 83 8C     1 call Extrae_address
 591+ 95F5 C9           	ret		;	ret
 592+ 95F6
 593+ 95F6              ;	La entidad no se imprime entera en pantalla.
 594+ 95F6
 595+ 95F6 3A DC 88     2 ld a,(Cuad_objeto)
 596+ 95F9 E6 01        	and 1
 597+ 95FB 28 17        	jr z,3F
 598+ 95FD
 599+ 95FD              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 95FD
 601+ 95FD 21 0C 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9600 3A C9 88     4 ld a,(Columns)
 603+ 9603 E6 01        	and 1
 604+ 9605 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9607
 606+ 9607 23           	inc hl
 607+ 9608 23           	inc hl
 608+ 9609
 609+ 9609 3A FF 88     	ld a,(Columnas)
 610+ 960C E6 01        	and 1
 611+ 960E 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 9610
 613+ 9610 23           	inc hl
 614+ 9611 23           	inc hl
 615+ 9612
 616+ 9612 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 9614
 618+ 9614 21 12 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 9617 18 E7        	jr 4B
 620+ 9619
 621+ 9619              ; --------------------------------------------------------------------------------------------------------------------
 622+ 9619              ;
 623+ 9619              ;	Prepara_draw
 624+ 9619              ;
 625+ 9619              ;	Es una rutina de carga.
 626+ 9619              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 9619              ;
 628+ 9619              ;	FUNCIONAMIENTO:
 629+ 9619              ;
 630+ 9619              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 9619              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 9619              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 9619              ;
 634+ 9619              ;	DESTRUYE:
 635+ 9619              ;
 636+ 9619              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 9619
 638+ 9619 21 C8 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 961C 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 961D 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 961E 4E           	ld c,(hl)
 642+ 961F 2A CA 88     	ld hl,(Posicion_actual)
 643+ 9622 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 9624 C9           	ret
 645+ 9625
 646+ 9625              ;----------------------------------------------------------------------------------------------------------------
 647+ 9625              ;
 648+ 9625              ;	5/08/22
 649+ 9625              ;
 650+ 9625              ;   NextScan.
 651+ 9625              ;
 652+ 9625              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 9625              ;
 654+ 9625              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 9625              ;
 656+ 9625              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 9625              ;
 658+ 9625              ;       DESTRUIDOS: AF y HL !!!
 659+ 9625              ;
 660+ 9625              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 9625              ;
 662+ 9625
 663+ 9625 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 9626 7C               ld a,h
 665+ 9627 E6 07            and 7
 666+ 9629 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 962A
 668+ 962A 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 962B C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 962D 6F               ld l,a
 671+ 962E D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 962F
 673+ 962F 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 9630 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 9632 67               ld h,a
 676+ 9633 C9               ret
 677+ 9634
 678+ 9634              ;----------------------------------------------------------------------------------------------------------------
 679+ 9634              ;
 680+ 9634              ;	5/08/22
 681+ 9634              ;
 682+ 9634              ;   PreviousScan.
 683+ 9634              ;
 684+ 9634              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 9634              ;
 686+ 9634              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 9634              ;
 688+ 9634              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 9634              ;
 690+ 9634              ;       DESTRUIDOS: AF y HL !!!
 691+ 9634              ;
 692+ 9634              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 9634              ;
 694+ 9634
 695+ 9634 7C           PreviousScan ld a,h
 696+ 9635 25               dec h               ; Dec H.
 697+ 9636 E6 07            and 7
 698+ 9638 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 9639
 700+ 9639 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 963A D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 963C 6F               ld l,a
 703+ 963D D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 963E
 705+ 963E 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 963F C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 9641 67               ld h,a
 708+ 9642 C9               ret
 709+ 9643
 710+ 9643              ; -----------------------------------------------------------------------------------
 711+ 9643              ;
 712+ 9643              ;	31/7/23
 713+ 9643              ;
 714+ 9643              ;	Rutina principal de pintado de entidades.
 715+ 9643              ;	Extrae la foto del frame, (entidades).
 716+ 9643
 717+ 9643              Extrae_foto_entidades
 718+ 9643
 719+ 9643 21 01 70     	ld hl,Album_de_fotos+1
 720+ 9646 7E           	ld a,(hl)
 721+ 9647 A7           	and a
 722+ 9648 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 9649
 724+ 9649              ;	No hay datos, (entidades para pintar en este frame).
 725+ 9649
 726+ 9649 3A 11 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 727+ 964C A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 728+ 964D C8           	ret z
 729+ 964E
 730+ 964E              ; -----------------------------------
 731+ 964E
 732+ 964E ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 733+ 9652 31 00 70     	ld sp,Album_de_fotos
 734+ 9655
 735+ 9655 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 736+ 9657 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 737+ 9658 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 738+ 9659
 739+ 9659 ED 73 18 89  	ld (Stack_2),sp
 740+ 965D ED 7B 16 89  	ld sp,(Stack)
 741+ 9661
 742+ 9661              ; Fabrica la llamada a la correspondiente rutina de impresión.
 743+ 9661
 744+ 9661 3E CD        	ld a,$cd
 745+ 9663 32 6B 96     	ld (Imprime),a
 746+ 9666 EB           	ex de,hl
 747+ 9667 22 6C 96     	ld (Imprime+1),hl
 748+ 966A EB           	ex de,hl
 749+ 966B
 750+ 966B              ; Ejecuta la llamada:	CALL $xx,xx
 751+ 966B
 752+ 966B 00 00 00     Imprime db 0,0,0
 753+ 966E
 754+ 966E ED 73 16 89  	ld (Stack),sp
 755+ 9672
 756+ 9672 3A 11 89     	ld a,(Numero_de_malotes)
 757+ 9675 3D           	dec a
 758+ 9676 28 09        	jr z,1F
 759+ 9678 32 11 89      	ld (Numero_de_malotes),a
 760+ 967B
 761+ 967B ED 7B 18 89  	ld sp,(Stack_2)
 762+ 967F 18 D4        	jr 2B
 763+ 9681
 764+ 9681 AF           1 xor a
 765+ 9682 32 18 89     	ld (Stack_2),a
 766+ 9685
 767+ 9685 C9           	ret
 768+ 9686
 769+ 9686              ; -----------------------------------------------------------------------------------
 770+ 9686              ;
 771+ 9686              ;	28/2/23
 772+ 9686              ;
 773+ 9686              ;	Pinta los disparos generados.
 774+ 9686
 775+ 9686              Extrae_foto_disparos
 776+ 9686
 777+ 9686 21 51 71     	ld hl,Album_de_fotos_disparos+1
 778+ 9689 7E               ld a,(hl)
 779+ 968A A7               and a
 780+ 968B C8               ret z
 781+ 968C
 782+ 968C 3A 40 89     	ld a,(Numero_de_disparotes)
 783+ 968F A7           	and a
 784+ 9690 C8           	ret z
 785+ 9691 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 786+ 9695 31 50 71     	ld sp,Album_de_fotos_disparos
 787+ 9698
 788+ 9698 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 789+ 969A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 790+ 969B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 791+ 969C
 792+ 969C ED 73 18 89  	ld (Stack_2),sp
 793+ 96A0 ED 7B 16 89  	ld sp,(Stack)
 794+ 96A4
 795+ 96A4              ; Fabrica la llamada a la correspondiente rutina de impresión.
 796+ 96A4
 797+ 96A4 3E CD        	ld a,$cd
 798+ 96A6 32 AE 96     	ld (Imprime2),a
 799+ 96A9 EB           	ex de,hl
 800+ 96AA 22 AF 96     	ld (Imprime2+1),hl
 801+ 96AD EB           	ex de,hl
 802+ 96AE
 803+ 96AE              ; Ejecuta la llamada:	CALL $xx,xx
 804+ 96AE
 805+ 96AE 00 00 00     Imprime2 db 0,0,0
 806+ 96B1
 807+ 96B1 3A 40 89     	ld a,(Numero_de_disparotes)
 808+ 96B4 3D           	dec a
 809+ 96B5 28 09        	jr z,1F
 810+ 96B7 32 40 89      	ld (Numero_de_disparotes),a
 811+ 96BA
 812+ 96BA ED 7B 18 89  	ld sp,(Stack_2)
 813+ 96BE 18 D8        	jr 2B
 814+ 96C0
 815+ 96C0 AF           1 xor a
 816+ 96C1 32 18 89     	ld (Stack_2),a
 817+ 96C4 C9           	ret
 818+ 96C5
 819+ 96C5              ; -----------------------------------------------------------------------------------
 820+ 96C5              ;
 821+ 96C5              ;	4/9/23
 822+ 96C5              ;
 823+ 96C5              ;	Rutina principal de pintado de Amadeus.
 824+ 96C5              ;	Extrae fotos de Album_de_fotos_Amadeus.
 825+ 96C5
 826+ 96C5 21 A0 72     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 827+ 96C8 7E           	ld a,(hl)
 828+ 96C9 A7           	and a
 829+ 96CA C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 96CB
 831+ 96CB 3A 11 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 96CE A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 96CF C8           	ret z
 834+ 96D0
 835+ 96D0              ; -----------------------------------
 836+ 96D0
 837+ 96D0 ED 73 16 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 96D4 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 96D7
 840+ 96D7 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 96D9 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 96DA D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 96DB
 844+ 96DB ED 73 18 89  	ld (Stack_2),sp
 845+ 96DF ED 7B 16 89  	ld sp,(Stack)
 846+ 96E3
 847+ 96E3              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 96E3
 849+ 96E3 3E CD        	ld a,$cd
 850+ 96E5 32 ED 96     	ld (Imprime_Amadeus),a
 851+ 96E8 EB           	ex de,hl
 852+ 96E9 22 EE 96     	ld (Imprime_Amadeus+1),hl
 853+ 96EC EB           	ex de,hl
 854+ 96ED
 855+ 96ED              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 96ED
 857+ 96ED 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 96F0
 859+ 96F0 ED 73 16 89  	ld (Stack),sp
 860+ 96F4
 861+ 96F4 3A 11 89     	ld a,(Numero_de_malotes)
 862+ 96F7 3D           	dec a
 863+ 96F8 28 09        	jr z,1F
 864+ 96FA 32 11 89      	ld (Numero_de_malotes),a
 865+ 96FD
 866+ 96FD ED 7B 18 89  	ld sp,(Stack_2)
 867+ 9701 18 D4        	jr 2B
 868+ 9703
 869+ 9703 AF           1 xor a
 870+ 9704 32 18 89     	ld (Stack_2),a
 871+ 9707
 872+ 9707 C9           	ret
# file closed: Draw_XOR.asm
1647  9708              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9708              ;   índices de Rutinas de impresión.
   2+ 9708
   3+ 9708 18 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 970A 45 97            defw Pinta_Amadeus_3x2
   5+ 970C
   6+ 970C 9B 97        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 970E 3B 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9710 EF 97            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9712
  10+ 9712 C5 97        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9714 C9 98            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9716 7D 98            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 9718
  14+ 9718
  15+ 9718              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 9718              ;
  17+ 9718              ;   12/12/22
  18+ 9718              ;
  19+ 9718              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 9718              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 9718              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 9718              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 9718              ;
  24+ 9718              ;   Modifica: DE y HL.
  25+ 9718
  26+ 9718 ED 73 16 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 971C FD F9        	ld sp,iy
  28+ 971E 06 10            ld b,16
  29+ 9720 D1           1 pop de
  30+ 9721 7B               ld a,e
  31+ 9722 AE               xor (hl)
  32+ 9723 77           	ld (hl),a
  33+ 9724 23           	inc hl
  34+ 9725 7A               ld a,d
  35+ 9726 AE               xor (hl)
  36+ 9727 77           	ld (hl),a
  37+ 9728 2B           	dec hl
  38+ 9729 24           	inc h
  39+ 972A 7C               ld a,h
  40+ 972B E6 07            and 7
  41+ 972D 20 0A            jr nz,2F
  42+ 972F 7D               ld a,l
  43+ 9730 C6 20            add a,$20
  44+ 9732 6F               ld l,a
  45+ 9733 38 04            jr c,2F
  46+ 9735 7C               ld a,h
  47+ 9736 D6 08            sub 8
  48+ 9738 67               ld h,a
  49+ 9739 7C           2 ld a,h
  50+ 973A FE 58            cp $58
  51+ 973C 28 02            jr z,3F
  52+ 973E 10 E0            djnz 1B
  53+ 9740 ED 7B 16 89  3 ld sp,(Stack)
  54+ 9744 C9           	ret
  55+ 9745
  56+ 9745 ED 73 16 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 9749 FD F9        	ld sp,iy
  58+ 974B 06 08            ld b,8
  59+ 974D D1           1 pop de
  60+ 974E 7B               ld a,e
  61+ 974F AE               xor (hl)
  62+ 9750 77           	ld (hl),a
  63+ 9751 23           	inc hl
  64+ 9752 7A               ld a,d
  65+ 9753 AE               xor (hl)
  66+ 9754 77           	ld (hl),a
  67+ 9755 23           	inc hl
  68+ 9756 D1           	pop de
  69+ 9757 7B               ld a,e
  70+ 9758 AE               xor (hl)
  71+ 9759 77           	ld (hl),a
  72+ 975A 2B           	dec hl
  73+ 975B 2B           	dec hl
  74+ 975C 24           	inc h
  75+ 975D 7C               ld a,h
  76+ 975E E6 07            and 7
  77+ 9760 20 0A            jr nz,2F
  78+ 9762 7D               ld a,l
  79+ 9763 C6 20            add a,$20
  80+ 9765 6F               ld l,a
  81+ 9766 38 04            jr c,2F
  82+ 9768 7C               ld a,h
  83+ 9769 D6 08            sub 8
  84+ 976B 67               ld h,a
  85+ 976C 7C           2 ld a,h
  86+ 976D FE 58            cp $58
  87+ 976F 28 25            jr z,4F
  88+ 9771 7A               ld a,d
  89+ 9772 AE               xor (hl)
  90+ 9773 77               ld (hl),a
  91+ 9774 D1           	pop de
  92+ 9775 23           	inc hl
  93+ 9776 7B               ld a,e
  94+ 9777 AE               xor (hl)
  95+ 9778 77           	ld (hl),a
  96+ 9779 23           	inc hl
  97+ 977A 7A               ld a,d
  98+ 977B AE               xor (hl)
  99+ 977C 77           	ld (hl),a
 100+ 977D 2B           	dec hl
 101+ 977E 2B           	dec hl
 102+ 977F 24           	inc h
 103+ 9780 7C               ld a,h
 104+ 9781 E6 07            and 7
 105+ 9783 20 0A            jr nz,3F
 106+ 9785 7D               ld a,l
 107+ 9786 C6 20            add a,$20
 108+ 9788 6F               ld l,a
 109+ 9789 38 04            jr c,3F
 110+ 978B 7C               ld a,h
 111+ 978C D6 08            sub 8
 112+ 978E 67               ld h,a
 113+ 978F 7C           3 ld a,h
 114+ 9790 FE 58            cp $58
 115+ 9792 28 02            jr z,4F
 116+ 9794 10 B7            djnz 1B
 117+ 9796 ED 7B 16 89  4 ld sp,(Stack)
 118+ 979A C9           	ret
 119+ 979B
 120+ 979B              ; ---------------------------------------------------
 121+ 979B
 122+ 979B ED 73 16 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 979F FD F9        	ld sp,iy
 124+ 97A1
 125+ 97A1              ; >>>
 126+ 97A1
 127+ 97A1 06 10            ld b,16
 128+ 97A3 D1           1 pop de
 129+ 97A4 7A           	ld a,d
 130+ 97A5 AE           	xor (hl)
 131+ 97A6 77           	ld (hl),a
 132+ 97A7 24           	inc h
 133+ 97A8 7C               ld a,h
 134+ 97A9 E6 07            and 7
 135+ 97AB 20 0C            jr nz,2F
 136+ 97AD 7D               ld a,l
 137+ 97AE C6 20            add a,$20
 138+ 97B0 6F               ld l,a
 139+ 97B1 38 06            jr c,2F
 140+ 97B3 7C               ld a,h
 141+ 97B4 D6 08            sub 8
 142+ 97B6 67               ld h,a
 143+ 97B7 18 00            jr 2F
 144+ 97B9 7C           2 ld a,h
 145+ 97BA FE 58            cp $58
 146+ 97BC 28 02            jr z,3F
 147+ 97BE 10 E3            djnz 1B
 148+ 97C0 ED 7B 16 89  3 ld sp,(Stack)
 149+ 97C4 C9           	ret
 150+ 97C5
 151+ 97C5 ED 73 16 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 97C9 FD F9        	ld sp,iy
 153+ 97CB
 154+ 97CB              ; >>>
 155+ 97CB
 156+ 97CB 06 10            ld b,16
 157+ 97CD D1           1 pop de
 158+ 97CE 7B           	ld a,e
 159+ 97CF AE           	xor (hl)
 160+ 97D0 77           	ld (hl),a
 161+ 97D1 24           	inc h
 162+ 97D2 7C               ld a,h
 163+ 97D3 E6 07            and 7
 164+ 97D5 20 0C            jr nz,2F
 165+ 97D7 7D               ld a,l
 166+ 97D8 C6 20            add a,$20
 167+ 97DA 6F               ld l,a
 168+ 97DB 38 06            jr c,2F
 169+ 97DD 7C               ld a,h
 170+ 97DE D6 08            sub 8
 171+ 97E0 67               ld h,a
 172+ 97E1 18 00            jr 2F
 173+ 97E3 7C           2 ld a,h
 174+ 97E4 FE 58            cp $58
 175+ 97E6 28 02            jr z,3F
 176+ 97E8 10 E3            djnz 1B
 177+ 97EA ED 7B 16 89  3 ld sp,(Stack)
 178+ 97EE C9           	ret
 179+ 97EF
 180+ 97EF              ; ---------------------------------------------------
 181+ 97EF
 182+ 97EF ED 73 16 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 97F3 FD F9        	ld sp,iy
 184+ 97F5 06 08            ld b,8
 185+ 97F7 D1           1 pop de
 186+ 97F8 7A           	ld a,d
 187+ 97F9 AE           	xor (hl)
 188+ 97FA 77           	ld (hl),a
 189+ 97FB 23           	inc hl
 190+ 97FC D1           	pop de
 191+ 97FD 7B           	ld a,e
 192+ 97FE AE           	xor (hl)
 193+ 97FF 77           	ld (hl),a
 194+ 9800 2B           	dec hl
 195+ 9801 24            	inc h
 196+ 9802 7C               ld a,h
 197+ 9803 E6 07            and 7
 198+ 9805 20 0A            jr nz,2F
 199+ 9807 7D               ld a,l
 200+ 9808 C6 20            add a,$20
 201+ 980A 6F               ld l,a
 202+ 980B 38 04            jr c,2F
 203+ 980D 7C               ld a,h
 204+ 980E D6 08            sub 8
 205+ 9810 67               ld h,a
 206+ 9811 7C           2 ld a,h
 207+ 9812 FE 58            cp $58
 208+ 9814 28 20            jr z,4F
 209+ 9816 D1               pop de
 210+ 9817 7B           	ld a,e
 211+ 9818 AE           	xor (hl)
 212+ 9819 77           	ld (hl),a
 213+ 981A 23           	inc hl
 214+ 981B 7A           	ld a,d
 215+ 981C AE           	xor (hl)
 216+ 981D 77           	ld (hl),a
 217+ 981E 2B           	dec hl
 218+ 981F 24           	inc h
 219+ 9820 7C               ld a,h
 220+ 9821 E6 07            and 7
 221+ 9823 20 0A            jr nz,3F
 222+ 9825 7D               ld a,l
 223+ 9826 C6 20            add a,$20
 224+ 9828 6F               ld l,a
 225+ 9829 38 04            jr c,3F
 226+ 982B 7C               ld a,h
 227+ 982C D6 08            sub 8
 228+ 982E 67               ld h,a
 229+ 982F 7C           3 ld a,h
 230+ 9830 FE 58            cp $58
 231+ 9832 28 02            jr z,4F
 232+ 9834 10 C1            djnz 1B
 233+ 9836 ED 7B 16 89  4 ld sp,(Stack)
 234+ 983A C9           	ret
 235+ 983B
 236+ 983B ED 73 16 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 983F FD F9        	ld sp,iy
 238+ 9841 06 08            ld b,8
 239+ 9843 D1           1 pop de
 240+ 9844 D1           	pop de
 241+ 9845 7B           	ld a,e
 242+ 9846 AE           	xor (hl)
 243+ 9847 77           	ld (hl),a
 244+ 9848 24            	inc h
 245+ 9849 7C               ld a,h
 246+ 984A E6 07            and 7
 247+ 984C 20 0A            jr nz,2F
 248+ 984E 7D               ld a,l
 249+ 984F C6 20            add a,$20
 250+ 9851 6F               ld l,a
 251+ 9852 38 04            jr c,2F
 252+ 9854 7C               ld a,h
 253+ 9855 D6 08            sub 8
 254+ 9857 67               ld h,a
 255+ 9858 7C           2 ld a,h
 256+ 9859 FE 58            cp $58
 257+ 985B 28 1B            jr z,4F
 258+ 985D D1               pop de
 259+ 985E 7A           	ld a,d
 260+ 985F AE           	xor (hl)
 261+ 9860 77           	ld (hl),a
 262+ 9861 24           	inc h
 263+ 9862 7C               ld a,h
 264+ 9863 E6 07            and 7
 265+ 9865 20 0A            jr nz,3F
 266+ 9867 7D               ld a,l
 267+ 9868 C6 20            add a,$20
 268+ 986A 6F               ld l,a
 269+ 986B 38 04            jr c,3F
 270+ 986D 7C               ld a,h
 271+ 986E D6 08            sub 8
 272+ 9870 67               ld h,a
 273+ 9871 7C           3 ld a,h
 274+ 9872 FE 58            cp $58
 275+ 9874 28 02            jr z,4F
 276+ 9876 10 CB            djnz 1B
 277+ 9878 ED 7B 16 89  4 ld sp,(Stack)
 278+ 987C C9           	ret
 279+ 987D
 280+ 987D ED 73 16 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9881 FD F9        	ld sp,iy
 282+ 9883 06 08            ld b,8
 283+ 9885 D1           1 pop de
 284+ 9886 7B           	ld a,e
 285+ 9887 AE           	xor (hl)
 286+ 9888 77           	ld (hl),a
 287+ 9889 23           	inc hl
 288+ 988A 7A           	ld a,d
 289+ 988B AE           	xor (hl)
 290+ 988C 77           	ld (hl),a
 291+ 988D 2B           	dec hl
 292+ 988E 24             	inc h
 293+ 988F 7C               ld a,h
 294+ 9890 E6 07            and 7
 295+ 9892 20 0A            jr nz,2F
 296+ 9894 7D               ld a,l
 297+ 9895 C6 20            add a,$20
 298+ 9897 6F               ld l,a
 299+ 9898 38 04            jr c,2F
 300+ 989A 7C               ld a,h
 301+ 989B D6 08            sub 8
 302+ 989D 67               ld h,a
 303+ 989E 7C           2 ld a,h
 304+ 989F FE 58            cp $58
 305+ 98A1 28 21            jr z,4F
 306+ 98A3 D1               pop de
 307+ 98A4 7A           	ld a,d
 308+ 98A5 AE           	xor (hl)
 309+ 98A6 77           	ld (hl),a
 310+ 98A7 23           	inc hl
 311+ 98A8 D1               pop de
 312+ 98A9 7B           	ld a,e
 313+ 98AA AE           	xor (hl)
 314+ 98AB 77           	ld (hl),a
 315+ 98AC 2B           	dec hl
 316+ 98AD 24           	inc h
 317+ 98AE 7C               ld a,h
 318+ 98AF E6 07            and 7
 319+ 98B1 20 0A            jr nz,3F
 320+ 98B3 7D               ld a,l
 321+ 98B4 C6 20            add a,$20
 322+ 98B6 6F               ld l,a
 323+ 98B7 38 04            jr c,3F
 324+ 98B9 7C               ld a,h
 325+ 98BA D6 08            sub 8
 326+ 98BC 67               ld h,a
 327+ 98BD 7C           3 ld a,h
 328+ 98BE FE 58            cp $58
 329+ 98C0 28 02            jr z,4F
 330+ 98C2 10 C1            djnz 1B
 331+ 98C4 ED 7B 16 89  4 ld sp,(Stack)
 332+ 98C8 C9           	ret
 333+ 98C9
 334+ 98C9 ED 73 16 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 98CD FD F9        	ld sp,iy
 336+ 98CF 06 08            ld b,8
 337+ 98D1 D1           1 pop de
 338+ 98D2 7B           	ld a,e
 339+ 98D3 AE           	xor (hl)
 340+ 98D4 77           	ld (hl),a
 341+ 98D5 24            	inc h
 342+ 98D6 7C               ld a,h
 343+ 98D7 E6 07            and 7
 344+ 98D9 20 0A            jr nz,2F
 345+ 98DB 7D               ld a,l
 346+ 98DC C6 20            add a,$20
 347+ 98DE 6F               ld l,a
 348+ 98DF 38 04            jr c,2F
 349+ 98E1 7C               ld a,h
 350+ 98E2 D6 08            sub 8
 351+ 98E4 67               ld h,a
 352+ 98E5 7C           2 ld a,h
 353+ 98E6 FE 58            cp $58
 354+ 98E8 28 1C            jr z,4F
 355+ 98EA D1               pop de
 356+ 98EB 7A           	ld a,d
 357+ 98EC AE           	xor (hl)
 358+ 98ED 77           	ld (hl),a
 359+ 98EE 24           	inc h
 360+ 98EF 7C               ld a,h
 361+ 98F0 E6 07            and 7
 362+ 98F2 20 0A            jr nz,3F
 363+ 98F4 7D               ld a,l
 364+ 98F5 C6 20            add a,$20
 365+ 98F7 6F               ld l,a
 366+ 98F8 38 04            jr c,3F
 367+ 98FA 7C               ld a,h
 368+ 98FB D6 08            sub 8
 369+ 98FD 67               ld h,a
 370+ 98FE 7C           3 ld a,h
 371+ 98FF FE 58            cp $58
 372+ 9901 28 03            jr z,4F
 373+ 9903 D1               pop de
 374+ 9904 10 CB            djnz 1B
 375+ 9906 ED 7B 16 89  4 ld sp,(Stack)
 376+ 990A C9           	ret
 377+ 990B
 378+ 990B              ; ---------------------------------------------------
 379+ 990B              ;
 380+ 990B              ;   27/02/23
 381+ 990B              ;
 382+ 990B              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 990B              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 990B              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 990B
 386+ 990B ED 73 16 89  Pinta_Disparo ld (Stack),sp
 387+ 990F FD F9            ld sp,iy
 388+ 9911 06 03            ld b,3
 389+ 9913 D1           1 pop de
 390+ 9914 7B               ld a,e
 391+ 9915 AE               xor (hl)
 392+ 9916 77               ld (hl),a
 393+ 9917 23               inc hl
 394+ 9918 7A               ld a,d
 395+ 9919 AE               xor (hl)
 396+ 991A 77               ld (hl),a
 397+ 991B 2B               dec hl
 398+ 991C
 399+ 991C 24               inc h
 400+ 991D 7C               ld a,h
 401+ 991E E6 07            and 7
 402+ 9920 20 0A            jr nz,2F
 403+ 9922 7D               ld a,l
 404+ 9923 C6 20            add a,$20
 405+ 9925 6F               ld l,a
 406+ 9926 38 04            jr c,2F
 407+ 9928 7C               ld a,h
 408+ 9929 D6 08            sub 8
 409+ 992B 67               ld h,a
 410+ 992C 7C           2 ld a,h
 411+ 992D FE 58            cp $58
 412+ 992F 28 02            jr z,3F
 413+ 9931
 414+ 9931 10 E0            djnz 1B
 415+ 9933 ED 7B 16 89  3 ld sp,(Stack)
 416+ 9937 C9               ret
 417+ 9938
# file closed: Rutinas_de_impresion_sprites.asm
1648  9938              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 9938              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 9938              ;
   3+ 9938              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 9938              ;
   5+ 9938              ; *****************************************************************************************************************************************************************************************
   6+ 9938              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 9938
   8+ 9938 7C           calcula_tercio ld a,h
   9+ 9939 E6 18        	and $18
  10+ 993B CB 2F        	sra a
  11+ 993D CB 2F        	sra a
  12+ 993F CB 2F        	sra a
  13+ 9941 C9           	ret
  14+ 9942
# file closed: calcula_tercio.asm
1649  9942              	include "Cls.asm"
# file opened: Cls.asm
   1+ 9942              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 9942              ;
   3+ 9942              ;
   4+ 9942              ;	CLS.
   5+ 9942              ;
   6+ 9942              ;	Limpia la pantalla y define sus atributos.
   7+ 9942              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 9942              ;
   9+ 9942              ;	COLORES: 0 ..... NEGRO
  10+ 9942              ;    		 1 ..... AZUL
  11+ 9942              ; 			 2 ..... ROJO
  12+ 9942              ;			 3 ..... MAGENTA
  13+ 9942              ; 			 4 ..... VERDE
  14+ 9942              ; 			 5 ..... CIAN
  15+ 9942              ;			 6 ..... AMARILLO
  16+ 9942              ; 			 7 ..... BLANCO
  17+ 9942              ;
  18+ 9942              ;	INPUT: A contiene los atributos de pantalla.
  19+ 9942              ;
  20+ 9942              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 9942
  22+ 9942
  23+ 9942 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 9945 11 01 40     	LD DE,$4001
  25+ 9948 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 994B 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 994D ED B0        	LDIR
  28+ 994F 01 FF 02     	LD BC,767
  29+ 9952 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 9953 ED B0        	LDIR
  31+ 9955 C9           	ret
  32+ 9956
# file closed: Cls.asm
1650  9956              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 9956              ; ******************************************************************************************************************************************************************************************
   2+ 9956              ;
   3+ 9956              ;   20/05/23
   4+ 9956              ;
   5+ 9956              ;	Recompone_posicion_inicio
   6+ 9956              ;
   7+ 9956              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 9956              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 9956              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 9956              ;	_ a una u otra rutina.
  11+ 9956
  12+ 9956              Recompone_posicion_inicio
  13+ 9956
  14+ 9956 2A DA 88     	ld hl,(Posicion_inicio)
  15+ 9959 7D           	ld a,l
  16+ 995A E6 1F        	and $1f
  17+ 995C 28 16        	jr z,1F
  18+ 995E
  19+ 995E FE 1F        	cp $1f
  20+ 9960 28 0D        	jr z,3F
  21+ 9962
  22+ 9962 21 03 89     	ld hl,Ctrl_2
  23+ 9965 CB C6        	set 0,(hl)
  24+ 9967 2A CC 88     	ld hl,(Puntero_objeto)
  25+ 996A 22 06 89     	ld (Repone_puntero_objeto),hl
  26+ 996D 18 08        	jr 2F
  27+ 996F
  28+ 996F CD 10 9B     3 call Mov_left
  29+ 9972 18 03        	jr 2F
  30+ 9974
  31+ 9974 CD F2 99     1 call Mov_right
  32+ 9977 21 00 F0     2 ld hl,Sprite_vacio
  33+ 997A 22 CC 88     	ld (Puntero_objeto),hl
  34+ 997D C9           	ret
  35+ 997E
  36+ 997E              ; ******************************************************************************************************************************************************************************************
  37+ 997E              ;
  38+ 997E              ;   27/05/23
  39+ 997E              ;
  40+ 997E              ;	Mov_down
  41+ 997E              ;
  42+ 997E              ; 	Mueve el Sprite X px hacia abajo.
  43+ 997E              ;
  44+ 997E              ;
  45+ 997E              Mov_down
  46+ 997E
  47+ 997E CD E0 99     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9981              ;																	; _ repone (Puntero_objeto).
  49+ 9981 21 F2 88     	ld hl,Ctrl_0
  50+ 9984 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9986              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9986              ; 																	; _ en el caso de que no lo haya.
  53+ 9986 3A E0 88     	ld a,(Vel_down)
  54+ 9989 47           	ld b,a
  55+ 998A 2A CA 88         ld hl,(Posicion_actual)
  56+ 998D CD 38 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9990 E6 02        	and 2
  58+ 9992 28 0F        	jr z,1F
  59+ 9994
  60+ 9994              ; Nos encontramos en el último tercio de pantalla.
  61+ 9994              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9994
  63+ 9994 7C           	ld a,h
  64+ 9995 FE 57        	cp $57
  65+ 9997 20 0A        	jr nz,1F
  66+ 9999
  67+ 9999 7D           	ld a,l
  68+ 999A C6 20        	add $20
  69+ 999C 30 05        	jr nc,1F
  70+ 999E
  71+ 999E              ; ------------------------------
  72+ 999E              ;	call Reaparece_arriba
  73+ 999E CD 9D 9C     	call Reinicio
  74+ 99A1              ; ------------------------------
  75+ 99A1
  76+ 99A1 18 08        	jr 3F
  77+ 99A3 CD 25 96     1 call NextScan
  78+ 99A6 22 CA 88     	ld (Posicion_actual),hl
  79+ 99A9 10 E2            djnz 2B
  80+ 99AB CD C3 9C     3 call Genera_coordenadas
  81+ 99AE C9           	ret
  82+ 99AF
  83+ 99AF              ; ******************************************************************************************************************************************************************************************
  84+ 99AF              ;
  85+ 99AF              ;   27/05/23
  86+ 99AF              ;
  87+ 99AF              ;	Mov_up
  88+ 99AF              ;
  89+ 99AF              ; 	Mueve el Sprite hacia arriba.
  90+ 99AF              ;
  91+ 99AF              ;
  92+ 99AF              Mov_up
  93+ 99AF
  94+ 99AF CD E0 99     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 99B2              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 99B2 21 F2 88     	ld hl,Ctrl_0
  97+ 99B5 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 99B7              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 99B7              ; 																		; _ en el caso de que no lo haya.
 100+ 99B7 3A DF 88     	ld a,(Vel_up)
 101+ 99BA 47           	ld b,a
 102+ 99BB 2A CA 88     	ld hl,(Posicion_actual)
 103+ 99BE CD 38 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 99C1 A7           	and a
 105+ 99C2 20 10        	jr nz,1F
 106+ 99C4
 107+ 99C4              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 99C4              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 99C4
 110+ 99C4 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 99C5 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 99C7 20 0B            jr nz,1F
 113+ 99C9 7D               ld a,l
 114+ 99CA D6 20            sub $20
 115+ 99CC 30 06            jr nc,1F
 116+ 99CE 25               dec h
 117+ 99CF
 118+ 99CF              ; -----------------------------
 119+ 99CF CD 7E 9C         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 99D2              ;	call Reinicio
 121+ 99D2              ; -----------------------------
 122+ 99D2
 123+ 99D2 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 99D4 CD 34 96     1 call PreviousScan
 125+ 99D7 22 CA 88     	ld (Posicion_actual),hl
 126+ 99DA 10 E2            djnz 3B
 127+ 99DC CD C3 9C     2 call Genera_coordenadas
 128+ 99DF C9           	ret
 129+ 99E0
 130+ 99E0              ; -----------------------------
 131+ 99E0              ;
 132+ 99E0              ;	27/5/23
 133+ 99E0              ;
 134+ 99E0              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 99E0              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 99E0              ;
 137+ 99E0              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 99E0              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 99E0              ;
 140+ 99E0              ;	Modifica: A y (Puntero_objeto).
 141+ 99E0
 142+ 99E0 3A 03 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 99E3 CB 47        	bit 0,a
 144+ 99E5 C8           	ret z
 145+ 99E6 CB 87        	res 0,a
 146+ 99E8 32 03 89     	ld (Ctrl_2),a
 147+ 99EB 2A 06 89     	ld hl,(Repone_puntero_objeto)
 148+ 99EE 22 CC 88     	ld (Puntero_objeto),hl
 149+ 99F1 C9           	ret
 150+ 99F2
 151+ 99F2              ; ******************************************************************************************************************************************************************************************
 152+ 99F2              ;
 153+ 99F2              ;	19/10/22
 154+ 99F2              ;
 155+ 99F2              ;	Mov_right.
 156+ 99F2              ;
 157+ 99F2              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 99F2              ;
 159+ 99F2
 160+ 99F2 21 F2 88     Mov_right ld hl,Ctrl_0
 161+ 99F5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 99F7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 99F7              ; 																	; _ en el caso de que no lo haya.
 164+ 99F7 3A F2 88     	ld a,(Ctrl_0)
 165+ 99FA CB 77        	bit 6,a
 166+ 99FC 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 99FE
 168+ 99FE CD 2C 9C     	call Stop_Amadeus_right
 169+ 9A01 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A02 18 4D        	jr 8F
 171+ 9A04
 172+ 9A04 3A CE 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A07 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A09 20 46        	jr nz,8F
 175+ 9A0B
 176+ 9A0B 3A D0 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A0E A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9A0F 28 40        	jr z,8F
 179+ 9A11
 180+ 9A11              ; ---------- ---------- ----------
 181+ 9A11              ;
 182+ 9A11              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9A11
 184+ 9A11 3A DE 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9A14 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9A16 28 11        	jr z,1F
 187+ 9A18 38 06        	jr c,6F
 188+ 9A1A FE 04        	cp 4
 189+ 9A1C 28 14        	jr z,7F
 190+ 9A1E 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9A20
 192+ 9A20              ; ---------- ---------- ----------
 193+ 9A20              ;
 194+ 9A20              ; Perfiles de velocidad
 195+ 9A20              ;
 196+ 9A20
 197+ 9A20 3A D0 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9A23 FE FE        	cp $fe
 199+ 9A25 20 2A        	jr nz,8F
 200+ 9A27 18 10        	jr 3F
 201+ 9A29 3A D0 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9A2C FE FD        	cp $fd
 203+ 9A2E 20 21        	jr nz,8F
 204+ 9A30 18 07        	jr 3F
 205+ 9A32 3A D0 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9A35 FE FB        	cp $fb
 207+ 9A37 20 18        	jr nz,8F
 208+ 9A39
 209+ 9A39              ; ---------- ---------- ----------
 210+ 9A39
 211+ 9A39              3
 212+ 9A39 CD 6C 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9A3C              ;	call Reinicio
 214+ 9A3C
 215+ 9A3C              ; ---------- ---------- ----------
 216+ 9A3C              ;
 217+ 9A3C              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9A3C
 219+ 9A3C 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9A3E C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9A3F CD 58 9A     	call DESPLZ_DER
 222+ 9A42 C1           	pop bc
 223+ 9A43 10 F9        	djnz 5B
 224+ 9A45 2A CA 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9A48 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9A49 22 CA 88     	ld (Posicion_actual),hl
 227+ 9A4C CD C3 9C     	call Genera_coordenadas
 228+ 9A4F 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9A51
 230+ 9A51              ; ---------- ---------- ----------
 231+ 9A51
 232+ 9A51 2A CA 88     8 ld hl,(Posicion_actual)
 233+ 9A54 CD 58 9A     	call DESPLZ_DER
 234+ 9A57 C9           2 ret
 235+ 9A58
 236+ 9A58              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9A58              ;
 238+ 9A58              ;	22/9/22
 239+ 9A58              ;
 240+ 9A58
 241+ 9A58 CD 67 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9A5B CD B3 9A         call modifica_parametros_1er_DESPLZ_2
 243+ 9A5E CD DC 9A         call Ciclo_completo
 244+ 9A61 21 F2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9A64 CB FE        	set 7,(hl)
 246+ 9A66 C9           	ret
 247+ 9A67
 248+ 9A67              ; ******************************************************************************************************************************************************************************************
 249+ 9A67              ;	15/02/23
 250+ 9A67              ;
 251+ 9A67
 252+ 9A67 3A DE 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9A6A 47           	ld b,a
 254+ 9A6B 2A D6 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9A6E 23           1 inc hl
 256+ 9A6F 23           	inc hl
 257+ 9A70 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9A72 22 D6 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9A75 CD 83 8C     	call Extrae_address
 260+ 9A78 22 CC 88     	ld (Puntero_objeto),hl
 261+ 9A7B
 262+ 9A7B              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9A7B
 264+ 9A7B              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9A7B              ; Cuántos movimientos hemos hecho ??
 266+ 9A7B              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9A7B
 268+ 9A7B 2A D2 88     7 ld hl,(Indice_Sprite_der)
 269+ 9A7E EB           	ex de,hl
 270+ 9A7F A7           	and a
 271+ 9A80 ED 52        	sbc hl,de
 272+ 9A82 CB 3D        	srl l
 273+ 9A84 3E 08        6 ld a,8
 274+ 9A86 95           	sub l
 275+ 9A87 30 1E        	jr nc,3F
 276+ 9A89
 277+ 9A89              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9A89              ; B="0".
 279+ 9A89
 280+ 9A89 04           4 inc b
 281+ 9A8A 3C           	inc a
 282+ 9A8B 20 FC        	jr nz,4B
 283+ 9A8D 78           	ld a,b
 284+ 9A8E 08           	ex af,af
 285+ 9A8F 2A D2 88     	ld hl,(Indice_Sprite_der)
 286+ 9A92 23           5 inc hl
 287+ 9A93 23           	inc hl
 288+ 9A94 10 FC        	djnz 5B
 289+ 9A96 22 D6 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9A99 CD 83 8C     	call Extrae_address
 291+ 9A9C 22 CC 88     	ld (Puntero_objeto),hl
 292+ 9A9F
 293+ 9A9F              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9A9F              ; _(Posicion_actual).
 295+ 9A9F
 296+ 9A9F 21 CA 88     	ld hl,Posicion_actual
 297+ 9AA2 34           	inc (hl)
 298+ 9AA3 08               ex af,af
 299+ 9AA4 6F           	ld l,a
 300+ 9AA5 18 DD        	jr 6B
 301+ 9AA7
 302+ 9AA7              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9AA7
 304+ 9AA7 47           3 ld b,a
 305+ 9AA8 2A D4 88     	ld hl,(Indice_Sprite_izq)
 306+ 9AAB 23           2 inc hl
 307+ 9AAC 23           	inc hl
 308+ 9AAD 10 FC        	djnz 2B
 309+ 9AAF 22 D8 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9AB2 C9           8 ret
 311+ 9AB3
 312+ 9AB3              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9AB3              ;
 314+ 9AB3              ;	24/7/22
 315+ 9AB3              ;
 316+ 9AB3              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9AB3              ;
 318+ 9AB3              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9AB3              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9AB3              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9AB3
 322+ 9AB3 3A D0 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9AB6 A7           	and a
 324+ 9AB7 20 1F        	jr nz,1F
 325+ 9AB9 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9ABB 32 D0 88         ld (CTRL_DESPLZ),a
 327+ 9ABE
 328+ 9ABE 21 C9 88     	ld hl,Columns
 329+ 9AC1 34           	inc (hl)
 330+ 9AC2 3A DC 88     	ld a,(Cuad_objeto)
 331+ 9AC5 E6 01        	and 1
 332+ 9AC7 28 0F        	jr z,1F
 333+ 9AC9 2A CA 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9ACC 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9ACD 22 CA 88     	ld (Posicion_actual),hl
 336+ 9AD0 CD C3 9C     	call Genera_coordenadas
 337+ 9AD3 CD 38 9C     	call Inc_CTRL_DESPLZ
 338+ 9AD6 18 03        	jr 2F
 339+ 9AD8 CD 38 9C     1 call Inc_CTRL_DESPLZ
 340+ 9ADB C9           2 ret
 341+ 9ADC
 342+ 9ADC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9ADC              ;
 344+ 9ADC              ;	24/7/22
 345+ 9ADC              ;
 346+ 9ADC              ;	Ciclo_completo.
 347+ 9ADC              ;
 348+ 9ADC              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9ADC              ;
 350+ 9ADC              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9ADC              ; 	Decrementamos (Columns).
 352+ 9ADC              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9ADC              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9ADC
 355+ 9ADC
 356+ 9ADC 3A D0 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9ADF FE FF        	cp $ff
 358+ 9AE1 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9AE3 E6 F0        	and $f0
 360+ 9AE5 20 28        	jr nz,3F
 361+ 9AE7
 362+ 9AE7              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9AE7
 364+ 9AE7 3A D0 88     	ld a,(CTRL_DESPLZ)
 365+ 9AEA 47           	ld b,a
 366+ 9AEB 3E F8        	ld a,$f8
 367+ 9AED 80           	add b
 368+ 9AEE 32 D0 88     	ld (CTRL_DESPLZ),a
 369+ 9AF1 18 1C        	jr 3F
 370+ 9AF3 21 C9 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9AF6 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9AF7 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9AF8 32 D0 88     	ld (CTRL_DESPLZ),a
 374+ 9AFB 3A DC 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9AFE E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B00 20 0A        	jr nz,2F
 377+ 9B02 2A CA 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B05 23           	inc hl
 379+ 9B06 22 CA 88     	ld (Posicion_actual),hl
 380+ 9B09 CD C3 9C     	call Genera_coordenadas
 381+ 9B0C
 382+ 9B0C              ; Inicia el puntero de Sprite.
 383+ 9B0C
 384+ 9B0C CD 9A 8C     2 call Inicia_puntero_objeto_der
 385+ 9B0F C9           3 ret
 386+ 9B10
 387+ 9B10              ; ******************************************************************************************************************************************************************************************
 388+ 9B10              ;
 389+ 9B10              ;	15/02/23
 390+ 9B10              ;
 391+ 9B10              ;	Mov_left.
 392+ 9B10              ;
 393+ 9B10              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9B10              ;
 395+ 9B10              Mov_left
 396+ 9B10
 397+ 9B10 21 F2 88     	ld hl,Ctrl_0
 398+ 9B13 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9B15              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9B15              ; 																	; _ en el caso de que no lo haya.
 401+ 9B15 3A F2 88     	ld a,(Ctrl_0)
 402+ 9B18 CB 77        	bit 6,a
 403+ 9B1A 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9B1C
 405+ 9B1C CD 32 9C     	call Stop_Amadeus_left
 406+ 9B1F C8           	ret z
 407+ 9B20 20 4A        	jr nz,8F
 408+ 9B22
 409+ 9B22 3A CE 88     11 ld a,(Coordenada_X)
 410+ 9B25 A7           	and a
 411+ 9B26 20 44        	jr nz,8F
 412+ 9B28
 413+ 9B28 3A D0 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9B2B A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9B2C 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9B2E
 417+ 9B2E              ; ---------- ---------- ----------
 418+ 9B2E
 419+ 9B2E 3A DD 88     	ld a,(Vel_left)
 420+ 9B31 FE 02        	cp 2
 421+ 9B33 28 0F        	jr z,1F
 422+ 9B35 38 04        	jr c,6F
 423+ 9B37 FE 04        	cp 4
 424+ 9B39 28 12        	jr z,7F
 425+ 9B3B
 426+ 9B3B              ; ---------- ---------- ----------
 427+ 9B3B
 428+ 9B3B 3A D0 88     6 ld a,(CTRL_DESPLZ)
 429+ 9B3E FE F8        	cp $f8
 430+ 9B40 20 2A        	jr nz,8F
 431+ 9B42 18 10        	jr 4F
 432+ 9B44 3A D0 88     1 ld a,(CTRL_DESPLZ)
 433+ 9B47 FE F9        	cp $f9
 434+ 9B49 20 21        	jr nz,8F
 435+ 9B4B 18 07        	jr 4F
 436+ 9B4D 3A D0 88     7 ld a,(CTRL_DESPLZ)
 437+ 9B50 FE FB        	cp $fb
 438+ 9B52 20 18        	jr nz,8F
 439+ 9B54
 440+ 9B54              ; ---------- ---------- ----------
 441+ 9B54
 442+ 9B54              4
 443+ 9B54 CD 5A 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9B57              ;	call Reinicio
 445+ 9B57
 446+ 9B57              ; ---------- ---------- ----------
 447+ 9B57
 448+ 9B57 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9B59 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9B5A
 451+ 9B5A              ;	ld hl,(Indice_Sprite_izq)
 452+ 9B5A              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9B5A
 454+ 9B5A CD 73 9B     	call DESPLZ_IZQ
 455+ 9B5D C1           	pop bc
 456+ 9B5E 10 F9        	djnz 5B
 457+ 9B60 2A CA 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9B63 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9B64 22 CA 88     	ld (Posicion_actual),hl
 460+ 9B67 CD C3 9C     	call Genera_coordenadas
 461+ 9B6A 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9B6C
 463+ 9B6C              ; ---------- ---------- ----------
 464+ 9B6C
 465+ 9B6C              ; Movemos, no hay recolocación.
 466+ 9B6C
 467+ 9B6C 2A CA 88     8 ld hl,(Posicion_actual)
 468+ 9B6F CD 73 9B     	call DESPLZ_IZQ
 469+ 9B72 C9           2 ret
 470+ 9B73
 471+ 9B73              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9B73              ;
 473+ 9B73              ;	22/9/22
 474+ 9B73
 475+ 9B73              DESPLZ_IZQ
 476+ 9B73
 477+ 9B73 CD 82 9B     	call Desplaza_izquierda
 478+ 9B76 CD CE 9B         call modifica_parametros_1er_DESPLZ
 479+ 9B79 CD F6 9B     	call Ciclo_completo_2
 480+ 9B7C 21 F2 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9B7F CB BE        	res 7,(hl)
 482+ 9B81 C9           	ret
 483+ 9B82
 484+ 9B82              Desplaza_izquierda
 485+ 9B82
 486+ 9B82 3A DD 88     	ld a,(Vel_left)
 487+ 9B85 47           	ld b,a
 488+ 9B86 2A D8 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9B89 23           1 inc hl
 490+ 9B8A 23           	inc hl
 491+ 9B8B 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9B8D 22 D8 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9B90 CD 83 8C     	call Extrae_address
 494+ 9B93 22 CC 88     	ld (Puntero_objeto),hl
 495+ 9B96
 496+ 9B96              ; Modifica (Puntero_DESPLZ_der).
 497+ 9B96
 498+ 9B96              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9B96              ; Cuántos movimientos hemos hecho ??
 500+ 9B96              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9B96
 502+ 9B96 2A D4 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9B99 EB           	ex de,hl
 504+ 9B9A A7           	and a
 505+ 9B9B ED 52        	sbc hl,de
 506+ 9B9D CB 3D        	srl l
 507+ 9B9F 3E 08        6 ld a,8
 508+ 9BA1 95           	sub l
 509+ 9BA2 30 1E        	jr nc,3F
 510+ 9BA4
 511+ 9BA4              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9BA4              ; B="0".
 513+ 9BA4
 514+ 9BA4 04           4 inc b
 515+ 9BA5 3C           	inc a
 516+ 9BA6 20 FC        	jr nz,4B
 517+ 9BA8 78           	ld a,b
 518+ 9BA9 08           	ex af,af
 519+ 9BAA 2A D4 88     	ld hl,(Indice_Sprite_izq)
 520+ 9BAD 23           5 inc hl
 521+ 9BAE 23           	inc hl
 522+ 9BAF 10 FC        	djnz 5B
 523+ 9BB1 22 D8 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9BB4 CD 83 8C     	call Extrae_address
 525+ 9BB7 22 CC 88     	ld (Puntero_objeto),hl
 526+ 9BBA
 527+ 9BBA              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9BBA              ; _(Posicion_actual).
 529+ 9BBA
 530+ 9BBA 21 CA 88     	ld hl,Posicion_actual
 531+ 9BBD 35           	dec (hl)
 532+ 9BBE 08           	ex af,af
 533+ 9BBF 6F           	ld l,a
 534+ 9BC0 18 DD        	jr 6B
 535+ 9BC2
 536+ 9BC2              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9BC2
 538+ 9BC2 47           3 ld b,a
 539+ 9BC3 2A D2 88     	ld hl,(Indice_Sprite_der)
 540+ 9BC6 23           2 inc hl
 541+ 9BC7 23           	inc hl
 542+ 9BC8 10 FC        	djnz 2B
 543+ 9BCA 22 D6 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9BCD C9           8 ret
 545+ 9BCE
 546+ 9BCE              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9BCE              ;
 548+ 9BCE              ;	modifica_parametros_1er_DESPLZ
 549+ 9BCE              ;
 550+ 9BCE              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9BCE              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9BCE              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9BCE
 554+ 9BCE 3A D0 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9BD1 A7           	and a
 556+ 9BD2 20 1E        	jr nz,1F
 557+ 9BD4 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9BD5 32 D0 88         ld (CTRL_DESPLZ),a
 559+ 9BD8 21 C9 88     	ld hl,Columns
 560+ 9BDB 34           	inc (hl)
 561+ 9BDC 3A DC 88     	ld a,(Cuad_objeto)
 562+ 9BDF E6 01        	and 1
 563+ 9BE1 20 0F        	jr nz,1F
 564+ 9BE3 2A CA 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9BE6 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9BE7 22 CA 88     	ld (Posicion_actual),hl
 567+ 9BEA CD C3 9C     	call Genera_coordenadas
 568+ 9BED CD 49 9C     	call Dec_CTRL_DESPLZ
 569+ 9BF0 18 03        	jr 2F
 570+ 9BF2 CD 49 9C     1 call Dec_CTRL_DESPLZ
 571+ 9BF5 C9           2 ret
 572+ 9BF6
 573+ 9BF6              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9BF6
 575+ 9BF6 3A D0 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9BF9 FE F7        	cp $f7
 577+ 9BFB 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9BFD 30 2C        	jr nc,3F
 579+ 9BFF
 580+ 9BFF              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9BFF
 582+ 9BFF 06 00        	ld b,0
 583+ 9C01 04           4 inc b
 584+ 9C02 3C           	inc a
 585+ 9C03 FE F7        	cp $f7
 586+ 9C05 20 FA        	jr nz,4B
 587+ 9C07 3E FF        	ld a,$ff
 588+ 9C09 90           	sub b
 589+ 9C0A 32 D0 88     	ld (CTRL_DESPLZ),a
 590+ 9C0D 18 1C        	jr 3F
 591+ 9C0F
 592+ 9C0F              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9C0F
 594+ 9C0F 21 C9 88     1 ld hl,Columns
 595+ 9C12 35           	dec (hl)
 596+ 9C13 AF           	xor a
 597+ 9C14 32 D0 88     	ld (CTRL_DESPLZ),a
 598+ 9C17 3A DC 88     	ld a,(Cuad_objeto)
 599+ 9C1A E6 01        	and 1
 600+ 9C1C 28 0A        	jr z,2F
 601+ 9C1E 2A CA 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9C21 2B           	dec hl
 603+ 9C22 22 CA 88     	ld (Posicion_actual),hl
 604+ 9C25 CD C3 9C     	call Genera_coordenadas
 605+ 9C28
 606+ 9C28              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9C28
 608+ 9C28 CD AD 8C     2 call Inicia_puntero_objeto_izq
 609+ 9C2B C9           3 ret
 610+ 9C2C
 611+ 9C2C              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9C2C              ;
 613+ 9C2C              ;	19/10/22
 614+ 9C2C              ;
 615+ 9C2C              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9C2C              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9C2C
 618+ 9C2C 3A CE 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9C2F FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9C31 C9           	ret
 621+ 9C32
 622+ 9C32              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9C32              ;
 624+ 9C32              ;	19/10/22
 625+ 9C32              ;
 626+ 9C32              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9C32              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9C32
 629+ 9C32 3A CE 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9C35 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9C37 C9           	ret
 632+ 9C38
 633+ 9C38              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9C38              ;
 635+ 9C38              ;	24/7/22
 636+ 9C38              ;
 637+ 9C38              ;	Inc_CTRL_DESPLZ
 638+ 9C38              ;
 639+ 9C38              ;
 640+ 9C38              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9C38
 642+ 9C38 21 D0 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9C3B 3A DE 88     	ld a,(Vel_right)
 644+ 9C3E A7           	and a
 645+ 9C3F 28 06        	jr z,1F
 646+ 9C41 47           	ld b,a
 647+ 9C42 34           3 inc (hl)
 648+ 9C43 10 FD        	djnz 3B
 649+ 9C45 18 01        	jr 2F
 650+ 9C47 34           1 inc (hl)
 651+ 9C48 C9           2 ret
 652+ 9C49
 653+ 9C49              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9C49              ;
 655+ 9C49              ;	5/2/23
 656+ 9C49              ;
 657+ 9C49              ;	Dec_CTRL_DESPLZ
 658+ 9C49              ;
 659+ 9C49              ;
 660+ 9C49              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9C49
 662+ 9C49 21 D0 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9C4C 3A DD 88     	ld a,(Vel_left)
 664+ 9C4F A7           	and a
 665+ 9C50 28 06        	jr z,1F
 666+ 9C52 47           	ld b,a
 667+ 9C53 35           3 dec (hl)
 668+ 9C54 10 FD        	djnz 3B
 669+ 9C56 18 01        	jr 2F
 670+ 9C58 35           1 dec (hl)
 671+ 9C59 C9           2 ret
 672+ 9C5A
 673+ 9C5A              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9C5A
 675+ 9C5A 2A CA 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9C5D 01 1F 00     	ld bc,31
 677+ 9C60 A7           	and a
 678+ 9C61 ED 4A        	adc hl,bc
 679+ 9C63 22 CA 88     	ld (Posicion_actual),hl
 680+ 9C66 21 F2 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9C69 CB C6        	set 0,(hl)
 682+ 9C6B C9           	ret
 683+ 9C6C
 684+ 9C6C              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9C6C
 686+ 9C6C 2A CA 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9C6F 01 1F 00     	ld bc,31
 688+ 9C72 A7           	and a
 689+ 9C73 ED 42        	sbc hl,bc
 690+ 9C75 22 CA 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9C78 21 F2 88     	ld hl,Ctrl_0
 692+ 9C7B CB CE        	set 1,(hl)
 693+ 9C7D C9           	ret
 694+ 9C7E
 695+ 9C7E              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9C7E
 697+ 9C7E 24           Reaparece_abajo inc h
 698+ 9C7F 01 E0 17     	ld bc,$17e0
 699+ 9C82 A7           	and a
 700+ 9C83 ED 4A        	adc hl,bc
 701+ 9C85 22 CA 88     	ld (Posicion_actual),hl
 702+ 9C88 21 F2 88     	ld hl,Ctrl_0
 703+ 9C8B CB D6        	set 2,(hl)
 704+ 9C8D C9           	ret
 705+ 9C8E
 706+ 9C8E              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9C8E
 708+ 9C8E 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9C91 A7           	and a
 710+ 9C92 ED 42        	sbc hl,bc
 711+ 9C94 22 CA 88     	ld (Posicion_actual),hl
 712+ 9C97 21 F2 88     	ld hl,Ctrl_0
 713+ 9C9A CB DE        	set 3,(hl)
 714+ 9C9C C9           	ret
 715+ 9C9D
 716+ 9C9D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9C9D              ;
 718+ 9C9D              ;	15/07/23
 719+ 9C9D
 720+ 9C9D              Reinicio
 721+ 9C9D
 722+ 9C9D              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9C9D
 724+ 9C9D AF           	xor a
 725+ 9C9E 21 F7 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9CA1 CD BF 9C     	call Limpia_contenido_hl
 727+ 9CA4
 728+ 9CA4 21 CA 88     	ld hl,Posicion_actual
 729+ 9CA7 CD BF 9C     	call Limpia_contenido_hl
 730+ 9CAA
 731+ 9CAA CD EF 9F     	call Inicializa_Puntero_indice_mov
 732+ 9CAD CD 79 9F     	call Inicia_Puntero_mov
 733+ 9CB0
 734+ 9CB0 21 F9 88     	ld hl,Incrementa_puntero
 735+ 9CB3 06 05        	ld b,5
 736+ 9CB5 77           1 ld (hl),a
 737+ 9CB6 23           	inc hl
 738+ 9CB7 10 FC        	djnz 1B
 739+ 9CB9
 740+ 9CB9 21 03 89     	ld hl,Ctrl_2
 741+ 9CBC CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9CBE
 743+ 9CBE C9           	ret
 744+ 9CBF
 745+ 9CBF 77           Limpia_contenido_hl	ld (hl),a
 746+ 9CC0 23           	inc hl
 747+ 9CC1 77           	ld (hl),a
 748+ 9CC2 C9           	ret
 749+ 9CC3
 750+ 9CC3
# file closed: Direcciones.asm
1651  9CC3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9CC3              ; ------------------------------------------------------------------------
   2+ 9CC3              ;
   3+ 9CC3              ;	02/04/23
   4+ 9CC3              ;
   5+ 9CC3              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9CC3              ;	Fila superior "0", Columna izquierda "0".
   7+ 9CC3              ;
   8+ 9CC3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9CC3              ;
  10+ 9CC3              ;	Modifica: A,BC y DE.
  11+ 9CC3
  12+ 9CC3 C5           Genera_coordenadas push bc
  13+ 9CC4 E5           	push hl
  14+ 9CC5 D5           	push de
  15+ 9CC6
  16+ 9CC6 2A CA 88     	ld hl,(Posicion_actual)
  17+ 9CC9
  18+ 9CC9 7D           	ld a,l
  19+ 9CCA E6 1F        	and $1f
  20+ 9CCC 32 CE 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9CCF
  22+ 9CCF CD 38 99     	call calcula_tercio
  23+ 9CD2 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9CD3
  25+ 9CD3 1E 00        	ld e,0
  26+ 9CD5 7D           	ld a,l
  27+ 9CD6 E6 E0        	and $e0
  28+ 9CD8 28 01        	jr z,1F
  29+ 9CDA 04           	inc b
  30+ 9CDB
  31+ 9CDB 04           1 inc b
  32+ 9CDC 05           	dec b
  33+ 9CDD 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9CDF              ;														; _ , salimos.
  35+ 9CDF 1C           3 inc e
  36+ 9CE0 D6 20        	sub 32
  37+ 9CE2 20 FB        	jr nz,3B
  38+ 9CE4 10 F5        	djnz 1B
  39+ 9CE6
  40+ 9CE6 7B           2 ld a,e
  41+ 9CE7 32 CF 88     	ld (Coordenada_y),a
  42+ 9CEA
  43+ 9CEA D1           	pop de
  44+ 9CEB E1           	pop hl
  45+ 9CEC C1           	pop bc
  46+ 9CED
  47+ 9CED C9           	ret
  48+ 9CEE
  49+ 9CEE              ; ------------------------------------------------------------------------
  50+ 9CEE              ;	28/05/23
  51+ 9CEE              ;
  52+ 9CEE              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9CEE              ;	Fila superior "0", Columna izquierda "0".
  54+ 9CEE              ;
  55+ 9CEE              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9CEE              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9CEE              ;
  58+ 9CEE              ;		DE="$120d"
  59+ 9CEE              ;
  60+ 9CEE              ;		D, (Coordenada_X), Columnas, $12
  61+ 9CEE              ;		E, (Coordenada_y), Filas, $0d
  62+ 9CEE              ;
  63+ 9CEE              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9CEE
  65+ 9CEE              ;	Modifica: A,BC y DE.
  66+ 9CEE
  67+ 9CEE
  68+ 9CEE              Genera_coordenadas_disparo
  69+ 9CEE
  70+ 9CEE              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9CEE
  72+ 9CEE 7D           	ld a,l
  73+ 9CEF E6 1F        	and $1f
  74+ 9CF1 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9CF2 CD 38 99     	call calcula_tercio
  76+ 9CF5 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9CF6 1E 00        	ld e,0
  78+ 9CF8 7D           	ld a,l
  79+ 9CF9 E6 E0        	and $e0
  80+ 9CFB 28 01        	jr z,1F
  81+ 9CFD 04           	inc b
  82+ 9CFE 1C           1 inc e
  83+ 9CFF D6 20        	sub 32
  84+ 9D01 20 FB        	jr nz,1B
  85+ 9D03 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D05 C9           	ret
  87+ 9D06
# file closed: Genera_coordenadas.asm
1652  9D06              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D06              ; Relojes y temporizaciones.
   2+ 9D06
   3+ 9D06              ; ------------------------------------------------------
   4+ 9D06              ;
   5+ 9D06              ;	16/7/23
   6+ 9D06              ;
   7+ 9D06              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D06              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D06              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D06              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D06              ;
  12+ 9D06              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D06              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D06
  15+ 9D06              ; Disparo_entidad db 1
  16+ 9D06              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D06              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D06
  19+ 9D06              Habilita_disparos
  20+ 9D06
  21+ 9D06 7E           	ld a,(hl)
  22+ 9D07 A7           	and a
  23+ 9D08 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D09
  25+ 9D09 EB           	ex de,hl
  26+ 9D0A
  27+ 9D0A 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D0B C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D0C
  30+ 9D0C              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D0C
  32+ 9D0C 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D0D 7E           	ld a,(hl)
  34+ 9D0E 23           	inc hl
  35+ 9D0F 77           	ld (hl),a
  36+ 9D10
  37+ 9D10 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9D11 3E 01        	ld a,1
  39+ 9D13 77           	ld (hl),a
  40+ 9D14 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1653  9D15              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9D15
   2+ 9D15
   3+ 9D15              ;   07/07/23
   4+ 9D15              ;
   5+ 9D15              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9D15              ;
   7+ 9D15              ;   Codificación:
   8+ 9D15              ;
   9+ 9D15              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9D15              ;
  11+ 9D15              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9D15              ;
  13+ 9D15              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9D15              ;
  15+ 9D15              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9D15              ;
  17+ 9D15              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9D15              ;                               ..... %01000010 Vel_up 4
  19+ 9D15              ;                                               Vel_down 2
  20+ 9D15              ;                               ..... $42
  21+ 9D15              ;
  22+ 9D15              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9D15              ;
  24+ 9D15              ;                               ..... %01000010 Vel_left 4
  25+ 9D15              ;                                               Vel_right 2
  26+ 9D15              ;                               ..... $42
  27+ 9D15              ;
  28+ 9D15              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9D15              ;
  30+ 9D15              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9D15              ;
  32+ 9D15              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9D15              ;
  34+ 9D15              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9D15              ;                                     $53
  36+ 9D15              ;
  37+ 9D15              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9D15              ;
  39+ 9D15              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9D15              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9D15              ;
  42+ 9D15              ;                       Arriba ..... $81
  43+ 9D15              ;                       Arriba - izquierda ..... $a1
  44+ 9D15              ;                       Arriba - derecha ..... $91
  45+ 9D15              ;
  46+ 9D15              ;                       Abajo ..... $41
  47+ 9D15              ;                       Abajo - izquierda ..... $61
  48+ 9D15              ;                       Abajo - derecha ..... $51
  49+ 9D15              ;
  50+ 9D15              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9D15              ;
  52+ 9D15              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9D15              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9D15              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9D15              ;
  56+ 9D15              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9D15              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9D15              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9D15              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9D15              ;
  61+ 9D15              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9D15              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9D15              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9D15              ;
  65+ 9D15              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9D15              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9D15              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9D15              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9D15
  70+ 9D15              ; ----- ----- ----- ----- -----
  71+ 9D15
  72+ 9D15 41 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9D17 49 9D            defw F_1
  74+ 9D19 53 9D            defw F_2
  75+ 9D1B 5D 9D            defw Codo_abajo_derecha
  76+ 9D1D 91 9D            defw Derecha_y_subiendo
  77+ 9D1F 9B 9D            defw Derecha_y_subiendo_1
  78+ 9D21 A5 9D            defw F_3
  79+ 9D23 AF 9D            defw F_4
  80+ 9D25 B9 9D            defw Derecha_y_bajando
  81+ 9D27 C3 9D            defw Derecha_y_bajando_1
  82+ 9D29 CD 9D            defw Derecha_y_bajando_2
  83+ 9D2B D7 9D            defw Codo_derecha_abajo
  84+ 9D2D 07 9E            defw Codo_abajo_izq.
  85+ 9D2F 3B 9E            defw Izquierda_y_subiendo
  86+ 9D31 45 9E            defw Izquierda_y_subiendo_1
  87+ 9D33 4F 9E            defw F_5
  88+ 9D35 59 9E            defw F_6
  89+ 9D37 63 9E            defw Izquierda_y_bajando
  90+ 9D39 6D 9E            defw Izquierda_y_bajando_1
  91+ 9D3B 77 9E            defw Izquierda_y_bajando_2
  92+ 9D3D 81 9E            defw Codo_izquierda_abajo
  93+ 9D3F 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9D41
  95+ 9D41 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9D45 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9D49
  98+ 9D49 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9D4D 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9D51 08 00
 100+ 9D53 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9D57 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9D5B 0F FE
 102+ 9D5D
 103+ 9D5D 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9D61 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9D65 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9D69 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9D6D 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9D71 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9D75 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9D79 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9D7D 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9D81 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9D85 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9D89 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9D8D 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9D91
 117+ 9D91 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9D95 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9D99 06 00
 119+ 9D9B
 120+ 9D9B 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9D9F 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9DA3 02 00
 122+ 9DA5
 123+ 9DA5 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9DA9 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9DAD 04 00
 125+ 9DAF 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9DB3 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9DB7 08 00
 127+ 9DB9
 128+ 9DB9 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9DBD 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9DC1 02 00
 130+ 9DC3
 131+ 9DC3 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9DC7 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9DCB 06 00
 133+ 9DCD
 134+ 9DCD 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9DD1 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9DD5 06 00
 136+ 9DD7
 137+ 9DD7              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9DD7
 139+ 9DD7 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9DDB 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9DDF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9DE3 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9DE7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9DEB 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9DEF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9DF3 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9DF7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9DFB 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9DFF 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E03 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E07
 152+ 9E07 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E0B 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9E0F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9E13 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9E17 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9E1B 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9E1F 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9E23 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9E27 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9E2B 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9E2F 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9E33 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9E37 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9E3B
 166+ 9E3B 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9E3F 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9E43 06 00
 168+ 9E45
 169+ 9E45 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9E49 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9E4D 02 00
 171+ 9E4F
 172+ 9E4F 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9E53 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9E57 04 00
 174+ 9E59 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9E5D 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9E61 08 00
 176+ 9E63
 177+ 9E63 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9E67 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9E6B 02 00
 179+ 9E6D
 180+ 9E6D 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9E71 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9E75 06 00
 182+ 9E77
 183+ 9E77 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9E7B 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9E7F 06 00
 185+ 9E81
 186+ 9E81 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9E85 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9E89 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9E8D 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9E91 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9E95 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9E99 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9E9D 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9EA1 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9EA5 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9EA9 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9EAD 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9EB1
 199+ 9EB1              ; ----- ----- ----- ----- -----
 200+ 9EB1              ;
 201+ 9EB1              ;   27/06/23
 202+ 9EB1
 203+ 9EB1              Movimiento
 204+ 9EB1
 205+ 9EB1              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9EB1
 207+ 9EB1              ;    ld hl,(Posicion_actual)
 208+ 9EB1
 209+ 9EB1 3A 03 89         ld a,(Ctrl_2)
 210+ 9EB4 CB 57            bit 2,a
 211+ 9EB6 20 1B            jr nz, Desplazamiento_iniciado
 212+ 9EB8
 213+ 9EB8 2A F5 88         ld hl,(Puntero_mov)
 214+ 9EBB 7E               ld a,(hl)
 215+ 9EBC
 216+ 9EBC              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 217+ 9EBC
 218+ 9EBC              Inicia_desplazamiento.
 219+ 9EBC
 220+ 9EBC              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 221+ 9EBC
 222+ 9EBC CD B0 9F         call Ajusta_velocidad_desplazamiento
 223+ 9EBF
 224+ 9EBF              ; Iniciamos (Repetimos_mov).
 225+ 9EBF
 226+ 9EBF 7E               ld a,(hl)
 227+ 9EC0 E6 0F            and $0f
 228+ 9EC2 32 FB 88         ld (Repetimos_desplazamiento),a
 229+ 9EC5 32 FC 88         ld (Repetimos_desplazamiento_backup),a
 230+ 9EC8
 231+ 9EC8              ; Iniciamos (Cola_de_desplazamiento).
 232+ 9EC8
 233+ 9EC8 23               inc hl
 234+ 9EC9 7E               ld a,(hl)
 235+ 9ECA 32 FE 88         ld (Cola_de_desplazamiento),a
 236+ 9ECD 2B               dec hl
 237+ 9ECE
 238+ 9ECE 21 03 89         ld hl,Ctrl_2
 239+ 9ED1 CB D6            set 2,(hl)
 240+ 9ED3
 241+ 9ED3              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 242+ 9ED3              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 243+ 9ED3
 244+ 9ED3              Desplazamiento_iniciado
 245+ 9ED3
 246+ 9ED3 CD 84 9F         call Aplica_desplazamiento
 247+ 9ED6
 248+ 9ED6 3A 03 89         ld a,(Ctrl_2)
 249+ 9ED9 CB 67            bit 4,a
 250+ 9EDB C0               ret nz                              ; Salimos si se ha producido reinicio.
 251+ 9EDC
 252+ 9EDC 21 FB 88     3 ld hl,Repetimos_desplazamiento
 253+ 9EDF 35               dec (hl)
 254+ 9EE0 C0               ret nz
 255+ 9EE1
 256+ 9EE1              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 257+ 9EE1              ; Hay que volver a ejecutar este desplazamiento ???.
 258+ 9EE1              ; Analiza (Cola_de_desplazamiento).
 259+ 9EE1
 260+ 9EE1 3A FE 88     Cola ld a,(Cola_de_desplazamiento)
 261+ 9EE4 A7               and a
 262+ 9EE5 CC D9 9F         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 263+ 9EE8 28 30            jr z,Reinicia_el_movimiento
 264+ 9EEA
 265+ 9EEA FE FF            cp $ff
 266+ 9EEC 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 267+ 9EEE
 268+ 9EEE FE FE            cp $fe
 269+ 9EF0 CC 5D 9F         call z,Fijamos_bucle
 270+ 9EF3 28 25            jr z,Reinicia_el_movimiento
 271+ 9EF5
 272+ 9EF5 FE FD            cp $fd
 273+ 9EF7 20 11            jr nz,1F
 274+ 9EF9
 275+ 9EF9              ; ---
 276+ 9EF9              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 277+ 9EF9
 278+ 9EF9 3A 03 89         ld a,(Ctrl_2)
 279+ 9EFC CB 5F            bit 3,a
 280+ 9EFE 20 1A            jr nz,Reinicia_el_movimiento
 281+ 9F00
 282+ 9F00              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 283+ 9F00
 284+ 9F00 21 03 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 285+ 9F03 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 286+ 9F05
 287+ 9F05 CD 6E 9F         call Inicia_Repetimos_movimiento
 288+ 9F08 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 289+ 9F0A              ; ---
 290+ 9F0A
 291+ 9F0A FE 01        1 cp 1
 292+ 9F0C CA 47 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 293+ 9F0F
 294+ 9F0F 3D               dec a
 295+ 9F10 32 FE 88         ld (Cola_de_desplazamiento),a
 296+ 9F13
 297+ 9F13 3A FC 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 298+ 9F16 32 FB 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 299+ 9F19              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 300+ 9F19 C9               ret
 301+ 9F1A
 302+ 9F1A              Reinicia_el_movimiento
 303+ 9F1A
 304+ 9F1A 3A 03 89         ld a,(Ctrl_2)
 305+ 9F1D CB 5F            bit 3,a
 306+ 9F1F 28 1B            jr z,2F
 307+ 9F21
 308+ 9F21              ; (Cola_de_desplazamiento)="254".
 309+ 9F21
 310+ 9F21 21 FD 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 311+ 9F24 35               dec (hl)
 312+ 9F25 20 15            jr nz,2F
 313+ 9F27
 314+ 9F27              ; Fin de las repeticiones del último movimiento.
 315+ 9F27
 316+ 9F27 21 03 89         ld hl,Ctrl_2
 317+ 9F2A CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 318+ 9F2C
 319+ 9F2C 2A F5 88         ld hl,(Puntero_mov)
 320+ 9F2F 23               inc hl
 321+ 9F30 23               inc hl
 322+ 9F31 23               inc hl
 323+ 9F32 22 F5 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 324+ 9F35              ;                                                               ; _ para ejecutar su mandato. :)
 325+ 9F35 7E               ld a,(hl)
 326+ 9F36 32 FE 88         ld (Cola_de_desplazamiento),a
 327+ 9F39
 328+ 9F39 C3 E1 9E         jp Cola
 329+ 9F3C
 330+ 9F3C CD 79 9F     2 call Inicia_Puntero_mov
 331+ 9F3F
 332+ 9F3F 21 03 89         ld hl,Ctrl_2
 333+ 9F42 CB 96            res 2,(hl)
 334+ 9F44
 335+ 9F44 C3 B1 9E         jp Movimiento
 336+ 9F47
 337+ 9F47              Siguiente_desplazamiento
 338+ 9F47
 339+ 9F47              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 340+ 9F47              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 341+ 9F47
 342+ 9F47 21 03 89         ld hl,Ctrl_2
 343+ 9F4A CB 96            res 2,(hl)
 344+ 9F4C
 345+ 9F4C 2A F5 88         ld hl,(Puntero_mov)
 346+ 9F4F 23               inc hl
 347+ 9F50 23               inc hl
 348+ 9F51 22 F5 88         ld (Puntero_mov),hl
 349+ 9F54
 350+ 9F54 7E               ld a,(hl)
 351+ 9F55 A7               and a
 352+ 9F56 CC D9 9F         call z,Incrementa_Puntero_indice_mov
 353+ 9F59 CA 1A 9F         jp z,Reinicia_el_movimiento
 354+ 9F5C
 355+ 9F5C C9               ret
 356+ 9F5D              ; Subrutinas -----------------------------------------
 357+ 9F5D              ; ---------- --------- --------- ---------- ----------
 358+ 9F5D              ;
 359+ 9F5D              ;   24/07/23
 360+ 9F5D              ;
 361+ 9F5D              ;   Fijamos_bucle
 362+ 9F5D              ;
 363+ 9F5D              ;
 364+ 9F5D
 365+ 9F5D              Fijamos_bucle
 366+ 9F5D
 367+ 9F5D 3A F9 88         ld a,(Incrementa_puntero)
 368+ 9F60 3C               inc a
 369+ 9F61 32 FA 88         ld (Incrementa_puntero_backup),a
 370+ 9F64
 371+ 9F64 CD D9 9F         call Incrementa_Puntero_indice_mov
 372+ 9F67 2A F3 88         ld hl,(Puntero_indice_mov)
 373+ 9F6A 22 F7 88         ld (Puntero_indice_mov_bucle),hl
 374+ 9F6D C9               ret
 375+ 9F6E
 376+ 9F6E              ; ---------- --------- --------- ---------- ----------
 377+ 9F6E              ;
 378+ 9F6E              ;   07/7/23
 379+ 9F6E              ;
 380+ 9F6E              ;   Inicia_Repetimos_movimiento
 381+ 9F6E              ;
 382+ 9F6E              ;
 383+ 9F6E
 384+ 9F6E              Inicia_Repetimos_movimiento
 385+ 9F6E
 386+ 9F6E              ; Iniciamos (Repetimos_movimiento).
 387+ 9F6E
 388+ 9F6E DD 2A F5 88      ld ix,(Puntero_mov)
 389+ 9F72 DD 7E 02         ld a,(ix+2)
 390+ 9F75 32 FD 88         ld (Repetimos_movimiento),a
 391+ 9F78
 392+ 9F78 C9               ret
 393+ 9F79
 394+ 9F79              ; ---------- --------- --------- ---------- ----------
 395+ 9F79              ;
 396+ 9F79              ;   26/6/23
 397+ 9F79              ;
 398+ 9F79              ;   Inicia_Puntero_mov
 399+ 9F79              ;
 400+ 9F79              ;
 401+ 9F79
 402+ 9F79 2A F3 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 403+ 9F7C 5E               ld e,(hl)
 404+ 9F7D 23               inc hl
 405+ 9F7E 56               ld d,(hl)
 406+ 9F7F EB               ex de,hl
 407+ 9F80 22 F5 88         ld (Puntero_mov),hl
 408+ 9F83 C9               ret
 409+ 9F84
 410+ 9F84              ; ---------- --------- --------- ---------- ----------
 411+ 9F84              ;
 412+ 9F84              ;   27/06/23
 413+ 9F84              ;
 414+ 9F84              ;   Aplica_movimiento.
 415+ 9F84
 416+ 9F84              Aplica_desplazamiento
 417+ 9F84
 418+ 9F84              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 419+ 9F84
 420+ 9F84 2A F5 88         ld hl, (Puntero_mov)
 421+ 9F87
 422+ 9F87 7E               ld a,(hl)
 423+ 9F88 E6 F0            and $f0
 424+ 9F8A C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 425+ 9F8B
 426+ 9F8B CB 7E            bit 7,(hl)
 427+ 9F8D 28 03            jr z,1F
 428+ 9F8F CD AF 99         call Mov_up
 429+ 9F92 2A F5 88     1 ld hl, (Puntero_mov)
 430+ 9F95 CB 76            bit 6,(hl)
 431+ 9F97 28 03            jr z,2F
 432+ 9F99 CD 7E 99         call Mov_down
 433+ 9F9C 2A F5 88     2 ld hl, (Puntero_mov)
 434+ 9F9F CB 6E            bit 5,(hl)
 435+ 9FA1 28 03            jr z,3F
 436+ 9FA3 CD 10 9B         call Mov_left
 437+ 9FA6 2A F5 88     3 ld hl, (Puntero_mov)
 438+ 9FA9 CB 66            bit 4,(hl)
 439+ 9FAB C8               ret z
 440+ 9FAC CD F2 99         call Mov_right
 441+ 9FAF C9               ret
 442+ 9FB0
 443+ 9FB0              ; ---------- --------- --------- ---------- ----------
 444+ 9FB0              ;
 445+ 9FB0              ;   26/06/23
 446+ 9FB0              ;
 447+ 9FB0              ;   Ajusta_velocidad_desplazamiento.
 448+ 9FB0
 449+ 9FB0              Ajusta_velocidad_desplazamiento
 450+ 9FB0
 451+ 9FB0              ; 1er byte de la cadena de movimiento.
 452+ 9FB0              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 453+ 9FB0
 454+ 9FB0 CD CE 9F         call Extrae_nibble_alto
 455+ 9FB3
 456+ 9FB3 32 DF 88         ld (Vel_up),a
 457+ 9FB6 79               ld a,c
 458+ 9FB7 E6 0F            and $0f
 459+ 9FB9 32 E0 88         ld (Vel_down),a
 460+ 9FBC
 461+ 9FBC              ; Saltamos al 2º byte de la cadena de movimiento.
 462+ 9FBC              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 463+ 9FBC
 464+ 9FBC 23               inc hl
 465+ 9FBD CD CE 9F         call Extrae_nibble_alto
 466+ 9FC0
 467+ 9FC0 32 DD 88         ld (Vel_left),a
 468+ 9FC3 79               ld a,c
 469+ 9FC4 E6 0F            and $0f
 470+ 9FC6 32 DE 88         ld (Vel_right),a
 471+ 9FC9
 472+ 9FC9              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 473+ 9FC9
 474+ 9FC9 23               inc hl
 475+ 9FCA 22 F5 88         ld (Puntero_mov),hl
 476+ 9FCD C9               ret
 477+ 9FCE
 478+ 9FCE 06 04        Extrae_nibble_alto ld b,4
 479+ 9FD0 7E               ld a,(hl)
 480+ 9FD1 4F               ld c,a
 481+ 9FD2 E6 F0            and $f0
 482+ 9FD4 CB 3F        1 srl a
 483+ 9FD6 10 FC            djnz 1B
 484+ 9FD8 C9               ret
 485+ 9FD9
 486+ 9FD9              ; ---------- --------- --------- ---------- ----------
 487+ 9FD9              ;
 488+ 9FD9              ;   5/7/23
 489+ 9FD9              ;
 490+ 9FD9              ;   Incrementa_Puntero_indice_mov
 491+ 9FD9
 492+ 9FD9              Incrementa_Puntero_indice_mov
 493+ 9FD9
 494+ 9FD9 21 F9 88         ld hl,Incrementa_puntero
 495+ 9FDC 34               inc (hl)
 496+ 9FDD
 497+ 9FDD 2A F3 88         ld hl,(Puntero_indice_mov)
 498+ 9FE0 01 02 00         ld bc,2
 499+ 9FE3 A7               and a
 500+ 9FE4 09               add hl,bc
 501+ 9FE5 22 F3 88         ld (Puntero_indice_mov),hl
 502+ 9FE8
 503+ 9FE8 7E               ld a,(hl)
 504+ 9FE9 A7               and a
 505+ 9FEA
 506+ 9FEA              ;! STOP. Fin del patrón de movimiento de la entidad.
 507+ 9FEA
 508+ 9FEA              ;    jr z,$
 509+ 9FEA
 510+ 9FEA              ;! Reinicia el Patrón de movimiento.
 511+ 9FEA
 512+ 9FEA CC EF 9F         call z,Inicializa_Puntero_indice_mov
 513+ 9FED
 514+ 9FED AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 515+ 9FEE
 516+ 9FEE C9               ret
 517+ 9FEF
 518+ 9FEF
 519+ 9FEF              ; ---------- --------- --------- ---------- ----------
 520+ 9FEF              ;
 521+ 9FEF              ;   24/07/23
 522+ 9FEF              ;
 523+ 9FEF              ;   Inicializa_Puntero_indice_mov
 524+ 9FEF
 525+ 9FEF              Inicializa_Puntero_indice_mov
 526+ 9FEF
 527+ 9FEF              ; Existe etiqueta de bucle principal???
 528+ 9FEF
 529+ 9FEF 2A F7 88         ld hl,(Puntero_indice_mov_bucle)
 530+ 9FF2 24               inc h
 531+ 9FF3 25               dec h
 532+ 9FF4 28 05            jr z,2F
 533+ 9FF6
 534+ 9FF6 22 F3 88         ld (Puntero_indice_mov),hl
 535+ 9FF9 18 14            jr 3F
 536+ 9FFB
 537+ 9FFB              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 538+ 9FFB
 539+ 9FFB 3A F9 88     2 ld a,(Incrementa_puntero)
 540+ 9FFE 47               ld b,a
 541+ 9FFF
 542+ 9FFF 2A F3 88         ld hl,(Puntero_indice_mov)
 543+ A002 2B           1 dec hl
 544+ A003 2B               dec hl
 545+ A004 10 FC            djnz 1B
 546+ A006 22 F3 88         ld (Puntero_indice_mov),hl
 547+ A009
 548+ A009 AF               xor a
 549+ A00A 32 F9 88         ld (Incrementa_puntero),a
 550+ A00D 18 06            jr 4F
 551+ A00F
 552+ A00F 3A FA 88     3 ld a,(Incrementa_puntero_backup)
 553+ A012 32 F9 88         ld (Incrementa_puntero),a
 554+ A015 C9           4 ret
 555+ A016
 556+ A016
 557+ A016
# file closed: Patrones_de_mov.asm
1654  A016              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A016              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A016              ;
   3+ A016              ;	27/10/23
   4+ A016              ;
   5+ A016              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A016
   7+ A016              ;	ADC HL,SP	LD (addr),SP
   8+ A016              ;	ADD HL,SP	LD SP,(addr)
   9+ A016              ;	ADD IX,SP	LD SP,nn
  10+ A016              ; 	ADD IY,SP	LD SP,HL
  11+ A016              ;				LD SP,IX
  12+ A016              ;	DEC SP		LD SP,IY
  13+ A016
  14+ A016              ;	EX (SP),HL
  15+ A016              ;	EX (SP),IX
  16+ A016              ;	EX (SP),IY
  17+ A016
  18+ A016              ;	INC SP
  19+ A016
  20+ A016                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7FA0              ;   _ durante el proceso de escritura.
  33+ 7FA0
  34+ 7FA0 F3               di
  35+ 7FA1
  36+ 7FA1 ED 73 16 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 7FA5
  38+ 7FA5              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 7FA5
  40+ 7FA5 31 E8 88         ld sp,Variables_de_borrado+6
  41+ 7FA8
  42+ 7FA8 E5               push hl
  43+ 7FA9 DD E5            push ix
  44+ 7FAB FD E5            push iy
  45+ 7FAD
  46+ 7FAD 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  47+ 7FB0
  48+ 7FB0 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  49+ 7FB1 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  50+ 7FB3 FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  51+ 7FB5
  52+ 7FB5              ; Disparo o entidad?
  53+ 7FB5
  54+ 7FB5 3A 05 89         ld a,(Ctrl_1)
  55+ 7FB8 CB 47            bit 0,a
  56+ 7FBA 28 05            jr z,2F
  57+ 7FBC
  58+ 7FBC 2A 1E 89         ld hl,(Stack_snapshot_disparos)
  59+ 7FBF 18 0F            jr 4F
  60+ 7FC1
  61+ 7FC1              ; No es disparo. Entidad/Amadeus ????
  62+ 7FC1
  63+ 7FC1 3A F2 88     2 ld a,(Ctrl_0)
  64+ 7FC4 CB 77            bit 6,a
  65+ 7FC6 28 05            jr z,7F
  66+ 7FC8
  67+ 7FC8              ; Guardamos foto de Amadeus.
  68+ 7FC8
  69+ 7FC8 2A 24 89         ld hl,(End_Snapshot_Amadeus)
  70+ 7FCB 18 03            jr 4F
  71+ 7FCD
  72+ 7FCD 2A 1C 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  73+ 7FD0
  74+ 7FD0 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  75+ 7FD2
  76+ 7FD2 D1           1 pop de
  77+ 7FD3 73               ld (hl),e
  78+ 7FD4 23               inc hl
  79+ 7FD5 72               ld (hl),d
  80+ 7FD6 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  81+ 7FD7 10 F9            djnz 1B
  82+ 7FD9
  83+ 7FD9              ; Disparo o entidad ?
  84+ 7FD9
  85+ 7FD9 3A 05 89         ld a,(Ctrl_1)
  86+ 7FDC CB 47            bit 0,a
  87+ 7FDE 28 05            jr z,5F
  88+ 7FE0
  89+ 7FE0 22 1E 89         ld (Stack_snapshot_disparos),hl
  90+ 7FE3 18 13            jr 6F
  91+ 7FE5
  92+ 7FE5              ; Entidad o Amadeus ?
  93+ 7FE5
  94+ 7FE5 3A F2 88     5 ld a,(Ctrl_0)
  95+ 7FE8 CB 77            bit 6,a
  96+ 7FEA 28 09            jr z,8F
  97+ 7FEC
  98+ 7FEC 22 24 89         ld (End_Snapshot_Amadeus),hl
  99+ 7FEF ED 7B 16 89      ld sp,(Stack)
 100+ 7FF3 FB               ei
 101+ 7FF4 C9               ret
 102+ 7FF5
 103+ 7FF5 22 1C 89     8 ld (Stack_snapshot),hl
 104+ 7FF8 ED 7B 16 89  6 ld sp,(Stack)
 105+ 7FFC
 106+ 7FFC              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
 107+ 7FFC
 108+ 7FFC 5D               ld e,l
 109+ 7FFD 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
 110+ 7FFE
 111+ 7FFE 2A 3A 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
 112+ 8001 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
 113+ 8002 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
 114+ 8003 72               ld (hl),d                                     ; _ álbum a otro.
 115+ 8004 FB               ei
 116+ 8005 C9               ret
 117+ 8006
 118+ 8006              ; ------------------------------------------------
 119+ 8006              ;
 120+ 8006              ;   4/11/23
 121+ 8006              ;
 122+ 8006              ;   La rutina estará situada justo después de:
 123+ 8006              ;   Almacen_de_parametros_DRAW equ $72ac ; ($72ac - $72eb) ; 61 bytes.
 124+ 8006
 125+ 8006              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 126+ 8006              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 127+ 8006
 128+ 8006                  org $72ec
 129+ 72EC
 130+ 72EC              Gestiona_albumes_de_fotos ; 14
 131+ 72EC
 132+ 72EC              ; En 1er lugar consultamos el bit_0 de (Ctrl_Semaforo).
 133+ 72EC              ; Si está a "1" significa que Album_de_fotos_3 o Album_de_fotos_2 estaban incompletos.
 134+ 72EC
 135+ 72EC 3A 3F 89         ld a,(Ctrl_Semaforo)
 136+ 72EF CB 47            bit 0,a
 137+ 72F1 28 5B            jr z,7F
 138+ 72F3
 139+ 72F3              ; Doble recolocación ???. Album_de_fotos_2 y Album_de_fotos_1 vacíos ???
 140+ 72F3
 141+ 72F3 CB 5F            bit 3,a
 142+ 72F5 28 17            jr z,13F
 143+ 72F7
 144+ 72F7              ; Volcamos Álbum_3 a Álbum_2
 145+ 72F7              ;    ""    Álbum_2 a Álbum_1
 146+ 72F7              ; Situamos (Stack_snapshot) al comienzo de Album_de_fotos_2.
 147+ 72F7              ; Actualizamos (Semaforo)
 148+ 72F7              ; Inicializamos (Ctrl_Semaforo)
 149+ 72F7              ; Saltamos a 7F.
 150+ 72F7
 151+ 72F7 CD CB 73         call Album3_a_Album2
 152+ 72FA CD F2 73         call Album2_a_Album1
 153+ 72FD CD 4D 74         call Actualiza_punteros_de_albumes
 154+ 7300 CD 3F 73         call Modifica_Stack_snapshot
 155+ 7303 21 3E 89     	ld hl,Semaforo
 156+ 7306 CB 0E        	rrc (hl)
 157+ 7308 AF               xor a
 158+ 7309 32 3F 89         ld (Ctrl_Semaforo),a
 159+ 730C 18 40            jr 7F
 160+ 730E
 161+ 730E
 162+ 730E              ;   Álbum_2 vacío ?????
 163+ 730E
 164+ 730E CB 4F        13 bit 1,a
 165+ 7310 20 0A            jr nz,10F
 166+ 7312
 167+ 7312              ;   Álbum_1 vacío.
 168+ 7312
 169+ 7312              ; Album_de_fotos_1 está vacío. Se ha completado Album_de_fotos_2 para volcar foto a Álbum_1 ???
 170+ 7312
 171+ 7312 3A 3E 89         ld a,(Semaforo)
 172+ 7315 CB 57            bit 2,a
 173+ 7317 28 FE            jr z,$
 174+ 7319
 175+ 7319 CD F2 73         call Album2_a_Album1
 176+ 731C
 177+ 731C              ; Album_de_fotos_2 está vacío. Se ha completado el buffer ???. Está Album_de_fotos_3 completo??
 178+ 731C
 179+ 731C 3A 3E 89     10 ld a,(Semaforo)
 180+ 731F CB 5F            bit 3,a
 181+ 7321 20 0B            jr nz,11F
 182+ 7323
 183+ 7323              ; Album_de_fotos_2 está vacío, (sus datos se han volcado a Album_de_fotos_1). Album_de_fotos_3 está incompleto por lo que no vamos a poder hacer el trasbase de datos del álbum_3 al álbum_2.
 184+ 7323              ; Activaremos el bit_3 de (Ctrl_Semaforo) para indicar este hecho.
 185+ 7323
 186+ 7323 21 3F 89         ld hl,Ctrl_Semaforo
 187+ 7326 CB DE            set 3,(hl)
 188+ 7328 CB 86            res 0,(hl)
 189+ 732A CB 96            res 2,(hl)
 190+ 732C 18 20            jr 7F
 191+ 732E
 192+ 732E              ; Album_de_fotos_3 contiene un FRAME completo.
 193+ 732E              ; Volcamos la imagen de Album_de_fotos_3 a Album_de_fotos_2
 194+ 732E
 195+ 732E CD CB 73     11 call Album3_a_Album2     ;   X-X-X-0
 196+ 7331 CD 3F 73         call Modifica_Stack_snapshot
 197+ 7334
 198+ 7334 21 3F 89         ld hl,Ctrl_Semaforo     ; Hemos reordenado los álbumes. Inicializamos el bit_0 de (Ctrl_Semaforo).
 199+ 7337 CB 86            res 0,(hl)
 200+ 7339 CB 8E            res 1,(hl)
 201+ 733B CB 96            res 2,(hl)
 202+ 733D 18 0F            jr 7F
 203+ 733F
 204+ 733F 2A 32 89     Modifica_Stack_snapshot ld hl,(Puntero_indice_album_de_fotos)
 205+ 7342 CD 83 8C     	call Extrae_address
 206+ 7345 22 1C 89     	ld (Stack_snapshot),hl
 207+ 7348 21 3E 89     	ld hl,Semaforo
 208+ 734B CB 0E        	rrc (hl)
 209+ 734D C9               ret
 210+ 734E
 211+ 734E              ; #############################################################3
 212+ 734E
 213+ 734E              ;   En 1er lugar limpiamos el FRAME pintado.
 214+ 734E              ;   Vaciamos Album_de_fotos.
 215+ 734E
 216+ 734E              ;   Album_de_fotos. Contiene datos ???
 217+ 734E
 218+ 734E              ;! Ordena_Albumes
 219+ 734E
 220+ 734E 21 01 70     7 ld hl,Album_de_fotos+1
 221+ 7351 7E               ld a,(hl)
 222+ 7352 A7               and a
 223+ 7353 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 224+ 7355
 225+ 7355              ;   Hemos impreso Album_de_fotos.
 226+ 7355              ;   Limpiamos el álbum y actualizamos (End_Snapshot). !!!!!!!!!!!!!!
 227+ 7355
 228+ 7355 2A 20 89         ld hl,(End_Snapshot)
 229+ 7358 01 00 70         ld bc,Album_de_fotos
 230+ 735B 11 01 70         ld de,Album_de_fotos+1
 231+ 735E AF               xor a
 232+ 735F 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 233+ 7360
 234+ 7360 CD 40 74         call Limpia_album
 235+ 7363
 236+ 7363 21 00 00         ld hl,0
 237+ 7366 22 20 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 238+ 7369
 239+ 7369              ; ----- ----- ----- -----
 240+ 7369
 241+ 7369              ;   Album_de_fotos está vacío y (End_Snapshot)="0".
 242+ 7369              ;   Album_de_fotos_1. Contiene un frame completo ???
 243+ 7369
 244+ 7369 3A 3E 89     3 ld a,(Semaforo)
 245+ 736C CB 4F            bit 1,a
 246+ 736E 20 06            jr nz,4F
 247+ 7370
 248+ 7370              ;! Buffer vacío. El siguiente FRAME no se puede preparar. !!!!!!!!!!!!!!!!!!!!!!!!!
 249+ 7370              ;! Album_de_fotos_1 está incompleto.
 250+ 7370
 251+ 7370              ;    jr $
 252+ 7370
 253+ 7370 21 3F 89         ld hl,Ctrl_Semaforo
 254+ 7373 CB E6            set 4,(hl)
 255+ 7375 C9               ret
 256+ 7376
 257+ 7376              ;   Album_de_fotos_1 contiene un Frame completo. Contiene datos ???
 258+ 7376
 259+ 7376 21 55 70     4 ld hl,Album_de_fotos_1+1
 260+ 7379 7E               ld a,(hl)
 261+ 737A A7               and a
 262+ 737B 28 03            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_2.
 263+ 737D
 264+ 737D              ; ----- ----- ----- -----
 265+ 737D              ; ----- ----- ----- -----
 266+ 737D
 267+ 737D CD 19 74         call Album1_a_Album
 268+ 7380
 269+ 7380              ;   Album_de_fotos_2.
 270+ 7380
 271+ 7380 3A 3F 89     1 ld a,(Ctrl_Semaforo)
 272+ 7383 CB 5F            bit 3,a
 273+ 7385 20 36            jr nz,8F
 274+ 7387
 275+ 7387              ;   El bit_3 de (Ctrl_Semaforo) activo, indica que después de reestructurar, Album_de_fotos_2 está vacío por que Album_de_fotos_3 no está completo.
 276+ 7387              ;   Tenemos que salir de la rutina sin modificar punteros para completar Album_de_fotos_3.
 277+ 7387              ;   Activaremos el bit_0 y el bit_1 de (Ctrl_Semaforo) para volver a reestructurar y volcar sus datos a Album_de_fotos_2.
 278+ 7387
 279+ 7387              ;   Contiene Frame completo ???
 280+ 7387
 281+ 7387 3A 3E 89     12 ld a,(Semaforo)
 282+ 738A CB 57            bit 2,a
 283+ 738C 20 13            jr nz,5F
 284+ 738E
 285+ 738E              ;   Album_de_fotos_2 NO contiene un FRAME completo. Contiene datos ???
 286+ 738E
 287+ 738E 21 A9 70         ld hl,Album_de_fotos_2+1
 288+ 7391 7E               ld a,(hl)
 289+ 7392 A7               and a
 290+ 7393 20 04            jr nz,9F
 291+ 7395
 292+ 7395              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 293+ 7395              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 294+ 7395
 295+ 7395 CD 4D 74         call Actualiza_punteros_de_albumes
 296+ 7398 C9               ret
 297+ 7399
 298+ 7399              ;   Album_de_fotos_2 no está completo pero contiene datos.
 299+ 7399
 300+ 7399 21 3F 89     9 ld hl,Ctrl_Semaforo
 301+ 739C CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 302+ 739E CB D6            set 2,(hl)                   ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 303+ 73A0 C9               ret
 304+ 73A1
 305+ 73A1 21 A9 70     5 ld hl,Album_de_fotos_2+1
 306+ 73A4 7E               ld a,(hl)
 307+ 73A5 A7               and a
 308+ 73A6 28 03            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Saltamos a analizar Album_de_fotos_3.
 309+ 73A8
 310+ 73A8              ; ----- ----- ----- -----
 311+ 73A8              ; ----- ----- ----- -----
 312+ 73A8              ; ----- ----- ----- -----
 313+ 73A8
 314+ 73A8              ;   Album_de_fotos_2 contiene un frame completo.
 315+ 73A8              ;   Volcamos los datos de Album_de_fotos_2 a Album_de_fotos_1 y limpiamos Album_de_fotos_2.
 316+ 73A8
 317+ 73A8 CD F2 73         call Album2_a_Album1
 318+ 73AB
 319+ 73AB              ;   Album_de_fotos_2 está vacío y (End_Snapshot_2)="0".
 320+ 73AB              ;   Album_de_fotos_3. Contiene un frame completo ???
 321+ 73AB
 322+ 73AB 3A 3E 89     2 ld a,(Semaforo)
 323+ 73AE CB 5F            bit 3,a
 324+ 73B0 20 13            jr nz,6F
 325+ 73B2
 326+ 73B2              ;   Album_de_fotos_3 NO contiene un FRAME completo. Contiene datos ???
 327+ 73B2
 328+ 73B2 21 FD 70         ld hl,Album_de_fotos_3+1
 329+ 73B5 7E               ld a,(hl)
 330+ 73B6 A7               and a
 331+ 73B7 20 04            jr nz,8F
 332+ 73B9
 333+ 73B9              ;   Album_de_fotos_3 y Album_de_fotos_2 están vacios !!!!!
 334+ 73B9              ;   Hay que situar (Stack_snapshot) al comienzo de Album_de_fotos_2 y actualizar (Semaforo).
 335+ 73B9
 336+ 73B9 CD 4D 74         call Actualiza_punteros_de_albumes
 337+ 73BC C9               ret
 338+ 73BD
 339+ 73BD              ;   Album_de_fotos_3 no está completo.
 340+ 73BD
 341+ 73BD 21 3F 89     8 ld hl,Ctrl_Semaforo
 342+ 73C0 CB C6            set 0,(hl)                   ; Indica a la rutina [Gestiona_entidades] que no tenemos que modificar (Puntero_indice_album_de_fotos) ni_
 343+ 73C2 CB CE            set 1,(hl)
 344+ 73C4 C9               ret                          ; _ (Puntero_indice_End_Snapshot). Hay que completar el álbum.
 345+ 73C5
 346+ 73C5              ;   Album_de_fotos_3 contiene un FRAME completo. Datos ???
 347+ 73C5
 348+ 73C5 21 FD 70     6 ld hl,Album_de_fotos_3+1
 349+ 73C8 7E               ld a,(hl)
 350+ 73C9 A7               and a
 351+ 73CA C8               ret z                        ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 352+ 73CB
 353+ 73CB              ; ----- ----- ----- -----
 354+ 73CB              ; ----- ----- ----- -----
 355+ 73CB              ; ----- ----- ----- -----
 356+ 73CB
 357+ 73CB 2A 2E 89     Album3_a_Album2 ld hl,(End_Snapshot_3)      ; Final, (origen).
 358+ 73CE 01 FC 70         ld bc,Album_de_fotos_3                  ; Origen.
 359+ 73D1 11 A8 70         ld de,Album_de_fotos_2                  ; Destino.
 360+ 73D4
 361+ 73D4 CD 40 74         call Limpia_album
 362+ 73D7
 363+ 73D7              ;   Actualizamos (End_Snapshot_2):
 364+ 73D7
 365+ 73D7 A7               and a
 366+ 73D8 ED 4A            adc hl,bc
 367+ 73DA 22 2A 89         ld (End_Snapshot_2),hl
 368+ 73DD
 369+ 73DD              ;   Limpiamos Album_de_fotos_3.
 370+ 73DD
 371+ 73DD 2A 2E 89         ld hl,(End_Snapshot_3)
 372+ 73E0 01 FC 70         ld bc,Album_de_fotos_3
 373+ 73E3 11 FD 70         ld de,Album_de_fotos_3+1
 374+ 73E6 AF               xor a
 375+ 73E7 02               ld (bc),a
 376+ 73E8 CD 40 74         call Limpia_album
 377+ 73EB
 378+ 73EB              ;   Hemos pasado los datos de Album_de_fotos_3 a Album_de_fotos_2.
 379+ 73EB              ;   Actualiza (End_Snapshot_3) y (Semaforo).
 380+ 73EB
 381+ 73EB 21 00 00         ld hl,0
 382+ 73EE 22 2E 89         ld (End_Snapshot_3),hl                   ; Limpia (End_Snapshot_3).
 383+ 73F1
 384+ 73F1 C9               ret
 385+ 73F2
 386+ 73F2 2A 2A 89     Album2_a_Album1 ld hl,(End_Snapshot_2)       ; Final, (origen).
 387+ 73F5 01 A8 70         ld bc,Album_de_fotos_2                   ; Origen.
 388+ 73F8 11 54 70         ld de,Album_de_fotos_1                   ; Destino.
 389+ 73FB CD 40 74         call Limpia_album
 390+ 73FE
 391+ 73FE              ;   Actualizamos (End_Snapshot_1):
 392+ 73FE
 393+ 73FE A7               and a
 394+ 73FF ED 4A            adc hl,bc
 395+ 7401 22 26 89         ld (End_Snapshot_1),hl
 396+ 7404
 397+ 7404              ;   Limpiamos Album_de_fotos_2.
 398+ 7404
 399+ 7404 2A 2A 89         ld hl,(End_Snapshot_2)
 400+ 7407 01 A8 70         ld bc,Album_de_fotos_2
 401+ 740A 11 A9 70         ld de,Album_de_fotos_2+1
 402+ 740D AF               xor a
 403+ 740E 02               ld (bc),a
 404+ 740F CD 40 74         call Limpia_album
 405+ 7412 21 00 00         ld hl,0
 406+ 7415 22 2A 89         ld (End_Snapshot_2),hl      ; Limpia (End_Snapshot_2).
 407+ 7418 C9               ret
 408+ 7419
 409+ 7419
 410+ 7419 2A 26 89     Album1_a_Album ld hl,(End_Snapshot_1)      ; Final, (origen).
 411+ 741C 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 412+ 741F 11 00 70         ld de,Album_de_fotos        ; Destino.
 413+ 7422
 414+ 7422 CD 40 74         call Limpia_album
 415+ 7425
 416+ 7425              ;   Calculamos (End_Snapshot)
 417+ 7425
 418+ 7425 A7               and a
 419+ 7426 ED 4A            adc hl,bc
 420+ 7428 22 20 89         ld (End_Snapshot),hl
 421+ 742B
 422+ 742B              ;   Limpiamos Album_de_fotos_1.
 423+ 742B
 424+ 742B 2A 26 89         ld hl,(End_Snapshot_1)
 425+ 742E 01 54 70         ld bc,Album_de_fotos_1
 426+ 7431 11 55 70         ld de,Album_de_fotos_1+1
 427+ 7434 AF               xor a
 428+ 7435 02               ld (bc),a
 429+ 7436
 430+ 7436 CD 40 74         call Limpia_album
 431+ 7439
 432+ 7439 21 00 00         ld hl,0
 433+ 743C 22 26 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 434+ 743F C9               ret
 435+ 7440
 436+ 7440              ; ----------------------------------------------------
 437+ 7440              ;
 438+ 7440              ;   10/8/23
 439+ 7440              ;
 440+ 7440              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 441+ 7440              ;
 442+ 7440              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 443+ 7440              ;           BC ..... Dirección de inicio del álbum.
 444+ 7440              ;           DE ..... Dirección de inicio del álbum. +1
 445+ 7440
 446+ 7440              ;    ld hl,(End_Snapshot)
 447+ 7440              ;    ld bc,Album_de_fotos
 448+ 7440              ;    ld de,Album_de_fotos+1
 449+ 7440
 450+ 7440              ;   MODIFICA: A,HL,BC y DE.
 451+ 7440
 452+ 7440              Limpia_album
 453+ 7440 D5               push de                     ; Guardo DESTINO.
 454+ 7441 C5               push bc                     ; Guardo ORIGEN.
 455+ 7442 ED 42            sbc hl,bc
 456+ 7444 4D               ld c,l
 457+ 7445 44               ld b,h
 458+ 7446 E1               pop hl
 459+ 7447 C5               push bc
 460+ 7448 ED B0            ldir
 461+ 744A C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 462+ 744B E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 463+ 744C C9               ret                         ; _ a otro).
 464+ 744D
 465+ 744D              ; --------------------------------------------------------------------------------------------
 466+ 744D              ;
 467+ 744D              ;   20/10/23
 468+ 744D
 469+ 744D              ;
 470+ 744D
 471+ 744D              Actualiza_punteros_de_albumes
 472+ 744D
 473+ 744D 2A 32 89         ld hl,(Puntero_indice_album_de_fotos)
 474+ 7450 2B               dec hl
 475+ 7451 2B               dec hl
 476+ 7452 22 32 89         ld (Puntero_indice_album_de_fotos),hl
 477+ 7455
 478+ 7455 2A 36 89         ld hl,(Puntero_indice_End_Snapshot)
 479+ 7458 2B               dec hl
 480+ 7459 2B               dec hl
 481+ 745A 22 36 89         ld (Puntero_indice_End_Snapshot),hl
 482+ 745D CD 83 8C         call Extrae_address
 483+ 7460 22 3A 89         ld (Puntero_de_End_Snapshot),hl
 484+ 7463
 485+ 7463 C9               ret
 486+ 7464
# file closed: Guarda_foto_registros.asm
1655  7464
1656  7464              	SAVESNA "Pruebas.sna", START
1657  7464
1658  7464
1659  7464
1660  7464
# file closed: Banco_de_pruebas.asm
