# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              ;	IM_2 *************************************************************************************************************************************************************************
   6  0000              ;
   7  0000              ;	20/6/24
   8  0000
   9  0000              	org $a9ff
  10  A9FF
  11  A9FF 01 AA        	defw $aa01
  12  AA01
  13  AA01              ;	Incrementa FRAMES. (ROM).
  14  AA01
  15  AA01 F5           	push af
  16  AA02 E5           	push hl
  17  AA03
  18  AA03              ; -------------------
  19  AA03 21 17 8A     	ld hl,Ctrl_3				;	STOP si no hemos terminado de construir el FRAME.
  20  AA06 CB 46        	bit 0,(hl)
  21  AA08 28 FE        	jr z,$
  22  AA0A
  23  AA0A
  24  AA0A              ; Shield -----------------------
  25  AA0A
  26  AA0A              Temporizacion_shield
  27  AA0A
  28  AA0A 21 3A 8A     	ld hl,Shield
  29  AA0D 7E           	ld a,(hl)
  30  AA0E A7           	and a
  31  AA0F 28 1C        	jr z,Incrementa_FRAMES		;	No hay escudo. Se agotó el tiempo Shield.
  32  AA11
  33  AA11 35           	dec (hl)					;	Decrementa tiempo Shield, (Shield).
  34  AA12
  35  AA12 23           	inc hl
  36  AA13 35           	dec (hl)					;	Decrementa temporizador de estados, (Shield_2).
  37  AA14
  38  AA14 20 17        	jr nz,Incrementa_FRAMES
  39  AA16
  40  AA16              ; El temporizador de estados a llegado a "0". HL apunta a (Shield_2).
  41  AA16
  42  AA16              Cambio_de_estado
  43  AA16
  44  AA16              ;	Indica cambio de estado.
  45  AA16
  46  AA16 23           	inc hl						;	Sitúa en (Shield_3).
  47  AA17
  48  AA17 CB 5E        	bit 3,(hl)
  49  AA19 28 05        	jr z,2F
  50  AA1B
  51  AA1B CD 69 8E     	call Inicia_Shield
  52  AA1E
  53  AA1E 18 0D        	jr Incrementa_FRAMES
  54  AA20
  55  AA20 CB 06        2 rlc (hl)						; 	Sitúa en (Shield_3) y rotamos bit. (Indica cambio de comportamiento).
  56  AA22
  57  AA22              ;	Carga en (Shield_2) la siguiente temporización.
  58  AA22
  59  AA22 2A 38 8A     	ld hl,(Puntero_datos_shield)
  60  AA25 23           	inc hl
  61  AA26 22 38 8A     	ld (Puntero_datos_shield),hl
  62  AA29 7E           	ld a,(hl)
  63  AA2A 32 3B 8A     	ld (Shield_2),a				;	Iniciamos (Shield_2) con la nueva temporización.
  64  AA2D
  65  AA2D              Incrementa_FRAMES
  66  AA2D
  67  AA2D 2A 78 5C     	ld hl,(FRAMES)
  68  AA30 23           	inc hl
  69  AA31 22 78 5C     	ld (FRAMES),hl
  70  AA34
  71  AA34 7C           	ld a,h
  72  AA35 B5           	or l
  73  AA36 20 04        	jr nz,1F
  74  AA38
  75  AA38 21 7A 5C     	ld hl,FRAMES_3
  76  AA3B 34           	inc (hl)
  77  AA3C
  78  AA3C D5           1 push de
  79  AA3D C5           	push bc
  80  AA3E
  81  AA3E CD 79 8E     	call Actualiza_pantalla
  82  AA41
  83  AA41 C1           	pop bc
  84  AA42 D1           	pop de
  85  AA43 E1           	pop hl
  86  AA44 F1           	pop af
  87  AA45
  88  AA45 FB           	ei
  89  AA46
  90  AA46 C9           	ret
  91  AA47
  92  AA47              ; --------------------------------------------------------------------------------
  93  AA47
  94  AA47              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA47              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA47              ;
   3+ AA47              ;	17/02/23
   4+ AA47              ;
   5+ AA47              ;	Sprites e índices.
   6+ AA47
   7+ AA47              	org $8168
   8+ 8168
   9+ 8168              ; Disparo.
  10+ 8168
  11+ 8168 70 81        Indice_disparo defw Disparo_0
  12+ 816A 76 81        	defw Disparo_f9
  13+ 816C 7C 81        	defw Disparo_fb
  14+ 816E 82 81        	defw Disparo_fd
  15+ 8170
  16+ 8170              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8170 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 8174 01 80
  18+ 8176              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 8176 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 817A 00 60
  20+ 817C              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 817C 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8180 18 00
  22+ 8182              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 8182 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 8186 06 00
  24+ 8188
  25+ 8188              ; ----------------------------------------------------------------------------------------
  26+ 8188
  27+ 8188              ; Badsat_izq. 2x2.
  28+ 8188
  29+ 8188 98 81        Indice_Badsat_izq defw Badsat_izquierda
  30+ 818A 00 83        	defw Badsat_izq_fe
  31+ 818C C0 82        	defw Badsat_izq_fd
  32+ 818E 90 82        	defw Badsat_izq_fc
  33+ 8190 60 82        	defw Badsat_izq_fb
  34+ 8192 30 82        	defw Badsat_izq_fa
  35+ 8194 00 82        	defw Badsat_izq_f9
  36+ 8196 C8 81        	defw Badsat_izq_f8
  37+ 8198
  38+ 8198 00 08 00     Badsat_izquierda DEFB $00,$08,$00
  39+ 819B 02 14 00     	DEFB 	$02,$14,$00
  40+ 819E 02 2A 00     	DEFB 	$02,$2A,$00
  41+ 81A1 02 55 00     	DEFB 	$02,$55,$00
  42+ 81A4 02 AA 00     	DEFB	$02,$AA,$00
  43+ 81A7 02 54 00     	DEFB 	$02,$54,$00
  44+ 81AA 7F E8 00     	DEFB 	$7F,$E8,$00
  45+ 81AD 03 60 00     	DEFB 	$03,$60,$00
  46+ 81B0 0A E0 00     	DEFB	$0A,$E0,$00
  47+ 81B3 17 F8 00     	DEFB 	$17,$F8,$00
  48+ 81B6 2B E8 00     	DEFB 	$2B,$E8,$00
  49+ 81B9 54 40 00     	DEFB 	$54,$40,$00
  50+ 81BC AA 60 00     	DEFB	$AA,$60,$00
  51+ 81BF 54 00 00     	DEFB 	$54,$00,$00
  52+ 81C2 28 00 00     	DEFB 	$28,$00,$00
  53+ 81C5 10 00 00     	DEFB 	$10,$00,$00	 ; Sprite principal a izquierda, (sin desplazar).
  54+ 81C8
  55+ 81C8 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  55+ 81CC 0A 00 01 15
  56+ 81D0 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  56+ 81D4 01 55 00 01
  57+ 81D8 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  57+ 81DC 00 01 B0 00
  58+ 81E0 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  58+ 81E4 FC 00 15 F4
  59+ 81E8 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  59+ 81EC 55 30 00 2A
  60+ 81F0 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  60+ 81F4 00 08 00 00
  61+ 81F8
  62+ 81F8              	org $8200
  63+ 8200
  64+ 8200 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  64+ 8204 85 00 00 8A
  65+ 8208 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  65+ 820C 00 AA 80 00
  66+ 8210 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  66+ 8214 00 00 D8 00
  67+ 8218 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  67+ 821C FE 00 0A FA
  68+ 8220 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  68+ 8224 2A 98 00 15
  69+ 8228 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  69+ 822C 00 04 00 00
  70+ 8230
  71+ 8230 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  71+ 8234 42 80 00 45
  72+ 8238 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  72+ 823C 00 55 40 00
  73+ 8240 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  73+ 8244 00 00 6C 00
  74+ 8248 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  74+ 824C FF 00 05 7D
  75+ 8250 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  75+ 8254 15 4C 00 0A
  76+ 8258 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  76+ 825C 00 02 00 00
  77+ 8260
  78+ 8260 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  78+ 8264 21 40 00 22
  79+ 8268 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  79+ 826C 00 2A A0 00
  80+ 8270 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  80+ 8274 80 00 36 00
  81+ 8278 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  81+ 827C 7F 80 02 BE
  82+ 8280 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  82+ 8284 0A A6 00 05
  83+ 8288 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  83+ 828C 00 01 00 00
  84+ 8290
  85+ 8290 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  85+ 8294 10 A0 00 11
  86+ 8298 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  86+ 829C 00 15 50 00
  87+ 82A0 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  87+ 82A4 40 00 1B 00
  88+ 82A8 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  88+ 82AC BF C0 01 5F
  89+ 82B0 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  89+ 82B4 05 53 00 02
  90+ 82B8 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  90+ 82BC 00 00 80 00
  91+ 82C0
  92+ 82C0 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  92+ 82C4 08 50 00 08
  93+ 82C8 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  93+ 82CC 00 0A A8 00
  94+ 82D0 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  94+ 82D4 A0 00 0D 80
  95+ 82D8 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  95+ 82DC 5F F8 00 AF
  96+ 82E0 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  96+ 82E4 02 A9 00 01
  97+ 82E8 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  97+ 82EC 00 00 40 00
  98+ 82F0
  99+ 82F0              	org $8300
 100+ 8300
 101+ 8300 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 101+ 8304 04 28 00 04
 102+ 8308 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 102+ 830C 00 05 54 00
 103+ 8310 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 103+ 8314 D0 00 06 C0
 104+ 8318 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 104+ 831C 2F FC 00 57
 105+ 8320 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 105+ 8324 01 54 80 00
 106+ 8328 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 106+ 832C 00 00 20 00
 107+ 8330
 108+ 8330
 109+ 8330 40 83        Indice_Badsat_der defw Badsat_derecha
 110+ 8332 70 83        	defw Badsat_der_f8
 111+ 8334 A0 83        	defw Badsat_der_f9
 112+ 8336 D0 83        	defw Badsat_der_fa
 113+ 8338 00 84        	defw Badsat_der_fb
 114+ 833A 00 84        	defw Badsat_der_fc
 115+ 833C 30 84        	defw Badsat_der_fd
 116+ 833E 60 84        	defw Badsat_der_fe
 117+ 8340
 118+ 8340 10 00 00     Badsat_derecha DEFB	$10,$00,$00
 119+ 8343 28 40 00     	DEFB    $28,$40,$00
 120+ 8346 54 40 00     	DEFB	$54,$40,$00
 121+ 8349 AA 40 00     	DEFB	$AA,$40,$00
 122+ 834C 55 40 00     	DEFB	$55,$40,$00
 123+ 834F 2A 40 00     	DEFB	$2A,$40,$00
 124+ 8352 17 FE 00     	DEFB	$17,$FE,$00
 125+ 8355 06 C0 00     	DEFB	$06,$C0,$00
 126+ 8358 07 50 00     	DEFB	$07,$50,$00
 127+ 835B 1F E8 00     	DEFB	$1F,$E8,$00
 128+ 835E 17 D4 00     	DEFB	$17,$D4,$00
 129+ 8361 02 2A 00     	DEFB	$02,$2A,$00
 130+ 8364 06 55 00     	DEFB	$06,$55,$00
 131+ 8367 00 2A 00     	DEFB	$00,$2A,$00
 132+ 836A 00 14 00     	DEFB	$00,$14,$00
 133+ 836D 00 08 00     	DEFB	$00,$08,$00 ; Sprite principal a derecha, (sin desplazar).
 134+ 8370
 135+ 8370 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 135+ 8374 20 00 2A 20
 136+ 8378 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 136+ 837C 2A A0 00 15
 137+ 8380 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 137+ 8384 00 03 60 00
 138+ 8388 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 138+ 838C F4 00 0B EA
 139+ 8390 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 139+ 8394 03 2A 80 00
 140+ 8398 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 140+ 839C 00 00 04 00
 141+ 83A0
 142+ 83A0 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 142+ 83A4 10 00 15 10
 143+ 83A8 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 143+ 83AC 15 50 00 0A
 144+ 83B0 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 144+ 83B4 80 01 B0 00
 145+ 83B8 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 145+ 83BC FA 00 05 F5
 146+ 83C0 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 146+ 83C4 01 95 40 00
 147+ 83C8 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 147+ 83CC 00 00 02 00
 148+ 83D0
 149+ 83D0 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 149+ 83D4 08 00 0A 88
 150+ 83D8 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 150+ 83DC 0A A8 00 05
 151+ 83E0 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 151+ 83E4 C0 00 D8 00
 152+ 83E8 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 152+ 83EC FD 00 02 FA
 153+ 83F0 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 153+ 83F4 00 CA A0 00
 154+ 83F8 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 154+ 83FC 80 00 01 00
 155+ 8400
 156+ 8400 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 156+ 8404 84 00 05 44
 157+ 8408 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 157+ 840C 05 54 00 02
 158+ 8410 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 158+ 8414 E0 00 6C 00
 159+ 8418 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 159+ 841C FE 80 01 7D
 160+ 8420 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 160+ 8424 00 65 50 00
 161+ 8428 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 161+ 842C 40 00 00 80
 162+ 8430
 163+ 8430              ;! 16 bytes libres aquí !!!!!
 164+ 8430
 165+ 8430              	org $8400
 166+ 8400
 167+ 8400 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 167+ 8404 42 00 02 A2
 168+ 8408 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 168+ 840C 02 AA 00 01
 169+ 8410 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 169+ 8414 F0 00 36 00
 170+ 8418 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 170+ 841C FF 40 00 BE
 171+ 8420 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 171+ 8424 00 32 A8 00
 172+ 8428 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 172+ 842C A0 00 00 40
 173+ 8430
 174+ 8430 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 174+ 8434 A1 00 01 51
 175+ 8438 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 175+ 843C 01 55 00 00
 176+ 8440 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 176+ 8444 F8 00 1B 00
 177+ 8448 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 177+ 844C FF A0 00 1F
 178+ 8450 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 178+ 8454 00 09 54 00
 179+ 8458 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 179+ 845C 50 00 00 20
 180+ 8460
 181+ 8460 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 181+ 8464 50 80 00 A8
 182+ 8468 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 182+ 846C 00 AA 80 00
 183+ 8470 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 183+ 8474 FC 00 0D 80
 184+ 8478 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 184+ 847C FF D0 00 0F
 185+ 8480 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 185+ 8484 00 04 AA 00
 186+ 8488 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 186+ 848C 28 00 00 10
 187+ 8490
 188+ 8490              ; ----------------------------------------------------------------------------------------
 189+ 8490
 190+ 8490              ; Amadeus. 2x2.
 191+ 8490
 192+ 8490              ;	org $8119
 193+ 8490
 194+ 8490 B0 84        Indice_Amadeus_der defw Amadeus
 195+ 8492 00 00        	defw 0
 196+ 8494 00 85        	defw Amadeus_F9							; [$F9] right - [$FA] left
 197+ 8496 00 00        	defw 0
 198+ 8498 30 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 199+ 849A 00 00        	defw 0
 200+ 849C 60 85        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 201+ 849E 00 00        	defw 0	 								; (Fín de índice).
 202+ 84A0
 203+ 84A0 B0 84        Indice_Amadeus_izq defw Amadeus
 204+ 84A2 00 00        	defw 0
 205+ 84A4 60 85        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 206+ 84A6 00 00        	defw 0
 207+ 84A8 30 85        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 208+ 84AA 00 00        	defw 0
 209+ 84AC 00 85        	defw Amadeus_F9							; [$FD] right - [$FE] left
 210+ 84AE 00 00        	defw 0	 								; (Fín de índice).
 211+ 84B0
 212+ 84B0 01 80 00     Amadeus DEFB $01,$80,0
 213+ 84B3 23 C4 00     	DEFB	$23,$C4,0
 214+ 84B6 26 64 00     	DEFB	$26,$64,0
 215+ 84B9 24 24 00     	DEFB	$24,$24,0
 216+ 84BC 2C 34 00     	DEFB	$2C,$34,0
 217+ 84BF 6D B6 00     	DEFB	$6D,$B6,0
 218+ 84C2 6F F6 00     	DEFB	$6F,$F6,0
 219+ 84C5 67 E6 00     	DEFB	$67,$E6,0
 220+ 84C8 E7 E7 00     	DEFB	$E7,$E7,0
 221+ 84CB F3 CF 00     	DEFB	$F3,$CF,0
 222+ 84CE F7 EF 00     	DEFB	$F7,$EF,0
 223+ 84D1 FF FF 00     	DEFB	$FF,$FF,0
 224+ 84D4 FB DF 00     	DEFB	$FB,$DF,0
 225+ 84D7 FB DF 00     	DEFB	$FB,$DF,0
 226+ 84DA 8B D1 00     	DEFB	$8B,$D1,0
 227+ 84DD 71 8E 00     	DEFB	$71,$8E,0 						; Sprite principal, (sin desplazar).
 228+ 84E0
 229+ 84E0              	org $8500
 230+ 8500
 231+ 8500 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 231+ 8504 F1 00 09 99
 232+ 8508 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 232+ 850C 0B 0D 00 1B
 233+ 8510 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 233+ 8514 80 19 F9 80
 234+ 8518 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 234+ 851C F3 C0 3D FB
 235+ 8520 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 235+ 8524 3E F7 C0 3E
 236+ 8528 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 236+ 852C 40 1C 63 80
 237+ 8530
 238+ 8530 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 238+ 8534 3C 40 02 66
 239+ 8538 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 239+ 853C 02 C3 40 06
 240+ 8540 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 240+ 8544 60 06 7E 60
 241+ 8548 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 241+ 854C 3C F0 0F 7E
 242+ 8550 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 242+ 8554 0F BD F0 0F
 243+ 8558 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 243+ 855C 10 07 18 E0
 244+ 8560
 245+ 8560 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 245+ 8564 8F 10 00 99
 246+ 8568 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 246+ 856C 00 B0 D0 01
 247+ 8570 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 247+ 8574 D8 01 9F 98
 248+ 8578 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 248+ 857C CF 3C 03 DF
 249+ 8580 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 249+ 8584 03 EF 7C 03
 250+ 8588 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 250+ 858C 44 01 C6 38
 251+ 8590
 252+ 8590              ; ----------------------------------------------------------------------------------------
 253+ 8590
 254+ 8590              ;	org $8690
 255+ 8590
 256+ 8590 96 85        Indice_Explosion_entidades defw Explosion_entidades_1
 257+ 8592 C6 85        	defw Explosion_entidades_2
 258+ 8594 00 86        	defw Explosion_entidades_3
 259+ 8596
 260+ 8596 00 10 00     Explosion_entidades_1 DEFB $00,$10,$00
 261+ 8599 08 10 00     	DEFB 	$08,$10,$00
 262+ 859C 04 38 40     	DEFB	$04,$38,$40
 263+ 859F 03 7D 80     	DEFB	$03,$7D,$80
 264+ 85A2 02 E6 80     	DEFB	$02,$E6,$80
 265+ 85A5 01 B7 00     	DEFB	$01,$B7,$00
 266+ 85A8 01 7F 00     	DEFB	$01,$7F,$00
 267+ 85AB 03 DD 80     	DEFB	$03,$DD,$80
 268+ 85AE 0F FF E0     	DEFB	$0F,$FF,$E0
 269+ 85B1 03 3B 80     	DEFB	$03,$3B,$80
 270+ 85B4 01 9D 00     	DEFB	$01,$9D,$00
 271+ 85B7 01 F6 00     	DEFB	$01,$F6,$00
 272+ 85BA 02 FD 80     	DEFB	$02,$FD,$80
 273+ 85BD 03 00 40     	DEFB	$03,$00,$40
 274+ 85C0 04 00 00     	DEFB	$04,$00,$00
 275+ 85C3 08 00 00     	DEFB	$08,$00,$00
 276+ 85C6
 277+ 85C6 08 00 00 05  Explosion_entidades_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 277+ 85CA 38 10 03 BC
 278+ 85CE 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 278+ 85D2 04 06 C0 00
 279+ 85D6 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 279+ 85DA 00 03 DD 80
 280+ 85DE 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 280+ 85E2 3A 70 01 9C
 281+ 85E6 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 281+ 85EA 04 F8 80 06
 282+ 85EE 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 282+ 85F2 00 00 00 00
 283+ 85F6
 284+ 85F6              	org $8600
 285+ 8600
 286+ 8600 03 18 10 04  Explosion_entidades_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 286+ 8604 00 20 08 00
 287+ 8608 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 287+ 860C 00 06 00 00
 288+ 8610 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 288+ 8614 00 00 14 30
 289+ 8618 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 289+ 861C 38 00 01 08
 290+ 8620 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 290+ 8624 00 80 00 04
 291+ 8628 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 291+ 862C 10 08 00 20
 292+ 8630
 293+ 8630              ; ------------------------------------------
 294+ 8630
 295+ 8630 36 86        Indice_Explosion_Amadeus defw Explosion_Amadeus_1
 296+ 8632 66 86        	defw Explosion_Amadeus_2
 297+ 8634 96 86        	defw Explosion_Amadeus_3
 298+ 8636
 299+ 8636 00 18 02     Explosion_Amadeus_1	DEFB $00,$18,$02
 300+ 8639 02 3C 36     	DEFB	$02,$3C,$36
 301+ 863C 02 66 56     	DEFB	$02,$66,$56
 302+ 863F 02 42 48     	DEFB	$02,$42,$48
 303+ 8642 02 C3 32     	DEFB	$02,$C3,$32
 304+ 8645 06 DB 0C     	DEFB	$06,$DB,$0C
 305+ 8648 06 FE 46     	DEFB	$06,$FE,$46
 306+ 864B 06 79 68     	DEFB	$06,$79,$68
 307+ 864E 0E 76 D8     	DEFB	$0E,$76,$D8
 308+ 8651 1E 34 6C     	DEFB	$1E,$34,$6C
 309+ 8654 0F 6E BE     	DEFB	$0F,$6E,$BE
 310+ 8657 0F EF B0     	DEFB	$0F,$EF,$B0
 311+ 865A 0F B5 A0     	DEFB	$0F,$B5,$A0
 312+ 865D 0F B1 8A     	DEFB	$0F,$B1,$8A
 313+ 8660 08 BA 4C     	DEFB	$08,$BA,$4C
 314+ 8663 07 19 80     	DEFB	$07,$19,$80
 315+ 8666
 316+ 8666 00 18 02     Explosion_Amadeus_2	DEFB $00,$18,$02
 317+ 8669 00 3C 36     	DEFB	$00,$3C,$36
 318+ 866C 00 66 56     	DEFB	$00,$66,$56
 319+ 866F 04 42 48     	DEFB	$04,$42,$48
 320+ 8672 0A 03 32     	DEFB	$0A,$03,$32
 321+ 8675 14 DB 0C     	DEFB	$14,$DB,$0C
 322+ 8678 1C DE 46     	DEFB	$1C,$DE,$46
 323+ 867B 36 49 68     	DEFB 	$36,$49,$68
 324+ 867E 0C 76 D8     	DEFB	$0C,$76,$D8
 325+ 8681 10 34 6C     	DEFB	$10,$34,$6C
 326+ 8684 2B 6E BE     	DEFB	$2B,$6E,$BE
 327+ 8687 0E AF B0     	DEFB	$0E,$AF,$B0
 328+ 868A 29 B5 A0     	DEFB	$29,$B5,$A0
 329+ 868D 0C 91 8A     	DEFB	$0C,$91,$8A
 330+ 8690 08 BA 4C     	DEFB	$08,$BA,$4C
 331+ 8693 07 19 80     	DEFB	$07,$19,$80
 332+ 8696
 333+ 8696 00 00 00     Explosion_Amadeus_3	DEFB $00,$00,$00
 334+ 8699 00 00 00     	DEFB	$00,$00,$00
 335+ 869C 00 00 00     	DEFB	$00,$00,$00
 336+ 869F 00 00 40     	DEFB	$00,$00,$40
 337+ 86A2 00 00 30     	DEFB	$00,$00,$30
 338+ 86A5 00 00 08     	DEFB	$00,$00,$08
 339+ 86A8 00 82 40     	DEFB	$00,$82,$40
 340+ 86AB 04 04 68     	DEFB	$04,$04,$68
 341+ 86AE 04 20 58     	DEFB	$04,$20,$58
 342+ 86B1 18 12 2C     	DEFB	$18,$12,$2C
 343+ 86B4 2A 40 3C     	DEFB	$2A,$40,$3C
 344+ 86B7 0F C2 30     	DEFB	$0F,$C2,$30
 345+ 86BA 29 80 A0     	DEFB	$29,$80,$A0
 346+ 86BD 0F 84 88     	DEFB	$0F,$84,$88
 347+ 86C0 08 A0 4C     	DEFB	$08,$A0,$4C
 348+ 86C3 07 11 80     	DEFB	$07,$11,$80
 349+ 86C6
# file closed: Sprites_e_indices.asm
  95  86C6              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 86C6              ; ---------------------------------------------------------------------
   2+ 86C6              ; Cajas de entidades, Amadeus y disparos. Índices de disparos y cajas.
   3+ 86C6              ; Índice de Patrón de movimiento para tipo de entidad.
   4+ 86C6              ; ---------------------------------------------------------------------
   5+ 86C6
   6+ 86C6              ; 30/05/24
   7+ 86C6              ;
   8+ 86C6              ;	En esta tabla iremos almacenando:
   9+ 86C6              ;
  10+ 86C6              ;	(Columna_Y),(Dirección de memoria donde se encuentran almacenados los scanlines masticados de cada entidad, (Scanlines_album)).
  11+ 86C6              ;
  12+ 86C6              ;	Los 6 últimos bytes contienen el borrado/pintado de Amadeus, (Amadeus_scanlines_album).
  13+ 86C6
  14+ 86C6 00 00 00...  Numeros_aleatorios ds 7
  15+ 86CD
  16+ 86CD 00 00 00...  Tabla_de_pintado ds 27
  17+ 86E8
  18+ 86E8              ;	db 0, defw 0
  19+ 86E8              ;	db 0, defw 0
  20+ 86E8              ;	db 0, defw 0
  21+ 86E8              ;	db 0, defw 0
  22+ 86E8              ;	db 0, defw 0
  23+ 86E8              ;	db 0, defw 0
  24+ 86E8              ;	db 0, defw 0
  25+ 86E8
  26+ 86E8 F1 87        Indice_de_mov_segun_tipo_de_entidad defw Indice_mov_Baile_de_BadSat
  27+ 86EA              ;	defw ...
  28+ 86EA              ; 	defw ...
  29+ 86EA 00 00        	defw 0
  30+ 86EC
  31+ 86EC              ; Control. %00000001 00000001
  32+ 86EC              ;
  33+ 86EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
  34+ 86EC              ;                    _ hacen las entidades hacia abajo.
  35+ 86EC              ;
  36+ 86EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  37+ 86EC
  38+ 86EC F2 86        Indice_de_disparos_Amadeus defw Disparo_1A
  39+ 86EE F8 86        	defw Disparo_2A
  40+ 86F0 FE 86        	defw Disparo_3A
  41+ 86F2
  42+ 86F2 00 00        Disparo_1A defw 0									; Control.
  43+ 86F4 00 00        	defw 0											; Puntero objeto.
  44+ 86F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  45+ 86F8
  46+ 86F8 00 00        Disparo_2A defw 0									; Control.
  47+ 86FA 00 00        	defw 0											; Puntero objeto.
  48+ 86FC 00 00        	defw 0											; Puntero de impresión.
  49+ 86FE
  50+ 86FE 00 00        Disparo_3A defw 0
  51+ 8700
  52+ 8700 16 87        Indice_de_disparos_entidades defw Disparo_1
  53+ 8702 1C 87        	defw Disparo_2
  54+ 8704 22 87        	defw Disparo_3
  55+ 8706 28 87        	defw Disparo_4
  56+ 8708 2E 87        	defw Disparo_5
  57+ 870A 34 87        	defw Disparo_6
  58+ 870C 3A 87        	defw Disparo_7
  59+ 870E 40 87        	defw Disparo_8
  60+ 8710 46 87        	defw Disparo_9
  61+ 8712 4C 87        	defw Disparo_10
  62+ 8714 52 87        	defw Disparo_11
  63+ 8716
  64+ 8716 00 00        Disparo_1 defw 0									; Control.
  65+ 8718 00 00        	defw 0											; Puntero objeto.
  66+ 871A 00 00        	defw 0											; Puntero de impresión.
  67+ 871C
  68+ 871C 00 00        Disparo_2 defw 0									; Control.
  69+ 871E 00 00        	defw 0											; Puntero objeto.
  70+ 8720 00 00        	defw 0											; Puntero de impresión.
  71+ 8722
  72+ 8722 00 00        Disparo_3 defw 0									; Control.
  73+ 8724 00 00        	defw 0											; Puntero objeto.
  74+ 8726 00 00        	defw 0											; Puntero de impresión.
  75+ 8728
  76+ 8728 00 00        Disparo_4 defw 0									; Control.
  77+ 872A 00 00        	defw 0											; Puntero objeto.
  78+ 872C 00 00        	defw 0											; Puntero de impresión.
  79+ 872E
  80+ 872E 00 00        Disparo_5 defw 0									; Control.
  81+ 8730 00 00        	defw 0											; Puntero objeto.
  82+ 8732 00 00        	defw 0											; Puntero de impresión.
  83+ 8734
  84+ 8734 00 00        Disparo_6 defw 0									; Control.
  85+ 8736 00 00        	defw 0											; Puntero objeto.
  86+ 8738 00 00        	defw 0											; Puntero de impresión.
  87+ 873A
  88+ 873A 00 00        Disparo_7 defw 0									; Control.
  89+ 873C 00 00        	defw 0											; Puntero objeto.
  90+ 873E 00 00        	defw 0											; Puntero de impresión.
  91+ 8740
  92+ 8740 00 00        Disparo_8 defw 0									; Control.
  93+ 8742 00 00        	defw 0											; Puntero objeto.
  94+ 8744 00 00        	defw 0											; Puntero de impresión.
  95+ 8746
  96+ 8746 00 00        Disparo_9 defw 0									; Control.
  97+ 8748 00 00        	defw 0											; Puntero objeto.
  98+ 874A 00 00        	defw 0											; Puntero de impresión.
  99+ 874C
 100+ 874C 00 00        Disparo_10 defw 0									; Control.
 101+ 874E 00 00        	defw 0											; Puntero objeto.
 102+ 8750 00 00        	defw 0											; Puntero de impresión.
 103+ 8752
 104+ 8752 00 00        Disparo_11 defw 0
 105+ 8754
 106+ 8754              ; -------------------------------------------------------------------------------------
 107+ 8754              ;
 108+ 8754              ;	Índice de cajas de entidades.
 109+ 8754              ;
 110+ 8754              ;	18/1/24
 111+ 8754              ;
 112+ 8754
 113+ 8754              Indice_de_cajas_de_entidades
 114+ 8754
 115+ 8754 72 87        	defw Caja_1
 116+ 8756 7E 87        	defw Caja_2
 117+ 8758 8A 87        	defw Caja_3
 118+ 875A 96 87        	defw Caja_4
 119+ 875C A2 87        	defw Caja_5
 120+ 875E AE 87        	defw Caja_6
 121+ 8760 BA 87        	defw Caja_7
 122+ 8762
 123+ 8762 00 00        	defw 0
 124+ 8764 00 00        	defw 0
 125+ 8766
 126+ 8766              ; -------------------------
 127+ 8766
 128+ 8766              ; Relleno para que no se corrompa el movimiento. ?????
 129+ 8766
 130+ 8766              ;	db 0
 131+ 8766
 132+ 8766              ; ---------- ---------- ---------- ---------- ----------
 133+ 8766              ;
 134+ 8766              ;	28/05/24
 135+ 8766              ;
 136+ 8766              ; 	Cada caja tiene 14 bytes !!!
 137+ 8766              ;
 138+ 8766              ;	En principio Amadeus mo utiliza los parámetros: (Contador_de_vueltas) y (Velocidad). Estarán a "0" aunque no descarto utilizarlos más adelante para otra función.
 139+ 8766
 140+ 8766 00           Amadeus_BOX db 0										; (Tipo).
 141+ 8767 00 15        CX_Amadeus db 0,$15                                     ; (Coordenada_X), (Coordenada_Y).
 142+ 8769 00           	db 0												; (Contador_de_vueltas).
 143+ 876A 00           Impacto_Amadeus	db 0									; (Impacto).
 144+ 876B 00 00        p.imp.amadeus defw 0									; (Puntero_de_impresion).
 145+ 876D 00 00        Pamm_Amadeus defw 0										; (Puntero_de_almacen_de_mov_masticados).
 146+ 876F 00 00        Comm_Amadeus defw 0 									; (Contador_de_mov_masticados).
 147+ 8771 00           	db 0												; (Velocidad).
 148+ 8772
 149+ 8772              ; ---------- ---------- ---------- ---------- ----------
 150+ 8772              ;
 151+ 8772              ;	22/01/24
 152+ 8772              ;
 153+ 8772              ; 	Cada caja tiene 12 bytes !!!
 154+ 8772
 155+ 8772 00 00 00     Caja_1 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 156+ 8775 00           	db 0												; (Contador_de_vueltas).
 157+ 8776 00           	db 0												; (Impacto).
 158+ 8777 00 00        	defw 0												; (Puntero_de_impresion).
 159+ 8779 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 160+ 877B 00 00        	defw 0 												; (Contador_de_mov_masticados).
 161+ 877D 00           	db 0												; (Velocidad).
 162+ 877E
 163+ 877E              ; ---------- ---------- ---------- ---------- ----------
 164+ 877E
 165+ 877E 00 00 00     Caja_2 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 166+ 8781 00           	db 0 												; (Contador_de_vueltas).
 167+ 8782 00           	db 0												; (Impacto).
 168+ 8783 00 00        	defw 0												; (Puntero_de_impresion).
 169+ 8785 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 170+ 8787 00 00        	defw 0 												; (Contador_de_mov_masticados).
 171+ 8789 00           	db 0												; (Velocidad).
 172+ 878A
 173+ 878A              ; ---------- ---------- ---------- ---------- ----------
 174+ 878A
 175+ 878A 00 00 00     Caja_3 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 176+ 878D 00           	db 0 												; (Contador_de_vueltas).
 177+ 878E 00           	db 0												; (Impacto).
 178+ 878F 00 00        	defw 0												; (Puntero_de_impresion).
 179+ 8791 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 180+ 8793 00 00        	defw 0 												; (Contador_de_mov_masticados).
 181+ 8795 00           	db 0												; (Velocidad).
 182+ 8796
 183+ 8796              ; ---------- ---------- ---------- ---------- ----------
 184+ 8796
 185+ 8796 00 00 00     Caja_4 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 186+ 8799 00           	db 0 												; (Contador_de_vueltas).
 187+ 879A 00           	db 0												; (Impacto).
 188+ 879B 00 00        	defw 0												; (Puntero_de_impresion).
 189+ 879D 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 190+ 879F 00 00        	defw 0 												; (Contador_de_mov_masticados).
 191+ 87A1 00           	db 0												; (Velocidad).
 192+ 87A2
 193+ 87A2              ; ---------- ---------- ---------- ---------- ----------
 194+ 87A2
 195+ 87A2 00 00 00     Caja_5 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y).
 196+ 87A5 00           	db 0 												; (Contador_de_vueltas).
 197+ 87A6 00           	db 0												; (Impacto).
 198+ 87A7 00 00        	defw 0												; (Puntero_de_impresion).
 199+ 87A9 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 200+ 87AB 00 00        	defw 0 												; (Contador_de_mov_masticados).
 201+ 87AD 00           	db 0												; (Velocidad).
 202+ 87AE
 203+ 87AE              ; ---------- ---------- ---------- ---------- ----------
 204+ 87AE
 205+ 87AE 00 00 00     Caja_6 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 206+ 87B1 00           	db 0 												; (Contador_de_vueltas).
 207+ 87B2 00           	db 0												; (Impacto).
 208+ 87B3 00 00        	defw 0												; (Puntero_de_impresion).
 209+ 87B5 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 210+ 87B7 00 00        	defw 0 												; (Contador_de_mov_masticados).
 211+ 87B9 00           	db 0												; (Velocidad).
 212+ 87BA
 213+ 87BA              ; ---------- ---------- ---------- ---------- ----------
 214+ 87BA
 215+ 87BA 00 00 00     Caja_7 db 0,0,0											; (Tipo) / (Coordenada_X) / (Coordenada_Y)..
 216+ 87BD 00           	db 0 												; (Contador_de_vueltas).
 217+ 87BE 00           	db 0												; (Impacto).
 218+ 87BF 00 00        	defw 0												; (Puntero_de_impresion).
 219+ 87C1 00 00        	defw 0												; (Puntero_de_almacen_de_mov_masticados).
 220+ 87C3 00 00        	defw 0 												; (Contador_de_mov_masticados).
 221+ 87C5 00           	db 0												; (Velocidad).
 222+ 87C6
 223+ 87C6              ; -------------------------------------------------------------------------------------
 224+ 87C6              ;
 225+ 87C6              ;	11/1/24
 226+ 87C6              ;
 227+ 87C6              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 228+ 87C6              ;
 229+ 87C6              ;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 230+ 87C6              ;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 231+ 87C6              ;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 232+ 87C6              ;		_ construidas las rutinas [Mov_right] y [Mov_left].
 233+ 87C6
 234+ 87C6              Indice_de_definiciones_de_entidades
 235+ 87C6
 236+ 87C6 CA 87        	defw Entidad_1
 237+ 87C8 D7 87        	defw Entidad_2
 238+ 87CA
 239+ 87CA              ;	DEFINICIONES DE ENTIDADES. (20 Bytes).
 240+ 87CA
 241+ 87CA              ;	BADSAT, (Satélite malvado).
 242+ 87CA
 243+ 87CA 01 02 02     Entidad_1 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 244+ 87CD 01           	db 1												; (Contador_de_vueltas).
 245+ 87CE 30 83        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 246+ 87D0 88 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 247+ 87D2 03 40        	defw $4003	                                     	; (Posicion_inicio).
 248+ 87D4 01           	db 1												; (Cuad_objeto).
 249+ 87D5 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 250+ 87D7
 251+ 87D7 01 02 02     Entidad_2 db 1,2,2		                     			; (Tipo) / (Filas) / (Columns).
 252+ 87DA 01           	db 1												; (Contador_de_vueltas).
 253+ 87DB 30 83        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 254+ 87DD 88 81        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 255+ 87DF 40 50        	defw $5040                                      	; (Posicion_inicio).
 256+ 87E1 01           	db 1												; (Cuad_objeto).
 257+ 87E2 20 EB        	defw Almacen_de_movimientos_masticados_Entidad_1	; (Puntero_de_almacen_de_mov_masticados)
 258+ 87E4
 259+ 87E4              ; -------------------------------------------------------------------------------------
 260+ 87E4              ;
 261+ 87E4              ;	28/05/24
 262+ 87E4              ;
 263+ 87E4              ;	Definición de Amadeus.
 264+ 87E4              ;
 265+ 87E4              ;	Amadeus no utiliza el parámetro: (Contador_de_vueltas). Lo colocamos a "0".
 266+ 87E4              ;	Inicialmente situamos a Amadeus en el centro de la pantalla.
 267+ 87E4
 268+ 87E4 00 02 02     Definicion_Amadeus db 0,2,2		                     	; (Tipo) / (Filas) / (Columns).
 269+ 87E7 00           	db 0												; (Contador_de_vueltas).
 270+ 87E8 90 84        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 271+ 87EA A0 84        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 272+ 87EC C1 50        	defw $50c1	                                     	; (Posicion_inicio).
 273+ 87EE 03           	db 3												; (Cuad_objeto).
 274+ 87EF 00 E0        	defw Almacen_de_movimientos_masticados_Amadeus		; (Puntero_de_almacen_de_mov_masticados).
# file closed: Cajas_y_disparos.asm
  96  87F1              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 87F1
   2+ 87F1
   3+ 87F1              ;   07/07/23
   4+ 87F1              ;
   5+ 87F1              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 87F1              ;
   7+ 87F1              ;   Codificación:
   8+ 87F1              ;
   9+ 87F1              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 87F1              ;
  11+ 87F1              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 87F1              ;
  13+ 87F1              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 87F1              ;
  15+ 87F1              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 87F1              ;
  17+ 87F1              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 87F1              ;                               ..... %01000010 Vel_up 4
  19+ 87F1              ;                                               Vel_down 2
  20+ 87F1              ;                               ..... $42
  21+ 87F1              ;
  22+ 87F1              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 87F1              ;
  24+ 87F1              ;                               ..... %01000010 Vel_left 4
  25+ 87F1              ;                                               Vel_right 2
  26+ 87F1              ;                               ..... $42
  27+ 87F1              ;
  28+ 87F1              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 87F1              ;
  30+ 87F1              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 87F1              ;
  32+ 87F1              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 87F1              ;
  34+ 87F1              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 87F1              ;                                     $53
  36+ 87F1              ;
  37+ 87F1              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 87F1              ;
  39+ 87F1              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 87F1              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 87F1              ;
  42+ 87F1              ;                       Arriba ..... $81
  43+ 87F1              ;                       Arriba - izquierda ..... $a1
  44+ 87F1              ;                       Arriba - derecha ..... $91
  45+ 87F1              ;
  46+ 87F1              ;                       Abajo ..... $41
  47+ 87F1              ;                       Abajo - izquierda ..... $61
  48+ 87F1              ;                       Abajo - derecha ..... $51
  49+ 87F1              ;
  50+ 87F1              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 87F1              ;
  52+ 87F1              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 87F1              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 87F1              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 87F1              ;
  56+ 87F1              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 87F1              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 87F1              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 87F1              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 87F1              ;
  61+ 87F1              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 87F1              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 87F1              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 87F1              ;
  65+ 87F1              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 87F1              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 87F1              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 87F1              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 87F1
  70+ 87F1              ; ----- ----- ----- ----- -----
  71+ 87F1
  72+ 87F1 1D 88        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 87F3 25 88            defw F_1
  74+ 87F5 2F 88            defw F_2
  75+ 87F7 39 88            defw Codo_abajo_derecha
  76+ 87F9 6D 88            defw Derecha_y_subiendo
  77+ 87FB 77 88            defw Derecha_y_subiendo_1
  78+ 87FD 81 88            defw F_3
  79+ 87FF 8B 88            defw F_4
  80+ 8801 95 88            defw Derecha_y_bajando
  81+ 8803 9F 88            defw Derecha_y_bajando_1
  82+ 8805 A9 88            defw Derecha_y_bajando_2
  83+ 8807 B3 88            defw Codo_derecha_abajo
  84+ 8809 E3 88            defw Codo_abajo_izq.
  85+ 880B 17 89            defw Izquierda_y_subiendo
  86+ 880D 21 89            defw Izquierda_y_subiendo_1
  87+ 880F 2B 89            defw F_5
  88+ 8811 35 89            defw F_6
  89+ 8813 3F 89            defw Izquierda_y_bajando
  90+ 8815 49 89            defw Izquierda_y_bajando_1
  91+ 8817 53 89            defw Izquierda_y_bajando_2
  92+ 8819 5D 89            defw Codo_izquierda_abajo
  93+ 881B 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 881D
  95+ 881D 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo (vel_2). 15rep.
  96+ 8821 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 8825
  98+ 8825 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 8829 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 882D 08 00
 100+ 882F
 101+ 882F 11 11 41 01  F_2 db $11,$11,$41,1
 102+ 8833 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 102+ 8837 0F FE
 103+ 8839
 104+ 8839 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 105+ 883D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 106+ 8841 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 107+ 8845 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 108+ 8849 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 109+ 884D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 110+ 8851 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 111+ 8855 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 112+ 8859 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 113+ 885D 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 114+ 8861 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 115+ 8865 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 116+ 8869 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 117+ 886D
 118+ 886D 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 119+ 8871 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 119+ 8875 06 00
 120+ 8877
 121+ 8877 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 122+ 887B 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 122+ 887F 02 00
 123+ 8881
 124+ 8881 11 11 11 01  F_3 db $11,$11,$11,1
 125+ 8885 11 11 01 FD      db $11,$11,$01,253,4,0
 125+ 8889 04 00
 126+ 888B
 127+ 888B 11 11 11 01  F_4 db $11,$11,$11,1
 128+ 888F 11 11 02 FD      db $11,$11,$02,253,8,0
 128+ 8893 08 00
 129+ 8895
 130+ 8895 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 131+ 8899 11 11 51 FD      db $11,$11,$51,253,2,0
 131+ 889D 02 00
 132+ 889F
 133+ 889F 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 134+ 88A3 11 11 51 FD      db $11,$11,$51,253,6,0
 134+ 88A7 06 00
 135+ 88A9
 136+ 88A9 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 137+ 88AD 11 11 51 FD      db $11,$11,$51,253,6,0
 137+ 88B1 06 00
 138+ 88B3
 139+ 88B3              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 140+ 88B3
 141+ 88B3 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 142+ 88B7 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 88BB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 144+ 88BF 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 145+ 88C3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 88C7 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 147+ 88CB 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 88CF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 149+ 88D3 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 150+ 88D7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 151+ 88DB 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 152+ 88DF 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 153+ 88E3
 154+ 88E3 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 155+ 88E7 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 156+ 88EB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 88EF 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 158+ 88F3 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 88F7 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 160+ 88FB 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 161+ 88FF 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 162+ 8903 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 163+ 8907 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 890B 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 165+ 890F 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 166+ 8913 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 167+ 8917
 168+ 8917 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 169+ 891B 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 169+ 891F 06 00
 170+ 8921
 171+ 8921 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 172+ 8925 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 172+ 8929 02 00
 173+ 892B
 174+ 892B 11 11 21 01  F_5 db $11,$11,$21,1
 175+ 892F 11 11 01 FD      db $11,$11,$01,253,4,0
 175+ 8933 04 00
 176+ 8935
 177+ 8935 11 11 21 01  F_6 db $11,$11,$21,1
 178+ 8939 11 11 02 FD      db $11,$11,$02,253,8,0
 178+ 893D 08 00
 179+ 893F
 180+ 893F 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 181+ 8943 11 11 61 FD      db $11,$11,$61,253,2,0
 181+ 8947 02 00
 182+ 8949
 183+ 8949 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 184+ 894D 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 8951 06 00
 185+ 8953
 186+ 8953 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 187+ 8957 11 11 61 FD      db $11,$11,$61,253,6,0
 187+ 895B 06 00
 188+ 895D
 189+ 895D 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 190+ 8961 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 191+ 8965 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 192+ 8969 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 193+ 896D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 194+ 8971 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 195+ 8975 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 196+ 8979 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 197+ 897D 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 198+ 8981 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 199+ 8985 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 200+ 8989 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 201+ 898D
 202+ 898D
 203+ 898D
 204+ 898D
 205+ 898D
 206+ 898D
 207+ 898D
 208+ 898D
 209+ 898D
 210+ 898D
# file closed: Patrones_de_mov.asm
  97  898D              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 898D              ; 19/1/24
   2+ 898D
   3+ 898D              Indice_de_niveles
   4+ 898D
   5+ 898D 95 89        	defw Nivel_1
   6+ 898F A0 89        	defw Nivel_2
   7+ 8991
   8+ 8991              ;	...
   9+ 8991              ;	...
  10+ 8991              ;	+ Niveles ...
  11+ 8991
  12+ 8991 00 00        	defw 0
  13+ 8993 00 00        	defw 0
  14+ 8995
  15+ 8995 06           Nivel_1 db 6									; Nº de entidades.
  16+ 8996 01 01 01 01  	db 1,1,1,1	                                ; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  17+ 899A 01 01 01 01  	db 1,1,1,1,1,1								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  17+ 899E 01 01
  18+ 89A0
  19+ 89A0 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 89A1 01 01 01 02  	db 1,1,1,2									; Velocidades. Vel_left, Vel_right, Vel_up, Vel_downa. (1, 2, 4 u 8 px).
  21+ 89A5 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  21+ 89A9 01 02
  22+ 89AB 02 01 01 01  	db 2,1,1,1,1,2
  22+ 89AF 01 02
  23+ 89B1
# file closed: Niveles.asm
  98  89B1
  99  89B1              ; ******************************************************************************************************************************************************************************************
 100  89B1              ; Constantes.
 101  89B1              ; ******************************************************************************************************************************************************************************************
 102  89B1              ;
 103  89B1              ; 09/03/24
 104  89B1
 105  89B1              ;
 106  89B1              ; Constantes.
 107  89B1              ;
 108  89B1
 109  89B1              ;Variables ROM. FRAMES y KEYBOARD. Rutina Interrupción mascarable $0038.
 110  89B1
 111  89B1              FRAMES equ $5c78										; Variable de 24 bits. Almacena el nº de cuadros, (frames) que llevamos construidos. Reloj en tiempo real.
 112  89B1              FRAMES_3 equ $5c7a
 113  89B1
 114  89B1              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 115  89B1
 116  89B1              Sprite_vacio equ $eae0									; ($eae0 - $eb10) 48 Bytes de "0".
 117  89B1
 118  89B1              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  89B1              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  89B1              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  89B1              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  89B1
 123  89B1              Almacen_de_movimientos_masticados_Entidad_1 equ $eb20	; $eb20 - $f87b ..... 3419 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  89B1              Almacen_de_movimientos_masticados_Amadeus equ $e000		; ($e000 - $e1e3), 483 bytes. Movimientos masticados de Amadeus.
 125  89B1
 126  89B1              Scanlines_album equ $8000	;	($8000 - $8118) 		; Inicialmente 280 bytes.
 127  89B1              Scanlines_album_2 equ $9000    ;    ($9000 - $9118)
 128  89B1              Amadeus_scanlines_album equ $8120	;	($8120 - $8142)
 129  89B1              Amadeus_scanlines_album_2 equ $8143	;	($8143 - $8166)
 130  89B1
 131  89B1              ;                                                       ; 35 bytes por entidad.
 132  89B1              ;														; 1. 2 Bytes ..... .defw  Puntero_objeto, (mem. address donde se encuentran los .db que forman los distintos sprites).
 133  89B1              ;                                                       ; 2. 1 Byte ..... .db  Indica el nº de scanlines que vamos a imprimir del sprite. Generalmente 16 scanlines.
 134  89B1              ;														; El nº de scanlines será menor cuando estemos `desapareciendo´ por la parte baja de la pantalla.
 135  89B1              ; 														; 3. 32 Bytes, (como máximo). Screen mem. address de cada uno de los scanlines que forman el sprite.
 136  89B1
 137  89B1
 138  89B1              ; ******************************************************************************************************************************************************************************************
 139  89B1              ; Variables.
 140  89B1              ; ******************************************************************************************************************************************************************************************
 141  89B1
 142  89B1              ;
 143  89B1              ; 12/05/24
 144  89B1              ;
 145  89B1              ; Variables de DRAW. (Motor principal).	44 Bytes.
 146  89B1              ;
 147  89B1
 148  89B1              Bandeja_DRAW ; -----------------------------------------------------------------------------------------------
 149  89B1
 150  89B1 00           Tipo db 0												; Clase de la entidad. Cada `tipo´ de Entidad tiene unas características únicas que lo distinguen de otros tipos:
 151  89B2              ;															- Patrón de movimiento.
 152  89B2 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 153  89B3 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 154  89B4
 155  89B4 00           Contador_de_vueltas db 0								; Contador de vueltas de entidades. Inicialmente su valor es "1". El bit se desplaza una posición a la izquierda cada vez que la entidad_
 156  89B5              ;														; _desaparece por la parte baja de la pantalla. Esta variable se utiliza para incrementar el perfil de velocidad de las entidades.
 157  89B5
 158  89B5              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 159  89B5              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 160  89B5              ; Ejemplos.
 161  89B5
 162  89B5              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 163  89B5              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 164  89B5              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 165  89B5              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 166  89B5              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 167  89B5
 168  89B5 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 169  89B6              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 170  89B6              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 171  89B6
 172  89B6 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 173  89B8              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 174  89B8
 175  89B8 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 176  89BA
 177  89BA              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 178  89BA              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 179  89BA
 180  89BA 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 181  89BC              ;														; _palabras que componen el "movimiento_masticado".
 182  89BC
 183  89BC              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 184  89BC
 185  89BC 00           Velocidad db 0 											; 5 vueltas max. 5 vueltas       1 - 0 (1ª vuelta - velocidad 0)
 186  89BD              ;																						 2 - 0 (2ª vuelta - velocidad 0)
 187  89BD              ;																						 4 - 1 (3ª vuelta - velocidad 1)
 188  89BD              ;																						 8 - 2 (4ª vuelta - velocidad 2)
 189  89BD              ;																					   $10 - 4 (5ª vuelta - velocidad 3)
 190  89BD
 191  89BD 00           Ctrl_2 db 0
 192  89BE              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 193  89BE              ;															_ [Genera_datos_de_impresion] guarda su 1ª imagen.
 194  89BE              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 195  89BE              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 196  89BE              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 197  89BE              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 198  89BE              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 199  89BE              ;
 200  89BE              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 201  89BE              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 202  89BE              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 203  89BE              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 204  89BE              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 205  89BE              ;														BIT 4, ???
 206  89BE              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 207  89BE
 208  89BE 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 209  89BF              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 210  89BF              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 211  89BF              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 212  89BF              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 213  89BF              ;
 214  89BF              ; 														DESCRIPCIÖN:
 215  89BF              ;
 216  89BF              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 217  89BF              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 218  89BF              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 219  89BF              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 220  89BF              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 221  89BF              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 222  89BF              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 223  89BF              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 224  89BF              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 225  89BF              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 226  89BF              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 227  89BF              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 228  89BF              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 229  89BF              ;
 230  89BF              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 231  89BF              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 232  89BF              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 233  89BF
 234  89BF              ; ----- ----- De aquí para arriba son los datos que se trasfieren a las cajas de entidades. ¡¡¡¡¡
 235  89BF
 236  89BF 00           Filas db 0												; Filas. [DRAW]
 237  89C0 00           Columns db 0 	  										; Nº de columnas. [DRAW]
 238  89C1 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 239  89C3 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 240  89C5
 241  89C5              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 242  89C5
 243  89C5 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 244  89C6              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 245  89C6              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 246  89C6
 247  89C6              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 248  89C6
 249  89C6              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 250  89C6              ;
 251  89C6              ;	COLORES: 0 ..... NEGRO
 252  89C6              ;    		 1 ..... AZUL
 253  89C6              ; 			 2 ..... ROJO
 254  89C6              ;			 3 ..... MAGENTA
 255  89C6              ; 			 4 ..... VERDE
 256  89C6              ; 			 5 ..... CIAN
 257  89C6              ;			 6 ..... AMARILLO
 258  89C6              ; 			 7 ..... BLANCO
 259  89C6
 260  89C6 00 00        Indice_Sprite_der defw 0
 261  89C8 00 00        Indice_Sprite_izq defw 0
 262  89CA 00 00        Puntero_DESPLZ_der defw 0
 263  89CC 00 00        Puntero_DESPLZ_izq defw 0
 264  89CE
 265  89CE 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 266  89D0 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 267  89D1
 268  89D1              ; Variables de objeto. (Características).
 269  89D1
 270  89D1              ; Variables_de_borrado ds 6
 271  89D1
 272  89D1
 273  89D1              ; Variables de funcionamiento. [DRAW].
 274  89D1
 275  89D1 00           Columnas db 0
 276  89D2 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  89D4              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  89D4 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  89D5
 280  89D5              ; variables de control general.
 281  89D5
 282  89D5 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 283  89D6
 284  89D6              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 285  89D6
 286  89D6              Perfiles_de_velocidad
 287  89D6
 288  89D6 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 289  89D7 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 290  89D8 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 291  89D9 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 292  89DA
 293  89DA              ; Contadores de 16 bits.
 294  89DA
 295  89DA 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0
 296  89DC 00 00        Contador_general_de_mov_masticados_Entidad_2 defw 0
 297  89DE 00 00        Contador_general_de_mov_masticados_Entidad_3 defw 0
 298  89E0 00 00        Contador_general_de_mov_masticados_Entidad_4 defw 0
 299  89E2
 300  89E2              ; Movimiento. ------------------------------------------------------------------------------------------------------
 301  89E2
 302  89E2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 303  89E4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 304  89E6 00 00        Puntero_indice_mov_bucle defw 0							;
 305  89E8              ;
 306  89E8              ;
 307  89E8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 308  89E9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 309  89E9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 310  89E9 00           Incrementa_puntero_backup db 0
 311  89EA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 312  89EB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 313  89EB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 314  89EC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 315  89ED 00           Cola_de_desplazamiento db 0								; Este byte indica:
 316  89EE              ;
 317  89EE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 318  89EE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 319  89EE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 320  89EE              ;
 321  89EE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 322  89EE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 323  89EE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 324  89EE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 325  89EE              ;
 326  89EE              ;														;	"$ff" ..... Bucle infinito de repetición.
 327  89EE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 328  89EE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 329  89EE
 330  89EE 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 331  89EF
 332  89EF              ;														DESCRIPCIÓN:
 333  89EF              ;
 334  89EF              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 335  89EF              ;															_ rutina [Genera_datos_de_impresion] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 336  89EF              ;															_ por lo tanto hemos de almacenarlos en `Scanlines_album_disparos´ en lugar de `Scanlines_album´.
 337  89EF              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 338  89EF              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 339  89EF              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 340  89EF
 341  89EF              ;														BIT 3, Recarga de nueva oleada.
 342  89EF              ;														BIT 4, Recarga de nueva oleada.
 343  89EF              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 344  89EF              ;														BIT 6, **** Frame completo.
 345  89EF              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 346  89EF
 347  89EF 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 348  89F1              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 349  89F1              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 350  89F1              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 351  89F1
 352  89F1              ; Gestión de ENTIDADES y CAJAS.
 353  89F1
 354  89F1 00 00        Puntero_store_caja defw 0
 355  89F3 00 00        Puntero_restore_caja defw 0
 356  89F5 00 00        Indice_restore_caja defw 0
 357  89F7 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 358  89F8 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 359  89F9 00           Entidades_en_curso db 0									; ..... ..... .....
 360  89FA              ;Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 361  89FA              ;														; Esta variable es utilizada por la rutina [Genera_datos_de_impresion]_
 362  89FA              ;														; _ para actualizar el puntero (Scanlines_album_SP) o reiniciarlo cuando_
 363  89FA              ;														; _ (Numero_de_malotes)="0".
 364  89FA 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 365  89FC 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 366  89FE              ;														; _ puntero (Indice_entidades).
 367  89FE
 368  89FE              ;---------------------------------------------------------------------------------------------------------------
 369  89FE              ;
 370  89FE              ;	02/07/24
 371  89FE              ;
 372  89FE              ;	Álbumes.
 373  89FE
 374  89FE 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 375  8A00              ;														; _variable para almacenar lo posición del puntero_
 376  8A00              ; 														; _de pila, SP.
 377  8A00 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 378  8A02              ;														; La utiliza la rutina [Extrae_foto_registros].
 379  8A02
 380  8A02              ; Impresión. ----------------------------------------------------------------------------------------------------
 381  8A02
 382  8A02 00 00        Album_de_pintado defw 0
 383  8A04 00 00        Album_de_borrado defw 0
 384  8A06 00 00        Album_de_pintado_Amadeus defw 0
 385  8A08 00 00        Album_de_borrado_Amadeus defw 0
 386  8A0A 00 00        Techo_Scanlines_album defw 0
 387  8A0C 00 00        Techo_Scanlines_album_2 defw 0
 388  8A0E 00           Switch db 0
 389  8A0F 00 00        Techo defw 0
 390  8A11 00 00        Scanlines_album_SP defw 0
 391  8A13 CD 86        India_SP defw Tabla_de_pintado
 392  8A15 D0 86        India_2_SP defw Tabla_de_pintado+3
 393  8A17
 394  8A17 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 395  8A18              ;
 396  8A18              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 397  8A18              ;															BIT 1, "1" Indica que hemos completado todo el patrón de movimientos de este tipo de entidad.
 398  8A18              ;																_ El almacén de movimientos masticados de este tipo de entidad quedará completo. ([Inicia_entidad]).
 399  8A18              ;															BIT 2, "1" Indica que se produce movimiento en alguna entidad, (modificamos el último FRAME impreso en pantalla).
 400  8A18              ;																Habilita el borrado/pintado de sprites.
 401  8A18              ;															BIT 3, "1" Este bit lo coloca a "1" la rutina [Borra_diferencia] para indicar que hemos actualizado el (Techo_de_pintado)_
 402  8A18              ;																_ a la baja.
 403  8A18              ; 															BIT 4, "1" Indica que hemos terminado de ordenar la Tabla_de_pintado. Podremos salir así de la rutina [Ordena_tabla_de_impresion].
 404  8A18              ;															BIT 5, "1" Indica que existe movimiento de Amadeus.
 405  8A18              ;															BIT 6, "1" Indica que Amadeus ha sido destruido. Este bit lo activa la rutina [Genera_explosion_Amadeus] despues de pintar_
 406  8A18              ; 																_ el último frame de la explosión de nuestra nave.
 407  8A18
 408  8A18 00           Ctrl_4 db 0 											; 3er Byte de Ctrl. general, (no específico) a una única entidad. Lo utiliza la rutina [Inicia_entidad].
 409  8A19              ;
 410  8A19              ;                                                           Los bits (0-3) indican el (Tipo) de entidad que estamos iniciando.
 411  8A19              ;
 412  8A19              ;                                                          	BIT 0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 413  8A19              ;															BIT 1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 414  8A19              ;	                                                        BIT 2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 415  8A19              ;	                                                        BIT 3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 416  8A19              ;
 417  8A19              ;															Los bits (4-7) indican que (Tipo) de entidad tiene todos sus movimientos_
 418  8A19              ;															_ masticados ya generados.
 419  8A19              ;
 420  8A19              ;															BIT 4 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_1.
 421  8A19              ;															BIT 5 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_2.
 422  8A19              ;	                                                        BIT 6 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_3.
 423  8A19              ;	                                                        BIT 7 (Ctrl_4) ..... MOV_MASTICADOS GENERADOS. Entidad de (Tipo)_4.
 424  8A19
 425  8A19
 426  8A19              ; Gestión de Disparos.
 427  8A19
 428  8A19              ;Numero_de_disparotes db 0
 429  8A19
 430  8A19 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 431  8A1B 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 432  8A1D
 433  8A1D 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 434  8A1E              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 435  8A1E              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 436  8A1E              ;
 437  8A1E              ;														; bit_2. La rutina [Genera_coordenadas_X] coloca este bit a "1" para indicar que hay una posible colisión entre una entidad y Amadeus.
 438  8A1E              ;																 Una de la entidades ha entrado en zona de Amadeus y alguna de sus columnas coincide con las de nuestra nave.
 439  8A1E              ;																 El bit indica que hay que ejecutar [Detecta_colision_nave_entidad] al principio de [Main], (Construcción del frame).
 440  8A1E
 441  8A1E
 442  8A1E
 443  8A1E
 444  8A1E
 445  8A1E
 446  8A1E
 447  8A1E
 448  8A1E 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 449  8A20              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 450  8A20              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se produzca colisión.
 451  8A20
 452  8A20              ;Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 453  8A20              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 454  8A20 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 455  8A23              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 456  8A23 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 457  8A26              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 458  8A26              ;Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 459  8A26
 460  8A26              ;---------------------------------------------------------------------------------------------------------------
 461  8A26
 462  8A26              ; Relojes y temporizaciones.
 463  8A26
 464  8A26 04           Clock_explosion db 4									; Temporización de las explosiones, (velocidad de la explosión).
 465  8A27 05           Clock_explosion_Amadeus db 5
 466  8A28 64           Temp_new_live db 100									; Tiempo que tarda en aparecer una nueva nave Amadeus tras ser destruida.
 467  8A29
 468  8A29 C6 86        RND_SP defw Numeros_aleatorios							; Puntero que se irá desplazando por el SET de nº aleatorios.
 469  8A2B
 470  8A2B 00 00        Clock_next_entity defw 0								; Transcurrido este tiempo aparece una nueva entidad.
 471  8A2D 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 472  8A2E              ;														; Repite la oleada de entidades.
 473  8A2E 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 474  8A2F
 475  8A2F              ;CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 476  8A2F              ;CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 477  8A2F
 478  8A2F              ;Disparo_entidad db 1									; A "1", se puede generar disparo.
 479  8A2F              ;CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 480  8A2F              ;CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 481  8A2F
 482  8A2F              ;---------------------------------------------------------------------------------------------------------------
 483  8A2F
 484  8A2F              ; Gestión de NIVELES.
 485  8A2F
 486  8A2F 00           Nivel db 0												; Nivel actual del juego.
 487  8A30 00 00        Puntero_indice_NIVELES defw 0
 488  8A32 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 489  8A34              ; 														; _ que definen el NIVEL.
 490  8A34
 491  8A34              ; ---------------------------------------------------------------------------------------------------------------
 492  8A34
 493  8A34              ; Temporizaciones Shield.
 494  8A34
 495  8A34 02 01 02 01  Datos_Shield db 2,1,2,1									; Tiempos.
 496  8A38 00 00        Puntero_datos_shield defw 0								; Señala distintos tiempos para introducirlos en (Shield_2).
 497  8A3A 5A           Shield db 90											; Temporización principal. Indica el tiempo que el escudo está activo. No hay escudo cuando (Shield)="0".
 498  8A3B 00           Shield_2 db 0 											; Almacena un tiempo, ( hacía el que apunta:  Puntero_datos_shield ).
 499  8A3C 00           Shield_3 db 0
 500  8A3D
 501  8A3D 06           Lives db 6
 502  8A3E
 503  8A3E              ; 	INICIO  *************************************************************************************************************************************************************************
 504  8A3E              ;
 505  8A3E              ;	5/1/24
 506  8A3E
 507  8A3E              START
 508  8A3E
 509  8A3E 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 510  8A41 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 511  8A43 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 512  8A45 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 513  8A47 F3           	DI
 514  8A48
 515  8A48              ; Limpiamos pantalla.
 516  8A48
 517  8A48 3E 07        	ld a,%00000111
 518  8A4A              ;	call Cls
 519  8A4A CD 5E 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 520  8A4D
 521  8A4D              ; INICIALIZACIÓN.
 522  8A4D
 523  8A4D 06 07        	ld b,7   											 ; Generamos 7 nº aleatorios.
 524  8A4F CD 7F AA     	call Derivando_RND 									 ; Rutina de generación de nº aleatorios.
 525  8A52 CD 05 8C     	call Extrae_numero_aleatorio_y_avanza
 526  8A55
 527  8A55 6F           	ld l,a
 528  8A56 26 00        	ld h,0
 529  8A58 22 2B 8A     	ld (Clock_next_entity),hl 							 ; El 1er nº aleatorio define cuando aparece la 1ª entidad en pantalla.
 530  8A5B
 531  8A5B              ;	Inicializa 1er Nivel.
 532  8A5B
 533  8A5B 21 8D 89     	ld hl,Indice_de_niveles
 534  8A5E 22 30 8A     	ld (Puntero_indice_NIVELES),hl						 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
 535  8A61 CD AF AA     	call Inicializa_Nivel								 ; Prepara el 1er Nivel del juego.
 536  8A64              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 537  8A64              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 538  8A64              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 539  8A64 CD BA 8D     	call Inicia_albumes_de_lineas
 540  8A67              ;
 541  8A67 CD CA 8D     	call Inicia_albumes_de_lineas_Amadeus
 542  8A6A
 543  8A6A CD F4 AA     4 call Inicia_Entidades
 544  8A6D CD 57 AB     	call Inicia_Amadeus
 545  8A70
 546  8A70              ;														 ; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 547  8A70              ;														 ; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 548  8A70              ;														 ; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 549  8A70
 550  8A70 11 66 87     	ld de,Amadeus_BOX
 551  8A73 CD AA AC     	call Parametros_de_bandeja_DRAW_a_caja	 			 ; Volcamos Amadeus en (Amadeus_BOX).
 552  8A76 CD 9A AB     	call Limpiamos_bandeja_DRAW
 553  8A79
 554  8A79              ; 	Situamos a Amadeus en el centro de la pantalla y pintamos.
 555  8A79
 556  8A79 06 3C        	ld b,60
 557  8A7B CD 86 98     2 call Amadeus_a_izquierda
 558  8A7E 10 FB        	djnz 2B
 559  8A80
 560  8A80 CD 98 8D     	call Genera_datos_de_impresion_Amadeus
 561  8A83
 562  8A83              ;! ---------------------------------------------------------------------------------------------------------------------------------------------------------
 563  8A83
 564  8A83 CD D7 8D     	call Inicia_punteros_de_cajas						 ; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
 565  8A86              ;														 ; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
 566  8A86
 567  8A86              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 568  8A86              ; (Esto se dá cuando se inicia una nueva oleada).
 569  8A86
 570  8A86              ;	ld a,(Ctrl_1)
 571  8A86              ;	bit 3,a
 572  8A86              ;	jr nz,5F											 ; Loop
 573  8A86
 574  8A86              ;	ld de,Amadeus_db
 575  8A86              ;	call Store_Amadeus
 576  8A86
 577  8A86              ; 	INICIA DISPAROS !!!!!
 578  8A86
 579  8A86 CD ED 8D     	call Inicia_Puntero_Disparo_Entidades
 580  8A89 CD F4 8D     	call Inicia_Puntero_Disparo_Amadeus
 581  8A8C
 582  8A8C              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 583  8A8C
 584  8A8C              ;5 call Inicia_punteros_de_cajas
 585  8A8C              ;	call Restore_entidad
 586  8A8C
 587  8A8C              ;	ld a,(Ctrl_1)
 588  8A8C              ;	bit 3,a
 589  8A8C              ;	jr z,6F
 590  8A8C
 591  8A8C              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 592  8A8C
 593  8A8C              ;	ld hl,Ctrl_1
 594  8A8C              ;	res 3,(hl)
 595  8A8C              ;	jr Main
 596  8A8C
 597  8A8C              ; Damos por concluida la construcción del FRAME.
 598  8A8C              ;
 599  8A8C
 600  8A8C CD 69 8E     	call Inicia_Shield
 601  8A8F
 602  8A8F
 603  8A8F 2A 11 8A     6 ld hl,(Scanlines_album_SP)
 604  8A92 22 0A 8A     	ld (Techo_Scanlines_album),hl
 605  8A95
 606  8A95 2A 04 8A     	ld hl,(Album_de_borrado)
 607  8A98 22 11 8A     	ld (Scanlines_album_SP),hl
 608  8A9B
 609  8A9B 21 CD 86     	ld hl,Tabla_de_pintado
 610  8A9E 22 13 8A     	ld (India_SP),hl
 611  8AA1
 612  8AA1 21 17 8A     	ld hl,Ctrl_3
 613  8AA4 CB C6        	set 0,(hl) 											; Indica Frame completo.
 614  8AA6 CB D6        	set 2,(hl)
 615  8AA8 CB EE        	set 5,(hl)											; Imprimimos Amadeus.
 616  8AAA
 617  8AAA FB           	ei 													; Ha de apuntar a $5c3a.
 618  8AAB
 619  8AAB 76           	halt
 620  8AAC
 621  8AAC              ; ------------------------------------
 622  8AAC
 623  8AAC              Main
 624  8AAC              ;
 625  8AAC              ; 13/05/24
 626  8AAC
 627  8AAC              ; En el FRAME que acabamos de pintar puede existir una posible colisión entre alguna entidad y Amadeus.
 628  8AAC              ; Si alguna de las coordenadas_X de alguna entidad que esté en zona de Amadeus coincide con alguna de las coordenadas_X de Amadeus, habrá que comprobar si existe colisión.
 629  8AAC              ; Este hecho lo indica el bit2 de (Impacto2).
 630  8AAC
 631  8AAC CD D0 9A     	call Detecta_colision_nave_entidad 					; La rutina verifica la colisión entre una entidad y Amadeus, (RES 2 Impacto2).
 632  8AAF
 633  8AAF 2A 2B 8A     16 ld hl,(Clock_next_entity)
 634  8AB2 ED 4B 78 5C  	ld bc,(FRAMES)
 635  8AB6 A7           	and a
 636  8AB7 ED 42        	sbc hl,bc
 637  8AB9 20 16        	jr nz,13F
 638  8ABB
 639  8ABB              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 640  8ABB              ; _ (Clock_next_entity) para la siguiente entidad.
 641  8ABB
 642  8ABB 3A F8 89     21 ld a,(Numero_parcial_de_entidades)
 643  8ABE 47           	ld b,a
 644  8ABF 3A F9 89     	ld a,(Entidades_en_curso)
 645  8AC2 B8           	cp b
 646  8AC3 28 0C        	jr z,13F
 647  8AC5 30 0A        	jr nc,13F
 648  8AC7
 649  8AC7 3C           	inc a
 650  8AC8 32 F9 89     	ld (Entidades_en_curso),a
 651  8ACB
 652  8ACB              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 653  8ACB
 654  8ACB CD 05 8C     	call Extrae_numero_aleatorio_y_avanza 				; A contiene un nº aleatorio (0-255). De 0 a 5 segundos, aproximadamente.
 655  8ACE CD 21 8C     	call Define_Clock_next_entity
 656  8AD1
 657  8AD1              ; -------------------------------------------------------------------------------------------------------------
 658  8AD1
 659  8AD1              ; Habilita disparos.
 660  8AD1
 661  8AD1              13
 662  8AD1
 663  8AD1              ;	ld hl,Disparo_Amadeus
 664  8AD1              ;	ld de,CLOCK_repone_disparo_Amadeus
 665  8AD1              ;	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 666  8AD1
 667  8AD1              ;	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 668  8AD1              ;	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 669  8AD1              ;	call Habilita_disparos
 670  8AD1
 671  8AD1              ; COLISIONES.
 672  8AD1
 673  8AD1              ;	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 674  8AD1
 675  8AD1              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 676  8AD1              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 677  8AD1              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 678  8AD1
 679  8AD1              ;	xor a
 680  8AD1              ;	ld (Impacto2),a										; Flag (Impacto2) a "0".
 681  8AD1
 682  8AD1              ;	call Inicia_punteros_de_cajas
 683  8AD1              ;12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 684  8AD1              ; 														; _ en DRAW.
 685  8AD1
 686  8AD1              ;	ld a,(Filas)
 687  8AD1              ;	and a
 688  8AD1              ;	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 689  8AD1              ;	call Incrementa_punteros_de_cajas
 690  8AD1              ;	jr 12B
 691  8AD1
 692  8AD1              ; ---------------------------------------------------------------------------------------
 693  8AD1
 694  8AD1              ;10 ld a,(Numero_parcial_de_entidades)
 695  8AD1              ;    ld b,a
 696  8AD1              ;	and a
 697  8AD1              ;	jr nz,11F
 698  8AD1
 699  8AD1              ;	ld hl,Ctrl_1;
 700  8AD1              ;	bit 4,(hl)
 701  8AD1              ;	jp nz,16F
 702  8AD1
 703  8AD1              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 704  8AD1
 705  8AD1              ;	ld hl,Ctrl_1
 706  8AD1              ;	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 707  8AD1
 708  8AD1              ;	ld a,(Contador_de_frames)
 709  8AD1              ;	inc a
 710  8AD1              ;	ld (Activa_recarga_cajas),a
 711  8AD1
 712  8AD1              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 713  8AD1
 714  8AD1 3A F9 89     11 ld a,(Entidades_en_curso)
 715  8AD4 A7           	and a
 716  8AD5 CA 36 8B     	jp z,Gestion_de_Amadeus								; Si no hay entidades en curso saltamos a [Avanza_puntero_de_Scanlines_album_de_entidades].
 717  8AD8 47           	ld b,a												; No hay entidades que gestionar.
 718  8AD9
 719  8AD9              ; ( Código que ejecutamos con cada entidad: ).
 720  8AD9
 721  8AD9              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 722  8AD9              ;
 723  8AD9              ;	Se produce MOVIMIENTO. Intercambio de Álbumes, (borrado-pintado).
 724  8AD9
 725  8AD9 21 CD 86     	ld hl,Tabla_de_pintado
 726  8ADC 22 13 8A     	ld (India_SP),hl
 727  8ADF
 728  8ADF 21 17 8A     	ld hl,Ctrl_3
 729  8AE2 CB D6        	set 2,(hl)
 730  8AE4 CD DA 8B     	call Change
 731  8AE7
 732  8AE7 C5           15 push bc 												; Nº de entidades en curso.
 733  8AE8
 734  8AE8 CD 36 8E     	call Restore_entidad								; Vuelca en la BANDEJA_DRAW la "Caja_de_Entidades" hacia la que apunta (Puntero_store_caja).
 735  8AEB ED 5B 11 8A  	ld de,(Scanlines_album_SP)
 736  8AEF
 737  8AEF              ; Datos de la entidad en curso en la bandeja DRAW y puntero (Scanlines_album_SP) en DE.
 738  8AEF
 739  8AEF              ; En 1er lugar, ... existe (Impacto) en esta entidad ???
 740  8AEF
 741  8AEF 3A B5 89     	ld a,(Impacto)
 742  8AF2 A7           	and a
 743  8AF3 28 0C        	jr z,8F
 744  8AF5
 745  8AF5              ; 5/7/24
 746  8AF5              ; Nota importante:
 747  8AF5              ; Dos entidades pueden chocar entre ellas en zona de Amadeus. La rutina [Detecta_colision_nave_entidad] comprobará si existe colisión con la última entidad gestionada, (colisionada) y _
 748  8AF5              ;	_en caso de no existir colisión pondrá su .db (Impacto) a "0" pero esa 1ª entidad "colisionada" seguirá manteniendo su .db (Impacto) a "1" por lo que para considerarse "colisión",_
 749  8AF5              ;	_es requisito imprescindible que Amadeus tenga su .db (Impacto) también a "1"; en caso contrario colocaremos el .db (Impacto) de la entidad a "0" para que se vuelva a gestionar.
 750  8AF5
 751  8AF5 3A 6A 87     	ld a,(Impacto_Amadeus)
 752  8AF8 A7           	and a
 753  8AF9 C4 5A 8F     	call nz,Genera_explosion
 754  8AFC 20 1B        	jr nz,Gestiona_siguiente_entidad
 755  8AFE
 756  8AFE              ; Falsa colisión !!!
 757  8AFE
 758  8AFE 32 B5 89     	ld (Impacto),a											; Colocamos el .db (Impacto) de la entidad en curso a "0".
 759  8B01
 760  8B01              ;19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 761  8B01              ;	set 1,(hl)
 762  8B01              ;	jr 7F
 763  8B01
 764  8B01              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 765  8B01              ; _con las coordenadas de la entidad almacenada en DRAW.
 766  8B01
 767  8B01              ;	ld a,(Ctrl_1)
 768  8B01              ;	bit 2,a
 769  8B01              ;	jr z,7F
 770  8B01
 771  8B01              ;	ld hl,(Coordenadas_disparo_certero)
 772  8B01              ;	ex de,hl 											; D contiene la coordenada_y del disparo.
 773  8B01              ;														; E contiene la coordenada_X del disparo.
 774  8B01              ;	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 775  8B01              ;														; H FILA, (Coordenada_y de la entidad).
 776  8B01              ;	and a
 777  8B01              ;	sbc hl,de
 778  8B01
 779  8B01              ;	call Determina_resultado_comparativa
 780  8B01
 781  8B01              ;	ld a,b
 782  8B01              ;	and a
 783  8B01              ;	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 784  8B01
 785  8B01              ; ----- ----- -----
 786  8B01
 787  8B01              ;	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 788  8B01              ;	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 789  8B01
 790  8B01              ;	ld hl,Ctrl_1
 791  8B01              ;	res 2,(hl)
 792  8B01
 793  8B01              ;7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 794  8B01
 795  8B01              ;	ld a,(Ctrl_0)
 796  8B01              ;	bit 4,a
 797  8B01              ;	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 798  8B01
 799  8B01              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 800  8B01              ; [[[
 801  8B01              ;	call Detecta_disparo_entidad
 802  8B01              ; ]]]
 803  8B01
 804  8B01              ;	dec a
 805  8B01              ;	ld (Impacto),a
 806  8B01
 807  8B01              ; Existe "Entidad_guía" ???.
 808  8B01              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 809  8B01
 810  8B01              ;	ld a,(Ctrl_3)
 811  8B01              ;	bit 1,a
 812  8B01              ;	jr nz,22F
 813  8B01
 814  8B01              ; Almacén de "Movimientos_masticados" lleno ???
 815  8B01              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 816  8B01              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 817  8B01
 818  8B01              ;;	ld a,(Ctrl_3)
 819  8B01              ;;	bit 3,a
 820  8B01              ;;	jr nz,22F
 821  8B01
 822  8B01              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 823  8B01
 824  8B01              ;	ld hl,Ctrl_2
 825  8B01              ;	set 5,(hl)
 826  8B01              ;	ld hl,Ctrl_3
 827  8B01              ;	set 1,(hl)
 828  8B01
 829  8B01              ; -------------------------------------------
 830  8B01
 831  8B01 CD 65 8C     8 call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
 832  8B04 CD BA 8B     	call Ajusta_velocidad_entidad								; Ajusta el perfil de velocidad de la entidad en función de (Contader_de_vueltas).
 833  8B07 CD 51 8D     	call Cargamos_registros_con_mov_masticado					; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 834  8B0A CD 41 AD     	call Genera_datos_de_impresion
 835  8B0D CD BD AB     	call Decrementa_Contador_de_mov_masticados
 836  8B10
 837  8B10              ; -------------------------------------------
 838  8B10
 839  8B10              ;	Generamos las coordenadas de la entidad que hemos iniciado o desplazado.
 840  8B10
 841  8B10 2A B6 89     	ld hl,(Puntero_de_impresion)
 842  8B13 CD EE AC     	call Genera_coordenadas
 843  8B16
 844  8B16 CD 4E 9A     	call Colision_Entidad_Amadeus								; Si hay posibilidad de COLISION, set 2,(Impacto2) y (Impacto) de entidad en curso a "1".
 845  8B19
 846  8B19              ;	ld hl,Ctrl_0
 847  8B19              ; 	res 4,(hl)													; Inicializamos el FLAG de movimiento de la entidad.
 848  8B19
 849  8B19              Gestiona_siguiente_entidad
 850  8B19
 851  8B19 CD 8F AB      	call Store_Restore_cajas
 852  8B1C C1           	pop bc
 853  8B1D 10 C8        	djnz 15B
 854  8B1F
 855  8B1F              ; Hemos gestionado todas las entidades.
 856  8B1F
 857  8B1F CD 75 8C     	call Inicializa_India_y_limpia_Tabla_de_impresion 			; Inicializa el puntero (India_SP) y sanea la (Tabla_para_ordenar_entidades_antes_de_pintar).
 858  8B22 CD 8C 8C     	call Ordena_tabla_de_impresion
 859  8B25 CD D7 8D     	call Inicia_punteros_de_cajas 								; Hemos terminado de mover todas las entidades. Nos situamos al principio del índice de entidades.
 860  8B28
 861  8B28              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 862  8B28              ; Hemos gestionado todas las unidades.
 863  8B28              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 864  8B28
 865  8B28              ;	ld hl,Ctrl_1
 866  8B28              ;	res 2,(hl)
 867  8B28
 868  8B28 CD 36 8C     	call Borra_diferencia
 869  8B2B
 870  8B2B 3A 17 8A     	ld a,(Ctrl_3)
 871  8B2E CB 5F        	bit 3,a
 872  8B30 20 04        	jr nz,Gestion_de_Amadeus
 873  8B32
 874  8B32 EB           	ex de,hl
 875  8B33 71           	ld (hl),c
 876  8B34 2C           	inc l
 877  8B35 70           	ld (hl),b																; Nuevo techo, mayor que el anterior.
 878  8B36
 879  8B36
 880  8B36              ;! GESTIONA AMADEUS !!!!!!!!!!
 881  8B36
 882  8B36              Gestion_de_Amadeus
 883  8B36
 884  8B36 21 17 8A     	ld hl,Ctrl_3
 885  8B39 CB 76        	bit 6,(hl)
 886  8B3B 28 13        	jr z,Amadeus_vivo
 887  8B3D
 888  8B3D              ; Amadeus ha sido destruido.
 889  8B3D              ; Decrementa (Temp_new_live).
 890  8B3D
 891  8B3D 21 28 8A     	ld hl,Temp_new_live
 892  8B40 35           	dec (hl)
 893  8B41 20 26        	jr nz,End_frame
 894  8B43
 895  8B43              ; Una vida menos. Reinicia Amadeus, reinicia Shield. (aparece nueva nave).
 896  8B43
 897  8B43 21 3D 8A     	ld hl,Lives
 898  8B46 35           	dec (hl)
 899  8B47
 900  8B47              ;! Fin del juego
 901  8B47
 902  8B47 F3           	di
 903  8B48 28 FE        	jr z,$
 904  8B4A FB           	ei
 905  8B4B
 906  8B4B              ; Nueva nave.
 907  8B4B
 908  8B4B CD 80 8B     	call Reinicia_Amadeus
 909  8B4E 18 19        	jr End_frame
 910  8B50
 911  8B50              ; Hay Impacto???, Existe movimiento???, Disparamos???, Pausamos el juego???
 912  8B50
 913  8B50              Amadeus_vivo
 914  8B50
 915  8B50 3A 6A 87     	ld a,(Impacto_Amadeus)
 916  8B53 A7           	and a
 917  8B54 C4 8A 8F     	call nz, Genera_explosion_Amadeus
 918  8B57 20 10        	jr nz, End_frame
 919  8B59
 920  8B59 CD 23 8F     	call Teclado
 921  8B5C
 922  8B5C 21 17 8A     	ld hl,Ctrl_3
 923  8B5F CB 6E        	bit 5,(hl)
 924  8B61 28 06        	jr z,End_frame
 925  8B63
 926  8B63              ; Existe movimiento de Amadeus, Cambiamos álbum borrado-pintado y generamos los datos de impresión.
 927  8B63
 928  8B63 CD F5 8B     	call Change_Amadeus
 929  8B66 CD 98 8D     	call Genera_datos_de_impresion_Amadeus
 930  8B69
 931  8B69              End_frame
 932  8B69
 933  8B69 2A 04 8A     	ld hl,(Album_de_borrado)
 934  8B6C 22 11 8A     	ld (Scanlines_album_SP),hl
 935  8B6F
 936  8B6F 21 17 8A     	ld hl,Ctrl_3
 937  8B72 CB C6        	set 0,(hl) 											; Indica Frame completo.
 938  8B74 CB 9E        	res 3,(hl)
 939  8B76 CB A6        	res 4,(hl)
 940  8B78
 941  8B78 AF           	xor a
 942  8B79 D3 FE        	out ($fe),a
 943  8B7B
 944  8B7B 76           	halt
 945  8B7C
 946  8B7C              ; ----------------------------------------
 947  8B7C
 948  8B7C              ;	ld a,(Ctrl_1) 										; Existe Loop?
 949  8B7C              ;	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 950  8B7C CA AC 8A     	jp z,Main
 951  8B7F
 952  8B7F              ; RECARGA DE NUEVA OLEADA.
 953  8B7F
 954  8B7F              ;	ld a,(Contador_de_frames)
 955  8B7F              ;	ld b,a
 956  8B7F              ;	ld a,(Activa_recarga_cajas)
 957  8B7F              ;	cp b
 958  8B7F              ;	jr z,20F
 959  8B7F
 960  8B7F              ;	ld hl,Ctrl_1
 961  8B7F              ;	set 4,(hl)
 962  8B7F              ;	jp Main
 963  8B7F
 964  8B7F              ;20 ld hl,Ctrl_1
 965  8B7F              ;	res 4,(hl)
 966  8B7F
 967  8B7F              ;	ld a,(Contador_de_frames)
 968  8B7F
 969  8B7F              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 970  8B7F              ;! _ IMPREDECIBLE !!!!
 971  8B7F
 972  8B7F              ;	add 10
 973  8B7F              ;	ld (Clock_next_entity),a
 974  8B7F
 975  8B7F              ;	jp 4B
 976  8B7F
 977  8B7F C9           	ret
 978  8B80
 979  8B80              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 980  8B80              ;
 981  8B80              ;	16/11/23
 982  8B80
 983  8B80              ;;Gestiona_Amadeus
 984  8B80
 985  8B80              ;! Activa/desactiva impacto con Amadeus.
 986  8B80
 987  8B80              ;	ld a,(Impacto)
 988  8B80              ;	and a
 989  8B80              ;	jr nz,2F
 990  8B80
 991  8B80              ;;	call Mov_Amadeus
 992  8B80
 993  8B80              ;;2 ld a,(Ctrl_0)
 994  8B80              ;;	bit 4,a
 995  8B80              ;;	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 996  8B80
 997  8B80              ;;	call Guarda_foto_entidad_a_pintar
 998  8B80              ;;	call Guarda_datos_de_borrado_Amadeus
 999  8B80
1000  8B80              ;;1 ld hl,Ctrl_0
1001  8B80              ;;    res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
1002  8B80
1003  8B80              ;;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
1004  8B80
1005  8B80              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
1006  8B80
1007  8B80              ;	call Calcula_numero_de_disparotes
1008  8B80
1009  8B80              ;;	ret
1010  8B80
1011  8B80              ; -----------------------------
1012  8B80              ;
1013  8B80              ;	Prepara los registros HL' y B para ejecutar la rutina Borra_sprites.
1014  8B80              ;
1015  8B80              ;	INPUTS: B a de estar a "0".
1016  8B80
1017  8B80              ;Prepara_Borra_sprites
1018  8B80
1019  8B80              ;	ld hl,(Puntero_de_scanlines_masticados_a_borrar)
1020  8B80              ;	ld a,l
1021  8B80              ;	ret z
1022  8B80
1023  8B80              ;	srl a
1024  8B80
1025  8B80              ;2 sub 16
1026  8B80              ;	jr z,1F
1027  8B80              ;	inc b
1028  8B80              ;	jr 2B
1029  8B80
1030  8B80              ;1 inc b
1031  8B80
1032  8B80              ;	exx
1033  8B80              ;	ld hl,Semaforo_de_rutinas_de_impresion_utilizadas
1034  8B80              ;	exx
1035  8B80
1036  8B80              ;	ld hl,Almacen_de_scanlines_masticados_a_borrar
1037  8B80              ;	ld (Puntero_de_scanlines_masticados_a_borrar),hl
1038  8B80
1039  8B80              ;	ret
1040  8B80
1041  8B80              ; --------------------------------------------------------------------------------------------------------------
1042  8B80              ;
1043  8B80              ;	15/12/23
1044  8B80
1045  8B80              ;Mov_obj
1046  8B80
1047  8B80              ;	ld a,(Ctrl_2)
1048  8B80              ;	bit 1,a
1049  8B80              ;	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
1050  8B80
1051  8B80              ; Explosión:
1052  8B80
1053  8B80              ;	ld a,(Frames_explosion)
1054  8B80              ;	and a
1055  8B80              ;	jr nz,4F
1056  8B80
1057  8B80              ;!  Una alimaña menos!!!!!!!!!1
1058  8B80
1059  8B80              ; Se trataba de una Entidad_guía ???
1060  8B80
1061  8B80              ;	ld a,(Ctrl_2)
1062  8B80              ;	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
1063  8B80              ;	jr z,5F
1064  8B80
1065  8B80              ;	ld hl,Ctrl_3
1066  8B80              ;	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
1067  8B80
1068  8B80              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
1069  8B80              ;!! _generado puede ser distinto, (aletoriedad).
1070  8B80
1071  8B80              ;5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
1072  8B80              ;	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
1073  8B80              ;	dec (hl)
1074  8B80              ;	ld hl,Entidades_en_curso
1075  8B80              ;	dec (hl)
1076  8B80              ;	ld hl,Numero_de_entidades
1077  8B80              ;	dec (hl)
1078  8B80              ;	jr 3F
1079  8B80
1080  8B80              ; -----
1081  8B80
1082  8B80              ;	`Movemos´ la explosión.
1083  8B80
1084  8B80              ;4 ld hl,(Puntero_DESPLZ_der)
1085  8B80              ;	inc hl
1086  8B80              ;	inc hl
1087  8B80              ;	call Extrae_address
1088  8B80              ;;	ld (Puntero_objeto),hl
1089  8B80
1090  8B80              ;;	ld hl,Frames_explosion
1091  8B80              ;;	dec (hl)
1092  8B80
1093  8B80              ;;	ld hl,Ctrl_0
1094  8B80              ;;	set 4,(hl);;
1095  8B80
1096  8B80              ;;	jr 3F
1097  8B80
1098  8B80              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
1099  8B80
1100  8B80              ;2 xor a
1101  8B80              ;	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
1102  8B80
1103  8B80              ; Movemos Entidades malignas.
1104  8B80              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
1105  8B80
1106  8B80              ;	ld a,(Ctrl_2)
1107  8B80              ;	bit 5,a
1108  8B80              ;	jr nz,8F
1109  8B80
1110  8B80              ;	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
1111  8B80              ;	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
1112  8B80              ;	jr 7F
1113  8B80
1114  8B80              ;8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
1115  8B80
1116  8B80              ;	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
1117  8B80              ;	bit 4,a
1118  8B80              ;	ret z
1119  8B80
1120  8B80              ; Ha habido desplazamiento de la entidad maligna.
1121  8B80              ; Ha llegado a zona de AMADEUS ???
1122  8B80
1123  8B80              ;7 ld a,(Coordenada_y)
1124  8B80              ;	cp $14
1125  8B80              ;	jr c,1F
1126  8B80
1127  8B80              ; ---------
1128  8B80
1129  8B80              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
1130  8B80              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
1131  8B80
1132  8B80              ;	di
1133  8B80              ;	call Genera_coordenadas_X
1134  8B80              ;	call Compara_coordenadas_X
1135  8B80              ;	ei
1136  8B80
1137  8B80              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
1138  8B80
1139  8B80              ; ---------
1140  8B80
1141  8B80              ;1 call Prepara_var_pintado	 			                		; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
1142  8B80              ;	call Repone_datos_de_borrado 								; ! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Scanlines_album.
1143  8B80              ;	call Limpia_Variables_de_borrado
1144  8B80
1145  8B80              ;3 ret
1146  8B80
1147  8B80              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
1148  8B80              ;
1149  8B80              ;	24/07/24
1150  8B80
1151  8B80              Reinicia_Amadeus
1152  8B80
1153  8B80              ;	Reinicia posición y estado.
1154  8B80
1155  8B80 21 CF 50     	ld hl,$50cf
1156  8B83 22 6B 87     	ld (p.imp.amadeus),hl
1157  8B86 21 F0 E0     	ld hl,$e0f0
1158  8B89 22 6D 87     	ld (Pamm_Amadeus),hl
1159  8B8C 21 3D 00     	ld hl,$003d
1160  8B8F 22 6F 87     	ld (Comm_Amadeus),hl
1161  8B92
1162  8B92              ;	limpiamos el álbum de borrado.
1163  8B92
1164  8B92 2A 08 8A     	ld hl,(Album_de_borrado_Amadeus)
1165  8B95
1166  8B95 AF           	xor a
1167  8B96 77           	ld (hl),a
1168  8B97
1169  8B97 E5           	push hl
1170  8B98 D1           	pop de
1171  8B99 13           	inc de
1172  8B9A
1173  8B9A 01 23 00     	ld bc,35
1174  8B9D ED B0        	ldir
1175  8B9F
1176  8B9F CD 98 8D     	call Genera_datos_de_impresion_Amadeus
1177  8BA2
1178  8BA2              ;	Reinicia temporizaciones.
1179  8BA2
1180  8BA2 CD 69 8E     	call Inicia_Shield
1181  8BA5
1182  8BA5 3E 5A        	ld a,90
1183  8BA7 32 3A 8A     	ld (Shield),a
1184  8BAA
1185  8BAA 3E 64        	ld a,100
1186  8BAC 32 28 8A     	ld (Temp_new_live),a
1187  8BAF
1188  8BAF              ; 	Restauramos el FLAG: Amadeus vivo.
1189  8BAF
1190  8BAF 21 17 8A     	ld hl,Ctrl_3
1191  8BB2 CB B6        	res 6,(hl)
1192  8BB4
1193  8BB4              ;	Fuerza la impresión de la nave en el siguiente frame.
1194  8BB4
1195  8BB4 21 17 8A      	ld hl,Ctrl_3
1196  8BB7 CB EE        	set 5,(hl)
1197  8BB9
1198  8BB9 C9           	ret
1199  8BBA
1200  8BBA              ; --------------------------------------------------------------------------------------------------------------
1201  8BBA              ;
1202  8BBA              ;	12/05/24
1203  8BBA
1204  8BBA 3A BC 89     Ajusta_velocidad_entidad ld a,(Velocidad)
1205  8BBD CB 27        	sla a
1206  8BBF 32 BC 89     	ld (Velocidad),a
1207  8BC2 E6 10        	and $10
1208  8BC4 C8           	ret z
1209  8BC5
1210  8BC5              ; Restaura (Velocidad) a razón del nº de vueltas.
1211  8BC5
1212  8BC5 3A B4 89     	ld a,(Contador_de_vueltas)
1213  8BC8 CB 2F        	sra a
1214  8BCA CB 2F        	sra a
1215  8BCC 32 BC 89     	ld (Velocidad),a
1216  8BCF
1217  8BCF 2A B8 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1218  8BD2 23           	inc hl
1219  8BD3 23           	inc hl
1220  8BD4 23           	inc hl
1221  8BD5 23           	inc hl
1222  8BD6 22 B8 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1223  8BD9
1224  8BD9 C9           	ret
1225  8BDA
1226  8BDA              ; --------------------------------------------------------------------------------------------------------------
1227  8BDA              ;
1228  8BDA              ;	18/06/24
1229  8BDA
1230  8BDA              Change
1231  8BDA
1232  8BDA 3A 0E 8A     	ld a,(Switch)
1233  8BDD EE 01        	xor 1
1234  8BDF 32 0E 8A     	ld (Switch),a
1235  8BE2 2A 02 8A     	ld hl,(Album_de_pintado)
1236  8BE5 ED 5B 04 8A  	ld de,(Album_de_borrado)
1237  8BE9 EB           	ex de,hl
1238  8BEA 22 02 8A     	ld (Album_de_pintado),hl
1239  8BED 22 11 8A     	ld (Scanlines_album_SP),hl
1240  8BF0 ED 53 04 8A  	ld (Album_de_borrado),de
1241  8BF4 C9           	ret
1242  8BF5
1243  8BF5              Change_Amadeus
1244  8BF5
1245  8BF5 2A 06 8A     	ld hl,(Album_de_pintado_Amadeus)
1246  8BF8 ED 5B 08 8A  	ld de,(Album_de_borrado_Amadeus)
1247  8BFC EB           	ex de,hl
1248  8BFD 22 06 8A     	ld (Album_de_pintado_Amadeus),hl
1249  8C00 ED 53 08 8A  	ld (Album_de_borrado_Amadeus),de
1250  8C04 C9           	ret
1251  8C05
1252  8C05              ; ------------------------------------
1253  8C05              ;
1254  8C05              ; 1/05/24
1255  8C05
1256  8C05              ; Fija en A un nº aleatorio comprendido entre 0-255 y desplaza el puntero (RND_SP) al siguiente nº.
1257  8C05              ; Si el puntero está situado en el último nº, lo volvemos a situar al principio.
1258  8C05
1259  8C05              ;	DESTRUYE: HL,DE,A
1260  8C05              ;	OUTPUTS: A contiene un Nº aleatorio. Actualizamos (RND_SP).
1261  8C05
1262  8C05              ;	Variables implicadas: (RND_SP).
1263  8C05
1264  8C05              Extrae_numero_aleatorio_y_avanza
1265  8C05
1266  8C05 21 CD 86     	ld hl,Tabla_de_pintado
1267  8C08 EB           	ex de,hl
1268  8C09 2A 29 8A     	ld hl,(RND_SP)
1269  8C0C EB           	ex de,hl
1270  8C0D A7           	and a
1271  8C0E ED 52        	sbc hl,de
1272  8C10
1273  8C10 2A 29 8A     	ld hl,(RND_SP)
1274  8C13 20 06        	jr nz,1F
1275  8C15
1276  8C15              ; Sitúa HL al principio de la tabla de nº aleatorios.
1277  8C15
1278  8C15 21 C6 86     	ld hl,Numeros_aleatorios
1279  8C18 22 29 8A     	ld (RND_SP),HL
1280  8C1B
1281  8C1B              ; Coloca el nº aleatorio en A y mueve el puntero al siguiente nº.
1282  8C1B
1283  8C1B 7E           1 ld a,(hl)
1284  8C1C 23           	inc hl
1285  8C1D 22 29 8A     	ld (RND_SP),hl
1286  8C20 C9           	ret
1287  8C21
1288  8C21              ; ------------------------------------
1289  8C21              ;
1290  8C21              ; 1/05/24
1291  8C21
1292  8C21              ; Hacemos que el nº contenido en el registro A tenga un valor comprendido entre ($32 y $c8).
1293  8C21              ; (1 a 4 segundos).
1294  8C21              ; Actualizamos (Clock_next_entity) con A.
1295  8C21
1296  8C21              ;	DESTRUYE: A y B.
1297  8C21              ;	OUTPUTS: A contiene un Nº aleatorio comprendido entre ($32 y $c8).
1298  8C21              ;			 Actualiza (Clock_next_entity) con A.
1299  8C21
1300  8C21              ;	Variables implicadas: (Clock_next_entity).
1301  8C21
1302  8C21              ; Notas:
1303  8C21
1304  8C21              ; 	$32 1 seg.
1305  8C21              ; 	$64 2 seg.
1306  8C21              ; 	$96 3 seg.
1307  8C21              ; 	$c8 4 seg.
1308  8C21              ; 	$fa 5 seg.
1309  8C21
1310  8C21              ; $ffff 1310,7 seg, 22 minutos.
1311  8C21
1312  8C21              ;	$0100  5 seg. aproximadamente.
1313  8C21              ;	$0200 10 seg. aproximadamente.
1314  8C21              ;	$0300 15 seg. aproximadamente.
1315  8C21              ;	$0400 20 seg. aproximadamente.
1316  8C21              ;	$0500 25 seg. aproximadamente.
1317  8C21              ;	$0600 30 seg. aproximadamente.
1318  8C21
1319  8C21              Define_Clock_next_entity
1320  8C21
1321  8C21 FE 34        	cp $34
1322  8C23 38 0D        	jr c,1F  						; nº demasiado bajo, < 1 seg.
1323  8C25
1324  8C25              ; En función de los minutos que llevemos de juego las entidades irán apareciendo más lentamente.
1325  8C25
1326  8C25 4F           3 ld c,a
1327  8C26 06 00        	ld b,0							; BC contendrá un valor entre 5-10 segundos.
1328  8C28 2A 78 5C     	ld hl,(FRAMES)
1329  8C2B A7           	and a
1330  8C2C ED 4A        	adc hl,bc
1331  8C2E 22 2B 8A     	ld (Clock_next_entity),hl  		; Actualizamos variable.
1332  8C31 C9           	ret
1333  8C32
1334  8C32 3E 34        1 ld a,$34
1335  8C34 18 EF        	jr 3B
1336  8C36
1337  8C36              ; ------------------------------------
1338  8C36              ;
1339  8C36              ; 18/03/24
1340  8C36
1341  8C36              Borra_diferencia
1342  8C36
1343  8C36 ED 4B 11 8A  	ld bc,(Scanlines_album_SP)
1344  8C3A
1345  8C3A 3A 0E 8A     	ld a,(Switch)
1346  8C3D A7           	and a
1347  8C3E 28 08        	jr z,2F
1348  8C40
1349  8C40 2A 0C 8A     	ld hl,(Techo_Scanlines_album_2)
1350  8C43 11 0C 8A     	ld de,Techo_Scanlines_album_2
1351  8C46 18 06        	jr 3F
1352  8C48
1353  8C48 2A 0A 8A     2 ld hl,(Techo_Scanlines_album)
1354  8C4B 11 0A 8A     	ld de,Techo_Scanlines_album
1355  8C4E
1356  8C4E              ; Diferencia.
1357  8C4E
1358  8C4E ED 42        3 sbc hl,bc
1359  8C50
1360  8C50 C8           	ret z
1361  8C51 D8           	ret c
1362  8C52
1363  8C52              ; Nuevo techo, (más bajo que el anterior).
1364  8C52              ; Fijamos nuevo techo y borramos bytes sobrantes.
1365  8C52
1366  8C52 EB           	ex de,hl
1367  8C53
1368  8C53 71           	ld (hl),c
1369  8C54 2C           	inc l
1370  8C55 70           	ld (hl),b
1371  8C56
1372  8C56 AF           	xor a
1373  8C57 43           	ld b,e
1374  8C58
1375  8C58 2A 11 8A     	ld hl,(Scanlines_album_SP)
1376  8C5B
1377  8C5B 77           1 ld (hl),a
1378  8C5C 23           	inc hl
1379  8C5D 10 FC        	djnz 1B
1380  8C5F
1381  8C5F              ; Indicamos que tenemos nuevo techo más bajo con el FLAG:
1382  8C5F
1383  8C5F 21 17 8A     	ld hl,Ctrl_3
1384  8C62 CB DE        	set 3,(hl)
1385  8C64
1386  8C64 C9           	ret
1387  8C65
1388  8C65              ; --------------------------------------------------------------------------------------------------------------
1389  8C65              ;
1390  8C65              ;	26/3/24
1391  8C65
1392  8C65              Recauda_informacion_de_entidad_en_curso
1393  8C65
1394  8C65              ; Almacena la Coordenada Y de la entidad en curso.
1395  8C65
1396  8C65              ; El 1er .db de la tabla almacena (Columna_Y) de la entidad en curso.
1397  8C65
1398  8C65 3A B3 89     	ld a,(Coordenada_y)
1399  8C68 2A 13 8A     	ld hl,(India_SP)
1400  8C6B 77           	ld (hl),a
1401  8C6C 2C           	inc l
1402  8C6D
1403  8C6D              ; Almacena la dirección de memoria, (dentro del album de scanlines), de la entidad en curso.
1404  8C6D
1405  8C6D              ;	ld de,(Scanlines_album_SP)
1406  8C6D
1407  8C6D 73           	ld (hl),e
1408  8C6E 2C           	inc l
1409  8C6F 72           	ld (hl),d
1410  8C70 2C           	inc l
1411  8C71
1412  8C71 22 13 8A     	ld (India_SP),hl
1413  8C74
1414  8C74 C9           	ret
1415  8C75
1416  8C75              ; --------------------------------------------------------------------------------------------------------------
1417  8C75              ;
1418  8C75              ;	27/03/24
1419  8C75              ;
1420  8C75
1421  8C75              Inicializa_India_y_limpia_Tabla_de_impresion
1422  8C75
1423  8C75 2A 13 8A     	ld hl,(India_SP)
1424  8C78 01 E5 86     	ld bc,Tabla_de_pintado+24							; Bytes de (Tabla_de_pintado)-1.
1425  8C7B
1426  8C7B 79           	ld a,c
1427  8C7C 95           	sub l
1428  8C7D 28 06        	jr z,2F
1429  8C7F 47           	ld b,a												; Nº de bytes a limpiar de la tabla. Si la Tabla está completa, omitimos limpiar_
1430  8C80              ;														; _ y pasamos a inicializar (India_SP).
1431  8C80 AF           	xor a
1432  8C81
1433  8C81 77           1 ld (hl),a
1434  8C82 2C           	inc l
1435  8C83 10 FC        	djnz 1B												; Limpia Tabla.
1436  8C85
1437  8C85 21 CD 86     2 ld hl,Tabla_de_pintado								; Inicializa (India_SP).
1438  8C88 22 13 8A     	ld (India_SP),hl
1439  8C8B
1440  8C8B C9           	ret
1441  8C8C
1442  8C8C              ; --------------------------------------------------------------------------------------------------------------
1443  8C8C              ;
1444  8C8C              ;	31/3/24
1445  8C8C
1446  8C8C              Ordena_tabla_de_impresion
1447  8C8C
1448  8C8C              ; 5794 T/states.
1449  8C8C              ; 6278 T/states.
1450  8C8C              ; 5310 T/states.
1451  8C8C
1452  8C8C              ; Inicializamos punteros (India_SP) e (India_2_SP).
1453  8C8C              ; Inicializamos contador de comparaciones, [C].
1454  8C8C              ; Cargamos los registros A y B para efectuar comparación.
1455  8C8C
1456  8C8C FD 2E 00     	ld iyl,0
1457  8C8F
1458  8C8F 3A F9 89     	ld a,(Entidades_en_curso)
1459  8C92 FE 04        	cp 4 	;	4
1460  8C94 D8           	ret c 										; Tiene que haber 4 (Entidades_en_curso) en pantalla para poder ejecutar esta rutina.
1461  8C95
1462  8C95 3D           	dec a
1463  8C96 4F           	ld c,a 										; (Entidades_en_curso)-1 en C. Puede haber menos de 7 ebtidades.
1464  8C97 51           	ld d,c 										; Copia de respaldo.
1465  8C98
1466  8C98 7E           	ld a,(hl)									; Nº de Fila de la 1ª entidad, (1er byte de la tabla).
1467  8C99
1468  8C99 21 D0 86     	ld hl,Tabla_de_pintado+3
1469  8C9C 46           	ld b,(hl)
1470  8C9D 22 15 8A     	ld (India_2_SP),hl
1471  8CA0
1472  8CA0 B8           1 cp b  				 						; Compara filas, (entidad X & entidad X).
1473  8CA1 DC C9 8C     	call c, Avanza_India_2_SP
1474  8CA4 CC C9 8C     	call z, Avanza_India_2_SP
1475  8CA7
1476  8CA7 FD 2D        	dec iyl
1477  8CA9 28 18        	jr z,2F
1478  8CAB
1479  8CAB
1480  8CAB              ; --------------------------------------------------------------------------------------------------------------
1481  8CAB              ;
1482  8CAB              ;	7/4/24
1483  8CAB
1484  8CAB              Trueque
1485  8CAB
1486  8CAB              ; INPUTS:   B contiene el nº de fila de (India_2_SP).
1487  8CAB              ;  			A contiene en nº de fila de (India_SP).
1488  8CAB              ;			HL contiene (India_2_SP).
1489  8CAB
1490  8CAB D5           	push de 									; Preservo DE pues D contiene una copia de respaldo.
1491  8CAC E5           	push hl										; Preservo (India_2_SP).
1492  8CAD
1493  8CAD ED 5B 13 8A  	ld de,(India_SP)
1494  8CB1 EB           	ex de,hl
1495  8CB2 70           	ld (hl),b
1496  8CB3 12           	ld (de),a									; (Flia) de (India_SP) ---- NTERCAMBIADA ---- (Flia) de (India_2_SP).
1497  8CB4
1498  8CB4 CD F5 8C     	call Intercambia_1_byte
1499  8CB7 CD F5 8C     	call Intercambia_1_byte
1500  8CBA
1501  8CBA
1502  8CBA              ; Volvemos a iniciar A. Vuelve a contener `el nuevo contenido, (Fila), de (India_SP).
1503  8CBA              ; Recuperamos (India_2_SP) en HL.
1504  8CBA
1505  8CBA 2A 13 8A     	ld hl,(India_SP)
1506  8CBD 7E           	ld a,(hl)
1507  8CBE
1508  8CBE E1           	pop hl
1509  8CBF D1           	pop de
1510  8CC0
1511  8CC0              ; --------------------------------------------------------------------------------------------------------------
1512  8CC0
1513  8CC0 CD C9 8C     	call Avanza_India_2_SP
1514  8CC3
1515  8CC3 14           2 inc d
1516  8CC4 15           	dec d
1517  8CC5 C8           	ret z 										; Todas las (Entidades_en_curso) ordenadas.
1518  8CC6 18 D8        	jr 1B
1519  8CC8
1520  8CC8 C9           	ret
1521  8CC9
1522  8CC9              ; ----- ----- ----- ----- -----
1523  8CC9
1524  8CC9              Avanza_India_2_SP
1525  8CC9
1526  8CC9 0D           	dec c
1527  8CCA 28 0A        	jr z,Avanza_punteros_indios
1528  8CCC
1529  8CCC FD 2C        	inc iyl
1530  8CCE
1531  8CCE 2C           	inc l
1532  8CCF 2C           	inc l
1533  8CD0 2C           	inc l
1534  8CD1
1535  8CD1 46           	ld b,(hl)
1536  8CD2 22 15 8A     	ld (India_2_SP),hl 							; Siguiente entidad en la Tabla.
1537  8CD5
1538  8CD5 C9           	ret
1539  8CD6
1540  8CD6              ; ----- ----- ----- ----- -----
1541  8CD6
1542  8CD6              Avanza_punteros_indios
1543  8CD6
1544  8CD6 15           	dec d
1545  8CD7 28 15        	jr z,Prepara_salida
1546  8CD9
1547  8CD9 4A           	ld c,d
1548  8CDA
1549  8CDA 2A 13 8A     	ld hl,(India_SP)
1550  8CDD 2C           	inc l
1551  8CDE 2C           	inc l
1552  8CDF 2C           	inc l
1553  8CE0 7E           	ld a,(hl)
1554  8CE1 22 13 8A     	ld (India_SP),hl
1555  8CE4
1556  8CE4 2C           	inc l
1557  8CE5 2C           	inc l
1558  8CE6 2C           	inc l
1559  8CE7 46           	ld b,(hl)
1560  8CE8 22 15 8A     	ld (India_2_SP),hl
1561  8CEB
1562  8CEB FD 2C        	inc iyl
1563  8CED
1564  8CED C9           	ret
1565  8CEE
1566  8CEE              Prepara_salida
1567  8CEE
1568  8CEE 21 CD 86     	ld hl,Tabla_de_pintado
1569  8CF1 22 13 8A     	ld (India_SP),hl
1570  8CF4 C9           	ret
1571  8CF5
1572  8CF5
1573  8CF5 2C           Intercambia_1_byte inc l
1574  8CF6 1C           	inc e
1575  8CF7 46           	ld b,(hl)
1576  8CF8 1A           	ld a,(de)
1577  8CF9 EB           	ex de,hl
1578  8CFA 70           	ld (hl),b
1579  8CFB 12           	ld (de),a												; Byte de menor peso de las dos direcciones de memoria, ----- INTERCAMBIADAS -----.
1580  8CFC C9           	ret
1581  8CFD
1582  8CFD              ; -----------------------------------------------------------------------------------
1583  8CFD              ;
1584  8CFD              ;	20/01/24
1585  8CFD              ;
1586  8CFD              ;
1587  8CFD
1588  8CFD              Construye_movimientos_masticados_entidad
1589  8CFD
1590  8CFD 2A B8 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
1591  8D00 E5           	push hl
1592  8D01 CD 44 8D     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1593  8D04              ;															; _ el (Contador_de_mov_masticados).
1594  8D04 CD 01 8E     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1595  8D07              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
1596  8D07 CD 0C 95     	call Recompone_posicion_inicio
1597  8D0A
1598  8D0A CD 3C 92     1 call Draw
1599  8D0D CD 29 8D     	call Guarda_movimiento_masticado
1600  8D10
1601  8D10 CD B9 98     	call Movimiento
1602  8D13
1603  8D13 3A 17 8A     	ld a,(Ctrl_3)											; El bit1 de (Ctrl_3) a "1" indica que hemos completado todo el patrón de movimiento_
1604  8D16 CB 4F        	bit 1,a 												; _ que corresponde a esta entidad.
1605  8D18 28 F0        	jr z,1B
1606  8D1A
1607  8D1A              ;	Hemos completado el almacén de movimientos masticados de la entidad.
1608  8D1A              ;	Reinicializamos (Puntero_de_almacen_de_mov_masticados).
1609  8D1A
1610  8D1A E1           	pop hl 													; Recuperamos la dirección inicial de (Puntero_de_almacen_de_mov_masticados).
1611  8D1B 22 B8 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1612  8D1E
1613  8D1E              ; Guardamos el nº total de movimientos masticados de esta entidad en su (Contador_general_de_mov_masticados).
1614  8D1E
1615  8D1E CD 1D 9A     	call Situa_en_contador_general_de_mov_masticados
1616  8D21
1617  8D21              ; HL apunta al 1er byte del (Contador_general_de_mov_masticados) de esta entidad.
1618  8D21              ; Guardamos (Contador_de_mov_masticados) en el (Contador_general_de_mov_masticados) de esta entidad.
1619  8D21
1620  8D21 ED 4B BA 89  	ld bc,(Contador_de_mov_masticados)
1621  8D25
1622  8D25 71           	ld (hl),c
1623  8D26 23           	inc hl
1624  8D27 70           	ld (hl),b
1625  8D28
1626  8D28 C9           	ret
1627  8D29
1628  8D29              ; -----------------------------------------------------------------------------------
1629  8D29              ;
1630  8D29              ;	28/12/23
1631  8D29              ;
1632  8D29              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados} de la entidad.
1633  8D29              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
1634  8D29
1635  8D29              Guarda_movimiento_masticado
1636  8D29
1637  8D29 ED 73 FE 89  	ld (Stack),sp
1638  8D2D ED 7B B8 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
1639  8D31
1640  8D31 DD E5            push ix 												; Pushea el Puntero_de_impresión, (1er scanline).
1641  8D33 FD E5            push iy 												; Pushea Puntero_objeto.
1642  8D35
1643  8D35 ED 7B FE 89      ld sp,(Stack)
1644  8D39
1645  8D39 2A BA 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
1646  8D3C 23           	inc hl
1647  8D3D 22 BA 89     	ld (Contador_de_mov_masticados),hl
1648  8D40
1649  8D40 CD 44 8D         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1650  8D43              ;															; _ el (Contador_de_mov_masticados).
1651  8D43 C9               ret
1652  8D44
1653  8D44              ; --------------------------------------------------------------------------------------------------------------
1654  8D44              ;
1655  8D44              ;	12/1/24
1656  8D44              ;
1657  8D44              ;	INPUTS: HL a de contener (Puntero_de_almacen_de_mov_masticados).
1658  8D44
1659  8D44              Actualiza_Puntero_de_almacen_de_mov_masticados
1660  8D44
1661  8D44 2A B8 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1662  8D47 01 04 00     	ld bc,4
1663  8D4A A7           	and a
1664  8D4B ED 4A        	adc hl,bc
1665  8D4D 22 B8 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1666  8D50 C9           	ret
1667  8D51
1668  8D51              ; --------------------------------------------------------------------------------------------------------------
1669  8D51              ;
1670  8D51              ;	24/03/24
1671  8D51              ;
1672  8D51              ;	Cargamos los registros DE e IX y actualizamos (Puntero_de_almacen_de_mov_masticados).
1673  8D51              ;
1674  8D51              ;	IX contiene el puntero de impresión.
1675  8D51              ;	DE contiene (Puntero_objeto).
1676  8D51
1677  8D51
1678  8D51              Cargamos_registros_con_mov_masticado
1679  8D51
1680  8D51 ED 73 FE 89  	ld (Stack),sp
1681  8D55 ED 7B B8 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1682  8D59
1683  8D59 D1           	pop de 															; DE contiene Puntero_objeto
1684  8D5A DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1685  8D5C
1686  8D5C ED 73 B8 89  	ld (Puntero_de_almacen_de_mov_masticados),sp 					; Actualiza (Puntero_de_almacen_de_mov_masticados).
1687  8D60 ED 7B FE 89  	ld sp,(Stack)
1688  8D64
1689  8D64 7B           	ld a,e
1690  8D65 82           	add d															; Comprueba si ya no hay datos en el almacén.
1691  8D66
1692  8D66 CC C5 AB     	call z,Reinicia_entidad_maliciosa
1693  8D69
1694  8D69 C9           	ret
1695  8D6A
1696  8D6A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
1697  8D6A              ;
1698  8D6A              ;	22/7/24
1699  8D6A
1700  8D6A              Cargamos_registros_con_explosion
1701  8D6A
1702  8D6A
1703  8D6A 2A B8 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1704  8D6D CD FB 8D     	call Extrae_address
1705  8D70
1706  8D70 5D           	ld e,l
1707  8D71 54           	ld d,h 															; Puntero objeto, (Explosión), en DE.
1708  8D72
1709  8D72 DD 2A B6 89  	ld ix,(Puntero_de_impresion)									; IX contiene Puntero_de_impresion.
1710  8D76
1711  8D76 C9           	ret
1712  8D77
1713  8D77
1714  8D77              Cargamos_registros_con_explosion_Amadeus
1715  8D77
1716  8D77 2A 6D 87     	ld hl,(Pamm_Amadeus)
1717  8D7A CD FB 8D     	call Extrae_address
1718  8D7D
1719  8D7D 5D           	ld e,l
1720  8D7E 54           	ld d,h
1721  8D7F
1722  8D7F DD 2A 6B 87  	ld ix,(p.imp.amadeus)
1723  8D83
1724  8D83 C9           	ret
1725  8D84
1726  8D84              ; --------------------------------------------------------------------------------------------------------------
1727  8D84              ;
1728  8D84              ;	17/06/24
1729  8D84              ;
1730  8D84              ;	Cargamos los registros DE e IX, (Puntero_de_almacen_de_mov_masticados) de Amadeus.
1731  8D84              ;
1732  8D84              ;	IX contiene el puntero de impresión.
1733  8D84              ;	DE contiene (Puntero_objeto).
1734  8D84
1735  8D84
1736  8D84              Cargamos_registros_con_mov_masticado_Amadeus
1737  8D84
1738  8D84 ED 73 FE 89  	ld (Stack),sp
1739  8D88 ED 7B 6D 87  	ld sp,(Pamm_Amadeus)											; (Puntero_de_almacen_de_mov_masticados_Amadeus) en su correspondiente caja.
1740  8D8C D1           	pop de 															; DE contiene Puntero_objeto
1741  8D8D DD E1        	pop ix 															; IX contiene Puntero_de_impresion
1742  8D8F DD 22 6B 87  	ld (p.imp.amadeus),ix											; (Puntero_de_impresion_Amadeus) en su correspondiente caja.
1743  8D93 ED 7B FE 89  	ld sp,(Stack)
1744  8D97 C9           	ret
1745  8D98
1746  8D98              ; ---------------------------------------------------------------------------------------------------------------------
1747  8D98              ;
1748  8D98              ;	18/6/24
1749  8D98              ;
1750  8D98              ;	Genera la coordenada X de Amadeus y los datos de impresión de la nave en su (Album_de_pintado_Amadeus).
1751  8D98
1752  8D98              Genera_datos_de_impresion_Amadeus
1753  8D98
1754  8D98 3A 6A 87     	ld a,(Impacto_Amadeus)
1755  8D9B A7           	and a
1756  8D9C 20 03        	jr nz,1F
1757  8D9E
1758  8D9E              ; Si existe impacto en Amadeus ya tendremos modificados los registros DE con (Puntero_objeto)_
1759  8D9E              ; _apuntando a la correspondiente explosión.
1760  8D9E
1761  8D9E CD 84 8D     	call Cargamos_registros_con_mov_masticado_Amadeus
1762  8DA1
1763  8DA1 DD 7D        1 ld a,ixl
1764  8DA3 E6 1F        	and $1f
1765  8DA5 32 67 87     	ld (CX_Amadeus),a 												; Coordenada X del Amadeus, (0-$1f). Columnas.
1766  8DA8
1767  8DA8 2A 11 8A     	ld hl,(Scanlines_album_SP)
1768  8DAB E5           	push hl
1769  8DAC
1770  8DAC 2A 06 8A     	ld hl,(Album_de_pintado_Amadeus)
1771  8DAF 22 11 8A     	ld (Scanlines_album_SP),hl
1772  8DB2
1773  8DB2 CD 41 AD     	call Genera_datos_de_impresion
1774  8DB5
1775  8DB5 E1           	pop hl
1776  8DB6 22 11 8A     	ld (Scanlines_album_SP),hl
1777  8DB9
1778  8DB9 C9           	ret
1779  8DBA
1780  8DBA              ; ---------------------------------------------------------------------------------------------------------------------
1781  8DBA              ;
1782  8DBA              ;	13/03/24
1783  8DBA              ;
1784  8DBA
1785  8DBA              Inicia_albumes_de_lineas
1786  8DBA
1787  8DBA              ;	Entidades.
1788  8DBA
1789  8DBA 21 00 80     	ld hl,Scanlines_album
1790  8DBD 22 02 8A     	ld (Album_de_pintado),hl
1791  8DC0 22 11 8A     	ld (Scanlines_album_SP),hl
1792  8DC3
1793  8DC3 21 00 90     	ld hl,Scanlines_album_2
1794  8DC6 22 04 8A     	ld (Album_de_borrado),hl
1795  8DC9
1796  8DC9 C9           	ret
1797  8DCA
1798  8DCA              Inicia_albumes_de_lineas_Amadeus
1799  8DCA
1800  8DCA 21 20 81     	ld hl,Amadeus_scanlines_album
1801  8DCD 22 06 8A     	ld (Album_de_pintado_Amadeus),hl
1802  8DD0 21 43 81     	ld hl,Amadeus_scanlines_album_2
1803  8DD3 22 08 8A     	ld (Album_de_borrado_Amadeus),hl
1804  8DD6
1805  8DD6 C9           	ret
1806  8DD7
1807  8DD7              ; ---------------------------------------------------------------------------------------------------------------------
1808  8DD7              ;
1809  8DD7              ; 8/1/23
1810  8DD7              ;
1811  8DD7              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1812  8DD7              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1813  8DD7              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1814  8DD7
1815  8DD7              ; Destruye HL y DE !!!!!
1816  8DD7
1817  8DD7              Inicia_punteros_de_cajas
1818  8DD7
1819  8DD7 21 54 87     	ld hl,Indice_de_cajas_de_entidades
1820  8DDA CD FB 8D         call Extrae_address
1821  8DDD 22 F1 89         ld (Puntero_store_caja),hl
1822  8DE0 21 56 87     	ld hl,Indice_de_cajas_de_entidades+2
1823  8DE3 22 F5 89     	ld (Indice_restore_caja),hl
1824  8DE6 CD FB 8D     	call Extrae_address
1825  8DE9 22 F3 89     	ld (Puntero_restore_caja),hl
1826  8DEC C9               ret
1827  8DED
1828  8DED              ; *************************************************************************************************************************************************************
1829  8DED              ;
1830  8DED              ; 8/1/23
1831  8DED              ;
1832  8DED              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1833  8DED
1834  8DED 21 00 87     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1835  8DF0 22 19 8A     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1836  8DF3 C9           	ret
1837  8DF4 21 EC 86     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1838  8DF7 22 1B 8A     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1839  8DFA C9           	ret
1840  8DFB
1841  8DFB              ; *************************************************************************************************************************************************************
1842  8DFB              ;
1843  8DFB              ; 20/10/22
1844  8DFB              ;
1845  8DFB              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1846  8DFB              ;
1847  8DFB              ; Destruye el puntero y DE !!!!!
1848  8DFB
1849  8DFB 5E           Extrae_address ld e,(hl)
1850  8DFC 23           	inc hl
1851  8DFD 56           	ld d,(hl)
1852  8DFE 2B           	dec hl
1853  8DFF EB           	ex de,hl
1854  8E00 C9           	ret
1855  8E01
1856  8E01              ; *************************************************************************************************************************************************************
1857  8E01              ;
1858  8E01              ;	20/1/24
1859  8E01              ;
1860  8E01              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1861  8E01              ;	Sitúa (Puntero_objeto) en el Sprite correspondiente en función de su (Posicion_inicio).
1862  8E01              ;
1863  8E01              ;   Destruye HL y BC !!!!!,
1864  8E01              ;
1865  8E01              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1866  8E01              ;					"0" ..... Izquierda.
1867  8E01
1868  8E01              Inicia_Puntero_objeto
1869  8E01
1870  8E01 3A D0 89     	ld a,(Cuad_objeto)
1871  8E04 E6 01        	and 1
1872  8E06 F5           	push af
1873  8E07 CC 23 8E     	call z,Inicia_puntero_objeto_izq
1874  8E0A F1           	pop af
1875  8E0B C8           	ret z
1876  8E0C CD 10 8E     	call Inicia_puntero_objeto_der
1877  8E0F C9           	ret
1878  8E10
1879  8E10              ; Arrancamos desde la parte izquierda de la pantalla.
1880  8E10              ; Iniciamos (Indice_Sprite_der).
1881  8E10
1882  8E10 2A C6 89     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1883  8E13 22 CA 89     	ld (Puntero_DESPLZ_der),hl
1884  8E16 CD FB 8D     	call Extrae_address
1885  8E19 22 C3 89     	ld (Puntero_objeto),hl
1886  8E1C
1887  8E1C 2A C8 89     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1888  8E1F 22 CC 89     	ld (Puntero_DESPLZ_izq),hl
1889  8E22 C9           	ret
1890  8E23
1891  8E23              ; Arrancamos desde la parte derecha de la pantalla.
1892  8E23              ; Iniciamos (Indice_Sprite_izq).
1893  8E23
1894  8E23 2A C8 89     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1895  8E26 22 CC 89     	ld (Puntero_DESPLZ_izq),hl
1896  8E29 CD FB 8D     	call Extrae_address
1897  8E2C 22 C3 89     	ld (Puntero_objeto),hl
1898  8E2F
1899  8E2F 2A C6 89     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1900  8E32 22 CA 89     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1901  8E35 C9           	ret
1902  8E36
1903  8E36              ; **************************************************************************************************
1904  8E36              ;
1905  8E36              ;	06/07/24
1906  8E36              ;
1907  8E36              ;	Cargamos los datos de la caja de entidades señalada por el puntero (Puntero_store_caja) a la BANDEJA_DRAW.
1908  8E36
1909  8E36              Restore_entidad
1910  8E36
1911  8E36 2A F1 89     	ld hl,(Puntero_store_caja)
1912  8E39 7E           	ld a,(hl)
1913  8E3A A7           	and a
1914  8E3B CC 49 8E     	call z,Incrementa_punteros_de_cajas					; Caja vacía. Saltamos a la siguiente caja.
1915  8E3E 28 F6        	jr z,Restore_entidad
1916  8E40
1917  8E40 11 B1 89     	ld de,Bandeja_DRAW
1918  8E43 01 0C 00     	ld bc,12
1919  8E46 ED B0        	ldir
1920  8E48 C9           	ret
1921  8E49
1922  8E49              ; **************************************************************************************************
1923  8E49              ;
1924  8E49              ;	08/05/23
1925  8E49              ;
1926  8E49              ;	Incrementamos los dos punteros de entidades. (+1).
1927  8E49
1928  8E49              Incrementa_punteros_de_cajas
1929  8E49
1930  8E49 2A F3 89     	ld hl,(Puntero_restore_caja)
1931  8E4C 22 F1 89     	ld (Puntero_store_caja),hl
1932  8E4F 2A F5 89     	ld hl,(Indice_restore_caja)
1933  8E52 23           	inc hl
1934  8E53 23           	inc hl
1935  8E54 22 F5 89     	ld (Indice_restore_caja),hl
1936  8E57 CD FB 8D         call Extrae_address
1937  8E5A 22 F3 89         ld (Puntero_restore_caja),hl
1938  8E5D C9               ret
1939  8E5E
1940  8E5E              ; -----------------------------------------------------------
1941  8E5E
1942  8E5E              ; Teclado.
1943  8E5E
1944  8E5E 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1945  8E60 DB FE        	in a,($fe)
1946  8E62 E6 01        	and $01
1947  8E64 28 02        	jr z,1f
1948  8E66 18 F6        	jr Pulsa_ENTER
1949  8E68 C9           1 ret
1950  8E69
1951  8E69              ; **************************************************************************************************
1952  8E69              ;
1953  8E69              ; Temporización.
1954  8E69
1955  8E69              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1956  8E69              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1957  8E69              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1958  8E69              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1959  8E69
1960  8E69              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1961  8E69              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1962  8E69              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1963  8E69
1964  8E69              ; A partir de $4f61 no hace falta DELAY.
1965  8E69
1966  8E69              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1967  8E69
1968  8E69              ;DELAY LD BC,$0900							;$0320 ..... Delay mínimo
1969  8E69              ;wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1970  8E69              ;	LD A,B
1971  8E69              ;	AND A
1972  8E69              ;	JR NZ,wait
1973  8E69              ;	RET
1974  8E69
1975  8E69              ; ---------------------------------------------------------------------------------------------------------------
1976  8E69              ;
1977  8E69              ;	13/07/24
1978  8E69              ;
1979  8E69
1980  8E69              Inicia_Shield
1981  8E69
1982  8E69 21 34 8A     	ld hl,Datos_Shield
1983  8E6C 22 38 8A     	ld (Puntero_datos_shield),hl 						; Inicia el puntero (Puntero_datos_shield), lo situamos en la 1ª temporización.
1984  8E6F
1985  8E6F 7E           	ld a,(hl)
1986  8E70 32 3B 8A     	ld (Shield_2),a										; (Shield_2) contiene la primera temporización.
1987  8E73
1988  8E73 3E 01        	ld a,1
1989  8E75 32 3C 8A     	ld (Shield_3),a										; (Shield_3) se inicia con "1".
1990  8E78
1991  8E78 C9           	ret
1992  8E79
1993  8E79              ; ---------- ---------- ---------- ---------- ---------- ---------- ---------- ---------- ----------
1994  8E79              ;
1995  8E79              ;	4/6/24
1996  8E79              ;
1997  8E79              ;	Es la 1ª rutina que se ejcuta tras la rutina de interrupciones.
1998  8E79              ;
1999  8E79              ;	ACTUALIZA LA PANTALLA siempre que se haya producido algún movimiento, (entidades, Amadeus).
2000  8E79              ;
2001  8E79
2002  8E79              Actualiza_pantalla
2003  8E79
2004  8E79 3E 02        	ld a,2
2005  8E7B D3 FE        	out ($fe),a
2006  8E7D
2007  8E7D 3A 17 8A     	ld a,(Ctrl_3)
2008  8E80              ;	bit 0,a
2009  8E80              ;	jr z,Ejecuta_escudo									 		  	; No pintamos si el FRAME no se ha completado.
2010  8E80 CB 57        	bit 2,a
2011  8E82 28 28        	jr z,Ejecuta_escudo                                             ; No hay movimiento de entidades. Saltamos a Amadeus.
2012  8E84
2013  8E84              Borrando_entidades
2014  8E84
2015  8E84 2A 11 8A     	ld hl,(Scanlines_album_SP)
2016  8E87 CD FB 8D     	call Extrae_address
2017  8E8A 24           	inc h
2018  8E8B 25           	dec h
2019  8E8C 28 05        	jr z,Pintando_entidades
2020  8E8E CD 19 91     	call Pinta_Sprites
2021  8E91 18 F1        	jr Borrando_entidades
2022  8E93
2023  8E93              Pintando_entidades
2024  8E93
2025  8E93 2A 13 8A     	ld hl,(India_SP)
2026  8E96 2C           	inc l
2027  8E97 CD FB 8D     	call Extrae_address
2028  8E9A 24           	inc h
2029  8E9B 25           	dec h
2030  8E9C 28 0E        	jr z,Ejecuta_escudo
2031  8E9E 1C           	inc e
2032  8E9F 1C           	inc e
2033  8EA0 ED 53 13 8A  	ld (India_SP),de
2034  8EA4 CD FB 8D     	call Extrae_address
2035  8EA7 CD 19 91     	call Pinta_Sprites
2036  8EAA 18 E7        	jr Pintando_entidades
2037  8EAC
2038  8EAC              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2039  8EAC
2040  8EAC              Ejecuta_escudo
2041  8EAC
2042  8EAC 3A 3A 8A     	ld a,(Shield)
2043  8EAF A7           	and a
2044  8EB0 20 2F        	jr nz,Aplica_Shield
2045  8EB2
2046  8EB2              Borrando_Amadeus
2047  8EB2
2048  8EB2 21 17 8A     	ld hl,Ctrl_3
2049  8EB5 CB 6E        	bit 5,(hl)
2050  8EB7 28 1A        	jr z,1F												; No borramos. No ha habido movimiento.
2051  8EB9
2052  8EB9 2A 08 8A     	ld hl,(Album_de_borrado_Amadeus)
2053  8EBC CD FB 8D     	call Extrae_address
2054  8EBF 24           	inc h
2055  8EC0 25           	dec h
2056  8EC1 28 03        	jr z,Pintando_Amadeus
2057  8EC3 CD 19 91     	call Pinta_Sprites
2058  8EC6
2059  8EC6              Pintando_Amadeus
2060  8EC6
2061  8EC6 2A 06 8A     	ld hl,(Album_de_pintado_Amadeus)
2062  8EC9 CD FB 8D     	call Extrae_address
2063  8ECC 24           	inc h
2064  8ECD 25           	dec h
2065  8ECE 28 03        	jr z,1F
2066  8ED0 CD 19 91     	call Pinta_Sprites
2067  8ED3
2068  8ED3              ; --------------------- ----------------------- ---------------------- ---------------------- ---------------
2069  8ED3
2070  8ED3 21 17 8A     1 ld hl,Ctrl_3
2071  8ED6 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
2072  8ED8 CB 96        	res 2,(hl)											; Reinicia el flag DETECTA MOVIMIENTO.
2073  8EDA CB AE        	res 5,(hl)
2074  8EDC
2075  8EDC 3E 01        	ld a,1												; Borde azul.
2076  8EDE D3 FE        	out ($fe),a
2077  8EE0
2078  8EE0 C9           	ret
2079  8EE1
2080  8EE1
2081  8EE1
2082  8EE1              Aplica_Shield
2083  8EE1
2084  8EE1              ;	Bit 1 "1" (Shield_3) Sólo borra.
2085  8EE1              ;		  "0"     ""     Borra/Pinta.
2086  8EE1              ;	Bit 2    ""  RET.	 No borra, no pinta.
2087  8EE1
2088  8EE1 21 3C 8A     	ld hl,Shield_3
2089  8EE4
2090  8EE4 CB 5E        	bit 3,(hl)
2091  8EE6 20 DE        	jr nz,Pintando_Amadeus
2092  8EE8
2093  8EE8 CB 56        	bit 2,(hl)
2094  8EEA 20 E7        	jr nz,1B
2095  8EEC
2096  8EEC CB 4E        	bit 1,(hl)
2097  8EEE C4 F5 8E     	call nz,Borra_Amadeus_shield
2098  8EF1
2099  8EF1 28 BF        	jr z,Borrando_Amadeus
2100  8EF3 18 DE        	jr 1B
2101  8EF5
2102  8EF5              ; ----- ----- ----- ----- ----- ----- ----- ----- -----
2103  8EF5
2104  8EF5              Borra_Amadeus_shield
2105  8EF5
2106  8EF5 3A 17 8A     	ld a,(Ctrl_3)
2107  8EF8 CB 6F        	bit 5,a
2108  8EFA 28 08        	jr z,1F
2109  8EFC
2110  8EFC 2A 08 8A     	ld hl,(Album_de_borrado_Amadeus)
2111  8EFF CD FB 8D     	call Extrae_address
2112  8F02 18 06        	jr 2F
2113  8F04
2114  8F04 2A 06 8A     1 ld hl,(Album_de_pintado_Amadeus)
2115  8F07 CD FB 8D     	call Extrae_address
2116  8F0A
2117  8F0A CD 19 91     2 call Pinta_Sprites
2118  8F0D
2119  8F0D AF           	xor a
2120  8F0E 3C           	inc a											; Asegura NZ en la salida de la rutina.
2121  8F0F
2122  8F0F C9           	ret
2123  8F10
2124  8F10              Pinta_Amadeus_shield
2125  8F10
2126  8F10 2A 06 8A     	ld hl,(Album_de_pintado_Amadeus)
2127  8F13 CD FB 8D     	call Extrae_address
2128  8F16 CD 19 91     	call Pinta_Sprites
2129  8F19
2130  8F19 AF           	xor a
2131  8F1A 3C           	inc a											; Asegura NZ en la salida de la rutina.
2132  8F1B
2133  8F1B C9           	ret
2134  8F1C
2135  8F1C              Borra_Pinta_Amadeus_shield
2136  8F1C
2137  8F1C CD F5 8E     	call Borra_Amadeus_shield
2138  8F1F CD 10 8F     	call Pinta_Amadeus_shield
2139  8F22 C9           	ret
2140  8F23
2141  8F23              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2142  8F23              ;
2143  8F23              ;	19/6/24
2144  8F23              ;
2145  8F23
2146  8F23              Teclado
2147  8F23
2148  8F23              ; Está habilitado el disparo de Amadeus??, podemos disparar??. Si no es así saltamos a 1F.
2149  8F23
2150  8F23 3A 2E 8A     	ld a,(Disparo_Amadeus)
2151  8F26 3D           	dec a
2152  8F27 20 17        	jr nz,1F
2153  8F29
2154  8F29 3E F7        	ld a,$f7												; "5" para disparar.
2155  8F2B DB FE        	in a,($fe)
2156  8F2D E6 10        	and $10
2157  8F2F
2158  8F2F              ;	push af
2159  8F2F CC 33 9A     	call z,Genera_disparo
2160  8F32              ;	pop af
2161  8F32
2162  8F32 20 0C        	jr nz,1F
2163  8F34
2164  8F34 3A 2E 8A     	ld a,(Disparo_Amadeus)
2165  8F37 EE 01        	xor 1
2166  8F39 32 2E 8A     	ld (Disparo_Amadeus),a
2167  8F3C
2168  8F3C F3           	di
2169  8F3D 18 FE        	jr $
2170  8F3F FB           	ei
2171  8F40
2172  8F40 3E F7        1 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
2173  8F42 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2174  8F44 E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
2175  8F46 CC 86 98         call z,Amadeus_a_izquierda
2176  8F49
2177  8F49 3E F7        	ld a,$f7
2178  8F4B DB FE        	in a,($fe)
2179  8F4D E6 01        	and $01
2180  8F4F C8           	ret z
2181  8F50
2182  8F50
2183  8F50 3E F7        	ld a,$f7
2184  8F52 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
2185  8F54 E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
2186  8F56 CC 9E 98     	call z,Amadeus_a_derecha
2187  8F59
2188  8F59 C9           	ret
2189  8F5A
2190  8F5A              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
2191  8F5A              ;
2192  8F5A              ;	Rutina provisional para que los malotes cagen balas.
2193  8F5A
2194  8F5A              ;Detecta_disparo_entidad
2195  8F5A
2196  8F5A              ;	ld a,(Disparo_entidad)
2197  8F5A              ;	and a
2198  8F5A              ;	ret z
2199  8F5A
2200  8F5A              ;! Aquí hemos de implementar la rutina/s que generan disparo...
2201  8F5A
2202  8F5A              ;	ld a,$7f				; Detecta SPACE.
2203  8F5A              ;	in a,($fe)
2204  8F5A              ;	and 1
2205  8F5A              ;	ret nz
2206  8F5A
2207  8F5A              ;	call Genera_disparo
2208  8F5A              ;	ret
2209  8F5A              ; ------------------------------------------------------------------------------------------------------------------------
2210  8F5A              ;
2211  8F5A              ;	06/07/24
2212  8F5A              ;
2213  8F5A
2214  8F5A              Genera_explosion
2215  8F5A
2216  8F5A 21 26 8A     	ld hl,Clock_explosion
2217  8F5D 35           	dec (hl)
2218  8F5E 28 0C        	jr z,Siguiente_frame_explosion									; Gestionamos la siguiente entidad.
2219  8F60
2220  8F60              Borra_entidad_colisionada
2221  8F60
2222  8F60 CD 65 8C     	call Recauda_informacion_de_entidad_en_curso					; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso en la TABLA_DE_PINTADO.
2223  8F63 CD 6A 8D     	call Cargamos_registros_con_explosion
2224  8F66 CD 41 AD     	call Genera_datos_de_impresion
2225  8F69
2226  8F69 AF           	xor a
2227  8F6A 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2228  8F6B
2229  8F6B C9           	ret
2230  8F6C
2231  8F6C              Siguiente_frame_explosion
2232  8F6C
2233  8F6C 36 04        	ld (hl),4 														; Inicializamos (Clock_explosion), (velocidad de la explosión).
2234  8F6E
2235  8F6E              ; Avanza Frame de explosión.
2236  8F6E
2237  8F6E 2A B8 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
2238  8F71 01 94 85     	ld bc,Explosion_entidades_1-2
2239  8F74 79           	ld a,c
2240  8F75 95           	sub l
2241  8F76 20 0B        	jr nz,1F
2242  8F78
2243  8F78              ; Fín de la entidad !!!!!!!!!!!!!
2244  8F78
2245  8F78 21 F8 89     	ld hl,Numero_parcial_de_entidades
2246  8F7B 35           	dec (hl)
2247  8F7C 23           	inc hl
2248  8F7D 35           	dec (hl)														; Decrementa (Numero_de_entidades) y (Numero_parcial_de_entidades).
2249  8F7E
2250  8F7E CD 9A AB     	call Limpiamos_bandeja_DRAW
2251  8F81 18 DD        	jr Borra_entidad_colisionada
2252  8F83
2253  8F83 2C           1 inc l
2254  8F84 2C           	inc l
2255  8F85 22 B8 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
2256  8F88 18 D6        	jr Borra_entidad_colisionada
2257  8F8A
2258  8F8A              ; ----- ----- ----- ----- -----
2259  8F8A
2260  8F8A              Genera_explosion_Amadeus
2261  8F8A
2262  8F8A 21 27 8A     	ld hl,Clock_explosion_Amadeus
2263  8F8D 35           	dec (hl)
2264  8F8E 28 11        	jr z,Siguiente_frame_explosion_Amadeus							; Gestionamos la siguiente entidad.
2265  8F90
2266  8F90              Borra_Amadeus_impactado
2267  8F90
2268  8F90 CD F5 8B     	call Change_Amadeus
2269  8F93 CD 77 8D     	call Cargamos_registros_con_explosion_Amadeus
2270  8F96 CD 98 8D     	call Genera_datos_de_impresion_Amadeus
2271  8F99
2272  8F99 21 17 8A     	ld hl,Ctrl_3
2273  8F9C CB EE        	set 5,(hl)														; Indicamos que hay movimiento, (se modifica el Sprite debido a la explosión).
2274  8F9E
2275  8F9E AF           	xor a
2276  8F9F 3C           	inc a 															; Necesario NZ a la salida de la subrutina.
2277  8FA0
2278  8FA0 C9           	ret
2279  8FA1
2280  8FA1              Siguiente_frame_explosion_Amadeus
2281  8FA1
2282  8FA1 36 05        	ld (hl),5 														; Inicializamos (Clock_explosion_Amadeus), (velocidad de la explosión).
2283  8FA3
2284  8FA3              ; Avanza Frame de explosión.
2285  8FA3
2286  8FA3 2A 6D 87     	ld hl,(Pamm_Amadeus)
2287  8FA6 01 34 86     	ld bc,Explosion_Amadeus_1-2
2288  8FA9 79           	ld a,c
2289  8FAA 95           	sub l
2290  8FAB 20 0B        	jr nz,1F
2291  8FAD
2292  8FAD              ; Fín de Amadeus !!!!!!!!!!!!!
2293  8FAD              ; Activamos el FLAG de Amadeus destruido, ( bit_6 Ctrl_3 ).
2294  8FAD
2295  8FAD AF           	xor a
2296  8FAE 32 6A 87     	ld (Impacto_Amadeus),a
2297  8FB1 21 17 8A     	ld hl,Ctrl_3
2298  8FB4 CB F6        	set 6,(hl)
2299  8FB6 18 D8        	jr Borra_Amadeus_impactado
2300  8FB8
2301  8FB8 2C           1 inc l
2302  8FB9 2C           	inc l
2303  8FBA 22 6D 87     	ld (Pamm_Amadeus),hl
2304  8FBD 18 D1        	jr Borra_Amadeus_impactado
2305  8FBF
2306  8FBF
2307  8FBF
2308  8FBF
2309  8FBF
2310  8FBF
2311  8FBF
2312  8FBF
2313  8FBF
2314  8FBF
2315  8FBF
2316  8FBF
2317  8FBF
2318  8FBF
2319  8FBF
2320  8FBF
2321  8FBF
2322  8FBF              ; ---------------------------------------------------------------
2323  8FBF
2324  8FBF              	org $aa7f
2325  AA7F
2326  AA7F              	include "RND_Derivando.asm"
# file opened: RND_Derivando.asm
   1+ AA7F              ; ******************************************************************************************************************************************************************************************
   2+ AA7F              ;
   3+ AA7F              ;   21/04/24
   4+ AA7F              ;
   5+ AA7F              ;   Construyo un nº aleatorio. Método: "DERIVANDO."
   6+ AA7F              ;   (XOR) bit a bit.
   7+ AA7F              ;
   8+ AA7F              ;   INPUTS: B contendrá el nº de números aleatorios que queremos generar, (0-$ff).
   9+ AA7F
  10+ AA7F              Derivando_RND
  11+ AA7F
  12+ AA7F 21 C6 86         ld hl,Numeros_aleatorios
  13+ AA82
  14+ AA82 ED 5F        3 ld a,r      			                ; La semilla inicial de nuestro nº aleatorio la proporciona el registro `R´. Cargamos A con R.
  15+ AA84 C5               push bc
  16+ AA85              ;                                       ; El registro R, es un registro de 8 bits que actúa como contador de refresco de la memoria dinámica. ($00 - $ff).
  17+ AA85 01 00 07         ld bc,$0700                         ; C contendrá nuestro nº aleatorio: $0 - $ff. Inicialmente está a "0".
  18+ AA88              ;                                       ; B actuará como contador de bits. Requerimos de 1 byte, ($ff).
  19+ AA88
  20+ AA88 A7           6 and a                                 ; Carry a "0".
  21+ AA89 CB 3F            srl a                               ; Desplazamiento a la derecha.
  22+ AA8B 30 02            jr nc,1F
  23+ AA8D
  24+ AA8D CB C1            set 0,c
  25+ AA8F
  26+ AA8F 57           1 ld d,a                                ; D contiene la copia de nuestra semilla después del DESPLAZAMIENTO.
  27+ AA90 E6 01            and %00000001                       ; Extraigo el último bit de A y lo guardamos en E.
  28+ AA92 5F               ld e,a
  29+ AA93
  30+ AA93 7A               ld a,d
  31+ AA94 E6 02            and %00000010                       ; Extraigo el penúltimo bit de A y lo `traslado´ al último bit de A. El objetivo es implementar una función XOR_
  32+ AA96 28 02            jr z,2F                             ; _con el último y penúltimo bit de nuestra semilla.
  33+ AA98
  34+ AA98 CB 3F            srl a
  35+ AA9A
  36+ AA9A AB           2 xor e                                 ; XOR entre el último y penúltimo bit de A.
  37+ AA9B
  38+ AA9B 7A               ld a,d                              ; A vuelve a contener la copia de nuestra semilla después del DESPLAZAMIENTO.
  39+ AA9C 28 04            jr z,4F
  40+ AA9E
  41+ AA9E CB FF            set 7,a
  42+ AAA0 18 02            jr 5F
  43+ AAA2
  44+ AAA2 CB BF        4 res 7,a
  45+ AAA4
  46+ AAA4 CB 21        5 sla c
  47+ AAA6 10 E0            djnz 6B
  48+ AAA8
  49+ AAA8 79               ld a,c                              ; Nº aleatorio (1 Byte) en A.
  50+ AAA9
  51+ AAA9 77               ld (hl),a
  52+ AAAA 23               inc hl
  53+ AAAB C1               pop bc
  54+ AAAC 10 D4            djnz 3B
  55+ AAAE
  56+ AAAE C9               ret
  57+ AAAF
  58+ AAAF
  59+ AAAF
# file closed: RND_Derivando.asm
2327  AAAF              	include "Rutinas_de_inicio_y_niveles.asm"
# file opened: Rutinas_de_inicio_y_niveles.asm
   1+ AAAF              ;---------------------------------------------------------------------------------------------------------------
   2+ AAAF              ;
   3+ AAAF              ;   8/3/24
   4+ AAAF              ;
   5+ AAAF              ;	Carga el nº de entidades del nivel en (Numero_de_entidades).
   6+ AAAF              ;	Fija los perfiles de velocidad según el Nivel de dificultad.
   7+ AAAF              ;	Sitúa el puntero (Datos_de_nivel) en la dirección de memoria donde se encuentra el .db que define el (Tipo)_
   8+ AAAF              ;	_ de la 1ª entidad del Nivel.
   9+ AAAF              ;
  10+ AAAF              ;	Sitúa (Puntero_indice_mov) en la coreografía correcta.
  11+ AAAF
  12+ AAAF              ;	MODIFICA: HL,DE y A.
  13+ AAAF              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  14+ AAAF
  15+ AAAF              Inicializa_Nivel
  16+ AAAF
  17+ AAAF 2A 30 8A     	ld hl,(Puntero_indice_NIVELES)
  18+ AAB2 CD FB 8D     	call Extrae_address
  19+ AAB5 7E           	ld a,(hl)
  20+ AAB6 32 F7 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  21+ AAB9 23           	inc hl
  22+ AABA CD C7 AA     	call Fija_velocidades					     ; Perfiles_de_velocidad según Nivel.
  23+ AABD 22 32 8A     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el .db que indica el (Tipo) de la 1ª entidad del Nivel.
  24+ AAC0 CD D0 AA     	call Inicializa_Puntero_indice_mov			 ; Inicializa (Puntero_indice_mov) según el (Tipo) de Entidad. Nos situamos en la coreografía correcta.
  25+ AAC3
  26+ AAC3 CD E1 AA     	call Inicializa_Puntero_de_almacen_de_mov_masticados	; Selecciona el almacén adecuado de mov_masticados según el (Tipo) de entidad.
  27+ AAC6 C9           	ret
  28+ AAC7
  29+ AAC7              ; ----------------------
  30+ AAC7
  31+ AAC7 11 D6 89     Fija_velocidades ld de,Perfiles_de_velocidad
  32+ AACA 01 04 00     	ld bc,4
  33+ AACD ED B0        	ldir
  34+ AACF C9           	ret
  35+ AAD0
  36+ AAD0 7E           Inicializa_Puntero_indice_mov ld a,(hl)     	 ; Cargamos A con el (Tipo) de la 1ª entidad del Nivel.
  37+ AAD1 CD 6B AC         call Calcula_salto_en_BC
  38+ AAD4 21 E8 86         ld hl,Indice_de_mov_segun_tipo_de_entidad
  39+ AAD7 A7               and a
  40+ AAD8 ED 4A            adc hl,bc
  41+ AADA CD FB 8D         call Extrae_address
  42+ AADD 22 E2 89         ld (Puntero_indice_mov),hl
  43+ AAE0 C9               ret
  44+ AAE1
  45+ AAE1 3A B1 89     Inicializa_Puntero_de_almacen_de_mov_masticados ld a,(Tipo)
  46+ AAE4 CD 6B AC     	call Calcula_salto_en_BC
  47+ AAE7 21 20 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
  48+ AAEA A7               and a
  49+ AAEB ED 4A            adc hl,bc
  50+ AAED CD FB 8D         call Extrae_address
  51+ AAF0 22 B8 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
  52+ AAF3 C9           	ret
  53+ AAF4
  54+ AAF4              ;---------------------------------------------------------------------------------------------------------------
  55+ AAF4              ;
  56+ AAF4              ;   5/1/24
  57+ AAF4              ;
  58+ AAF4              ;	Destruye A,BC,HL,DE
  59+ AAF4
  60+ AAF4              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES.
  61+ AAF4              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  62+ AAF4
  63+ AAF4              Inicia_Entidades
  64+ AAF4
  65+ AAF4              ; Preparamos los punteros de las cajas de entidades:
  66+ AAF4
  67+ AAF4 CD D7 8D     	call Inicia_punteros_de_cajas								; Situa (Puntero_store_caja) en el 1er .db de la 1ª caja del índice de entidades.
  68+ AAF7              ;																; Situa (Puntero_restore_caja) en el 1er .db de la 2ª caja del índice de cajas de entidades.
  69+ AAF7 CD B3 AC     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  70+ AAFA
  71+ AAFA 2A 32 8A     	ld hl,(Datos_de_nivel)										; Tipo de la 1ª entidad del Nivel.
  72+ AAFD
  73+ AAFD 22 32 8A     2 ld (Datos_de_nivel),hl 										; Actualizamos. Ahora nos encontramos en la siguiente entidad del Nivel.
  74+ AB00
  75+ AB00 CD 19 AC     	call Activa_FLAG_Tipo_de_entidad							; La rutina identifica el (Tipo) de entidad que vamos a iniciar.
  76+ AB03
  77+ AB03 2A 32 8A     	ld hl,(Datos_de_nivel)
  78+ AB06
  79+ AB06              ; En este punto:
  80+ AB06              ;
  81+ AB06              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  82+ AB06              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  83+ AB06
  84+ AB06 C5           1 push bc 														; Guardo el nº de cajas a rellenar.
  85+ AB07
  86+ AB07 7E           	ld a,(hl)
  87+ AB08 CD 85 AB     	call Definicion_segun_tipo 									; Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
  88+ AB0B
  89+ AB0B CD 7D AC     	call Definicion_de_entidad_a_bandeja_DRAW					; Vuelca los datos de la definición en DRAW.
  90+ AB0E
  91+ AB0E              ;	Este (Tipo) de entidad ya dispone de movimientos masticados ???
  92+ AB0E
  93+ AB0E CD 3B AC     	call Busca_mov_masticados_segun_tipo
  94+ AB11
  95+ AB11 A7           	and a
  96+ AB12 28 08        	jr z,3F														; A="1" Indica que los mov_masticados de este (Tipo) de entidad ya están generados.
  97+ AB14
  98+ AB14              ; 	Este (Tipo) de entidad DISPONE DE MOV_MASTICADOS.
  99+ AB14
 100+ AB14              ;	Actualizamos el (Contador_de_mov_masticados) de esta entidad con el (Contador_general_de_mov_masticados)_
 101+ AB14              ;	_ de este tipo de entidad.
 102+ AB14
 103+ AB14 CD 1D 9A     	call Situa_en_contador_general_de_mov_masticados
 104+ AB17 CD 2A 9A     	call Transfiere_datos_de_contadores
 105+ AB1A
 106+ AB1A 18 06        	jr 4F
 107+ AB1C
 108+ AB1C CD FD 8C     3 call Construye_movimientos_masticados_entidad
 109+ AB1F
 110+ AB1F              ; Tenemos todos los movimientos masticados de este tipo de entidad generados y guardados en su correspondiente almacén.
 111+ AB1F              ; (Puntero_de_almacen_de_mov_masticados) de esta entidad está situado al principio del almacen.
 112+ AB1F              ; (Contador_de_mov_masticados) de esta entidad contiene: el nº total de mov. masticados de este tipo de entidad.
 113+ AB1F              ; Contador_general_de_mov_masticados de este tipo de entidad actualizado.
 114+ AB1F              ; Lo tenemos todo preparado para cargar los registros con el mov. masticado y hacer la correspondiente foto.
 115+ AB1F
 116+ AB1F CD F9 AB     	call Activa_FLAG_mov_masticados_completos					; Activa el FLAG que indica que este (Tipo) de entidad tiene todos sus_
 117+ AB22              ;																; _ Mov_masticados ya generados.
 118+ AB22
 119+ AB22 CD 51 8D     4 call Cargamos_registros_con_mov_masticado						; Cargamos los registros con el movimiento actual y `saltamos' al movimiento siguiente.
 120+ AB25
 121+ AB25 DD E5        	push ix
 122+ AB27 E1           	pop hl 														; (Puntero_de_impresion) en HL.
 123+ AB28
 124+ AB28 D5           	push de
 125+ AB29 CD EE AC     	call Genera_coordenadas
 126+ AB2C
 127+ AB2C ED 5B 11 8A  	ld de,(Scanlines_album_SP)
 128+ AB30 CD 65 8C     	call Recauda_informacion_de_entidad_en_curso				; Almacena la Coordenada_Y y (Scanlines_album_SP) de la entidad en curso.
 129+ AB33 D1           	pop de
 130+ AB34
 131+ AB34 CD 41 AD     	call Genera_datos_de_impresion
 132+ AB37              ;																; La rutina [Genera_datos_de_impresion] habilita las interrupciones antes del RET.
 133+ AB37              ;																; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 134+ AB37              ;																; La rutina [Genera_datos_de_impresion] activa las interrupciones antes del RET.
 135+ AB37              ; Actualizamos (Contador_de_mov_masticados) tras la foto.
 136+ AB37
 137+ AB37 CD BD AB     	call Decrementa_Contador_de_mov_masticados
 138+ AB3A
 139+ AB3A              ; Antes de guardar los parámetros de esta entidad en su correspondiente caja hay que actualizar coordenadas.
 140+ AB3A
 141+ AB3A ED 5B F1 89  	ld de,(Puntero_store_caja)
 142+ AB3E CD AA AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 143+ AB41
 144+ AB41 CD 9A AB     	call Limpiamos_bandeja_DRAW
 145+ AB44 CD 49 8E     	call Incrementa_punteros_de_cajas
 146+ AB47
 147+ AB47              ; Inicializa los FLAGS que indican el (Tipo) de entidad que vamos a iniciar, pues pasamos a iniciar la siguiente_
 148+ AB47              ; _ entidad del Nivel.
 149+ AB47
 150+ AB47 3A 18 8A     	ld a,(Ctrl_4)
 151+ AB4A E6 F0        	and $f0
 152+ AB4C 32 18 8A     	ld (Ctrl_4),a 												; Mantenemos FLAGS que indican MOV_MASTICADOS.
 153+ AB4F
 154+ AB4F              ; Siguiente entidad del Nivel.
 155+ AB4F
 156+ AB4F 2A 32 8A     	ld hl,(Datos_de_nivel)										; Nos situamos en el .db que define el (Tipo) de la siguiente_
 157+ AB52 23           	inc hl 														; _ entidad del Nivel.
 158+ AB53
 159+ AB53 C1           	pop bc 														; Recuperamos (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar)
 160+ AB54
 161+ AB54 10 A7        	djnz 2B
 162+ AB56
 163+ AB56 C9           	ret
 164+ AB57
 165+ AB57              ; -------------------------------------------------------------------------------------------------------------------
 166+ AB57              ;
 167+ AB57              ;	27/5/24
 168+ AB57              ;
 169+ AB57              ;	Inicia,genera mov. masticados y sitúa en el centro de la pantalla a Amadeus.
 170+ AB57              ;
 171+ AB57
 172+ AB57              ; 	Cargamos la definición de Amadeus en DRAW.
 173+ AB57              ;	Nos situamos en el 1er .db, (Tipo), de la definición de Amadeus.
 174+ AB57
 175+ AB57 21 E4 87     Inicia_Amadeus ld hl,Definicion_Amadeus
 176+ AB5A CD 7D AC     	call Definicion_de_entidad_a_bandeja_DRAW				; Vuelca los datos de la definición de Amadeus en DRAW.
 177+ AB5D
 178+ AB5D
 179+ AB5D              Construye_movimientos_masticados_Amadeus
 180+ AB5D
 181+ AB5D 2A B8 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)			; Guardamos en la pila la dirección inicial del puntero, (para reiniciarlo más tarde).
 182+ AB60 CD 44 8D     	call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
 183+ AB63              ;															; _ el (Contador_de_mov_masticados).
 184+ AB63 CD 01 8E     	call Inicia_Puntero_objeto								; Inicializa (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
 185+ AB66              ;															; Inicializa (Puntero_objeto) en función de la (Posicion_inicio) de la entidad.
 186+ AB66
 187+ AB66              ; Generamos movimientos masticados de Amadeus.
 188+ AB66
 189+ AB66 06 79        	ld b,121												; $0079, 121d.
 190+ AB68
 191+ AB68 C5           1 push bc
 192+ AB69 CD 3C 92     	call Draw
 193+ AB6C CD 29 8D     	call Guarda_movimiento_masticado
 194+ AB6F
 195+ AB6F CD B0 95     	call Mov_right
 196+ AB72 CD B0 95     	call Mov_right											; Amadeus se mueve x2 pixel.
 197+ AB75
 198+ AB75 C1           	pop bc
 199+ AB76 10 F0        	djnz 1B
 200+ AB78
 201+ AB78              ; Todos los movimientos masticados de Amadeus se han creado.
 202+ AB78
 203+ AB78              ;	(Contador_de_mov_masticados) de Amadeus ="$0079", 121d movimientos en total. Amadeus se encuentra ahora en el extremo derecho de la pantalla.
 204+ AB78              ;	Ahora hay que modificar la posición del (Puntero_de_almacen_de_mov_masticados), (está 4 posiciones de memoria adelantado para seguir creando desplazamientos).
 205+ AB78
 206+ AB78 2A B8 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
 207+ AB7B 01 08 00     	ld bc,8
 208+ AB7E A7           	and a
 209+ AB7F ED 42        	sbc hl,bc
 210+ AB81 22 B8 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 211+ AB84
 212+ AB84 C9           	ret
 213+ AB85
 214+ AB85              ; ---------------------------------------------------------------------
 215+ AB85              ;
 216+ AB85              ;	10/02/24
 217+ AB85              ;
 218+ AB85              ;	Nos situamos en el 1er .db de datos de la definición de este tipo de entidad.
 219+ AB85              ;
 220+ AB85              ;	INPUT: A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
 221+ AB85
 222+ AB85              Definicion_segun_tipo
 223+ AB85
 224+ AB85 CD 6B AC     	call Calcula_salto_en_BC									; Calcula el salto para situarnos en la definición de entidad correcta de indice de [Indice_de_definiciones_de_entidades].
 225+ AB88 21 C6 87     	ld hl,Indice_de_definiciones_de_entidades
 226+ AB8B CD 73 AC     	call Situa_en_datos_de_definicion							; Sitúa HL en el 1er .db de la definición de entidad tipo que tenemos que volcar en DRAW.
 227+ AB8E C9           	ret
 228+ AB8F
 229+ AB8F              ; ---------------------------------------------------------------------
 230+ AB8F              ;
 231+ AB8F              ;	6/7/24
 232+ AB8F
 233+ AB8F
 234+ AB8F              Store_Restore_cajas
 235+ AB8F
 236+ AB8F ED 5B F1 89  	ld de,(Puntero_store_caja)
 237+ AB93 CD AA AC     	call Parametros_de_bandeja_DRAW_a_caja	 					; Caja de entidades completa.
 238+ AB96 CD 49 8E     	call Incrementa_punteros_de_cajas
 239+ AB99 C9           	ret
 240+ AB9A
 241+ AB9A              ; ---------------------------------------------------------------------
 242+ AB9A              ;
 243+ AB9A              ;	23/6/24
 244+ AB9A              ;
 245+ AB9A              ;	Limpiamos lo más rápido posible la Bandeja DRAW.
 246+ AB9A              ;
 247+ AB9A              ;	MODIFY: HL
 248+ AB9A
 249+ AB9A              Limpiamos_bandeja_DRAW
 250+ AB9A
 251+ AB9A ED 73 FE 89  	ld (Stack),sp
 252+ AB9E 31 D6 89     	ld sp,Vel_left
 253+ ABA1
 254+ ABA1 AF           	xor a
 255+ ABA2 67           	ld h,a
 256+ ABA3 6F           	ld l,a
 257+ ABA4
 258+ ABA4 E5           	push hl
 259+ ABA5 E5           	push hl
 260+ ABA6 E5           	push hl
 261+ ABA7 E5           	push hl
 262+ ABA8 E5           	push hl
 263+ ABA9 E5           	push hl
 264+ ABAA E5           	push hl
 265+ ABAB E5           	push hl
 266+ ABAC E5           	push hl
 267+ ABAD E5           	push hl
 268+ ABAE E5           	push hl
 269+ ABAF E5           	push hl
 270+ ABB0 E5           	push hl
 271+ ABB1 E5           	push hl
 272+ ABB2 E5           	push hl
 273+ ABB3 E5           	push hl
 274+ ABB4 E5           	push hl
 275+ ABB5 E5           	push hl
 276+ ABB6
 277+ ABB6 33           	inc sp
 278+ ABB7
 279+ ABB7 E5           	push hl
 280+ ABB8 ED 7B FE 89  	ld sp,(Stack)
 281+ ABBC
 282+ ABBC C9           	ret
 283+ ABBD
 284+ ABBD              ; ---------------------------------------------------------------------
 285+ ABBD              ;
 286+ ABBD              ;	24/03/24
 287+ ABBD
 288+ ABBD 2A BA 89     Decrementa_Contador_de_mov_masticados ld hl,(Contador_de_mov_masticados)
 289+ ABC0 2B           	dec hl
 290+ ABC1 22 BA 89     	ld (Contador_de_mov_masticados),hl
 291+ ABC4 C9           	ret
 292+ ABC5
 293+ ABC5              ; ---------------------------------------------------------------------
 294+ ABC5              ;
 295+ ABC5              ;	8/5/24
 296+ ABC5
 297+ ABC5              Reinicia_entidad_maliciosa
 298+ ABC5
 299+ ABC5              ;	En 1er lugar actualizamos el (Contador_de_mov_masticados).
 300+ ABC5
 301+ ABC5 CD 1D 9A     	call Situa_en_contador_general_de_mov_masticados
 302+ ABC8 CD 2A 9A     	call Transfiere_datos_de_contadores
 303+ ABCB
 304+ ABCB              ; 	En 2º lugar hay que inicializar el (Puntero_de_almacen_de_mov_masticados).
 305+ ABCB
 306+ ABCB 3A B1 89     	ld a,(Tipo)
 307+ ABCE CD 85 AB     	call Definicion_segun_tipo
 308+ ABD1
 309+ ABD1 E5           	push hl
 310+ ABD2 DD E1        	pop ix
 311+ ABD4
 312+ ABD4 DD 6E 0B     	ld l,(ix+11)
 313+ ABD7 DD 66 0C     	ld h,(ix+12)
 314+ ABDA
 315+ ABDA 22 B8 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
 316+ ABDD
 317+ ABDD CD 51 8D     	call Cargamos_registros_con_mov_masticado
 318+ ABE0
 319+ ABE0              ; Incrementa el contador de vueltas, (el contador cuenta 4 vueltas máximo).
 320+ ABE0              ; El perfil de velocidad de la entidad será: (Contador_de_vueltas)/8.
 321+ ABE0              ; Ejemplos.
 322+ ABE0
 323+ ABE0              ;	1ª vuelta: (Contador_de_vueltas)="$02" --- (Velocidad)="0".
 324+ ABE0              ;	2ª vuelta: 	""	""	""	""	""  ="$04" ---   ""	 ""	  ="1".
 325+ ABE0              ;	3ª vuelta: 	""	""	""	""	""  ="$08" ---   ""	 ""	  ="2".
 326+ ABE0              ;	4ª vuelta: 	""	""	""	""	""  ="$10" ---   ""	 ""	  ="4".
 327+ ABE0              ;	5ª vuelta: 	""	""	""	""	""  ="$20" ---   ""	 ""	  ="8".
 328+ ABE0
 329+ ABE0 21 B4 89     	ld hl,Contador_de_vueltas
 330+ ABE3 CB 26        	sla (hl)									; Incrementa el contador, (desplaza el bit a izquierda).
 331+ ABE5
 332+ ABE5 7E           	ld a,(hl)
 333+ ABE6 CB 2F        	sra a
 334+ ABE8 CB 2F        	sra a
 335+ ABEA
 336+ ABEA 32 BC 89     	ld (Velocidad),a
 337+ ABED
 338+ ABED 3E 40        	ld a,$40
 339+ ABEF BE           	cp (hl)
 340+ ABF0 C0           	ret nz
 341+ ABF1
 342+ ABF1              ; Límitador.
 343+ ABF1
 344+ ABF1              ;	Limita el valor de (Contador_de_vueltas) a "$20" y de (Velocidad) a "$04".
 345+ ABF1
 346+ ABF1 CB 2E        	sra (hl)
 347+ ABF3 21 BC 89     	ld hl,Velocidad
 348+ ABF6 CB 2E        	sra (hl)
 349+ ABF8
 350+ ABF8 C9           	ret
 351+ ABF9
 352+ ABF9              ; ---------------------------------------------------------------------
 353+ ABF9              ;
 354+ ABF9              ;	22/01/24
 355+ ABF9
 356+ ABF9 21 18 8A     Activa_FLAG_mov_masticados_completos ld hl,Ctrl_4
 357+ ABFC CB 46        	bit 0,(hl)
 358+ ABFE 20 0D        	jr nz,1F
 359+ AC00 CB 4E        	bit 1,(hl)
 360+ AC02 20 0C        	jr nz,2F
 361+ AC04 CB 56        	bit 2,(hl)
 362+ AC06 20 0B        	jr nz,3F
 363+ AC08 CB 5E        	bit 3,(hl)
 364+ AC0A 20 0A        	jr nz,4F
 365+ AC0C C9           	ret
 366+ AC0D
 367+ AC0D CB E6        1 set 4,(hl)
 368+ AC0F C9           	ret
 369+ AC10 CB EE        2 set 5,(hl)
 370+ AC12 C9           	ret
 371+ AC13 CB F6        3 set 6,(hl)
 372+ AC15 C9           	ret
 373+ AC16 CB FE        4 set 7,(hl)
 374+ AC18 C9           	ret
 375+ AC19
 376+ AC19              ; ---------------------------------------------------------------------
 377+ AC19              ;
 378+ AC19              ;	23/01/24
 379+ AC19              ;
 380+ AC19              ;	Activamos el FLAG correspondiente a cada tipo de entidad.
 381+ AC19              ;
 382+ AC19              ;	bit_0 (Ctrl_4) ..... Entidad de (Tipo)_1.
 383+ AC19              ;	bit_1 (Ctrl_4) ..... Entidad de (Tipo)_2.
 384+ AC19              ;	bit_2 (Ctrl_4) ..... Entidad de (Tipo)_3.
 385+ AC19              ;	bit_3 (Ctrl_4) ..... Entidad de (Tipo)_4.
 386+ AC19
 387+ AC19              ;	INPUTS: HL contiene (Datos_de_nivel), (tipo de entidad que estamos iniciando).
 388+ AC19
 389+ AC19 7E           Activa_FLAG_Tipo_de_entidad ld a,(hl)
 390+ AC1A 3D           	dec a
 391+ AC1B 20 06        	jr nz,1F
 392+ AC1D
 393+ AC1D              ; --- Tipo_1
 394+ AC1D
 395+ AC1D 21 18 8A     	ld hl,Ctrl_4
 396+ AC20 CB C6        	set 0,(hl)
 397+ AC22 C9           	ret
 398+ AC23
 399+ AC23 3D           1 dec a
 400+ AC24 20 06        	jr nz,2F
 401+ AC26
 402+ AC26              ; --- Tipo_2
 403+ AC26
 404+ AC26 21 18 8A     	ld hl,Ctrl_4
 405+ AC29 CB CE        	set 1,(hl)
 406+ AC2B C9           	ret
 407+ AC2C
 408+ AC2C 3D           2 dec a
 409+ AC2D 20 06        	jr nz,3F
 410+ AC2F
 411+ AC2F              ; --- Tipo_3
 412+ AC2F
 413+ AC2F 21 18 8A     	ld hl,Ctrl_4
 414+ AC32 CB D6        	set 2,(hl)
 415+ AC34 C9           	ret
 416+ AC35
 417+ AC35              ; --- Tipo_3
 418+ AC35
 419+ AC35 21 18 8A     3 ld hl,Ctrl_4
 420+ AC38 CB D6        	set 2,(hl)
 421+ AC3A C9           	ret
 422+ AC3B
 423+ AC3B              ; ---------------------------------------------------------------------
 424+ AC3B              ;
 425+ AC3B              ;	22/01/24
 426+ AC3B
 427+ AC3B 21 18 8A     Busca_mov_masticados_segun_tipo ld hl,Ctrl_4
 428+ AC3E CB 46        	bit 0,(hl)
 429+ AC40 20 0E        	jr nz,1F
 430+ AC42
 431+ AC42 CB 4E        	bit 1,(hl)
 432+ AC44 20 10        	jr nz,2F
 433+ AC46
 434+ AC46 CB 56        	bit 2,(hl)
 435+ AC48 20 12        	jr nz,3F
 436+ AC4A
 437+ AC4A CB 5E        	bit 3,(hl)
 438+ AC4C 20 14        	jr nz,4F
 439+ AC4E 18 19        	jr 6F
 440+ AC50
 441+ AC50              ; Entidad_de_Tipo_1.
 442+ AC50
 443+ AC50 CB 66        1 bit 4,(hl)
 444+ AC52 28 15        	jr z,6F
 445+ AC54 18 10        	jr 5F
 446+ AC56
 447+ AC56              ; Entidad_de_Tipo_2.
 448+ AC56
 449+ AC56 CB 6E        2 bit 5,(hl)
 450+ AC58 28 0F        	jr z,6F
 451+ AC5A 18 0A        	jr 5F
 452+ AC5C
 453+ AC5C              ; Entidad_de_Tipo_3.
 454+ AC5C
 455+ AC5C CB 76        3 bit 6,(hl)
 456+ AC5E 28 09        	jr z,6F
 457+ AC60 18 04        	jr 5F
 458+ AC62
 459+ AC62              ; Entidad_de_Tipo_4.
 460+ AC62
 461+ AC62 CB 7E        4 bit 7,(hl)
 462+ AC64 28 03        	jr z,6F
 463+ AC66
 464+ AC66              ; Esta entidad TIENE MOV_MASTICADOS.
 465+ AC66
 466+ AC66 AF           5 xor a
 467+ AC67 3C           	inc a
 468+ AC68 C9           	ret
 469+ AC69
 470+ AC69              ; Esta entidad NO TIENE MOV_MASTICADOS.
 471+ AC69
 472+ AC69 AF           6 xor a
 473+ AC6A C9           	ret
 474+ AC6B
 475+ AC6B              ;	------------------------------------------------------------------------------------
 476+ AC6B              ;
 477+ AC6B              ;	12/01/24
 478+ AC6B              ;
 479+ AC6B              ;	INPUTS:	A contiene el (Tipo) de entidad.
 480+ AC6B              ;
 481+ AC6B              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 482+ AC6B              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 483+ AC6B
 484+ AC6B CB 27        Calcula_salto_en_BC sla a
 485+ AC6D D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 486+ AC6F 4F           	ld c,a
 487+ AC70 06 00        	ld b,0
 488+ AC72 C9           	ret
 489+ AC73
 490+ AC73              ; ------------------------------------------------------------------
 491+ AC73              ;
 492+ AC73              ;	19/1/24
 493+ AC73              ;
 494+ AC73              ;	Sitúa HL en el 1er .db de la definición de la entidad que tenemos que volcar en la bandeja DRAW.
 495+ AC73              ;	Actualiza (Datos_de_entidad) con esa dirección.
 496+ AC73
 497+ AC73 A7           Situa_en_datos_de_definicion and a
 498+ AC74 ED 4A        	adc hl,bc
 499+ AC76 CD FB 8D     	call Extrae_address
 500+ AC79 22 FC 89         ld (Datos_de_entidad),hl
 501+ AC7C C9           	ret
 502+ AC7D
 503+ AC7D              ; ------------------------------------------------------------------
 504+ AC7D
 505+ AC7D              ; Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 506+ AC7D              ; 	inc de
 507+ AC7D              ; 	inc de
 508+ AC7D              ; 	ex de,hl
 509+ AC7D              ; 	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 510+ AC7D              ; 	ret
 511+ AC7D
 512+ AC7D              ; ----------------------------------------------------------------------------------------------------------
 513+ AC7D              ;
 514+ AC7D              ;	24/6/24
 515+ AC7D              ;
 516+ AC7D              ;	Introduce una definición de entidad en la bandeja DRAW para generar los "movimientos masticados" de este tipo_
 517+ AC7D              ;	_ de entidad.
 518+ AC7D              ;
 519+ AC7D              ;	INPUTS: HL apunta al 1er .db de datos de la definición de la entidad.
 520+ AC7D              ;
 521+ AC7D              ;
 522+ AC7D              ;	MODIFICA: HL,DE y BC
 523+ AC7D
 524+ AC7D
 525+ AC7D              Definicion_de_entidad_a_bandeja_DRAW
 526+ AC7D
 527+ AC7D 11 B1 89     	ld de,Bandeja_DRAW	 						; DE apunta al 1er .db de la bandeja_DRAW, (Tipo).
 528+ AC80 7E           	ld a,(hl) 									; Volcamos Tipo.
 529+ AC81 12           	ld (de),a
 530+ AC82 23           	inc hl
 531+ AC83              ;
 532+ AC83 11 BF 89     	ld de,Filas									; Volcamos (Filas) y (Columns).
 533+ AC86 01 02 00     	ld bc,2
 534+ AC89 ED B0        	ldir										; Hemos volcado (Contador_de_vueltas), (Indice_Sprite_der) y (Indice_Sprite_izq).
 535+ AC8B              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 536+ AC8B 11 B4 89     	ld de,Contador_de_vueltas
 537+ AC8E 7E           	ld a,(hl)
 538+ AC8F 12           	ld (de),a
 539+ AC90 23           	inc hl										; Hemos volcado (Posicion_inicio) y (Cuad_objeto).
 540+ AC91
 541+ AC91 11 C6 89     	ld de,Indice_Sprite_der
 542+ AC94 01 04 00     	ld bc,4
 543+ AC97 ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 544+ AC99
 545+ AC99 11 CE 89     	ld de,Posicion_inicio
 546+ AC9C 01 03 00     	ld bc,3									; 3 FRAMES de explosión.!!!!!!!!!!!!!!
 547+ AC9F ED B0        	ldir 									; Vuelco (Frames_explosion).
 548+ ACA1
 549+ ACA1 11 B8 89     	ld de,Puntero_de_almacen_de_mov_masticados
 550+ ACA4 01 02 00     	ld bc,2
 551+ ACA7 ED B0        	ldir
 552+ ACA9
 553+ ACA9 C9           	ret
 554+ ACAA
 555+ ACAA              ; ----------------------------------------------------------------------------------------------------------
 556+ ACAA              ;
 557+ ACAA              ;	1/8/24
 558+ ACAA              ;
 559+ ACAA
 560+ ACAA              Parametros_de_bandeja_DRAW_a_caja
 561+ ACAA
 562+ ACAA 21 B1 89     	ld hl,Bandeja_DRAW
 563+ ACAD 01 0C 00     	ld bc,12
 564+ ACB0 ED B0        	ldir
 565+ ACB2 C9           	ret
 566+ ACB3
 567+ ACB3              ;---------------------------------------------------------------------------------------------------------------
 568+ ACB3              ;
 569+ ACB3              ;	5/1/24
 570+ ACB3              ;
 571+ ACB3              ;	INICIALIZA (Numero_parcial_de_entidades).
 572+ ACB3              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 573+ ACB3              ;
 574+ ACB3              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 575+ ACB3              ;
 576+ ACB3              ;	(Numero_parcial_de_entidades)="7".
 577+ ACB3              ;
 578+ ACB3              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 579+ ACB3              ;
 580+ ACB3              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 581+ ACB3              ;
 582+ ACB3              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 583+ ACB3              ;	MODIFICA: A y B.
 584+ ACB3              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 585+ ACB3
 586+ ACB3              Inicializa_Numero_parcial_de_entidades
 587+ ACB3
 588+ ACB3              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 589+ ACB3
 590+ ACB3 3A F7 89     	ld a,(Numero_de_entidades)
 591+ ACB6 A7           	and a
 592+ ACB7
 593+ ACB7              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 594+ ACB7              ;	jr z,$
 595+ ACB7              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 596+ ACB7
 597+ ACB7 20 03        	jr nz,3F
 598+ ACB9
 599+ ACB9              ; ---------- ---------- ----------
 600+ ACB9
 601+ ACB9              ;! RESET para pruebas. Omitir esta línea en modo normal.
 602+ ACB9              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 603+ ACB9
 604+ ACB9 CD AF AA     	call Inicializa_Nivel							 	 ; Inicializa el 1er NIVEL.
 605+ ACBC
 606+ ACBC              ; ---------- ---------- ----------
 607+ ACBC
 608+ ACBC 3A F7 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 609+ ACBF FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 610+ ACC1 38 08        	jr c,1F
 611+ ACC3
 612+ ACC3              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 613+ ACC3              ; Actualizamos variables.
 614+ ACC3
 615+ ACC3 3E 07        	ld a,7
 616+ ACC5 32 F8 89     	ld (Numero_parcial_de_entidades),a
 617+ ACC8 47           	ld b,a
 618+ ACC9 18 04        	jr 2F
 619+ ACCB
 620+ ACCB              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 621+ ACCB              ; (Numero_de_entidades)="0".
 622+ ACCB
 623+ ACCB 32 F8 89     1 ld (Numero_parcial_de_entidades),a
 624+ ACCE 47           	ld b,a
 625+ ACCF C9           2 ret
 626+ ACD0
# file closed: Rutinas_de_inicio_y_niveles.asm
2328  ACD0              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ ACD0              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ ACD0              ;
   3+ ACD0              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ ACD0              ;
   5+ ACD0              ; *****************************************************************************************************************************************************************************************
   6+ ACD0              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ ACD0
   8+ ACD0 7C           calcula_tercio ld a,h
   9+ ACD1 E6 18        	and $18
  10+ ACD3 CB 2F        	sra a
  11+ ACD5 CB 2F        	sra a
  12+ ACD7 CB 2F        	sra a
  13+ ACD9 C9           	ret
  14+ ACDA
# file closed: calcula_tercio.asm
2329  ACDA              	include "Cls.asm"
# file opened: Cls.asm
   1+ ACDA              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ ACDA              ;
   3+ ACDA              ;
   4+ ACDA              ;	CLS.
   5+ ACDA              ;
   6+ ACDA              ;	Limpia la pantalla y define sus atributos.
   7+ ACDA              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ ACDA              ;
   9+ ACDA              ;	COLORES: 0 ..... NEGRO
  10+ ACDA              ;    		 1 ..... AZUL
  11+ ACDA              ; 			 2 ..... ROJO
  12+ ACDA              ;			 3 ..... MAGENTA
  13+ ACDA              ; 			 4 ..... VERDE
  14+ ACDA              ; 			 5 ..... CIAN
  15+ ACDA              ;			 6 ..... AMARILLO
  16+ ACDA              ; 			 7 ..... BLANCO
  17+ ACDA              ;
  18+ ACDA              ;	INPUT: A contiene los atributos de pantalla.
  19+ ACDA              ;
  20+ ACDA              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ ACDA
  22+ ACDA
  23+ ACDA 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ ACDD 11 01 40     	LD DE,$4001
  25+ ACE0 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ ACE3 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ ACE5 ED B0        	LDIR
  28+ ACE7 01 FF 02     	LD BC,767
  29+ ACEA 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ ACEB ED B0        	LDIR
  31+ ACED C9           	ret
  32+ ACEE
# file closed: Cls.asm
2330  ACEE              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ ACEE              ; ------------------------------------------------------------------------
   2+ ACEE              ;
   3+ ACEE              ;	30/1/24
   4+ ACEE              ;
   5+ ACEE              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ ACEE              ;	Fila superior "0", Columna izquierda "0".
   7+ ACEE              ;
   8+ ACEE              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ ACEE              ;
  10+ ACEE              ;	Modifica: A,BC y DE.
  11+ ACEE
  12+ ACEE 7D           Genera_coordenadas ld a,l
  13+ ACEF E6 1F        	and $1f
  14+ ACF1 32 B2 89     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  15+ ACF4
  16+ ACF4 7C           	ld a,h 												; (Coordenada_y) = "0" si estamos por debajo del 1er scanline de pantalla, (ROM).
  17+ ACF5 FE 40        	cp $40
  18+ ACF7 38 1C        	jr c,4F
  19+ ACF9
  20+ ACF9 CD D0 AC     	call calcula_tercio
  21+ ACFC 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  22+ ACFD
  23+ ACFD 1E 00        	ld e,0
  24+ ACFF 7D           	ld a,l
  25+ AD00 E6 E0        	and $e0
  26+ AD02 28 01        	jr z,1F
  27+ AD04 04           	inc b
  28+ AD05
  29+ AD05 04           1 inc b
  30+ AD06 05           	dec b
  31+ AD07 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  32+ AD09              ;														; _ , salimos.
  33+ AD09 1C           3 inc e
  34+ AD0A D6 20        	sub 32
  35+ AD0C 20 FB        	jr nz,3B
  36+ AD0E 10 F5        	djnz 1B
  37+ AD10
  38+ AD10 7B           2 ld a,e
  39+ AD11 32 B3 89     	ld (Coordenada_y),a
  40+ AD14 C9           	ret
  41+ AD15
  42+ AD15 AF           4 xor a
  43+ AD16 32 B3 89     	ld (Coordenada_y),a
  44+ AD19 C9           	ret
  45+ AD1A
  46+ AD1A              ; ------------------------------------------------------------------------
  47+ AD1A              ;	28/05/23
  48+ AD1A              ;
  49+ AD1A              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  50+ AD1A              ;	Fila superior "0", Columna izquierda "0".
  51+ AD1A              ;
  52+ AD1A              ;	Input: HL contendrá la posición del proyectil en pantalla.
  53+ AD1A              ;	Output: DE contendrá las coordenadas del disparo:
  54+ AD1A              ;
  55+ AD1A              ;		DE="$120d"
  56+ AD1A              ;
  57+ AD1A              ;		D, (Coordenada_X), Columnas, $12
  58+ AD1A              ;		E, (Coordenada_y), Filas, $0d
  59+ AD1A              ;
  60+ AD1A              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  61+ AD1A
  62+ AD1A              ;	Modifica: A,BC y DE.
  63+ AD1A
  64+ AD1A
  65+ AD1A              Genera_coordenadas_disparo
  66+ AD1A
  67+ AD1A              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  68+ AD1A
  69+ AD1A 7D           	ld a,l
  70+ AD1B E6 1F        	and $1f
  71+ AD1D 57           	ld d,a 												; Columnas en D. Coordenada_X.
  72+ AD1E CD D0 AC     	call calcula_tercio
  73+ AD21 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  74+ AD22 1E 00        	ld e,0
  75+ AD24 7D           	ld a,l
  76+ AD25 E6 E0        	and $e0
  77+ AD27 28 01        	jr z,1F
  78+ AD29 04           	inc b
  79+ AD2A 1C           1 inc e
  80+ AD2B D6 20        	sub 32
  81+ AD2D 20 FB        	jr nz,1B
  82+ AD2F 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  83+ AD31 C9           	ret
  84+ AD32
# file closed: Genera_coordenadas.asm
2331  AD32              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ AD32              ; Relojes y temporizaciones.
   2+ AD32
   3+ AD32              ; ------------------------------------------------------
   4+ AD32              ;
   5+ AD32              ;	16/7/23
   6+ AD32              ;
   7+ AD32              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ AD32              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ AD32              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ AD32              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ AD32              ;
  12+ AD32              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ AD32              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ AD32
  15+ AD32              ; Disparo_entidad db 1
  16+ AD32              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ AD32              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ AD32
  19+ AD32              Habilita_disparos
  20+ AD32
  21+ AD32 7E           	ld a,(hl)
  22+ AD33 A7           	and a
  23+ AD34 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ AD35
  25+ AD35 EB           	ex de,hl
  26+ AD36
  27+ AD36 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ AD37 C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ AD38
  30+ AD38              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ AD38
  32+ AD38 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ AD39 7E           	ld a,(hl)
  34+ AD3A 23           	inc hl
  35+ AD3B 77           	ld (hl),a
  36+ AD3C
  37+ AD3C EB           	ex de,hl						; Habilitamos disparo.
  38+ AD3D 3E 01        	ld a,1
  39+ AD3F 77           	ld (hl),a
  40+ AD40 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
2332  AD41              	include "Genera_datos_de_impresion.asm"
# file opened: Genera_datos_de_impresion.asm
   1+ AD41              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AD41              ;
   3+ AD41              ;	11/03/24
   4+ AD41              ;
   5+ AD41              ;   (Scanlines_album_SP) se sitúa inicialmente al comienzo de Scanlines_album.
   6+ AD41              ;   DE contiene Puntero_objeto.
   7+ AD41              ;   IX contiene el Puntero de impresión.
   8+ AD41
   9+ AD41              Genera_datos_de_impresion
  10+ AD41
  11+ AD41 ED 73 FE 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  12+ AD45
  13+ AD45 31 B8 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  14+ AD48 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  15+ AD4A
  16+ AD4A 2A 11 8A         ld hl,(Scanlines_album_SP)
  17+ AD4D
  18+ AD4D 3E 05            ld a,5
  19+ AD4F 85               add l
  20+ AD50 6F               ld l,a
  21+ AD51
  22+ AD51 F9               ld sp,hl
  23+ AD52 22 11 8A         ld (Scanlines_album_SP),hl
  24+ AD55
  25+ AD55 21 00 00         ld hl,0
  26+ AD58
  27+ AD58 DD E5            push ix
  28+ AD5A 3B               dec sp
  29+ AD5B ED 7A            adc hl,sp
  30+ AD5D D5               push de
  31+ AD5E
  32+ AD5E              ; Recuperamos SP.
  33+ AD5E
  34+ AD5E ED 7B FE 89      ld sp,(Stack)
  35+ AD62
  36+ AD62 E5               push hl
  37+ AD63 F1               pop af
  38+ AD64 08               ex af,af'                                       ; AF´ almacena la casilla donde vamos a almacenar el nº de scanlines que vamos a generar a continuación.
  39+ AD65
  40+ AD65              ; Tenemos el encabezado listo.
  41+ AD65              ; Preparamos registros para generar los scanlines.
  42+ AD65
  43+ AD65 DD E5            push ix
  44+ AD67 E1               pop hl                                          ; 1er scanline en HL.
  45+ AD68
  46+ AD68 ED 5B 11 8A      ld de,(Scanlines_album_SP)
  47+ AD6C
  48+ AD6C              ; Voy a utilizar 2 rutinas para generar las líneas. Una será rápida y otra lenta. La lenta sólo se empleará cuando el sprite esté desapareciendo o apareciendo_
  49+ AD6C              ; _por la parte baja de la pantalla, en este caso no se podrán imprimir las 16 líneas pues entramos en attr. mem.
  50+ AD6C
  51+ AD6C 7C               ld a,h
  52+ AD6D FE 50            cp $50
  53+ AD6F 38 0D            jr c,Genera_scanlines_rapidos                   ; No hemos llegado a la parte baja de la pantalla.
  54+ AD71
  55+ AD71 20 05            jr nz,2F
  56+ AD73
  57+ AD73 7D               ld a,l
  58+ AD74 FE E0            cp $e0
  59+ AD76 38 06            jr c,Genera_scanlines_rapidos                   ; El 1er scanline está en una dirección $50xx. Si estamos en la FILA $C0-$DF, podemos imprimir todos los scanlines del sprite.
  60+ AD78
  61+ AD78 7D           2 ld a,l
  62+ AD79 FE C0            cp $c0
  63+ AD7B D2 0D AE         jp nc,Genera_scanlines_lentos                   ; En las 2 últimas líneas el Sprite sólo se imprime completo cuando el primer scanline está en una dirección $50xx.
  64+ AD7E
  65+ AD7E              Genera_scanlines_rapidos ; -------------------------------------------------------------------------------------------------------------------------------------
  66+ AD7E
  67+ AD7E CD EE 94         call NextScan
  68+ AD81 EB               ex de,hl
  69+ AD82
  70+ AD82 73               ld (hl),e
  71+ AD83 23               inc hl
  72+ AD84 72               ld (hl),d
  73+ AD85 23               inc hl
  74+ AD86
  75+ AD86 EB               ex de,hl
  76+ AD87
  77+ AD87 CD EE 94         call NextScan
  78+ AD8A EB               ex de,hl
  79+ AD8B
  80+ AD8B 73               ld (hl),e
  81+ AD8C 23               inc hl
  82+ AD8D 72               ld (hl),d
  83+ AD8E 23               inc hl
  84+ AD8F
  85+ AD8F EB               ex de,hl
  86+ AD90
  87+ AD90 CD EE 94         call NextScan
  88+ AD93 EB               ex de,hl
  89+ AD94
  90+ AD94 73               ld (hl),e
  91+ AD95 23               inc hl
  92+ AD96 72               ld (hl),d
  93+ AD97 23               inc hl
  94+ AD98
  95+ AD98 EB               ex de,hl
  96+ AD99
  97+ AD99 CD EE 94         call NextScan
  98+ AD9C EB               ex de,hl
  99+ AD9D
 100+ AD9D 73               ld (hl),e
 101+ AD9E 23               inc hl
 102+ AD9F 72               ld (hl),d
 103+ ADA0 23               inc hl
 104+ ADA1
 105+ ADA1 EB               ex de,hl
 106+ ADA2
 107+ ADA2 CD EE 94         call NextScan
 108+ ADA5 EB               ex de,hl
 109+ ADA6
 110+ ADA6 73               ld (hl),e
 111+ ADA7 23               inc hl
 112+ ADA8 72               ld (hl),d
 113+ ADA9 23               inc hl
 114+ ADAA
 115+ ADAA EB               ex de,hl
 116+ ADAB
 117+ ADAB CD EE 94         call NextScan
 118+ ADAE EB               ex de,hl
 119+ ADAF
 120+ ADAF 73               ld (hl),e
 121+ ADB0 23               inc hl
 122+ ADB1 72               ld (hl),d
 123+ ADB2 23               inc hl
 124+ ADB3
 125+ ADB3 EB               ex de,hl
 126+ ADB4
 127+ ADB4 CD EE 94         call NextScan
 128+ ADB7 EB               ex de,hl
 129+ ADB8
 130+ ADB8 73               ld (hl),e
 131+ ADB9 23               inc hl
 132+ ADBA 72               ld (hl),d
 133+ ADBB 23               inc hl
 134+ ADBC
 135+ ADBC EB               ex de,hl
 136+ ADBD
 137+ ADBD CD EE 94         call NextScan
 138+ ADC0 EB               ex de,hl
 139+ ADC1
 140+ ADC1 73               ld (hl),e
 141+ ADC2 23               inc hl
 142+ ADC3 72               ld (hl),d
 143+ ADC4 23               inc hl
 144+ ADC5
 145+ ADC5 EB               ex de,hl
 146+ ADC6
 147+ ADC6 CD EE 94         call NextScan
 148+ ADC9 EB               ex de,hl
 149+ ADCA
 150+ ADCA 73               ld (hl),e
 151+ ADCB 23               inc hl
 152+ ADCC 72               ld (hl),d
 153+ ADCD 23               inc hl
 154+ ADCE
 155+ ADCE EB               ex de,hl
 156+ ADCF
 157+ ADCF CD EE 94         call NextScan
 158+ ADD2 EB               ex de,hl
 159+ ADD3
 160+ ADD3 73               ld (hl),e
 161+ ADD4 23               inc hl
 162+ ADD5 72               ld (hl),d
 163+ ADD6 23               inc hl
 164+ ADD7
 165+ ADD7 EB               ex de,hl
 166+ ADD8
 167+ ADD8 CD EE 94         call NextScan
 168+ ADDB EB               ex de,hl
 169+ ADDC
 170+ ADDC 73               ld (hl),e
 171+ ADDD 23               inc hl
 172+ ADDE 72               ld (hl),d
 173+ ADDF 23               inc hl
 174+ ADE0
 175+ ADE0 EB               ex de,hl
 176+ ADE1
 177+ ADE1 CD EE 94         call NextScan
 178+ ADE4 EB               ex de,hl
 179+ ADE5
 180+ ADE5 73               ld (hl),e
 181+ ADE6 23               inc hl
 182+ ADE7 72               ld (hl),d
 183+ ADE8 23               inc hl
 184+ ADE9
 185+ ADE9 EB               ex de,hl
 186+ ADEA
 187+ ADEA CD EE 94         call NextScan
 188+ ADED EB               ex de,hl
 189+ ADEE
 190+ ADEE 73               ld (hl),e
 191+ ADEF 23               inc hl
 192+ ADF0 72               ld (hl),d
 193+ ADF1 23               inc hl
 194+ ADF2
 195+ ADF2 EB               ex de,hl
 196+ ADF3
 197+ ADF3 CD EE 94         call NextScan
 198+ ADF6 EB               ex de,hl
 199+ ADF7
 200+ ADF7 73               ld (hl),e
 201+ ADF8 23               inc hl
 202+ ADF9 72               ld (hl),d
 203+ ADFA 23               inc hl
 204+ ADFB
 205+ ADFB EB               ex de,hl
 206+ ADFC
 207+ ADFC CD EE 94         call NextScan
 208+ ADFF EB               ex de,hl
 209+ AE00
 210+ AE00 73               ld (hl),e
 211+ AE01 23               inc hl
 212+ AE02 72               ld (hl),d
 213+ AE03 23               inc hl
 214+ AE04
 215+ AE04              ; Todos los scanlines generados. actualizamos el puntero (Scanlines_album_SP).
 216+ AE04
 217+ AE04 22 11 8A         ld (Scanlines_album_SP),hl
 218+ AE07
 219+ AE07              ; Completamos la casilla pendiente, (define el nº total de scanlines).
 220+ AE07
 221+ AE07 08               ex af,af
 222+ AE08
 223+ AE08 F5               push af
 224+ AE09 E1               pop hl
 225+ AE0A
 226+ AE0A 36 10            ld (hl),16
 227+ AE0C
 228+ AE0C C9               ret
 229+ AE0D
 230+ AE0D              Genera_scanlines_lentos ; -------------------------------------------------------------------------------------------------------------------------------------
 231+ AE0D
 232+ AE0D              ; En 1er lugar calculamos el nº de scanlines que podemos imprimir.
 233+ AE0D
 234+ AE0D 3E 57            ld a,$57
 235+ AE0F 94               sub h
 236+ AE10 47               ld b,a
 237+ AE11
 238+ AE11 3E DF            ld a,$df
 239+ AE13 BD               cp l
 240+ AE14 38 04            jr c,1F
 241+ AE16
 242+ AE16 3E 08            ld a,8
 243+ AE18 80               add b
 244+ AE19 47               ld b,a
 245+ AE1A
 246+ AE1A              ; Tenemos en el registro B el nº de scanlines que podemos imprimir del sprite.
 247+ AE1A              ; Generamos scanlines de objeto que desaparece por la parte baja de la pantalla.
 248+ AE1A
 249+ AE1A 48           1 ld c,b
 250+ AE1B 0C               inc c
 251+ AE1C
 252+ AE1C 04               inc b
 253+ AE1D 05               dec b
 254+ AE1E 20 02            jr nz,3F
 255+ AE20
 256+ AE20 18 0B            jr 6F
 257+ AE22
 258+ AE22 CD EE 94     3 call NextScan
 259+ AE25 EB               ex de,hl
 260+ AE26
 261+ AE26 73               ld (hl),e
 262+ AE27 23               inc hl
 263+ AE28 72               ld (hl),d
 264+ AE29 23               inc hl
 265+ AE2A
 266+ AE2A EB               ex de,hl
 267+ AE2B 10 F5            djnz 3B
 268+ AE2D
 269+ AE2D ED 53 11 8A  6 ld (Scanlines_album_SP),de
 270+ AE31
 271+ AE31 08           5 ex af,af
 272+ AE32 F5               push af
 273+ AE33 E1               pop hl
 274+ AE34
 275+ AE34 71               ld (hl),c
 276+ AE35
 277+ AE35 C9               ret
 278+ AE36
# file closed: Genera_datos_de_impresion.asm
2333  AE36
2334  AE36              	include "Pinta_Sprites.asm"
# file opened: Pinta_Sprites.asm
   1+ AE36              ; -----------------------------------------------------------------------------
   2+ AE36              ;
   3+ AE36              ;   11/03/24
   4+ AE36              ;
   5+ AE36
   6+ AE36                  org $9119
   7+ 9119
   8+ 9119              Pinta_Sprites
   9+ 9119
  10+ 9119              ;    ld hl,(Scanlines_album_SP)
  11+ 9119              ;    call Extrae_address
  12+ 9119
  13+ 9119              ;    inc h
  14+ 9119              ;    dec h
  15+ 9119              ;    ret z                              ; Salimos si hemos terminado de pintar o el album de líneas está vacío.
  16+ 9119
  17+ 9119 ED 73 FE 89      ld (Stack),sp
  18+ 911D
  19+ 911D EB               ex de,hl                            ; HL se encuentra en el álbum de líneas.
  20+ 911E              ;                                       ; DE se encuentra en los datos del sprite.
  21+ 911E 2C               inc l
  22+ 911F 2C               inc l
  23+ 9120
  24+ 9120 46               ld b,(hl)                           ; B contiene el nº de scanlines a imprimir.
  25+ 9121
  26+ 9121 2C               inc l
  27+ 9122 F9               ld sp,hl                            ; El SP irá extrayendo scanlines en HL.
  28+ 9123
  29+ 9123              ;   Seleccionamos rutina de impresión:
  30+ 9123
  31+ 9123 3E 10            ld a,16
  32+ 9125 B8               cp b
  33+ 9126 C2 22 92         jp nz,Pinta_lento                   ; Si el sprite no se imprime completo utilizamos la 2ª rutina de pintado.
  34+ 9129
  35+ 9129              ;   Rutinas:
  36+ 9129
  37+ 9129              Pinta_rapido    ;   1520 t/states.
  38+ 9129
  39+ 9129 E1               pop hl
  40+ 912A
  41+ 912A 1A               ld a,(de)
  42+ 912B AE               xor (hl)
  43+ 912C 77               ld (hl),a
  44+ 912D 2C               inc l
  45+ 912E 1C               inc e
  46+ 912F 1A               ld a,(de)
  47+ 9130 AE               xor (hl)
  48+ 9131 77               ld (hl),a
  49+ 9132 2C               inc l
  50+ 9133 1C               inc e
  51+ 9134 1A               ld a,(de)
  52+ 9135 AE               xor (hl)
  53+ 9136 77               ld (hl),a
  54+ 9137 13               inc de
  55+ 9138
  56+ 9138 E1               pop hl
  57+ 9139
  58+ 9139 1A               ld a,(de)
  59+ 913A AE               xor (hl)
  60+ 913B 77               ld (hl),a
  61+ 913C 2C               inc l
  62+ 913D 1C               inc e
  63+ 913E 1A               ld a,(de)
  64+ 913F AE               xor (hl)
  65+ 9140 77               ld (hl),a
  66+ 9141 2C               inc l
  67+ 9142 1C               inc e
  68+ 9143 1A               ld a,(de)
  69+ 9144 AE               xor (hl)
  70+ 9145 77               ld (hl),a
  71+ 9146 13               inc de
  72+ 9147
  73+ 9147 E1               pop hl
  74+ 9148
  75+ 9148 1A               ld a,(de)
  76+ 9149 AE               xor (hl)
  77+ 914A 77               ld (hl),a
  78+ 914B 2C               inc l
  79+ 914C 1C               inc e
  80+ 914D 1A               ld a,(de)
  81+ 914E AE               xor (hl)
  82+ 914F 77               ld (hl),a
  83+ 9150 2C               inc l
  84+ 9151 1C               inc e
  85+ 9152 1A               ld a,(de)
  86+ 9153 AE               xor (hl)
  87+ 9154 77               ld (hl),a
  88+ 9155 13               inc de
  89+ 9156
  90+ 9156 E1               pop hl
  91+ 9157
  92+ 9157 1A               ld a,(de)
  93+ 9158 AE               xor (hl)
  94+ 9159 77               ld (hl),a
  95+ 915A 2C               inc l
  96+ 915B 1C               inc e
  97+ 915C 1A               ld a,(de)
  98+ 915D AE               xor (hl)
  99+ 915E 77               ld (hl),a
 100+ 915F 2C               inc l
 101+ 9160 1C               inc e
 102+ 9161 1A               ld a,(de)
 103+ 9162 AE               xor (hl)
 104+ 9163 77               ld (hl),a
 105+ 9164 13               inc de
 106+ 9165
 107+ 9165 E1               pop hl
 108+ 9166
 109+ 9166 1A               ld a,(de)
 110+ 9167 AE               xor (hl)
 111+ 9168 77               ld (hl),a
 112+ 9169 2C               inc l
 113+ 916A 1C               inc e
 114+ 916B 1A               ld a,(de)
 115+ 916C AE               xor (hl)
 116+ 916D 77               ld (hl),a
 117+ 916E 2C               inc l
 118+ 916F 1C               inc e
 119+ 9170 1A               ld a,(de)
 120+ 9171 AE               xor (hl)
 121+ 9172 77               ld (hl),a
 122+ 9173 13               inc de
 123+ 9174
 124+ 9174 E1               pop hl
 125+ 9175
 126+ 9175 1A               ld a,(de)
 127+ 9176 AE               xor (hl)
 128+ 9177 77               ld (hl),a
 129+ 9178 2C               inc l
 130+ 9179 1C               inc e
 131+ 917A 1A               ld a,(de)
 132+ 917B AE               xor (hl)
 133+ 917C 77               ld (hl),a
 134+ 917D 2C               inc l
 135+ 917E 1C               inc e
 136+ 917F 1A               ld a,(de)
 137+ 9180 AE               xor (hl)
 138+ 9181 77               ld (hl),a
 139+ 9182 13               inc de
 140+ 9183
 141+ 9183 E1               pop hl
 142+ 9184
 143+ 9184 1A               ld a,(de)
 144+ 9185 AE               xor (hl)
 145+ 9186 77               ld (hl),a
 146+ 9187 2C               inc l
 147+ 9188 1C               inc e
 148+ 9189 1A               ld a,(de)
 149+ 918A AE               xor (hl)
 150+ 918B 77               ld (hl),a
 151+ 918C 2C               inc l
 152+ 918D 1C               inc e
 153+ 918E 1A               ld a,(de)
 154+ 918F AE               xor (hl)
 155+ 9190 77               ld (hl),a
 156+ 9191 13               inc de
 157+ 9192
 158+ 9192 E1               pop hl
 159+ 9193
 160+ 9193 1A               ld a,(de)
 161+ 9194 AE               xor (hl)
 162+ 9195 77               ld (hl),a
 163+ 9196 2C               inc l
 164+ 9197 1C               inc e
 165+ 9198 1A               ld a,(de)
 166+ 9199 AE               xor (hl)
 167+ 919A 77               ld (hl),a
 168+ 919B 2C               inc l
 169+ 919C 1C               inc e
 170+ 919D 1A               ld a,(de)
 171+ 919E AE               xor (hl)
 172+ 919F 77               ld (hl),a
 173+ 91A0 13               inc de
 174+ 91A1
 175+ 91A1 E1               pop hl
 176+ 91A2
 177+ 91A2 1A               ld a,(de)
 178+ 91A3 AE               xor (hl)
 179+ 91A4 77               ld (hl),a
 180+ 91A5 2C               inc l
 181+ 91A6 1C               inc e
 182+ 91A7 1A               ld a,(de)
 183+ 91A8 AE               xor (hl)
 184+ 91A9 77               ld (hl),a
 185+ 91AA 2C               inc l
 186+ 91AB 1C               inc e
 187+ 91AC 1A               ld a,(de)
 188+ 91AD AE               xor (hl)
 189+ 91AE 77               ld (hl),a
 190+ 91AF 13               inc de
 191+ 91B0
 192+ 91B0 E1               pop hl
 193+ 91B1
 194+ 91B1 1A               ld a,(de)
 195+ 91B2 AE               xor (hl)
 196+ 91B3 77               ld (hl),a
 197+ 91B4 2C               inc l
 198+ 91B5 1C               inc e
 199+ 91B6 1A               ld a,(de)
 200+ 91B7 AE               xor (hl)
 201+ 91B8 77               ld (hl),a
 202+ 91B9 2C               inc l
 203+ 91BA 1C               inc e
 204+ 91BB 1A               ld a,(de)
 205+ 91BC AE               xor (hl)
 206+ 91BD 77               ld (hl),a
 207+ 91BE 13               inc de
 208+ 91BF
 209+ 91BF E1               pop hl
 210+ 91C0
 211+ 91C0 1A               ld a,(de)
 212+ 91C1 AE               xor (hl)
 213+ 91C2 77               ld (hl),a
 214+ 91C3 2C               inc l
 215+ 91C4 1C               inc e
 216+ 91C5 1A               ld a,(de)
 217+ 91C6 AE               xor (hl)
 218+ 91C7 77               ld (hl),a
 219+ 91C8 2C               inc l
 220+ 91C9 1C               inc e
 221+ 91CA 1A               ld a,(de)
 222+ 91CB AE               xor (hl)
 223+ 91CC 77               ld (hl),a
 224+ 91CD 13               inc de
 225+ 91CE
 226+ 91CE E1               pop hl
 227+ 91CF
 228+ 91CF 1A               ld a,(de)
 229+ 91D0 AE               xor (hl)
 230+ 91D1 77               ld (hl),a
 231+ 91D2 2C               inc l
 232+ 91D3 1C               inc e
 233+ 91D4 1A               ld a,(de)
 234+ 91D5 AE               xor (hl)
 235+ 91D6 77               ld (hl),a
 236+ 91D7 2C               inc l
 237+ 91D8 1C               inc e
 238+ 91D9 1A               ld a,(de)
 239+ 91DA AE               xor (hl)
 240+ 91DB 77               ld (hl),a
 241+ 91DC 13               inc de
 242+ 91DD
 243+ 91DD E1               pop hl
 244+ 91DE
 245+ 91DE 1A               ld a,(de)
 246+ 91DF AE               xor (hl)
 247+ 91E0 77               ld (hl),a
 248+ 91E1 2C               inc l
 249+ 91E2 1C               inc e
 250+ 91E3 1A               ld a,(de)
 251+ 91E4 AE               xor (hl)
 252+ 91E5 77               ld (hl),a
 253+ 91E6 2C               inc l
 254+ 91E7 1C               inc e
 255+ 91E8 1A               ld a,(de)
 256+ 91E9 AE               xor (hl)
 257+ 91EA 77               ld (hl),a
 258+ 91EB 13               inc de
 259+ 91EC
 260+ 91EC E1               pop hl
 261+ 91ED
 262+ 91ED 1A               ld a,(de)
 263+ 91EE AE               xor (hl)
 264+ 91EF 77               ld (hl),a
 265+ 91F0 2C               inc l
 266+ 91F1 1C               inc e
 267+ 91F2 1A               ld a,(de)
 268+ 91F3 AE               xor (hl)
 269+ 91F4 77               ld (hl),a
 270+ 91F5 2C               inc l
 271+ 91F6 1C               inc e
 272+ 91F7 1A               ld a,(de)
 273+ 91F8 AE               xor (hl)
 274+ 91F9 77               ld (hl),a
 275+ 91FA 13               inc de
 276+ 91FB
 277+ 91FB E1               pop hl
 278+ 91FC
 279+ 91FC 1A               ld a,(de)
 280+ 91FD AE               xor (hl)
 281+ 91FE 77               ld (hl),a
 282+ 91FF 2C               inc l
 283+ 9200 1C               inc e
 284+ 9201 1A               ld a,(de)
 285+ 9202 AE               xor (hl)
 286+ 9203 77               ld (hl),a
 287+ 9204 2C               inc l
 288+ 9205 1C               inc e
 289+ 9206 1A               ld a,(de)
 290+ 9207 AE               xor (hl)
 291+ 9208 77               ld (hl),a
 292+ 9209 13               inc de
 293+ 920A
 294+ 920A E1               pop hl
 295+ 920B
 296+ 920B 1A               ld a,(de)
 297+ 920C AE               xor (hl)
 298+ 920D 77               ld (hl),a
 299+ 920E 2C               inc l
 300+ 920F 1C               inc e
 301+ 9210 1A               ld a,(de)
 302+ 9211 AE               xor (hl)
 303+ 9212 77               ld (hl),a
 304+ 9213 2C               inc l
 305+ 9214 1C               inc e
 306+ 9215 1A               ld a,(de)
 307+ 9216 AE               xor (hl)
 308+ 9217 77               ld (hl),a
 309+ 9218 13               inc de
 310+ 9219
 311+ 9219 ED 73 11 8A      ld (Scanlines_album_SP),sp
 312+ 921D ED 7B FE 89      ld sp,(Stack)
 313+ 9221 C9               ret
 314+ 9222
 315+ 9222              Pinta_lento
 316+ 9222
 317+ 9222 E1           1 pop hl
 318+ 9223
 319+ 9223 1A               ld a,(de)
 320+ 9224 AE               xor (hl)
 321+ 9225 77               ld (hl),a
 322+ 9226 2C               inc l
 323+ 9227 1C               inc e
 324+ 9228 1A               ld a,(de)
 325+ 9229 AE               xor (hl)
 326+ 922A 77               ld (hl),a
 327+ 922B 2C               inc l
 328+ 922C 1C               inc e
 329+ 922D 1A               ld a,(de)
 330+ 922E AE               xor (hl)
 331+ 922F 77               ld (hl),a
 332+ 9230 13               inc de
 333+ 9231
 334+ 9231 10 EF            djnz 1B
 335+ 9233
 336+ 9233 ED 73 11 8A      ld (Scanlines_album_SP),sp
 337+ 9237 ED 7B FE 89      ld sp,(Stack)
 338+ 923B C9               ret
# file closed: Pinta_Sprites.asm
2335  923C              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 923C              ; ******************************************************************************************************************************************************************************************
   2+ 923C              ;
   3+ 923C              ; 26/06/23
   4+ 923C              ;
   5+ 923C              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 923C
   7+ 923C              Draw
   8+ 923C
   9+ 923C CD E2 94     	call Prepara_draw
  10+ 923F 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 9240 A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 9241 28 05        	jr z,2F
  13+ 9243
  14+ 9243 3A D0 89     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 9246 18 0C        	jr 1F
  16+ 9248
  17+ 9248 2A CE 89     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 924B 22 C1 89     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 924E CD DA 93     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 9251              ;													; _la esquina superior izquierda de la pantalla.
  21+ 9251
  22+ 9251 CD 81 99     	call Inicia_Puntero_mov							; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  23+ 9254
  24+ 9254 3A BE 89     1 ld a,(Ctrl_0)
  25+ 9257 CB 6F        	bit 5,a
  26+ 9259 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  27+ 925B
  28+ 925B CD 70 92     	call Comprueba_limite_horizontal
  29+ 925E CD 00 93     	call Comprueba_limite_vertical
  30+ 9261
  31+ 9261              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  32+ 9261              ; -----------------------
  33+ 9261              ; -----------------------
  34+ 9261              ; -----------------------
  35+ 9261
  36+ 9261 CD 56 94     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  37+ 9264 CD 8D 94     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  38+ 9267
  39+ 9267 3A BE 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 926A CB AF        	res 5,a											; _a ser de utilidad.
  41+ 926C 32 BE 89     	ld (Ctrl_0),a
  42+ 926F
  43+ 926F C9           	ret
  44+ 9270
  45+ 9270              ; *******************************************************************************************************************************************************************************************
  46+ 9270              ;	21/01/23
  47+ 9270              ;
  48+ 9270              ; 	Comprueba_limite_horizontal.
  49+ 9270              ;
  50+ 9270              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 9270              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 9270              ;
  53+ 9270              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 9270              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 9270              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 9270              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 9270
  58+ 9270
  59+ 9270
  60+ 9270 3A BE 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 9273 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 9275 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 9277 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 9279 32 BE 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 927C 18 09            jr 6F
  66+ 927E CB 5F        1 bit 3,a
  67+ 9280 28 0A            jr z,2F
  68+ 9282 E6 F7            and $f7
  69+ 9284 32 BE 89         ld (Ctrl_0),a
  70+ 9287 CD DA 93     6 call Inicializacion
  71+ 928A 18 5B            jr 5F
  72+ 928C E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 928D
  74+ 928D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 928D              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 928D
  77+ 928D EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 928E 2A D2 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9291 CD D0 AC     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9294 67           	ld h,a
  81+ 9295 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9296 CD D0 AC     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9299 67           	ld h,a
  84+ 929A A7           	and a
  85+ 929B ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 929D 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 929E 3A D0 89     	ld a,(Cuad_objeto)
  88+ 92A1 FE 02        	cp 2
  89+ 92A3 38 1E        	jr c,3F
  90+ 92A5 28 1C        	jr z,3F
  91+ 92A7 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 92A8 28 23            jr z,7F
  93+ 92AA 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 92AC 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 92AE E1           	pop hl
  96+ 92AF
  97+ 92AF              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 92AF              ; _para indicar con E="2" en caso necesario.
  99+ 92AF
 100+ 92AF E5               push hl
 101+ 92B0 C5               push bc
 102+ 92B1 CD D0 AC     	call calcula_tercio
 103+ 92B4 FE 01        	cp 1
 104+ 92B6 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 92B8 CD E8 92         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 92BB 28 26            jr z,9F
 107+ 92BD 38 24            jr c,9F
 108+ 92BF 1E 00        11 ld e,0
 109+ 92C1 18 22            jr 8F
 110+ 92C3 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 92C4 28 07        	jr z, 7F
 112+ 92C6 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 92C8 1E 00         	ld e,0
 114+ 92CA E1           	pop hl
 115+ 92CB 18 04        	jr 4F
 116+ 92CD 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 92CF 18 15            jr 10F
 118+ 92D1
 119+ 92D1              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 92D1              ; _para indicar con E="2" en caso necesario.
 121+ 92D1
 122+ 92D1 E5           4 push hl
 123+ 92D2 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 92D3 CD D0 AC     	call calcula_tercio
 125+ 92D6 FE 01        	cp 1
 126+ 92D8 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 92DA CD E8 92         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 92DD 28 04            jr z,9F
 129+ 92DF 30 02            jr nc,9F
 130+ 92E1 18 02        	jr 8F
 131+ 92E3 1E 02        9 ld e,2
 132+ 92E5 C1           8 pop bc
 133+ 92E6 E1           10 pop hl
 134+ 92E7 C9           5 ret
 135+ 92E8
 136+ 92E8              ; --------------------
 137+ 92E8              ;
 138+ 92E8              ; 25/08/22
 139+ 92E8
 140+ 92E8 CD D0 AC     Comprueba_centro call calcula_tercio
 141+ 92EB 67               ld h,a
 142+ 92EC 08           	ex af,af
 143+ 92ED FE 02        	cp 2
 144+ 92EF 38 07        	jr c,1F
 145+ 92F1 28 05        	jr z,1F
 146+ 92F3 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 92F6 18 03        	jr 2F
 148+ 92F8 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 92FB 08           2 ex af,af
 150+ 92FC A7               and a
 151+ 92FD ED 42            sbc hl,bc
 152+ 92FF C9               ret
 153+ 9300
 154+ 9300              ; *********************************************************************************************************************************************************************************************
 155+ 9300              ;
 156+ 9300              ;   16/8/22
 157+ 9300              ;
 158+ 9300              ;	Comprueba_limite_vertical
 159+ 9300              ;
 160+ 9300              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 9300              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 9300              ;
 163+ 9300
 164+ 9300 2A C1 89     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9303 7D           	ld a,l
 166+ 9304 E6 1F        	and $1F
 167+ 9306 57           	ld d,a
 168+ 9307 3A D4 89     	ld a,(Limite_vertical)
 169+ 930A BA           	cp d 											; Límite - Posición.
 170+ 930B 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 930C 3A D0 89     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 930F CB 47        	bit 0,a
 173+ 9311 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9313
 175+ 9313              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9313
 177+ 9313 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9314 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9316
 180+ 9316              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9316              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9316
 183+ 9316 3A B2 89         ld a,(Coordenada_X)
 184+ 9319 16 0F            ld d,Centro_izquierda
 185+ 931B A7               and a
 186+ 931C 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 931D 28 1E            jr z,3F
 188+ 931F 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 9321              ;                                                    ; _salimos sin modificar nada.
 190+ 9321 18 0E            jr 2F
 191+ 9323 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 9324 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 9326
 194+ 9326              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 9326              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 9326
 197+ 9326 3A B2 89         ld a,(Coordenada_X)
 198+ 9329 16 10            ld d,Centro_derecha
 199+ 932B A7               and a
 200+ 932C 92               sub d
 201+ 932D 28 0E            jr z,3F
 202+ 932F 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 9331              ;                                                    ; _salimos sin modificar nada.
 204+ 9331 CB 43        2 bit 0,e
 205+ 9333 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 9335 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 9336 CD CA 93         call Modificaccionne
 208+ 9339 C1           	pop bc
 209+ 933A CD DA 93         call Inicializacion
 210+ 933D C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 933E
 212+ 933E              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 933E
 214+ 933E C5           4 push bc
 215+ 933F 01 C0 89     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 9342 0A           	ld a,(bc)
 217+ 9343 3D           	dec a
 218+ 9344 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 9345 7D           	ld a,l
 220+ 9346 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 9347 CB 47        	bit 0,a
 222+ 9349 28 03        	jr z,5F
 223+ 934B 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 934C 18 2E        	jr 7F
 225+ 934E
 226+ 934E              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 934E
 228+ 934E 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 934F F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 9350 3A BE 89     	ld a,(Ctrl_0)
 231+ 9353 CB 4F        	bit 1,a
 232+ 9355 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 9357 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 9358
 235+ 9358              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 9358
 237+ 9358 1C               inc e
 238+ 9359 1D               dec e
 239+ 935A 20 07            jr nz,12F
 240+ 935C 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 935D 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 935E 22 C1 89     	ld (Posicion_actual),hl
 243+ 9361 18 44        13 jr 9F
 244+ 9363 CB 43        12 bit 0,e
 245+ 9365 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 9367              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 9367 C1           	pop bc
 248+ 9368 18 D3        	jr 3B
 249+ 936A 80           14 add b
 250+ 936B 6F               ld l,a
 251+ 936C 22 C1 89     	ld (Posicion_actual),hl
 252+ 936F CD CA 93         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 9372 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 9374 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 9376 32 BE 89         ld (Ctrl_0),a
 256+ 9379 F1           	pop af
 257+ 937A 18 2B        	jr 9F
 258+ 937C
 259+ 937C              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 937C
 261+ 937C F5           7 push af
 262+ 937D 3A BE 89     	ld a,(Ctrl_0)
 263+ 9380 CB 47        	bit 0,a
 264+ 9382 20 1D        	jr nz,8F
 265+ 9384 F1           	pop af
 266+ 9385
 267+ 9385              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9385
 269+ 9385 1C           	inc e
 270+ 9386 1D               dec e
 271+ 9387 20 07            jr nz,10F
 272+ 9389 90           	sub b
 273+ 938A 6F               ld l,a
 274+ 938B 22 C1 89     	ld (Posicion_actual),hl
 275+ 938E 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 9390              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 9390 CB 43        10 bit 0,e
 278+ 9392 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9394              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9394 C1           	pop bc
 281+ 9395 18 A6        	jr 3B
 282+ 9397 90           16 sub b
 283+ 9398 6F               ld l,a
 284+ 9399 22 C1 89     	ld (Posicion_actual),hl
 285+ 939C CD CA 93         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 939F 18 06            jr 9F
 287+ 93A1 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 93A3 32 BE 89         ld (Ctrl_0),a
 289+ 93A6 F1           	pop af
 290+ 93A7 C1           9 pop bc
 291+ 93A8 1E 00        	ld e,0
 292+ 93AA CD DA 93         call Inicializacion
 293+ 93AD F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 93AE 08           	ex af,af
 295+ 93AF F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 93B0 18 8B            jr 3B
 297+ 93B2
 298+ 93B2              ; --------------------
 299+ 93B2
 300+ 93B2 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 93B4 CD FD 94     1 call PreviousScan
 302+ 93B7 10 FB            djnz 1B
 303+ 93B9 22 C1 89     	ld (Posicion_actual),hl
 304+ 93BC AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 93BD C9           	ret
 306+ 93BE
 307+ 93BE              ; --------------------
 308+ 93BE
 309+ 93BE 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 93C0 CD EE 94     1 call NextScan
 311+ 93C3 10 FB            djnz 1B
 312+ 93C5 22 C1 89     	ld (Posicion_actual),hl
 313+ 93C8 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 93C9 C9           	ret
 315+ 93CA
 316+ 93CA              ; --------------------
 317+ 93CA              ;
 318+ 93CA              ;	22/01/23
 319+ 93CA              ;
 320+ 93CA              ;	E="1". Hemos cambiado de cuadrante.
 321+ 93CA              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 93CA              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 93CA
 324+ 93CA
 325+ 93CA              Modificaccionne
 326+ 93CA
 327+ 93CA 3A D0 89     	ld a,(Cuad_objeto)
 328+ 93CD FE 02        	cp 2
 329+ 93CF CC B2 93         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 93D2 DC B2 93         call c,Modifica_Pos_actual
 331+ 93D5 C8           	ret z
 332+ 93D6 CD BE 93         call Modifica_Pos_actual2
 333+ 93D9 C9               ret
 334+ 93DA
 335+ 93DA              ; *************************************************************************************************************************************************************************************************
 336+ 93DA              ;
 337+ 93DA              ;	13/8/22
 338+ 93DA              ;
 339+ 93DA              ;	Inicializacion
 340+ 93DA              ;
 341+ 93DA              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 93DA              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 93DA              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 93DA              ;
 345+ 93DA              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 93DA              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 93DA              ;	_ desaparece/aparece.
 348+ 93DA
 349+ 93DA              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 93DA              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 93DA              ;
 352+ 93DA              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 93DA              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 93DA              ; 		   [E] ="0"
 355+ 93DA
 356+ 93DA              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 93DA
 358+ 93DA CD D0 AC     Inicializacion call calcula_tercio
 359+ 93DD 28 36        	jr z,primit
 360+ 93DF E6 02        	and 2
 361+ 93E1 20 07        	jr nz,segmit
 362+ 93E3 7D           	ld a,l
 363+ 93E4 FE 7F        	cp $7f
 364+ 93E6 38 2D        	jr c,primit
 365+ 93E8 28 2B        	jr z,primit
 366+ 93EA CD 50 94     segmit call column
 367+ 93ED 38 13        	jr c,tercuad
 368+ 93EF 3E 04        cuarcuad ld a,4
 369+ 93F1 32 D0 89     	ld (Cuad_objeto),a
 370+ 93F4 21 20 48     	ld hl,$4820
 371+ 93F7 22 D2 89     	ld (Limite_horizontal),hl
 372+ 93FA 21 D4 89     	ld hl,Limite_vertical
 373+ 93FD 36 0D        	ld (hl),$0d
 374+ 93FF 08           	ex af,af
 375+ 9400 18 3C        	jr 1F
 376+ 9402              tercuad
 377+ 9402 3E 03        	ld a,3
 378+ 9404 32 D0 89     	ld (Cuad_objeto),a
 379+ 9407 21 20 48     	ld hl,$4820
 380+ 940A 22 D2 89     	ld (Limite_horizontal),hl
 381+ 940D 21 D4 89     	ld hl,Limite_vertical
 382+ 9410 36 12        	ld (hl),$12
 383+ 9412 08           	ex af,af
 384+ 9413 18 29        	jr 1F
 385+ 9415 CD 50 94     primit call column
 386+ 9418 38 13        	jr c, primcuad
 387+ 941A              segcuad
 388+ 941A 3E 02        	ld a,2
 389+ 941C 32 D0 89     	ld (Cuad_objeto),a
 390+ 941F 21 C0 4F     	ld hl,$4fc0
 391+ 9422 22 D2 89     	ld (Limite_horizontal),hl
 392+ 9425 21 D4 89     	ld hl,Limite_vertical
 393+ 9428 36 0D        	ld (hl),$0d
 394+ 942A 08           	ex af,af
 395+ 942B 18 11        	jr 1F
 396+ 942D              primcuad
 397+ 942D 3E 01        	ld a,1
 398+ 942F 32 D0 89     	ld (Cuad_objeto),a
 399+ 9432 21 C0 4F     	ld hl,$4fc0
 400+ 9435 22 D2 89     	ld (Limite_horizontal),hl
 401+ 9438 21 D4 89     	ld hl,Limite_vertical
 402+ 943B 36 12        	ld (hl),$12
 403+ 943D 08           	ex af,af
 404+ 943E
 405+ 943E C5           1 push bc
 406+ 943F E5           	push hl
 407+ 9440 D5           	push de
 408+ 9441
 409+ 9441 2A C1 89     	ld hl,(Posicion_actual)
 410+ 9444 CD EE AC     	call Genera_coordenadas
 411+ 9447
 412+ 9447 D1           	pop de
 413+ 9448 E1           	pop hl
 414+ 9449 C1           	pop bc
 415+ 944A
 416+ 944A 21 BE 89     	ld hl,Ctrl_0
 417+ 944D CB EE        	set 5,(hl)
 418+ 944F C9           	ret
 419+ 9450
 420+ 9450              ; ------------------------------------------------------------------------------------------------------------------
 421+ 9450
 422+ 9450              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 423+ 9450              ;
 424+ 9450              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 425+ 9450
 426+ 9450 7D           column ld a,l
 427+ 9451 E6 1F        	and $1f
 428+ 9453 FE 10         	cp $10
 429+ 9455 C9            	ret
 430+ 9456
 431+ 9456              ; --------------------------------------------------------------------------------------------------------------------
 432+ 9456              ;
 433+ 9456              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 434+ 9456              ;
 435+ 9456              ; 14/12/22
 436+ 9456              ;
 437+ 9456              ;	Modifica: A y BC.
 438+ 9456
 439+ 9456 3A D0 89     calcula_CColumnass ld a,(Cuad_objeto)
 440+ 9459 E6 01        	and 1
 441+ 945B 28 17        	jr z,1F
 442+ 945D
 443+ 945D              ; Nos encontramos en la parte izquierda de la pantalla
 444+ 945D
 445+ 945D 3A B2 89     	ld a,(Coordenada_X)
 446+ 9460 47           	ld b,a
 447+ 9461 04           	inc b											; (Coordenada_X)+1 en B.
 448+ 9462 79           	ld a,c
 449+ 9463 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 450+ 9464 38 08        	jr c,2F
 451+ 9466 47           	ld b,a
 452+ 9467 79           	ld a,c
 453+ 9468 90           	sub b
 454+ 9469 32 D1 89     	ld (Columnas),a
 455+ 946C 18 1B        	jr 4F
 456+ 946E 79           2 ld a,c
 457+ 946F 32 D1 89     	ld (Columnas),a
 458+ 9472 18 15        	jr 4F
 459+ 9474
 460+ 9474              ; Nos encontramos en la parte derecha de la pantalla.
 461+ 9474
 462+ 9474 3A B2 89     1 ld a,(Coordenada_X)
 463+ 9477 81           	add c
 464+ 9478 3D           	dec a
 465+ 9479 D6 1F        	sub $1f
 466+ 947B 38 08        	jr c,3F
 467+ 947D 47           	ld b,a
 468+ 947E 79           	ld a,c
 469+ 947F 90           	sub b
 470+ 9480 32 D1 89     	ld (Columnas),a
 471+ 9483 18 04        	jr 4F
 472+ 9485 79           3 ld a,c
 473+ 9486 32 D1 89     	ld (Columnas),a
 474+ 9489 D9           4 exx
 475+ 948A 4F           	ld c,a
 476+ 948B D9           	exx
 477+ 948C C9            ret
 478+ 948D
 479+ 948D              ; --------------------------------------------------------------------------------------------------------------------
 480+ 948D              ;
 481+ 948D              ;   19/7/23
 482+ 948D              ;
 483+ 948D              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 484+ 948D              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 485+ 948D              ;
 486+ 948D              ;	OUTPUT: IX Contienen el puntero de impresión.
 487+ 948D              ;			HL e IY Contienen (Puntero_objeto).
 488+ 948D              ;
 489+ 948D              ;	DESTRUYE: HL,B Y A.
 490+ 948D
 491+ 948D 3A D0 89     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 492+ 9490 FE 02        	cp 2
 493+ 9492 38 18        	jr c,1F
 494+ 9494 28 16        	jr z,1F
 495+ 9496 E6 01        	and 1
 496+ 9498 28 0D        	jr z,3F
 497+ 949A
 498+ 949A              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 499+ 949A
 500+ 949A CD D6 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 501+ 949D
 502+ 949D 7D           9 ld a,l
 503+ 949E E6 1F        	and $1f
 504+ 94A0 28 2A        	jr z,7F
 505+ 94A2 2B           	dec hl
 506+ 94A3 10 F8        	djnz 9B
 507+ 94A5 18 25        	jr 7F
 508+ 94A7
 509+ 94A7              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 510+ 94A7
 511+ 94A7 2A C1 89     3 ld hl,(Posicion_actual)
 512+ 94AA 18 20        	jr 7F
 513+ 94AC
 514+ 94AC 28 14        1 jr z,2F
 515+ 94AE
 516+ 94AE              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 517+ 94AE
 518+ 94AE CD D6 94     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 519+ 94B1
 520+ 94B1 7D           4 ld a,l
 521+ 94B2 E6 1F        	and $1f
 522+ 94B4 28 03        	jr z,6F
 523+ 94B6 2B           	dec hl
 524+ 94B7 10 F8        	djnz 4B
 525+ 94B9 06 0F        6 ld b,15
 526+ 94BB CD FD 94     5 call PreviousScan
 527+ 94BE 10 FB        	djnz 5B
 528+ 94C0 18 0A        	jr 7F
 529+ 94C2
 530+ 94C2              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 531+ 94C2
 532+ 94C2 CD D6 94     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 533+ 94C5 06 0F        	ld b,15
 534+ 94C7 CD FD 94     8 call PreviousScan
 535+ 94CA 10 FB        	djnz 8B
 536+ 94CC
 537+ 94CC E5           7 push hl
 538+ 94CD DD E1        	pop ix
 539+ 94CF
 540+ 94CF 2A C3 89     	ld hl,(Puntero_objeto)
 541+ 94D2 E5           	push hl
 542+ 94D3 FD E1        	pop iy
 543+ 94D5
 544+ 94D5 C9           	ret
 545+ 94D6
 546+ 94D6              ; --------------------------------------------------------------------------------------------------------------------
 547+ 94D6              ;
 548+ 94D6              ;	2/1/23
 549+ 94D6              ;
 550+ 94D6              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 94D6              ;
 552+ 94D6              ;	Tras esta rutina tenemos:
 553+ 94D6              ;
 554+ 94D6              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 94D6              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 94D6              ;
 557+ 94D6              ;	DESTRUYE!!!!! HL,B y A.
 558+ 94D6
 559+ 94D6 2A C1 89     Operandos ld hl,(Posicion_actual)
 560+ 94D9 3A D1 89     	ld a,(Columnas)
 561+ 94DC 3D           	dec a
 562+ 94DD 20 01        	jr nz,1F
 563+ 94DF 3C           	inc a
 564+ 94E0 47           1 ld b,a
 565+ 94E1 C9           	ret
 566+ 94E2
 567+ 94E2              ; --------------------------------------------------------------------------------------------------------------------
 568+ 94E2              ;
 569+ 94E2              ;	Prepara_draw
 570+ 94E2              ;
 571+ 94E2              ;	Es una rutina de carga.
 572+ 94E2              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 573+ 94E2              ;
 574+ 94E2              ;	FUNCIONAMIENTO:
 575+ 94E2              ;
 576+ 94E2              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 577+ 94E2              ;	- LD (Posicion_actual) del objeto en [HL].
 578+ 94E2              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 579+ 94E2              ;
 580+ 94E2              ;	DESTRUYE:
 581+ 94E2              ;
 582+ 94E2              ;	Logicamente, BC,HL y E quedan destruidos.
 583+ 94E2
 584+ 94E2 21 BF 89     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 585+ 94E5 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 586+ 94E6 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 587+ 94E7 4E           	ld c,(hl)
 588+ 94E8 2A C1 89     	ld hl,(Posicion_actual)
 589+ 94EB 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 590+ 94ED C9           	ret
 591+ 94EE
 592+ 94EE              ;----------------------------------------------------------------------------------------------------------------
 593+ 94EE              ;
 594+ 94EE              ;	5/08/22
 595+ 94EE              ;
 596+ 94EE              ;   NextScan.
 597+ 94EE              ;
 598+ 94EE              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 599+ 94EE              ;
 600+ 94EE              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 601+ 94EE              ;
 602+ 94EE              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 603+ 94EE              ;
 604+ 94EE              ;       DESTRUIDOS: AF y HL !!!
 605+ 94EE              ;
 606+ 94EE              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 607+ 94EE              ;
 608+ 94EE
 609+ 94EE 24           NextScan inc h          ; Incrementamos el scanline.
 610+ 94EF 7C               ld a,h
 611+ 94F0 E6 07            and 7
 612+ 94F2 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 613+ 94F3
 614+ 94F3 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 615+ 94F4 C6 20            add a,$20           ; Vamos a comprobarlo...
 616+ 94F6 6F               ld l,a
 617+ 94F7 D8               ret c               ; Salimos si se produce el cambio de tercio.
 618+ 94F8
 619+ 94F8 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 620+ 94F9 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 621+ 94FB 67               ld h,a
 622+ 94FC C9               ret
 623+ 94FD
 624+ 94FD              ;----------------------------------------------------------------------------------------------------------------
 625+ 94FD              ;
 626+ 94FD              ;	5/08/22
 627+ 94FD              ;
 628+ 94FD              ;   PreviousScan.
 629+ 94FD              ;
 630+ 94FD              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 631+ 94FD              ;
 632+ 94FD              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 633+ 94FD              ;
 634+ 94FD              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 635+ 94FD              ;
 636+ 94FD              ;       DESTRUIDOS: AF y HL !!!
 637+ 94FD              ;
 638+ 94FD              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 639+ 94FD              ;
 640+ 94FD
 641+ 94FD 7C           PreviousScan ld a,h
 642+ 94FE 25               dec h               ; Dec H.
 643+ 94FF E6 07            and 7
 644+ 9501 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 645+ 9502
 646+ 9502 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 647+ 9503 D6 20            sub $20             ; Vamos a comprobarlo...
 648+ 9505 6F               ld l,a
 649+ 9506 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 650+ 9507
 651+ 9507 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 652+ 9508 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 653+ 950A 67               ld h,a
 654+ 950B C9               ret
 655+ 950C
 656+ 950C
 657+ 950C
 658+ 950C
 659+ 950C
 660+ 950C
 661+ 950C
 662+ 950C
 663+ 950C
 664+ 950C
 665+ 950C
 666+ 950C
# file closed: Draw_XOR.asm
2336  950C              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 950C
   2+ 950C              ; ******************************************************************************************************************************************************************************************
   3+ 950C              ;
   4+ 950C              ;   20/05/23
   5+ 950C              ;
   6+ 950C              ;	Recompone_posicion_inicio
   7+ 950C              ;
   8+ 950C              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   9+ 950C              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
  10+ 950C              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  11+ 950C              ;	_ a una u otra rutina.
  12+ 950C
  13+ 950C              Recompone_posicion_inicio
  14+ 950C
  15+ 950C 2A CE 89     	ld hl,(Posicion_inicio)
  16+ 950F 7D           	ld a,l
  17+ 9510 E6 1F        	and $1f
  18+ 9512 28 16        	jr z,1F
  19+ 9514
  20+ 9514 FE 1F        	cp $1f
  21+ 9516 28 0D        	jr z,3F
  22+ 9518
  23+ 9518 21 BD 89     	ld hl,Ctrl_2
  24+ 951B CB C6        	set 0,(hl)
  25+ 951D 2A C3 89     	ld hl,(Puntero_objeto)
  26+ 9520 22 EF 89     	ld (Repone_puntero_objeto),hl
  27+ 9523 18 08        	jr 2F
  28+ 9525
  29+ 9525 CD D3 96     3 call Mov_left
  30+ 9528 18 03        	jr 2F
  31+ 952A
  32+ 952A CD B0 95     1 call Mov_right
  33+ 952D 21 E0 EA     2 ld hl,Sprite_vacio
  34+ 9530 22 C3 89     	ld (Puntero_objeto),hl
  35+ 9533 C9           	ret
  36+ 9534
  37+ 9534              ; ******************************************************************************************************************************************************************************************
  38+ 9534              ;
  39+ 9534              ;   27/05/23
  40+ 9534              ;
  41+ 9534              ;	Mov_down
  42+ 9534              ;
  43+ 9534              ; 	Mueve el Sprite X px hacia abajo.
  44+ 9534              ;
  45+ 9534              ;
  46+ 9534              Mov_down
  47+ 9534
  48+ 9534 CD 9E 95     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  49+ 9537              ;																	; _ repone (Puntero_objeto).
  50+ 9537 21 BE 89     	ld hl,Ctrl_0
  51+ 953A CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  52+ 953C              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  53+ 953C              ; 																	; _ en el caso de que no lo haya.
  54+ 953C 3A D9 89     	ld a,(Vel_down)
  55+ 953F 47           	ld b,a
  56+ 9540 2A C1 89         ld hl,(Posicion_actual)
  57+ 9543 CD D0 AC     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  58+ 9546 E6 02        	and 2
  59+ 9548 28 17        	jr z,1F
  60+ 954A
  61+ 954A              ; Nos encontramos en el último tercio de pantalla.
  62+ 954A              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  63+ 954A
  64+ 954A 7C           	ld a,h
  65+ 954B FE 57        	cp $57
  66+ 954D 20 12        	jr nz,1F
  67+ 954F
  68+ 954F 7D           	ld a,l
  69+ 9550 C6 20        	add $20
  70+ 9552 30 0D        	jr nc,1F
  71+ 9554
  72+ 9554              ; ------------------------------
  73+ 9554              ;
  74+ 9554              ;	12/01/24
  75+ 9554
  76+ 9554              ;	call Reaparece_arriba
  77+ 9554 CD 60 98     	call Reinicio
  78+ 9557
  79+ 9557              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  80+ 9557
  81+ 9557 3A 17 8A     	ld a,(Ctrl_3)
  82+ 955A CB CF        	set 1,a
  83+ 955C 32 17 8A     	ld (Ctrl_3),a
  84+ 955F
  85+ 955F 18 08        	jr 3F
  86+ 9561              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  87+ 9561              ;															; _a la siguiente entidad como "Entidad_guía".
  88+ 9561              ; ------------------------------
  89+ 9561
  90+ 9561 CD EE 94     1 call NextScan
  91+ 9564 22 C1 89     	ld (Posicion_actual),hl
  92+ 9567 10 DA            djnz 2B
  93+ 9569 CD EE AC     3 call Genera_coordenadas
  94+ 956C C9           	ret
  95+ 956D
  96+ 956D              ; ******************************************************************************************************************************************************************************************
  97+ 956D              ;
  98+ 956D              ;   27/05/23
  99+ 956D              ;
 100+ 956D              ;	Mov_up
 101+ 956D              ;
 102+ 956D              ; 	Mueve el Sprite hacia arriba.
 103+ 956D              ;
 104+ 956D              ;
 105+ 956D              Mov_up
 106+ 956D
 107+ 956D CD 9E 95     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 108+ 9570              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 109+ 9570 21 BE 89     	ld hl,Ctrl_0
 110+ 9573 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 111+ 9575              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 112+ 9575              ; 																		; _ en el caso de que no lo haya.
 113+ 9575 3A D8 89     	ld a,(Vel_up)
 114+ 9578 47           	ld b,a
 115+ 9579 2A C1 89     	ld hl,(Posicion_actual)
 116+ 957C CD D0 AC     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 117+ 957F A7           	and a
 118+ 9580 20 10        	jr nz,1F
 119+ 9582
 120+ 9582              ; Nos encontramos en el 1er tercio de pantalla.
 121+ 9582              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 122+ 9582
 123+ 9582 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 124+ 9583 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 125+ 9585 20 0B            jr nz,1F
 126+ 9587 7D               ld a,l
 127+ 9588 D6 20            sub $20
 128+ 958A 30 06            jr nc,1F
 129+ 958C 25               dec h
 130+ 958D
 131+ 958D              ; -----------------------------
 132+ 958D CD 41 98         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 133+ 9590              ;	call Reinicio
 134+ 9590              ; -----------------------------
 135+ 9590
 136+ 9590 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 137+ 9592 CD FD 94     1 call PreviousScan
 138+ 9595 22 C1 89     	ld (Posicion_actual),hl
 139+ 9598 10 E2            djnz 3B
 140+ 959A CD EE AC     2 call Genera_coordenadas
 141+ 959D C9           	ret
 142+ 959E
 143+ 959E              ; -----------------------------
 144+ 959E              ;
 145+ 959E              ;	27/5/23
 146+ 959E              ;
 147+ 959E              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 148+ 959E              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 149+ 959E              ;
 150+ 959E              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 151+ 959E              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 152+ 959E              ;
 153+ 959E              ;	Modifica: A y (Puntero_objeto).
 154+ 959E
 155+ 959E 3A BD 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 156+ 95A1 CB 47        	bit 0,a
 157+ 95A3 C8           	ret z
 158+ 95A4 CB 87        	res 0,a
 159+ 95A6 32 BD 89     	ld (Ctrl_2),a
 160+ 95A9 2A EF 89     	ld hl,(Repone_puntero_objeto)
 161+ 95AC 22 C3 89     	ld (Puntero_objeto),hl
 162+ 95AF C9           	ret
 163+ 95B0
 164+ 95B0              ; ******************************************************************************************************************************************************************************************
 165+ 95B0              ;
 166+ 95B0              ;	19/10/22
 167+ 95B0              ;
 168+ 95B0              ;	Mov_right.
 169+ 95B0              ;
 170+ 95B0              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 171+ 95B0              ;
 172+ 95B0
 173+ 95B0 3A BE 89     Mov_right ld a,(Ctrl_0)
 174+ 95B3 CB 77        	bit 6,a
 175+ 95B5 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 176+ 95B7
 177+ 95B7 CD EF 97     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 178+ 95BA C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 179+ 95BB
 180+ 95BB 21 BE 89     	ld hl,Ctrl_0
 181+ 95BE CB E6        	set 4,(hl)
 182+ 95C0 18 52        	jr 8F
 183+ 95C2
 184+ 95C2 21 BE 89     10 ld hl,Ctrl_0
 185+ 95C5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 186+ 95C7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 187+ 95C7              ; 																	; _ en el caso de que no lo haya.
 188+ 95C7 3A B2 89     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 189+ 95CA FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 190+ 95CC 20 46        	jr nz,8F
 191+ 95CE
 192+ 95CE 3A C5 89     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 193+ 95D1 A7           	and a 															; _[3] para continuar con el DESPLZ.
 194+ 95D2 28 40        	jr z,8F
 195+ 95D4
 196+ 95D4              ; ---------- ---------- ----------
 197+ 95D4              ;
 198+ 95D4              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 199+ 95D4
 200+ 95D4 3A D7 89     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 201+ 95D7 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 202+ 95D9 28 11        	jr z,1F
 203+ 95DB 38 06        	jr c,6F
 204+ 95DD FE 04        	cp 4
 205+ 95DF 28 14        	jr z,7F
 206+ 95E1 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 207+ 95E3
 208+ 95E3              ; ---------- ---------- ----------
 209+ 95E3              ;
 210+ 95E3              ; Perfiles de velocidad
 211+ 95E3              ;
 212+ 95E3
 213+ 95E3 3A C5 89     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 214+ 95E6 FE FE        	cp $fe
 215+ 95E8 20 2A        	jr nz,8F
 216+ 95EA 18 10        	jr 3F
 217+ 95EC 3A C5 89     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 218+ 95EF FE FD        	cp $fd
 219+ 95F1 20 21        	jr nz,8F
 220+ 95F3 18 07        	jr 3F
 221+ 95F5 3A C5 89     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 222+ 95F8 FE FB        	cp $fb
 223+ 95FA 20 18        	jr nz,8F
 224+ 95FC
 225+ 95FC              ; ---------- ---------- ----------
 226+ 95FC
 227+ 95FC              3
 228+ 95FC CD 2F 98     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 229+ 95FF              ;	call Reinicio
 230+ 95FF
 231+ 95FF              ; ---------- ---------- ----------
 232+ 95FF              ;
 233+ 95FF              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 234+ 95FF
 235+ 95FF 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 236+ 9601 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 237+ 9602 CD 1B 96     	call DESPLZ_DER
 238+ 9605 C1           	pop bc
 239+ 9606 10 F9        	djnz 5B
 240+ 9608 2A C1 89     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 241+ 960B 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 242+ 960C 22 C1 89     	ld (Posicion_actual),hl
 243+ 960F CD EE AC     	call Genera_coordenadas
 244+ 9612 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 245+ 9614
 246+ 9614              ; ---------- ---------- ----------
 247+ 9614
 248+ 9614 2A C1 89     8 ld hl,(Posicion_actual)
 249+ 9617 CD 1B 96     	call DESPLZ_DER
 250+ 961A C9           2 ret
 251+ 961B
 252+ 961B              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 253+ 961B              ;
 254+ 961B              ;	22/9/22
 255+ 961B              ;
 256+ 961B
 257+ 961B CD 2A 96     DESPLZ_DER call Desplaza_derecha
 258+ 961E CD 76 96         call modifica_parametros_1er_DESPLZ_2
 259+ 9621 CD 9F 96         call Ciclo_completo
 260+ 9624 21 BE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 261+ 9627 CB FE        	set 7,(hl)
 262+ 9629 C9           	ret
 263+ 962A
 264+ 962A              ; ******************************************************************************************************************************************************************************************
 265+ 962A              ;	15/02/23
 266+ 962A              ;
 267+ 962A
 268+ 962A 3A D7 89     Desplaza_derecha ld a,(Vel_right)
 269+ 962D 47           	ld b,a
 270+ 962E 2A CA 89     	ld hl,(Puntero_DESPLZ_der)
 271+ 9631 23           1 inc hl
 272+ 9632 23           	inc hl
 273+ 9633 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 274+ 9635 22 CA 89     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 275+ 9638 CD FB 8D     	call Extrae_address
 276+ 963B 22 C3 89     	ld (Puntero_objeto),hl
 277+ 963E
 278+ 963E              ; Modifica (Puntero_DESPLZ_izq).
 279+ 963E
 280+ 963E              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 281+ 963E              ; Cuántos movimientos hemos hecho ??
 282+ 963E              ; DE contiene (Puntero_DESPLZ_der).
 283+ 963E
 284+ 963E 2A C6 89     7 ld hl,(Indice_Sprite_der)
 285+ 9641 EB           	ex de,hl
 286+ 9642 A7           	and a
 287+ 9643 ED 52        	sbc hl,de
 288+ 9645 CB 3D        	srl l
 289+ 9647 3E 08        6 ld a,8
 290+ 9649 95           	sub l
 291+ 964A 30 1E        	jr nc,3F
 292+ 964C
 293+ 964C              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 294+ 964C              ; B="0".
 295+ 964C
 296+ 964C 04           4 inc b
 297+ 964D 3C           	inc a
 298+ 964E 20 FC        	jr nz,4B
 299+ 9650 78           	ld a,b
 300+ 9651 08           	ex af,af
 301+ 9652 2A C6 89     	ld hl,(Indice_Sprite_der)
 302+ 9655 23           5 inc hl
 303+ 9656 23           	inc hl
 304+ 9657 10 FC        	djnz 5B
 305+ 9659 22 CA 89     	ld (Puntero_DESPLZ_der),hl
 306+ 965C CD FB 8D     	call Extrae_address
 307+ 965F 22 C3 89     	ld (Puntero_objeto),hl
 308+ 9662
 309+ 9662              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 310+ 9662              ; _(Posicion_actual).
 311+ 9662
 312+ 9662 21 C1 89     	ld hl,Posicion_actual
 313+ 9665 34           	inc (hl)
 314+ 9666 08               ex af,af
 315+ 9667 6F           	ld l,a
 316+ 9668 18 DD        	jr 6B
 317+ 966A
 318+ 966A              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 319+ 966A
 320+ 966A 47           3 ld b,a
 321+ 966B 2A C8 89     	ld hl,(Indice_Sprite_izq)
 322+ 966E 23           2 inc hl
 323+ 966F 23           	inc hl
 324+ 9670 10 FC        	djnz 2B
 325+ 9672 22 CC 89     	ld (Puntero_DESPLZ_izq),hl
 326+ 9675 C9           8 ret
 327+ 9676
 328+ 9676              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 329+ 9676              ;
 330+ 9676              ;	24/7/22
 331+ 9676              ;
 332+ 9676              ;	modifica_parametros_1er_DESPLZ_2
 333+ 9676              ;
 334+ 9676              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 335+ 9676              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 336+ 9676              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 337+ 9676
 338+ 9676 3A C5 89     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 339+ 9679 A7           	and a
 340+ 967A 20 1F        	jr nz,1F
 341+ 967C D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 342+ 967E 32 C5 89         ld (CTRL_DESPLZ),a
 343+ 9681
 344+ 9681 21 C0 89     	ld hl,Columns
 345+ 9684 34           	inc (hl)
 346+ 9685 3A D0 89     	ld a,(Cuad_objeto)
 347+ 9688 E6 01        	and 1
 348+ 968A 28 0F        	jr z,1F
 349+ 968C 2A C1 89     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 350+ 968F 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 351+ 9690 22 C1 89     	ld (Posicion_actual),hl
 352+ 9693 CD EE AC     	call Genera_coordenadas
 353+ 9696 CD FB 97     	call Inc_CTRL_DESPLZ
 354+ 9699 18 03        	jr 2F
 355+ 969B CD FB 97     1 call Inc_CTRL_DESPLZ
 356+ 969E C9           2 ret
 357+ 969F
 358+ 969F              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 359+ 969F              ;
 360+ 969F              ;	24/7/22
 361+ 969F              ;
 362+ 969F              ;	Ciclo_completo.
 363+ 969F              ;
 364+ 969F              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 365+ 969F              ;
 366+ 969F              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 367+ 969F              ; 	Decrementamos (Columns).
 368+ 969F              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 369+ 969F              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 370+ 969F
 371+ 969F
 372+ 969F 3A C5 89     Ciclo_completo ld a,(CTRL_DESPLZ)
 373+ 96A2 FE FF        	cp $ff
 374+ 96A4 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 375+ 96A6 E6 F0        	and $f0
 376+ 96A8 20 28        	jr nz,3F
 377+ 96AA
 378+ 96AA              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 379+ 96AA
 380+ 96AA 3A C5 89     	ld a,(CTRL_DESPLZ)
 381+ 96AD 47           	ld b,a
 382+ 96AE 3E F8        	ld a,$f8
 383+ 96B0 80           	add b
 384+ 96B1 32 C5 89     	ld (CTRL_DESPLZ),a
 385+ 96B4 18 1C        	jr 3F
 386+ 96B6 21 C0 89     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 387+ 96B9 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 388+ 96BA AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 389+ 96BB 32 C5 89     	ld (CTRL_DESPLZ),a
 390+ 96BE 3A D0 89     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 391+ 96C1 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 392+ 96C3 20 0A        	jr nz,2F
 393+ 96C5 2A C1 89     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 394+ 96C8 23           	inc hl
 395+ 96C9 22 C1 89     	ld (Posicion_actual),hl
 396+ 96CC CD EE AC     	call Genera_coordenadas
 397+ 96CF
 398+ 96CF              ; Inicia el puntero de Sprite.
 399+ 96CF
 400+ 96CF CD 10 8E     2 call Inicia_puntero_objeto_der
 401+ 96D2 C9           3 ret
 402+ 96D3
 403+ 96D3              ; ******************************************************************************************************************************************************************************************
 404+ 96D3              ;
 405+ 96D3              ;	15/02/23
 406+ 96D3              ;
 407+ 96D3              ;	Mov_left.
 408+ 96D3              ;
 409+ 96D3              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 410+ 96D3              ;
 411+ 96D3              Mov_left
 412+ 96D3
 413+ 96D3 21 BE 89     	ld hl,Ctrl_0
 414+ 96D6 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 415+ 96D8              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 416+ 96D8              ; 																	; _ en el caso de que no lo haya.
 417+ 96D8 3A BE 89     	ld a,(Ctrl_0)
 418+ 96DB CB 77        	bit 6,a
 419+ 96DD 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 420+ 96DF
 421+ 96DF CD F5 97     	call Stop_Amadeus_left
 422+ 96E2 C8           	ret z
 423+ 96E3 20 4A        	jr nz,8F
 424+ 96E5
 425+ 96E5 3A B2 89     11 ld a,(Coordenada_X)
 426+ 96E8 A7           	and a
 427+ 96E9 20 44        	jr nz,8F
 428+ 96EB
 429+ 96EB 3A C5 89     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 430+ 96EE A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 431+ 96EF 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 432+ 96F1
 433+ 96F1              ; ---------- ---------- ----------
 434+ 96F1
 435+ 96F1 3A D6 89     	ld a,(Vel_left)
 436+ 96F4 FE 02        	cp 2
 437+ 96F6 28 0F        	jr z,1F
 438+ 96F8 38 04        	jr c,6F
 439+ 96FA FE 04        	cp 4
 440+ 96FC 28 12        	jr z,7F
 441+ 96FE
 442+ 96FE              ; ---------- ---------- ----------
 443+ 96FE
 444+ 96FE 3A C5 89     6 ld a,(CTRL_DESPLZ)
 445+ 9701 FE F8        	cp $f8
 446+ 9703 20 2A        	jr nz,8F
 447+ 9705 18 10        	jr 4F
 448+ 9707 3A C5 89     1 ld a,(CTRL_DESPLZ)
 449+ 970A FE F9        	cp $f9
 450+ 970C 20 21        	jr nz,8F
 451+ 970E 18 07        	jr 4F
 452+ 9710 3A C5 89     7 ld a,(CTRL_DESPLZ)
 453+ 9713 FE FB        	cp $fb
 454+ 9715 20 18        	jr nz,8F
 455+ 9717
 456+ 9717              ; ---------- ---------- ----------
 457+ 9717
 458+ 9717              4
 459+ 9717 CD 1D 98     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 460+ 971A              ;	call Reinicio
 461+ 971A
 462+ 971A              ; ---------- ---------- ----------
 463+ 971A
 464+ 971A 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 465+ 971C C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 466+ 971D
 467+ 971D              ;	ld hl,(Indice_Sprite_izq)
 468+ 971D              ;	ld (Puntero_DESPLZ_izq),hl
 469+ 971D
 470+ 971D CD 36 97     	call DESPLZ_IZQ
 471+ 9720 C1           	pop bc
 472+ 9721 10 F9        	djnz 5B
 473+ 9723 2A C1 89     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 474+ 9726 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 475+ 9727 22 C1 89     	ld (Posicion_actual),hl
 476+ 972A CD EE AC     	call Genera_coordenadas
 477+ 972D 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 478+ 972F
 479+ 972F              ; ---------- ---------- ----------
 480+ 972F
 481+ 972F              ; Movemos, no hay recolocación.
 482+ 972F
 483+ 972F 2A C1 89     8 ld hl,(Posicion_actual)
 484+ 9732 CD 36 97     	call DESPLZ_IZQ
 485+ 9735 C9           2 ret
 486+ 9736
 487+ 9736              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 488+ 9736              ;
 489+ 9736              ;	22/9/22
 490+ 9736
 491+ 9736              DESPLZ_IZQ
 492+ 9736
 493+ 9736 CD 45 97     	call Desplaza_izquierda
 494+ 9739 CD 91 97         call modifica_parametros_1er_DESPLZ
 495+ 973C CD B9 97     	call Ciclo_completo_2
 496+ 973F 21 BE 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 497+ 9742 CB BE        	res 7,(hl)
 498+ 9744 C9           	ret
 499+ 9745
 500+ 9745              Desplaza_izquierda
 501+ 9745
 502+ 9745 3A D6 89     	ld a,(Vel_left)
 503+ 9748 47           	ld b,a
 504+ 9749 2A CC 89     	ld hl,(Puntero_DESPLZ_izq)
 505+ 974C 23           1 inc hl
 506+ 974D 23           	inc hl
 507+ 974E 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 508+ 9750 22 CC 89     	ld (Puntero_DESPLZ_izq),hl
 509+ 9753 CD FB 8D     	call Extrae_address
 510+ 9756 22 C3 89     	ld (Puntero_objeto),hl
 511+ 9759
 512+ 9759              ; Modifica (Puntero_DESPLZ_der).
 513+ 9759
 514+ 9759              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 515+ 9759              ; Cuántos movimientos hemos hecho ??
 516+ 9759              ; DE contiene (Puntero_DESPLZ_izq).
 517+ 9759
 518+ 9759 2A C8 89     7 ld hl,(Indice_Sprite_izq)
 519+ 975C EB           	ex de,hl
 520+ 975D A7           	and a
 521+ 975E ED 52        	sbc hl,de
 522+ 9760 CB 3D        	srl l
 523+ 9762 3E 08        6 ld a,8
 524+ 9764 95           	sub l
 525+ 9765 30 1E        	jr nc,3F
 526+ 9767
 527+ 9767              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 528+ 9767              ; B="0".
 529+ 9767
 530+ 9767 04           4 inc b
 531+ 9768 3C           	inc a
 532+ 9769 20 FC        	jr nz,4B
 533+ 976B 78           	ld a,b
 534+ 976C 08           	ex af,af
 535+ 976D 2A C8 89     	ld hl,(Indice_Sprite_izq)
 536+ 9770 23           5 inc hl
 537+ 9771 23           	inc hl
 538+ 9772 10 FC        	djnz 5B
 539+ 9774 22 CC 89     	ld (Puntero_DESPLZ_izq),hl
 540+ 9777 CD FB 8D     	call Extrae_address
 541+ 977A 22 C3 89     	ld (Puntero_objeto),hl
 542+ 977D
 543+ 977D              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 544+ 977D              ; _(Posicion_actual).
 545+ 977D
 546+ 977D 21 C1 89     	ld hl,Posicion_actual
 547+ 9780 35           	dec (hl)
 548+ 9781 08           	ex af,af
 549+ 9782 6F           	ld l,a
 550+ 9783 18 DD        	jr 6B
 551+ 9785
 552+ 9785              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 553+ 9785
 554+ 9785 47           3 ld b,a
 555+ 9786 2A C6 89     	ld hl,(Indice_Sprite_der)
 556+ 9789 23           2 inc hl
 557+ 978A 23           	inc hl
 558+ 978B 10 FC        	djnz 2B
 559+ 978D 22 CA 89     	ld (Puntero_DESPLZ_der),hl
 560+ 9790 C9           8 ret
 561+ 9791
 562+ 9791              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 563+ 9791              ;
 564+ 9791              ;	modifica_parametros_1er_DESPLZ
 565+ 9791              ;
 566+ 9791              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 567+ 9791              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 568+ 9791              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 569+ 9791
 570+ 9791 3A C5 89     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 571+ 9794 A7           	and a
 572+ 9795 20 1E        	jr nz,1F
 573+ 9797 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 574+ 9798 32 C5 89         ld (CTRL_DESPLZ),a
 575+ 979B 21 C0 89     	ld hl,Columns
 576+ 979E 34           	inc (hl)
 577+ 979F 3A D0 89     	ld a,(Cuad_objeto)
 578+ 97A2 E6 01        	and 1
 579+ 97A4 20 0F        	jr nz,1F
 580+ 97A6 2A C1 89     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 581+ 97A9 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 582+ 97AA 22 C1 89     	ld (Posicion_actual),hl
 583+ 97AD CD EE AC     	call Genera_coordenadas
 584+ 97B0 CD 0C 98     	call Dec_CTRL_DESPLZ
 585+ 97B3 18 03        	jr 2F
 586+ 97B5 CD 0C 98     1 call Dec_CTRL_DESPLZ
 587+ 97B8 C9           2 ret
 588+ 97B9
 589+ 97B9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 590+ 97B9
 591+ 97B9 3A C5 89     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 592+ 97BC FE F7        	cp $f7
 593+ 97BE 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 594+ 97C0 30 2C        	jr nc,3F
 595+ 97C2
 596+ 97C2              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 597+ 97C2
 598+ 97C2 06 00        	ld b,0
 599+ 97C4 04           4 inc b
 600+ 97C5 3C           	inc a
 601+ 97C6 FE F7        	cp $f7
 602+ 97C8 20 FA        	jr nz,4B
 603+ 97CA 3E FF        	ld a,$ff
 604+ 97CC 90           	sub b
 605+ 97CD 32 C5 89     	ld (CTRL_DESPLZ),a
 606+ 97D0 18 1C        	jr 3F
 607+ 97D2
 608+ 97D2              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 609+ 97D2
 610+ 97D2 21 C0 89     1 ld hl,Columns
 611+ 97D5 35           	dec (hl)
 612+ 97D6 AF           	xor a
 613+ 97D7 32 C5 89     	ld (CTRL_DESPLZ),a
 614+ 97DA 3A D0 89     	ld a,(Cuad_objeto)
 615+ 97DD E6 01        	and 1
 616+ 97DF 28 0A        	jr z,2F
 617+ 97E1 2A C1 89     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 618+ 97E4 2B           	dec hl
 619+ 97E5 22 C1 89     	ld (Posicion_actual),hl
 620+ 97E8 CD EE AC     	call Genera_coordenadas
 621+ 97EB
 622+ 97EB              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 623+ 97EB
 624+ 97EB CD 23 8E     2 call Inicia_puntero_objeto_izq
 625+ 97EE C9           3 ret
 626+ 97EF
 627+ 97EF              ; ---------- ---------- ---------- ---------- ---------- ----------
 628+ 97EF              ;
 629+ 97EF              ;	19/10/22
 630+ 97EF              ;
 631+ 97EF              ;	(cp 29) para un Amadeus de 3 Columns.
 632+ 97EF              ;	(cp 30)   ""  ""    ""     2 Columns.
 633+ 97EF
 634+ 97EF 3A B2 89     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 635+ 97F2 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 636+ 97F4 C9           	ret
 637+ 97F5
 638+ 97F5              ; ---------- ---------- ---------- ---------- ---------- ----------
 639+ 97F5              ;
 640+ 97F5              ;	19/10/22
 641+ 97F5              ;
 642+ 97F5              ;	(cp 2) para un Amadeus de 3 Columns.
 643+ 97F5              ;	(cp 1)   ""  ""    ""     2 Columns.
 644+ 97F5
 645+ 97F5 3A B2 89     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 646+ 97F8 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 647+ 97FA C9           	ret
 648+ 97FB
 649+ 97FB              ; ---------- ---------- ---------- ---------- ---------- ----------
 650+ 97FB              ;
 651+ 97FB              ;	24/7/22
 652+ 97FB              ;
 653+ 97FB              ;	Inc_CTRL_DESPLZ
 654+ 97FB              ;
 655+ 97FB              ;
 656+ 97FB              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 657+ 97FB
 658+ 97FB 21 C5 89     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 659+ 97FE 3A D7 89     	ld a,(Vel_right)
 660+ 9801 A7           	and a
 661+ 9802 28 06        	jr z,1F
 662+ 9804 47           	ld b,a
 663+ 9805 34           3 inc (hl)
 664+ 9806 10 FD        	djnz 3B
 665+ 9808 18 01        	jr 2F
 666+ 980A 34           1 inc (hl)
 667+ 980B C9           2 ret
 668+ 980C
 669+ 980C              ; ---------- ---------- ---------- ---------- ---------- ----------
 670+ 980C              ;
 671+ 980C              ;	5/2/23
 672+ 980C              ;
 673+ 980C              ;	Dec_CTRL_DESPLZ
 674+ 980C              ;
 675+ 980C              ;
 676+ 980C              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 677+ 980C
 678+ 980C 21 C5 89     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 679+ 980F 3A D6 89     	ld a,(Vel_left)
 680+ 9812 A7           	and a
 681+ 9813 28 06        	jr z,1F
 682+ 9815 47           	ld b,a
 683+ 9816 35           3 dec (hl)
 684+ 9817 10 FD        	djnz 3B
 685+ 9819 18 01        	jr 2F
 686+ 981B 35           1 dec (hl)
 687+ 981C C9           2 ret
 688+ 981D
 689+ 981D              ; ---------- ---------- ---------- ---------- ---------- ----------
 690+ 981D
 691+ 981D 2A C1 89     Reaparece_derecha ld hl,(Posicion_actual)
 692+ 9820 01 1F 00     	ld bc,31
 693+ 9823 A7           	and a
 694+ 9824 ED 4A        	adc hl,bc
 695+ 9826 22 C1 89     	ld (Posicion_actual),hl
 696+ 9829 21 BE 89     	ld hl,Ctrl_0														; $xxx1
 697+ 982C CB C6        	set 0,(hl)
 698+ 982E C9           	ret
 699+ 982F
 700+ 982F              ; ---------- ---------- ---------- ---------- ---------- ----------
 701+ 982F
 702+ 982F 2A C1 89     Reaparece_izquierda ld hl,(Posicion_actual)
 703+ 9832 01 1F 00     	ld bc,31
 704+ 9835 A7           	and a
 705+ 9836 ED 42        	sbc hl,bc
 706+ 9838 22 C1 89     	ld (Posicion_actual),hl 											; $xx1x
 707+ 983B 21 BE 89     	ld hl,Ctrl_0
 708+ 983E CB CE        	set 1,(hl)
 709+ 9840 C9           	ret
 710+ 9841
 711+ 9841              ; ---------- ---------- ---------- ---------- ---------- ----------
 712+ 9841
 713+ 9841 24           Reaparece_abajo inc h
 714+ 9842 01 E0 17     	ld bc,$17e0
 715+ 9845 A7           	and a
 716+ 9846 ED 4A        	adc hl,bc
 717+ 9848 22 C1 89     	ld (Posicion_actual),hl
 718+ 984B 21 BE 89     	ld hl,Ctrl_0
 719+ 984E CB D6        	set 2,(hl)
 720+ 9850 C9           	ret
 721+ 9851
 722+ 9851              ; ---------- ---------- ---------- ---------- ---------- ----------
 723+ 9851
 724+ 9851 01 E0 17     Reaparece_arriba ld bc,$17e0
 725+ 9854 A7           	and a
 726+ 9855 ED 42        	sbc hl,bc
 727+ 9857 22 C1 89     	ld (Posicion_actual),hl
 728+ 985A 21 BE 89     	ld hl,Ctrl_0
 729+ 985D CB DE        	set 3,(hl)
 730+ 985F C9           	ret
 731+ 9860
 732+ 9860              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 733+ 9860              ;
 734+ 9860              ;	15/07/23
 735+ 9860
 736+ 9860              Reinicio
 737+ 9860
 738+ 9860              ; Vamos a reiniciar los punteros y variables de movimiento.
 739+ 9860
 740+ 9860 AF           	xor a
 741+ 9861 21 E6 89     	ld hl,Puntero_indice_mov_bucle
 742+ 9864 CD 82 98     	call Limpia_contenido_hl
 743+ 9867
 744+ 9867 21 C1 89     	ld hl,Posicion_actual
 745+ 986A CD 82 98     	call Limpia_contenido_hl
 746+ 986D
 747+ 986D CD D0 AA     	call Inicializa_Puntero_indice_mov
 748+ 9870 CD 81 99     	call Inicia_Puntero_mov
 749+ 9873
 750+ 9873 21 E8 89     	ld hl,Incrementa_puntero
 751+ 9876 06 05        	ld b,5
 752+ 9878 77           1 ld (hl),a
 753+ 9879 23           	inc hl
 754+ 987A 10 FC        	djnz 1B
 755+ 987C
 756+ 987C 21 BD 89     	ld hl,Ctrl_2
 757+ 987F CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 758+ 9881
 759+ 9881 C9           	ret
 760+ 9882
 761+ 9882 77           Limpia_contenido_hl	ld (hl),a
 762+ 9883 23           	inc hl
 763+ 9884 77           	ld (hl),a
 764+ 9885 C9           	ret
 765+ 9886
 766+ 9886              ; ----------------------------------------------------------------------------------------------------------------
 767+ 9886              ;
 768+ 9886              ;	18/6/24
 769+ 9886              ;
 770+ 9886
 771+ 9886              Amadeus_a_izquierda
 772+ 9886
 773+ 9886              ;	Actualiza contador de movimientos.
 774+ 9886
 775+ 9886 21 6F 87     	ld hl,Comm_Amadeus
 776+ 9889 35           	dec (hl)
 777+ 988A 28 10        	jr z,1F 								; 	Estamos en el extremo izquierdo de la pantalla.
 778+ 988C
 779+ 988C 2A 6D 87     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 780+ 988F 2B           	dec hl
 781+ 9890 2B           	dec hl
 782+ 9891 2B           	dec hl
 783+ 9892 2B           	dec hl
 784+ 9893 22 6D 87     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 785+ 9896
 786+ 9896 21 17 8A     	ld hl,Ctrl_3
 787+ 9899 CB EE        	set 5,(hl)
 788+ 989B
 789+ 989B C9           	ret
 790+ 989C
 791+ 989C 34           1 inc (hl)                                  ; 	Salimos. Damos orden de no imprimir la nave. No habrá movimiento.
 792+ 989D C9           	ret
 793+ 989E
 794+ 989E
 795+ 989E              Amadeus_a_derecha
 796+ 989E
 797+ 989E              ;	Actualiza contador de movimientos.
 798+ 989E
 799+ 989E 21 6F 87     	ld hl,Comm_Amadeus
 800+ 98A1 34           	inc (hl)
 801+ 98A2 3E 7A        	ld a,$7a
 802+ 98A4 BE           	cp (hl)
 803+ 98A5 28 10        	jr z,1F									; 	Estamos en el extremo derecho de la pantalla.
 804+ 98A7
 805+ 98A7 2A 6D 87     	ld hl,(Pamm_Amadeus)					;	Actualiza variable de 16 bits.
 806+ 98AA 23           	inc hl
 807+ 98AB 23           	inc hl
 808+ 98AC 23           	inc hl
 809+ 98AD 23           	inc hl
 810+ 98AE 22 6D 87     	ld (Pamm_Amadeus),hl					;	Actualiza variable de 8 bits.
 811+ 98B1
 812+ 98B1 21 17 8A     	ld hl,Ctrl_3
 813+ 98B4 CB EE        	set 5,(hl)
 814+ 98B6 C9           	ret
 815+ 98B7
 816+ 98B7 35           1 dec (hl)									; 	Salimos. No hay movimiento. No pintamos la nave.
 817+ 98B8 C9           	ret
# file closed: Direcciones.asm
2337  98B9              	include "Movimiento.asm"
# file opened: Movimiento.asm
   1+ 98B9              ; ----- ----- ----- ----- -----
   2+ 98B9              ;
   3+ 98B9              ;   28/12/23
   4+ 98B9
   5+ 98B9              Movimiento
   6+ 98B9
   7+ 98B9              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
   8+ 98B9
   9+ 98B9 3A BD 89         ld a,(Ctrl_2)
  10+ 98BC CB 57            bit 2,a
  11+ 98BE 20 1B            jr nz, Desplazamiento_iniciado
  12+ 98C0
  13+ 98C0 2A E4 89         ld hl,(Puntero_mov)
  14+ 98C3 7E               ld a,(hl)
  15+ 98C4
  16+ 98C4              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
  17+ 98C4
  18+ 98C4              Inicia_desplazamiento.
  19+ 98C4
  20+ 98C4              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
  21+ 98C4
  22+ 98C4 CD B7 99         call Ajusta_velocidad_desplazamiento
  23+ 98C7
  24+ 98C7              ; Iniciamos (Repetimos_mov).
  25+ 98C7
  26+ 98C7 7E               ld a,(hl)
  27+ 98C8 E6 0F            and $0f
  28+ 98CA 32 EA 89         ld (Repetimos_desplazamiento),a
  29+ 98CD 32 EB 89         ld (Repetimos_desplazamiento_backup),a
  30+ 98D0
  31+ 98D0              ; Iniciamos (Cola_de_desplazamiento).
  32+ 98D0
  33+ 98D0 23               inc hl
  34+ 98D1 7E               ld a,(hl)
  35+ 98D2 32 ED 89         ld (Cola_de_desplazamiento),a
  36+ 98D5 2B               dec hl
  37+ 98D6
  38+ 98D6 21 BD 89         ld hl,Ctrl_2
  39+ 98D9 CB D6            set 2,(hl)
  40+ 98DB
  41+ 98DB              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
  42+ 98DB              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
  43+ 98DB
  44+ 98DB              Desplazamiento_iniciado
  45+ 98DB
  46+ 98DB CD 8B 99         call Aplica_desplazamiento
  47+ 98DE
  48+ 98DE              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
  49+ 98DE
  50+ 98DE 3A 17 8A         ld a,(Ctrl_3)
  51+ 98E1 CB 4F            bit 1,a
  52+ 98E3 C0               ret nz
  53+ 98E4
  54+ 98E4 21 EA 89     3 ld hl,Repetimos_desplazamiento
  55+ 98E7 35               dec (hl)
  56+ 98E8 C0               ret nz
  57+ 98E9
  58+ 98E9              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
  59+ 98E9              ; Hay que volver a ejecutar este desplazamiento ???.
  60+ 98E9              ; Analiza (Cola_de_desplazamiento).
  61+ 98E9
  62+ 98E9 3A ED 89     Cola ld a,(Cola_de_desplazamiento)
  63+ 98EC A7               and a
  64+ 98ED CC E0 99         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
  65+ 98F0 28 30            jr z,Reinicia_el_movimiento
  66+ 98F2
  67+ 98F2 FE FF            cp $ff
  68+ 98F4 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
  69+ 98F6
  70+ 98F6 FE FE            cp $fe
  71+ 98F8 CC 65 99         call z,Fijamos_bucle
  72+ 98FB 28 25            jr z,Reinicia_el_movimiento
  73+ 98FD
  74+ 98FD FE FD            cp $fd
  75+ 98FF 20 11            jr nz,1F
  76+ 9901
  77+ 9901              ; ---
  78+ 9901              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
  79+ 9901
  80+ 9901 3A BD 89         ld a,(Ctrl_2)
  81+ 9904 CB 5F            bit 3,a
  82+ 9906 20 1A            jr nz,Reinicia_el_movimiento
  83+ 9908
  84+ 9908              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
  85+ 9908
  86+ 9908 21 BD 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
  87+ 990B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
  88+ 990D
  89+ 990D CD 76 99         call Inicia_Repetimos_movimiento
  90+ 9910 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
  91+ 9912              ; ---
  92+ 9912
  93+ 9912 FE 01        1 cp 1
  94+ 9914 CA 4F 99         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
  95+ 9917
  96+ 9917 3D               dec a
  97+ 9918 32 ED 89         ld (Cola_de_desplazamiento),a
  98+ 991B
  99+ 991B 3A EB 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 100+ 991E 32 EA 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 101+ 9921              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 102+ 9921 C9               ret
 103+ 9922
 104+ 9922              Reinicia_el_movimiento
 105+ 9922
 106+ 9922 3A BD 89         ld a,(Ctrl_2)
 107+ 9925 CB 5F            bit 3,a
 108+ 9927 28 1B            jr z,2F
 109+ 9929
 110+ 9929              ; (Cola_de_desplazamiento)="254".
 111+ 9929
 112+ 9929 21 EC 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 113+ 992C 35               dec (hl)
 114+ 992D 20 15            jr nz,2F
 115+ 992F
 116+ 992F              ; Fin de las repeticiones del último movimiento.
 117+ 992F
 118+ 992F 21 BD 89         ld hl,Ctrl_2
 119+ 9932 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 120+ 9934
 121+ 9934 2A E4 89         ld hl,(Puntero_mov)
 122+ 9937 23               inc hl
 123+ 9938 23               inc hl
 124+ 9939 23               inc hl
 125+ 993A 22 E4 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 126+ 993D              ;                                                               ; _ para ejecutar su mandato. :)
 127+ 993D 7E               ld a,(hl)
 128+ 993E 32 ED 89         ld (Cola_de_desplazamiento),a
 129+ 9941
 130+ 9941 C3 E9 98         jp Cola
 131+ 9944
 132+ 9944 CD 81 99     2 call Inicia_Puntero_mov
 133+ 9947
 134+ 9947 21 BD 89         ld hl,Ctrl_2
 135+ 994A CB 96            res 2,(hl)
 136+ 994C
 137+ 994C C3 B9 98         jp Movimiento
 138+ 994F
 139+ 994F              Siguiente_desplazamiento
 140+ 994F
 141+ 994F              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 142+ 994F              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 143+ 994F
 144+ 994F 21 BD 89         ld hl,Ctrl_2
 145+ 9952 CB 96            res 2,(hl)
 146+ 9954
 147+ 9954 2A E4 89         ld hl,(Puntero_mov)
 148+ 9957 23               inc hl
 149+ 9958 23               inc hl
 150+ 9959 22 E4 89         ld (Puntero_mov),hl
 151+ 995C
 152+ 995C 7E               ld a,(hl)
 153+ 995D A7               and a
 154+ 995E CC E0 99         call z,Incrementa_Puntero_indice_mov
 155+ 9961 CA 22 99         jp z,Reinicia_el_movimiento
 156+ 9964
 157+ 9964 C9               ret
 158+ 9965
 159+ 9965              ; Subrutinas -----------------------------------------
 160+ 9965              ; ---------- --------- --------- ---------- ----------
 161+ 9965              ;
 162+ 9965              ;   24/07/23
 163+ 9965              ;
 164+ 9965              ;   Fijamos_bucle
 165+ 9965              ;
 166+ 9965              ;
 167+ 9965
 168+ 9965              Fijamos_bucle
 169+ 9965
 170+ 9965 3A E8 89         ld a,(Incrementa_puntero)
 171+ 9968 3C               inc a
 172+ 9969 32 E9 89         ld (Incrementa_puntero_backup),a
 173+ 996C
 174+ 996C CD E0 99         call Incrementa_Puntero_indice_mov
 175+ 996F 2A E2 89         ld hl,(Puntero_indice_mov)
 176+ 9972 22 E6 89         ld (Puntero_indice_mov_bucle),hl
 177+ 9975 C9               ret
 178+ 9976
 179+ 9976              ; ---------- --------- --------- ---------- ----------
 180+ 9976              ;
 181+ 9976              ;   07/7/23
 182+ 9976              ;
 183+ 9976              ;   Inicia_Repetimos_movimiento
 184+ 9976              ;
 185+ 9976              ;
 186+ 9976
 187+ 9976              Inicia_Repetimos_movimiento
 188+ 9976
 189+ 9976              ; Iniciamos (Repetimos_movimiento).
 190+ 9976
 191+ 9976 DD 2A E4 89      ld ix,(Puntero_mov)
 192+ 997A DD 7E 02         ld a,(ix+2)
 193+ 997D 32 EC 89         ld (Repetimos_movimiento),a
 194+ 9980
 195+ 9980 C9               ret
 196+ 9981
 197+ 9981              ; ---------- --------- --------- ---------- ----------
 198+ 9981              ;
 199+ 9981              ;   26/6/23
 200+ 9981              ;
 201+ 9981              ;   Inicia_Puntero_mov
 202+ 9981              ;
 203+ 9981              ;
 204+ 9981
 205+ 9981 2A E2 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 206+ 9984 CD FB 8D         call Extrae_address
 207+ 9987 22 E4 89         ld (Puntero_mov),hl
 208+ 998A C9               ret
 209+ 998B
 210+ 998B              ; ---------- --------- --------- ---------- ----------
 211+ 998B              ;
 212+ 998B              ;   27/06/23
 213+ 998B              ;
 214+ 998B              ;   Aplica_movimiento.
 215+ 998B
 216+ 998B              Aplica_desplazamiento
 217+ 998B
 218+ 998B              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 219+ 998B
 220+ 998B 2A E4 89         ld hl, (Puntero_mov)
 221+ 998E
 222+ 998E 7E               ld a,(hl)
 223+ 998F E6 F0            and $f0
 224+ 9991 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 225+ 9992
 226+ 9992 CB 7E            bit 7,(hl)
 227+ 9994 28 03            jr z,1F
 228+ 9996 CD 6D 95         call Mov_up
 229+ 9999 2A E4 89     1 ld hl, (Puntero_mov)
 230+ 999C CB 76            bit 6,(hl)
 231+ 999E 28 03            jr z,2F
 232+ 99A0 CD 34 95         call Mov_down
 233+ 99A3
 234+ 99A3              ; Se ha aplicado reinicio ???
 235+ 99A3              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 236+ 99A3
 237+ 99A3              ;    ld a,(Ctrl_3)
 238+ 99A3              ;    bit 1,a
 239+ 99A3              ;    ret nz
 240+ 99A3
 241+ 99A3 2A E4 89     2 ld hl, (Puntero_mov)
 242+ 99A6 CB 6E            bit 5,(hl)
 243+ 99A8 28 03            jr z,3F
 244+ 99AA CD D3 96         call Mov_left
 245+ 99AD 2A E4 89     3 ld hl, (Puntero_mov)
 246+ 99B0 CB 66            bit 4,(hl)
 247+ 99B2 C8               ret z
 248+ 99B3 CD B0 95         call Mov_right
 249+ 99B6 C9               ret
 250+ 99B7
 251+ 99B7              ; ---------- --------- --------- ---------- ----------
 252+ 99B7              ;
 253+ 99B7              ;   26/06/23
 254+ 99B7              ;
 255+ 99B7              ;   Ajusta_velocidad_desplazamiento.
 256+ 99B7
 257+ 99B7              Ajusta_velocidad_desplazamiento
 258+ 99B7
 259+ 99B7              ; 1er byte de la cadena de movimiento.
 260+ 99B7              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 261+ 99B7
 262+ 99B7 CD D5 99         call Extrae_nibble_alto
 263+ 99BA
 264+ 99BA 32 D8 89         ld (Vel_up),a
 265+ 99BD 79               ld a,c
 266+ 99BE E6 0F            and $0f
 267+ 99C0 32 D9 89         ld (Vel_down),a
 268+ 99C3
 269+ 99C3              ; Saltamos al 2º byte de la cadena de movimiento.
 270+ 99C3              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 271+ 99C3
 272+ 99C3 23               inc hl
 273+ 99C4 CD D5 99         call Extrae_nibble_alto
 274+ 99C7
 275+ 99C7 32 D6 89         ld (Vel_left),a
 276+ 99CA 79               ld a,c
 277+ 99CB E6 0F            and $0f
 278+ 99CD 32 D7 89         ld (Vel_right),a
 279+ 99D0
 280+ 99D0              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 281+ 99D0
 282+ 99D0 23               inc hl
 283+ 99D1 22 E4 89         ld (Puntero_mov),hl
 284+ 99D4 C9               ret
 285+ 99D5
 286+ 99D5 06 04        Extrae_nibble_alto ld b,4
 287+ 99D7 7E               ld a,(hl)
 288+ 99D8 4F               ld c,a
 289+ 99D9 E6 F0            and $f0
 290+ 99DB CB 3F        1 srl a
 291+ 99DD 10 FC            djnz 1B
 292+ 99DF C9               ret
 293+ 99E0
 294+ 99E0              ; ---------- --------- --------- ---------- ----------
 295+ 99E0              ;
 296+ 99E0              ;   5/7/23
 297+ 99E0              ;
 298+ 99E0              ;   Incrementa_Puntero_indice_mov
 299+ 99E0
 300+ 99E0              Incrementa_Puntero_indice_mov
 301+ 99E0
 302+ 99E0 21 E8 89         ld hl,Incrementa_puntero
 303+ 99E3 34               inc (hl)
 304+ 99E4
 305+ 99E4 2A E2 89         ld hl,(Puntero_indice_mov)
 306+ 99E7 01 02 00         ld bc,2
 307+ 99EA A7               and a
 308+ 99EB 09               add hl,bc
 309+ 99EC 22 E2 89         ld (Puntero_indice_mov),hl
 310+ 99EF
 311+ 99EF 7E               ld a,(hl)
 312+ 99F0 A7               and a
 313+ 99F1
 314+ 99F1              ;! STOP. Fin del patrón de movimiento de la entidad.
 315+ 99F1
 316+ 99F1              ;    jr z,$
 317+ 99F1
 318+ 99F1              ;! Reinicia el Patrón de movimiento.
 319+ 99F1
 320+ 99F1 CC F6 99         call z,Inicializa_Puntero_indice_mov_2
 321+ 99F4
 322+ 99F4 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 323+ 99F5
 324+ 99F5 C9               ret
 325+ 99F6
 326+ 99F6              ; ---------- --------- --------- ---------- ----------
 327+ 99F6              ;
 328+ 99F6              ;   15/01/24
 329+ 99F6              ;
 330+ 99F6              ;   Inicializa_Puntero_indice_mov
 331+ 99F6
 332+ 99F6              Inicializa_Puntero_indice_mov_2
 333+ 99F6
 334+ 99F6              ; Existe etiqueta de bucle principal???
 335+ 99F6
 336+ 99F6 2A E6 89         ld hl,(Puntero_indice_mov_bucle)
 337+ 99F9 24               inc h
 338+ 99FA 25               dec h
 339+ 99FB 28 05            jr z,2F
 340+ 99FD
 341+ 99FD 22 E2 89         ld (Puntero_indice_mov),hl
 342+ 9A00 18 14            jr 3F
 343+ 9A02
 344+ 9A02              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 345+ 9A02
 346+ 9A02 3A E8 89     2 ld a,(Incrementa_puntero)
 347+ 9A05 47               ld b,a
 348+ 9A06
 349+ 9A06 2A E2 89         ld hl,(Puntero_indice_mov)
 350+ 9A09 2B           1 dec hl
 351+ 9A0A 2B               dec hl
 352+ 9A0B 10 FC            djnz 1B
 353+ 9A0D 22 E2 89         ld (Puntero_indice_mov),hl
 354+ 9A10
 355+ 9A10 AF               xor a
 356+ 9A11 32 E8 89         ld (Incrementa_puntero),a
 357+ 9A14 18 06            jr 4F
 358+ 9A16
 359+ 9A16 3A E9 89     3 ld a,(Incrementa_puntero_backup)
 360+ 9A19 32 E8 89         ld (Incrementa_puntero),a
 361+ 9A1C C9           4 ret
 362+ 9A1D
 363+ 9A1D              ; ----------------------------------------------------------------------
 364+ 9A1D              ;
 365+ 9A1D              ;   30/01/24
 366+ 9A1D              ;
 367+ 9A1D              ;   Sitúa HL en la dirección donde se encuentra el Contador_general_de_mov_masticados de este (Tipo) de entidad.
 368+ 9A1D
 369+ 9A1D 3A B1 89     Situa_en_contador_general_de_mov_masticados ld a,(Tipo)
 370+ 9A20 CD 6B AC         call Calcula_salto_en_BC
 371+ 9A23 21 DA 89         ld hl,Contador_general_de_mov_masticados_Entidad_1
 372+ 9A26 A7               and a
 373+ 9A27 ED 4A            adc hl,bc
 374+ 9A29 C9               ret
 375+ 9A2A
 376+ 9A2A              ; ----------------------------------------------------------------------
 377+ 9A2A              ;
 378+ 9A2A              ;   30/01/24
 379+ 9A2A              ;
 380+ 9A2A              ;   Transfiere los datos del Contador_general_de_mov_masticados de este (Tipo) de entidad a (Contador_de_mov_masticados).
 381+ 9A2A              ;
 382+ 9A2A              ;   INPUT: HL contiene el contador de 16 bits, (Contador_general_de_mov_masticados de este (Tipo) de entidad).
 383+ 9A2A
 384+ 9A2A 4E           Transfiere_datos_de_contadores ld c,(hl)
 385+ 9A2B 23               inc hl
 386+ 9A2C 46               ld b,(hl)                                                   ; BC contiene los mov_masticados totales de esta entidad.
 387+ 9A2D 69               ld l,c
 388+ 9A2E 60               ld h,b
 389+ 9A2F 22 BA 89         ld (Contador_de_mov_masticados),hl
 390+ 9A32 C9               ret
 391+ 9A33
# file closed: Movimiento.asm
2338  9A33              	include "Disparo_2.asm"
# file opened: Disparo_2.asm
   1+ 9A33              ; ******************************************************************************************************************************************************************************************
   2+ 9A33              ;
   3+ 9A33              ;   21/07/23
   4+ 9A33              ;
   5+ 9A33              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 9A33              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 9A33              ;
   8+ 9A33              ;
   9+ 9A33              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 9A33              ;
  11+ 9A33              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 9A33              ;               _ hacen las entidades hacia abajo.
  13+ 9A33              ;
  14+ 9A33              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 9A33              ;
  16+ 9A33              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 9A33              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 9A33              ;
  19+ 9A33              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 9A33              ;           _ la bala.
  21+ 9A33              ;
  22+ 9A33              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 9A33              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 9A33              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 9A33              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 9A33              ;           _ en el momento de generarse la bala)).
  27+ 9A33
  28+ 9A33              Genera_disparo
  29+ 9A33
  30+ 9A33              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 9A33              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 9A33              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 9A33              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 9A33              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 9A33              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 9A33              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 9A33
  38+ 9A33
  39+ 9A33 F3               di
  40+ 9A34 18 FE            jr $
  41+ 9A36 FB               ei
  42+ 9A37
  43+ 9A37              ; Exclusiones:
  44+ 9A37
  45+ 9A37              ;    ld a,(Vel_down)
  46+ 9A37              ;    ld b,a
  47+ 9A37              ;    ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  48+ 9A37              ;    cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  49+ 9A37              ;    ret c                               ; _ atropellaría con su propio disparo.
  50+ 9A37              ;    ld a,(Columnas)
  51+ 9A37              ;    ld b,a
  52+ 9A37              ;    ld a,(Columns)
  53+ 9A37              ;    cp b
  54+ 9A37               ;   ret nz                              ; Salimos si la entidad no está completa en pantalla.
  55+ 9A37
  56+ 9A37              ; ----- ----- -----
  57+ 9A37
  58+ 9A37 3A BE 89         ld a,(Ctrl_0)
  59+ 9A3A CB 77            bit 6,a
  60+ 9A3C 20 00            jr nz,14F
  61+ 9A3E
  62+ 9A3E              ;    ld a,(Coordenada_y)
  63+ 9A3E              ;    cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  64+ 9A3E              ;    ret nc                              ; _ debajo de la fila "$14" de pantalla.
  65+ 9A3E
  66+ 9A3E              14
  67+ 9A3E              ;    ld hl,Indice_disparo
  68+ 9A3E              ;    ld a,(CTRL_DESPLZ)
  69+ 9A3E              ;    ld c,a
  70+ 9A3E              ;    ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  71+ 9A3E              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  72+ 9A3E              ;                                            ""        ""       "f9", B="1"
  73+ 9A3E              ;                                            ""        ""       "fb", B="2"
  74+ 9A3E              ;                                            ""        ""       "fb", B="3"
  75+ 9A3E              ;    and a
  76+ 9A3E              ;    jr z,1F
  77+ 9A3E              ;    and 1
  78+ 9A3E              ;    ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  79+ 9A3E
  80+ 9A3E              ;    ld a,c
  81+ 9A3E              ;    ld d,$f9
  82+ 9A3E              2
  83+ 9A3E              ;    inc hl
  84+ 9A3E              ;    inc hl
  85+ 9A3E              ;    inc b
  86+ 9A3E              ;    cp d
  87+ 9A3E              ;    jr z,1F
  88+ 9A3E              ;    inc d
  89+ 9A3E              ;    inc d
  90+ 9A3E              ;    jr 2B
  91+ 9A3E
  92+ 9A3E              1
  93+ 9A3E              ;    call Extrae_address
  94+ 9A3E              ;    push hl
  95+ 9A3E              ;    pop iy                              ; Puntero_objeto_disparo en IY.
  96+ 9A3E              ;	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  97+ 9A3E
  98+ 9A3E              ;	Se cumplen las condiciones necesarias para generar un disparo.
  99+ 9A3E              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 100+ 9A3E
 101+ 9A3E              ;    ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
 102+ 9A3E              ;    bit 6,a
 103+ 9A3E              ;    jr nz,19F
 104+ 9A3E
 105+ 9A3E              ;    xor a
 106+ 9A3E              ;    ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
 107+ 9A3E
 108+ 9A3E              19
 109+ 9A3E              ;    ld a,(Cuad_objeto)
 110+ 9A3E              ;    cp 2
 111+ 9A3E              ;    jr c,3F
 112+ 9A3E              ;    jr z,3F
 113+ 9A3E
 114+ 9A3E              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 115+ 9A3E
 116+ 9A3E              ;    and 1
 117+ 9A3E              ;    jr z,4F
 118+ 9A3E
 119+ 9A3E              ; 	Estamos en el 3er cuadrante de pantalla.
 120+ 9A3E              ; 	3er CUAD. ----- ----- ----- ----- -----
 121+ 9A3E              ;
 122+ 9A3E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 123+ 9A3E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 124+ 9A3E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 125+ 9A3E
 126+ 9A3E              ;	ld hl,(Posicion_actual)
 127+ 9A3E
 128+ 9A3E              ;   Amadeus o entidad ???.
 129+ 9A3E
 130+ 9A3E              ;    ld a,(Ctrl_0)
 131+ 9A3E              ;    bit 6,a
 132+ 9A3E              ;    jr z,8F
 133+ 9A3E
 134+ 9A3E              ; 	Dispara Amadeus.
 135+ 9A3E
 136+ 9A3E              ;    ld c,$81	                                    ; Dirección "$81", hacia arriba.
 137+ 9A3E              ;    call PreviousScan
 138+ 9A3E              ;    call PreviousScan
 139+ 9A3E
 140+ 9A3E              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 141+ 9A3E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 142+ 9A3E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 143+ 9A3E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 144+ 9A3E
 145+ 9A3E              ;    jr 10F
 146+ 9A3E
 147+ 9A3E              ; 	Dispara Entidad.
 148+ 9A3E
 149+ 9A3E              8
 150+ 9A3E              ;    ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 151+ 9A3E              ;                                                   ; Impacto B="$80", no hay impacto.
 152+ 9A3E
 153+ 9A3E              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 154+ 9A3E              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 155+ 9A3E
 156+ 9A3E              ;    push bc
 157+ 9A3E              ;    ld b,16
 158+ 9A3E              9
 159+ 9A3E              ;    call NextScan
 160+ 9A3E              ;    djnz 9B
 161+ 9A3E              ;    pop bc
 162+ 9A3E              ;    call Ajusta_disparo_parte_izquierda
 163+ 9A3E               ;   jr 17F
 164+ 9A3E
 165+ 9A3E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 166+ 9A3E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 167+ 9A3E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 168+ 9A3E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 169+ 9A3E
 170+ 9A3E              10
 171+ 9A3E              ;;;;;    call Ajusta_disparo_parte_izquierda
 172+ 9A3E              ;;;;;    call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 173+ 9A3E              ;                                                      ; _al generar el disparo.
 174+ 9A3E
 175+ 9A3E              ; 	LLegados a este punto tendremos:
 176+ 9A3E              ;
 177+ 9A3E              ;       Puntero_objeto_disparo en IY.
 178+ 9A3E              ;       Rutinas_de_impresion en IX.
 179+ 9A3E              ;       Puntero_de_impresion en HL.
 180+ 9A3E              ;       Impacto/Dirección en BC.
 181+ 9A3E
 182+ 9A3E              17
 183+ 9A3E              ;;;;;    call Almacena_disparo
 184+ 9A3E              ;;;;;    jr 6F                                             ; RET.
 185+ 9A3E
 186+ 9A3E              ; 	Estamos en el 4º cuadrante de pantalla.
 187+ 9A3E              ; 	4º CUAD. ----- ----- ----- ----- -----
 188+ 9A3E              ;
 189+ 9A3E              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 190+ 9A3E              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 191+ 9A3E              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 192+ 9A3E
 193+ 9A3E              4
 194+ 9A3E              ;;;;;    ld hl,(Posicion_actual)
 195+ 9A3E
 196+ 9A3E              ;   Amadeus o entidad ???.
 197+ 9A3E
 198+ 9A3E              ;;;;;    ld a,(Ctrl_0)
 199+ 9A3E              ;;;;;    bit 6,a
 200+ 9A3E              ;;;;;    jr z,11F
 201+ 9A3E
 202+ 9A3E              ; 	Dispara Amadeus.
 203+ 9A3E
 204+ 9A3E              ;;;;;    ld c,$81                                          ; Dirección "$81", hacia arriba.
 205+ 9A3E              ;;;;    call PreviousScan
 206+ 9A3E              ;;;;    call PreviousScan
 207+ 9A3E
 208+ 9A3E              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 209+ 9A3E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 210+ 9A3E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 211+ 9A3E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 212+ 9A3E
 213+ 9A3E              ;;;;    jr 13F
 214+ 9A3E
 215+ 9A3E              ; 	Dispara Entidad.
 216+ 9A3E
 217+ 9A3E              11
 218+ 9A3E              ;;;;    ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 219+ 9A3E              ;                                                     ; Impacto B="$80", no hay impacto.
 220+ 9A3E
 221+ 9A3E              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 222+ 9A3E              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 223+ 9A3E
 224+ 9A3E              ;;;;    push bc
 225+ 9A3E              ;;;;    ld b,16
 226+ 9A3E              12
 227+ 9A3E              ;;;;    call NextScan
 228+ 9A3E              ;;;;    djnz 12B
 229+ 9A3E              ;;;;    pop bc
 230+ 9A3E
 231+ 9A3E               ;;;;   call Ajusta_disparo_parte_derecha
 232+ 9A3E              ;;;;    jr 18F
 233+ 9A3E
 234+ 9A3E              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 235+ 9A3E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 236+ 9A3E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 237+ 9A3E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 238+ 9A3E
 239+ 9A3E              13
 240+ 9A3E              ;;;;    call Ajusta_disparo_parte_derecha
 241+ 9A3E              ;;;;    call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 242+ 9A3E              ;                                                       ; _al generar el disparo.
 243+ 9A3E
 244+ 9A3E              ; LLegados a este punto tendremos:
 245+ 9A3E              ;
 246+ 9A3E              ;       Puntero_objeto_disparo en IY.
 247+ 9A3E              ;       Rutinas_de_impresion en IX.
 248+ 9A3E              ;       Puntero_de_impresion en HL.
 249+ 9A3E              ;       Impacto/Dirección en BC.
 250+ 9A3E
 251+ 9A3E              18
 252+ 9A3E              ;;;    call Almacena_disparo
 253+ 9A3E              ;;;    jr 6F                                               ; RET.
 254+ 9A3E
 255+ 9A3E              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 256+ 9A3E
 257+ 9A3E              3
 258+ 9A3E              ;;;    jr z,5F
 259+ 9A3E
 260+ 9A3E              ; 	1er CUAD. ----- ----- ----- ----- -----
 261+ 9A3E              ;
 262+ 9A3E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 263+ 9A3E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 264+ 9A3E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 265+ 9A3E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 266+ 9A3E
 267+ 9A3E              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 268+ 9A3E              ;	   ""        ""       "f9", B="1"
 269+ 9A3E              ;	   ""        ""       "fb", B="2"
 270+ 9A3E              ; 	   ""        ""       "fb", B="3"
 271+ 9A3E
 272+ 9A3E              ;;;	ld hl,(Posicion_actual)
 273+ 9A3E              ;;;	call NextScan
 274+ 9A3E
 275+ 9A3E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 276+ 9A3E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 277+ 9A3E              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 278+ 9A3E              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 279+ 9A3E
 280+ 9A3E              ;;    call Ajusta_disparo_parte_izquierda
 281+ 9A3E
 282+ 9A3E              ; 	No se produce impacto. B="$80"
 283+ 9A3E              ; 	Dirección del proyectil hacia abajo. C="$80"
 284+ 9A3E
 285+ 9A3E              ;;    ld bc,$8080
 286+ 9A3E
 287+ 9A3E              ; 	LLegados a este punto tendremos:
 288+ 9A3E              ;
 289+ 9A3E              ;       Puntero_objeto_disparo en IY.
 290+ 9A3E              ;       Rutinas_de_impresion en IX.
 291+ 9A3E              ;       Puntero_de_impresion en HL.
 292+ 9A3E              ;       Impacto/Dirección en BC.
 293+ 9A3E
 294+ 9A3E              ;;    call Almacena_disparo
 295+ 9A3E              ;;    jr 6F                                           ; RET.
 296+ 9A3E
 297+ 9A3E              ; 	Estamos en el 2º cuadrante de pantalla.
 298+ 9A3E              ; 	2º CUAD. ----- ----- ----- ----- -----
 299+ 9A3E              ;
 300+ 9A3E              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 301+ 9A3E              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 302+ 9A3E              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 303+ 9A3E              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 304+ 9A3E
 305+ 9A3E              5
 306+ 9A3E              ;;    ld hl,(Posicion_actual)
 307+ 9A3E              ;;	call NextScan
 308+ 9A3E
 309+ 9A3E              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 310+ 9A3E              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 311+ 9A3E              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 312+ 9A3E              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 313+ 9A3E
 314+ 9A3E              ;    call Ajusta_disparo_parte_derecha
 315+ 9A3E
 316+ 9A3E              ; 	No se produce impacto. B="$80"
 317+ 9A3E              ; 	Dirección del proyectil hacia abajo. C="80"
 318+ 9A3E
 319+ 9A3E              15
 320+ 9A3E              ;    ld bc,$8080
 321+ 9A3E
 322+ 9A3E              ; 	LLegados a este punto tendremos:
 323+ 9A3E              ;
 324+ 9A3E              ;       Puntero_objeto_disparo en IY.
 325+ 9A3E              ;       Rutinas_de_impresion en IX.
 326+ 9A3E              ;       Puntero_de_impresion en HL.
 327+ 9A3E              ;       Impacto/Dirección en BC.
 328+ 9A3E
 329+ 9A3E              ;    call Almacena_disparo
 330+ 9A3E
 331+ 9A3E              6
 332+ 9A3E C9               ret
 333+ 9A3F
 334+ 9A3F              ; ----------------------------------------------------------------
 335+ 9A3F              ;
 336+ 9A3F              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 337+ 9A3F              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 338+ 9A3F              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 339+ 9A3F
 340+ 9A3F 78           Ajusta_disparo_parte_derecha ld a,b
 341+ 9A40 FE 02            cp 2
 342+ 9A42 38 01            jr c,1F
 343+ 9A44 23               inc hl
 344+ 9A45 C9           1 ret
 345+ 9A46
 346+ 9A46 78           Ajusta_disparo_parte_izquierda ld a,b
 347+ 9A47 FE 01        	cp 1
 348+ 9A49 20 01        	jr nz,1F
 349+ 9A4B 2B           	dec hl
 350+ 9A4C 2B           1 dec hl
 351+ 9A4D C9               ret
 352+ 9A4E
 353+ 9A4E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 354+ 9A4E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 355+ 9A4E              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 356+ 9A4E
 357+ 9A4E
 358+ 9A4E              Colision_Entidad_Amadeus
 359+ 9A4E
 360+ 9A4E              ; Posible contacto de entidad con Amadeus. ?????
 361+ 9A4E
 362+ 9A4E              ; Exclusiones:
 363+ 9A4E
 364+ 9A4E 3A 3A 8A         ld a,(Shield)
 365+ 9A51 A7               and a
 366+ 9A52 C0               ret nz                                                 ; No comprobamos contacto si existe Shield.
 367+ 9A53
 368+ 9A53 21 17 8A         ld hl,Ctrl_3
 369+ 9A56 CB 76            bit 6,(hl)
 370+ 9A58 C0               ret nz                                                 ; Salimos si Amadeus ha sido destruido y estamos esperando nueva nave o mensaje final.
 371+ 9A59
 372+ 9A59 21 1D 8A         ld hl,Impacto2                                         ; Salimos si tenemos una posible colisión de una entidad anterior. Tenemos almacenadas las coordenadas X de otra entidad.
 373+ 9A5C CB 56            bit 2,(hl)
 374+ 9A5E C0               ret nz
 375+ 9A5F
 376+ 9A5F 3A B3 89     	ld a,(Coordenada_y)
 377+ 9A62 FE 14        	cp $14
 378+ 9A64 D8           	ret c                                                  ; Salimos si la entidad no está en zona de Amadeus.
 379+ 9A65
 380+ 9A65 3A B5 89         ld a,(Impacto)
 381+ 9A68 3D               dec a
 382+ 9A69 C8               ret z                                                  ; Salimos si la unidad que está en zona de Amadeus ya está impactada.
 383+ 9A6A
 384+ 9A6A              ; -------------------------------------------------------------------------------------------------------------
 385+ 9A6A              ;
 386+ 9A6A              ;   25/06/24
 387+ 9A6A              ;
 388+ 9A6A              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 389+ 9A6A              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 390+ 9A6A              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 391+ 9A6A              ;
 392+ 9A6A              ;   MODIFICA: HL,DE,BC y A.
 393+ 9A6A              ;   OUTPUTS: (Coordenadas_X_Entidad) y (Coordenadas_X_Amadeus) contienen el nº de las columnas que ocupan en pantalla.
 394+ 9A6A              ;            (Impacto) se coloca a "1" si coincide alguna de las columnas. Alto riesgo de colisión.
 395+ 9A6A
 396+ 9A6A              Genera_coordenadas_X
 397+ 9A6A
 398+ 9A6A              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 399+ 9A6A              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 400+ 9A6A
 401+ 9A6A              ;   Limpiamos almacenes.
 402+ 9A6A
 403+ 9A6A              ;    call Limpia_Coordenadas_X
 404+ 9A6A
 405+ 9A6A              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 406+ 9A6A
 407+ 9A6A 21 20 8A         ld hl,Coordenadas_X_Entidad
 408+ 9A6D 3A B2 89         ld a,(Coordenada_X)
 409+ 9A70 CD 92 9A         call Guarda_coordenadas_X
 410+ 9A73
 411+ 9A73              ;   Almacenamos las coordenadas X de Amadeus.
 412+ 9A73
 413+ 9A73 3A 67 87         ld a,(CX_Amadeus)
 414+ 9A76 CD 92 9A         call Guarda_coordenadas_X
 415+ 9A79 CD A6 9A         call Compara_coordenadas_X
 416+ 9A7C C0               ret nz
 417+ 9A7D
 418+ 9A7D 3E 01            ld a,1                                               ; El .db (Impacto)="1" indica que es altamente probable que esta_
 419+ 9A7F 32 B5 89         ld (Impacto),a                                       ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 420+ 9A82
 421+ 9A82 2A F1 89         ld hl,(Puntero_store_caja)
 422+ 9A85 2C               inc l
 423+ 9A86 2C               inc l
 424+ 9A87 2C               inc l
 425+ 9A88 2C               inc l
 426+ 9A89 22 1E 8A         ld (Entidad_sospechosa_de_colision),hl               ; En caso de que no exista colisión con Amadeus hemos de poner el .db (Impacto) de la (Entidad_sospechosa_de_colision) a "0" más adelante.
 427+ 9A8C
 428+ 9A8C 21 1D 8A         ld hl,Impacto2                                       ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 429+ 9A8F CB D6            set 2,(hl)
 430+ 9A91
 431+ 9A91 C9               ret
 432+ 9A92
 433+ 9A92               ; ----- ----- ----- ----- -----
 434+ 9A92
 435+ 9A92 77           Guarda_coordenadas_X ld (hl),a
 436+ 9A93 3C               inc a
 437+ 9A94 2C               inc l
 438+ 9A95 77               ld (hl),a
 439+ 9A96 3C               inc a
 440+ 9A97 2C               inc l
 441+ 9A98 77               ld (hl),a
 442+ 9A99 2C               inc l
 443+ 9A9A C9               ret
 444+ 9A9B
 445+ 9A9B AF           Limpia_Coordenadas_X xor a
 446+ 9A9C 06 06            ld b,6
 447+ 9A9E 21 23 8A         ld hl,Coordenadas_X_Amadeus
 448+ 9AA1 77           1 ld (hl),a
 449+ 9AA2 23               inc hl
 450+ 9AA3 10 FC            djnz 1B
 451+ 9AA5 C9               ret
 452+ 9AA6
 453+ 9AA6              ; ----- ----- ----- ----- -----
 454+ 9AA6
 455+ 9AA6              Compara_coordenadas_X
 456+ 9AA6
 457+ 9AA6 DD 21 20 8A      ld ix,Coordenadas_X_Entidad
 458+ 9AAA DD 7E 00         ld a,(ix+0)
 459+ 9AAD CD BB 9A         call Comparando
 460+ 9AB0 C8               ret z
 461+ 9AB1
 462+ 9AB1 3C               inc a
 463+ 9AB2 CD CA 9A         call Comparando_1
 464+ 9AB5 C8               ret z
 465+ 9AB6
 466+ 9AB6 3C               inc a
 467+ 9AB7 CD CA 9A         call Comparando_1
 468+ 9ABA C9               ret
 469+ 9ABB
 470+ 9ABB              ; ----- ----- ----- ----- -----
 471+ 9ABB              ;
 472+ 9ABB              ;   4/12/23
 473+ 9ABB              ;
 474+ 9ABB              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 475+ 9ABB
 476+ 9ABB              Comparando
 477+ 9ABB
 478+ 9ABB DD 2C            inc ixl
 479+ 9ABD DD 2C            inc ixl
 480+ 9ABF DD 2C            inc ixl
 481+ 9AC1
 482+ 9AC1 DD 46 00         ld b,(ix+0)
 483+ 9AC4 DD 4E 01         ld c,(ix+1)
 484+ 9AC7 DD 56 02         ld d,(ix+2)
 485+ 9ACA
 486+ 9ACA B8           Comparando_1 cp b
 487+ 9ACB C8               ret z
 488+ 9ACC B9               cp c
 489+ 9ACD C8               ret z
 490+ 9ACE BA               cp d
 491+ 9ACF C9               ret
 492+ 9AD0
 493+ 9AD0              ; -----------------------------------------------------------------------
 494+ 9AD0              ;
 495+ 9AD0              ;   04/7/24
 496+ 9AD0              ;
 497+ 9AD0
 498+ 9AD0              Detecta_colision_nave_entidad
 499+ 9AD0
 500+ 9AD0              ; Exclusiones:
 501+ 9AD0
 502+ 9AD0              ; Salimos de la rutina si no hay advertencia de posible colisión.
 503+ 9AD0
 504+ 9AD0 21 1D 8A     	ld hl,Impacto2
 505+ 9AD3 CB 56        	bit 2,(hl)
 506+ 9AD5 C8           	ret z
 507+ 9AD6
 508+ 9AD6              ; Detección byte a byte de colisión ENTIDAD-NAVE.
 509+ 9AD6
 510+ 9AD6 2A 6D 87         ld hl,(Pamm_Amadeus)
 511+ 9AD9 CD FB 8D         call Extrae_address
 512+ 9ADC 54               ld d,h
 513+ 9ADD 5D               ld e,l                                         ; (Puntero_objeto) en DE.
 514+ 9ADE
 515+ 9ADE 2A 6B 87         ld hl,(p.imp.amadeus)                          ; (Puntero_de_impresion) en HL.
 516+ 9AE1 06 10            ld b,16                                        ; Contador de scanlines en B.
 517+ 9AE3 FD 2E 03         ld iyl,3                                       ; Contador de impacto. Si su valor es "0" se considera "Colisión". Esto me permitirá ajustar la sensibilidad de la colisión en Amadeus.
 518+ 9AE6
 519+ 9AE6 C5           1 push bc
 520+ 9AE7 06 03            ld b,3
 521+ 9AE9 E5               push hl
 522+ 9AEA
 523+ 9AEA              ; .db
 524+ 9AEA
 525+ 9AEA 1A           3 ld a,(de)
 526+ 9AEB A7               and a
 527+ 9AEC 20 03            jr nz,4F
 528+ 9AEE
 529+ 9AEE 2C               inc l
 530+ 9AEF 18 08            jr 2F                                         ; No aplica CPI, no hay píxels en este .db.
 531+ 9AF1
 532+ 9AF1 ED A1        4 cpi                                             ; Comparamos el 1er .db de los tres de ancho que tiene el sprite de Amadeus.
 533+ 9AF3 28 04            jr z,2F
 534+ 9AF5
 535+ 9AF5              ; Impacto.
 536+ 9AF5 FD 2D            dec iyl
 537+ 9AF7 28 22            jr z,5F
 538+ 9AF9
 539+ 9AF9 1C           2 inc e
 540+ 9AFA 10 EE            djnz 3B
 541+ 9AFC
 542+ 9AFC E1               pop hl
 543+ 9AFD
 544+ 9AFD              ; Hay salto de línea en el puntero de impresión ???
 545+ 9AFD
 546+ 9AFD 7C               ld a,h
 547+ 9AFE D6 57            sub $57
 548+ 9B00 20 0A            jr nz,6F
 549+ 9B02
 550+ 9B02              ; Comprobamos la parte baja de Amadeus. Modifico manualmente el salto de línea en HL para no haver llamadas a [NextScan].
 551+ 9B02
 552+ 9B02 2A 6B 87         ld hl,(p.imp.amadeus)
 553+ 9B05 3E 20            ld a,$20
 554+ 9B07 A7               and a
 555+ 9B08 85               add l
 556+ 9B09 6F               ld l,a
 557+ 9B0A 18 01            jr 7F
 558+ 9B0C
 559+ 9B0C 24           6 inc h
 560+ 9B0D
 561+ 9B0D C1           7 pop bc
 562+ 9B0E 10 D6            djnz 1B
 563+ 9B10
 564+ 9B10              ;   Fin de la comparativa.
 565+ 9B10
 566+ 9B10              ;   NO HAY COLISIÓN !!!!!.
 567+ 9B10              ;
 568+ 9B10              ;   .db (Impacto) de Amadeus a "0".
 569+ 9B10              ;   RES el bit2 de (Impacto2).
 570+ 9B10              ;
 571+ 9B10              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 572+ 9B10              ;   Lo colocamos a "0".
 573+ 9B10
 574+ 9B10 21 1D 8A         ld hl,Impacto2
 575+ 9B13 CB 96            res 2,(hl)
 576+ 9B15 2A 1E 8A         ld hl,(Entidad_sospechosa_de_colision)
 577+ 9B18 36 00            ld (hl),0                                       ; Coloca a "0" el .db (Impacto) de la (Entidad_sospechosa_de_colision).
 578+ 9B1A C9               ret
 579+ 9B1B
 580+ 9B1B              ;   HAY COLISIÓN !!!!!.
 581+ 9B1B              ;
 582+ 9B1B              ;   .db (Impacto) de Amadeus a "1".
 583+ 9B1B              ;   SET el bit3 de (Impacto2).
 584+ 9B1B              ;
 585+ 9B1B              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 586+ 9B1B
 587+ 9B1B E1           5 pop hl
 588+ 9B1C C1               pop bc
 589+ 9B1D
 590+ 9B1D 21 6A 87         ld hl,Impacto_Amadeus
 591+ 9B20 36 01            ld (hl),1
 592+ 9B22 21 1D 8A         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 593+ 9B25 CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 594+ 9B27
 595+ 9B27 11 90 85         ld de,Indice_Explosion_entidades
 596+ 9B2A 2A 1E 8A         ld hl,(Entidad_sospechosa_de_colision)         ; Situamos el (Puntero_de_almacen_de_mov_masticados) de la entidad impactada en la primera palabra del índice de explosiones.
 597+ 9B2D 2C               inc l
 598+ 9B2E 2C               inc l
 599+ 9B2F 2C               inc l
 600+ 9B30 73               ld (hl),e
 601+ 9B31 2C               inc l
 602+ 9B32 72               ld (hl),d
 603+ 9B33
 604+ 9B33              ; Situamos también el (Puntero_de_almacen_de_mov_masticados) de Amadeus en la primero explosión.
 605+ 9B33
 606+ 9B33 11 30 86         ld de,Indice_Explosion_Amadeus
 607+ 9B36 21 6D 87         ld hl,Pamm_Amadeus
 608+ 9B39 73               ld (hl),e
 609+ 9B3A 2C               inc l
 610+ 9B3B 72               ld (hl),d
 611+ 9B3C
 612+ 9B3C C9               ret
 613+ 9B3D
 614+ 9B3D              ; -----
 615+ 9B3D
 616+ 9B3D              ;3 pop hl
 617+ 9B3D              ;    call NextScan
 618+ 9B3D              ;    push hl
 619+ 9B3D              ;    ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 620+ 9B3D              ;    cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 621+ 9B3D              ;    jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 622+ 9B3D               ;   jr nc,1F
 623+ 9B3D              ;                                                  ; _ 2º scanline si esto es así.
 624+ 9B3D              ;    djnz 2B
 625+ 9B3D
 626+ 9B3D              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 627+ 9B3D
 628+ 9B3D
 629+ 9B3D
 630+ 9B3D
 631+ 9B3D
# file closed: Disparo_2.asm
2339  9B3D              0
2340  9B3D
2341  9B3D              	SAVESNA "Pruebas.sna", START
2342  9B3D
2343  9B3D
2344  9B3D
2345  9B3D
# file closed: Banco_de_pruebas.asm
