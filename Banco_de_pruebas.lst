# file opened: Banco_de_pruebas.asm
   1  0000              ;	9/1/24
   2  0000
   3  0000              	DEVICE ZXSPECTRUM48
   4  0000
   5  0000              	org $a9ff
   6  A9FF
   7  A9FF              ;	Vector de interrupciones.
   8  A9FF
   9  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  10  AA01
  11  AA01              	org $aa01
  12  AA01
  13  AA01              ; Guardamos SP.
  14  AA01
  15  AA01 ED 73 2F 89  FRAME ld (Stack_3),sp
  16  AA05
  17  AA05              ;! debuggg
  18  AA05
  19  AA05 08           	ex af,af'
  20  AA06 F5           	push af	;af'
  21  AA07 D9           	exx
  22  AA08 E5           	push hl	;hl'
  23  AA09 D5           	push de	;de'
  24  AA0A C5           	push bc	;bc'
  25  AA0B D9           	exx
  26  AA0C E5           	push hl	;hl
  27  AA0D D5           	push de	;de
  28  AA0E C5           	push bc	;bc
  29  AA0F 08           	ex af,af'
  30  AA10 F5           	push af	;af
  31  AA11 DD E5        	push ix
  32  AA13 FD E5        	push iy
  33  AA15
  34  AA15              ; Pintamos entidades/Amadeus y gestionamos álbumes de fotos de entidades.
  35  AA15
  36  AA15 3E 02        	ld a,2
  37  AA17 D3 FE        	out ($fe),a
  38  AA19 CD AA 8E     	call Pinta_entidades									; Borde rojo.
  39  AA1C
  40  AA1C 3E 06        	ld a,6
  41  AA1E D3 FE        	out ($fe),a
  42  AA20 CD A0 8E     	call Pinta_Amadeus										; Borde amarillo.
  43  AA23
  44  AA23              ; En 1er lugar guardamos los 67 bytes de la entidad alojada en DRAW para restaurarlos antes de salir de la_
  45  AA23              ; _ rutina de interrupción. (Para gestionar Amadeus hemos de introducir sus datos en DRAW).
  46  AA23
  47  AA23 3E 07        	ld a,7
  48  AA25 D3 FE        	out ($fe),a												; Borde blanco.
  49  AA27 CD CC 8E     	call Guarda_parametros_DRAW
  50  AA2A CD F0 8D     	call Restore_Amadeus
  51  AA2D
  52  AA2D              ; Posible colisión Entidad-Amadeus ???
  53  AA2D
  54  AA2D 3A 3F 89     	ld a,(Impacto2)
  55  AA30 CB 57        	bit 2,a
  56  AA32 28 03        	jr z,1F
  57  AA34
  58  AA34 CD EF 90     	call Detecta_colision_nave_entidad
  59  AA37
  60  AA37 3E 04        1 ld a,4
  61  AA39 D3 FE        	out ($fe),a
  62  AA3B CD 01 8B     	call Gestiona_Amadeus
  63  AA3E
  64  AA3E 3E 07        	ld a,7
  65  AA40 D3 FE        	out ($fe),a											; Borde blanco.
  66  AA42 11 7E 85     	ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
  67  AA45 CD 02 8E     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
  68  AA48
  69  AA48              ; Restauramos los parámetros de la entidad que había alojada en DRAW "antes de gestionar AMADEUS".
  70  AA48
  71  AA48 CD D8 8E     	call Recupera_parametros_DRAW
  72  AA4B CD BA 8E     	call Actualiza_relojes
  73  AA4E
  74  AA4E 21 39 89     	ld hl,Ctrl_3
  75  AA51 CB 86        	res 0,(hl)											; Reinicia el flag de FRAME completo.
  76  AA53
  77  AA53 FD E1        	pop iy
  78  AA55 DD E1        	pop ix
  79  AA57 F1           	pop af
  80  AA58 C1           	pop bc
  81  AA59 D1           	pop de
  82  AA5A E1           	pop hl
  83  AA5B D9           	exx
  84  AA5C C1           	pop bc
  85  AA5D D1           	pop de
  86  AA5E E1           	pop hl
  87  AA5F 08           	ex af,af'
  88  AA60 F1           	pop af
  89  AA61 08           	ex af,af'
  90  AA62 D9           	exx
  91  AA63
  92  AA63 ED 7B 2F 89  	ld sp,(Stack_3)
  93  AA67
  94  AA67 FB           	ei
  95  AA68
  96  AA68 3E 01        	ld a,1												; Borde azul.
  97  AA6A D3 FE        	out ($fe),a
  98  AA6C
  99  AA6C C9           	ret
 100  AA6D
 101  AA6D              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 102  AA6D
 103  AA6D              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA6D              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA6D              ;
   3+ AA6D              ;	17/02/23
   4+ AA6D              ;
   5+ AA6D              ;	Sprites e índices.
   6+ AA6D
   7+ AA6D              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC
 254+ 84EC
 255+ 84EC
 256+ 84EC
# file closed: Sprites_e_indices.asm
 104  84EC              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 84EC
   2+ 84EC              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 84EC
   4+ 84EC              ; 13/05/23
   5+ 84EC
   6+ 84EC              ; Control. %00000001 00000001
   7+ 84EC              ;
   8+ 84EC              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 84EC              ;                    _ hacen las entidades hacia abajo.
  10+ 84EC              ;
  11+ 84EC              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 84EC
  13+ 84EC F2 84        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 84EE FA 84        	defw Disparo_2A
  15+ 84F0 02 85        	defw Disparo_3A
  16+ 84F2
  17+ 84F2 00 00        Disparo_1A defw 0									; Control.
  18+ 84F4 00 00        	defw 0											; Puntero objeto.
  19+ 84F6 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 84F8 00 00        	defw 0											; Rutina de impresión.
  21+ 84FA
  22+ 84FA 00 00        Disparo_2A defw 0									; Control.
  23+ 84FC 00 00        	defw 0											; Puntero objeto.
  24+ 84FE 00 00        	defw 0											; Puntero de impresión.
  25+ 8500 00 00        	defw 0											; Rutina de impresión.
  26+ 8502
  27+ 8502 00 00        Disparo_3A defw 0
  28+ 8504
  29+ 8504 1A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8506 22 85        	defw Disparo_2
  31+ 8508 2A 85        	defw Disparo_3
  32+ 850A 32 85        	defw Disparo_4
  33+ 850C 3A 85        	defw Disparo_5
  34+ 850E 42 85        	defw Disparo_6
  35+ 8510 4A 85        	defw Disparo_7
  36+ 8512 52 85        	defw Disparo_8
  37+ 8514 5A 85        	defw Disparo_9
  38+ 8516 62 85        	defw Disparo_10
  39+ 8518 6A 85        	defw Disparo_11
  40+ 851A
  41+ 851A 00 00        Disparo_1 defw 0									; Control.
  42+ 851C 00 00        	defw 0											; Puntero objeto.
  43+ 851E 00 00        	defw 0											; Puntero de impresión.
  44+ 8520 00 00        	defw 0											; Rutina de impresión.
  45+ 8522
  46+ 8522 00 00        Disparo_2 defw 0									; Control.
  47+ 8524 00 00        	defw 0											; Puntero objeto.
  48+ 8526 00 00        	defw 0											; Puntero de impresión.
  49+ 8528 00 00        	defw 0											; Rutina de impresión.
  50+ 852A
  51+ 852A 00 00        Disparo_3 defw 0									; Control.
  52+ 852C 00 00        	defw 0											; Puntero objeto.
  53+ 852E 00 00        	defw 0											; Puntero de impresión.
  54+ 8530 00 00        	defw 0											; Rutina de impresión.
  55+ 8532
  56+ 8532 00 00        Disparo_4 defw 0									; Control.
  57+ 8534 00 00        	defw 0											; Puntero objeto.
  58+ 8536 00 00        	defw 0											; Puntero de impresión.
  59+ 8538 00 00        	defw 0											; Rutina de impresión.
  60+ 853A
  61+ 853A 00 00        Disparo_5 defw 0									; Control.
  62+ 853C 00 00        	defw 0											; Puntero objeto.
  63+ 853E 00 00        	defw 0											; Puntero de impresión.
  64+ 8540 00 00        	defw 0											; Rutina de impresión.
  65+ 8542
  66+ 8542 00 00        Disparo_6 defw 0									; Control.
  67+ 8544 00 00        	defw 0											; Puntero objeto.
  68+ 8546 00 00        	defw 0											; Puntero de impresión.
  69+ 8548 00 00        	defw 0											; Rutina de impresión.
  70+ 854A
  71+ 854A 00 00        Disparo_7 defw 0									; Control.
  72+ 854C 00 00        	defw 0											; Puntero objeto.
  73+ 854E 00 00        	defw 0											; Puntero de impresión.
  74+ 8550 00 00        	defw 0											; Rutina de impresión.
  75+ 8552
  76+ 8552 00 00        Disparo_8 defw 0									; Control.
  77+ 8554 00 00        	defw 0											; Puntero objeto.
  78+ 8556 00 00        	defw 0											; Puntero de impresión.
  79+ 8558 00 00        	defw 0											; Rutina de impresión.
  80+ 855A
  81+ 855A 00 00        Disparo_9 defw 0									; Control.
  82+ 855C 00 00        	defw 0											; Puntero objeto.
  83+ 855E 00 00        	defw 0											; Puntero de impresión.
  84+ 8560 00 00        	defw 0											; Rutina de impresión.
  85+ 8562
  86+ 8562 00 00        Disparo_10 defw 0									; Control.
  87+ 8564 00 00        	defw 0											; Puntero objeto.
  88+ 8566 00 00        	defw 0											; Puntero de impresión.
  89+ 8568 00 00        	defw 0											; Rutina de impresión.
  90+ 856A
  91+ 856A 00 00        Disparo_11 defw 0
  92+ 856C
  93+ 856C              ; -------------------------------------------------------------------------------------
  94+ 856C              ;
  95+ 856C              ;	Índice de cajas de entidades.
  96+ 856C              ;
  97+ 856C              ;	9/1/24
  98+ 856C              ;
  99+ 856C
 100+ 856C              Indice_de_cajas_de_entidades						; ! 67 Bytes por entidad.
 101+ 856C
 102+ 856C C1 85        	defw Caja_1
 103+ 856E 04 86        	defw Caja_2
 104+ 8570 47 86        	defw Caja_3
 105+ 8572 8A 86        	defw Caja_4
 106+ 8574 CD 86        	defw Caja_5
 107+ 8576 10 87        	defw Caja_6
 108+ 8578 53 87        	defw Caja_7
 109+ 857A
 110+ 857A 00 00        	defw 0
 111+ 857C 00 00        	defw 0
 112+ 857E
 113+ 857E              ; ---------- ---------- ---------- ---------- ----------
 114+ 857E
 115+ 857E 02 02        Amadeus_db db 2,2										; (Filas) / (Columns).
 116+ 8580 00 00        	defw 0		 										; (Posicion_actual).
 117+ 8582 00 00        	defw 0	 											; (Puntero_objeto).
 118+ 8584 00 00        	db 0,0												; (Coordenada_X) / (Coordenada_Y).
 119+ 8586
 120+ 8586 00           ctrl_desplz_amadeus	db 0								; (CTRL_DESPLZ).
 121+ 8587
 122+ 8587 05           	db %00000101										; (Attr).
 123+ 8588 20 83        	defw Indice_Amadeus_der								; (Indice_Sprite_der).
 124+ 858A 30 83        	defw Indice_Amadeus_izq								; (Indice_Sprite_izq).
 125+ 858C
 126+ 858C 00 00        	defw 0		 										; (Puntero_DESPLZ_der).
 127+ 858E 00 00        	defw 0												; (Puntero_DESPLZ_izq).
 128+ 8590
 129+ 8590 C1 50        	defw $50c1											; (Posicion_inicio).		$50c1 - $50de
 130+ 8592 04           	db 4 												; (Cuad_objeto).
 131+ 8593 02 02 00 00  	db 2,2,0,0											; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 132+ 8597
 133+ 8597 00           	db 0												; Impacto. "1" existe impacto en la entidad.
 134+ 8598
 135+ 8598 00 00 00...  	ds 6												; Variables_de_borrado
 136+ 859E
 137+ 859E 00 00        	db 0,0												; Variables_de_pintado
 138+ 85A0 00 00        	defw 0												;	" " " " " " "
 139+ 85A2 00 00        	defw 0												;	" " " " " " "
 140+ 85A4 00 00 00 00  	db 0,0,0,0											;	" " " " " " "
 141+ 85A8
 142+ 85A8 00 00        p.imp.amadeus defw 0 									; Puntero_de_impresion.
 143+ 85AA
 144+ 85AA 5A E8        	defw Almacen_de_movimientos_masticados_Amadeus+6  	; Puntero_de_almacen_de_mov_masticados
 145+ 85AC 00 00        	defw 0 												; Contador_de_mov_masticados
 146+ 85AE
 147+ 85AE 40           	db $40												; (Ctrl_0).
 148+ 85AF
 149+ 85AF 00 00 00 00  	defw 0,0,0	 										; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 149+ 85B3 00 00
 150+ 85B5 00 00 00     	db 0,0,0											; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 151+ 85B8
 152+ 85B8 00 00        	db 0,0												; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 153+ 85BA 00           	db 0												; (Cola_de_desplazamiento).
 154+ 85BB
 155+ 85BB 00           	db 0 												; (Columnas).
 156+ 85BC 00 00        	defw 0												; (Limite_horizontal).
 157+ 85BE 00 00 00     	db 0,0,0											; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 158+ 85C1
 159+ 85C1              ; ---------- ---------- ---------- ---------- ----------
 160+ 85C1
 161+ 85C1 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 162+ 85C3 00 00        	defw 0											; (Posicion_actual).
 163+ 85C5 00 00        	defw 0 											; (Puntero_objeto).
 164+ 85C7 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 165+ 85CA
 166+ 85CA 00           	db %00000000 									; (Attr).
 167+ 85CB
 168+ 85CB 00 00        	defw 0											; (Indice_Sprite_der).
 169+ 85CD 00 00        	defw 0											; (Indice_Sprite_izq).
 170+ 85CF 00 00        	defw 0											; (Puntero_DESPLZ_der).
 171+ 85D1 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 172+ 85D3
 173+ 85D3 00 00        	defw 0											; (Posicion_inicio).
 174+ 85D5 00           	db 0											; (Cuad_objeto).
 175+ 85D6
 176+ 85D6 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 177+ 85DA
 178+ 85DA 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 179+ 85DB
 180+ 85DB 00 00 00...  	ds 6											; Variables_de_borrado
 181+ 85E1
 182+ 85E1 00 00        	db 0,0											; Variables_de_pintado
 183+ 85E3 00 00        	defw 0											;	" " " " " " "
 184+ 85E5 00 00        	defw 0											;	" " " " " " "
 185+ 85E7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 186+ 85EB
 187+ 85EB 00 00        	defw 0 											; Puntero_de_impresion.
 188+ 85ED
 189+ 85ED 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 190+ 85EF 00 00        	defw 0 											; Contador_de_mov_masticados
 191+ 85F1
 192+ 85F1 00           	db 0											; (Ctrl_0).
 193+ 85F2
 194+ 85F2 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 194+ 85F6 00 00
 195+ 85F8 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 196+ 85FB
 197+ 85FB 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 198+ 85FD 00           	db 0											; (Cola_de_desplazamiento).
 199+ 85FE
 200+ 85FE 00           	db 0 											; (Columnas).
 201+ 85FF 00 00        	defw 0											; (Limite_horizontal).
 202+ 8601 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 203+ 8604
 204+ 8604              ; ---------- ---------- ---------- ---------- ----------
 205+ 8604
 206+ 8604 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 207+ 8606 00 00        	defw 0											; (Posicion_actual).
 208+ 8608 00 00        	defw 0 											; (Puntero_objeto).
 209+ 860A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 210+ 860D
 211+ 860D 00           	db %00000000 									; (Attr).
 212+ 860E
 213+ 860E 00 00        	defw 0											; (Indice_Sprite_der).
 214+ 8610 00 00        	defw 0											; (Indice_Sprite_izq).
 215+ 8612 00 00        	defw 0											; (Puntero_DESPLZ_der).
 216+ 8614 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 217+ 8616
 218+ 8616 00 00        	defw 0											; (Posicion_inicio).
 219+ 8618 00           	db 0											; (Cuad_objeto).
 220+ 8619
 221+ 8619 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 222+ 861D
 223+ 861D 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 224+ 861E
 225+ 861E 00 00 00...  	ds 6											; Variables_de_borrado
 226+ 8624
 227+ 8624 00 00        	db 0,0											; Variables_de_pintado
 228+ 8626 00 00        	defw 0											;	" " " " " " "
 229+ 8628 00 00        	defw 0											;	" " " " " " "
 230+ 862A 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 231+ 862E
 232+ 862E 00 00        	defw 0 											; Puntero_de_impresion.
 233+ 8630
 234+ 8630 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 235+ 8632 00 00        	defw 0 											; Contador_de_mov_masticados
 236+ 8634
 237+ 8634 00           	db 0											; (Ctrl_0).
 238+ 8635
 239+ 8635 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 239+ 8639 00 00
 240+ 863B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 241+ 863E
 242+ 863E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 243+ 8640 00           	db 0											; (Cola_de_desplazamiento).
 244+ 8641
 245+ 8641 00           	db 0 											; (Columnas).
 246+ 8642 00 00        	defw 0											; (Limite_horizontal).
 247+ 8644 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 248+ 8647
 249+ 8647              ; ---------- ---------- ---------- ---------- ----------
 250+ 8647
 251+ 8647 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 252+ 8649 00 00        	defw 0											; (Posicion_actual).
 253+ 864B 00 00        	defw 0 											; (Puntero_objeto).
 254+ 864D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 255+ 8650
 256+ 8650 00           	db %00000000 									; (Attr).
 257+ 8651
 258+ 8651 00 00        	defw 0											; (Indice_Sprite_der).
 259+ 8653 00 00        	defw 0											; (Indice_Sprite_izq).
 260+ 8655 00 00        	defw 0											; (Puntero_DESPLZ_der).
 261+ 8657 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 262+ 8659
 263+ 8659 00 00        	defw 0											; (Posicion_inicio).
 264+ 865B 00           	db 0											; (Cuad_objeto).
 265+ 865C
 266+ 865C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 267+ 8660
 268+ 8660 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 269+ 8661
 270+ 8661 00 00 00...  	ds 6											; Variables_de_borrado
 271+ 8667
 272+ 8667 00 00        	db 0,0											; Variables_de_pintado
 273+ 8669 00 00        	defw 0											;	" " " " " " "
 274+ 866B 00 00        	defw 0											;	" " " " " " "
 275+ 866D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 276+ 8671
 277+ 8671 00 00        	defw 0 											; Puntero_de_impresion.
 278+ 8673
 279+ 8673 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 280+ 8675 00 00        	defw 0 											; Contador_de_mov_masticados
 281+ 8677
 282+ 8677 00           	db 0											; (Ctrl_0).
 283+ 8678
 284+ 8678 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 284+ 867C 00 00
 285+ 867E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 286+ 8681
 287+ 8681 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 288+ 8683 00           	db 0											; (Cola_de_desplazamiento).
 289+ 8684
 290+ 8684 00           	db 0 											; (Columnas).
 291+ 8685 00 00        	defw 0											; (Limite_horizontal).
 292+ 8687 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 293+ 868A
 294+ 868A              ; ---------- ---------- ---------- ---------- ----------
 295+ 868A
 296+ 868A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 297+ 868C 00 00        	defw 0											; (Posicion_actual).
 298+ 868E 00 00        	defw 0 											; (Puntero_objeto).
 299+ 8690 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 300+ 8693
 301+ 8693 00           	db %00000000 									; (Attr).
 302+ 8694
 303+ 8694 00 00        	defw 0											; (Indice_Sprite_der).
 304+ 8696 00 00        	defw 0											; (Indice_Sprite_izq).
 305+ 8698 00 00        	defw 0											; (Puntero_DESPLZ_der).
 306+ 869A 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 307+ 869C
 308+ 869C 00 00        	defw 0											; (Posicion_inicio).
 309+ 869E 00           	db 0											; (Cuad_objeto).
 310+ 869F
 311+ 869F 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 312+ 86A3
 313+ 86A3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 314+ 86A4
 315+ 86A4 00 00 00...  	ds 6											; Variables_de_borrado
 316+ 86AA
 317+ 86AA 00 00        	db 0,0											; Variables_de_pintado
 318+ 86AC 00 00        	defw 0											;	" " " " " " "
 319+ 86AE 00 00        	defw 0											;	" " " " " " "
 320+ 86B0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 321+ 86B4
 322+ 86B4 00 00        	defw 0 											; Puntero_de_impresion.
 323+ 86B6
 324+ 86B6 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 325+ 86B8 00 00        	defw 0 											; Contador_de_mov_masticados
 326+ 86BA
 327+ 86BA 00           	db 0											; (Ctrl_0).
 328+ 86BB
 329+ 86BB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 329+ 86BF 00 00
 330+ 86C1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 331+ 86C4
 332+ 86C4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 333+ 86C6 00           	db 0											; (Cola_de_desplazamiento).
 334+ 86C7
 335+ 86C7 00           	db 0 											; (Columnas).
 336+ 86C8 00 00        	defw 0											; (Limite_horizontal).
 337+ 86CA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 338+ 86CD
 339+ 86CD              ; ---------- ---------- ---------- ---------- ----------
 340+ 86CD
 341+ 86CD 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 342+ 86CF 00 00        	defw 0											; (Posicion_actual).
 343+ 86D1 00 00        	defw 0 											; (Puntero_objeto).
 344+ 86D3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 345+ 86D6
 346+ 86D6 00           	db %00000000 									; (Attr).
 347+ 86D7
 348+ 86D7 00 00        	defw 0											; (Indice_Sprite_der).
 349+ 86D9 00 00        	defw 0											; (Indice_Sprite_izq).
 350+ 86DB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 351+ 86DD 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 352+ 86DF
 353+ 86DF 00 00        	defw 0											; (Posicion_inicio).
 354+ 86E1 00           	db 0											; (Cuad_objeto).
 355+ 86E2
 356+ 86E2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 357+ 86E6
 358+ 86E6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 359+ 86E7
 360+ 86E7 00 00 00...  	ds 6											; Variables_de_borrado
 361+ 86ED
 362+ 86ED 00 00        	db 0,0											; Variables_de_pintado
 363+ 86EF 00 00        	defw 0											;	" " " " " " "
 364+ 86F1 00 00        	defw 0											;	" " " " " " "
 365+ 86F3 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 366+ 86F7
 367+ 86F7 00 00        	defw 0 											; Puntero_de_impresion.
 368+ 86F9
 369+ 86F9 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 370+ 86FB 00 00        	defw 0 											; Contador_de_mov_masticados
 371+ 86FD
 372+ 86FD 00           	db 0											; (Ctrl_0).
 373+ 86FE
 374+ 86FE 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 374+ 8702 00 00
 375+ 8704 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 376+ 8707
 377+ 8707 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 378+ 8709 00           	db 0											; (Cola_de_desplazamiento).
 379+ 870A
 380+ 870A 00           	db 0 											; (Columnas).
 381+ 870B 00 00        	defw 0											; (Limite_horizontal).
 382+ 870D 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 383+ 8710
 384+ 8710              ; ---------- ---------- ---------- ---------- ----------
 385+ 8710
 386+ 8710 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 387+ 8712 00 00        	defw 0											; (Posicion_actual).
 388+ 8714 00 00        	defw 0 											; (Puntero_objeto).
 389+ 8716 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 390+ 8719
 391+ 8719 00           	db %00000000 									; (Attr).
 392+ 871A
 393+ 871A 00 00        	defw 0											; (Indice_Sprite_der).
 394+ 871C 00 00        	defw 0											; (Indice_Sprite_izq).
 395+ 871E 00 00        	defw 0											; (Puntero_DESPLZ_der).
 396+ 8720 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 397+ 8722
 398+ 8722 00 00        	defw 0											; (Posicion_inicio).
 399+ 8724 00           	db 0											; (Cuad_objeto).
 400+ 8725
 401+ 8725 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 402+ 8729
 403+ 8729 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 404+ 872A
 405+ 872A 00 00 00...  	ds 6											; Variables_de_borrado
 406+ 8730
 407+ 8730 00 00        	db 0,0											; Variables_de_pintado
 408+ 8732 00 00        	defw 0											;	" " " " " " "
 409+ 8734 00 00        	defw 0											;	" " " " " " "
 410+ 8736 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 411+ 873A
 412+ 873A 00 00        	defw 0 											; Puntero_de_impresion.
 413+ 873C
 414+ 873C 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 415+ 873E 00 00        	defw 0 											; Contador_de_mov_masticados
 416+ 8740
 417+ 8740 00           	db 0											; (Ctrl_0).
 418+ 8741
 419+ 8741 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 419+ 8745 00 00
 420+ 8747 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 421+ 874A
 422+ 874A 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 423+ 874C 00           	db 0											; (Cola_de_desplazamiento).
 424+ 874D
 425+ 874D 00           	db 0 											; (Columnas).
 426+ 874E 00 00        	defw 0											; (Limite_horizontal).
 427+ 8750 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 428+ 8753
 429+ 8753              ; ---------- ---------- ---------- ---------- ----------
 430+ 8753
 431+ 8753 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 432+ 8755 00 00        	defw 0											; (Posicion_actual).
 433+ 8757 00 00        	defw 0 											; (Puntero_objeto).
 434+ 8759 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 435+ 875C
 436+ 875C 00           	db %00000000 									; (Attr).
 437+ 875D
 438+ 875D 00 00        	defw 0											; (Indice_Sprite_der).
 439+ 875F 00 00        	defw 0											; (Indice_Sprite_izq).
 440+ 8761 00 00        	defw 0											; (Puntero_DESPLZ_der).
 441+ 8763 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 442+ 8765
 443+ 8765 00 00        	defw 0											; (Posicion_inicio).
 444+ 8767 00           	db 0											; (Cuad_objeto).
 445+ 8768
 446+ 8768 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 447+ 876C
 448+ 876C 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 449+ 876D
 450+ 876D 00 00 00...  	ds 6											; Variables_de_borrado
 451+ 8773
 452+ 8773 00 00        	db 0,0											; Variables_de_pintado
 453+ 8775 00 00        	defw 0											;	" " " " " " "
 454+ 8777 00 00        	defw 0											;	" " " " " " "
 455+ 8779 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 456+ 877D
 457+ 877D 00 00        	defw 0 											; Puntero_de_impresion.
 458+ 877F
 459+ 877F 00 00        	defw 0											; Puntero_de_almacen_de_mov_masticados
 460+ 8781 00 00        	defw 0 											; Contador_de_mov_masticados
 461+ 8783
 462+ 8783 00           	db 0											; (Ctrl_0).
 463+ 8784
 464+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 464+ 8788 00 00
 465+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 466+ 878D
 467+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 468+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 469+ 8790
 470+ 8790 00           	db 0 											; (Columnas).
 471+ 8791 00 00        	defw 0											; (Limite_horizontal).
 472+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 473+ 8796
 474+ 8796              ; -------------------------------------------------------------------------------------
 475+ 8796              ;
 476+ 8796              ;	20/05/23
 477+ 8796              ;
 478+ 8796              ;	TIPOS de "Entidades maliciosas" que quieren conquistar la Tierra.
 479+ 8796              ;
 480+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 481+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 482+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 483+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 484+ 8796
 485+ 8796              Indice_de_entidades
 486+ 8796
 487+ 8796 9A 87        	defw Entidad_1
 488+ 8798 AD 87        	defw Entidad_2
 489+ 879A
 490+ 879A              ;	BADSAT, (Satélite malvado).
 491+ 879A
 492+ 879A 02 02        Entidad_1 db 2,2		                     			; (Filas) / (Columns).
 493+ 879C 04           	db %00000100										; (Attr).
 494+ 879D A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 495+ 879F 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 496+ 87A1 03 40        	defw $4003	                             	    	; (Posicion_inicio).
 497+ 87A3 01           	db 1												; (Cuad_objeto).
 498+ 87A4 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 499+ 87A8 36 EB        	defw Almacen_de_movimientos_masticados_Entidad_1+6	; (Puntero_de_almacen_de_mov_masticados)
 500+ 87AA A7 9D        	defw Indice_mov_Baile_de_BadSat						; (Puntero_indice_mov)
 501+ 87AC 03           	db 3												; (Frames_explosion).
 502+ 87AD
 503+ 87AD 02 02        Entidad_2 db 2,2		                     			; (Filas) / (Columns).
 504+ 87AF 02           	db %00000010										; (Attr).
 505+ 87B0 A0 81        	defw Indice_Badsat_der								; (Indice_Sprite_der).
 506+ 87B2 20 80        	defw Indice_Badsat_izq								; (Indice_Sprite_izq).
 507+ 87B4 40 50        	defw $5040                                      	; (Posicion_inicio).
 508+ 87B6 01           	db 1												; (Cuad_objeto).
 509+ 87B7 01 01 01 01  	db 1,1,1,1                                      	; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 510+ 87BB 36 EB        	defw Almacen_de_movimientos_masticados_Entidad_1+6	; (Puntero_de_almacen_de_mov_masticados)
 511+ 87BD A7 9D        	defw Indice_mov_Baile_de_BadSat				    	; (Puntero_indice_mov)
 512+ 87BF 03           	db 3												; (Frames_explosion).
# file closed: Cajas_y_disparos.asm
 105  87C0              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87C0              ; 13/05/23
   2+ 87C0
   3+ 87C0              Indice_de_niveles
   4+ 87C0
   5+ 87C0 CE 87        	defw Nivel_1
   6+ 87C2 D1 87        	defw Nivel_2
   7+ 87C4 DE 87        	defw Nivel_3
   8+ 87C6 EE 87        	defw Nivel_4
   9+ 87C8 00 88        	defw Nivel_5
  10+ 87CA              ;	...
  11+ 87CA              ;	...
  12+ 87CA              ;	+ Niveles ...
  13+ 87CA
  14+ 87CA 00 00        	defw 0
  15+ 87CC 00 00        	defw 0
  16+ 87CE
  17+ 87CE 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87CF 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87D1 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87D2 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D6 01 02
  21+ 87D8 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87DC 01 02
  22+ 87DE 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87DF 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87E3 01
  24+ 87E4 03 01 01 01  	db 3,1,1,1,1
  24+ 87E8 01
  25+ 87E9 03 01 01 01  	db 3,1,1,1,1
  25+ 87ED 01
  26+ 87EE 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87EF 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87F3 01
  28+ 87F4 04 01 01 01  	db 4,1,1,1,1
  28+ 87F8 01
  29+ 87F9 04 01 01 01  	db 4,1,1,1,1
  29+ 87FD 01
  30+ 87FE 02 03        	db 2,3
  31+ 8800 14           Nivel_5 db 20									; Nº de entidades.
  32+ 8801 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 8805 01
  33+ 8806 05 01 01 01  	db 5,1,1,1,1
  33+ 880A 01
  34+ 880B 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 880F 01
  35+ 8810 05 01 01 01  	db 5,1,1,1,1
  35+ 8814 01
  36+ 8815
  37+ 8815              ;---------------------------------------------------------------------------------------------------------------
  38+ 8815              ;
  39+ 8815              ;   5/1/24
  40+ 8815              ;
  41+ 8815              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 8815              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 8815              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 8815              ;	_en la caja DRAW correspondiente.
  45+ 8815              ;
  46+ 8815              ;	MODIFICA: HL,DE y A.
  47+ 8815              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 8815
  49+ 8815              Inicializa_Punteros_de_nivel
  50+ 8815
  51+ 8815 21 C0 87     	ld hl,Indice_de_niveles
  52+ 8818 22 57 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 881B CD 3C 8D     	call Extrae_address
  54+ 881E 7E           	ld a,(hl)
  55+ 881F 32 23 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 8822 23           	inc hl
  57+ 8823 22 59 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8826 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8827
  60+ 8827              ;---------------------------------------------------------------------------------------------------------------
  61+ 8827              ;
  62+ 8827              ;   5/1/24
  63+ 8827              ;
  64+ 8827              ;	Destruye A,BC,HL,DE
  65+ 8827
  66+ 8827              ;	Esta rutina se encarga de preparar las CAJAS DE ENTIDADES con un tipo de entidad.
  67+ 8827              ;	El tipo de entidad que vamos a `volcar´ en cada caja viene determinado por el valor de (Datos_de_nivel).
  68+ 8827
  69+ 8827              Prepara_cajas_de_entidades
  70+ 8827
  71+ 8827              ; Preparamos los punteros de las cajas de entidades:
  72+ 8827
  73+ 8827 21 6C 85     	ld hl,Indice_de_cajas_de_entidades
  74+ 882A CD 3C 8D     	call Extrae_address
  75+ 882D CD 6A 88     	call Avanza_caja_de_entidades								; Situa (Puntero_store_caja) en el 1er .db de la caja que vamos a preparar.
  76+ 8830              ;																; Situa (Indice_restore_caja) en el siguiente .defw del índice de cajas de entidades.
  77+ 8830
  78+ 8830 CD B8 88     	call Inicializa_Numero_parcial_de_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  79+ 8833
  80+ 8833 2A 59 89     	ld hl,(Datos_de_nivel)
  81+ 8836
  82+ 8836              ; En este punto:
  83+ 8836              ;
  84+ 8836              ; HL está situado en los .db del Nivel que indican el `tipo´ de entidad a volcar en la caja de entidades.
  85+ 8836              ; B contiene (Numero_parcial_de_entidades), (nº de cajas que vamos a rellenar).
  86+ 8836
  87+ 8836 C5           1 push bc 										; Guardo el nº de cajas a rellenar.
  88+ 8837
  89+ 8837 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la caja.
  90+ 8838 CD 58 88     	call Calcula_salto_en_BC					; Calcula salto para situarnos en los "datos" de la entidad correcta del indice de entidades.
  91+ 883B
  92+ 883B 21 96 87     	ld hl,Indice_de_entidades
  93+ 883E CD 60 88     	call Situa_en_datos_de_entidad				; Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
  94+ 8841              ;												; Actualiza (Datos_de_entidad) con esa dirección.
  95+ 8841
  96+ 8841 CD 74 88     	call Datos_de_entidad_a_caja				; Vuelca los datos de la entidad en la caja.
  97+ 8844
  98+ 8844 2A 21 89     	ld hl,(Indice_restore_caja)					; AVANZA CAJA.
  99+ 8847 CD 3C 8D     	call Extrae_address
 100+ 884A CD 6A 88     	call Avanza_caja_de_entidades
 101+ 884D
 102+ 884D 2A 59 89     	ld hl,(Datos_de_nivel)
 103+ 8850 23           	inc hl
 104+ 8851 22 59 89     	ld (Datos_de_nivel),hl						; SIGUIENTE TIPO DE ENTIDAD.
 105+ 8854
 106+ 8854 C1           	pop bc
 107+ 8855 10 DF        	djnz 1B
 108+ 8857
 109+ 8857 C9           	ret
 110+ 8858
 111+ 8858              ;	------------------------------------------------------------------------------------
 112+ 8858              ;
 113+ 8858              ;	5/1/24
 114+ 8858              ;
 115+ 8858              ;	Esta pequeña sub-rutina carga BC con 0,2,4,6,8 ... en función del tipo de entidad: (1,2,3,4,...).
 116+ 8858              ;	Calcula "el salto" para situarnos en los DATOS de la ENTIDAD correcta del índice de entidades según el tipo de entidad.
 117+ 8858
 118+ 8858 CB 27        Calcula_salto_en_BC sla a
 119+ 885A D6 02        	sub 2										; ("Tipo_de_entidad")*2-2.
 120+ 885C 4F           	ld c,a
 121+ 885D 06 00        	ld b,0
 122+ 885F C9           	ret
 123+ 8860
 124+ 8860              ; ------------------------------------------------------------------
 125+ 8860              ;
 126+ 8860              ;	5/1/24
 127+ 8860              ;
 128+ 8860              ;	Sitúa HL en el 1er .db de la entidad que tenemos que volcar en la caja.
 129+ 8860              ;	Actualiza (Datos_de_entidad) con esa dirección.
 130+ 8860
 131+ 8860 A7           Situa_en_datos_de_entidad and a
 132+ 8861 ED 4A        	adc hl,bc
 133+ 8863 CD 3C 8D     	call Extrae_address
 134+ 8866 22 29 89         ld (Datos_de_entidad),hl
 135+ 8869 C9           	ret
 136+ 886A
 137+ 886A              ; ------------------------------------------------------------------
 138+ 886A
 139+ 886A 22 1D 89     Avanza_caja_de_entidades ld (Puntero_store_caja),hl
 140+ 886D 13           	inc de
 141+ 886E 13           	inc de
 142+ 886F EB           	ex de,hl
 143+ 8870 22 21 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas_de_entidades +2.
 144+ 8873 C9           	ret
 145+ 8874
 146+ 8874              ; ----------------------------------------------------------------------------------------------------------
 147+ 8874              ;
 148+ 8874              ;	5/1/24
 149+ 8874              ;
 150+ 8874              ;	Vuelca los .db significativos del tipo de entidad a la caja de entidades.
 151+ 8874
 152+ 8874              Datos_de_entidad_a_caja
 153+ 8874
 154+ 8874              ; En este punto:
 155+ 8874              ; HL apunta al 1er .db de DATOS de la entidad que tenemos que volcar en la caja DRAW.
 156+ 8874
 157+ 8874 ED 5B 1D 89  	ld de,(Puntero_store_caja) 					; DE apunta al 1er .db de la caja de entidades vacía.
 158+ 8878
 159+ 8878 01 02 00     	ld bc,2
 160+ 887B ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 161+ 887D              ;												; HL, (origen), apunta ahora al .db (attr.), hay que situar DE.
 162+ 887D 01 07 00     	ld bc,7
 163+ 8880 CD B2 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (attr).
 164+ 8883
 165+ 8883 01 05 00     	ld bc,5
 166+ 8886 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 167+ 8888              ;												; HL, (origen), apunta ahora al .db (Posicion_inicio), hay que situar DE.
 168+ 8888 01 04 00     	ld bc,4
 169+ 888B CD B2 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Posicion_inicio).
 170+ 888E
 171+ 888E 01 07 00     	ld bc,7
 172+ 8891 ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 173+ 8893              ;												; HL, (origen), apunta ahora al .db (Puntero_de_almacen_de_mov_masticados), hay que situar DE.
 174+ 8893
 175+ 8893 01 13 00     	ld bc,19
 176+ 8896 CD B2 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_de_almacen_de_mov_masticados).
 177+ 8899
 178+ 8899 01 02 00     	ld bc,2
 179+ 889C ED B0        	ldir 										; Hemos volcado (Puntero_de_almacen_de_mov_masticados).
 180+ 889E              ;												; HL, (origen), apunta ahora al .db (Puntero_indice_mov), hay que situar DE.
 181+ 889E
 182+ 889E 01 03 00     	ld bc,3
 183+ 88A1 CD B2 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Puntero_indice_mov).
 184+ 88A4
 185+ 88A4 01 02 00     	ld bc,2
 186+ 88A7 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 187+ 88A9              ;												; HL, (origen), apunta ahora al .db (Frames_explosion), hay que situar DE.
 188+ 88A9
 189+ 88A9 01 0F 00     	ld bc,15
 190+ 88AC CD B2 88     	call Situa_DE 								; DE, (destino), situado ahora correctamente: (Frames_explosion).
 191+ 88AF
 192+ 88AF 7E           	ld a,(hl)
 193+ 88B0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 194+ 88B1
 195+ 88B1 C9           	ret
 196+ 88B2
 197+ 88B2              ; ---------- -------------- ----------------
 198+ 88B2
 199+ 88B2 EB           Situa_DE ex de,hl
 200+ 88B3 A7           	and a
 201+ 88B4 ED 4A        	adc hl,bc
 202+ 88B6 EB           	ex de,hl
 203+ 88B7 C9           	ret
 204+ 88B8
 205+ 88B8              ;---------------------------------------------------------------------------------------------------------------
 206+ 88B8              ;
 207+ 88B8              ;	5/1/24
 208+ 88B8              ;
 209+ 88B8              ;	INICIALIZA (Numero_parcial_de_entidades).
 210+ 88B8              ;	DETECTA cuando hemos completado el nivel, (Numero_de_entidades)="0".
 211+ 88B8              ;
 212+ 88B8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) > 7, (nº de cajas de entidades):
 213+ 88B8              ;
 214+ 88B8              ;	(Numero_parcial_de_entidades)="7".
 215+ 88B8              ;
 216+ 88B8              ;	Si el nº total de entidades del nivel, (Numero_de_entidades) < 7, (nº de cajas de entidades):
 217+ 88B8              ;
 218+ 88B8              ;	(Numero_parcial_de_entidades)=(Numero_de_entidades).
 219+ 88B8              ;
 220+ 88B8              ;	OUTPUT: B contiene (Numero_parcial_de_entidades). Nº de cajas que vamos a preparar o rellenar.
 221+ 88B8              ;	MODIFICA: A y B.
 222+ 88B8              ;	ACTUALIZA: (Numero_parcial_de_entidades).
 223+ 88B8
 224+ 88B8              Inicializa_Numero_parcial_de_entidades
 225+ 88B8
 226+ 88B8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 227+ 88B8
 228+ 88B8 3A 23 89     	ld a,(Numero_de_entidades)
 229+ 88BB A7           	and a
 230+ 88BC
 231+ 88BC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 232+ 88BC              ;	jr z,$
 233+ 88BC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 234+ 88BC
 235+ 88BC 20 03        	jr nz,3F
 236+ 88BE
 237+ 88BE              ; ---------- ---------- ----------
 238+ 88BE
 239+ 88BE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 240+ 88BE              ;! REINICIA EL NIVEL !!!!!!!!!!!!!!!!!!!!!!!!!!
 241+ 88BE
 242+ 88BE CD 15 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 243+ 88C1
 244+ 88C1              ; ---------- ---------- ----------
 245+ 88C1
 246+ 88C1 3A 23 89     3 ld a,(Numero_de_entidades)							 ; Nº TOTAL de las entidades del NIVEL.
 247+ 88C4 FE 07        	cp 7												 ; "7" es el nº total de cajas de entidades de las que disponemos.
 248+ 88C6 38 08        	jr c,1F
 249+ 88C8
 250+ 88C8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 251+ 88C8              ; Actualizamos variables.
 252+ 88C8
 253+ 88C8 3E 07        	ld a,7
 254+ 88CA 32 24 89     	ld (Numero_parcial_de_entidades),a
 255+ 88CD 47           	ld b,a
 256+ 88CE 18 04        	jr 2F
 257+ 88D0
 258+ 88D0              ; El nº total de entidades no llena las 7 cajas de entidades. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 259+ 88D0              ; (Numero_de_entidades)="0".
 260+ 88D0
 261+ 88D0 32 24 89     1 ld (Numero_parcial_de_entidades),a
 262+ 88D3 47           	ld b,a
 263+ 88D4 C9           2 ret
# file closed: Niveles.asm
 106  88D5
 107  88D5              ; ******************************************************************************************************************************************************************************************
 108  88D5              ; Constantes.
 109  88D5              ; ******************************************************************************************************************************************************************************************
 110  88D5              ;
 111  88D5              ; 25/12/23
 112  88D5
 113  88D5              ;
 114  88D5              ; Constantes.
 115  88D5              ;
 116  88D5
 117  88D5              Sprite_vacio equ $f000
 118  88D5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 119  88D5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 120  88D5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 121  88D5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 122  88D5
 123  88D5              Almacen_de_movimientos_masticados_Entidad_1 equ $eb30	; $eb3a - $fdff ..... $12c5 / 4805 bytes. Guardaremos los movimientos masticados que ha hido generando la entidad guía.
 124  88D5              ;
 125  88D5              ;														; 4805 bytes, 4,8Kb.
 126  88D5              Almacen_de_movimientos_masticados_Amadeus equ $e854		; $e854 - $eb39 ..... $2e5 / 741 bytes.
 127  88D5
 128  88D5
 129  88D5
 130  88D5
 131  88D5              Album_de_fotos equ $7000	;	(7000h - 7055h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
 132  88D5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 133  88D5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
 134  88D5              Album_de_fotos_disparos equ $7056 ; (7056h - 70abh).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 135  88D5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 136  88D5
 137  88D5              ;														; 55 Bytes.
 138  88D5              Album_de_fotos_Amadeus equ $70ac ; (70ach - 70b8h) ; 12 bytes.
 139  88D5              Almacen_de_parametros_DRAW equ $70b9 ; ($70b9 - $70fb) ; 66 bytes.
 140  88D5
 141  88D5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
 142  88D5
 143  88D5              ; ******************************************************************************************************************************************************************************************
 144  88D5              ; Variables.
 145  88D5              ; ******************************************************************************************************************************************************************************************
 146  88D5              ;
 147  88D5              ; 25/12//23
 148  88D5              ;
 149  88D5              ; Variables de DRAW. (Motor principal).
 150  88D5              ;
 151  88D5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 152  88D5
 153  88D5 00           Filas db 0												; Filas. [DRAW]
 154  88D6 00           Columns db 0  											; Nº de columnas. [DRAW]
 155  88D7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 156  88D9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 157  88DB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 158  88DC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 159  88DD
 160  88DD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 161  88DD
 162  88DD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 163  88DE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 164  88DE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 165  88DE 00           Attr db 0												; Atributos de la entidad:
 166  88DF
 167  88DF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 168  88DF              ;
 169  88DF              ;	COLORES: 0 ..... NEGRO
 170  88DF              ;    		 1 ..... AZUL
 171  88DF              ; 			 2 ..... ROJO
 172  88DF              ;			 3 ..... MAGENTA
 173  88DF              ; 			 4 ..... VERDE
 174  88DF              ; 			 5 ..... CIAN
 175  88DF              ;			 6 ..... AMARILLO
 176  88DF              ; 			 7 ..... BLANCO
 177  88DF
 178  88DF 00 00        Indice_Sprite_der defw 0
 179  88E1 00 00        Indice_Sprite_izq defw 0
 180  88E3 00 00        Puntero_DESPLZ_der defw 0
 181  88E5 00 00        Puntero_DESPLZ_izq defw 0
 182  88E7
 183  88E7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 184  88E9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 185  88EA
 186  88EA              ; Variables de objeto. (Características).
 187  88EA
 188  88EA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 189  88EB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 190  88EC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 191  88ED 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 192  88EE
 193  88EE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 194  88EF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 195  88EF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 196  88EF 00 00 00...  Variables_de_borrado ds 6
 197  88F5
 198  88F5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 199  88F7 00 00        	defw 0
 200  88F9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 201  88FB 00 00 00 00  	db 0,0,0,0
 202  88FF
 203  88FF 00 00        Puntero_de_impresion defw 0								; Contiene el puntero de impresión, (calculado por DRAW). Esta dirección la utilizará la rutina_
 204  8901              ;														; _ [Guarda_coordenadas_X] y [Compara_coordenadas_X] para detectar la colisión ENTIDAD-AMADEUS.
 205  8901
 206  8901 00 00        Puntero_de_almacen_de_mov_masticados defw 0
 207  8903
 208  8903              ;	Almacén donde la entidad guía va guardando comportamiento ya calculado, (rutinas DRAW).
 209  8903              ;	Almacén donde una entidad "sombra" recoge el siguiente desplazamiento ya masticado, (para imprimir).
 210  8903
 211  8903 00 00        Contador_de_mov_masticados defw 0						; Contador de 16bits. La "Entidad_guía" lo aumenta en una unidad cada vez que hace el "pushado" de las tres_
 212  8905              ;														; _palabras que componen el "movimiento_masticado".
 213  8905
 214  8905              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 215  8905
 216  8905 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 217  8906              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 218  8906              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 219  8906              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 220  8906              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 221  8906              ;
 222  8906              ; 														DESCRIPCIÖN:
 223  8906              ;
 224  8906              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 225  8906              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 226  8906              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 227  8906              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 228  8906              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 229  8906              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 230  8906              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 231  8906              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 232  8906              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 233  8906              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 234  8906              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 235  8906              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 236  8906              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 237  8906              ;
 238  8906              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 239  8906              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 240  8906              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 241  8906
 242  8906              ; Movimiento. ------------------------------------------------------------------------------------------------------
 243  8906
 244  8906 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 245  8908 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 246  890A 00 00        Puntero_indice_mov_bucle defw 0							;
 247  890C              ;
 248  890C              ;
 249  890C 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 250  890D              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 251  890D              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 252  890D 00           Incrementa_puntero_backup db 0
 253  890E 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 254  890F              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 255  890F 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 256  8910 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 257  8911 00           Cola_de_desplazamiento db 0								; Este byte indica:
 258  8912              ;
 259  8912              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 260  8912              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 261  8912              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 262  8912              ;
 263  8912              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 264  8912              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 265  8912              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 266  8912              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 267  8912              ;
 268  8912              ;														;	"$ff" ..... Bucle infinito de repetición.
 269  8912              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 270  8912              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 271  8912
 272  8912
 273  8912              ; Variables de funcionamiento. [DRAW].
 274  8912
 275  8912 00           Columnas db 0
 276  8913 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 277  8915              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 278  8915 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 279  8916
 280  8916              ; variables de control general.
 281  8916
 282  8916 00           Ctrl_2 db 0
 283  8917              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 284  8917              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 285  8917              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 286  8917              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 287  8917              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 288  8917              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 289  8917              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 290  8917              ;
 291  8917              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 292  8917              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 293  8917              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 294  8917              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 295  8917              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 296  8917              ;														BIT 4, ???
 297  8917              ;														BIT 5, Este bit a "1" indica que esta entidad es una "Entidad_guía".
 298  8917
 299  8917 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 300  8918
 301  8918              ;! 67 Bytes por entidad.
 302  8918
 303  8918              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 304  8918              ;					         		---------;      ;---------
 305  8918
 306  8918
 307  8918              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 308  8918
 309  8918 00 00        Contador_general_de_mov_masticados_Entidad_1 defw 0		; Contador general de "movimientos masticados" de la Entidad_1.
 310  891A
 311  891A 00           Ctrl_1 db 0 											; Byte de control de propósito general.
 312  891B
 313  891B              ;														DESCRIPCIÓN:
 314  891B              ;
 315  891B              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 316  891B              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 317  891B              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 318  891B              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 319  891B              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 320  891B              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 321  891B
 322  891B              ;														BIT 3, Recarga de nueva oleada.
 323  891B              ;														BIT 4, Recarga de nueva oleada.
 324  891B              ;														BIT 5, FREEEEEEEEE !!!!!!!!!!!!!!!!!
 325  891B              ;														BIT 6, **** Frame completo.
 326  891B              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 327  891B
 328  891B 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 329  891D              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 330  891D              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 331  891D              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 332  891D
 333  891D              ; Gestión de ENTIDADES y CAJAS.
 334  891D
 335  891D 00 00        Puntero_store_caja defw 0
 336  891F 00 00        Puntero_restore_caja defw 0
 337  8921 00 00        Indice_restore_caja defw 0
 338  8923 00           Numero_de_entidades db 0								; Nº total de entidades maliciosas que contiene el nivel.
 339  8924 07           Numero_parcial_de_entidades db 7						; Nº de cajas que contiene un bloque de entidades. (7 Cajas).
 340  8925 00           Entidades_en_curso db 0									; ..... ..... .....
 341  8926 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 342  8927              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 343  8927              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 344  8927              ;														; _ (Numero_de_malotes)="0".
 345  8927 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 346  8929 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 347  892B              ;														; _ puntero (Indice_entidades).
 348  892B
 349  892B              ;---------------------------------------------------------------------------------------------------------------
 350  892B              ;
 351  892B              ;	18/11/23
 352  892B              ;
 353  892B              ;	Álbumes.
 354  892B
 355  892B 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 356  892D              ;														; _variable para almacenar lo posición del puntero_
 357  892D              ; 														; _de pila, SP.
 358  892D 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 359  892F              ;														; La utiliza la rutina [Extrae_foto_registros].
 360  892F 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 361  8931 00 70        Stack_snapshot defw Album_de_fotos
 362  8933 56 70        Stack_snapshot_disparos defw Album_de_fotos_disparos
 363  8935
 364  8935              ;End_Snapshot defw Album_de_fotos
 365  8935              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 366  8935 56 70        End_Snapshot_disparos defw Album_de_fotos_disparos							; Puntero que indica la posición de memoria donde vamos a guardar_
 367  8937              ;														; _el snapshot de los registros del siguiente disparo.
 368  8937              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 369  8937 AC 70        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 370  8939
 371  8939 00           Ctrl_3 db 0												; 2º Byte de Ctrl. general, (no específico) a una única entidad.
 372  893A              ;
 373  893A              ;															BIT 0, "1" Indica que el FRAME está completo, (hemos podido hacer la foto de todas las entidades).
 374  893A              ;															BIT 1, "1" Indica que "EXISTE" Entidad_guía.
 375  893A              ;															BIT 2, "1" Indica que el {Almacen_de_movimientos_masticados_Entidad_1} está completo. Cuando esto ocurre_
 376  893A              ;																_ no se inicia una nueva "Entidad_guía".
 377  893A              ; Gestión de Disparos.
 378  893A
 379  893A 00           Numero_de_disparotes db 0
 380  893B 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 381  893D 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 382  893F 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 383  8940              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 384  8940              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 385  8940 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 386  8942              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 387  8942              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 388  8942              ;														; _produzca colisión.
 389  8942 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 390  8944              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 391  8944 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 392  8947              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 393  8947 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 394  894A              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 395  894A 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 396  894B
 397  894B              ;---------------------------------------------------------------------------------------------------------------
 398  894B
 399  894B              ; Relojes y temporizaciones.
 400  894B
 401  894B 00           Contador_de_frames db 0
 402  894C 00           Contador_de_frames_2 db 0
 403  894D
 404  894D 04           Clock_explosion db 4
 405  894E 14           Clock_Entidades_en_curso db 20
 406  894F 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 407  8950              ;														; Repite la oleada de entidades.
 408  8950 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 409  8951 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 410  8952 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 411  8953
 412  8953 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 413  8954 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 414  8955 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 415  8956
 416  8956              ;---------------------------------------------------------------------------------------------------------------
 417  8956
 418  8956              ; Gestión de NIVELES.
 419  8956
 420  8956 00           Nivel db 0												; Nivel actual del juego.
 421  8957 00 00        Puntero_indice_NIVELES defw 0
 422  8959 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 423  895B              ; 														; _ que definen el NIVEL.
 424  895B              ; Y todo comienza aquí .....
 425  895B              ;
 426  895B              ; 	INICIO  *************************************************************************************************************************************************************************
 427  895B              ;
 428  895B              ;	5/1/24
 429  895B
 430  895B              START
 431  895B
 432  895B 31 00 00     	ld sp,0												; Situamos el inicio de Stack.
 433  895E 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 434  8960 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 435  8962 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 436  8964 F3           	DI
 437  8965
 438  8965 3E 07        	ld a,%00000111
 439  8967 CD C5 99     	call Cls
 440  896A
 441  896A CD 19 8E     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 442  896D
 443  896D              ; INICIALIZACIÓN.
 444  896D
 445  896D CD 15 88     	call Inicializa_Punteros_de_nivel					 ; Prepara el 1er Nivel del juego.
 446  8970              ;														 ; Situa (Puntero_indice_NIVELES) el el primer defw., (nivel) del índice de niveles.
 447  8970              ;														 ; Inicializa (Numero_de_entidades) con el nº total de malotes del nivel.
 448  8970              ;														 ; Inicializa (Datos_de_nivel) con el `tipo´ de la 1ª entidad del nivel.
 449  8970 CD 27 88     4 call Prepara_cajas_de_entidades
 450  8973
 451  8973
 452  8973 CD A4 8C     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en el 1er .db de la 1ª entidad del_
 453  8976              ;														 ; _ índice y (Puntero_restore-entidades) en el 2º .defw del Índice de entidades.
 454  8976 CD C9 8D     	call Restore_entidad								 ; Vuelca en DRAW la 1ª Caja_de_entidades.
 455  8979
 456  8979 21 24 89     	ld hl,Numero_parcial_de_entidades
 457  897C 46           	ld b,(hl)
 458  897D 04           	inc b
 459  897E 05           	dec b
 460  897F 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 461  8981
 462  8981              ;	INICIA ENTIDADES !!!!!
 463  8981
 464  8981 C5           1 push bc  												; Guardo el contador de entidades.
 465  8982 CD A7 8B     	call Inicia_entidad
 466  8985 C1           	pop bc
 467  8986 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 468  8988
 469  8988              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 470  8988              ; (Esto se dá cuando se inicia una nueva oleada).
 471  8988
 472  8988 3A 1A 89     	ld a,(Ctrl_1)
 473  898B CB 5F        	bit 3,a
 474  898D 20 1E        	jr nz,5F											; Loop
 475  898F
 476  898F              ; 	INICIA AMADEUS !!!!!
 477  898F
 478  898F CD F0 8D     3 call Restore_Amadeus
 479  8992 CD 42 8D     	call Inicia_Puntero_objeto
 480  8995 CD B8 93     	call Draw
 481  8998
 482  8998 CD BE 8B     	call Guarda_movimiento_masticado	;! Provisional
 483  899B
 484  899B CD 16 71     	call Guarda_foto_registros
 485  899E CD 6D 8E     	call Guarda_datos_de_borrado_Amadeus
 486  89A1
 487  89A1 11 7E 85     	ld de,Amadeus_db
 488  89A4 CD 02 8E     	call Store_Amadeus
 489  89A7
 490  89A7              ; 	INICIA DISPAROS !!!!!
 491  89A7
 492  89A7 CD BA 8C     	call Inicia_Puntero_Disparo_Entidades
 493  89AA CD C1 8C     	call Inicia_Puntero_Disparo_Amadeus
 494  89AD
 495  89AD              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 496  89AD
 497  89AD CD A4 8C     5 call Inicia_punteros_de_cajas
 498  89B0 CD C9 8D     	call Restore_entidad
 499  89B3
 500  89B3 3A 1A 89     	ld a,(Ctrl_1)
 501  89B6 CB 5F        	bit 3,a
 502  89B8 28 07        	jr z,6F
 503  89BA
 504  89BA              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 505  89BA
 506  89BA 21 1A 89     	ld hl,Ctrl_1
 507  89BD CB 9E        	res 3,(hl)
 508  89BF 18 07        	jr Main
 509  89C1
 510  89C1              ; Entidades y Amadeus iniciados. Esperamos a [FRAME].
 511  89C1
 512  89C1 21 39 89     6 ld hl,Ctrl_3
 513  89C4 CB C6        	set 0,(hl)											; Frame completo.
 514  89C6 FB           	ei
 515  89C7 76           	halt
 516  89C8
 517  89C8              ; ------------------------------------
 518  89C8
 519  89C8              Main
 520  89C8              ;
 521  89C8              ;	11/12/23
 522  89C8
 523  89C8              ; Aparece nueva entidad ???
 524  89C8
 525  89C8              ; 														; Inicialmente, (Clock_Entidades_en_curso)="30".
 526  89C8              ;														; (Clock_Entidades_en_curso) define cuando aparecen las entidades en pantalla.
 527  89C8              ;														; Todas las entidades contenidas en un "bloque", (7 cajas), se inicializan en [START].
 528  89C8              ;														; Si (Numero_de_entidades) > "7", cuando el bloque de 7 cajas esté a "0" se inicializaráa _
 529  89C8              ;														; _un 2º bloque.
 530  89C8
 531  89C8 3E 01        	ld a,1
 532  89CA D3 FE        	out ($fe),a
 533  89CC
 534  89CC 3A 4E 89     	ld a,(Clock_Entidades_en_curso)
 535  89CF 47           	ld b,a
 536  89D0 3A 4B 89     	ld a,(Contador_de_frames)
 537  89D3 B8           	cp b
 538  89D4 20 18        	jr nz,13F
 539  89D6
 540  89D6              ; Si aún quedan entidades por aparecer del bloque de entidades, (7 cajas), incrementaremos (Entidades_en_curso) y calcularemos_
 541  89D6              ; _ (Clock_Entidades_en_curso) para la siguiente entidad.
 542  89D6
 543  89D6 3A 24 89     21 ld a,(Numero_parcial_de_entidades)
 544  89D9 47           	ld b,a
 545  89DA 3A 25 89     	ld a,(Entidades_en_curso)
 546  89DD B8           	cp b
 547  89DE 28 0E        	jr z,13F
 548  89E0 30 0C        	jr nc,13F
 549  89E2
 550  89E2 3C           	inc a
 551  89E3 32 25 89     	ld (Entidades_en_curso),a
 552  89E6
 553  89E6              ; - Define el tiempo que ha de transcurrir para que aparezca la siguiente entidad. ----------------------------
 554  89E6
 555  89E6 3A 4E 89     	ld a,(Clock_Entidades_en_curso)
 556  89E9              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 557  89E9              ;! _ IMPREDECIBLE !!!!
 558  89E9 C6 64        	add 100
 559  89EB 32 4E 89     	ld (Clock_Entidades_en_curso),a
 560  89EE
 561  89EE              ; -------------------------------------------------------------------------------------------------------------
 562  89EE
 563  89EE              ; Habilita disparos.
 564  89EE
 565  89EE 21 50 89     13 ld hl,Disparo_Amadeus
 566  89F1 11 52 89     	ld de,CLOCK_repone_disparo_Amadeus
 567  89F4 CD 98 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 568  89F7
 569  89F7 21 53 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 570  89FA 11 55 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 571  89FD CD 98 9D     	call Habilita_disparos
 572  8A00
 573  8A00              ; COLISIONES.
 574  8A00
 575  8A00 CD B8 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 576  8A03
 577  8A03              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 578  8A03              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 579  8A03              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 580  8A03
 581  8A03 AF           	xor a
 582  8A04 32 3F 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 583  8A07
 584  8A07 CD A4 8C     	call Inicia_punteros_de_cajas
 585  8A0A CD C9 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 586  8A0D              ; 														; _ en DRAW.
 587  8A0D 3A D5 88     	ld a,(Filas)
 588  8A10 A7           	and a
 589  8A11 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 590  8A13 CD DB 8D     	call Incrementa_punteros_de_cajas
 591  8A16 18 F2        	jr 12B
 592  8A18
 593  8A18              ; ---------------------------------------------------------------------------------------
 594  8A18
 595  8A18 3A 24 89     10 ld a,(Numero_parcial_de_entidades)
 596  8A1B 47               ld b,a
 597  8A1C A7           	and a
 598  8A1D 20 14        	jr nz,11F
 599  8A1F
 600  8A1F 21 1A 89     	ld hl,Ctrl_1
 601  8A22 CB 66        	bit 4,(hl)
 602  8A24 C2 CC 8A     	jp nz,16F
 603  8A27
 604  8A27              ;! Cuando hemos destruido a todas las entidades del bloque preparamos una NUEVA OLEADA !!!!!
 605  8A27
 606  8A27 21 1A 89     	ld hl,Ctrl_1
 607  8A2A CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 608  8A2C
 609  8A2C 3A 4B 89     	ld a,(Contador_de_frames)
 610  8A2F 3C           	inc a
 611  8A30 32 4F 89     	ld (Activa_recarga_cajas),a
 612  8A33
 613  8A33              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 614  8A33
 615  8A33 3A 25 89     11 ld a,(Entidades_en_curso)
 616  8A36 A7           	and a
 617  8A37 CA CC 8A     	jp z,16F											; Si no hay entidades en curso saltamos a [Avanza_puntero_de_album_de_fotos_de_entidades].
 618  8A3A 47           	ld b,a												; No hay entidades que gestionar.
 619  8A3B
 620  8A3B              ; ( Código que ejecutamos con cada entidad: ).
 621  8A3B
 622  8A3B              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 623  8A3B
 624  8A3B C5           15 push bc 												; Nº de entidades en curso.
 625  8A3C
 626  8A3C              ; Existe "Entidad_guía" ???.
 627  8A3C              ; Si la Entidad_guía ha sido fulminada hemos de reemplazarla.
 628  8A3C
 629  8A3C 3A 39 89     	ld a,(Ctrl_3)
 630  8A3F CB 4F        	bit 1,a
 631  8A41 20 11        	jr nz,22F
 632  8A43
 633  8A43              ; Almacén de "Movimientos_masticados" lleno ???
 634  8A43              ; Una "Entidad_guía" a dejado de serlo ???, (Reinicio??).
 635  8A43              ; En ese caso NO SE ACTIVA UNA NUEVA "ENTIDAD_GUÍA".
 636  8A43
 637  8A43 3A 39 89     	ld a,(Ctrl_3)
 638  8A46 CB 5F        	bit 3,a
 639  8A48 20 0A        	jr nz,22F
 640  8A4A
 641  8A4A              ; Activa "Entidad_guía" siempre que no esté ya completo el almacén de productos_masticados.
 642  8A4A
 643  8A4A 21 16 89     	ld hl,Ctrl_2
 644  8A4D CB EE        	set 5,(hl)
 645  8A4F 21 39 89     	ld hl,Ctrl_3
 646  8A52 CB CE        	set 1,(hl)
 647  8A54
 648  8A54              ; Impacto ???
 649  8A54
 650  8A54 3A EE 88     22 ld a,(Impacto)
 651  8A57 A7           	and a
 652  8A58 28 31        	jr z,8F
 653  8A5A
 654  8A5A              ; Hay Impacto en esta entidad.
 655  8A5A
 656  8A5A 21 4D 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 657  8A5D 35           	dec (hl)
 658  8A5E C2 BF 8A     	jp nz,17F
 659  8A61
 660  8A61              ;! Velocidad de la animación de la explosión.
 661  8A61
 662  8A61 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 663  8A63              ;														; _,(velocidad de la explosión).
 664  8A63              ; !!!!!!!! Explosiónnnnnnnnn 20/9/23
 665  8A63
 666  8A63 CD 8D 8E     	call Repone_datos_de_borrado
 667  8A66 CD E2 8C     	call Limpia_Variables_de_borrado					; Guarda los datos de la entidad `impactada´ para borrarla.
 668  8A69
 669  8A69              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 670  8A69
 671  8A69 3A 16 89     	ld a,(Ctrl_2)
 672  8A6C CB 4F        	bit 1,a
 673  8A6E 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 674  8A70
 675  8A70              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 676  8A70
 677  8A70 3A DD 88     	ld a,(CTRL_DESPLZ)
 678  8A73 A7           	and a
 679  8A74 20 08        	jr nz,18F
 680  8A76
 681  8A76 21 84 84     	ld hl,Indice_Explosion_2x2-2
 682  8A79 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 683  8A7C 18 06        	jr 19F
 684  8A7E
 685  8A7E 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 686  8A81 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 687  8A84
 688  8A84 21 16 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 689  8A87 CB CE        	set 1,(hl)
 690  8A89 18 22        	jr 7F
 691  8A8B
 692  8A8B              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 693  8A8B              ; _con las coordenadas de la entidad almacenada en DRAW.
 694  8A8B
 695  8A8B 3A 1A 89     8 ld a,(Ctrl_1)
 696  8A8E CB 57        	bit 2,a
 697  8A90 28 1B        	jr z,7F
 698  8A92
 699  8A92 2A 42 89     	ld hl,(Coordenadas_disparo_certero)
 700  8A95 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 701  8A96              ;														; E contiene la coordenada_X del disparo.
 702  8A96 2A DB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 703  8A99              ;														; H FILA, (Coordenada_y de la entidad).
 704  8A99 A7           	and a
 705  8A9A ED 52        	sbc hl,de
 706  8A9C
 707  8A9C CD D1 92     	call Determina_resultado_comparativa
 708  8A9F
 709  8A9F 78           	ld a,b
 710  8AA0 A7           	and a
 711  8AA1 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 712  8AA3
 713  8AA3              ; ----- ----- -----
 714  8AA3
 715  8AA3 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 716  8AA5 32 EE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 717  8AA8
 718  8AA8 21 1A 89     	ld hl,Ctrl_1
 719  8AAB CB 96        	res 2,(hl)
 720  8AAD
 721  8AAD CD 1D 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 722  8AB0
 723  8AB0 3A 05 89     	ld a,(Ctrl_0)
 724  8AB3 CB 67        	bit 4,a
 725  8AB5 28 08        	jr z,17F                                       	    ; Si no ha habido movimiento, NO HEMOS BORRADO, NI VAMOS A PINTAR NADA.!!!
 726  8AB7
 727  8AB7              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 728  8AB7              ; [[[
 729  8AB7              ;	call Detecta_disparo_entidad
 730  8AB7              ; ]]]
 731  8AB7
 732  8AB7 CD 01 8C     	call Guarda_foto_entidad_a_pintar					; PINTAMOS !!!!!!!!!!!!!!!!!!
 733  8ABA
 734  8ABA 21 05 89     	ld hl,Ctrl_0
 735  8ABD CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 736  8ABF
 737  8ABF CD 8A 8D     17 call Store_Restore_cajas
 738  8AC2
 739  8AC2 C1           	pop bc
 740  8AC3
 741  8AC3 05           	dec b
 742  8AC4 C2 3B 8A     	jp nz,15B
 743  8AC7
 744  8AC7              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 745  8AC7              ; Hemos gestionado todas las unidades.
 746  8AC7              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 747  8AC7
 748  8AC7 21 1A 89     	ld hl,Ctrl_1
 749  8ACA CB 96        	res 2,(hl)
 750  8ACC
 751  8ACC 21 39 89     16 ld hl,Ctrl_3
 752  8ACF CB C6        	set 0,(hl)											; Frame completo.
 753  8AD1
 754  8AD1 AF           	xor a
 755  8AD2 D3 FE        	out ($fe),a
 756  8AD4
 757  8AD4 FB           	ei
 758  8AD5 76           	halt
 759  8AD6
 760  8AD6              ; ----------------------------------------
 761  8AD6
 762  8AD6 3A 1A 89     	ld a,(Ctrl_1) 										; Existe Loop?
 763  8AD9 CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 764  8ADB CA C8 89     	jp z,Main
 765  8ADE
 766  8ADE              ; RECARGA DE NUEVA OLEADA.
 767  8ADE
 768  8ADE 3A 4B 89     	ld a,(Contador_de_frames)
 769  8AE1 47           	ld b,a
 770  8AE2 3A 4F 89     	ld a,(Activa_recarga_cajas)
 771  8AE5 B8           	cp b
 772  8AE6 28 08        	jr z,20F
 773  8AE8
 774  8AE8 21 1A 89     	ld hl,Ctrl_1
 775  8AEB CB E6        	set 4,(hl)
 776  8AED C3 C8 89     	jp Main
 777  8AF0
 778  8AF0 21 1A 89     20 ld hl,Ctrl_1
 779  8AF3 CB A6        	res 4,(hl)
 780  8AF5
 781  8AF5 3A 4B 89     	ld a,(Contador_de_frames)
 782  8AF8
 783  8AF8              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 784  8AF8              ;! _ IMPREDECIBLE !!!!
 785  8AF8
 786  8AF8 C6 0A        	add 10
 787  8AFA 32 4E 89     	ld (Clock_Entidades_en_curso),a
 788  8AFD
 789  8AFD C3 70 89     	jp 4B
 790  8B00
 791  8B00 C9           	ret
 792  8B01
 793  8B01              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 794  8B01              ;
 795  8B01              ;	16/11/23
 796  8B01
 797  8B01              Gestiona_Amadeus
 798  8B01
 799  8B01              ;! Activa/desactiva impacto con Amadeus.
 800  8B01
 801  8B01              ;	ld a,(Impacto)
 802  8B01              ;	and a
 803  8B01              ;	jr nz,2F
 804  8B01
 805  8B01 CD 94 8B     	call Mov_Amadeus
 806  8B04
 807  8B04 3A 05 89     2 ld a,(Ctrl_0)
 808  8B07 CB 67        	bit 4,a
 809  8B09 28 06        	jr z,1F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 810  8B0B
 811  8B0B CD 01 8C     	call Guarda_foto_entidad_a_pintar
 812  8B0E CD 6D 8E     	call Guarda_datos_de_borrado_Amadeus
 813  8B11
 814  8B11 21 05 89     1 ld hl,Ctrl_0
 815  8B14 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 816  8B16
 817  8B16 CD 5C 91     	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 818  8B19
 819  8B19              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 820  8B19
 821  8B19 CD 24 8D     	call Calcula_numero_de_disparotes
 822  8B1C
 823  8B1C C9           	ret
 824  8B1D
 825  8B1D              ; --------------------------------------------------------------------------------------------------------------
 826  8B1D              ;
 827  8B1D              ;	15/12/23
 828  8B1D
 829  8B1D              Mov_obj
 830  8B1D
 831  8B1D 3A 16 89     	ld a,(Ctrl_2)
 832  8B20 CB 4F        	bit 1,a
 833  8B22 28 3C        	jr z,2F											; Se ha iniciado la EXPLOSIÓN???
 834  8B24
 835  8B24              ; Explosión:
 836  8B24
 837  8B24 3A 17 89     	ld a,(Frames_explosion)
 838  8B27 A7           	and a
 839  8B28 20 1D        	jr nz,4F
 840  8B2A
 841  8B2A              ;!  Una alimaña menos!!!!!!!!!1
 842  8B2A
 843  8B2A              ; Se trataba de una Entidad_guía ???
 844  8B2A
 845  8B2A 3A 16 89     	ld a,(Ctrl_2)
 846  8B2D CB 6F        	bit 5,a 										; El bit5 de (Ctrl_2) indica si se trata de una Entidad_guía.
 847  8B2F 28 05        	jr z,5F
 848  8B31
 849  8B31 21 39 89     	ld hl,Ctrl_3
 850  8B34 CB 8E        	res 1,(hl) 										; FLAG (Existencia de Entidad_guía) a "0".
 851  8B36
 852  8B36              ;!! Cuando se elimina a una entidad_guía tenemos que limpiar el almacen_de_mov_masticados de esta entidad. Así el siguiente movimiento_
 853  8B36              ;!! _generado puede ser distinto, (aletoriedad).
 854  8B36
 855  8B36 CD 0B 8E     5 call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 856  8B39 21 24 89     	ld hl,Numero_parcial_de_entidades				; Una alimaña menos.
 857  8B3C 35           	dec (hl)
 858  8B3D 21 25 89     	ld hl,Entidades_en_curso
 859  8B40 35           	dec (hl)
 860  8B41 21 23 89     	ld hl,Numero_de_entidades
 861  8B44 35           	dec (hl)
 862  8B45 18 4C        	jr 3F
 863  8B47
 864  8B47              ; -----
 865  8B47
 866  8B47              ;	`Movemos´ la explosión.
 867  8B47
 868  8B47 2A E3 88     4 ld hl,(Puntero_DESPLZ_der)
 869  8B4A 23           	inc hl
 870  8B4B 23           	inc hl
 871  8B4C 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 872  8B4F CD 3C 8D     	call Extrae_address
 873  8B52 22 D9 88     	ld (Puntero_objeto),hl
 874  8B55
 875  8B55 21 17 89     	ld hl,Frames_explosion
 876  8B58 35           	dec (hl)
 877  8B59
 878  8B59 21 05 89     	ld hl,Ctrl_0
 879  8B5C CB E6        	set 4,(hl)
 880  8B5E
 881  8B5E 18 33        	jr 3F
 882  8B60
 883  8B60              ;	NO HAY EXPLOSIÓN ----- ----- ----- ----- -----
 884  8B60
 885  8B60 AF           2 xor a
 886  8B61 32 05 89     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus. Inicializamos.
 887  8B64
 888  8B64              ; Movemos Entidades malignas.
 889  8B64              ; Se trata de una "Entidad_guía" ???. Si es así ejecutamos la rutina que construye el patrón de movimiento.
 890  8B64
 891  8B64 3A 16 89     	ld a,(Ctrl_2)
 892  8B67 CB 6F        	bit 5,a
 893  8B69 20 07        	jr nz,8F
 894  8B6B
 895  8B6B 21 05 89     	ld hl,Ctrl_0										; Movemos una entidad "FANTASMA". Activamos el FLAG de movimiento y evitamos_
 896  8B6E CB E6        	set 4,(hl)											; _ ejecutar la rutina de Movimiento.
 897  8B70 18 09        	jr 7F
 898  8B72
 899  8B72 CD 43 9F     8 call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 900  8B75
 901  8B75 3A 05 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 902  8B78 CB 67        	bit 4,a
 903  8B7A C8           	ret z
 904  8B7B
 905  8B7B              ; Ha habido desplazamiento de la entidad maligna.
 906  8B7B              ; Ha llegado a zona de AMADEUS ???
 907  8B7B
 908  8B7B 3A DC 88     7 ld a,(Coordenada_y)
 909  8B7E FE 14        	cp $14
 910  8B80 38 08        	jr c,1F
 911  8B82
 912  8B82              ; ---------
 913  8B82
 914  8B82              ;	Si la entidad en curso entra en zona de Amadeus, generamos y guardamos las 2 o 3 columnas que ocupa la entidad_
 915  8B82              ;	_ y las 2 o 3 columnas que ocupa Amadeus y las comparamos por si hubiera coincidencia.
 916  8B82
 917  8B82 F3           	di
 918  8B83 CD 81 90     	call Genera_coordenadas_X
 919  8B86 CD BD 90     	call Compara_coordenadas_X
 920  8B89 FB           	ei
 921  8B8A
 922  8B8A              ;	En el caso de existir coincidencia colocamos a "1" el .db (Impacto) de la entidad en curso y el bit2 del flag (Impacto2).
 923  8B8A
 924  8B8A              ; ---------
 925  8B8A
 926  8B8A CD 8C 8C     1 call Prepara_var_pintado	 			                	; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´en su {Variables_de_pintado}.
 927  8B8D CD 8D 8E     	call Repone_datos_de_borrado 							;! BORRAMOS !!!. Guardamos la foto de las {Variables_de_borrado} en Album_de_fotos.
 928  8B90 CD E2 8C     	call Limpia_Variables_de_borrado
 929  8B93
 930  8B93 C9           3 ret
 931  8B94
 932  8B94              ; --------------------------------------------------------------------------------------------------------------
 933  8B94              ;
 934  8B94              ;	29/1/23
 935  8B94
 936  8B94              Mov_Amadeus
 937  8B94
 938  8B94              ;	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 939  8B94
 940  8B94 CD 7F 9A     	call Mov_right
 941  8B97
 942  8B97 3A 05 89     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 943  8B9A CB 67        	bit 4,a
 944  8B9C C8           	ret z
 945  8B9D
 946  8B9D              ; ---------
 947  8B9D
 948  8B9D CD 8C 8C         call Prepara_var_pintado			                ; HEMOS DESPLAZADO AMADEUS.!!!. Almaceno las `VARIABLES DE PINTADO´.
 949  8BA0 CD 7D 8E     	call Repone_datos_de_borrado_Amadeus
 950  8BA3 CD E2 8C     	call Limpia_Variables_de_borrado
 951  8BA6
 952  8BA6 C9           	ret
 953  8BA7
 954  8BA7              ; -----------------------------------------------------------------------------------
 955  8BA7              ;
 956  8BA7              ;	12/12/23
 957  8BA7              ;
 958  8BA7              ;	Inicia la entidad y la fija como "Entidad_guía" si aún no hay ninguna. (Fija la primera entidad que iniciamos).
 959  8BA7
 960  8BA7              Inicia_entidad
 961  8BA7
 962  8BA7 CD DF 8B     	call Inicia_entidad_guia							; Determina si esta entidad es, o no es, una "Entidad_guía".
 963  8BAA CD 42 8D     	call Inicia_Puntero_objeto
 964  8BAD CD D9 99     	call Recompone_posicion_inicio
 965  8BB0 CD B8 93     	call Draw
 966  8BB3 CD BE 8B     	call Guarda_movimiento_masticado
 967  8BB6 CD 16 71     	call Guarda_foto_registros
 968  8BB9 F3           	di													; La rutina [Guarda_foto_registros] habilita las interrupciones antes del RET.
 969  8BBA              ;														; DI nos asegura que no vamos a ejecutar FRAME hasta que no tengamos todas las entidades iniciadas.
 970  8BBA              ;														; La rutina [Guarda_foto_registros] activa las interrupciones antes del RET.
 971  8BBA CD 8A 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 972  8BBD C9           	ret
 973  8BBE
 974  8BBE              ; -----------------------------------------------------------------------------------
 975  8BBE              ;
 976  8BBE              ;	28/12/23
 977  8BBE              ;
 978  8BBE              ;	Guarda el "movimiento_masticado" en el {Almacen_de_movimientos_masticados_Entidad_1} si se trata de una "entidad_guía".
 979  8BBE              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados) tras el guardado.
 980  8BBE
 981  8BBE              Guarda_movimiento_masticado
 982  8BBE
 983  8BBE              ;	ld a,(Ctrl_2)
 984  8BBE              ;	bit 5,a
 985  8BBE              ;	ret z 													; Salimos si NO se trata de una entidad guía.
 986  8BBE
 987  8BBE ED 73 2B 89  	ld (Stack),sp
 988  8BC2 ED 7B 01 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)			; Guardamos el movimiento masticado en el almacén.
 989  8BC6
 990  8BC6 E5           	push hl
 991  8BC7 DD E5            push ix
 992  8BC9 FD E5            push iy
 993  8BCB
 994  8BCB ED 7B 2B 89      ld sp,(Stack)
 995  8BCF
 996  8BCF E5               push hl
 997  8BD0
 998  8BD0 2A 03 89        	ld hl,(Contador_de_mov_masticados)						; Incrementa en una unidad el (Contador_de_mov_masticados).
 999  8BD3 23           	inc hl
1000  8BD4 22 03 89     	ld (Contador_de_mov_masticados),hl
1001  8BD7
1002  8BD7 22 18 89     	ld (Contador_general_de_mov_masticados_Entidad_1),hl	; Cuando la entidad pase de guía a fantasma, el "contador general" indicará el nº máximo de movimientos masticados creados.
1003  8BDA
1004  8BDA E1           	pop hl
1005  8BDB
1006  8BDB CD F0 8B         call Actualiza_Puntero_de_almacen_de_mov_masticados 	; Actualizamos (Puntero_de_almacen_de_mov_masticados) e incrementa_
1007  8BDE              ;															; _ el (Contador_de_mov_masticados).
1008  8BDE C9               ret
1009  8BDF
1010  8BDF              ; --------------------------------------------------------------------------------------------------------------
1011  8BDF              ;
1012  8BDF              ;	12/12/23
1013  8BDF              ;
1014  8BDF
1015  8BDF              Inicia_entidad_guia
1016  8BDF
1017  8BDF              ; Existe "Entidad_guía" ???
1018  8BDF
1019  8BDF 3A 39 89     	ld a,(Ctrl_3)
1020  8BE2 CB 4F        	bit 1,a
1021  8BE4 C0           	ret nz
1022  8BE5
1023  8BE5              ; Inicia Entidad_guía:
1024  8BE5
1025  8BE5 21 16 89     	ld hl,Ctrl_2
1026  8BE8 CB EE        	set 5,(hl)											; Fija la 1ª entidad como "Entidad_guía".
1027  8BEA 21 39 89     	ld hl,Ctrl_3
1028  8BED CB CE        	set 1,(hl)											; El bit 1 de (Ctrl_3) a "1" indica que existe una "Entidad_guía".
1029  8BEF
1030  8BEF C9           	ret
1031  8BF0
1032  8BF0              ; --------------------------------------------------------------------------------------------------------------
1033  8BF0              ;
1034  8BF0              ;	9/1/24
1035  8BF0              ;
1036  8BF0
1037  8BF0              Actualiza_Puntero_de_almacen_de_mov_masticados
1038  8BF0
1039  8BF0              ;	Entidad_guía ???
1040  8BF0
1041  8BF0              ;	ld a,(Ctrl_2)
1042  8BF0              ;	bit 5,a
1043  8BF0              ;	ret z												; Salimos si NO se trata de una entidad guía.
1044  8BF0
1045  8BF0 E5           	push hl
1046  8BF1 C5           	push bc
1047  8BF2
1048  8BF2 2A 01 89     	ld hl,(Puntero_de_almacen_de_mov_masticados)
1049  8BF5 01 06 00     	ld bc,6
1050  8BF8 A7           	and a
1051  8BF9 ED 4A        	adc hl,bc
1052  8BFB 22 01 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1053  8BFE
1054  8BFE C1           	pop bc
1055  8BFF E1           	pop hl
1056  8C00
1057  8C00 C9           	ret
1058  8C01
1059  8C01              ; --------------------------------------------------------------------------------------------------------------
1060  8C01              ;
1061  8C01              ;	28/12/23
1062  8C01              ;
1063  8C01              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
1064  8C01              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
1065  8C01
1066  8C01              Guarda_foto_entidad_a_pintar
1067  8C01
1068  8C01 3A 05 89     	ld a,(Ctrl_0)
1069  8C04 CB 77        	bit 6,a
1070  8C06 28 0A        	jr z,5F
1071  8C08
1072  8C08              ; Guarda la foto de Amadeus.
1073  8C08
1074  8C08 CD B8 93     	call Draw
1075  8C0B
1076  8C0B CD BE 8B     	call Guarda_movimiento_masticado	;! Provisional
1077  8C0E
1078  8C0E CD 16 71     	call Guarda_foto_registros
1079  8C11
1080  8C11              ;	di
1081  8C11              ;	jr $
1082  8C11              ;	ei
1083  8C11
1084  8C11 C9           	ret
1085  8C12
1086  8C12              ; ENTIDADES!
1087  8C12              ; Está lleno el {Almacen_de_movimientos_masticados_Entidad_1}. ?
1088  8C12
1089  8C12 3A 39 89     5 ld a,(Ctrl_3)
1090  8C15 CB 5F        	bit 3,a
1091  8C17 28 04        	jr z,1F
1092  8C19
1093  8C19              ; {Almacen_de_movimientos_masticados_Entidad_1} lleno. Se trata de una "ENTIDAD_FANTASMA".
1094  8C19
1095  8C19 CD 60 8C     4 call Prepara_registros_con_mov_masticados	; (Tb Guarda_foto_registros).
1096  8C1C C9           	ret
1097  8C1D
1098  8C1D              ; Hemos completado el último movimiento del patrón de movimientos ???, se ha aplicado REINICIO ???
1099  8C1D
1100  8C1D 3A 39 89     1 ld a,(Ctrl_3)
1101  8C20 CB 57        	bit 2,a
1102  8C22 20 10        	jr nz,6F
1103  8C24
1104  8C24              ; Entidad guía o fantasma ???
1105  8C24
1106  8C24 3A 16 89     	ld a,(Ctrl_2)
1107  8C27 CB 6F        	bit 5,a
1108  8C29 20 10        	jr nz,3F
1109  8C2B
1110  8C2B              ; ENTIDAD_FANTASMA, preparo los "movimientos_masticados" y guardo_foto.
1111  8C2B
1112  8C2B 18 EC        	jr 4B
1113  8C2D
1114  8C2D              ; ENTIDAD_GUÍA:
1115  8C2D              ; Se acaba de llenar el almacén ???. Si no es así seguimos ejecutando [DRAW] y continuaremos_
1116  8C2D              ; _guardando "movimientos_masticados".
1117  8C2D
1118  8C2D 3A 39 89     2 ld a,(Ctrl_3)
1119  8C30 CB 57        	bit 2,a
1120  8C32 28 07        	jr z,3F
1121  8C34
1122  8C34              ; Hemos completado todos los movimientos masticados. Se trata de una "Entidad_fantasma" recién creada.
1123  8C34              ; Vamos a `generar el último "movimiento_masticado". A partir de este momento esta "Entidad_fantasma", (recién creada), pasa a guardar fotos de movimientos masticaditos.
1124  8C34
1125  8C34 CB 97        6 res 2,a
1126  8C36 CB DF        	set 3,a
1127  8C38 32 39 89     	ld (Ctrl_3),a
1128  8C3B
1129  8C3B
1130  8C3B              ;	Esto sólo lo ejecuta una entidad guía.
1131  8C3B
1132  8C3B CD B8 93     3 	call Draw
1133  8C3E CD BE 8B     	call Guarda_movimiento_masticado
1134  8C41 CD 16 71     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
1135  8C44
1136  8C44              ; Este ha sido el último "movimiento_masticado" que hemos guardado ???
1137  8C44              ; Si es así, hemos de reinicializar el (Puntero_de_mov_masticados) y el (Contador_de_mov_masticados) de la entidad.
1138  8C44
1139  8C44 CD 48 8C     	call Convierte_guia_en_fantasma
1140  8C47 C9           	ret
1141  8C48
1142  8C48              ; --------------------------------------------------------------------------------------------------------------
1143  8C48              ;
1144  8C48              ;	28/12/23
1145  8C48              ;
1146  8C48
1147  8C48 3A 39 89     Convierte_guia_en_fantasma ld a,(Ctrl_3)
1148  8C4B CB 5F        	bit 3,a
1149  8C4D C8           	ret z												; Salimos aún no hemos generado el último mov_masticado. Aún no puede haber transformación.
1150  8C4E
1151  8C4E              ;	Convertimos la "Entidad_guía" en "Entidad_fantasma".
1152  8C4E
1153  8C4E 21 16 89     	ld hl,Ctrl_2
1154  8C51 CB AE        	res 5,(hl)											; La entidad deja de ser una entidad guía.
1155  8C53
1156  8C53              ;	Reinicializamos el (Puntero_de_almacen_de_mov_masticados).
1157  8C53
1158  8C53 21 30 EB     	ld hl,Almacen_de_movimientos_masticados_Entidad_1
1159  8C56 22 01 89     	ld (Puntero_de_almacen_de_mov_masticados),hl
1160  8C59
1161  8C59              ;	Reinicializamos el (Contador_de_mov_masticados).
1162  8C59
1163  8C59 21 00 00     	ld hl,0
1164  8C5C 22 03 89     	ld (Contador_de_mov_masticados),hl
1165  8C5F
1166  8C5F C9           	ret
1167  8C60
1168  8C60              ; --------------------------------------------------------------------------------------------------------------
1169  8C60              ;
1170  8C60              ;	21/12/23
1171  8C60              ;
1172  8C60              ;	Prepara los registros IY, IX e HL con las tres "palabras" que definen un "Movimiento_masticado".
1173  8C60              ;
1174  8C60              ;		IY contiene (Puntero_objeto).
1175  8C60              ;		IX contiene el puntero de impresión.
1176  8C60              ;		HL contiene la dirección de la rutina de impresión.
1177  8C60              ;
1178  8C60              ;	Guarda la foto del "Movimiento_masticado" en el Album_de_fotos.
1179  8C60              ;	Actualiza el (Puntero_de_almacen_de_mov_masticados)
1180  8C60              ;	Decrementa el (Contador_de_mov_masticados)
1181  8C60              ;
1182  8C60              ;		Cuando (Contador_de_mov_masticados)="0" se Reinicia el movimiento masticado:
1183  8C60              ;			El (Puntero_de_almacen_de_mov_masticados) se sitúa al principio del almacén.
1184  8C60              ;			El (Contador_de_mov_masticados) vuelve a adoptar el máximo valor de mov_masticados de su "Entidad_guía".
1185  8C60
1186  8C60
1187  8C60 ED 73 2B 89  Prepara_registros_con_mov_masticados ld (Stack),sp
1188  8C64 ED 7B 01 89  	ld sp,(Puntero_de_almacen_de_mov_masticados)
1189  8C68
1190  8C68 FD E1        	pop iy
1191  8C6A DD E1        	pop ix
1192  8C6C E1           	pop hl														; Se cargan los registros con el movimiento_masticado y se actualiza (Puntero_de_almacen_de_mov_masticados).
1193  8C6D
1194  8C6D ED 73 01 89  	ld (Puntero_de_almacen_de_mov_masticados),sp
1195  8C71 ED 7B 2B 89  	ld sp,(Stack)
1196  8C75
1197  8C75 CD 16 71     	call Guarda_foto_registros
1198  8C78
1199  8C78 E5           	push hl
1200  8C79
1201  8C79 2A 03 89     	ld hl,(Contador_de_mov_masticados)							; Actualizamos counter.
1202  8C7C 23           	inc hl
1203  8C7D 22 03 89     	ld (Contador_de_mov_masticados),hl
1204  8C80
1205  8C80              ;	Reinicializmos si hemos completado todos los movimientos masticados.
1206  8C80
1207  8C80 ED 4B 18 89  	ld bc,(Contador_general_de_mov_masticados_Entidad_1)
1208  8C84 A7           	and a
1209  8C85 ED 42        	sbc hl,bc
1210  8C87 CC 48 8C     	call z,Convierte_guia_en_fantasma
1211  8C8A
1212  8C8A E1           	pop hl
1213  8C8B
1214  8C8B C9           	ret
1215  8C8C
1216  8C8C              ; --------------------------------------------------------------------------------------------------------------
1217  8C8C              ;
1218  8C8C              ;	19/9/23
1219  8C8C
1220  8C8C              Prepara_var_pintado
1221  8C8C
1222  8C8C 21 D5 88     	ld hl,Filas
1223  8C8F 11 F5 88     	ld de,Variables_de_pintado
1224  8C92 01 08 00     	ld bc,8
1225  8C95 ED B0        	ldir
1226  8C97 C9           	ret
1227  8C98
1228  8C98              ; --------------------------------------------------------------------------------------------------------------
1229  8C98
1230  8C98              Repone_pintar
1231  8C98
1232  8C98 21 F5 88     	ld hl,Variables_de_pintado
1233  8C9B 11 D5 88     	ld de,Filas
1234  8C9E 01 08 00     	ld bc,8
1235  8CA1 ED B0        	ldir
1236  8CA3 C9           	ret
1237  8CA4
1238  8CA4              ; *************************************************************************************************************************************************************
1239  8CA4              ;
1240  8CA4              ; 8/1/23
1241  8CA4              ;
1242  8CA4              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
1243  8CA4              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
1244  8CA4              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
1245  8CA4
1246  8CA4              ; Destruye HL y DE !!!!!
1247  8CA4
1248  8CA4              Inicia_punteros_de_cajas
1249  8CA4
1250  8CA4 21 6C 85     	ld hl,Indice_de_cajas_de_entidades
1251  8CA7 CD 3C 8D         call Extrae_address
1252  8CAA 22 1D 89         ld (Puntero_store_caja),hl
1253  8CAD 21 6E 85     	ld hl,Indice_de_cajas_de_entidades+2
1254  8CB0 22 21 89     	ld (Indice_restore_caja),hl
1255  8CB3 CD 3C 8D     	call Extrae_address
1256  8CB6 22 1F 89     	ld (Puntero_restore_caja),hl
1257  8CB9 C9               ret
1258  8CBA
1259  8CBA              ; *************************************************************************************************************************************************************
1260  8CBA              ;
1261  8CBA              ; 8/1/23
1262  8CBA              ;
1263  8CBA              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1264  8CBA
1265  8CBA 21 04 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1266  8CBD 22 3B 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1267  8CC0 C9           	ret
1268  8CC1 21 EC 84     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1269  8CC4 22 3D 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1270  8CC7 C9           	ret
1271  8CC8
1272  8CC8              ; -------------------------------------------------------------------------------------------------------------
1273  8CC8              ;
1274  8CC8              ; 21/9/23
1275  8CC8              ;
1276  8CC8
1277  8CC8              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1278  8CC8
1279  8CC8              Limpia_album_Amadeus
1280  8CC8
1281  8CC8 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1282  8CCB 7E           	ld a,(hl)
1283  8CCC A7           	and a
1284  8CCD C8           	ret z
1285  8CCE
1286  8CCE 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1287  8CD1 11 AD 70     	ld de,Album_de_fotos_Amadeus+1
1288  8CD4 01 0B 00     	ld bc,11
1289  8CD7 AF           	xor a
1290  8CD8 77           	ld (hl),a
1291  8CD9 ED B0        	ldir
1292  8CDB
1293  8CDB 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1294  8CDE 22 37 89     	ld (End_Snapshot_Amadeus),hl
1295  8CE1
1296  8CE1 C9           	ret
1297  8CE2
1298  8CE2 21 EF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1299  8CE5 11 F0 88     	ld de,Variables_de_borrado+1
1300  8CE8 01 05 00     	ld bc,5
1301  8CEB AF           	xor a
1302  8CEC 77           	ld (hl),a
1303  8CED ED B0        	ldir
1304  8CEF C9           	ret
1305  8CF0
1306  8CF0              ; -------------------------------------------------------------------------------------------------------------
1307  8CF0              ;
1308  8CF0              ; 8/9/23
1309  8CF0              ;
1310  8CF0
1311  8CF0              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1312  8CF0              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1313  8CF0
1314  8CF0              Calcula_numero_de_malotes
1315  8CF0
1316  8CF0 21 00 70     	ld hl,Album_de_fotos
1317  8CF3 EB           	ex de,hl
1318  8CF4 2A 31 89     	ld hl,(Stack_snapshot)
1319  8CF7
1320  8CF7 06 00        	ld b,0
1321  8CF9 7D           	ld a,l
1322  8CFA 93           	sub e
1323  8CFB 28 07        	jr z,1F
1324  8CFD
1325  8CFD              ; Nº de malotes no es "0".
1326  8CFD
1327  8CFD D6 06        2 sub 6
1328  8CFF 04           	inc b
1329  8D00 A7           	and a
1330  8D01 20 FA        	jr nz,2B
1331  8D03 78           	ld a,b
1332  8D04
1333  8D04 32 26 89     1 ld (Numero_de_malotes),a
1334  8D07 C9           	ret
1335  8D08
1336  8D08              ; -------------------------------------------------------------------------------------------------------------
1337  8D08              ;
1338  8D08              ; 8/9/23
1339  8D08              ;
1340  8D08
1341  8D08              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1342  8D08              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1343  8D08
1344  8D08              Calcula_malotes_Amadeus
1345  8D08
1346  8D08 21 AC 70     	ld hl,Album_de_fotos_Amadeus
1347  8D0B EB           	ex de,hl
1348  8D0C 2A 37 89     	ld hl,(End_Snapshot_Amadeus)
1349  8D0F
1350  8D0F 7C           	ld a,h
1351  8D10 A7           	and a
1352  8D11 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1353  8D13
1354  8D13 06 00        	ld b,0
1355  8D15 7D           	ld a,l
1356  8D16 93           	sub e
1357  8D17 28 07        	jr z,1F
1358  8D19
1359  8D19              ; Nº de malotes no es "0".
1360  8D19
1361  8D19 D6 06        2 sub 6
1362  8D1B 04           	inc b
1363  8D1C A7           	and a
1364  8D1D 20 FA        	jr nz,2B
1365  8D1F 78           	ld a,b
1366  8D20
1367  8D20 32 26 89     1 ld (Numero_de_malotes),a
1368  8D23 C9           	ret
1369  8D24
1370  8D24              ; -------------------------------------------------------------------------------------------------------------
1371  8D24              ;
1372  8D24              ; 28/2/23
1373  8D24              ;
1374  8D24
1375  8D24              Calcula_numero_de_disparotes
1376  8D24
1377  8D24 21 56 70     	ld hl,Album_de_fotos_disparos
1378  8D27 EB           	ex de,hl
1379  8D28 2A 35 89     	ld hl,(End_Snapshot_disparos)
1380  8D2B
1381  8D2B 06 00        	ld b,0
1382  8D2D 7D           	ld a,l
1383  8D2E 93           	sub e
1384  8D2F 28 07        	jr z,1F
1385  8D31
1386  8D31              ; Nº de malotes no es "0".
1387  8D31
1388  8D31 D6 06        2 sub 6
1389  8D33 04           	inc b
1390  8D34 A7           	and a
1391  8D35 20 FA        	jr nz,2B
1392  8D37 78           	ld a,b
1393  8D38
1394  8D38 32 3A 89     1 ld (Numero_de_disparotes),a
1395  8D3B C9           	ret
1396  8D3C
1397  8D3C              ; *************************************************************************************************************************************************************
1398  8D3C              ;
1399  8D3C              ; 20/10/22
1400  8D3C              ;
1401  8D3C              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1402  8D3C              ;
1403  8D3C              ; Destruye el puntero y DE !!!!!
1404  8D3C
1405  8D3C 5E           Extrae_address ld e,(hl)
1406  8D3D 23           	inc hl
1407  8D3E 56           	ld d,(hl)
1408  8D3F 2B           	dec hl
1409  8D40 EB           	ex de,hl
1410  8D41 C9           	ret
1411  8D42
1412  8D42              ; *************************************************************************************************************************************************************
1413  8D42              ;
1414  8D42              ;	7/2/23
1415  8D42              ;
1416  8D42              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1417  8D42              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1418  8D42              ;
1419  8D42              ;   Destruye HL y BC !!!!!,
1420  8D42              ;
1421  8D42              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1422  8D42              ;					"0" ..... Izquierda.
1423  8D42
1424  8D42              Inicia_Puntero_objeto
1425  8D42
1426  8D42 3A E9 88     	ld a,(Cuad_objeto)
1427  8D45 E6 01        	and 1
1428  8D47 F5           	push af
1429  8D48 CC 66 8D     	call z,Inicia_puntero_objeto_izq
1430  8D4B F1           	pop af
1431  8D4C 28 2B        	jr z,1F
1432  8D4E CD 53 8D     	call Inicia_puntero_objeto_der
1433  8D51 18 26        	jr 1F
1434  8D53
1435  8D53              ; Arrancamos desde la parte izquierda de la pantalla.
1436  8D53              ; Iniciamos (Indice_Sprite_der).
1437  8D53
1438  8D53 2A DF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1439  8D56 22 E3 88     	ld (Puntero_DESPLZ_der),hl
1440  8D59 CD 3C 8D     	call Extrae_address
1441  8D5C 22 D9 88     	ld (Puntero_objeto),hl
1442  8D5F
1443  8D5F 2A E1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1444  8D62 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
1445  8D65 C9           	ret
1446  8D66
1447  8D66              ; Arrancamos desde la parte derecha de la pantalla.
1448  8D66              ; Iniciamos (Indice_Sprite_izq).
1449  8D66
1450  8D66 2A E1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1451  8D69 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
1452  8D6C CD 3C 8D     	call Extrae_address
1453  8D6F 22 D9 88     	ld (Puntero_objeto),hl
1454  8D72
1455  8D72 2A DF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1456  8D75 22 E3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1457  8D78 C9           	ret
1458  8D79
1459  8D79              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1460  8D79
1461  8D79 21 40 83     1 ld hl,Amadeus
1462  8D7C ED 4B D9 88  	ld bc,(Puntero_objeto)
1463  8D80 B7 ED 42     	sub hl,bc
1464  8D83 C0           	ret nz
1465  8D84 21 05 89     	ld hl,Ctrl_0
1466  8D87 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1467  8D89 C9           	ret 												; _de nuestra nave en los extremos.
1468  8D8A
1469  8D8A              ; *************************************************************************************************************************************************************
1470  8D8A              ;
1471  8D8A              ;	21/12/23
1472  8D8A              ;
1473  8D8A              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1474  8D8A              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1475  8D8A
1476  8D8A              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1477  8D8A              ;	_de la 2ª y 3ª entidad respectivamente.
1478  8D8A
1479  8D8A              Store_Restore_cajas
1480  8D8A
1481  8D8A E5           	push hl
1482  8D8B D5           	push de
1483  8D8C C5            	push bc
1484  8D8D
1485  8D8D              ;	STORE !!!!!
1486  8D8D              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1487  8D8D
1488  8D8D F3           	di
1489  8D8E 21 D5 88     	ld hl,Filas
1490  8D91 ED 5B 1D 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1491  8D95 01 43 00     	ld bc,67
1492  8D98 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1493  8D9A FB           	ei
1494  8D9B
1495  8D9B              ; 	Entidad_sospechosa. 20/4/23
1496  8D9B
1497  8D9B 3A EE 88     	ld a,(Impacto)
1498  8D9E A7           	and a
1499  8D9F 28 0C        	jr z,1F
1500  8DA1
1501  8DA1 2A 1D 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1502  8DA4 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1503  8DA7 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1504  8DA8 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1505  8DAA 22 40 89     	ld (Entidad_sospechosa_de_colision),hl
1506  8DAD
1507  8DAD              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1508  8DAD
1509  8DAD 2A 1F 89     1 ld hl,(Puntero_restore_caja)
1510  8DB0 7E           	ld a,(hl)
1511  8DB1 A7           	and a
1512  8DB2 F5           	push af
1513  8DB3 28 0A        	jr z,2F
1514  8DB5
1515  8DB5 F3           	di
1516  8DB6 11 D5 88     	ld de,Filas
1517  8DB9 01 43 00     	ld bc,67
1518  8DBC ED B0        	ldir
1519  8DBE FB           	ei
1520  8DBF
1521  8DBF CD DB 8D     2 call Incrementa_punteros_de_cajas
1522  8DC2
1523  8DC2 F1           	pop af
1524  8DC3 28 E8        	jr z,1B
1525  8DC5
1526  8DC5 C1           	pop bc
1527  8DC6 D1           	pop de
1528  8DC7 E1           	pop hl
1529  8DC8
1530  8DC8 C9           	ret
1531  8DC9
1532  8DC9              ; **************************************************************************************************
1533  8DC9              ;
1534  8DC9              ;	21/12/23
1535  8DC9              ;
1536  8DC9              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1537  8DC9
1538  8DC9 E5           Restore_entidad push hl
1539  8DCA D5           	push de
1540  8DCB C5            	push bc
1541  8DCC
1542  8DCC 2A 1D 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1543  8DCF 11 D5 88     	ld de,Filas
1544  8DD2 01 43 00     	ld bc,67
1545  8DD5 ED B0        	ldir
1546  8DD7
1547  8DD7 C1           	pop bc
1548  8DD8 D1           	pop de
1549  8DD9 E1           	pop hl
1550  8DDA C9           	ret
1551  8DDB
1552  8DDB              ; **************************************************************************************************
1553  8DDB              ;
1554  8DDB              ;	08/05/23
1555  8DDB              ;
1556  8DDB              ;	Incrementamos los dos punteros de entidades. (+1).
1557  8DDB
1558  8DDB              Incrementa_punteros_de_cajas
1559  8DDB
1560  8DDB 2A 1F 89     	ld hl,(Puntero_restore_caja)
1561  8DDE 22 1D 89     	ld (Puntero_store_caja),hl
1562  8DE1 2A 21 89     	ld hl,(Indice_restore_caja)
1563  8DE4 23           	inc hl
1564  8DE5 23           	inc hl
1565  8DE6 22 21 89     	ld (Indice_restore_caja),hl
1566  8DE9 CD 3C 8D         call Extrae_address
1567  8DEC 22 1F 89         ld (Puntero_restore_caja),hl
1568  8DEF C9               ret
1569  8DF0
1570  8DF0              ; **************************************************************************************************
1571  8DF0              ;
1572  8DF0              ;	21/12/23
1573  8DF0              ;
1574  8DF0              ;	Restore_Amadeus
1575  8DF0              ;
1576  8DF0              ;	Cargamos en DRAW los parámetros de Amadeus.
1577  8DF0              ;
1578  8DF0
1579  8DF0 E5           Restore_Amadeus	push hl
1580  8DF1 D5           	push de
1581  8DF2 C5            	push bc
1582  8DF3 21 7E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1583  8DF6 11 D5 88     	ld de,Filas
1584  8DF9 01 43 00     	ld bc,67
1585  8DFC ED B0        	ldir
1586  8DFE C1           	pop bc
1587  8DFF D1           	pop de
1588  8E00 E1           	pop hl
1589  8E01 C9           	ret
1590  8E02
1591  8E02              ; *************************************************************************************************************************************************************
1592  8E02              ;
1593  8E02              ;	21/12/23
1594  8E02              ;
1595  8E02              ;	Store_Amadeus
1596  8E02              ;
1597  8E02              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1598  8E02              ;
1599  8E02              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1600  8E02              ;
1601  8E02              ;	DESTRUYE: HL y BC y DE.
1602  8E02
1603  8E02 21 D5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1604  8E05 01 43 00     	ld bc,67
1605  8E08 ED B0        	ldir
1606  8E0A C9           	ret
1607  8E0B
1608  8E0B              ; -----------------------------------------------------------
1609  8E0B              ;
1610  8E0B              ;	21/12/23
1611  8E0B              ;
1612  8E0B              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1613  8E0B              ;
1614  8E0B              ;	Destruye: HL,BC,DE,A
1615  8E0B
1616  8E0B 21 D5 88     Borra_datos_entidad ld hl,Filas
1617  8E0E 01 42 00     	ld bc,66
1618  8E11 AF           	xor a
1619  8E12 77           	ld (hl),a
1620  8E13 11 D6 88     	ld de,Filas+1
1621  8E16 ED B0        	ldir
1622  8E18 C9           	ret
1623  8E19
1624  8E19              ; -----------------------------------------------------------
1625  8E19
1626  8E19              ; Teclado.
1627  8E19
1628  8E19 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1629  8E1B DB FE        	in a,($fe)
1630  8E1D E6 01        	and $01
1631  8E1F 28 02        	jr z,1f
1632  8E21 18 F6        	jr Pulsa_ENTER
1633  8E23 C9           1 ret
1634  8E24
1635  8E24              ; **************************************************************************************************
1636  8E24              ;
1637  8E24              ; Temporización.
1638  8E24
1639  8E24              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1640  8E24              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1641  8E24              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1642  8E24              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1643  8E24
1644  8E24              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1645  8E24              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1646  8E24              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1647  8E24
1648  8E24              ; A partir de $4f61 no hace falta DELAY.
1649  8E24
1650  8E24              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1651  8E24
1652  8E24 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1653  8E27 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1654  8E28 78           	LD A,B
1655  8E29 A7           	AND A
1656  8E2A 20 FB        	JR NZ,wait
1657  8E2C C9           	RET
1658  8E2D
1659  8E2D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1660  8E2D              ;
1661  8E2D              ;	5/3/23
1662  8E2D              ;
1663  8E2D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1664  8E2D
1665  8E2D              Movimiento_Amadeus
1666  8E2D
1667  8E2D              ; Disparo.
1668  8E2D
1669  8E2D 3A 50 89     	ld a,(Disparo_Amadeus)
1670  8E30 A7           	and a
1671  8E31 20 02        	jr nz,1F
1672  8E33 18 15        	jr 2F
1673  8E35
1674  8E35 3E F7        1 ld a,$f7													; "5" para disparar.
1675  8E37 DB FE        	in a,($fe)
1676  8E39 E6 10        	and $10
1677  8E3B
1678  8E3B F5           	push af
1679  8E3C CC E4 8E     	call z,Genera_disparo
1680  8E3F F1           	pop af
1681  8E40 20 08        	jr nz,2F
1682  8E42
1683  8E42 3A 50 89     	ld a,(Disparo_Amadeus)
1684  8E45 EE 01        	xor 1
1685  8E47 32 50 89     	ld (Disparo_Amadeus),a
1686  8E4A 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1687  8E4C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1688  8E4E E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1689  8E50 CC A2 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1690  8E53
1691  8E53 3E F7        	ld a,$f7
1692  8E55 DB FE        	in a,($fe)
1693  8E57 E6 01        	and $01
1694  8E59 C8           	ret z
1695  8E5A
1696  8E5A 3E F7        	ld a,$f7
1697  8E5C DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1698  8E5E E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1699  8E60 CC 7F 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1700  8E63 C9           	ret
1701  8E64
1702  8E64              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1703  8E64              ;
1704  8E64              ;	Rutina provisional para que los malotes cagen balas.
1705  8E64
1706  8E64              Detecta_disparo_entidad
1707  8E64
1708  8E64 3A 53 89     	ld a,(Disparo_entidad)
1709  8E67 A7           	and a
1710  8E68 C8           	ret z
1711  8E69
1712  8E69              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1713  8E69
1714  8E69              ;	ld a,$7f				; Detecta SPACE.
1715  8E69              ;	in a,($fe)
1716  8E69              ;	and 1
1717  8E69              ;	ret nz
1718  8E69
1719  8E69 CD E4 8E     	call Genera_disparo
1720  8E6C C9           	ret
1721  8E6D
1722  8E6D              ; ----------------------------------------------------------------------
1723  8E6D              ;
1724  8E6D              ;	8/9/23
1725  8E6D
1726  8E6D 2A 37 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1727  8E70 2B            	dec hl
1728  8E71 7E           	ld a,(hl)
1729  8E72 A7           	and a
1730  8E73 C8           	ret z										; Salimos si es álbum está vacío.
1731  8E74
1732  8E74 11 F4 88     	ld de,Variables_de_borrado+5
1733  8E77 01 06 00     	ld bc,6
1734  8E7A ED B8        	lddr
1735  8E7C C9           	ret
1736  8E7D
1737  8E7D              ; ----------------------------------------------------------------------
1738  8E7D              ;
1739  8E7D              ;	9/9/23
1740  8E7D
1741  8E7D              Repone_datos_de_borrado_Amadeus
1742  8E7D
1743  8E7D 21 EF 88     	ld hl,Variables_de_borrado
1744  8E80 11 AC 70     	ld de,Album_de_fotos_Amadeus
1745  8E83 01 06 00     	ld bc,6
1746  8E86 ED B0        	ldir
1747  8E88
1748  8E88 EB           	ex de,hl
1749  8E89 22 37 89     	ld (End_Snapshot_Amadeus),hl
1750  8E8C
1751  8E8C C9           	ret
1752  8E8D
1753  8E8D              ; ----------------------------------------------------------------------
1754  8E8D              ;
1755  8E8D              ;	27/10/23
1756  8E8D              ;
1757  8E8D
1758  8E8D              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1759  8E8D              ;	_ Album_de_fotos correspondiente.
1760  8E8D
1761  8E8D              ;	El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
1762  8E8D              ;	_ durante el proceso de escritura.
1763  8E8D
1764  8E8D              Repone_datos_de_borrado
1765  8E8D
1766  8E8D F3           	di
1767  8E8E ED 5B 31 89  	ld de,(Stack_snapshot)
1768  8E92 21 EF 88     	ld hl,Variables_de_borrado
1769  8E95 01 06 00     	ld bc,6
1770  8E98 ED B0        	ldir
1771  8E9A FB           	ei
1772  8E9B
1773  8E9B EB           	ex de,hl
1774  8E9C 22 31 89     	ld (Stack_snapshot),hl
1775  8E9F
1776  8E9F C9           	ret
1777  8EA0
1778  8EA0              ; --------------------------------------------------------------------------------------
1779  8EA0
1780  8EA0              Pinta_Amadeus
1781  8EA0
1782  8EA0 CD 08 8D        	call Calcula_malotes_Amadeus
1783  8EA3 CD 48 97     	call Extrae_foto_Amadeus
1784  8EA6 CD C8 8C     	call Limpia_album_Amadeus
1785  8EA9
1786  8EA9 C9           	ret
1787  8EAA
1788  8EAA              Pinta_entidades
1789  8EAA
1790  8EAA              ;	Salimos de la rutina si la foto con todas las entidades a pintar no está completa.
1791  8EAA
1792  8EAA 3A 39 89     	ld a,(Ctrl_3)
1793  8EAD CB 47        	bit 0,a
1794  8EAF C8           	ret z
1795  8EB0
1796  8EB0 CD F0 8C     	call Calcula_numero_de_malotes
1797  8EB3 CD C6 96     	call Extrae_foto_entidades
1798  8EB6 CD 79 71     	call Limpia_y_reinicia_Stack_Snapshot
1799  8EB9
1800  8EB9 C9           	ret
1801  8EBA
1802  8EBA              ; -----------------------------------------------------------------------------------
1803  8EBA              ;
1804  8EBA              ;	10/12/23
1805  8EBA              ;
1806  8EBA              ;	Incrementa los relojes cada vez que se ejecuta un FRAME completo, (se ha completado la foto de todas las entidades).
1807  8EBA
1808  8EBA              Actualiza_relojes
1809  8EBA
1810  8EBA 3A 39 89     	ld a,(Ctrl_3)
1811  8EBD CB 47        	bit 0,a
1812  8EBF C8           	ret z 						;	Salimos si no hemos pintado unidades.
1813  8EC0
1814  8EC0 21 4B 89     	ld hl,Contador_de_frames	;	20 ms. (Contador_de_frames)=$ff ..... 5.1 segunados aprox.
1815  8EC3 34           	inc (hl)
1816  8EC4
1817  8EC4 34           	inc (hl)
1818  8EC5 35           	dec (hl)
1819  8EC6 C0           	ret nz
1820  8EC7
1821  8EC7 21 4C 89     	ld hl,Contador_de_frames_2	;	5.1 segundos. (Contador_de_frames_2)=$ff ..... 1300.5 segundos, 21.675 minutos.
1822  8ECA 34           	inc (hl)
1823  8ECB C9           	ret
1824  8ECC
1825  8ECC              ; ---------------------------------------------------------------
1826  8ECC              ;
1827  8ECC              ;	21/12/23
1828  8ECC
1829  8ECC              Guarda_parametros_DRAW
1830  8ECC
1831  8ECC 21 D5 88     	ld hl,Filas
1832  8ECF 11 B9 70     	ld de,Almacen_de_parametros_DRAW
1833  8ED2 01 43 00     	ld bc,67
1834  8ED5 ED B0        	ldir
1835  8ED7 C9           	ret
1836  8ED8
1837  8ED8              Recupera_parametros_DRAW
1838  8ED8
1839  8ED8 21 B9 70     	ld hl,Almacen_de_parametros_DRAW
1840  8EDB 11 D5 88     	ld de,Filas
1841  8EDE 01 43 00     	ld bc,67
1842  8EE1 ED B0        	ldir
1843  8EE3 C9           	ret
1844  8EE4
1845  8EE4              ; ---------------------------------------------------------------
1846  8EE4
1847  8EE4              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8EE4              ; ******************************************************************************************************************************************************************************************
   2+ 8EE4              ;
   3+ 8EE4              ;   21/07/23
   4+ 8EE4              ;
   5+ 8EE4              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8EE4              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8EE4              ;
   8+ 8EE4              ;
   9+ 8EE4              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8EE4              ;
  11+ 8EE4              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8EE4              ;               _ hacen las entidades hacia abajo.
  13+ 8EE4              ;
  14+ 8EE4              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8EE4              ;
  16+ 8EE4              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8EE4              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8EE4              ;
  19+ 8EE4              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8EE4              ;           _ la bala.
  21+ 8EE4              ;
  22+ 8EE4              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8EE4              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8EE4              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8EE4              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8EE4              ;           _ en el momento de generarse la bala)).
  27+ 8EE4
  28+ 8EE4              Genera_disparo
  29+ 8EE4
  30+ 8EE4              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8EE4              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8EE4              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8EE4              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8EE4              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8EE4              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8EE4              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8EE4
  38+ 8EE4              ; Exclusiones:
  39+ 8EE4
  40+ 8EE4 3A ED 88         ld a,(Vel_down)
  41+ 8EE7 47               ld b,a
  42+ 8EE8 3A 4A 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8EEB B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8EEC D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8EED 3A 12 89         ld a,(Columnas)
  46+ 8EF0 47               ld b,a
  47+ 8EF1 3A D6 88         ld a,(Columns)
  48+ 8EF4 B8               cp b
  49+ 8EF5 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EF6
  51+ 8EF6              ; ----- ----- -----
  52+ 8EF6
  53+ 8EF6 3A 05 89         ld a,(Ctrl_0)
  54+ 8EF9 CB 77            bit 6,a
  55+ 8EFB 20 06            jr nz,14F
  56+ 8EFD
  57+ 8EFD 3A DC 88         ld a,(Coordenada_y)
  58+ 8F00 FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8F02 D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8F03
  61+ 8F03 21 00 80     14 ld hl,Indice_disparo
  62+ 8F06 3A DD 88         ld a,(CTRL_DESPLZ)
  63+ 8F09 4F               ld c,a
  64+ 8F0A 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8F0C              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8F0C              ;                                            ""        ""       "f9", B="1"
  67+ 8F0C              ;                                            ""        ""       "fb", B="2"
  68+ 8F0C              ;                                            ""        ""       "fb", B="3"
  69+ 8F0C A7               and a
  70+ 8F0D 28 10            jr z,1F
  71+ 8F0F E6 01            and 1
  72+ 8F11 C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8F12
  74+ 8F12 79               ld a,c
  75+ 8F13 16 F9            ld d,$f9
  76+ 8F15 23           2 inc hl
  77+ 8F16 23               inc hl
  78+ 8F17 04               inc b
  79+ 8F18 BA               cp d
  80+ 8F19 28 04            jr z,1F
  81+ 8F1B 14               inc d
  82+ 8F1C 14               inc d
  83+ 8F1D 18 F6            jr 2B
  84+ 8F1F
  85+ 8F1F CD 3C 8D     1 call Extrae_address
  86+ 8F22 E5               push hl
  87+ 8F23 FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F25 DD 21 8E 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F29
  90+ 8F29              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F29              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F29
  93+ 8F29 3A 05 89         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F2C CB 77            bit 6,a
  95+ 8F2E 20 04            jr nz,19F
  96+ 8F30
  97+ 8F30 AF               xor a
  98+ 8F31 32 53 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F34
 100+ 8F34 3A E9 88     19 ld a,(Cuad_objeto)
 101+ 8F37 FE 02            cp 2
 102+ 8F39 38 66            jr c,3F
 103+ 8F3B 28 64            jr z,3F
 104+ 8F3D
 105+ 8F3D              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F3D
 107+ 8F3D E6 01            and 1
 108+ 8F3F 28 30            jr z,4F
 109+ 8F41
 110+ 8F41              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F41              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F41              ;
 113+ 8F41              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F41              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F41              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F41
 117+ 8F41 2A D7 88     	ld hl,(Posicion_actual)
 118+ 8F44
 119+ 8F44              ;   Amadeus o entidad ???.
 120+ 8F44
 121+ 8F44 3A 05 89         ld a,(Ctrl_0)
 122+ 8F47 CB 77            bit 6,a
 123+ 8F49 28 0A            jr z,8F
 124+ 8F4B
 125+ 8F4B              ; 	Dispara Amadeus.
 126+ 8F4B
 127+ 8F4B 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F4D CD B7 96         call PreviousScan
 129+ 8F50 CD B7 96         call PreviousScan
 130+ 8F53
 131+ 8F53              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F53              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F53              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F53              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F53
 136+ 8F53 18 11            jr 10F
 137+ 8F55
 138+ 8F55              ; 	Dispara Entidad.
 139+ 8F55
 140+ 8F55 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F58              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F58
 143+ 8F58              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F58              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F58
 146+ 8F58 C5               push bc
 147+ 8F59 06 10            ld b,16
 148+ 8F5B CD A8 96     9 call NextScan
 149+ 8F5E 10 FB            djnz 9B
 150+ 8F60 C1               pop bc
 151+ 8F61 CD CB 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F64 18 06            jr 17F
 153+ 8F66
 154+ 8F66              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F66              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F66              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F66              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F66
 159+ 8F66 CD CB 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F69 CD 40 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F6C              ;                                                      ; _al generar el disparo.
 162+ 8F6C
 163+ 8F6C              ; 	LLegados a este punto tendremos:
 164+ 8F6C              ;
 165+ 8F6C              ;       Puntero_objeto_disparo en IY.
 166+ 8F6C              ;       Rutinas_de_impresion en IX.
 167+ 8F6C              ;       Puntero_de_impresion en HL.
 168+ 8F6C              ;       Impacto/Dirección en BC.
 169+ 8F6C
 170+ 8F6C CD D3 8F     17 call Almacena_disparo
 171+ 8F6F 18 52            jr 6F                                             ; RET.
 172+ 8F71
 173+ 8F71              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F71              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F71              ;
 176+ 8F71              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F71              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F71              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F71
 180+ 8F71 2A D7 88     4 ld hl,(Posicion_actual)
 181+ 8F74
 182+ 8F74              ;   Amadeus o entidad ???.
 183+ 8F74
 184+ 8F74 3A 05 89         ld a,(Ctrl_0)
 185+ 8F77 CB 77            bit 6,a
 186+ 8F79 28 0A            jr z,11F
 187+ 8F7B
 188+ 8F7B              ; 	Dispara Amadeus.
 189+ 8F7B
 190+ 8F7B 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F7D CD B7 96         call PreviousScan
 192+ 8F80 CD B7 96         call PreviousScan
 193+ 8F83
 194+ 8F83              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F83              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F83              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F83              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F83
 199+ 8F83 18 11            jr 13F
 200+ 8F85
 201+ 8F85              ; 	Dispara Entidad.
 202+ 8F85
 203+ 8F85 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F88              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F88
 206+ 8F88              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F88              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F88
 209+ 8F88 C5               push bc
 210+ 8F89 06 10            ld b,16
 211+ 8F8B CD A8 96     12 call NextScan
 212+ 8F8E 10 FB            djnz 12B
 213+ 8F90 C1               pop bc
 214+ 8F91
 215+ 8F91 CD C4 8F         call Ajusta_disparo_parte_derecha
 216+ 8F94 18 06            jr 18F
 217+ 8F96
 218+ 8F96              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F96              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F96              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F96              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F96
 223+ 8F96 CD C4 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F99 CD 40 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F9C              ;                                                       ; _al generar el disparo.
 226+ 8F9C
 227+ 8F9C              ; LLegados a este punto tendremos:
 228+ 8F9C              ;
 229+ 8F9C              ;       Puntero_objeto_disparo en IY.
 230+ 8F9C              ;       Rutinas_de_impresion en IX.
 231+ 8F9C              ;       Puntero_de_impresion en HL.
 232+ 8F9C              ;       Impacto/Dirección en BC.
 233+ 8F9C
 234+ 8F9C CD D3 8F     18 call Almacena_disparo
 235+ 8F9F 18 22            jr 6F                                               ; RET.
 236+ 8FA1
 237+ 8FA1              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8FA1
 239+ 8FA1 28 11        3 jr z,5F
 240+ 8FA3
 241+ 8FA3              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8FA3              ;
 243+ 8FA3              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8FA3              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8FA3              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8FA3              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8FA3
 248+ 8FA3              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8FA3              ;	   ""        ""       "f9", B="1"
 250+ 8FA3              ;	   ""        ""       "fb", B="2"
 251+ 8FA3              ; 	   ""        ""       "fb", B="3"
 252+ 8FA3
 253+ 8FA3 2A D7 88     	ld hl,(Posicion_actual)
 254+ 8FA6 CD A8 96     	call NextScan
 255+ 8FA9
 256+ 8FA9              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8FA9              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8FA9              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8FA9              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8FA9
 261+ 8FA9 CD CB 8F         call Ajusta_disparo_parte_izquierda
 262+ 8FAC
 263+ 8FAC              ; 	No se produce impacto. B="$80"
 264+ 8FAC              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8FAC
 266+ 8FAC 01 80 80         ld bc,$8080
 267+ 8FAF
 268+ 8FAF              ; 	LLegados a este punto tendremos:
 269+ 8FAF              ;
 270+ 8FAF              ;       Puntero_objeto_disparo en IY.
 271+ 8FAF              ;       Rutinas_de_impresion en IX.
 272+ 8FAF              ;       Puntero_de_impresion en HL.
 273+ 8FAF              ;       Impacto/Dirección en BC.
 274+ 8FAF
 275+ 8FAF CD D3 8F         call Almacena_disparo
 276+ 8FB2 18 0F            jr 6F                                           ; RET.
 277+ 8FB4
 278+ 8FB4              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FB4              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FB4              ;
 281+ 8FB4              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FB4              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FB4              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FB4              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FB4
 286+ 8FB4 2A D7 88     5 ld hl,(Posicion_actual)
 287+ 8FB7 CD A8 96     	call NextScan
 288+ 8FBA
 289+ 8FBA              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FBA              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FBA              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FBA              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FBA
 294+ 8FBA CD C4 8F         call Ajusta_disparo_parte_derecha
 295+ 8FBD
 296+ 8FBD              ; 	No se produce impacto. B="$80"
 297+ 8FBD              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FBD
 299+ 8FBD 01 80 80     15 ld bc,$8080
 300+ 8FC0
 301+ 8FC0              ; 	LLegados a este punto tendremos:
 302+ 8FC0              ;
 303+ 8FC0              ;       Puntero_objeto_disparo en IY.
 304+ 8FC0              ;       Rutinas_de_impresion en IX.
 305+ 8FC0              ;       Puntero_de_impresion en HL.
 306+ 8FC0              ;       Impacto/Dirección en BC.
 307+ 8FC0
 308+ 8FC0 CD D3 8F         call Almacena_disparo
 309+ 8FC3
 310+ 8FC3 C9           6 ret
 311+ 8FC4
 312+ 8FC4              ; ----------------------------------------------------------------
 313+ 8FC4              ;
 314+ 8FC4              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FC4              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FC4              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FC4
 318+ 8FC4 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FC5 FE 02            cp 2
 320+ 8FC7 38 01            jr c,1F
 321+ 8FC9 23               inc hl
 322+ 8FCA C9           1 ret
 323+ 8FCB
 324+ 8FCB 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FCC FE 01        	cp 1
 326+ 8FCE 20 01        	jr nz,1F
 327+ 8FD0 2B           	dec hl
 328+ 8FD1 2B           1 dec hl
 329+ 8FD2 C9               ret
 330+ 8FD3
 331+ 8FD3              ; ----------------------------------------------------------------
 332+ 8FD3              ;
 333+ 8FD3              ;   25/02/23
 334+ 8FD3              ;
 335+ 8FD3              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FD3              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FD3              ;
 338+ 8FD3              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FD3              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FD3
 341+ 8FD3              Almacena_disparo
 342+ 8FD3
 343+ 8FD3 E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FD4 F1               pop af
 345+ 8FD5 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FD6
 347+ 8FD6 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FD7 E6 01            and 1
 349+ 8FD9 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FDB              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FDB              ; 	Dispara AMADEUS.
 352+ 8FDB
 353+ 8FDB              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FDB              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FDB              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FDB              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FDB
 358+ 8FDB C5               push bc
 359+ 8FDC 01 F0 84         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FDF 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FE2 A7               and a
 362+ 8FE3 ED 42            sbc hl,bc
 363+ 8FE5 CC C1 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FE8 C1               pop bc
 365+ 8FE9 28 54            jr z,4F
 366+ 8FEB
 367+ 8FEB 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FEE 23               inc hl
 369+ 8FEF 23               inc hl
 370+ 8FF0 22 3D 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FF3              ;                                                   ; _ Disparo_(+1).
 372+ 8FF3 18 18            jr 2F
 373+ 8FF5
 374+ 8FF5              ; Dispara una entidad.
 375+ 8FF5
 376+ 8FF5 C5           1 push bc
 377+ 8FF6 01 18 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FF9 2A 3B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FFC A7               and a
 380+ 8FFD ED 42            sbc hl,bc
 381+ 8FFF CC BA 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 9002 C1               pop bc
 383+ 9003 28 3A            jr z,4F
 384+ 9005
 385+ 9005 2A 3B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 9008 23               inc hl
 387+ 9009 23               inc hl
 388+ 900A 22 3B 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 900D              ;                                                   ; _ Disparo_(+1).
 390+ 900D CD 3C 8D     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 9010              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 9010              ;
 393+ 9010              ;                                                     Puntero_objeto_disparo en IY.
 394+ 9010              ;                                                     Rutinas_de_impresion en IX.
 395+ 9010              ;                                                     Puntero_de_impresion en HL.
 396+ 9010              ;                                                     Impacto/Dirección en BC.
 397+ 9010
 398+ 9010 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 9011 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 9012 23               inc hl                                          ; _ al siguiente.
 401+ 9013 A7               and a
 402+ 9014 20 C0            jr nz,3B
 403+ 9016
 404+ 9016 08               ex af,af
 405+ 9017 ED 73 2B 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 901B F9               ld sp,hl
 407+ 901C
 408+ 901C DD E5            push ix                                         ; Rutina de impresión.
 409+ 901E F5               push af                                         ; Puntero de impresión.
 410+ 901F FD E5            push iy                                         ; Puntero objeto.
 411+ 9021 C5               push bc                                         ; Control.
 412+ 9022
 413+ 9022 ED 7B 2B 89      ld sp,(Stack)
 414+ 9026
 415+ 9026              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9026
 417+ 9026 21 1A 89     	ld hl,Ctrl_1
 418+ 9029 CB C6        	set 0,(hl)
 419+ 902B
 420+ 902B DD E5        	push ix
 421+ 902D E1               pop hl
 422+ 902E F5               push af
 423+ 902F DD E1            pop ix
 424+ 9031
 425+ 9031 CD 16 71     	call Guarda_foto_registros
 426+ 9034
 427+ 9034 21 1A 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9037 CB 86        	res 0,(hl)
 429+ 9039
 430+ 9039              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9039              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9039
 433+ 9039 CD C1 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 903C CD BA 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 903F
 436+ 903F C9           4 ret
 437+ 9040
 438+ 9040              ; ----------------------------------------------------------------
 439+ 9040              ;
 440+ 9040              ;   4/3/23
 441+ 9040              ;
 442+ 9040              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 9040              ;   _ al generarse el disparo.
 444+ 9040              ;
 445+ 9040              ;       "$80" ..... No se produce colisión.
 446+ 9040              ;       "$81" ..... Se produce colisión.
 447+ 9040              ;
 448+ 9040              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 9040              ;         _ que forman el disparo.
 450+ 9040
 451+ 9040
 452+ 9040              Comprueba_Colision
 453+ 9040
 454+ 9040              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 9040
 456+ 9040 FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 9042 E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 9043
 459+ 9043 CD 79 90         call Modifica_H_Velocidad_disparo
 460+ 9046
 461+ 9046 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9047 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9049 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 904B
 465+ 904B 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 904D CD 69 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 9050
 468+ 9050 7B               ld a,e
 469+ 9051 E6 01            and 1
 470+ 9053 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9055              ;                                                  ; _ para activar IMPACTO.
 472+ 9055 E1               pop hl
 473+ 9056 E5               push hl
 474+ 9057 CD A8 96         call NextScan
 475+ 905A
 476+ 905A 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 905B FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 905D 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 905F              ;                                                  ; _ 2º scanline si esto es así.
 480+ 905F 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 9061 CD 69 90         call Bucle_2
 482+ 9064
 483+ 9064 43           1 ld b,e
 484+ 9065 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9066 FD E1            pop iy
 486+ 9068 C9               ret
 487+ 9069
 488+ 9069              ; ---------- ----------
 489+ 9069
 490+ 9069 06 02        Bucle_2 ld b,2
 491+ 906B FD 7E 00     2 ld a,(iy)
 492+ 906E A6               and (hl)
 493+ 906F 28 02            jr z,1F
 494+ 9071 1E 81            ld e,$81
 495+ 9073 23           1 inc hl
 496+ 9074 FD 23            inc iy
 497+ 9076 10 F3            djnz 2B
 498+ 9078 C9               ret
 499+ 9079
 500+ 9079              ; ---------- ----------
 501+ 9079              ;
 502+ 9079              ;   21/7/23
 503+ 9079
 504+ 9079              Modifica_H_Velocidad_disparo
 505+ 9079
 506+ 9079 3A 4A 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 907C FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 907E D0               ret nc                                         ; _ incrementamos H.
 509+ 907F 24               inc h
 510+ 9080
 511+ 9080 C9               ret
 512+ 9081
 513+ 9081              ; -------------------------------------------------------------------------------------------------------------
 514+ 9081              ;
 515+ 9081              ;   04/12/23
 516+ 9081              ;
 517+ 9081              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 9081              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 9081              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 9081              ;
 521+ 9081              ;   MODIFICA: HL,DE,B y A.
 522+ 9081
 523+ 9081              Genera_coordenadas_X
 524+ 9081
 525+ 9081              ;   Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 9081              ;   DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 9081
 528+ 9081              ;   Limpiamos almacenes.
 529+ 9081
 530+ 9081 CD B2 90         call Limpia_Coordenadas_X
 531+ 9084
 532+ 9084              ;   Almacenamos coordenadas X.
 533+ 9084
 534+ 9084              ;   Almacenamos las coordenadas X de la entidad peligrosa, (en curso).
 535+ 9084
 536+ 9084 2A FF 88         ld hl,(Puntero_de_impresion)
 537+ 9087 11 47 89         ld de,Coordenadas_X_Entidad
 538+ 908A 06 02            ld b,2
 539+ 908C
 540+ 908C 3A DD 88         ld a,(CTRL_DESPLZ)
 541+ 908F A7               and a
 542+ 9090 28 01            jr z,1F
 543+ 9092 04               inc b
 544+ 9093
 545+ 9093 CD A9 90     1 call Guarda_coordenadas_X
 546+ 9096
 547+ 9096              ;   Almacenamos las coordenadas X de Amadeus.
 548+ 9096
 549+ 9096 2A A8 85         ld hl,(p.imp.amadeus)
 550+ 9099 11 44 89         ld de,Coordenadas_X_Amadeus
 551+ 909C 06 02            ld b,2
 552+ 909E
 553+ 909E 3A 86 85         ld a,(ctrl_desplz_amadeus)
 554+ 90A1 A7               and a
 555+ 90A2 28 01            jr z,2F
 556+ 90A4 04               inc b
 557+ 90A5
 558+ 90A5 CD A9 90     2 call Guarda_coordenadas_X
 559+ 90A8
 560+ 90A8              ;   Comparamos las coordenadas X de la entidad en curso con las de Amadeus.
 561+ 90A8
 562+ 90A8 C9               ret
 563+ 90A9
 564+ 90A9              ; ----- ----- ----- ----- -----
 565+ 90A9
 566+ 90A9 7D           Guarda_coordenadas_X  ld a,l
 567+ 90AA E6 1F            and $1f
 568+ 90AC 12           1 ld (de),a
 569+ 90AD 3C               inc a
 570+ 90AE 13               inc de
 571+ 90AF 10 FB            djnz 1B
 572+ 90B1 C9               ret
 573+ 90B2
 574+ 90B2 AF           Limpia_Coordenadas_X xor a
 575+ 90B3 06 06            ld b,6
 576+ 90B5 21 44 89         ld hl,Coordenadas_X_Amadeus
 577+ 90B8 77           1 ld (hl),a
 578+ 90B9 23               inc hl
 579+ 90BA 10 FC            djnz 1B
 580+ 90BC C9               ret
 581+ 90BD
 582+ 90BD              ; ----- ----- ----- ----- -----
 583+ 90BD
 584+ 90BD              Compara_coordenadas_X
 585+ 90BD
 586+ 90BD 06 03            ld b,3
 587+ 90BF 11 49 89         ld de,Coordenadas_X_Entidad+2
 588+ 90C2
 589+ 90C2 1A               ld a,(de)
 590+ 90C3 A7               and a
 591+ 90C4 20 01            jr nz,2F
 592+ 90C6 05               dec b
 593+ 90C7
 594+ 90C7 1B           2 dec de
 595+ 90C8 1B               dec de
 596+ 90C9 21 44 89         ld hl,Coordenadas_X_Amadeus
 597+ 90CC
 598+ 90CC D5           1 push de
 599+ 90CD E5               push hl
 600+ 90CE C5               push bc
 601+ 90CF
 602+ 90CF CD D9 90         call Comparando
 603+ 90D2
 604+ 90D2 C1               pop bc
 605+ 90D3 E1               pop hl
 606+ 90D4 D1               pop de
 607+ 90D5
 608+ 90D5 13               inc de
 609+ 90D6 10 F4            djnz 1B
 610+ 90D8
 611+ 90D8 C9               ret
 612+ 90D9
 613+ 90D9              ; ----- ----- ----- ----- -----
 614+ 90D9              ;
 615+ 90D9              ;   4/12/23
 616+ 90D9              ;
 617+ 90D9              ;   Sub. de [Compara_coordenadas_X]. Deja de comparar cuando encuentra coincidencia.
 618+ 90D9
 619+ 90D9 06 03        Comparando ld b,3
 620+ 90DB 1A               ld a,(de)
 621+ 90DC 4E           2 ld c,(hl)
 622+ 90DD B9               cp c
 623+ 90DE 28 04            jr z,1F
 624+ 90E0 23               inc hl
 625+ 90E1 10 F9            djnz 2B
 626+ 90E3 C9               ret
 627+ 90E4
 628+ 90E4 3E 01        1 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 629+ 90E6 32 EE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 630+ 90E9 21 3F 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 631+ 90EC CB D6            set 2,(hl)
 632+ 90EE C9               ret
 633+ 90EF
 634+ 90EF              ; -----------------------------------------------------------------------
 635+ 90EF              ;
 636+ 90EF              ;   7/12/23
 637+ 90EF              ;
 638+ 90EF
 639+ 90EF              Detecta_colision_nave_entidad
 640+ 90EF
 641+ 90EF              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 642+ 90EF
 643+ 90EF FD 2A D9 88      ld iy,(Puntero_objeto)
 644+ 90F3 2A FF 88         ld hl,(Puntero_de_impresion)
 645+ 90F6
 646+ 90F6 E5               push hl
 647+ 90F7
 648+ 90F7              ; ----- ----- -----
 649+ 90F7 1E 00            ld e,0                                         ; Indica impacto.
 650+ 90F9 06 0A            ld b,10
 651+ 90FB CD 2B 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 652+ 90FE 7B               ld a,e
 653+ 90FF FE 05            cp 5                                           ;! Ajusta sensibilidad del impacto "Amadeus-Entidad".
 654+ 9101 38 0E            jr c,3F
 655+ 9103
 656+ 9103              ; LLegados a este punto:
 657+ 9103              ;
 658+ 9103              ;   HAY COLISIÓN !!!!!.
 659+ 9103              ;
 660+ 9103              ;   .db (Impacto) de Amadeus a "1".
 661+ 9103              ;   SET el bit3 de (Impacto2).
 662+ 9103              ;
 663+ 9103              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 9103
 665+ 9103 21 EE 88         ld hl,Impacto
 666+ 9106 36 01            ld (hl),1
 667+ 9108 21 3F 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 668+ 910B CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 669+ 910D CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 670+ 910F
 671+ 910F 18 18            jr 1F
 672+ 9111
 673+ 9111              ; -----
 674+ 9111
 675+ 9111 E1           3 pop hl
 676+ 9112 CD A8 96         call NextScan
 677+ 9115 E5               push hl
 678+ 9116 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 679+ 9117 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 680+ 9119 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 681+ 911B 30 0C            jr nc,1F
 682+ 911D              ;                                                  ; _ 2º scanline si esto es así.
 683+ 911D 10 DC            djnz 2B
 684+ 911F
 685+ 911F              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 686+ 911F
 687+ 911F              ; LLegados a este punto:
 688+ 911F              ;
 689+ 911F              ;   NO HAY COLISIÓN !!!!!.
 690+ 911F              ;
 691+ 911F              ;   .db (Impacto) de Amadeus a "0".
 692+ 911F              ;   RES el bit2 de (Impacto2).
 693+ 911F              ;
 694+ 911F              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 695+ 911F              ;   Lo colocamos a "0".
 696+ 911F
 697+ 911F 21 3F 89         ld hl,Impacto2
 698+ 9122 CB 96            res 2,(hl)
 699+ 9124 2A 40 89         ld hl,(Entidad_sospechosa_de_colision)
 700+ 9127 36 00            ld (hl),0
 701+ 9129
 702+ 9129 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 703+ 912A C9               ret
 704+ 912B
 705+ 912B               ; ---------- ----------
 706+ 912B
 707+ 912B C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 708+ 912C 3A D6 88         ld a,(Columns)
 709+ 912F 47               ld b,a
 710+ 9130 FD 7E 00     2 ld a,(iy)
 711+ 9133 BE               cp (hl)
 712+ 9134 28 01            jr z,1F
 713+ 9136
 714+ 9136 1C               inc e
 715+ 9137
 716+ 9137 23           1 inc hl
 717+ 9138 FD 23            inc iy
 718+ 913A 10 F4            djnz 2B
 719+ 913C C1               pop bc
 720+ 913D C9               ret
 721+ 913E
 722+ 913E              ; -------------------------------------------------------------------------------------------------------------
 723+ 913E              ;
 724+ 913E              ;   13/03/23
 725+ 913E              ;
 726+ 913E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 727+ 913E              ;
 728+ 913E              ;   DESTRUYE: HL,BC,DE y A.
 729+ 913E
 730+ 913E 21 56 70     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 731+ 9141 7E               ld a,(hl)
 732+ 9142 A7               and a
 733+ 9143 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 734+ 9144
 735+ 9144 44               ld b,h
 736+ 9145 4D               ld c,l
 737+ 9146 2A 33 89         ld hl,(Stack_snapshot_disparos)
 738+ 9149 E5               push hl
 739+ 914A A7               and a
 740+ 914B ED 42            sbc hl,bc
 741+ 914D E5               push hl
 742+ 914E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 743+ 914F
 744+ 914F E1               pop hl
 745+ 9150 54               ld d,h
 746+ 9151 5D               ld e,l
 747+ 9152 1B               dec de
 748+ 9153 ED B8            lddr                                                ; Limpiamos.
 749+ 9155
 750+ 9155 21 56 70         ld hl,Album_de_fotos_disparos
 751+ 9158 22 33 89         ld (Stack_snapshot_disparos),hl
 752+ 915B
 753+ 915B C9               ret
 754+ 915C
 755+ 915C              ; -------------------------------------------------------------------------------------------------------------
 756+ 915C              ;
 757+ 915C              ;   18/07/23
 758+ 915C              ;
 759+ 915C
 760+ 915C              Motor_de_disparos
 761+ 915C
 762+ 915C              ; Gestiona DISPAROS DE AMADEUS.
 763+ 915C
 764+ 915C 01 02 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 765+ 915F 2A 3D 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 766+ 9162
 767+ 9162 CD 3C 8D     2 call Extrae_address
 768+ 9165 7E               ld a,(hl)
 769+ 9166 A7               and a
 770+ 9167 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 771+ 9169
 772+ 9169              ; ----- ----- ----- ----- ----- -----
 773+ 9169
 774+ 9169 C5               push bc
 775+ 916A CD 2E 92         call foto_disparo_a_borrar
 776+ 916D
 777+ 916D              ; Existe colisión con este disparo???
 778+ 916D
 779+ 916D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 780+ 916E 7E               ld a,(hl)
 781+ 916F 2B               dec hl
 782+ 9170 E6 01            and 1
 783+ 9172 28 1D            jr z,9F
 784+ 9174
 785+ 9174              ;   En este punto:
 786+ 9174              ;
 787+ 9174              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 788+ 9174              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 789+ 9174              ;   _con la entidad).
 790+ 9174              ;
 791+ 9174              ;   Disparo_2A defw 0                                ; Control.
 792+ 9174              ;    defw 0                                          ; Puntero objeto.
 793+ 9174              ;    defw 0                                          ; Puntero de impresión.
 794+ 9174              ;    defw 0                                          ; Rutina de impresión.
 795+ 9174
 796+ 9174 E5               push hl
 797+ 9175
 798+ 9175 06 04            ld b,4
 799+ 9177 23           19 inc hl
 800+ 9178 10 FD            djnz 19B
 801+ 917A
 802+ 917A CD 3C 8D         call Extrae_address
 803+ 917D CD 80 9D         call Genera_coordenadas_disparo
 804+ 9180
 805+ 9180              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 806+ 9180
 807+ 9180 21 42 89         ld hl,Coordenadas_disparo_certero
 808+ 9183 72               ld (hl),d
 809+ 9184 23               inc hl
 810+ 9185 73               ld (hl),e
 811+ 9186
 812+ 9186              ; Elimino el disparo de la base de datos.
 813+ 9186
 814+ 9186 E1               pop hl
 815+ 9187 CD AD 92         call Elimina_disparo_de_base_de_datos
 816+ 918A 21 3F 89         ld hl,Impacto2
 817+ 918D CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 818+ 918F
 819+ 918F 18 06            jr 11F
 820+ 9191
 821+ 9191 CD 57 92     9 call Mueve_disparo
 822+ 9194 CD 2E 92         call foto_disparo_a_borrar
 823+ 9197
 824+ 9197 C1           11 pop bc
 825+ 9198 18 04            jr 7F
 826+ 919A
 827+ 919A              ; ----- ----- ----- ----- ----- -----
 828+ 919A
 829+ 919A ED 42        1 sbc hl,bc
 830+ 919C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 831+ 919E
 832+ 919E 2A 3D 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 833+ 91A1 23               inc hl
 834+ 91A2 23               inc hl
 835+ 91A3 22 3D 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 836+ 91A6 18 BA            jr 2B
 837+ 91A8
 838+ 91A8 CD C1 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 839+ 91AB              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 840+ 91AB
 841+ 91AB              ; Gestiona DISPAROS DE ENTIDADES.
 842+ 91AB
 843+ 91AB 01 6A 85         ld bc,Disparo_11
 844+ 91AE 2A 3B 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 845+ 91B1
 846+ 91B1 CD 3C 8D     5 call Extrae_address
 847+ 91B4 7E               ld a,(hl)
 848+ 91B5 A7               and a
 849+ 91B6 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 850+ 91B8
 851+ 91B8              ; ----- ----- ----- ----- ----- -----
 852+ 91B8
 853+ 91B8 C5               push bc
 854+ 91B9 CD 2E 92         call foto_disparo_a_borrar
 855+ 91BC
 856+ 91BC              ; Existe colisión con este disparo???
 857+ 91BC
 858+ 91BC 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 859+ 91BD 7E               ld a,(hl)
 860+ 91BE 2B               dec hl
 861+ 91BF E6 01            and 1
 862+ 91C1 28 4D            jr z,10F
 863+ 91C3
 864+ 91C3              ;! La colisión se produce con Amadeus???
 865+ 91C3              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 866+ 91C3
 867+ 91C3 E5               push hl
 868+ 91C4
 869+ 91C4 06 04            ld b,4
 870+ 91C6 23           16 inc hl
 871+ 91C7 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 872+ 91C9
 873+ 91C9 CD 3C 8D         call Extrae_address
 874+ 91CC CD 80 9D         call Genera_coordenadas_disparo
 875+ 91CF
 876+ 91CF 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 877+ 91D0 FE 16            cp $16
 878+ 91D2 38 2A            jr c,15F
 879+ 91D4
 880+ 91D4
 881+ 91D4              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 882+ 91D4
 883+ 91D4 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 884+ 91D5
 885+ 91D5              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 886+ 91D5
 887+ 91D5 2A A8 85         ld hl,(p.imp.amadeus)
 888+ 91D8
 889+ 91D8              ; Coordenada X de Amadeus en D.
 890+ 91D8
 891+ 91D8 7D               ld a,l
 892+ 91D9 E6 1F            and $1F
 893+ 91DB 57               ld d,a
 894+ 91DC
 895+ 91DC 21 86 85         ld hl,Amadeus_db+8
 896+ 91DF 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 897+ 91E0
 898+ 91E0 21 44 89         ld hl,Coordenadas_X_Amadeus
 899+ 91E3 CD A9 90         call Guarda_coordenadas_X
 900+ 91E6
 901+ 91E6 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 902+ 91E7
 903+ 91E7              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 904+ 91E7
 905+ 91E7 06 02            ld b,2
 906+ 91E9 C5           20 push bc
 907+ 91EA
 908+ 91EA 06 03            ld b,3
 909+ 91EC 21 44 89         ld hl,Coordenadas_X_Amadeus
 910+ 91EF 7E           18 ld a,(hl)
 911+ 91F0 BA               cp d
 912+ 91F1 20 04            jr nz,17F
 913+ 91F3
 914+ 91F3              ;! Colisión Amadeus !!!!!!!!!!
 915+ 91F3
 916+ 91F3 C1               pop bc
 917+ 91F4 E1               pop hl
 918+ 91F5 18 0D            jr 14F
 919+ 91F7
 920+ 91F7 23           17 inc hl
 921+ 91F8 10 F5            djnz 18B
 922+ 91FA
 923+ 91FA 14               inc d                       ; 2ª Coordenada_X del disparo.
 924+ 91FB
 925+ 91FB C1               pop bc
 926+ 91FC 10 EB            djnz 20B
 927+ 91FE
 928+ 91FE
 929+ 91FE              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 930+ 91FE              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 931+ 91FE
 932+ 91FE E1           15 pop hl
 933+ 91FF 23               inc hl
 934+ 9200 35               dec (hl)
 935+ 9201 2B               dec hl
 936+ 9202 18 0C            jr 10F
 937+ 9204
 938+ 9204              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 939+ 9204              ; _ almacén de coordenadas_X de Amadeus.
 940+ 9204
 941+ 9204 E5           14 push hl
 942+ 9205 CD AD 92         call Elimina_disparo_de_base_de_datos
 943+ 9208 21 3F 89         ld hl,Impacto2
 944+ 920B CB CE            set 1,(hl)
 945+ 920D E1               pop hl
 946+ 920E 18 06            jr 12F
 947+ 9210
 948+ 9210              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 949+ 9210
 950+ 9210 CD 57 92     10 call Mueve_disparo
 951+ 9213 CD 2E 92         call foto_disparo_a_borrar
 952+ 9216 C1           12 pop bc
 953+ 9217
 954+ 9217 18 04            jr 8F
 955+ 9219
 956+ 9219              ; ----- ----- ----- ----- ----- -----
 957+ 9219
 958+ 9219 ED 42        4 sbc hl,bc
 959+ 921B 28 0A            jr z,6F
 960+ 921D
 961+ 921D 2A 3B 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 962+ 9220 23               inc hl
 963+ 9221 23               inc hl
 964+ 9222 22 3B 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 965+ 9225 18 8A            jr 5B
 966+ 9227
 967+ 9227 CD BA 8C     6 call Inicia_Puntero_Disparo_Entidades
 968+ 922A CD B2 90         call Limpia_Coordenadas_X
 969+ 922D C9               ret
 970+ 922E
 971+ 922E              ; ------------------------------------------------------------------
 972+ 922E
 973+ 922E              foto_disparo_a_borrar
 974+ 922E
 975+ 922E 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 976+ 922F A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 977+ 9230 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 978+ 9231
 979+ 9231 E5               push hl
 980+ 9232 23               inc hl
 981+ 9233 23               inc hl
 982+ 9234 ED 73 2B 89      ld (Stack),sp
 983+ 9238 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 984+ 9239 FD E1            pop iy
 985+ 923B DD E1            pop ix
 986+ 923D E1               pop hl
 987+ 923E ED 7B 2B 89      ld sp,(Stack)
 988+ 9242 3A 1A 89         ld a,(Ctrl_1)
 989+ 9245 CB C7            set 0,a
 990+ 9247 32 1A 89         ld (Ctrl_1),a
 991+ 924A CD 16 71         call Guarda_foto_registros
 992+ 924D 3A 1A 89         ld a,(Ctrl_1)
 993+ 9250 CB 87            res 0,a
 994+ 9252 32 1A 89         ld (Ctrl_1),a
 995+ 9255 E1               pop hl
 996+ 9256 C9               ret
 997+ 9257
 998+ 9257              ;---------------------------------------------------
 999+ 9257              ;
1000+ 9257              ;   18/07/23
1001+ 9257              ;
1002+ 9257
1003+ 9257              Mueve_disparo
1004+ 9257
1005+ 9257              ;   HL apunta al 1er byte, (Control), del disparo en curso.
1006+ 9257              ;   El 1er byte indica dirección, el 2º, IMPACTO.
1007+ 9257              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
1008+ 9257
1009+ 9257 E5               push hl
1010+ 9258
1011+ 9258 7E               ld a,(hl)
1012+ 9259
1013+ 9259 06 04            ld b,4
1014+ 925B 23           1 inc hl
1015+ 925C 10 FD            djnz 1B
1016+ 925E
1017+ 925E              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
1018+ 925E
1019+ 925E CD 3C 8D         call Extrae_address
1020+ 9261
1021+ 9261 E6 01            and 1
1022+ 9263 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
1023+ 9265
1024+ 9265              ; Disparo hacia arriba, (Amadeus).
1025+ 9265
1026+ 9265              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
1027+ 9265              ; _ de la dificultad.
1028+ 9265
1029+ 9265 CD B7 96         call PreviousScan
1030+ 9268 CD B7 96         call PreviousScan
1031+ 926B CD B7 96         call PreviousScan
1032+ 926E CD B7 96         call PreviousScan
1033+ 9271
1034+ 9271              ; Detecta si el disparo de Amadeus sale de pantalla:
1035+ 9271
1036+ 9271 7C               ld a,h
1037+ 9272 FE 40            cp $40
1038+ 9274 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1039+ 9276
1040+ 9276              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1041+ 9276
1042+ 9276 EB               ex de,hl
1043+ 9277 06 04            ld b,4
1044+ 9279 2B           6 dec hl
1045+ 927A 10 FD            djnz 6B
1046+ 927C
1047+ 927C CD AD 92         call Elimina_disparo_de_base_de_datos
1048+ 927F E1               pop hl
1049+ 9280 18 10            jr 7F
1050+ 9282
1051+ 9282              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1052+ 9282              ; HL contiene el puntero de impresión del disparo.
1053+ 9282              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1054+ 9282
1055+ 9282 D5           3 push de
1056+ 9283 C5               push bc
1057+ 9284
1058+ 9284 CD 40 90         call Comprueba_Colision
1059+ 9287
1060+ 9287              ; B="$80", no hay colisión. B="$81", existe colisión.
1061+ 9287
1062+ 9287 78               ld a,b
1063+ 9288
1064+ 9288 C1               pop bc
1065+ 9289 D1               pop de
1066+ 928A
1067+ 928A EB               ex de,hl
1068+ 928B
1069+ 928B 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1070+ 928C 23               inc hl                                      ; _ movimiento.
1071+ 928D 72               ld (hl),d
1072+ 928E
1073+ 928E E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1074+ 928F
1075+ 928F 23               inc hl                                      ; _ en curso.
1076+ 9290 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1077+ 9291 2B               dec hl
1078+ 9292
1079+ 9292 C9           7 ret
1080+ 9293
1081+ 9293              ; Disparo hacia abajo, (Entidad).
1082+ 9293
1083+ 9293 3A 4A 89     2 ld a,(Velocidad_disparo_entidades)
1084+ 9296 47               ld b,a
1085+ 9297
1086+ 9297 CD A8 96     4 call NextScan
1087+ 929A 10 FB            djnz 4B
1088+ 929C
1089+ 929C              ; Detecta si el disparo de la entidad sale de la pantalla.
1090+ 929C
1091+ 929C 7C               ld a,h
1092+ 929D FE 58            cp $58
1093+ 929F 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1094+ 92A1
1095+ 92A1 EB               ex de,hl
1096+ 92A2 06 04            ld b,4
1097+ 92A4 2B           5 dec hl
1098+ 92A5 10 FD            djnz 5B
1099+ 92A7
1100+ 92A7 CD AD 92         call Elimina_disparo_de_base_de_datos
1101+ 92AA E1               pop hl
1102+ 92AB 18 E5            jr 7B
1103+ 92AD
1104+ 92AD              ; HL apunta al primer byte de la base de datos del disparo.
1105+ 92AD
1106+ 92AD 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1107+ 92B0 AF               xor a
1108+ 92B1 77               ld (hl),a
1109+ 92B2 54               ld d,h
1110+ 92B3 5D               ld e,l
1111+ 92B4 13               inc de
1112+ 92B5 ED B0            ldir
1113+ 92B7 C9               ret
1114+ 92B8
1115+ 92B8              ; -----------------------------------------------------------------
1116+ 92B8              ;
1117+ 92B8              ;   7/12/23
1118+ 92B8              ;
1119+ 92B8
1120+ 92B8 3A 3F 89     Selector_de_impactos ld a,(Impacto2)
1121+ 92BB A7               and a
1122+ 92BC C8               ret z
1123+ 92BD
1124+ 92BD              ; Analizamos si hay impacto por disparos.
1125+ 92BD
1126+ 92BD              ; Primero analizamos si algún disparo impacta en Amadeus.
1127+ 92BD
1128+ 92BD CB 4F            bit 1,a
1129+ 92BF 28 07            jr z,1F
1130+ 92C1
1131+ 92C1 21 97 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1132+ 92C4 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1133+ 92C6 18 08            jr 2F
1134+ 92C8
1135+ 92C8 CB 47        1 bit 0,a
1136+ 92CA C8               ret z
1137+ 92CB
1138+ 92CB              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1139+ 92CB
1140+ 92CB 21 1A 89         ld hl,Ctrl_1
1141+ 92CE CB D6            set 2,(hl)
1142+ 92D0
1143+ 92D0 C9           2 ret
1144+ 92D1
1145+ 92D1              ; -----------------------------------------------------------------
1146+ 92D1              ;
1147+ 92D1              ;   25/04/23
1148+ 92D1              ;
1149+ 92D1
1150+ 92D1              Determina_resultado_comparativa
1151+ 92D1
1152+ 92D1              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1153+ 92D1              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1154+ 92D1              ;
1155+ 92D1              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1156+ 92D1              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1157+ 92D1              ;
1158+ 92D1              ;   SBC HL,DE
1159+ 92D1
1160+ 92D1              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1161+ 92D1              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1162+ 92D1
1163+ 92D1              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1164+ 92D1              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1165+ 92D1
1166+ 92D1
1167+ 92D1 3A E9 88         ld a,(Cuad_objeto)
1168+ 92D4 FE 02            cp 2
1169+ 92D6 28 26            jr z,2F
1170+ 92D8 38 24            jr c,2F
1171+ 92DA
1172+ 92DA              ; Cuadrantes 3º y 4º
1173+ 92DA
1174+ 92DA E6 01            and 1
1175+ 92DC 28 10            jr z,4F
1176+ 92DE
1177+ 92DE              ; Cuadrante 3º
1178+ 92DE
1179+ 92DE 7C               ld a,h
1180+ 92DF 06 00            ld b,0
1181+ 92E1
1182+ 92E1 CD 6C 93         call Compara_cositas_H3
1183+ 92E4
1184+ 92E4 04               inc b
1185+ 92E5 05               dec b
1186+ 92E6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1187+ 92E7
1188+ 92E7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1189+ 92E8 06 00            ld b,0
1190+ 92EA
1191+ 92EA CD 7E 93         call Compara_cositas_L3
1192+ 92ED C9               ret
1193+ 92EE
1194+ 92EE              ; Cuadrante 4º
1195+ 92EE
1196+ 92EE 7C           4 ld a,h
1197+ 92EF 06 00            ld b,0
1198+ 92F1
1199+ 92F1 CD 90 93         call Compara_cositas_H4
1200+ 92F4
1201+ 92F4 04               inc b
1202+ 92F5 05               dec b
1203+ 92F6 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1204+ 92F7
1205+ 92F7 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1206+ 92F8 06 00            ld b,0
1207+ 92FA
1208+ 92FA CD A6 93         call Compara_cositas_L4
1209+ 92FD C9               ret
1210+ 92FE
1211+ 92FE              ; Cuadrantes 1º y 2º.
1212+ 92FE
1213+ 92FE 28 10        2 jr z,3F
1214+ 9300
1215+ 9300              ; 1er Cuadrante
1216+ 9300
1217+ 9300 7C               ld a,h
1218+ 9301 06 00            ld b,0
1219+ 9303
1220+ 9303 CD 44 93         call Compara_cositas_H1
1221+ 9306
1222+ 9306 04               inc b
1223+ 9307 05               dec b
1224+ 9308 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1225+ 9309
1226+ 9309 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1227+ 930A 06 00            ld b,0
1228+ 930C
1229+ 930C CD 5A 93         call Compara_cositas_L1
1230+ 930F C9               ret
1231+ 9310
1232+ 9310
1233+ 9310              ; 2º Cuadrante
1234+ 9310
1235+ 9310 7C           3 ld a,h
1236+ 9311 06 00            ld b,0
1237+ 9313
1238+ 9313 CD 20 93         call Compara_cositas_H2
1239+ 9316
1240+ 9316 04               inc b
1241+ 9317 05               dec b
1242+ 9318 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1243+ 9319
1244+ 9319 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1245+ 931A 06 00            ld b,0
1246+ 931C
1247+ 931C CD 32 93         call Compara_cositas_L2
1248+ 931F C9               ret
1249+ 9320
1250+ 9320 A7           Compara_cositas_H2 and a
1251+ 9321 28 0D            jr z,1F
1252+ 9323              ;    cp $fd
1253+ 9323              ;    jr z,1F
1254+ 9323              ;    cp $fe
1255+ 9323              ;    jr z,1F
1256+ 9323 FE FF            cp $ff
1257+ 9325 28 09            jr z,1F
1258+ 9327 FE 01            cp $01
1259+ 9329 28 05            jr z,1F
1260+ 932B FE 02            cp $02
1261+ 932D 28 01            jr z,1F
1262+ 932F C0               ret nz
1263+ 9330 04           1 inc b
1264+ 9331 C9               ret
1265+ 9332
1266+ 9332 A7           Compara_cositas_L2 and a
1267+ 9333 28 0D            jr z,1F
1268+ 9335              ;    cp $fd
1269+ 9335              ;    jr z,1F
1270+ 9335 FE FE            cp $fe
1271+ 9337 28 09            jr z,1F
1272+ 9339 FE FF            cp $ff
1273+ 933B 28 05            jr z,1F
1274+ 933D FE 01            cp $01
1275+ 933F 28 01            jr z,1F
1276+ 9341              ;    cp $02
1277+ 9341              ;    jr z,1F
1278+ 9341 C0               ret nz
1279+ 9342 04           1 inc b
1280+ 9343 C9               ret
1281+ 9344
1282+ 9344 A7           Compara_cositas_H1 and a
1283+ 9345 28 11            jr z,1F
1284+ 9347              ;    cp $fd
1285+ 9347              ;    jr z,1F
1286+ 9347              ;    cp $fe
1287+ 9347              ;    jr z,1F
1288+ 9347 FE FF            cp $ff
1289+ 9349 28 0D            jr z,1F
1290+ 934B FE 01            cp $01
1291+ 934D 28 09            jr z,1F
1292+ 934F FE 02            cp $02
1293+ 9351 28 05            jr z,1F
1294+ 9353 FE 03            cp $03
1295+ 9355 28 01            jr z,1F
1296+ 9357 C0               ret nz
1297+ 9358 04           1 inc b
1298+ 9359 C9               ret
1299+ 935A
1300+ 935A A7           Compara_cositas_L1 and a
1301+ 935B 28 0D            jr z,1F
1302+ 935D              ;    cp $fd
1303+ 935D              ;    jr z,1F
1304+ 935D              ;    cp $fe
1305+ 935D              ;    jr z,1F
1306+ 935D              ;    cp $ff
1307+ 935D              ;    jr z,1F
1308+ 935D FE 01            cp $01
1309+ 935F 28 09            jr z,1F
1310+ 9361 FE 02            cp $02
1311+ 9363 28 05            jr z,1F
1312+ 9365 FE 03            cp $03
1313+ 9367 28 01            jr z,1F
1314+ 9369 C0               ret nz
1315+ 936A 04           1 inc b
1316+ 936B C9               ret
1317+ 936C
1318+ 936C A7           Compara_cositas_H3 and a
1319+ 936D 28 0D            jr z,1F
1320+ 936F              ;    cp $fd
1321+ 936F              ;    jr z,1F
1322+ 936F FE FE            cp $fe
1323+ 9371 28 09            jr z,1F
1324+ 9373 FE FF            cp $ff
1325+ 9375 28 05            jr z,1F
1326+ 9377 FE 01            cp $01
1327+ 9379 28 01            jr z,1F
1328+ 937B              ;    cp $02
1329+ 937B              ;    jr z,1F
1330+ 937B              ;    cp $03
1331+ 937B              ;    jr z,1F
1332+ 937B C0               ret nz
1333+ 937C 04           1 inc b
1334+ 937D C9               ret
1335+ 937E
1336+ 937E A7           Compara_cositas_L3 and a
1337+ 937F 28 0D            jr z,1F
1338+ 9381              ;    cp $fd
1339+ 9381              ;    jr z,1F
1340+ 9381              ;    cp $fe
1341+ 9381              ;    jr z,1F
1342+ 9381              ;    cp $ff
1343+ 9381              ;    jr z,1F
1344+ 9381 FE 01            cp $01
1345+ 9383 28 09            jr z,1F
1346+ 9385 FE 02            cp $02
1347+ 9387 28 05            jr z,1F
1348+ 9389 FE 03            cp $03
1349+ 938B 28 01            jr z,1F
1350+ 938D C0               ret nz
1351+ 938E 04           1 inc b
1352+ 938F C9               ret
1353+ 9390
1354+ 9390 A7           Compara_cositas_H4 and a
1355+ 9391 28 11            jr z,1F
1356+ 9393 FE FD            cp $fd
1357+ 9395 28 0D            jr z,1F
1358+ 9397 FE FE            cp $fe
1359+ 9399 28 09            jr z,1F
1360+ 939B FE FF            cp $ff
1361+ 939D 28 05            jr z,1F
1362+ 939F FE 01            cp $01
1363+ 93A1 28 01            jr z,1F
1364+ 93A3              ;    cp $02
1365+ 93A3              ;    jr z,1F
1366+ 93A3              ;    cp $03
1367+ 93A3              ;    jr z,1F
1368+ 93A3 C0               ret nz
1369+ 93A4 04           1 inc b
1370+ 93A5 C9               ret
1371+ 93A6
1372+ 93A6 A7           Compara_cositas_L4 and a
1373+ 93A7 28 0D            jr z,1F
1374+ 93A9              ;    cp $fd
1375+ 93A9              ;    jr z,1F
1376+ 93A9 FE FE            cp $fe
1377+ 93AB 28 09            jr z,1F
1378+ 93AD FE FF            cp $ff
1379+ 93AF 28 05            jr z,1F
1380+ 93B1 FE 01            cp $01
1381+ 93B3 28 01            jr z,1F
1382+ 93B5              ;    cp $02
1383+ 93B5              ;    jr z,1F
1384+ 93B5              ;    cp $03
1385+ 93B5              ;    jr z,1F
1386+ 93B5 C0               ret nz
1387+ 93B6 04           1 inc b
1388+ 93B7 C9               ret
# file closed: Disparo.asm
1848  93B8              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93B8              ; ******************************************************************************************************************************************************************************************
   2+ 93B8              ;
   3+ 93B8              ; 26/06/23
   4+ 93B8              ;
   5+ 93B8              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93B8
   7+ 93B8              Draw
   8+ 93B8
   9+ 93B8 CD 9C 96     	call Prepara_draw
  10+ 93BB 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  11+ 93BC A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  12+ 93BD 28 05        	jr z,2F
  13+ 93BF
  14+ 93BF 3A E9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  15+ 93C2 18 0C        	jr 1F
  16+ 93C4
  17+ 93C4 2A E7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  18+ 93C7 22 D7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  19+ 93CA CD 59 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  20+ 93CD              ;													; _la esquina superior izquierda de la pantalla.
  21+ 93CD CD 11 A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  22+ 93D0
  23+ 93D0 3A 05 89     1 ld a,(Ctrl_0)
  24+ 93D3 CB 6F        	bit 5,a
  25+ 93D5 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  26+ 93D7
  27+ 93D7 CD EF 93     	call Comprueba_limite_horizontal
  28+ 93DA CD 7F 94     	call Comprueba_limite_vertical
  29+ 93DD
  30+ 93DD              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  31+ 93DD              ; -----------------------
  32+ 93DD              ; -----------------------
  33+ 93DD              ; -----------------------
  34+ 93DD
  35+ 93DD CD CC 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  36+ 93E0 CD 03 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  37+ 93E3 CD 62 96     	call Define_rutina_de_impresion
  38+ 93E6
  39+ 93E6 3A 05 89     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  40+ 93E9 CB AF        	res 5,a											; _a ser de utilidad.
  41+ 93EB 32 05 89     	ld (Ctrl_0),a
  42+ 93EE
  43+ 93EE C9           	ret
  44+ 93EF
  45+ 93EF              ; *******************************************************************************************************************************************************************************************
  46+ 93EF              ;	21/01/23
  47+ 93EF              ;
  48+ 93EF              ; 	Comprueba_limite_horizontal.
  49+ 93EF              ;
  50+ 93EF              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  51+ 93EF              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  52+ 93EF              ;
  53+ 93EF              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  54+ 93EF              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  55+ 93EF              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  56+ 93EF              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  57+ 93EF
  58+ 93EF
  59+ 93EF
  60+ 93EF 3A 05 89     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  61+ 93F2 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  62+ 93F4 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  63+ 93F6 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  64+ 93F8 32 05 89     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  65+ 93FB 18 09            jr 6F
  66+ 93FD CB 5F        1 bit 3,a
  67+ 93FF 28 0A            jr z,2F
  68+ 9401 E6 F7            and $f7
  69+ 9403 32 05 89         ld (Ctrl_0),a
  70+ 9406 CD 59 95     6 call Inicializacion
  71+ 9409 18 5B            jr 5F
  72+ 940B E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  73+ 940C
  74+ 940C              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  75+ 940C              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  76+ 940C
  77+ 940C EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  78+ 940D 2A 13 89     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  79+ 9410 CD BB 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  80+ 9413 67           	ld h,a
  81+ 9414 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  82+ 9415 CD BB 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  83+ 9418 67           	ld h,a
  84+ 9419 A7           	and a
  85+ 941A ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  86+ 941C 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  87+ 941D 3A E9 88     	ld a,(Cuad_objeto)
  88+ 9420 FE 02        	cp 2
  89+ 9422 38 1E        	jr c,3F
  90+ 9424 28 1C        	jr z,3F
  91+ 9426 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  92+ 9427 28 23            jr z,7F
  93+ 9429 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  94+ 942B 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  95+ 942D E1           	pop hl
  96+ 942E
  97+ 942E              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  98+ 942E              ; _para indicar con E="2" en caso necesario.
  99+ 942E
 100+ 942E E5               push hl
 101+ 942F C5               push bc
 102+ 9430 CD BB 99     	call calcula_tercio
 103+ 9433 FE 01        	cp 1
 104+ 9435 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 105+ 9437 CD 67 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 106+ 943A 28 26            jr z,9F
 107+ 943C 38 24            jr c,9F
 108+ 943E 1E 00        11 ld e,0
 109+ 9440 18 22            jr 8F
 110+ 9442 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 111+ 9443 28 07        	jr z, 7F
 112+ 9445 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 113+ 9447 1E 00         	ld e,0
 114+ 9449 E1           	pop hl
 115+ 944A 18 04        	jr 4F
 116+ 944C 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 117+ 944E 18 15            jr 10F
 118+ 9450
 119+ 9450              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 120+ 9450              ; _para indicar con E="2" en caso necesario.
 121+ 9450
 122+ 9450 E5           4 push hl
 123+ 9451 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 124+ 9452 CD BB 99     	call calcula_tercio
 125+ 9455 FE 01        	cp 1
 126+ 9457 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 127+ 9459 CD 67 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 128+ 945C 28 04            jr z,9F
 129+ 945E 30 02            jr nc,9F
 130+ 9460 18 02        	jr 8F
 131+ 9462 1E 02        9 ld e,2
 132+ 9464 C1           8 pop bc
 133+ 9465 E1           10 pop hl
 134+ 9466 C9           5 ret
 135+ 9467
 136+ 9467              ; --------------------
 137+ 9467              ;
 138+ 9467              ; 25/08/22
 139+ 9467
 140+ 9467 CD BB 99     Comprueba_centro call calcula_tercio
 141+ 946A 67               ld h,a
 142+ 946B 08           	ex af,af
 143+ 946C FE 02        	cp 2
 144+ 946E 38 07        	jr c,1F
 145+ 9470 28 05        	jr z,1F
 146+ 9472 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 147+ 9475 18 03        	jr 2F
 148+ 9477 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 149+ 947A 08           2 ex af,af
 150+ 947B A7               and a
 151+ 947C ED 42            sbc hl,bc
 152+ 947E C9               ret
 153+ 947F
 154+ 947F              ; *********************************************************************************************************************************************************************************************
 155+ 947F              ;
 156+ 947F              ;   16/8/22
 157+ 947F              ;
 158+ 947F              ;	Comprueba_limite_vertical
 159+ 947F              ;
 160+ 947F              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 161+ 947F              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 162+ 947F              ;
 163+ 947F
 164+ 947F 2A D7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 165+ 9482 7D           	ld a,l
 166+ 9483 E6 1F        	and $1F
 167+ 9485 57           	ld d,a
 168+ 9486 3A 15 89     	ld a,(Limite_vertical)
 169+ 9489 BA           	cp d 											; Límite - Posición.
 170+ 948A 08           	ex af,af 										; Resultado de CP d en F'.
 171+ 948B 3A E9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 172+ 948E CB 47        	bit 0,a
 173+ 9490 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 174+ 9492
 175+ 9492              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 176+ 9492
 177+ 9492 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 178+ 9493 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 179+ 9495
 180+ 9495              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 181+ 9495              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 182+ 9495
 183+ 9495 3A DB 88         ld a,(Coordenada_X)
 184+ 9498 16 0F            ld d,Centro_izquierda
 185+ 949A A7               and a
 186+ 949B 92               sub d 											 ; Posición - Centro_izquierda.
 187+ 949C 28 1E            jr z,3F
 188+ 949E 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 189+ 94A0              ;                                                    ; _salimos sin modificar nada.
 190+ 94A0 18 0E            jr 2F
 191+ 94A2 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 192+ 94A3 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 193+ 94A5
 194+ 94A5              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 195+ 94A5              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 196+ 94A5
 197+ 94A5 3A DB 88         ld a,(Coordenada_X)
 198+ 94A8 16 10            ld d,Centro_derecha
 199+ 94AA A7               and a
 200+ 94AB 92               sub d
 201+ 94AC 28 0E            jr z,3F
 202+ 94AE 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 203+ 94B0              ;                                                    ; _salimos sin modificar nada.
 204+ 94B0 CB 43        2 bit 0,e
 205+ 94B2 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 206+ 94B4 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 207+ 94B5 CD 49 95         call Modificaccionne
 208+ 94B8 C1           	pop bc
 209+ 94B9 CD 59 95         call Inicializacion
 210+ 94BC C9           3 ret 				 								 ; Salimos de la rutina.
 211+ 94BD
 212+ 94BD              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 213+ 94BD
 214+ 94BD C5           4 push bc
 215+ 94BE 01 D6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 216+ 94C1 0A           	ld a,(bc)
 217+ 94C2 3D           	dec a
 218+ 94C3 47           	ld b,a 											 ; Columnas-1 en B.
 219+ 94C4 7D           	ld a,l
 220+ 94C5 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 221+ 94C6 CB 47        	bit 0,a
 222+ 94C8 28 03        	jr z,5F
 223+ 94CA 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 224+ 94CB 18 2E        	jr 7F
 225+ 94CD
 226+ 94CD              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 227+ 94CD
 228+ 94CD 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 229+ 94CE F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 230+ 94CF 3A 05 89     	ld a,(Ctrl_0)
 231+ 94D2 CB 4F        	bit 1,a
 232+ 94D4 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 233+ 94D6 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 234+ 94D7
 235+ 94D7              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 236+ 94D7
 237+ 94D7 1C               inc e
 238+ 94D8 1D               dec e
 239+ 94D9 20 07            jr nz,12F
 240+ 94DB 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 241+ 94DC 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 242+ 94DD 22 D7 88     	ld (Posicion_actual),hl
 243+ 94E0 18 44        13 jr 9F
 244+ 94E2 CB 43        12 bit 0,e
 245+ 94E4 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 246+ 94E6              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 247+ 94E6 C1           	pop bc
 248+ 94E7 18 D3        	jr 3B
 249+ 94E9 80           14 add b
 250+ 94EA 6F               ld l,a
 251+ 94EB 22 D7 88     	ld (Posicion_actual),hl
 252+ 94EE CD 49 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 253+ 94F1 18 33            jr 9F 											 ; _inicializamos y salimos.
 254+ 94F3 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 255+ 94F5 32 05 89         ld (Ctrl_0),a
 256+ 94F8 F1           	pop af
 257+ 94F9 18 2B        	jr 9F
 258+ 94FB
 259+ 94FB              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 260+ 94FB
 261+ 94FB F5           7 push af
 262+ 94FC 3A 05 89     	ld a,(Ctrl_0)
 263+ 94FF CB 47        	bit 0,a
 264+ 9501 20 1D        	jr nz,8F
 265+ 9503 F1           	pop af
 266+ 9504
 267+ 9504              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 268+ 9504
 269+ 9504 1C           	inc e
 270+ 9505 1D               dec e
 271+ 9506 20 07            jr nz,10F
 272+ 9508 90           	sub b
 273+ 9509 6F               ld l,a
 274+ 950A 22 D7 88     	ld (Posicion_actual),hl
 275+ 950D 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 276+ 950F              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 277+ 950F CB 43        10 bit 0,e
 278+ 9511 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 279+ 9513              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 280+ 9513 C1           	pop bc
 281+ 9514 18 A6        	jr 3B
 282+ 9516 90           16 sub b
 283+ 9517 6F               ld l,a
 284+ 9518 22 D7 88     	ld (Posicion_actual),hl
 285+ 951B CD 49 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 286+ 951E 18 06            jr 9F
 287+ 9520 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 288+ 9522 32 05 89         ld (Ctrl_0),a
 289+ 9525 F1           	pop af
 290+ 9526 C1           9 pop bc
 291+ 9527 1E 00        	ld e,0
 292+ 9529 CD 59 95         call Inicializacion
 293+ 952C F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 294+ 952D 08           	ex af,af
 295+ 952E F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 296+ 952F 18 8B            jr 3B
 297+ 9531
 298+ 9531              ; --------------------
 299+ 9531
 300+ 9531 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 301+ 9533 CD B7 96     1 call PreviousScan
 302+ 9536 10 FB            djnz 1B
 303+ 9538 22 D7 88     	ld (Posicion_actual),hl
 304+ 953B AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 305+ 953C C9           	ret
 306+ 953D
 307+ 953D              ; --------------------
 308+ 953D
 309+ 953D 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 310+ 953F CD A8 96     1 call NextScan
 311+ 9542 10 FB            djnz 1B
 312+ 9544 22 D7 88     	ld (Posicion_actual),hl
 313+ 9547 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 314+ 9548 C9           	ret
 315+ 9549
 316+ 9549              ; --------------------
 317+ 9549              ;
 318+ 9549              ;	22/01/23
 319+ 9549              ;
 320+ 9549              ;	E="1". Hemos cambiado de cuadrante.
 321+ 9549              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 322+ 9549              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 323+ 9549
 324+ 9549
 325+ 9549              Modificaccionne
 326+ 9549
 327+ 9549 3A E9 88     	ld a,(Cuad_objeto)
 328+ 954C FE 02        	cp 2
 329+ 954E CC 31 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 330+ 9551 DC 31 95         call c,Modifica_Pos_actual
 331+ 9554 C8           	ret z
 332+ 9555 CD 3D 95         call Modifica_Pos_actual2
 333+ 9558 C9               ret
 334+ 9559
 335+ 9559              ; *************************************************************************************************************************************************************************************************
 336+ 9559              ;
 337+ 9559              ;	13/8/22
 338+ 9559              ;
 339+ 9559              ;	Inicializacion
 340+ 9559              ;
 341+ 9559              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 342+ 9559              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 343+ 9559              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 344+ 9559              ;
 345+ 9559              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 346+ 9559              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 347+ 9559              ;	_ desaparece/aparece.
 348+ 9559
 349+ 9559              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 350+ 9559              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 351+ 9559              ;
 352+ 9559              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 353+ 9559              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 354+ 9559              ; 		   [E] ="0"
 355+ 9559
 356+ 9559              ; 	OUTPUT: DESTRUYE [AF] y [D].
 357+ 9559
 358+ 9559 CD BB 99     Inicializacion call calcula_tercio
 359+ 955C 28 36        	jr z,primit
 360+ 955E E6 02        	and 2
 361+ 9560 20 07        	jr nz,segmit
 362+ 9562 7D           	ld a,l
 363+ 9563 FE 7F        	cp $7f
 364+ 9565 38 2D        	jr c,primit
 365+ 9567 28 2B        	jr z,primit
 366+ 9569 CD C6 95     segmit call column
 367+ 956C 38 13        	jr c,tercuad
 368+ 956E 3E 04        cuarcuad ld a,4
 369+ 9570 32 E9 88     	ld (Cuad_objeto),a
 370+ 9573 21 20 48     	ld hl,$4820
 371+ 9576 22 13 89     	ld (Limite_horizontal),hl
 372+ 9579 21 15 89     	ld hl,Limite_vertical
 373+ 957C 36 0D        	ld (hl),$0d
 374+ 957E 08           	ex af,af
 375+ 957F 18 3C        	jr 1F
 376+ 9581              tercuad
 377+ 9581 3E 03        	ld a,3
 378+ 9583 32 E9 88     	ld (Cuad_objeto),a
 379+ 9586 21 20 48     	ld hl,$4820
 380+ 9589 22 13 89     	ld (Limite_horizontal),hl
 381+ 958C 21 15 89     	ld hl,Limite_vertical
 382+ 958F 36 12        	ld (hl),$12
 383+ 9591 08           	ex af,af
 384+ 9592 18 29        	jr 1F
 385+ 9594 CD C6 95     primit call column
 386+ 9597 38 13        	jr c, primcuad
 387+ 9599              segcuad
 388+ 9599 3E 02        	ld a,2
 389+ 959B 32 E9 88     	ld (Cuad_objeto),a
 390+ 959E 21 C0 4F     	ld hl,$4fc0
 391+ 95A1 22 13 89     	ld (Limite_horizontal),hl
 392+ 95A4 21 15 89     	ld hl,Limite_vertical
 393+ 95A7 36 0D        	ld (hl),$0d
 394+ 95A9 08           	ex af,af
 395+ 95AA 18 11        	jr 1F
 396+ 95AC              primcuad
 397+ 95AC 3E 01        	ld a,1
 398+ 95AE 32 E9 88     	ld (Cuad_objeto),a
 399+ 95B1 21 C0 4F     	ld hl,$4fc0
 400+ 95B4 22 13 89     	ld (Limite_horizontal),hl
 401+ 95B7 21 15 89     	ld hl,Limite_vertical
 402+ 95BA 36 12        	ld (hl),$12
 403+ 95BC 08           	ex af,af
 404+ 95BD CD 55 9D     1 call Genera_coordenadas
 405+ 95C0 21 05 89     	ld hl,Ctrl_0
 406+ 95C3 CB EE        	set 5,(hl)
 407+ 95C5 C9           	ret
 408+ 95C6
 409+ 95C6              ; ------------------------------------------------------------------------------------------------------------------
 410+ 95C6
 411+ 95C6              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 412+ 95C6              ;
 413+ 95C6              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 414+ 95C6
 415+ 95C6 7D           column ld a,l
 416+ 95C7 E6 1F        	and $1f
 417+ 95C9 FE 10         	cp $10
 418+ 95CB C9            	ret
 419+ 95CC
 420+ 95CC              ; --------------------------------------------------------------------------------------------------------------------
 421+ 95CC              ;
 422+ 95CC              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 423+ 95CC              ;
 424+ 95CC              ; 14/12/22
 425+ 95CC              ;
 426+ 95CC              ;	Modifica: A y BC.
 427+ 95CC
 428+ 95CC 3A E9 88     calcula_CColumnass ld a,(Cuad_objeto)
 429+ 95CF E6 01        	and 1
 430+ 95D1 28 17        	jr z,1F
 431+ 95D3
 432+ 95D3              ; Nos encontramos en la parte izquierda de la pantalla
 433+ 95D3
 434+ 95D3 3A DB 88     	ld a,(Coordenada_X)
 435+ 95D6 47           	ld b,a
 436+ 95D7 04           	inc b											; (Coordenada_X)+1 en B.
 437+ 95D8 79           	ld a,c
 438+ 95D9 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 439+ 95DA 38 08        	jr c,2F
 440+ 95DC 47           	ld b,a
 441+ 95DD 79           	ld a,c
 442+ 95DE 90           	sub b
 443+ 95DF 32 12 89     	ld (Columnas),a
 444+ 95E2 18 1B        	jr 4F
 445+ 95E4 79           2 ld a,c
 446+ 95E5 32 12 89     	ld (Columnas),a
 447+ 95E8 18 15        	jr 4F
 448+ 95EA
 449+ 95EA              ; Nos encontramos en la parte derecha de la pantalla.
 450+ 95EA
 451+ 95EA 3A DB 88     1 ld a,(Coordenada_X)
 452+ 95ED 81           	add c
 453+ 95EE 3D           	dec a
 454+ 95EF D6 1F        	sub $1f
 455+ 95F1 38 08        	jr c,3F
 456+ 95F3 47           	ld b,a
 457+ 95F4 79           	ld a,c
 458+ 95F5 90           	sub b
 459+ 95F6 32 12 89     	ld (Columnas),a
 460+ 95F9 18 04        	jr 4F
 461+ 95FB 79           3 ld a,c
 462+ 95FC 32 12 89     	ld (Columnas),a
 463+ 95FF D9           4 exx
 464+ 9600 4F           	ld c,a
 465+ 9601 D9           	exx
 466+ 9602 C9            ret
 467+ 9603
 468+ 9603              ; --------------------------------------------------------------------------------------------------------------------
 469+ 9603              ;
 470+ 9603              ;   19/7/23
 471+ 9603              ;
 472+ 9603              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 473+ 9603              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 474+ 9603              ;
 475+ 9603              ;	OUTPUT: IX Contienen el puntero de impresión.
 476+ 9603              ;			HL e IY Contienen (Puntero_objeto).
 477+ 9603              ;
 478+ 9603              ;	DESTRUYE: HL,B Y A.
 479+ 9603
 480+ 9603 3A E9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 481+ 9606 FE 02        	cp 2
 482+ 9608 38 18        	jr c,1F
 483+ 960A 28 16        	jr z,1F
 484+ 960C E6 01        	and 1
 485+ 960E 28 0D        	jr z,3F
 486+ 9610
 487+ 9610              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 488+ 9610
 489+ 9610 CD 56 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 490+ 9613
 491+ 9613 7D           9 ld a,l
 492+ 9614 E6 1F        	and $1f
 493+ 9616 28 2A        	jr z,7F
 494+ 9618 2B           	dec hl
 495+ 9619 10 F8        	djnz 9B
 496+ 961B 18 25        	jr 7F
 497+ 961D
 498+ 961D              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 499+ 961D
 500+ 961D 2A D7 88     3 ld hl,(Posicion_actual)
 501+ 9620 18 20        	jr 7F
 502+ 9622
 503+ 9622 28 14        1 jr z,2F
 504+ 9624
 505+ 9624              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 506+ 9624
 507+ 9624 CD 56 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 508+ 9627
 509+ 9627 7D           4 ld a,l
 510+ 9628 E6 1F        	and $1f
 511+ 962A 28 03        	jr z,6F
 512+ 962C 2B           	dec hl
 513+ 962D 10 F8        	djnz 4B
 514+ 962F 06 0F        6 ld b,15
 515+ 9631 CD B7 96     5 call PreviousScan
 516+ 9634 10 FB        	djnz 5B
 517+ 9636 18 0A        	jr 7F
 518+ 9638
 519+ 9638              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 520+ 9638
 521+ 9638 CD 56 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 522+ 963B 06 0F        	ld b,15
 523+ 963D CD B7 96     8 call PreviousScan
 524+ 9640 10 FB        	djnz 8B
 525+ 9642
 526+ 9642 E5           7 push hl
 527+ 9643 DD E1        	pop ix
 528+ 9645
 529+ 9645 2A D9 88     	ld hl,(Puntero_objeto)
 530+ 9648 E5           	push hl
 531+ 9649 FD E1        	pop iy
 532+ 964B
 533+ 964B              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 534+ 964B
 535+ 964B 3A 05 89     	ld a,(Ctrl_0)
 536+ 964E CB 77        	bit 6,a
 537+ 9650 C8           	ret z
 538+ 9651
 539+ 9651              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 540+ 9651              ; _ entidad / Amadeus´.
 541+ 9651
 542+ 9651 DD 22 A8 85  	ld (p.imp.amadeus),ix
 543+ 9655
 544+ 9655 C9           	ret
 545+ 9656
 546+ 9656              ; --------------------------------------------------------------------------------------------------------------------
 547+ 9656              ;
 548+ 9656              ;	2/1/23
 549+ 9656              ;
 550+ 9656              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 551+ 9656              ;
 552+ 9656              ;	Tras esta rutina tenemos:
 553+ 9656              ;
 554+ 9656              ;	OUTPUT: HL contiene (Posicion_actual).
 555+ 9656              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 556+ 9656              ;
 557+ 9656              ;	DESTRUYE!!!!! HL,B y A.
 558+ 9656
 559+ 9656 2A D7 88     Operandos ld hl,(Posicion_actual)
 560+ 9659 3A 12 89     	ld a,(Columnas)
 561+ 965C 3D           	dec a
 562+ 965D 20 01        	jr nz,1F
 563+ 965F 3C           	inc a
 564+ 9660 47           1 ld b,a
 565+ 9661 C9           	ret
 566+ 9662
 567+ 9662              ; --------------------------------------------------------------------------------------------------------------------
 568+ 9662              ;
 569+ 9662              ;	3/1/23
 570+ 9662              ;
 571+ 9662              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 572+ 9662              ;
 573+ 9662              ;	Destruye: A,B,HL y DE.
 574+ 9662
 575+ 9662              Define_rutina_de_impresion
 576+ 9662
 577+ 9662 3A D6 88     	ld a,(Columns)
 578+ 9665 47           	ld b,a
 579+ 9666 3A 12 89     	ld a,(Columnas)
 580+ 9669 B8           	cp b
 581+ 966A 20 0D        	jr nz,2f
 582+ 966C
 583+ 966C              ;	La entidad se imprime entera.
 584+ 966C
 585+ 966C 21 8B 97     	ld hl, Indice_entidades_completas
 586+ 966F E6 01        	and 1
 587+ 9671 28 02        	jr z,1F
 588+ 9673
 589+ 9673 23           	inc hl
 590+ 9674 23           	inc hl
 591+ 9675
 592+ 9675 CD 3C 8D     1 call Extrae_address
 593+ 9678 C9           	ret		;	ret
 594+ 9679
 595+ 9679              ;	La entidad no se imprime entera en pantalla.
 596+ 9679
 597+ 9679 3A E9 88     2 ld a,(Cuad_objeto)
 598+ 967C E6 01        	and 1
 599+ 967E 28 17        	jr z,3F
 600+ 9680
 601+ 9680              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 602+ 9680
 603+ 9680 21 8F 97     	ld hl, Indice_entidades_incompletas_izquierda
 604+ 9683 3A D6 88     4 ld a,(Columns)
 605+ 9686 E6 01        	and 1
 606+ 9688 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 607+ 968A
 608+ 968A 23           	inc hl
 609+ 968B 23           	inc hl
 610+ 968C
 611+ 968C 3A 12 89     	ld a,(Columnas)
 612+ 968F E6 01        	and 1
 613+ 9691 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 614+ 9693
 615+ 9693 23           	inc hl
 616+ 9694 23           	inc hl
 617+ 9695
 618+ 9695 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 619+ 9697
 620+ 9697 21 95 97     3 ld hl, Indice_entidades_incompletas_derecha
 621+ 969A 18 E7        	jr 4B
 622+ 969C
 623+ 969C              ; --------------------------------------------------------------------------------------------------------------------
 624+ 969C              ;
 625+ 969C              ;	Prepara_draw
 626+ 969C              ;
 627+ 969C              ;	Es una rutina de carga.
 628+ 969C              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 629+ 969C              ;
 630+ 969C              ;	FUNCIONAMIENTO:
 631+ 969C              ;
 632+ 969C              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 633+ 969C              ;	- LD (Posicion_actual) del objeto en [HL].
 634+ 969C              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 635+ 969C              ;
 636+ 969C              ;	DESTRUYE:
 637+ 969C              ;
 638+ 969C              ;	Logicamente, BC,HL y E quedan destruidos.
 639+ 969C
 640+ 969C 21 D5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 641+ 969F 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 642+ 96A0 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 643+ 96A1 4E           	ld c,(hl)
 644+ 96A2 2A D7 88     	ld hl,(Posicion_actual)
 645+ 96A5 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 646+ 96A7 C9           	ret
 647+ 96A8
 648+ 96A8              ;----------------------------------------------------------------------------------------------------------------
 649+ 96A8              ;
 650+ 96A8              ;	5/08/22
 651+ 96A8              ;
 652+ 96A8              ;   NextScan.
 653+ 96A8              ;
 654+ 96A8              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 655+ 96A8              ;
 656+ 96A8              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 657+ 96A8              ;
 658+ 96A8              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 659+ 96A8              ;
 660+ 96A8              ;       DESTRUIDOS: AF y HL !!!
 661+ 96A8              ;
 662+ 96A8              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 663+ 96A8              ;
 664+ 96A8
 665+ 96A8 24           NextScan inc h          ; Incrementamos el scanline.
 666+ 96A9 7C               ld a,h
 667+ 96AA E6 07            and 7
 668+ 96AC C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 669+ 96AD
 670+ 96AD 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 671+ 96AE C6 20            add a,$20           ; Vamos a comprobarlo...
 672+ 96B0 6F               ld l,a
 673+ 96B1 D8               ret c               ; Salimos si se produce el cambio de tercio.
 674+ 96B2
 675+ 96B2 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 676+ 96B3 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 677+ 96B5 67               ld h,a
 678+ 96B6 C9               ret
 679+ 96B7
 680+ 96B7              ;----------------------------------------------------------------------------------------------------------------
 681+ 96B7              ;
 682+ 96B7              ;	5/08/22
 683+ 96B7              ;
 684+ 96B7              ;   PreviousScan.
 685+ 96B7              ;
 686+ 96B7              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 687+ 96B7              ;
 688+ 96B7              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 689+ 96B7              ;
 690+ 96B7              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 691+ 96B7              ;
 692+ 96B7              ;       DESTRUIDOS: AF y HL !!!
 693+ 96B7              ;
 694+ 96B7              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 695+ 96B7              ;
 696+ 96B7
 697+ 96B7 7C           PreviousScan ld a,h
 698+ 96B8 25               dec h               ; Dec H.
 699+ 96B9 E6 07            and 7
 700+ 96BB C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 701+ 96BC
 702+ 96BC 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 703+ 96BD D6 20            sub $20             ; Vamos a comprobarlo...
 704+ 96BF 6F               ld l,a
 705+ 96C0 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 706+ 96C1
 707+ 96C1 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 708+ 96C2 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 709+ 96C4 67               ld h,a
 710+ 96C5 C9               ret
 711+ 96C6
 712+ 96C6              ; -----------------------------------------------------------------------------------
 713+ 96C6              ;
 714+ 96C6              ;	31/7/23
 715+ 96C6              ;
 716+ 96C6              ;	Rutina principal de pintado de entidades.
 717+ 96C6              ;	Extrae la foto del frame, (entidades).
 718+ 96C6
 719+ 96C6              Extrae_foto_entidades
 720+ 96C6
 721+ 96C6 21 01 70     	ld hl,Album_de_fotos+1
 722+ 96C9 7E           	ld a,(hl)
 723+ 96CA A7           	and a
 724+ 96CB C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 725+ 96CC
 726+ 96CC              ;	No hay datos, (entidades para pintar en este frame).
 727+ 96CC
 728+ 96CC 3A 26 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 729+ 96CF A7           	and a
 730+ 96D0 C8           	ret z
 731+ 96D1
 732+ 96D1              ; -----------------------------------
 733+ 96D1
 734+ 96D1 ED 73 2B 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 735+ 96D5 31 00 70     	ld sp,Album_de_fotos
 736+ 96D8
 737+ 96D8 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 738+ 96DA E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 739+ 96DB D1           	pop de																	; Dirección de la rutina de impresión en DE.
 740+ 96DC
 741+ 96DC ED 73 2D 89  	ld (Stack_2),sp
 742+ 96E0 ED 7B 2B 89  	ld sp,(Stack)
 743+ 96E4
 744+ 96E4              ; Fabrica la llamada a la correspondiente rutina de impresión.
 745+ 96E4
 746+ 96E4 3E CD        	ld a,$cd
 747+ 96E6 32 EE 96     	ld (Imprime),a
 748+ 96E9 EB           	ex de,hl
 749+ 96EA 22 EF 96     	ld (Imprime+1),hl
 750+ 96ED EB           	ex de,hl
 751+ 96EE
 752+ 96EE              ; Ejecuta la llamada:	CALL $xx,xx
 753+ 96EE
 754+ 96EE 00 00 00     Imprime db 0,0,0
 755+ 96F1
 756+ 96F1 ED 73 2B 89  	ld (Stack),sp
 757+ 96F5
 758+ 96F5 3A 26 89     	ld a,(Numero_de_malotes)
 759+ 96F8 3D           	dec a
 760+ 96F9 28 09        	jr z,1F
 761+ 96FB 32 26 89      	ld (Numero_de_malotes),a
 762+ 96FE
 763+ 96FE ED 7B 2D 89  	ld sp,(Stack_2)
 764+ 9702 18 D4        	jr 2B
 765+ 9704
 766+ 9704 AF           1 xor a
 767+ 9705 32 2D 89     	ld (Stack_2),a
 768+ 9708
 769+ 9708 C9           	ret
 770+ 9709
 771+ 9709              ; -----------------------------------------------------------------------------------
 772+ 9709              ;
 773+ 9709              ;	28/2/23
 774+ 9709              ;
 775+ 9709              ;	Pinta los disparos generados.
 776+ 9709
 777+ 9709              Extrae_foto_disparos
 778+ 9709
 779+ 9709 21 57 70     	ld hl,Album_de_fotos_disparos+1
 780+ 970C 7E               ld a,(hl)
 781+ 970D A7               and a
 782+ 970E C8               ret z
 783+ 970F
 784+ 970F 3A 3A 89     	ld a,(Numero_de_disparotes)
 785+ 9712 A7           	and a
 786+ 9713 C8           	ret z
 787+ 9714 ED 73 2B 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 788+ 9718 31 56 70     	ld sp,Album_de_fotos_disparos
 789+ 971B
 790+ 971B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 791+ 971D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 792+ 971E D1           	pop de																	; Dirección de la rutina de impresión en DE.
 793+ 971F
 794+ 971F ED 73 2D 89  	ld (Stack_2),sp
 795+ 9723 ED 7B 2B 89  	ld sp,(Stack)
 796+ 9727
 797+ 9727              ; Fabrica la llamada a la correspondiente rutina de impresión.
 798+ 9727
 799+ 9727 3E CD        	ld a,$cd
 800+ 9729 32 31 97     	ld (Imprime2),a
 801+ 972C EB           	ex de,hl
 802+ 972D 22 32 97     	ld (Imprime2+1),hl
 803+ 9730 EB           	ex de,hl
 804+ 9731
 805+ 9731              ; Ejecuta la llamada:	CALL $xx,xx
 806+ 9731
 807+ 9731 00 00 00     Imprime2 db 0,0,0
 808+ 9734
 809+ 9734 3A 3A 89     	ld a,(Numero_de_disparotes)
 810+ 9737 3D           	dec a
 811+ 9738 28 09        	jr z,1F
 812+ 973A 32 3A 89      	ld (Numero_de_disparotes),a
 813+ 973D
 814+ 973D ED 7B 2D 89  	ld sp,(Stack_2)
 815+ 9741 18 D8        	jr 2B
 816+ 9743
 817+ 9743 AF           1 xor a
 818+ 9744 32 2D 89     	ld (Stack_2),a
 819+ 9747 C9           	ret
 820+ 9748
 821+ 9748              ; -----------------------------------------------------------------------------------
 822+ 9748              ;
 823+ 9748              ;	4/9/23
 824+ 9748              ;
 825+ 9748              ;	Rutina principal de pintado de Amadeus.
 826+ 9748              ;	Extrae fotos de Album_de_fotos_Amadeus.
 827+ 9748
 828+ 9748 21 AC 70     Extrae_foto_Amadeus	ld hl,Album_de_fotos_Amadeus
 829+ 974B 7E           	ld a,(hl)
 830+ 974C A7           	and a
 831+ 974D C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 832+ 974E
 833+ 974E 3A 26 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 834+ 9751 A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 835+ 9752 C8           	ret z
 836+ 9753
 837+ 9753              ; -----------------------------------
 838+ 9753
 839+ 9753 ED 73 2B 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 840+ 9757 31 AC 70     	ld sp,Album_de_fotos_Amadeus
 841+ 975A
 842+ 975A FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 843+ 975C E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 844+ 975D D1           	pop de																	; Dirección de la rutina de impresión en DE.
 845+ 975E
 846+ 975E ED 73 2D 89  	ld (Stack_2),sp
 847+ 9762 ED 7B 2B 89  	ld sp,(Stack)
 848+ 9766
 849+ 9766              ; Fabrica la llamada a la correspondiente rutina de impresión.
 850+ 9766
 851+ 9766 3E CD        	ld a,$cd
 852+ 9768 32 70 97     	ld (Imprime_Amadeus),a
 853+ 976B EB           	ex de,hl
 854+ 976C 22 71 97     	ld (Imprime_Amadeus+1),hl
 855+ 976F EB           	ex de,hl
 856+ 9770
 857+ 9770              ; Ejecuta la llamada:	CALL $xx,xx
 858+ 9770
 859+ 9770 00 00 00     Imprime_Amadeus db 0,0,0
 860+ 9773
 861+ 9773 ED 73 2B 89  	ld (Stack),sp
 862+ 9777
 863+ 9777 3A 26 89     	ld a,(Numero_de_malotes)
 864+ 977A 3D           	dec a
 865+ 977B 28 09        	jr z,1F
 866+ 977D 32 26 89      	ld (Numero_de_malotes),a
 867+ 9780
 868+ 9780 ED 7B 2D 89  	ld sp,(Stack_2)
 869+ 9784 18 D4        	jr 2B
 870+ 9786
 871+ 9786 AF           1 xor a
 872+ 9787 32 2D 89     	ld (Stack_2),a
 873+ 978A
 874+ 978A C9           	ret
# file closed: Draw_XOR.asm
1849  978B              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 978B              ;   índices de Rutinas de impresión.
   2+ 978B
   3+ 978B 9B 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 978D C8 97            defw Pinta_Amadeus_3x2
   5+ 978F
   6+ 978F 1E 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 9791 BE 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 9793 72 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 9795
  10+ 9795 48 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 9797 4C 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 9799 00 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 979B
  14+ 979B
  15+ 979B              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 979B              ;
  17+ 979B              ;   12/12/22
  18+ 979B              ;
  19+ 979B              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 979B              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 979B              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 979B              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 979B              ;
  24+ 979B              ;   Modifica: DE y HL.
  25+ 979B
  26+ 979B ED 73 2B 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 979F FD F9        	ld sp,iy
  28+ 97A1 06 10            ld b,16
  29+ 97A3 D1           1 pop de
  30+ 97A4 7B               ld a,e
  31+ 97A5 AE               xor (hl)
  32+ 97A6 77           	ld (hl),a
  33+ 97A7 23           	inc hl
  34+ 97A8 7A               ld a,d
  35+ 97A9 AE               xor (hl)
  36+ 97AA 77           	ld (hl),a
  37+ 97AB 2B           	dec hl
  38+ 97AC 24           	inc h
  39+ 97AD 7C               ld a,h
  40+ 97AE E6 07            and 7
  41+ 97B0 20 0A            jr nz,2F
  42+ 97B2 7D               ld a,l
  43+ 97B3 C6 20            add a,$20
  44+ 97B5 6F               ld l,a
  45+ 97B6 38 04            jr c,2F
  46+ 97B8 7C               ld a,h
  47+ 97B9 D6 08            sub 8
  48+ 97BB 67               ld h,a
  49+ 97BC 7C           2 ld a,h
  50+ 97BD FE 58            cp $58
  51+ 97BF 28 02            jr z,3F
  52+ 97C1 10 E0            djnz 1B
  53+ 97C3 ED 7B 2B 89  3 ld sp,(Stack)
  54+ 97C7 C9           	ret
  55+ 97C8
  56+ 97C8 ED 73 2B 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97CC FD F9        	ld sp,iy
  58+ 97CE 06 08            ld b,8
  59+ 97D0 D1           1 pop de
  60+ 97D1 7B               ld a,e
  61+ 97D2 AE               xor (hl)
  62+ 97D3 77           	ld (hl),a
  63+ 97D4 23           	inc hl
  64+ 97D5 7A               ld a,d
  65+ 97D6 AE               xor (hl)
  66+ 97D7 77           	ld (hl),a
  67+ 97D8 23           	inc hl
  68+ 97D9 D1           	pop de
  69+ 97DA 7B               ld a,e
  70+ 97DB AE               xor (hl)
  71+ 97DC 77           	ld (hl),a
  72+ 97DD 2B           	dec hl
  73+ 97DE 2B           	dec hl
  74+ 97DF 24           	inc h
  75+ 97E0 7C               ld a,h
  76+ 97E1 E6 07            and 7
  77+ 97E3 20 0A            jr nz,2F
  78+ 97E5 7D               ld a,l
  79+ 97E6 C6 20            add a,$20
  80+ 97E8 6F               ld l,a
  81+ 97E9 38 04            jr c,2F
  82+ 97EB 7C               ld a,h
  83+ 97EC D6 08            sub 8
  84+ 97EE 67               ld h,a
  85+ 97EF 7C           2 ld a,h
  86+ 97F0 FE 58            cp $58
  87+ 97F2 28 25            jr z,4F
  88+ 97F4 7A               ld a,d
  89+ 97F5 AE               xor (hl)
  90+ 97F6 77               ld (hl),a
  91+ 97F7 D1           	pop de
  92+ 97F8 23           	inc hl
  93+ 97F9 7B               ld a,e
  94+ 97FA AE               xor (hl)
  95+ 97FB 77           	ld (hl),a
  96+ 97FC 23           	inc hl
  97+ 97FD 7A               ld a,d
  98+ 97FE AE               xor (hl)
  99+ 97FF 77           	ld (hl),a
 100+ 9800 2B           	dec hl
 101+ 9801 2B           	dec hl
 102+ 9802 24           	inc h
 103+ 9803 7C               ld a,h
 104+ 9804 E6 07            and 7
 105+ 9806 20 0A            jr nz,3F
 106+ 9808 7D               ld a,l
 107+ 9809 C6 20            add a,$20
 108+ 980B 6F               ld l,a
 109+ 980C 38 04            jr c,3F
 110+ 980E 7C               ld a,h
 111+ 980F D6 08            sub 8
 112+ 9811 67               ld h,a
 113+ 9812 7C           3 ld a,h
 114+ 9813 FE 58            cp $58
 115+ 9815 28 02            jr z,4F
 116+ 9817 10 B7            djnz 1B
 117+ 9819 ED 7B 2B 89  4 ld sp,(Stack)
 118+ 981D C9           	ret
 119+ 981E
 120+ 981E              ; ---------------------------------------------------
 121+ 981E
 122+ 981E ED 73 2B 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9822 FD F9        	ld sp,iy
 124+ 9824
 125+ 9824              ; >>>
 126+ 9824
 127+ 9824 06 10            ld b,16
 128+ 9826 D1           1 pop de
 129+ 9827 7A           	ld a,d
 130+ 9828 AE           	xor (hl)
 131+ 9829 77           	ld (hl),a
 132+ 982A 24           	inc h
 133+ 982B 7C               ld a,h
 134+ 982C E6 07            and 7
 135+ 982E 20 0C            jr nz,2F
 136+ 9830 7D               ld a,l
 137+ 9831 C6 20            add a,$20
 138+ 9833 6F               ld l,a
 139+ 9834 38 06            jr c,2F
 140+ 9836 7C               ld a,h
 141+ 9837 D6 08            sub 8
 142+ 9839 67               ld h,a
 143+ 983A 18 00            jr 2F
 144+ 983C 7C           2 ld a,h
 145+ 983D FE 58            cp $58
 146+ 983F 28 02            jr z,3F
 147+ 9841 10 E3            djnz 1B
 148+ 9843 ED 7B 2B 89  3 ld sp,(Stack)
 149+ 9847 C9           	ret
 150+ 9848
 151+ 9848 ED 73 2B 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 984C FD F9        	ld sp,iy
 153+ 984E
 154+ 984E              ; >>>
 155+ 984E
 156+ 984E 06 10            ld b,16
 157+ 9850 D1           1 pop de
 158+ 9851 7B           	ld a,e
 159+ 9852 AE           	xor (hl)
 160+ 9853 77           	ld (hl),a
 161+ 9854 24           	inc h
 162+ 9855 7C               ld a,h
 163+ 9856 E6 07            and 7
 164+ 9858 20 0C            jr nz,2F
 165+ 985A 7D               ld a,l
 166+ 985B C6 20            add a,$20
 167+ 985D 6F               ld l,a
 168+ 985E 38 06            jr c,2F
 169+ 9860 7C               ld a,h
 170+ 9861 D6 08            sub 8
 171+ 9863 67               ld h,a
 172+ 9864 18 00            jr 2F
 173+ 9866 7C           2 ld a,h
 174+ 9867 FE 58            cp $58
 175+ 9869 28 02            jr z,3F
 176+ 986B 10 E3            djnz 1B
 177+ 986D ED 7B 2B 89  3 ld sp,(Stack)
 178+ 9871 C9           	ret
 179+ 9872
 180+ 9872              ; ---------------------------------------------------
 181+ 9872
 182+ 9872 ED 73 2B 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9876 FD F9        	ld sp,iy
 184+ 9878 06 08            ld b,8
 185+ 987A D1           1 pop de
 186+ 987B 7A           	ld a,d
 187+ 987C AE           	xor (hl)
 188+ 987D 77           	ld (hl),a
 189+ 987E 23           	inc hl
 190+ 987F D1           	pop de
 191+ 9880 7B           	ld a,e
 192+ 9881 AE           	xor (hl)
 193+ 9882 77           	ld (hl),a
 194+ 9883 2B           	dec hl
 195+ 9884 24            	inc h
 196+ 9885 7C               ld a,h
 197+ 9886 E6 07            and 7
 198+ 9888 20 0A            jr nz,2F
 199+ 988A 7D               ld a,l
 200+ 988B C6 20            add a,$20
 201+ 988D 6F               ld l,a
 202+ 988E 38 04            jr c,2F
 203+ 9890 7C               ld a,h
 204+ 9891 D6 08            sub 8
 205+ 9893 67               ld h,a
 206+ 9894 7C           2 ld a,h
 207+ 9895 FE 58            cp $58
 208+ 9897 28 20            jr z,4F
 209+ 9899 D1               pop de
 210+ 989A 7B           	ld a,e
 211+ 989B AE           	xor (hl)
 212+ 989C 77           	ld (hl),a
 213+ 989D 23           	inc hl
 214+ 989E 7A           	ld a,d
 215+ 989F AE           	xor (hl)
 216+ 98A0 77           	ld (hl),a
 217+ 98A1 2B           	dec hl
 218+ 98A2 24           	inc h
 219+ 98A3 7C               ld a,h
 220+ 98A4 E6 07            and 7
 221+ 98A6 20 0A            jr nz,3F
 222+ 98A8 7D               ld a,l
 223+ 98A9 C6 20            add a,$20
 224+ 98AB 6F               ld l,a
 225+ 98AC 38 04            jr c,3F
 226+ 98AE 7C               ld a,h
 227+ 98AF D6 08            sub 8
 228+ 98B1 67               ld h,a
 229+ 98B2 7C           3 ld a,h
 230+ 98B3 FE 58            cp $58
 231+ 98B5 28 02            jr z,4F
 232+ 98B7 10 C1            djnz 1B
 233+ 98B9 ED 7B 2B 89  4 ld sp,(Stack)
 234+ 98BD C9           	ret
 235+ 98BE
 236+ 98BE ED 73 2B 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98C2 FD F9        	ld sp,iy
 238+ 98C4 06 08            ld b,8
 239+ 98C6 D1           1 pop de
 240+ 98C7 D1           	pop de
 241+ 98C8 7B           	ld a,e
 242+ 98C9 AE           	xor (hl)
 243+ 98CA 77           	ld (hl),a
 244+ 98CB 24            	inc h
 245+ 98CC 7C               ld a,h
 246+ 98CD E6 07            and 7
 247+ 98CF 20 0A            jr nz,2F
 248+ 98D1 7D               ld a,l
 249+ 98D2 C6 20            add a,$20
 250+ 98D4 6F               ld l,a
 251+ 98D5 38 04            jr c,2F
 252+ 98D7 7C               ld a,h
 253+ 98D8 D6 08            sub 8
 254+ 98DA 67               ld h,a
 255+ 98DB 7C           2 ld a,h
 256+ 98DC FE 58            cp $58
 257+ 98DE 28 1B            jr z,4F
 258+ 98E0 D1               pop de
 259+ 98E1 7A           	ld a,d
 260+ 98E2 AE           	xor (hl)
 261+ 98E3 77           	ld (hl),a
 262+ 98E4 24           	inc h
 263+ 98E5 7C               ld a,h
 264+ 98E6 E6 07            and 7
 265+ 98E8 20 0A            jr nz,3F
 266+ 98EA 7D               ld a,l
 267+ 98EB C6 20            add a,$20
 268+ 98ED 6F               ld l,a
 269+ 98EE 38 04            jr c,3F
 270+ 98F0 7C               ld a,h
 271+ 98F1 D6 08            sub 8
 272+ 98F3 67               ld h,a
 273+ 98F4 7C           3 ld a,h
 274+ 98F5 FE 58            cp $58
 275+ 98F7 28 02            jr z,4F
 276+ 98F9 10 CB            djnz 1B
 277+ 98FB ED 7B 2B 89  4 ld sp,(Stack)
 278+ 98FF C9           	ret
 279+ 9900
 280+ 9900 ED 73 2B 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9904 FD F9        	ld sp,iy
 282+ 9906 06 08            ld b,8
 283+ 9908 D1           1 pop de
 284+ 9909 7B           	ld a,e
 285+ 990A AE           	xor (hl)
 286+ 990B 77           	ld (hl),a
 287+ 990C 23           	inc hl
 288+ 990D 7A           	ld a,d
 289+ 990E AE           	xor (hl)
 290+ 990F 77           	ld (hl),a
 291+ 9910 2B           	dec hl
 292+ 9911 24             	inc h
 293+ 9912 7C               ld a,h
 294+ 9913 E6 07            and 7
 295+ 9915 20 0A            jr nz,2F
 296+ 9917 7D               ld a,l
 297+ 9918 C6 20            add a,$20
 298+ 991A 6F               ld l,a
 299+ 991B 38 04            jr c,2F
 300+ 991D 7C               ld a,h
 301+ 991E D6 08            sub 8
 302+ 9920 67               ld h,a
 303+ 9921 7C           2 ld a,h
 304+ 9922 FE 58            cp $58
 305+ 9924 28 21            jr z,4F
 306+ 9926 D1               pop de
 307+ 9927 7A           	ld a,d
 308+ 9928 AE           	xor (hl)
 309+ 9929 77           	ld (hl),a
 310+ 992A 23           	inc hl
 311+ 992B D1               pop de
 312+ 992C 7B           	ld a,e
 313+ 992D AE           	xor (hl)
 314+ 992E 77           	ld (hl),a
 315+ 992F 2B           	dec hl
 316+ 9930 24           	inc h
 317+ 9931 7C               ld a,h
 318+ 9932 E6 07            and 7
 319+ 9934 20 0A            jr nz,3F
 320+ 9936 7D               ld a,l
 321+ 9937 C6 20            add a,$20
 322+ 9939 6F               ld l,a
 323+ 993A 38 04            jr c,3F
 324+ 993C 7C               ld a,h
 325+ 993D D6 08            sub 8
 326+ 993F 67               ld h,a
 327+ 9940 7C           3 ld a,h
 328+ 9941 FE 58            cp $58
 329+ 9943 28 02            jr z,4F
 330+ 9945 10 C1            djnz 1B
 331+ 9947 ED 7B 2B 89  4 ld sp,(Stack)
 332+ 994B C9           	ret
 333+ 994C
 334+ 994C ED 73 2B 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 9950 FD F9        	ld sp,iy
 336+ 9952 06 08            ld b,8
 337+ 9954 D1           1 pop de
 338+ 9955 7B           	ld a,e
 339+ 9956 AE           	xor (hl)
 340+ 9957 77           	ld (hl),a
 341+ 9958 24            	inc h
 342+ 9959 7C               ld a,h
 343+ 995A E6 07            and 7
 344+ 995C 20 0A            jr nz,2F
 345+ 995E 7D               ld a,l
 346+ 995F C6 20            add a,$20
 347+ 9961 6F               ld l,a
 348+ 9962 38 04            jr c,2F
 349+ 9964 7C               ld a,h
 350+ 9965 D6 08            sub 8
 351+ 9967 67               ld h,a
 352+ 9968 7C           2 ld a,h
 353+ 9969 FE 58            cp $58
 354+ 996B 28 1C            jr z,4F
 355+ 996D D1               pop de
 356+ 996E 7A           	ld a,d
 357+ 996F AE           	xor (hl)
 358+ 9970 77           	ld (hl),a
 359+ 9971 24           	inc h
 360+ 9972 7C               ld a,h
 361+ 9973 E6 07            and 7
 362+ 9975 20 0A            jr nz,3F
 363+ 9977 7D               ld a,l
 364+ 9978 C6 20            add a,$20
 365+ 997A 6F               ld l,a
 366+ 997B 38 04            jr c,3F
 367+ 997D 7C               ld a,h
 368+ 997E D6 08            sub 8
 369+ 9980 67               ld h,a
 370+ 9981 7C           3 ld a,h
 371+ 9982 FE 58            cp $58
 372+ 9984 28 03            jr z,4F
 373+ 9986 D1               pop de
 374+ 9987 10 CB            djnz 1B
 375+ 9989 ED 7B 2B 89  4 ld sp,(Stack)
 376+ 998D C9           	ret
 377+ 998E
 378+ 998E              ; ---------------------------------------------------
 379+ 998E              ;
 380+ 998E              ;   27/02/23
 381+ 998E              ;
 382+ 998E              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 998E              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 998E              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 998E
 386+ 998E ED 73 2B 89  Pinta_Disparo ld (Stack),sp
 387+ 9992 FD F9            ld sp,iy
 388+ 9994 06 03            ld b,3
 389+ 9996 D1           1 pop de
 390+ 9997 7B               ld a,e
 391+ 9998 AE               xor (hl)
 392+ 9999 77               ld (hl),a
 393+ 999A 23               inc hl
 394+ 999B 7A               ld a,d
 395+ 999C AE               xor (hl)
 396+ 999D 77               ld (hl),a
 397+ 999E 2B               dec hl
 398+ 999F
 399+ 999F 24               inc h
 400+ 99A0 7C               ld a,h
 401+ 99A1 E6 07            and 7
 402+ 99A3 20 0A            jr nz,2F
 403+ 99A5 7D               ld a,l
 404+ 99A6 C6 20            add a,$20
 405+ 99A8 6F               ld l,a
 406+ 99A9 38 04            jr c,2F
 407+ 99AB 7C               ld a,h
 408+ 99AC D6 08            sub 8
 409+ 99AE 67               ld h,a
 410+ 99AF 7C           2 ld a,h
 411+ 99B0 FE 58            cp $58
 412+ 99B2 28 02            jr z,3F
 413+ 99B4
 414+ 99B4 10 E0            djnz 1B
 415+ 99B6 ED 7B 2B 89  3 ld sp,(Stack)
 416+ 99BA C9               ret
 417+ 99BB
# file closed: Rutinas_de_impresion_sprites.asm
1850  99BB              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99BB              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99BB              ;
   3+ 99BB              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99BB              ;
   5+ 99BB              ; *****************************************************************************************************************************************************************************************
   6+ 99BB              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99BB
   8+ 99BB 7C           calcula_tercio ld a,h
   9+ 99BC E6 18        	and $18
  10+ 99BE CB 2F        	sra a
  11+ 99C0 CB 2F        	sra a
  12+ 99C2 CB 2F        	sra a
  13+ 99C4 C9           	ret
  14+ 99C5
# file closed: calcula_tercio.asm
1851  99C5              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99C5              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99C5              ;
   3+ 99C5              ;
   4+ 99C5              ;	CLS.
   5+ 99C5              ;
   6+ 99C5              ;	Limpia la pantalla y define sus atributos.
   7+ 99C5              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99C5              ;
   9+ 99C5              ;	COLORES: 0 ..... NEGRO
  10+ 99C5              ;    		 1 ..... AZUL
  11+ 99C5              ; 			 2 ..... ROJO
  12+ 99C5              ;			 3 ..... MAGENTA
  13+ 99C5              ; 			 4 ..... VERDE
  14+ 99C5              ; 			 5 ..... CIAN
  15+ 99C5              ;			 6 ..... AMARILLO
  16+ 99C5              ; 			 7 ..... BLANCO
  17+ 99C5              ;
  18+ 99C5              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99C5              ;
  20+ 99C5              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99C5
  22+ 99C5
  23+ 99C5 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99C8 11 01 40     	LD DE,$4001
  25+ 99CB 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99CE 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99D0 ED B0        	LDIR
  28+ 99D2 01 FF 02     	LD BC,767
  29+ 99D5 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99D6 ED B0        	LDIR
  31+ 99D8 C9           	ret
  32+ 99D9
# file closed: Cls.asm
1852  99D9              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99D9              ; ******************************************************************************************************************************************************************************************
   2+ 99D9              ;
   3+ 99D9              ;   20/05/23
   4+ 99D9              ;
   5+ 99D9              ;	Recompone_posicion_inicio
   6+ 99D9              ;
   7+ 99D9              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99D9              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99D9              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99D9              ;	_ a una u otra rutina.
  11+ 99D9
  12+ 99D9              Recompone_posicion_inicio
  13+ 99D9
  14+ 99D9 2A E7 88     	ld hl,(Posicion_inicio)
  15+ 99DC 7D           	ld a,l
  16+ 99DD E6 1F        	and $1f
  17+ 99DF 28 16        	jr z,1F
  18+ 99E1
  19+ 99E1 FE 1F        	cp $1f
  20+ 99E3 28 0D        	jr z,3F
  21+ 99E5
  22+ 99E5 21 16 89     	ld hl,Ctrl_2
  23+ 99E8 CB C6        	set 0,(hl)
  24+ 99EA 2A D9 88     	ld hl,(Puntero_objeto)
  25+ 99ED 22 1B 89     	ld (Repone_puntero_objeto),hl
  26+ 99F0 18 08        	jr 2F
  27+ 99F2
  28+ 99F2 CD A2 9B     3 call Mov_left
  29+ 99F5 18 03        	jr 2F
  30+ 99F7
  31+ 99F7 CD 7F 9A     1 call Mov_right
  32+ 99FA 21 00 F0     2 ld hl,Sprite_vacio
  33+ 99FD 22 D9 88     	ld (Puntero_objeto),hl
  34+ 9A00 C9           	ret
  35+ 9A01
  36+ 9A01              ; ******************************************************************************************************************************************************************************************
  37+ 9A01              ;
  38+ 9A01              ;   27/05/23
  39+ 9A01              ;
  40+ 9A01              ;	Mov_down
  41+ 9A01              ;
  42+ 9A01              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A01              ;
  44+ 9A01              ;
  45+ 9A01              Mov_down
  46+ 9A01
  47+ 9A01 CD 6D 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A04              ;																	; _ repone (Puntero_objeto).
  49+ 9A04 21 05 89     	ld hl,Ctrl_0
  50+ 9A07 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A09              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A09              ; 																	; _ en el caso de que no lo haya.
  53+ 9A09 3A ED 88     	ld a,(Vel_down)
  54+ 9A0C 47           	ld b,a
  55+ 9A0D 2A D7 88         ld hl,(Posicion_actual)
  56+ 9A10 CD BB 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A13 E6 02        	and 2
  58+ 9A15 28 19        	jr z,1F
  59+ 9A17
  60+ 9A17              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A17              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A17
  63+ 9A17 7C           	ld a,h
  64+ 9A18 FE 57        	cp $57
  65+ 9A1A 20 14        	jr nz,1F
  66+ 9A1C
  67+ 9A1C 7D           	ld a,l
  68+ 9A1D C6 20        	add $20
  69+ 9A1F 30 0F        	jr nc,1F
  70+ 9A21
  71+ 9A21              ; ------------------------------
  72+ 9A21              ;
  73+ 9A21              ;	30/12/15
  74+ 9A21
  75+ 9A21              ;	call Reaparece_arriba
  76+ 9A21 CD 2F 9D     	call Reinicio
  77+ 9A24
  78+ 9A24              ;	Homos generado todos los movimientos posibles de esta "Entidad_guía".
  79+ 9A24              ;	Recordamos que ´solo las "Entidades_guía" ejecutan las rutinas de movimiento.
  80+ 9A24
  81+ 9A24 3A 39 89     	ld a,(Ctrl_3)
  82+ 9A27 CB 8F        	res 1,a
  83+ 9A29 CB D7        	set 2,a													; Indica que una Entidad_guía a generado todos sus "movimientos masticados".
  84+ 9A2B 32 39 89     	ld (Ctrl_3),a
  85+ 9A2E
  86+ 9A2E 18 08        	jr 3F
  87+ 9A30              ;															; El bit2 de (Ctrl_3) evita que la rutina [Main], (cuando gestione entidades), coloque_
  88+ 9A30              ;															; _a la siguiente entidad como "Entidad_guía".
  89+ 9A30              ; ------------------------------
  90+ 9A30
  91+ 9A30 CD A8 96     1 call NextScan
  92+ 9A33 22 D7 88     	ld (Posicion_actual),hl
  93+ 9A36 10 D8            djnz 2B
  94+ 9A38 CD 55 9D     3 call Genera_coordenadas
  95+ 9A3B C9           	ret
  96+ 9A3C
  97+ 9A3C              ; ******************************************************************************************************************************************************************************************
  98+ 9A3C              ;
  99+ 9A3C              ;   27/05/23
 100+ 9A3C              ;
 101+ 9A3C              ;	Mov_up
 102+ 9A3C              ;
 103+ 9A3C              ; 	Mueve el Sprite hacia arriba.
 104+ 9A3C              ;
 105+ 9A3C              ;
 106+ 9A3C              Mov_up
 107+ 9A3C
 108+ 9A3C CD 6D 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
 109+ 9A3F              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
 110+ 9A3F 21 05 89     	ld hl,Ctrl_0
 111+ 9A42 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 112+ 9A44              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 113+ 9A44              ; 																		; _ en el caso de que no lo haya.
 114+ 9A44 3A EC 88     	ld a,(Vel_up)
 115+ 9A47 47           	ld b,a
 116+ 9A48 2A D7 88     	ld hl,(Posicion_actual)
 117+ 9A4B CD BB 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 118+ 9A4E A7           	and a
 119+ 9A4F 20 10        	jr nz,1F
 120+ 9A51
 121+ 9A51              ; Nos encontramos en el 1er tercio de pantalla.
 122+ 9A51              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 123+ 9A51
 124+ 9A51 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 125+ 9A52 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 126+ 9A54 20 0B            jr nz,1F
 127+ 9A56 7D               ld a,l
 128+ 9A57 D6 20            sub $20
 129+ 9A59 30 06            jr nc,1F
 130+ 9A5B 25               dec h
 131+ 9A5C
 132+ 9A5C              ; -----------------------------
 133+ 9A5C CD 10 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 134+ 9A5F              ;	call Reinicio
 135+ 9A5F              ; -----------------------------
 136+ 9A5F
 137+ 9A5F 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 138+ 9A61 CD B7 96     1 call PreviousScan
 139+ 9A64 22 D7 88     	ld (Posicion_actual),hl
 140+ 9A67 10 E2            djnz 3B
 141+ 9A69 CD 55 9D     2 call Genera_coordenadas
 142+ 9A6C C9           	ret
 143+ 9A6D
 144+ 9A6D              ; -----------------------------
 145+ 9A6D              ;
 146+ 9A6D              ;	27/5/23
 147+ 9A6D              ;
 148+ 9A6D              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 149+ 9A6D              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 150+ 9A6D              ;
 151+ 9A6D              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 152+ 9A6D              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 153+ 9A6D              ;
 154+ 9A6D              ;	Modifica: A y (Puntero_objeto).
 155+ 9A6D
 156+ 9A6D 3A 16 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 157+ 9A70 CB 47        	bit 0,a
 158+ 9A72 C8           	ret z
 159+ 9A73 CB 87        	res 0,a
 160+ 9A75 32 16 89     	ld (Ctrl_2),a
 161+ 9A78 2A 1B 89     	ld hl,(Repone_puntero_objeto)
 162+ 9A7B 22 D9 88     	ld (Puntero_objeto),hl
 163+ 9A7E C9           	ret
 164+ 9A7F
 165+ 9A7F              ; ******************************************************************************************************************************************************************************************
 166+ 9A7F              ;
 167+ 9A7F              ;	19/10/22
 168+ 9A7F              ;
 169+ 9A7F              ;	Mov_right.
 170+ 9A7F              ;
 171+ 9A7F              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 172+ 9A7F              ;
 173+ 9A7F
 174+ 9A7F 3A 05 89     Mov_right ld a,(Ctrl_0)
 175+ 9A82 CB 77        	bit 6,a
 176+ 9A84 28 0B        	jr z,10F 														; Amadeus o Entidad ???
 177+ 9A86
 178+ 9A86 CD BE 9C     	call Stop_Amadeus_right											; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 179+ 9A89 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 180+ 9A8A
 181+ 9A8A 21 05 89     	ld hl,Ctrl_0
 182+ 9A8D CB E6        	set 4,(hl)
 183+ 9A8F 18 52        	jr 8F
 184+ 9A91
 185+ 9A91 21 05 89     10 ld hl,Ctrl_0
 186+ 9A94 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 187+ 9A96              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 188+ 9A96              ; 																	; _ en el caso de que no lo haya.
 189+ 9A96 3A DB 88     	ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 190+ 9A99 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 191+ 9A9B 20 46        	jr nz,8F
 192+ 9A9D
 193+ 9A9D 3A DD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 194+ 9AA0 A7           	and a 															; _[3] para continuar con el DESPLZ.
 195+ 9AA1 28 40        	jr z,8F
 196+ 9AA3
 197+ 9AA3              ; ---------- ---------- ----------
 198+ 9AA3              ;
 199+ 9AA3              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 200+ 9AA3
 201+ 9AA3 3A EB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 202+ 9AA6 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 203+ 9AA8 28 11        	jr z,1F
 204+ 9AAA 38 06        	jr c,6F
 205+ 9AAC FE 04        	cp 4
 206+ 9AAE 28 14        	jr z,7F
 207+ 9AB0 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 208+ 9AB2
 209+ 9AB2              ; ---------- ---------- ----------
 210+ 9AB2              ;
 211+ 9AB2              ; Perfiles de velocidad
 212+ 9AB2              ;
 213+ 9AB2
 214+ 9AB2 3A DD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 215+ 9AB5 FE FE        	cp $fe
 216+ 9AB7 20 2A        	jr nz,8F
 217+ 9AB9 18 10        	jr 3F
 218+ 9ABB 3A DD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 219+ 9ABE FE FD        	cp $fd
 220+ 9AC0 20 21        	jr nz,8F
 221+ 9AC2 18 07        	jr 3F
 222+ 9AC4 3A DD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 223+ 9AC7 FE FB        	cp $fb
 224+ 9AC9 20 18        	jr nz,8F
 225+ 9ACB
 226+ 9ACB              ; ---------- ---------- ----------
 227+ 9ACB
 228+ 9ACB              3
 229+ 9ACB CD FE 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 230+ 9ACE              ;	call Reinicio
 231+ 9ACE
 232+ 9ACE              ; ---------- ---------- ----------
 233+ 9ACE              ;
 234+ 9ACE              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 235+ 9ACE
 236+ 9ACE 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 237+ 9AD0 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 238+ 9AD1 CD EA 9A     	call DESPLZ_DER
 239+ 9AD4 C1           	pop bc
 240+ 9AD5 10 F9        	djnz 5B
 241+ 9AD7 2A D7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 242+ 9ADA 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 243+ 9ADB 22 D7 88     	ld (Posicion_actual),hl
 244+ 9ADE CD 55 9D     	call Genera_coordenadas
 245+ 9AE1 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 246+ 9AE3
 247+ 9AE3              ; ---------- ---------- ----------
 248+ 9AE3
 249+ 9AE3 2A D7 88     8 ld hl,(Posicion_actual)
 250+ 9AE6 CD EA 9A     	call DESPLZ_DER
 251+ 9AE9 C9           2 ret
 252+ 9AEA
 253+ 9AEA              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 254+ 9AEA              ;
 255+ 9AEA              ;	22/9/22
 256+ 9AEA              ;
 257+ 9AEA
 258+ 9AEA CD F9 9A     DESPLZ_DER call Desplaza_derecha
 259+ 9AED CD 45 9B         call modifica_parametros_1er_DESPLZ_2
 260+ 9AF0 CD 6E 9B         call Ciclo_completo
 261+ 9AF3 21 05 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 262+ 9AF6 CB FE        	set 7,(hl)
 263+ 9AF8 C9           	ret
 264+ 9AF9
 265+ 9AF9              ; ******************************************************************************************************************************************************************************************
 266+ 9AF9              ;	15/02/23
 267+ 9AF9              ;
 268+ 9AF9
 269+ 9AF9 3A EB 88     Desplaza_derecha ld a,(Vel_right)
 270+ 9AFC 47           	ld b,a
 271+ 9AFD 2A E3 88     	ld hl,(Puntero_DESPLZ_der)
 272+ 9B00 23           1 inc hl
 273+ 9B01 23           	inc hl
 274+ 9B02 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 275+ 9B04 22 E3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 276+ 9B07 CD 3C 8D     	call Extrae_address
 277+ 9B0A 22 D9 88     	ld (Puntero_objeto),hl
 278+ 9B0D
 279+ 9B0D              ; Modifica (Puntero_DESPLZ_izq).
 280+ 9B0D
 281+ 9B0D              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 282+ 9B0D              ; Cuántos movimientos hemos hecho ??
 283+ 9B0D              ; DE contiene (Puntero_DESPLZ_der).
 284+ 9B0D
 285+ 9B0D 2A DF 88     7 ld hl,(Indice_Sprite_der)
 286+ 9B10 EB           	ex de,hl
 287+ 9B11 A7           	and a
 288+ 9B12 ED 52        	sbc hl,de
 289+ 9B14 CB 3D        	srl l
 290+ 9B16 3E 08        6 ld a,8
 291+ 9B18 95           	sub l
 292+ 9B19 30 1E        	jr nc,3F
 293+ 9B1B
 294+ 9B1B              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 295+ 9B1B              ; B="0".
 296+ 9B1B
 297+ 9B1B 04           4 inc b
 298+ 9B1C 3C           	inc a
 299+ 9B1D 20 FC        	jr nz,4B
 300+ 9B1F 78           	ld a,b
 301+ 9B20 08           	ex af,af
 302+ 9B21 2A DF 88     	ld hl,(Indice_Sprite_der)
 303+ 9B24 23           5 inc hl
 304+ 9B25 23           	inc hl
 305+ 9B26 10 FC        	djnz 5B
 306+ 9B28 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 307+ 9B2B CD 3C 8D     	call Extrae_address
 308+ 9B2E 22 D9 88     	ld (Puntero_objeto),hl
 309+ 9B31
 310+ 9B31              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 311+ 9B31              ; _(Posicion_actual).
 312+ 9B31
 313+ 9B31 21 D7 88     	ld hl,Posicion_actual
 314+ 9B34 34           	inc (hl)
 315+ 9B35 08               ex af,af
 316+ 9B36 6F           	ld l,a
 317+ 9B37 18 DD        	jr 6B
 318+ 9B39
 319+ 9B39              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 320+ 9B39
 321+ 9B39 47           3 ld b,a
 322+ 9B3A 2A E1 88     	ld hl,(Indice_Sprite_izq)
 323+ 9B3D 23           2 inc hl
 324+ 9B3E 23           	inc hl
 325+ 9B3F 10 FC        	djnz 2B
 326+ 9B41 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
 327+ 9B44 C9           8 ret
 328+ 9B45
 329+ 9B45              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 330+ 9B45              ;
 331+ 9B45              ;	24/7/22
 332+ 9B45              ;
 333+ 9B45              ;	modifica_parametros_1er_DESPLZ_2
 334+ 9B45              ;
 335+ 9B45              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 336+ 9B45              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 337+ 9B45              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 338+ 9B45
 339+ 9B45 3A DD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 340+ 9B48 A7           	and a
 341+ 9B49 20 1F        	jr nz,1F
 342+ 9B4B D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 343+ 9B4D 32 DD 88         ld (CTRL_DESPLZ),a
 344+ 9B50
 345+ 9B50 21 D6 88     	ld hl,Columns
 346+ 9B53 34           	inc (hl)
 347+ 9B54 3A E9 88     	ld a,(Cuad_objeto)
 348+ 9B57 E6 01        	and 1
 349+ 9B59 28 0F        	jr z,1F
 350+ 9B5B 2A D7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 351+ 9B5E 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 352+ 9B5F 22 D7 88     	ld (Posicion_actual),hl
 353+ 9B62 CD 55 9D     	call Genera_coordenadas
 354+ 9B65 CD CA 9C     	call Inc_CTRL_DESPLZ
 355+ 9B68 18 03        	jr 2F
 356+ 9B6A CD CA 9C     1 call Inc_CTRL_DESPLZ
 357+ 9B6D C9           2 ret
 358+ 9B6E
 359+ 9B6E              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 360+ 9B6E              ;
 361+ 9B6E              ;	24/7/22
 362+ 9B6E              ;
 363+ 9B6E              ;	Ciclo_completo.
 364+ 9B6E              ;
 365+ 9B6E              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 366+ 9B6E              ;
 367+ 9B6E              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 368+ 9B6E              ; 	Decrementamos (Columns).
 369+ 9B6E              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 370+ 9B6E              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 371+ 9B6E
 372+ 9B6E
 373+ 9B6E 3A DD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 374+ 9B71 FE FF        	cp $ff
 375+ 9B73 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 376+ 9B75 E6 F0        	and $f0
 377+ 9B77 20 28        	jr nz,3F
 378+ 9B79
 379+ 9B79              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 380+ 9B79
 381+ 9B79 3A DD 88     	ld a,(CTRL_DESPLZ)
 382+ 9B7C 47           	ld b,a
 383+ 9B7D 3E F8        	ld a,$f8
 384+ 9B7F 80           	add b
 385+ 9B80 32 DD 88     	ld (CTRL_DESPLZ),a
 386+ 9B83 18 1C        	jr 3F
 387+ 9B85 21 D6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 388+ 9B88 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 389+ 9B89 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 390+ 9B8A 32 DD 88     	ld (CTRL_DESPLZ),a
 391+ 9B8D 3A E9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 392+ 9B90 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 393+ 9B92 20 0A        	jr nz,2F
 394+ 9B94 2A D7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 395+ 9B97 23           	inc hl
 396+ 9B98 22 D7 88     	ld (Posicion_actual),hl
 397+ 9B9B CD 55 9D     	call Genera_coordenadas
 398+ 9B9E
 399+ 9B9E              ; Inicia el puntero de Sprite.
 400+ 9B9E
 401+ 9B9E CD 53 8D     2 call Inicia_puntero_objeto_der
 402+ 9BA1 C9           3 ret
 403+ 9BA2
 404+ 9BA2              ; ******************************************************************************************************************************************************************************************
 405+ 9BA2              ;
 406+ 9BA2              ;	15/02/23
 407+ 9BA2              ;
 408+ 9BA2              ;	Mov_left.
 409+ 9BA2              ;
 410+ 9BA2              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 411+ 9BA2              ;
 412+ 9BA2              Mov_left
 413+ 9BA2
 414+ 9BA2 21 05 89     	ld hl,Ctrl_0
 415+ 9BA5 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 416+ 9BA7              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 417+ 9BA7              ; 																	; _ en el caso de que no lo haya.
 418+ 9BA7 3A 05 89     	ld a,(Ctrl_0)
 419+ 9BAA CB 77        	bit 6,a
 420+ 9BAC 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 421+ 9BAE
 422+ 9BAE CD C4 9C     	call Stop_Amadeus_left
 423+ 9BB1 C8           	ret z
 424+ 9BB2 20 4A        	jr nz,8F
 425+ 9BB4
 426+ 9BB4 3A DB 88     11 ld a,(Coordenada_X)
 427+ 9BB7 A7           	and a
 428+ 9BB8 20 44        	jr nz,8F
 429+ 9BBA
 430+ 9BBA 3A DD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 431+ 9BBD A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 432+ 9BBE 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 433+ 9BC0
 434+ 9BC0              ; ---------- ---------- ----------
 435+ 9BC0
 436+ 9BC0 3A EA 88     	ld a,(Vel_left)
 437+ 9BC3 FE 02        	cp 2
 438+ 9BC5 28 0F        	jr z,1F
 439+ 9BC7 38 04        	jr c,6F
 440+ 9BC9 FE 04        	cp 4
 441+ 9BCB 28 12        	jr z,7F
 442+ 9BCD
 443+ 9BCD              ; ---------- ---------- ----------
 444+ 9BCD
 445+ 9BCD 3A DD 88     6 ld a,(CTRL_DESPLZ)
 446+ 9BD0 FE F8        	cp $f8
 447+ 9BD2 20 2A        	jr nz,8F
 448+ 9BD4 18 10        	jr 4F
 449+ 9BD6 3A DD 88     1 ld a,(CTRL_DESPLZ)
 450+ 9BD9 FE F9        	cp $f9
 451+ 9BDB 20 21        	jr nz,8F
 452+ 9BDD 18 07        	jr 4F
 453+ 9BDF 3A DD 88     7 ld a,(CTRL_DESPLZ)
 454+ 9BE2 FE FB        	cp $fb
 455+ 9BE4 20 18        	jr nz,8F
 456+ 9BE6
 457+ 9BE6              ; ---------- ---------- ----------
 458+ 9BE6
 459+ 9BE6              4
 460+ 9BE6 CD EC 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 461+ 9BE9              ;	call Reinicio
 462+ 9BE9
 463+ 9BE9              ; ---------- ---------- ----------
 464+ 9BE9
 465+ 9BE9 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 466+ 9BEB C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 467+ 9BEC
 468+ 9BEC              ;	ld hl,(Indice_Sprite_izq)
 469+ 9BEC              ;	ld (Puntero_DESPLZ_izq),hl
 470+ 9BEC
 471+ 9BEC CD 05 9C     	call DESPLZ_IZQ
 472+ 9BEF C1           	pop bc
 473+ 9BF0 10 F9        	djnz 5B
 474+ 9BF2 2A D7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 475+ 9BF5 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 476+ 9BF6 22 D7 88     	ld (Posicion_actual),hl
 477+ 9BF9 CD 55 9D     	call Genera_coordenadas
 478+ 9BFC 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 479+ 9BFE
 480+ 9BFE              ; ---------- ---------- ----------
 481+ 9BFE
 482+ 9BFE              ; Movemos, no hay recolocación.
 483+ 9BFE
 484+ 9BFE 2A D7 88     8 ld hl,(Posicion_actual)
 485+ 9C01 CD 05 9C     	call DESPLZ_IZQ
 486+ 9C04 C9           2 ret
 487+ 9C05
 488+ 9C05              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 489+ 9C05              ;
 490+ 9C05              ;	22/9/22
 491+ 9C05
 492+ 9C05              DESPLZ_IZQ
 493+ 9C05
 494+ 9C05 CD 14 9C     	call Desplaza_izquierda
 495+ 9C08 CD 60 9C         call modifica_parametros_1er_DESPLZ
 496+ 9C0B CD 88 9C     	call Ciclo_completo_2
 497+ 9C0E 21 05 89     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 498+ 9C11 CB BE        	res 7,(hl)
 499+ 9C13 C9           	ret
 500+ 9C14
 501+ 9C14              Desplaza_izquierda
 502+ 9C14
 503+ 9C14 3A EA 88     	ld a,(Vel_left)
 504+ 9C17 47           	ld b,a
 505+ 9C18 2A E5 88     	ld hl,(Puntero_DESPLZ_izq)
 506+ 9C1B 23           1 inc hl
 507+ 9C1C 23           	inc hl
 508+ 9C1D 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 509+ 9C1F 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
 510+ 9C22 CD 3C 8D     	call Extrae_address
 511+ 9C25 22 D9 88     	ld (Puntero_objeto),hl
 512+ 9C28
 513+ 9C28              ; Modifica (Puntero_DESPLZ_der).
 514+ 9C28
 515+ 9C28              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 516+ 9C28              ; Cuántos movimientos hemos hecho ??
 517+ 9C28              ; DE contiene (Puntero_DESPLZ_izq).
 518+ 9C28
 519+ 9C28 2A E1 88     7 ld hl,(Indice_Sprite_izq)
 520+ 9C2B EB           	ex de,hl
 521+ 9C2C A7           	and a
 522+ 9C2D ED 52        	sbc hl,de
 523+ 9C2F CB 3D        	srl l
 524+ 9C31 3E 08        6 ld a,8
 525+ 9C33 95           	sub l
 526+ 9C34 30 1E        	jr nc,3F
 527+ 9C36
 528+ 9C36              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 529+ 9C36              ; B="0".
 530+ 9C36
 531+ 9C36 04           4 inc b
 532+ 9C37 3C           	inc a
 533+ 9C38 20 FC        	jr nz,4B
 534+ 9C3A 78           	ld a,b
 535+ 9C3B 08           	ex af,af
 536+ 9C3C 2A E1 88     	ld hl,(Indice_Sprite_izq)
 537+ 9C3F 23           5 inc hl
 538+ 9C40 23           	inc hl
 539+ 9C41 10 FC        	djnz 5B
 540+ 9C43 22 E5 88     	ld (Puntero_DESPLZ_izq),hl
 541+ 9C46 CD 3C 8D     	call Extrae_address
 542+ 9C49 22 D9 88     	ld (Puntero_objeto),hl
 543+ 9C4C
 544+ 9C4C              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 545+ 9C4C              ; _(Posicion_actual).
 546+ 9C4C
 547+ 9C4C 21 D7 88     	ld hl,Posicion_actual
 548+ 9C4F 35           	dec (hl)
 549+ 9C50 08           	ex af,af
 550+ 9C51 6F           	ld l,a
 551+ 9C52 18 DD        	jr 6B
 552+ 9C54
 553+ 9C54              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 554+ 9C54
 555+ 9C54 47           3 ld b,a
 556+ 9C55 2A DF 88     	ld hl,(Indice_Sprite_der)
 557+ 9C58 23           2 inc hl
 558+ 9C59 23           	inc hl
 559+ 9C5A 10 FC        	djnz 2B
 560+ 9C5C 22 E3 88     	ld (Puntero_DESPLZ_der),hl
 561+ 9C5F C9           8 ret
 562+ 9C60
 563+ 9C60              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 564+ 9C60              ;
 565+ 9C60              ;	modifica_parametros_1er_DESPLZ
 566+ 9C60              ;
 567+ 9C60              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 568+ 9C60              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 569+ 9C60              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 570+ 9C60
 571+ 9C60 3A DD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 572+ 9C63 A7           	and a
 573+ 9C64 20 1E        	jr nz,1F
 574+ 9C66 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 575+ 9C67 32 DD 88         ld (CTRL_DESPLZ),a
 576+ 9C6A 21 D6 88     	ld hl,Columns
 577+ 9C6D 34           	inc (hl)
 578+ 9C6E 3A E9 88     	ld a,(Cuad_objeto)
 579+ 9C71 E6 01        	and 1
 580+ 9C73 20 0F        	jr nz,1F
 581+ 9C75 2A D7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 582+ 9C78 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 583+ 9C79 22 D7 88     	ld (Posicion_actual),hl
 584+ 9C7C CD 55 9D     	call Genera_coordenadas
 585+ 9C7F CD DB 9C     	call Dec_CTRL_DESPLZ
 586+ 9C82 18 03        	jr 2F
 587+ 9C84 CD DB 9C     1 call Dec_CTRL_DESPLZ
 588+ 9C87 C9           2 ret
 589+ 9C88
 590+ 9C88              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 591+ 9C88
 592+ 9C88 3A DD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 593+ 9C8B FE F7        	cp $f7
 594+ 9C8D 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 595+ 9C8F 30 2C        	jr nc,3F
 596+ 9C91
 597+ 9C91              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 598+ 9C91
 599+ 9C91 06 00        	ld b,0
 600+ 9C93 04           4 inc b
 601+ 9C94 3C           	inc a
 602+ 9C95 FE F7        	cp $f7
 603+ 9C97 20 FA        	jr nz,4B
 604+ 9C99 3E FF        	ld a,$ff
 605+ 9C9B 90           	sub b
 606+ 9C9C 32 DD 88     	ld (CTRL_DESPLZ),a
 607+ 9C9F 18 1C        	jr 3F
 608+ 9CA1
 609+ 9CA1              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 610+ 9CA1
 611+ 9CA1 21 D6 88     1 ld hl,Columns
 612+ 9CA4 35           	dec (hl)
 613+ 9CA5 AF           	xor a
 614+ 9CA6 32 DD 88     	ld (CTRL_DESPLZ),a
 615+ 9CA9 3A E9 88     	ld a,(Cuad_objeto)
 616+ 9CAC E6 01        	and 1
 617+ 9CAE 28 0A        	jr z,2F
 618+ 9CB0 2A D7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 619+ 9CB3 2B           	dec hl
 620+ 9CB4 22 D7 88     	ld (Posicion_actual),hl
 621+ 9CB7 CD 55 9D     	call Genera_coordenadas
 622+ 9CBA
 623+ 9CBA              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 624+ 9CBA
 625+ 9CBA CD 66 8D     2 call Inicia_puntero_objeto_izq
 626+ 9CBD C9           3 ret
 627+ 9CBE
 628+ 9CBE              ; ---------- ---------- ---------- ---------- ---------- ----------
 629+ 9CBE              ;
 630+ 9CBE              ;	19/10/22
 631+ 9CBE              ;
 632+ 9CBE              ;	(cp 29) para un Amadeus de 3 Columns.
 633+ 9CBE              ;	(cp 30)   ""  ""    ""     2 Columns.
 634+ 9CBE
 635+ 9CBE 3A DB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 636+ 9CC1 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 637+ 9CC3 C9           	ret
 638+ 9CC4
 639+ 9CC4              ; ---------- ---------- ---------- ---------- ---------- ----------
 640+ 9CC4              ;
 641+ 9CC4              ;	19/10/22
 642+ 9CC4              ;
 643+ 9CC4              ;	(cp 2) para un Amadeus de 3 Columns.
 644+ 9CC4              ;	(cp 1)   ""  ""    ""     2 Columns.
 645+ 9CC4
 646+ 9CC4 3A DB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 647+ 9CC7 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 648+ 9CC9 C9           	ret
 649+ 9CCA
 650+ 9CCA              ; ---------- ---------- ---------- ---------- ---------- ----------
 651+ 9CCA              ;
 652+ 9CCA              ;	24/7/22
 653+ 9CCA              ;
 654+ 9CCA              ;	Inc_CTRL_DESPLZ
 655+ 9CCA              ;
 656+ 9CCA              ;
 657+ 9CCA              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 658+ 9CCA
 659+ 9CCA 21 DD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 660+ 9CCD 3A EB 88     	ld a,(Vel_right)
 661+ 9CD0 A7           	and a
 662+ 9CD1 28 06        	jr z,1F
 663+ 9CD3 47           	ld b,a
 664+ 9CD4 34           3 inc (hl)
 665+ 9CD5 10 FD        	djnz 3B
 666+ 9CD7 18 01        	jr 2F
 667+ 9CD9 34           1 inc (hl)
 668+ 9CDA C9           2 ret
 669+ 9CDB
 670+ 9CDB              ; ---------- ---------- ---------- ---------- ---------- ----------
 671+ 9CDB              ;
 672+ 9CDB              ;	5/2/23
 673+ 9CDB              ;
 674+ 9CDB              ;	Dec_CTRL_DESPLZ
 675+ 9CDB              ;
 676+ 9CDB              ;
 677+ 9CDB              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 678+ 9CDB
 679+ 9CDB 21 DD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 680+ 9CDE 3A EA 88     	ld a,(Vel_left)
 681+ 9CE1 A7           	and a
 682+ 9CE2 28 06        	jr z,1F
 683+ 9CE4 47           	ld b,a
 684+ 9CE5 35           3 dec (hl)
 685+ 9CE6 10 FD        	djnz 3B
 686+ 9CE8 18 01        	jr 2F
 687+ 9CEA 35           1 dec (hl)
 688+ 9CEB C9           2 ret
 689+ 9CEC
 690+ 9CEC              ; ---------- ---------- ---------- ---------- ---------- ----------
 691+ 9CEC
 692+ 9CEC 2A D7 88     Reaparece_derecha ld hl,(Posicion_actual)
 693+ 9CEF 01 1F 00     	ld bc,31
 694+ 9CF2 A7           	and a
 695+ 9CF3 ED 4A        	adc hl,bc
 696+ 9CF5 22 D7 88     	ld (Posicion_actual),hl
 697+ 9CF8 21 05 89     	ld hl,Ctrl_0														; $xxx1
 698+ 9CFB CB C6        	set 0,(hl)
 699+ 9CFD C9           	ret
 700+ 9CFE
 701+ 9CFE              ; ---------- ---------- ---------- ---------- ---------- ----------
 702+ 9CFE
 703+ 9CFE 2A D7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 704+ 9D01 01 1F 00     	ld bc,31
 705+ 9D04 A7           	and a
 706+ 9D05 ED 42        	sbc hl,bc
 707+ 9D07 22 D7 88     	ld (Posicion_actual),hl 											; $xx1x
 708+ 9D0A 21 05 89     	ld hl,Ctrl_0
 709+ 9D0D CB CE        	set 1,(hl)
 710+ 9D0F C9           	ret
 711+ 9D10
 712+ 9D10              ; ---------- ---------- ---------- ---------- ---------- ----------
 713+ 9D10
 714+ 9D10 24           Reaparece_abajo inc h
 715+ 9D11 01 E0 17     	ld bc,$17e0
 716+ 9D14 A7           	and a
 717+ 9D15 ED 4A        	adc hl,bc
 718+ 9D17 22 D7 88     	ld (Posicion_actual),hl
 719+ 9D1A 21 05 89     	ld hl,Ctrl_0
 720+ 9D1D CB D6        	set 2,(hl)
 721+ 9D1F C9           	ret
 722+ 9D20
 723+ 9D20              ; ---------- ---------- ---------- ---------- ---------- ----------
 724+ 9D20
 725+ 9D20 01 E0 17     Reaparece_arriba ld bc,$17e0
 726+ 9D23 A7           	and a
 727+ 9D24 ED 42        	sbc hl,bc
 728+ 9D26 22 D7 88     	ld (Posicion_actual),hl
 729+ 9D29 21 05 89     	ld hl,Ctrl_0
 730+ 9D2C CB DE        	set 3,(hl)
 731+ 9D2E C9           	ret
 732+ 9D2F
 733+ 9D2F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 734+ 9D2F              ;
 735+ 9D2F              ;	15/07/23
 736+ 9D2F
 737+ 9D2F              Reinicio
 738+ 9D2F
 739+ 9D2F              ; Vamos a reiniciar los punteros y variables de movimiento.
 740+ 9D2F
 741+ 9D2F AF           	xor a
 742+ 9D30 21 0A 89     	ld hl,Puntero_indice_mov_bucle
 743+ 9D33 CD 51 9D     	call Limpia_contenido_hl
 744+ 9D36
 745+ 9D36 21 D7 88     	ld hl,Posicion_actual
 746+ 9D39 CD 51 9D     	call Limpia_contenido_hl
 747+ 9D3C
 748+ 9D3C CD 8D A0     	call Inicializa_Puntero_indice_mov
 749+ 9D3F CD 11 A0     	call Inicia_Puntero_mov
 750+ 9D42
 751+ 9D42 21 0C 89     	ld hl,Incrementa_puntero
 752+ 9D45 06 05        	ld b,5
 753+ 9D47 77           1 ld (hl),a
 754+ 9D48 23           	inc hl
 755+ 9D49 10 FC        	djnz 1B
 756+ 9D4B
 757+ 9D4B 21 16 89     	ld hl,Ctrl_2
 758+ 9D4E CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 759+ 9D50
 760+ 9D50 C9           	ret
 761+ 9D51
 762+ 9D51 77           Limpia_contenido_hl	ld (hl),a
 763+ 9D52 23           	inc hl
 764+ 9D53 77           	ld (hl),a
 765+ 9D54 C9           	ret
 766+ 9D55
 767+ 9D55
# file closed: Direcciones.asm
1853  9D55              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D55              ; ------------------------------------------------------------------------
   2+ 9D55              ;
   3+ 9D55              ;	02/04/23
   4+ 9D55              ;
   5+ 9D55              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D55              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D55              ;
   8+ 9D55              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D55              ;
  10+ 9D55              ;	Modifica: A,BC y DE.
  11+ 9D55
  12+ 9D55 C5           Genera_coordenadas push bc
  13+ 9D56 E5           	push hl
  14+ 9D57 D5           	push de
  15+ 9D58
  16+ 9D58 2A D7 88     	ld hl,(Posicion_actual)
  17+ 9D5B
  18+ 9D5B 7D           	ld a,l
  19+ 9D5C E6 1F        	and $1f
  20+ 9D5E 32 DB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D61
  22+ 9D61 CD BB 99     	call calcula_tercio
  23+ 9D64 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D65
  25+ 9D65 1E 00        	ld e,0
  26+ 9D67 7D           	ld a,l
  27+ 9D68 E6 E0        	and $e0
  28+ 9D6A 28 01        	jr z,1F
  29+ 9D6C 04           	inc b
  30+ 9D6D
  31+ 9D6D 04           1 inc b
  32+ 9D6E 05           	dec b
  33+ 9D6F 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D71              ;														; _ , salimos.
  35+ 9D71 1C           3 inc e
  36+ 9D72 D6 20        	sub 32
  37+ 9D74 20 FB        	jr nz,3B
  38+ 9D76 10 F5        	djnz 1B
  39+ 9D78
  40+ 9D78 7B           2 ld a,e
  41+ 9D79 32 DC 88     	ld (Coordenada_y),a
  42+ 9D7C
  43+ 9D7C D1           	pop de
  44+ 9D7D E1           	pop hl
  45+ 9D7E C1           	pop bc
  46+ 9D7F
  47+ 9D7F C9           	ret
  48+ 9D80
  49+ 9D80              ; ------------------------------------------------------------------------
  50+ 9D80              ;	28/05/23
  51+ 9D80              ;
  52+ 9D80              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D80              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D80              ;
  55+ 9D80              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D80              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D80              ;
  58+ 9D80              ;		DE="$120d"
  59+ 9D80              ;
  60+ 9D80              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D80              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D80              ;
  63+ 9D80              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D80
  65+ 9D80              ;	Modifica: A,BC y DE.
  66+ 9D80
  67+ 9D80
  68+ 9D80              Genera_coordenadas_disparo
  69+ 9D80
  70+ 9D80              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D80
  72+ 9D80 7D           	ld a,l
  73+ 9D81 E6 1F        	and $1f
  74+ 9D83 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D84 CD BB 99     	call calcula_tercio
  76+ 9D87 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D88 1E 00        	ld e,0
  78+ 9D8A 7D           	ld a,l
  79+ 9D8B E6 E0        	and $e0
  80+ 9D8D 28 01        	jr z,1F
  81+ 9D8F 04           	inc b
  82+ 9D90 1C           1 inc e
  83+ 9D91 D6 20        	sub 32
  84+ 9D93 20 FB        	jr nz,1B
  85+ 9D95 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D97 C9           	ret
  87+ 9D98
# file closed: Genera_coordenadas.asm
1854  9D98              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D98              ; Relojes y temporizaciones.
   2+ 9D98
   3+ 9D98              ; ------------------------------------------------------
   4+ 9D98              ;
   5+ 9D98              ;	16/7/23
   6+ 9D98              ;
   7+ 9D98              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D98              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D98              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D98              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D98              ;
  12+ 9D98              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D98              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D98
  15+ 9D98              ; Disparo_entidad db 1
  16+ 9D98              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D98              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D98
  19+ 9D98              Habilita_disparos
  20+ 9D98
  21+ 9D98 7E           	ld a,(hl)
  22+ 9D99 A7           	and a
  23+ 9D9A C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D9B
  25+ 9D9B EB           	ex de,hl
  26+ 9D9C
  27+ 9D9C 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D9D C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D9E
  30+ 9D9E              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D9E
  32+ 9D9E 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D9F 7E           	ld a,(hl)
  34+ 9DA0 23           	inc hl
  35+ 9DA1 77           	ld (hl),a
  36+ 9DA2
  37+ 9DA2 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9DA3 3E 01        	ld a,1
  39+ 9DA5 77           	ld (hl),a
  40+ 9DA6 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1855  9DA7              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DA7
   2+ 9DA7
   3+ 9DA7              ;   07/07/23
   4+ 9DA7              ;
   5+ 9DA7              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DA7              ;
   7+ 9DA7              ;   Codificación:
   8+ 9DA7              ;
   9+ 9DA7              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DA7              ;
  11+ 9DA7              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DA7              ;
  13+ 9DA7              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DA7              ;
  15+ 9DA7              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DA7              ;
  17+ 9DA7              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DA7              ;                               ..... %01000010 Vel_up 4
  19+ 9DA7              ;                                               Vel_down 2
  20+ 9DA7              ;                               ..... $42
  21+ 9DA7              ;
  22+ 9DA7              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DA7              ;
  24+ 9DA7              ;                               ..... %01000010 Vel_left 4
  25+ 9DA7              ;                                               Vel_right 2
  26+ 9DA7              ;                               ..... $42
  27+ 9DA7              ;
  28+ 9DA7              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DA7              ;
  30+ 9DA7              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DA7              ;
  32+ 9DA7              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DA7              ;
  34+ 9DA7              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DA7              ;                                     $53
  36+ 9DA7              ;
  37+ 9DA7              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DA7              ;
  39+ 9DA7              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DA7              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DA7              ;
  42+ 9DA7              ;                       Arriba ..... $81
  43+ 9DA7              ;                       Arriba - izquierda ..... $a1
  44+ 9DA7              ;                       Arriba - derecha ..... $91
  45+ 9DA7              ;
  46+ 9DA7              ;                       Abajo ..... $41
  47+ 9DA7              ;                       Abajo - izquierda ..... $61
  48+ 9DA7              ;                       Abajo - derecha ..... $51
  49+ 9DA7              ;
  50+ 9DA7              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DA7              ;
  52+ 9DA7              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DA7              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DA7              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DA7              ;
  56+ 9DA7              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DA7              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DA7              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DA7              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DA7              ;
  61+ 9DA7              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DA7              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DA7              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DA7              ;
  65+ 9DA7              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DA7              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DA7              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DA7              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DA7
  70+ 9DA7              ; ----- ----- ----- ----- -----
  71+ 9DA7
  72+ 9DA7 D3 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DA9 DB 9D            defw F_1
  74+ 9DAB E5 9D            defw F_2
  75+ 9DAD EF 9D            defw Codo_abajo_derecha
  76+ 9DAF 23 9E            defw Derecha_y_subiendo
  77+ 9DB1 2D 9E            defw Derecha_y_subiendo_1
  78+ 9DB3 37 9E            defw F_3
  79+ 9DB5 41 9E            defw F_4
  80+ 9DB7 4B 9E            defw Derecha_y_bajando
  81+ 9DB9 55 9E            defw Derecha_y_bajando_1
  82+ 9DBB 5F 9E            defw Derecha_y_bajando_2
  83+ 9DBD 69 9E            defw Codo_derecha_abajo
  84+ 9DBF 99 9E            defw Codo_abajo_izq.
  85+ 9DC1 CD 9E            defw Izquierda_y_subiendo
  86+ 9DC3 D7 9E            defw Izquierda_y_subiendo_1
  87+ 9DC5 E1 9E            defw F_5
  88+ 9DC7 EB 9E            defw F_6
  89+ 9DC9 F5 9E            defw Izquierda_y_bajando
  90+ 9DCB FF 9E            defw Izquierda_y_bajando_1
  91+ 9DCD 09 9F            defw Izquierda_y_bajando_2
  92+ 9DCF 13 9F            defw Codo_izquierda_abajo
  93+ 9DD1 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DD3
  95+ 9DD3 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DD7 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DDB
  98+ 9DDB 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DDF 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DE3 08 00
 100+ 9DE5 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DE9 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DED 0F FE
 102+ 9DEF
 103+ 9DEF 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DF3 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DF7 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DFB 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DFF 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E03 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E07 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E0B 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E0F 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E13 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E17 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E1B 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E1F 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E23
 117+ 9E23 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E27 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E2B 06 00
 119+ 9E2D
 120+ 9E2D 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E31 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E35 02 00
 122+ 9E37
 123+ 9E37 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E3B 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E3F 04 00
 125+ 9E41 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E45 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E49 08 00
 127+ 9E4B
 128+ 9E4B 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E4F 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E53 02 00
 130+ 9E55
 131+ 9E55 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E59 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E5D 06 00
 133+ 9E5F
 134+ 9E5F 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E63 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E67 06 00
 136+ 9E69
 137+ 9E69              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E69
 139+ 9E69 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E6D 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E71 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E75 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E79 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E7D 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E81 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E85 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E89 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E8D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E91 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E95 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E99
 152+ 9E99 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E9D 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EA1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EA5 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EA9 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EAD 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EB1 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EB5 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EB9 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EBD 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EC1 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EC5 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EC9 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9ECD
 166+ 9ECD 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9ED1 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9ED5 06 00
 168+ 9ED7
 169+ 9ED7 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EDB 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EDF 02 00
 171+ 9EE1
 172+ 9EE1 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EE5 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EE9 04 00
 174+ 9EEB 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EEF 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EF3 08 00
 176+ 9EF5
 177+ 9EF5 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EF9 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EFD 02 00
 179+ 9EFF
 180+ 9EFF 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F03 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F07 06 00
 182+ 9F09
 183+ 9F09 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F0D 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F11 06 00
 185+ 9F13
 186+ 9F13 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F17 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F1B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F1F 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F23 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F27 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F2B 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F2F 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F33 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F37 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F3B 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F3F 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F43
 199+ 9F43              ; ----- ----- ----- ----- -----
 200+ 9F43              ;
 201+ 9F43              ;   28/12/23
 202+ 9F43
 203+ 9F43              Movimiento
 204+ 9F43
 205+ 9F43              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F43
 207+ 9F43 3A 16 89         ld a,(Ctrl_2)
 208+ 9F46 CB 57            bit 2,a
 209+ 9F48 20 1B            jr nz, Desplazamiento_iniciado
 210+ 9F4A
 211+ 9F4A 2A 08 89         ld hl,(Puntero_mov)
 212+ 9F4D 7E               ld a,(hl)
 213+ 9F4E
 214+ 9F4E              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 215+ 9F4E
 216+ 9F4E              Inicia_desplazamiento.
 217+ 9F4E
 218+ 9F4E              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 219+ 9F4E
 220+ 9F4E CD 4E A0         call Ajusta_velocidad_desplazamiento
 221+ 9F51
 222+ 9F51              ; Iniciamos (Repetimos_mov).
 223+ 9F51
 224+ 9F51 7E               ld a,(hl)
 225+ 9F52 E6 0F            and $0f
 226+ 9F54 32 0E 89         ld (Repetimos_desplazamiento),a
 227+ 9F57 32 0F 89         ld (Repetimos_desplazamiento_backup),a
 228+ 9F5A
 229+ 9F5A              ; Iniciamos (Cola_de_desplazamiento).
 230+ 9F5A
 231+ 9F5A 23               inc hl
 232+ 9F5B 7E               ld a,(hl)
 233+ 9F5C 32 11 89         ld (Cola_de_desplazamiento),a
 234+ 9F5F 2B               dec hl
 235+ 9F60
 236+ 9F60 21 16 89         ld hl,Ctrl_2
 237+ 9F63 CB D6            set 2,(hl)
 238+ 9F65
 239+ 9F65              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 240+ 9F65              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 241+ 9F65
 242+ 9F65              Desplazamiento_iniciado
 243+ 9F65
 244+ 9F65 CD 1C A0         call Aplica_desplazamiento
 245+ 9F68
 246+ 9F68              ; Si en el último desplazamiento aplicado hemos aplicado reinicio, salimos del movimiento.
 247+ 9F68
 248+ 9F68 3A 39 89         ld a,(Ctrl_3)
 249+ 9F6B CB 57            bit 2,a
 250+ 9F6D C0               ret nz
 251+ 9F6E
 252+ 9F6E 3A 16 89         ld a,(Ctrl_2)
 253+ 9F71 CB 67            bit 4,a
 254+ 9F73 C0               ret nz                                                      ; Salimos si se ha producido reinicio.
 255+ 9F74
 256+ 9F74 21 0E 89     3 ld hl,Repetimos_desplazamiento
 257+ 9F77 35               dec (hl)
 258+ 9F78 C0               ret nz
 259+ 9F79
 260+ 9F79              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 261+ 9F79              ; Hay que volver a ejecutar este desplazamiento ???.
 262+ 9F79              ; Analiza (Cola_de_desplazamiento).
 263+ 9F79
 264+ 9F79 3A 11 89     Cola ld a,(Cola_de_desplazamiento)
 265+ 9F7C A7               and a
 266+ 9F7D CC 77 A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 267+ 9F80 28 30            jr z,Reinicia_el_movimiento
 268+ 9F82
 269+ 9F82 FE FF            cp $ff
 270+ 9F84 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 271+ 9F86
 272+ 9F86 FE FE            cp $fe
 273+ 9F88 CC F5 9F         call z,Fijamos_bucle
 274+ 9F8B 28 25            jr z,Reinicia_el_movimiento
 275+ 9F8D
 276+ 9F8D FE FD            cp $fd
 277+ 9F8F 20 11            jr nz,1F
 278+ 9F91
 279+ 9F91              ; ---
 280+ 9F91              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 281+ 9F91
 282+ 9F91 3A 16 89         ld a,(Ctrl_2)
 283+ 9F94 CB 5F            bit 3,a
 284+ 9F96 20 1A            jr nz,Reinicia_el_movimiento
 285+ 9F98
 286+ 9F98              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 287+ 9F98
 288+ 9F98 21 16 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 289+ 9F9B CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 290+ 9F9D
 291+ 9F9D CD 06 A0         call Inicia_Repetimos_movimiento
 292+ 9FA0 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 293+ 9FA2              ; ---
 294+ 9FA2
 295+ 9FA2 FE 01        1 cp 1
 296+ 9FA4 CA DF 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 297+ 9FA7
 298+ 9FA7 3D               dec a
 299+ 9FA8 32 11 89         ld (Cola_de_desplazamiento),a
 300+ 9FAB
 301+ 9FAB 3A 0F 89         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 302+ 9FAE 32 0E 89         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 303+ 9FB1              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 304+ 9FB1 C9               ret
 305+ 9FB2
 306+ 9FB2              Reinicia_el_movimiento
 307+ 9FB2
 308+ 9FB2 3A 16 89         ld a,(Ctrl_2)
 309+ 9FB5 CB 5F            bit 3,a
 310+ 9FB7 28 1B            jr z,2F
 311+ 9FB9
 312+ 9FB9              ; (Cola_de_desplazamiento)="254".
 313+ 9FB9
 314+ 9FB9 21 10 89         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9FBC 35               dec (hl)
 316+ 9FBD 20 15            jr nz,2F
 317+ 9FBF
 318+ 9FBF              ; Fin de las repeticiones del último movimiento.
 319+ 9FBF
 320+ 9FBF 21 16 89         ld hl,Ctrl_2
 321+ 9FC2 CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FC4
 323+ 9FC4 2A 08 89         ld hl,(Puntero_mov)
 324+ 9FC7 23               inc hl
 325+ 9FC8 23               inc hl
 326+ 9FC9 23               inc hl
 327+ 9FCA 22 08 89         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FCD              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FCD 7E               ld a,(hl)
 330+ 9FCE 32 11 89         ld (Cola_de_desplazamiento),a
 331+ 9FD1
 332+ 9FD1 C3 79 9F         jp Cola
 333+ 9FD4
 334+ 9FD4 CD 11 A0     2 call Inicia_Puntero_mov
 335+ 9FD7
 336+ 9FD7 21 16 89         ld hl,Ctrl_2
 337+ 9FDA CB 96            res 2,(hl)
 338+ 9FDC
 339+ 9FDC C3 43 9F         jp Movimiento
 340+ 9FDF
 341+ 9FDF              Siguiente_desplazamiento
 342+ 9FDF
 343+ 9FDF              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FDF              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FDF
 346+ 9FDF 21 16 89         ld hl,Ctrl_2
 347+ 9FE2 CB 96            res 2,(hl)
 348+ 9FE4
 349+ 9FE4 2A 08 89         ld hl,(Puntero_mov)
 350+ 9FE7 23               inc hl
 351+ 9FE8 23               inc hl
 352+ 9FE9 22 08 89         ld (Puntero_mov),hl
 353+ 9FEC
 354+ 9FEC 7E               ld a,(hl)
 355+ 9FED A7               and a
 356+ 9FEE CC 77 A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FF1 CA B2 9F         jp z,Reinicia_el_movimiento
 358+ 9FF4
 359+ 9FF4 C9               ret
 360+ 9FF5
 361+ 9FF5              ; Subrutinas -----------------------------------------
 362+ 9FF5              ; ---------- --------- --------- ---------- ----------
 363+ 9FF5              ;
 364+ 9FF5              ;   24/07/23
 365+ 9FF5              ;
 366+ 9FF5              ;   Fijamos_bucle
 367+ 9FF5              ;
 368+ 9FF5              ;
 369+ 9FF5
 370+ 9FF5              Fijamos_bucle
 371+ 9FF5
 372+ 9FF5 3A 0C 89         ld a,(Incrementa_puntero)
 373+ 9FF8 3C               inc a
 374+ 9FF9 32 0D 89         ld (Incrementa_puntero_backup),a
 375+ 9FFC
 376+ 9FFC CD 77 A0         call Incrementa_Puntero_indice_mov
 377+ 9FFF 2A 06 89         ld hl,(Puntero_indice_mov)
 378+ A002 22 0A 89         ld (Puntero_indice_mov_bucle),hl
 379+ A005 C9               ret
 380+ A006
 381+ A006              ; ---------- --------- --------- ---------- ----------
 382+ A006              ;
 383+ A006              ;   07/7/23
 384+ A006              ;
 385+ A006              ;   Inicia_Repetimos_movimiento
 386+ A006              ;
 387+ A006              ;
 388+ A006
 389+ A006              Inicia_Repetimos_movimiento
 390+ A006
 391+ A006              ; Iniciamos (Repetimos_movimiento).
 392+ A006
 393+ A006 DD 2A 08 89      ld ix,(Puntero_mov)
 394+ A00A DD 7E 02         ld a,(ix+2)
 395+ A00D 32 10 89         ld (Repetimos_movimiento),a
 396+ A010
 397+ A010 C9               ret
 398+ A011
 399+ A011              ; ---------- --------- --------- ---------- ----------
 400+ A011              ;
 401+ A011              ;   26/6/23
 402+ A011              ;
 403+ A011              ;   Inicia_Puntero_mov
 404+ A011              ;
 405+ A011              ;
 406+ A011
 407+ A011 2A 06 89     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 408+ A014 5E               ld e,(hl)
 409+ A015 23               inc hl
 410+ A016 56               ld d,(hl)
 411+ A017 EB               ex de,hl
 412+ A018 22 08 89         ld (Puntero_mov),hl
 413+ A01B C9               ret
 414+ A01C
 415+ A01C              ; ---------- --------- --------- ---------- ----------
 416+ A01C              ;
 417+ A01C              ;   27/06/23
 418+ A01C              ;
 419+ A01C              ;   Aplica_movimiento.
 420+ A01C
 421+ A01C              Aplica_desplazamiento
 422+ A01C
 423+ A01C              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 424+ A01C
 425+ A01C 2A 08 89         ld hl, (Puntero_mov)
 426+ A01F
 427+ A01F 7E               ld a,(hl)
 428+ A020 E6 F0            and $f0
 429+ A022 C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 430+ A023
 431+ A023 CB 7E            bit 7,(hl)
 432+ A025 28 03            jr z,1F
 433+ A027 CD 3C 9A         call Mov_up
 434+ A02A 2A 08 89     1 ld hl, (Puntero_mov)
 435+ A02D CB 76            bit 6,(hl)
 436+ A02F 28 09            jr z,2F
 437+ A031 CD 01 9A         call Mov_down
 438+ A034
 439+ A034              ; Se ha aplicado reinicio ???
 440+ A034              ; Si es así, dejamos de aplicar desplazamiento, (RET).
 441+ A034
 442+ A034 3A 39 89         ld a,(Ctrl_3)
 443+ A037 CB 57            bit 2,a
 444+ A039 C0               ret nz
 445+ A03A
 446+ A03A 2A 08 89     2 ld hl, (Puntero_mov)
 447+ A03D CB 6E            bit 5,(hl)
 448+ A03F 28 03            jr z,3F
 449+ A041 CD A2 9B         call Mov_left
 450+ A044 2A 08 89     3 ld hl, (Puntero_mov)
 451+ A047 CB 66            bit 4,(hl)
 452+ A049 C8               ret z
 453+ A04A CD 7F 9A         call Mov_right
 454+ A04D C9               ret
 455+ A04E
 456+ A04E              ; ---------- --------- --------- ---------- ----------
 457+ A04E              ;
 458+ A04E              ;   26/06/23
 459+ A04E              ;
 460+ A04E              ;   Ajusta_velocidad_desplazamiento.
 461+ A04E
 462+ A04E              Ajusta_velocidad_desplazamiento
 463+ A04E
 464+ A04E              ; 1er byte de la cadena de movimiento.
 465+ A04E              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 466+ A04E
 467+ A04E CD 6C A0         call Extrae_nibble_alto
 468+ A051
 469+ A051 32 EC 88         ld (Vel_up),a
 470+ A054 79               ld a,c
 471+ A055 E6 0F            and $0f
 472+ A057 32 ED 88         ld (Vel_down),a
 473+ A05A
 474+ A05A              ; Saltamos al 2º byte de la cadena de movimiento.
 475+ A05A              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 476+ A05A
 477+ A05A 23               inc hl
 478+ A05B CD 6C A0         call Extrae_nibble_alto
 479+ A05E
 480+ A05E 32 EA 88         ld (Vel_left),a
 481+ A061 79               ld a,c
 482+ A062 E6 0F            and $0f
 483+ A064 32 EB 88         ld (Vel_right),a
 484+ A067
 485+ A067              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 486+ A067
 487+ A067 23               inc hl
 488+ A068 22 08 89         ld (Puntero_mov),hl
 489+ A06B C9               ret
 490+ A06C
 491+ A06C 06 04        Extrae_nibble_alto ld b,4
 492+ A06E 7E               ld a,(hl)
 493+ A06F 4F               ld c,a
 494+ A070 E6 F0            and $f0
 495+ A072 CB 3F        1 srl a
 496+ A074 10 FC            djnz 1B
 497+ A076 C9               ret
 498+ A077
 499+ A077              ; ---------- --------- --------- ---------- ----------
 500+ A077              ;
 501+ A077              ;   5/7/23
 502+ A077              ;
 503+ A077              ;   Incrementa_Puntero_indice_mov
 504+ A077
 505+ A077              Incrementa_Puntero_indice_mov
 506+ A077
 507+ A077 21 0C 89         ld hl,Incrementa_puntero
 508+ A07A 34               inc (hl)
 509+ A07B
 510+ A07B 2A 06 89         ld hl,(Puntero_indice_mov)
 511+ A07E 01 02 00         ld bc,2
 512+ A081 A7               and a
 513+ A082 09               add hl,bc
 514+ A083 22 06 89         ld (Puntero_indice_mov),hl
 515+ A086
 516+ A086 7E               ld a,(hl)
 517+ A087 A7               and a
 518+ A088
 519+ A088              ;! STOP. Fin del patrón de movimiento de la entidad.
 520+ A088
 521+ A088              ;    jr z,$
 522+ A088
 523+ A088              ;! Reinicia el Patrón de movimiento.
 524+ A088
 525+ A088 CC 8D A0         call z,Inicializa_Puntero_indice_mov
 526+ A08B
 527+ A08B AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 528+ A08C
 529+ A08C C9               ret
 530+ A08D
 531+ A08D
 532+ A08D              ; ---------- --------- --------- ---------- ----------
 533+ A08D              ;
 534+ A08D              ;   24/07/23
 535+ A08D              ;
 536+ A08D              ;   Inicializa_Puntero_indice_mov
 537+ A08D
 538+ A08D              Inicializa_Puntero_indice_mov
 539+ A08D
 540+ A08D              ; Existe etiqueta de bucle principal???
 541+ A08D
 542+ A08D 2A 0A 89         ld hl,(Puntero_indice_mov_bucle)
 543+ A090 24               inc h
 544+ A091 25               dec h
 545+ A092 28 05            jr z,2F
 546+ A094
 547+ A094 22 06 89         ld (Puntero_indice_mov),hl
 548+ A097 18 14            jr 3F
 549+ A099
 550+ A099              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 551+ A099
 552+ A099 3A 0C 89     2 ld a,(Incrementa_puntero)
 553+ A09C 47               ld b,a
 554+ A09D
 555+ A09D 2A 06 89         ld hl,(Puntero_indice_mov)
 556+ A0A0 2B           1 dec hl
 557+ A0A1 2B               dec hl
 558+ A0A2 10 FC            djnz 1B
 559+ A0A4 22 06 89         ld (Puntero_indice_mov),hl
 560+ A0A7
 561+ A0A7 AF               xor a
 562+ A0A8 32 0C 89         ld (Incrementa_puntero),a
 563+ A0AB 18 06            jr 4F
 564+ A0AD
 565+ A0AD 3A 0D 89     3 ld a,(Incrementa_puntero_backup)
 566+ A0B0 32 0C 89         ld (Incrementa_puntero),a
 567+ A0B3 C9           4 ret
 568+ A0B4
 569+ A0B4
 570+ A0B4
# file closed: Patrones_de_mov.asm
1856  A0B4              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0B4              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0B4              ;
   3+ A0B4              ;	12/12/23
   4+ A0B4              ;
   5+ A0B4              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0B4
   7+ A0B4              ;	ADC HL,SP	LD (addr),SP
   8+ A0B4              ;	ADD HL,SP	LD SP,(addr)
   9+ A0B4              ;	ADD IX,SP	LD SP,nn
  10+ A0B4              ; 	ADD IY,SP	LD SP,HL
  11+ A0B4              ;				LD SP,IX
  12+ A0B4              ;	DEC SP		LD SP,IY
  13+ A0B4
  14+ A0B4              ;	EX (SP),HL
  15+ A0B4              ;	EX (SP),IX
  16+ A0B4              ;	EX (SP),IY
  17+ A0B4
  18+ A0B4              ;	INC SP
  19+ A0B4
  20+ A0B4                  org $7116
  21+ 7116
  22+ 7116              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7116              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7116              ;
  25+ 7116              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7116              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7116              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7116
  29+ 7116              Guarda_foto_registros
  30+ 7116
  31+ 7116              ;   El proceso de "escritura en los álbumes de fotos" no puede verse interrumpido por la rutina FRAME, (di/ei)_
  32+ 7116              ;   _ durante el proceso de escritura.
  33+ 7116
  34+ 7116 F3               di
  35+ 7117
  36+ 7117 ED 73 2B 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  37+ 711B
  38+ 711B              ; En 1er lugar guardaremos las variables de borrado del siguiente cuadro.
  39+ 711B
  40+ 711B 31 F5 88         ld sp,Variables_de_borrado+6
  41+ 711E
  42+ 711E E5               push hl
  43+ 711F DD E5            push ix
  44+ 7121 FD E5            push iy
  45+ 7123
  46+ 7123 31 01 89         ld sp,Puntero_de_impresion+2                  ; Almacenamos el (Puntero_de_impresion) actual de la entidad.
  47+ 7126 DD E5            push ix                                       ; Utilizaremos este dato para generar las coordenadas_X que ocupa la entidad y compararlas_
  48+ 7128              ;                                                 ; _ con las coordenadas_X de Amadeus.
  49+ 7128
  50+ 7128 31 16 71         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  51+ 712B
  52+ 712B E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  53+ 712C DD E5            push ix                                       ; IX contiene el puntero de impresión.
  54+ 712E FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  55+ 7130
  56+ 7130              ; Disparo o entidad?
  57+ 7130
  58+ 7130 3A 1A 89         ld a,(Ctrl_1)
  59+ 7133 CB 47            bit 0,a
  60+ 7135 28 05            jr z,2F
  61+ 7137
  62+ 7137 2A 33 89         ld hl,(Stack_snapshot_disparos)
  63+ 713A 18 0F            jr 4F
  64+ 713C
  65+ 713C              ; No es disparo. Entidad/Amadeus ????
  66+ 713C
  67+ 713C 3A 05 89     2 ld a,(Ctrl_0)
  68+ 713F CB 77            bit 6,a
  69+ 7141 28 05            jr z,7F
  70+ 7143
  71+ 7143              ; Guardamos foto de Amadeus.
  72+ 7143
  73+ 7143 2A 37 89         ld hl,(End_Snapshot_Amadeus)
  74+ 7146 18 03            jr 4F
  75+ 7148
  76+ 7148 2A 31 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  77+ 714B
  78+ 714B 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  79+ 714D
  80+ 714D D1           1 pop de
  81+ 714E 73               ld (hl),e
  82+ 714F 23               inc hl
  83+ 7150 72               ld (hl),d
  84+ 7151 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  85+ 7152 10 F9            djnz 1B
  86+ 7154
  87+ 7154              ; Disparo o entidad ?
  88+ 7154
  89+ 7154 3A 1A 89         ld a,(Ctrl_1)
  90+ 7157 CB 47            bit 0,a
  91+ 7159 28 05            jr z,5F
  92+ 715B
  93+ 715B 22 33 89         ld (Stack_snapshot_disparos),hl
  94+ 715E 18 13            jr 6F
  95+ 7160
  96+ 7160              ; Entidad o Amadeus ?
  97+ 7160
  98+ 7160 3A 05 89     5 ld a,(Ctrl_0)
  99+ 7163 CB 77            bit 6,a
 100+ 7165 28 09            jr z,8F
 101+ 7167
 102+ 7167 22 37 89         ld (End_Snapshot_Amadeus),hl
 103+ 716A ED 7B 2B 89      ld sp,(Stack)
 104+ 716E FB               ei
 105+ 716F C9               ret
 106+ 7170
 107+ 7170 22 31 89     8 ld (Stack_snapshot),hl
 108+ 7173 ED 7B 2B 89  6 ld sp,(Stack)
 109+ 7177
 110+ 7177 FB               ei
 111+ 7178
 112+ 7178 C9               ret
 113+ 7179
 114+ 7179              ; -----------------------------------------------------------------------------
 115+ 7179              ;
 116+ 7179              ;   21/11/23
 117+ 7179
 118+ 7179              Limpia_y_reinicia_Stack_Snapshot
 119+ 7179
 120+ 7179              ;   Limpia Album_de_fotos.
 121+ 7179
 122+ 7179 2A 31 89         ld hl,(Stack_snapshot)
 123+ 717C 7D               ld a,l
 124+ 717D A7               and a
 125+ 717E C8               ret z   ;   Salimos si el álbum está vacío.
 126+ 717F
 127+ 717F 47               ld b,a
 128+ 7180 04               inc b
 129+ 7181
 130+ 7181 36 00        1 ld (hl),0
 131+ 7183 2D               dec l
 132+ 7184 10 FB            djnz 1B
 133+ 7186
 134+ 7186              ;   Reinicializa (Stack_snapshot).
 135+ 7186
 136+ 7186 AF               xor a
 137+ 7187 32 31 89         ld (Stack_snapshot),a
 138+ 718A
 139+ 718A C9               ret
# file closed: Guarda_foto_registros.asm
1857  718B
1858  718B              	SAVESNA "Pruebas.sna", START
1859  718B
1860  718B
1861  718B
1862  718B
# file closed: Banco_de_pruebas.asm
