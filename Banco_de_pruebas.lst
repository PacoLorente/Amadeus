# file opened: Banco_de_Pruebas.asm
   1  0000              ;	25/9/22
   2  0000
   3  0000
   4  0000              	DEVICE ZXSPECTRUM48
   5  0000
   6  0000              	org $a9ff
   7  A9FF
   8  A9FF              ;	Vector de interrupciones.
   9  A9FF
  10  A9FF 01 AA         	defw $aa01											; $9000. Rutina de interrupciones.
  11  AA01
  12  AA01              	org $aa01
  13  AA01
  14  AA01              ; Guardamos registros y SP.
  15  AA01
  16  AA01 ED 73 19 89  	ld (Stack_3),sp
  17  AA05
  18  AA05 08           	ex af,af'
  19  AA06 F5           	push af	;af'
  20  AA07 D9           	exx
  21  AA08 E5           	push hl	;hl'
  22  AA09 D5           	push de	;de'
  23  AA0A C5           	push bc	;bc'
  24  AA0B D9           	exx
  25  AA0C E5           	push hl	;hl
  26  AA0D D5           	push de	;de
  27  AA0E C5           	push bc	;bc
  28  AA0F 08           	ex af,af'
  29  AA10 F5           	push af	;af
  30  AA11 DD E5        	push ix
  31  AA13 FD E5        	push iy
  32  AA15
  33  AA15 CD 5D 8E     	call Frame
  34  AA18              ;	call Pinta_Amadeus
  35  AA18              ;	call Gestiona_Amadeus
  36  AA18
  37  AA18 FD E1        	pop iy
  38  AA1A DD E1        	pop ix
  39  AA1C F1           	pop af
  40  AA1D C1           	pop bc
  41  AA1E D1           	pop de
  42  AA1F E1           	pop hl
  43  AA20 D9           	exx
  44  AA21 C1           	pop bc
  45  AA22 D1           	pop de
  46  AA23 E1           	pop hl
  47  AA24 08           	ex af,af'
  48  AA25 F1           	pop af
  49  AA26 08           	ex af,af'
  50  AA27 D9           	exx
  51  AA28
  52  AA28 ED 7B 19 89  	ld sp,(Stack_3)
  53  AA2C
  54  AA2C FB           	ei
  55  AA2D ED 4D        	reti
  56  AA2F
  57  AA2F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  58  AA2F
  59  AA2F              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
   1+ AA2F              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ AA2F              ;
   3+ AA2F              ;	17/02/23
   4+ AA2F              ;
   5+ AA2F              ;	Sprites e índices.
   6+ AA2F
   7+ AA2F              	org $8000
   8+ 8000
   9+ 8000              ; Disparo.
  10+ 8000
  11+ 8000 08 80        Indice_disparo defw Disparo_0
  12+ 8002 0E 80        	defw Disparo_f9
  13+ 8004 14 80        	defw Disparo_fb
  14+ 8006 1A 80        	defw Disparo_fd
  15+ 8008
  16+ 8008              ; Disparo (CTRL_DESPLZ)="0".
  17+ 8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80,$01,$80
  17+ 800C 01 80
  18+ 800E              ; Disparo (CTRL_DESPLZ)="f9"
  19+ 800E 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60,$00,$60
  19+ 8012 00 60
  20+ 8014              ; Disparo (CTRL_DESPLZ)="fb"
  21+ 8014 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00,$18,$00
  21+ 8018 18 00
  22+ 801A              ; Disparo (CTRL_DESPLZ)="fd"
  23+ 801A 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00,$06,$00
  23+ 801E 06 00
  24+ 8020
  25+ 8020              ; ----------------------------------------------------------------------------------------
  26+ 8020
  27+ 8020              ; Badsat_izq. 2x2.
  28+ 8020
  29+ 8020 30 80        Indice_Badsat_izq defw Badsat_izquierda
  30+ 8022 70 81        	defw Badsat_izq_fe
  31+ 8024 40 81        	defw Badsat_izq_fd
  32+ 8026 10 81        	defw Badsat_izq_fc
  33+ 8028 E0 80        	defw Badsat_izq_fb
  34+ 802A B0 80        	defw Badsat_izq_fa
  35+ 802C 80 80        	defw Badsat_izq_f9
  36+ 802E 50 80        	defw Badsat_izq_f8
  37+ 8030
  38+ 8030 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
  38+ 8034 02 2A 02 55
  39+ 8038 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
  39+ 803C 7F E8 03 60
  40+ 8040 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
  40+ 8044 2B E8 54 40
  41+ 8048 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
  41+ 804C 28 00 10 00
  42+ 8050
  43+ 8050 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
  43+ 8054 0A 00 01 15
  44+ 8058 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
  44+ 805C 01 55 00 01
  45+ 8060 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
  45+ 8064 00 01 B0 00
  46+ 8068 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
  46+ 806C FC 00 15 F4
  47+ 8070 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
  47+ 8074 55 30 00 2A
  48+ 8078 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
  48+ 807C 00 08 00 00
  49+ 8080
  50+ 8080 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
  50+ 8084 85 00 00 8A
  51+ 8088 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
  51+ 808C 00 AA 80 00
  52+ 8090 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
  52+ 8094 00 00 D8 00
  53+ 8098 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
  53+ 809C FE 00 0A FA
  54+ 80A0 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
  54+ 80A4 2A 98 00 15
  55+ 80A8 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
  55+ 80AC 00 04 00 00
  56+ 80B0
  57+ 80B0 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
  57+ 80B4 42 80 00 45
  58+ 80B8 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
  58+ 80BC 00 55 40 00
  59+ 80C0 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
  59+ 80C4 00 00 6C 00
  60+ 80C8 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
  60+ 80CC FF 00 05 7D
  61+ 80D0 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
  61+ 80D4 15 4C 00 0A
  62+ 80D8 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
  62+ 80DC 00 02 00 00
  63+ 80E0
  64+ 80E0 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
  64+ 80E4 21 40 00 22
  65+ 80E8 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
  65+ 80EC 00 2A A0 00
  66+ 80F0 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
  66+ 80F4 80 00 36 00
  67+ 80F8 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
  67+ 80FC 7F 80 02 BE
  68+ 8100 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
  68+ 8104 0A A6 00 05
  69+ 8108 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
  69+ 810C 00 01 00 00
  70+ 8110
  71+ 8110 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
  71+ 8114 10 A0 00 11
  72+ 8118 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
  72+ 811C 00 15 50 00
  73+ 8120 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
  73+ 8124 40 00 1B 00
  74+ 8128 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
  74+ 812C BF C0 01 5F
  75+ 8130 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
  75+ 8134 05 53 00 02
  76+ 8138 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
  76+ 813C 00 00 80 00
  77+ 8140
  78+ 8140 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
  78+ 8144 08 50 00 08
  79+ 8148 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
  79+ 814C 00 0A A8 00
  80+ 8150 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
  80+ 8154 A0 00 0D 80
  81+ 8158 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
  81+ 815C 5F F8 00 AF
  82+ 8160 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
  82+ 8164 02 A9 00 01
  83+ 8168 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
  83+ 816C 00 00 40 00
  84+ 8170
  85+ 8170 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
  85+ 8174 04 28 00 04
  86+ 8178 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
  86+ 817C 00 05 54 00
  87+ 8180 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
  87+ 8184 D0 00 06 C0
  88+ 8188 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
  88+ 818C 2F FC 00 57
  89+ 8190 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
  89+ 8194 01 54 80 00
  90+ 8198 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
  90+ 819C 00 00 20 00
  91+ 81A0
  92+ 81A0
  93+ 81A0 B0 81        Indice_Badsat_der defw Badsat_derecha
  94+ 81A2 D0 81        	defw Badsat_der_f8
  95+ 81A4 00 82        	defw Badsat_der_f9
  96+ 81A6 30 82        	defw Badsat_der_fa
  97+ 81A8 60 82        	defw Badsat_der_fb
  98+ 81AA 90 82        	defw Badsat_der_fc
  99+ 81AC C0 82        	defw Badsat_der_fd
 100+ 81AE F0 82        	defw Badsat_der_fe
 101+ 81B0
 102+ 81B0 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
 102+ 81B4 54 40 AA 40
 103+ 81B8 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
 103+ 81BC 17 FE 06 C0
 104+ 81C0 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
 104+ 81C4 17 D4 02 2A
 105+ 81C8 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
 105+ 81CC 00 14 00 08
 106+ 81D0
 107+ 81D0 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
 107+ 81D4 20 00 2A 20
 108+ 81D8 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
 108+ 81DC 2A A0 00 15
 109+ 81E0 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
 109+ 81E4 00 03 60 00
 110+ 81E8 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
 110+ 81EC F4 00 0B EA
 111+ 81F0 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
 111+ 81F4 03 2A 80 00
 112+ 81F8 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
 112+ 81FC 00 00 04 00
 113+ 8200
 114+ 8200 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
 114+ 8204 10 00 15 10
 115+ 8208 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
 115+ 820C 15 50 00 0A
 116+ 8210 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
 116+ 8214 80 01 B0 00
 117+ 8218 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
 117+ 821C FA 00 05 F5
 118+ 8220 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
 118+ 8224 01 95 40 00
 119+ 8228 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
 119+ 822C 00 00 02 00
 120+ 8230
 121+ 8230 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
 121+ 8234 08 00 0A 88
 122+ 8238 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
 122+ 823C 0A A8 00 05
 123+ 8240 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
 123+ 8244 C0 00 D8 00
 124+ 8248 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
 124+ 824C FD 00 02 FA
 125+ 8250 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
 125+ 8254 00 CA A0 00
 126+ 8258 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
 126+ 825C 80 00 01 00
 127+ 8260
 128+ 8260 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
 128+ 8264 84 00 05 44
 129+ 8268 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
 129+ 826C 05 54 00 02
 130+ 8270 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
 130+ 8274 E0 00 6C 00
 131+ 8278 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
 131+ 827C FE 80 01 7D
 132+ 8280 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
 132+ 8284 00 65 50 00
 133+ 8288 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
 133+ 828C 40 00 00 80
 134+ 8290
 135+ 8290 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
 135+ 8294 42 00 02 A2
 136+ 8298 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
 136+ 829C 02 AA 00 01
 137+ 82A0 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
 137+ 82A4 F0 00 36 00
 138+ 82A8 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
 138+ 82AC FF 40 00 BE
 139+ 82B0 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
 139+ 82B4 00 32 A8 00
 140+ 82B8 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
 140+ 82BC A0 00 00 40
 141+ 82C0
 142+ 82C0 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
 142+ 82C4 A1 00 01 51
 143+ 82C8 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
 143+ 82CC 01 55 00 00
 144+ 82D0 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
 144+ 82D4 F8 00 1B 00
 145+ 82D8 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
 145+ 82DC FF A0 00 1F
 146+ 82E0 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
 146+ 82E4 00 09 54 00
 147+ 82E8 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
 147+ 82EC 50 00 00 20
 148+ 82F0
 149+ 82F0 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
 149+ 82F4 50 80 00 A8
 150+ 82F8 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
 150+ 82FC 00 AA 80 00
 151+ 8300 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
 151+ 8304 FC 00 0D 80
 152+ 8308 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
 152+ 830C FF D0 00 0F
 153+ 8310 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
 153+ 8314 00 04 AA 00
 154+ 8318 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
 154+ 831C 28 00 00 10
 155+ 8320
 156+ 8320              ; ----------------------------------------------------------------------------------------
 157+ 8320
 158+ 8320              ; Amadeus. 2x2.
 159+ 8320
 160+ 8320 40 83        Indice_Amadeus_der defw Amadeus
 161+ 8322 00 00        	defw 0
 162+ 8324 60 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
 163+ 8326 00 00        	defw 0
 164+ 8328 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 165+ 832A 00 00        	defw 0
 166+ 832C C0 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
 167+ 832E 00 00        	defw 0	 								; (Fín de índice).
 168+ 8330
 169+ 8330 40 83        Indice_Amadeus_izq defw Amadeus
 170+ 8332 00 00        	defw 0
 171+ 8334 C0 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
 172+ 8336 00 00        	defw 0
 173+ 8338 90 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
 174+ 833A 00 00        	defw 0
 175+ 833C 60 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
 176+ 833E 00 00        	defw 0	 								; (Fín de índice).
 177+ 8340
 178+ 8340 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
 178+ 8344 26 64 24 24
 179+ 8348 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
 179+ 834C 6F F6 67 E6
 180+ 8350 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
 180+ 8354 F7 EF FF FF
 181+ 8358 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
 181+ 835C 8B D1 71 8E
 182+ 8360
 183+ 8360 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
 183+ 8364 F1 00 09 99
 184+ 8368 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
 184+ 836C 0B 0D 00 1B
 185+ 8370 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
 185+ 8374 80 19 F9 80
 186+ 8378 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
 186+ 837C F3 C0 3D FB
 187+ 8380 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
 187+ 8384 3E F7 C0 3E
 188+ 8388 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
 188+ 838C 40 1C 63 80
 189+ 8390
 190+ 8390 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
 190+ 8394 3C 40 02 66
 191+ 8398 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
 191+ 839C 02 C3 40 06
 192+ 83A0 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
 192+ 83A4 60 06 7E 60
 193+ 83A8 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
 193+ 83AC 3C F0 0F 7E
 194+ 83B0 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
 194+ 83B4 0F BD F0 0F
 195+ 83B8 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
 195+ 83BC 10 07 18 E0
 196+ 83C0
 197+ 83C0 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
 197+ 83C4 8F 10 00 99
 198+ 83C8 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
 198+ 83CC 00 B0 D0 01
 199+ 83D0 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
 199+ 83D4 D8 01 9F 98
 200+ 83D8 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
 200+ 83DC CF 3C 03 DF
 201+ 83E0 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
 201+ 83E4 03 EF 7C 03
 202+ 83E8 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
 202+ 83EC 44 01 C6 38
 203+ 83F0
 204+ 83F0              ; ----------------------------------------------------------------------------------------
 205+ 83F0
 206+ 83F0 F6 83        Indice_Explosion_2x3 defw Explosion_2x3_1
 207+ 83F2 26 84        	defw Explosion_2x3_2
 208+ 83F4 56 84        	defw Explosion_2x3_3
 209+ 83F6
 210+ 83F6 00 10 00 08  Explosion_2x3_1 DEFB $00,$10,$00,$08,$10,$00,$04,$38
 210+ 83FA 10 00 04 38
 211+ 83FE 40 03 7D 80  	DEFB	$40,$03,$7D,$80,$02,$E6,$80,$01
 211+ 8402 02 E6 80 01
 212+ 8406 B7 00 01 7F  	DEFB	$B7,$00,$01,$7F,$00,$03,$DD,$80
 212+ 840A 00 03 DD 80
 213+ 840E 0F FF E0 03  	DEFB	$0F,$FF,$E0,$03,$3B,$80,$01,$9D
 213+ 8412 3B 80 01 9D
 214+ 8416 00 01 F6 00  	DEFB	$00,$01,$F6,$00,$02,$FD,$80,$03
 214+ 841A 02 FD 80 03
 215+ 841E 00 40 04 00  	DEFB	$00,$40,$04,$00,$00,$08,$00,$00
 215+ 8422 00 08 00 00
 216+ 8426
 217+ 8426 08 00 00 05  Explosion_2x3_2 DEFB $08,$00,$00,$05,$38,$10,$03,$BC
 217+ 842A 38 10 03 BC
 218+ 842E 20 06 00 C0  	DEFB	$20,$06,$00,$C0,$04,$06,$C0,$00
 218+ 8432 04 06 C0 00
 219+ 8436 37 00 00 7F  	DEFB	$37,$00,$00,$7F,$00,$03,$DD,$80
 219+ 843A 00 03 DD 80
 220+ 843E 03 FE 00 03  	DEFB	$03,$FE,$00,$03,$3A,$70,$01,$9C
 220+ 8442 3A 70 01 9C
 221+ 8446 60 01 F6 40  	DEFB	$60,$01,$F6,$40,$04,$F8,$80,$06
 221+ 844A 04 F8 80 06
 222+ 844E 00 00 08 00  	DEFB	$00,$00,$08,$00,$00,$00,$00,$00
 222+ 8452 00 00 00 00
 223+ 8456
 224+ 8456 03 18 10 04  Explosion_2x3_3 DEFB $03,$18,$10,$04,$00,$20,$08,$00
 224+ 845A 00 20 08 00
 225+ 845E 40 00 00 C0  	DEFB	$40,$00,$00,$C0,$00,$06,$00,$00
 225+ 8462 00 06 00 00
 226+ 8466 15 00 08 1E  	DEFB	$15,$00,$08,$1E,$00,$00,$14,$30
 226+ 846A 00 00 14 30
 227+ 846E 08 66 00 00  	DEFB	$08,$66,$00,$00,$38,$00,$01,$08
 227+ 8472 38 00 01 08
 228+ 8476 00 01 80 00  	DEFB	$00,$01,$80,$00,$00,$80,$00,$04
 228+ 847A 00 80 00 04
 229+ 847E 03 20 06 00  	DEFB	$03,$20,$06,$00,$10,$08,$00,$20
 229+ 8482 10 08 00 20
 230+ 8486
 231+ 8486              ; ------------------------------------------
 232+ 8486
 233+ 8486 8C 84        Indice_Explosion_2x2 defw Explosion_2x2_1
 234+ 8488 AC 84        	defw Explosion_2x2_2
 235+ 848A CC 84        	defw Explosion_2x2_3
 236+ 848C
 237+ 848C 01 00 81 00  Explosion_2x2_1 DEFB $01,$00,$81,$00,$43,$84,$37,$D8
 237+ 8490 43 84 37 D8
 238+ 8494 2E 68 1B 70  	DEFB	$2E,$68,$1B,$70,$17,$F0,$3D,$D8
 238+ 8498 17 F0 3D D8
 239+ 849C FF FE 33 B8  	DEFB	$FF,$FE,$33,$B8,$19,$D0,$1F,$60
 239+ 84A0 19 D0 1F 60
 240+ 84A4 2F D8 30 04  	DEFB	$2F,$D8,$30,$04,$40,$00,$80,$00
 240+ 84A8 40 00 80 00
 241+ 84AC
 242+ 84AC
 243+ 84AC 80 00 53 81  Explosion_2x2_2	DEFB $80,$00,$53,$81,$3B,$C2,$60,$0C
 243+ 84B0 3B C2 60 0C
 244+ 84B4 40 6C 03 70  	DEFB	$40,$6C,$03,$70,$07,$F0,$3D,$D8
 244+ 84B8 07 F0 3D D8
 245+ 84BC 3F E0 33 A7  	DEFB	$3F,$E0,$33,$A7,$19,$C6,$1F,$64
 245+ 84C0 19 C6 1F 64
 246+ 84C4 4F 88 60 00  	DEFB	$4F,$88,$60,$00,$80,$00,$00,$00
 246+ 84C8 80 00 00 00
 247+ 84CC
 248+ 84CC 31 81 40 02  Explosion_2x2_3	DEFB $31,$81,$40,$02,$88,$04,$10,$0C
 248+ 84D0 88 04 10 0C
 249+ 84D4 20 60 01 50  	DEFB	$20,$60,$01,$50,$81,$E0,$01,$43
 249+ 84D8 81 E0 01 43
 250+ 84DC 86 60 03 80  	DEFB	$86,$60,$03,$80,$10,$80,$18,$00
 250+ 84E0 10 80 18 00
 251+ 84E4 08 00 40 32  	DEFB	$08,$00,$40,$32,$60,$01,$80,$02
 251+ 84E8 60 01 80 02
 252+ 84EC
 253+ 84EC              ; ------------------------------------------ 9/8/23
 254+ 84EC              ;
 255+ 84EC              ;	Índices de álbumes de fotos y disparos.
 256+ 84EC
 257+ 84EC 00 70        Indice_album_de_fotos defw Album_de_fotos
 258+ 84EE 54 70        	defw Album_de_fotos_1
 259+ 84F0 A8 70        	defw Album_de_fotos_2
 260+ 84F2 FC 70        	defw Album_de_fotos_3
 261+ 84F4 50 71        Indice_album_de_fotos_disparos defw Album_de_fotos_disparos
 262+ 84F6 A4 71        	defw Album_de_fotos_disparos_1
 263+ 84F8 F8 71        	defw Album_de_fotos_disparos_2
 264+ 84FA 4C 72         	defw Album_de_fotos_disparos_3
 265+ 84FC 1F 89        Indice_End_Snapshot defw End_Snapshot
 266+ 84FE 25 89        	defw End_Snapshot_1
 267+ 8500 29 89        	defw End_Snapshot_2
 268+ 8502 2D 89        	defw End_Snapshot_3
 269+ 8504 21 89        Indice_End_Snapshot_disparos defw End_Snapshot_disparos
 270+ 8506 27 89        	defw End_Snapshot_disparos_1
 271+ 8508 2B 89        	defw End_Snapshot_disparos_2
 272+ 850A 2F 89        	defw End_Snapshot_disparos_3
 273+ 850C
 274+ 850C
 275+ 850C
 276+ 850C
# file closed: Sprites_e_indices.asm
  60  850C              	include "Cajas_y_disparos.asm"
# file opened: Cajas_y_disparos.asm
   1+ 850C
   2+ 850C              ; Cajas de DRAW y disparos. Índices de disparos y cajas.
   3+ 850C
   4+ 850C              ; 13/05/23
   5+ 850C
   6+ 850C              ; Control. %00000001 00000001
   7+ 850C              ;
   8+ 850C              ;     [Byte 0] ..... Impacto. "$81" Cuando dispara Amadeus, (hacia arriba), "$80" cuando lo_
   9+ 850C              ;                    _ hacen las entidades hacia abajo.
  10+ 850C              ;
  11+ 850C              ;     [Byte 1] ..... Dirección. "$81" Cuando se produce colisión al generar un disparo."$80" si no la hay.
  12+ 850C
  13+ 850C 12 85        Indice_de_disparos_Amadeus defw Disparo_1A
  14+ 850E 1A 85        	defw Disparo_2A
  15+ 8510 22 85        	defw Disparo_3A
  16+ 8512
  17+ 8512 00 00        Disparo_1A defw 0									; Control.
  18+ 8514 00 00        	defw 0											; Puntero objeto.
  19+ 8516 00 00        ON_Disparo_2A defw 0								; Puntero de impresión.
  20+ 8518 00 00        	defw 0											; Rutina de impresión.
  21+ 851A
  22+ 851A 00 00        Disparo_2A defw 0									; Control.
  23+ 851C 00 00        	defw 0											; Puntero objeto.
  24+ 851E 00 00        	defw 0											; Puntero de impresión.
  25+ 8520 00 00        	defw 0											; Rutina de impresión.
  26+ 8522
  27+ 8522 00 00        Disparo_3A defw 0
  28+ 8524
  29+ 8524 3A 85        Indice_de_disparos_entidades defw Disparo_1
  30+ 8526 42 85        	defw Disparo_2
  31+ 8528 4A 85        	defw Disparo_3
  32+ 852A 52 85        	defw Disparo_4
  33+ 852C 5A 85        	defw Disparo_5
  34+ 852E 62 85        	defw Disparo_6
  35+ 8530 6A 85        	defw Disparo_7
  36+ 8532 72 85        	defw Disparo_8
  37+ 8534 7A 85        	defw Disparo_9
  38+ 8536 82 85        	defw Disparo_10
  39+ 8538 8A 85        	defw Disparo_11
  40+ 853A
  41+ 853A 00 00        Disparo_1 defw 0									; Control.
  42+ 853C 00 00        	defw 0											; Puntero objeto.
  43+ 853E 00 00        	defw 0											; Puntero de impresión.
  44+ 8540 00 00        	defw 0											; Rutina de impresión.
  45+ 8542
  46+ 8542 00 00        Disparo_2 defw 0									; Control.
  47+ 8544 00 00        	defw 0											; Puntero objeto.
  48+ 8546 00 00        	defw 0											; Puntero de impresión.
  49+ 8548 00 00        	defw 0											; Rutina de impresión.
  50+ 854A
  51+ 854A 00 00        Disparo_3 defw 0									; Control.
  52+ 854C 00 00        	defw 0											; Puntero objeto.
  53+ 854E 00 00        	defw 0											; Puntero de impresión.
  54+ 8550 00 00        	defw 0											; Rutina de impresión.
  55+ 8552
  56+ 8552 00 00        Disparo_4 defw 0									; Control.
  57+ 8554 00 00        	defw 0											; Puntero objeto.
  58+ 8556 00 00        	defw 0											; Puntero de impresión.
  59+ 8558 00 00        	defw 0											; Rutina de impresión.
  60+ 855A
  61+ 855A 00 00        Disparo_5 defw 0									; Control.
  62+ 855C 00 00        	defw 0											; Puntero objeto.
  63+ 855E 00 00        	defw 0											; Puntero de impresión.
  64+ 8560 00 00        	defw 0											; Rutina de impresión.
  65+ 8562
  66+ 8562 00 00        Disparo_6 defw 0									; Control.
  67+ 8564 00 00        	defw 0											; Puntero objeto.
  68+ 8566 00 00        	defw 0											; Puntero de impresión.
  69+ 8568 00 00        	defw 0											; Rutina de impresión.
  70+ 856A
  71+ 856A 00 00        Disparo_7 defw 0									; Control.
  72+ 856C 00 00        	defw 0											; Puntero objeto.
  73+ 856E 00 00        	defw 0											; Puntero de impresión.
  74+ 8570 00 00        	defw 0											; Rutina de impresión.
  75+ 8572
  76+ 8572 00 00        Disparo_8 defw 0									; Control.
  77+ 8574 00 00        	defw 0											; Puntero objeto.
  78+ 8576 00 00        	defw 0											; Puntero de impresión.
  79+ 8578 00 00        	defw 0											; Rutina de impresión.
  80+ 857A
  81+ 857A 00 00        Disparo_9 defw 0									; Control.
  82+ 857C 00 00        	defw 0											; Puntero objeto.
  83+ 857E 00 00        	defw 0											; Puntero de impresión.
  84+ 8580 00 00        	defw 0											; Rutina de impresión.
  85+ 8582
  86+ 8582 00 00        Disparo_10 defw 0									; Control.
  87+ 8584 00 00        	defw 0											; Puntero objeto.
  88+ 8586 00 00        	defw 0											; Puntero de impresión.
  89+ 8588 00 00        	defw 0											; Rutina de impresión.
  90+ 858A
  91+ 858A 00 00        Disparo_11 defw 0
  92+ 858C
  93+ 858C              ; -------------------------------------------------------------------------------------
  94+ 858C
  95+ 858C              Indice_de_cajas										 ;! 63 Bytes por entidad.
  96+ 858C
  97+ 858C DD 85        	defw Caja_1
  98+ 858E 1C 86        	defw Caja_2
  99+ 8590 5B 86        	defw Caja_3
 100+ 8592 9A 86        	defw Caja_4
 101+ 8594 D9 86        	defw Caja_5
 102+ 8596 18 87        	defw Caja_6
 103+ 8598 57 87        	defw Caja_7
 104+ 859A
 105+ 859A 00 00        	defw 0
 106+ 859C 00 00        	defw 0
 107+ 859E
 108+ 859E              ; ---------- ---------- ---------- ---------- ----------
 109+ 859E
 110+ 859E 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
 111+ 85A0 00 00        	defw 0		 									; (Posicion_actual).
 112+ 85A2 00 00        	defw 0	 										; (Puntero_objeto).
 113+ 85A4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 114+ 85A7
 115+ 85A7 05           	db %00000101									; (Attr).
 116+ 85A8 20 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
 117+ 85AA 30 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
 118+ 85AC
 119+ 85AC 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
 120+ 85AE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 121+ 85B0
 122+ 85B0 D0 50        	defw $50d0										; (Posicion_inicio).
 123+ 85B2 04           	db 4 											; (Cuad_objeto).
 124+ 85B3 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 125+ 85B7
 126+ 85B7 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 127+ 85B8
 128+ 85B8 00 00 00...  	ds 6											; Variables_de_borrado
 129+ 85BE
 130+ 85BE 00 00        	db 0,0											; Variables_de_pintado
 131+ 85C0 00 00        	defw 0											;	" " " " " " "
 132+ 85C2 00 00        	defw 0											;	" " " " " " "
 133+ 85C4 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 134+ 85C8
 135+ 85C8 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
 136+ 85CA
 137+ 85CA 00           	db 0											; (Autoriza_movimiento).
 138+ 85CB 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 138+ 85CF 00 00
 139+ 85D1 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 140+ 85D4
 141+ 85D4 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 142+ 85D6 00           	db 0											; (Cola_de_desplazamiento).
 143+ 85D7
 144+ 85D7 00           	db 0 											; (Columnas).
 145+ 85D8 00 00        	defw 0											; (Limite_horizontal).
 146+ 85DA 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 147+ 85DD
 148+ 85DD              ; ---------- ---------- ---------- ---------- ----------
 149+ 85DD
 150+ 85DD 00 00        Caja_1 db 0,0										; (Filas) / (Columns).
 151+ 85DF 00 00        	defw 0											; (Posicion_actual).
 152+ 85E1 00 00        	defw 0 											; (Puntero_objeto).
 153+ 85E3 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 154+ 85E6
 155+ 85E6 00           	db %00000000 									; (Attr).
 156+ 85E7
 157+ 85E7 00 00        	defw 0											; (Indice_Sprite_der).
 158+ 85E9 00 00        	defw 0											; (Indice_Sprite_izq).
 159+ 85EB 00 00        	defw 0											; (Puntero_DESPLZ_der).
 160+ 85ED 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 161+ 85EF
 162+ 85EF 00 00        	defw 0											; (Posicion_inicio).
 163+ 85F1 00           	db 0											; (Cuad_objeto).
 164+ 85F2
 165+ 85F2 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 166+ 85F6
 167+ 85F6 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 168+ 85F7
 169+ 85F7 00 00 00...  	ds 6											; Variables_de_borrado
 170+ 85FD
 171+ 85FD 00 00        	db 0,0											; Variables_de_pintado
 172+ 85FF 00 00        	defw 0											;	" " " " " " "
 173+ 8601 00 00        	defw 0											;	" " " " " " "
 174+ 8603 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 175+ 8607
 176+ 8607 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 177+ 8609
 178+ 8609 00           	db 0											; (Autoriza_movimiento).
 179+ 860A 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 179+ 860E 00 00
 180+ 8610 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 181+ 8613
 182+ 8613 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 183+ 8615 00           	db 0											; (Cola_de_desplazamiento).
 184+ 8616
 185+ 8616 00           	db 0 											; (Columnas).
 186+ 8617 00 00        	defw 0											; (Limite_horizontal).
 187+ 8619 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 188+ 861C
 189+ 861C              ; ---------- ---------- ---------- ---------- ----------
 190+ 861C
 191+ 861C 00 00        Caja_2 db 0,0										; (Filas) / (Columns).
 192+ 861E 00 00        	defw 0											; (Posicion_actual).
 193+ 8620 00 00        	defw 0 											; (Puntero_objeto).
 194+ 8622 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 195+ 8625
 196+ 8625 00           	db %00000000 									; (Attr).
 197+ 8626
 198+ 8626 00 00        	defw 0											; (Indice_Sprite_der).
 199+ 8628 00 00        	defw 0											; (Indice_Sprite_izq).
 200+ 862A 00 00        	defw 0											; (Puntero_DESPLZ_der).
 201+ 862C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 202+ 862E
 203+ 862E 00 00        	defw 0											; (Posicion_inicio).
 204+ 8630 00           	db 0											; (Cuad_objeto).
 205+ 8631
 206+ 8631 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 207+ 8635
 208+ 8635 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 209+ 8636
 210+ 8636 00 00 00...  	ds 6											; Variables_de_borrado
 211+ 863C
 212+ 863C 00 00        	db 0,0											; Variables_de_pintado
 213+ 863E 00 00        	defw 0											;	" " " " " " "
 214+ 8640 00 00        	defw 0											;	" " " " " " "
 215+ 8642 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 216+ 8646
 217+ 8646 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 218+ 8648
 219+ 8648 00           	db 0											; (Autoriza_movimiento).
 220+ 8649 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 220+ 864D 00 00
 221+ 864F 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 222+ 8652
 223+ 8652 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 224+ 8654 00           	db 0											; (Cola_de_desplazamiento).
 225+ 8655
 226+ 8655 00           	db 0 											; (Columnas).
 227+ 8656 00 00        	defw 0											; (Limite_horizontal).
 228+ 8658 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 229+ 865B
 230+ 865B              ; ---------- ---------- ---------- ---------- ----------
 231+ 865B
 232+ 865B 00 00        Caja_3 db 0,0										; (Filas) / (Columns).
 233+ 865D 00 00        	defw 0											; (Posicion_actual).
 234+ 865F 00 00        	defw 0 											; (Puntero_objeto).
 235+ 8661 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 236+ 8664
 237+ 8664 00           	db %00000000 									; (Attr).
 238+ 8665
 239+ 8665 00 00        	defw 0											; (Indice_Sprite_der).
 240+ 8667 00 00        	defw 0											; (Indice_Sprite_izq).
 241+ 8669 00 00        	defw 0											; (Puntero_DESPLZ_der).
 242+ 866B 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 243+ 866D
 244+ 866D 00 00        	defw 0											; (Posicion_inicio).
 245+ 866F 00           	db 0											; (Cuad_objeto).
 246+ 8670
 247+ 8670 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 248+ 8674
 249+ 8674 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 250+ 8675
 251+ 8675 00 00 00...  	ds 6											; Variables_de_borrado
 252+ 867B
 253+ 867B 00 00        	db 0,0											; Variables_de_pintado
 254+ 867D 00 00        	defw 0											;	" " " " " " "
 255+ 867F 00 00        	defw 0											;	" " " " " " "
 256+ 8681 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 257+ 8685
 258+ 8685 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 259+ 8687
 260+ 8687 00           	db 0											; (Autoriza_movimiento).
 261+ 8688 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 261+ 868C 00 00
 262+ 868E 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 263+ 8691
 264+ 8691 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 265+ 8693 00           	db 0											; (Cola_de_desplazamiento).
 266+ 8694
 267+ 8694 00           	db 0 											; (Columnas).
 268+ 8695 00 00        	defw 0											; (Limite_horizontal).
 269+ 8697 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 270+ 869A
 271+ 869A              ; ---------- ---------- ---------- ---------- ----------
 272+ 869A
 273+ 869A 00 00        Caja_4 db 0,0										; (Filas) / (Columns).
 274+ 869C 00 00        	defw 0											; (Posicion_actual).
 275+ 869E 00 00        	defw 0 											; (Puntero_objeto).
 276+ 86A0 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 277+ 86A3
 278+ 86A3 00           	db %00000000 									; (Attr).
 279+ 86A4
 280+ 86A4 00 00        	defw 0											; (Indice_Sprite_der).
 281+ 86A6 00 00        	defw 0											; (Indice_Sprite_izq).
 282+ 86A8 00 00        	defw 0											; (Puntero_DESPLZ_der).
 283+ 86AA 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 284+ 86AC
 285+ 86AC 00 00        	defw 0											; (Posicion_inicio).
 286+ 86AE 00           	db 0											; (Cuad_objeto).
 287+ 86AF
 288+ 86AF 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 289+ 86B3
 290+ 86B3 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 291+ 86B4
 292+ 86B4 00 00 00...  	ds 6											; Variables_de_borrado
 293+ 86BA
 294+ 86BA 00 00        	db 0,0											; Variables_de_pintado
 295+ 86BC 00 00        	defw 0											;	" " " " " " "
 296+ 86BE 00 00        	defw 0											;	" " " " " " "
 297+ 86C0 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 298+ 86C4
 299+ 86C4 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 300+ 86C6
 301+ 86C6 00           	db 0											; (Autoriza_movimiento).
 302+ 86C7 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 302+ 86CB 00 00
 303+ 86CD 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 304+ 86D0
 305+ 86D0 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 306+ 86D2 00           	db 0											; (Cola_de_desplazamiento).
 307+ 86D3
 308+ 86D3 00           	db 0 											; (Columnas).
 309+ 86D4 00 00        	defw 0											; (Limite_horizontal).
 310+ 86D6 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 311+ 86D9
 312+ 86D9              ; ---------- ---------- ---------- ---------- ----------
 313+ 86D9
 314+ 86D9 00 00        Caja_5 db 0,0										; (Filas) / (Columns).
 315+ 86DB 00 00        	defw 0											; (Posicion_actual).
 316+ 86DD 00 00        	defw 0 											; (Puntero_objeto).
 317+ 86DF 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 318+ 86E2
 319+ 86E2 00           	db %00000000 									; (Attr).
 320+ 86E3
 321+ 86E3 00 00        	defw 0											; (Indice_Sprite_der).
 322+ 86E5 00 00        	defw 0											; (Indice_Sprite_izq).
 323+ 86E7 00 00        	defw 0											; (Puntero_DESPLZ_der).
 324+ 86E9 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 325+ 86EB
 326+ 86EB 00 00        	defw 0											; (Posicion_inicio).
 327+ 86ED 00           	db 0											; (Cuad_objeto).
 328+ 86EE
 329+ 86EE 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 330+ 86F2
 331+ 86F2 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 332+ 86F3
 333+ 86F3 00 00 00...  	ds 6											; Variables_de_borrado
 334+ 86F9
 335+ 86F9 00 00        	db 0,0											; Variables_de_pintado
 336+ 86FB 00 00        	defw 0											;	" " " " " " "
 337+ 86FD 00 00        	defw 0											;	" " " " " " "
 338+ 86FF 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 339+ 8703
 340+ 8703 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 341+ 8705
 342+ 8705 00           	db 0											; (Autoriza_movimiento).
 343+ 8706 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 343+ 870A 00 00
 344+ 870C 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 345+ 870F
 346+ 870F 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 347+ 8711 00           	db 0											; (Cola_de_desplazamiento).
 348+ 8712
 349+ 8712 00           	db 0 											; (Columnas).
 350+ 8713 00 00        	defw 0											; (Limite_horizontal).
 351+ 8715 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 352+ 8718
 353+ 8718              ; ---------- ---------- ---------- ---------- ----------
 354+ 8718
 355+ 8718 00 00        Caja_6 db 0,0										; (Filas) / (Columns).
 356+ 871A 00 00        	defw 0											; (Posicion_actual).
 357+ 871C 00 00        	defw 0 											; (Puntero_objeto).
 358+ 871E 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 359+ 8721
 360+ 8721 00           	db %00000000 									; (Attr).
 361+ 8722
 362+ 8722 00 00        	defw 0											; (Indice_Sprite_der).
 363+ 8724 00 00        	defw 0											; (Indice_Sprite_izq).
 364+ 8726 00 00        	defw 0											; (Puntero_DESPLZ_der).
 365+ 8728 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 366+ 872A
 367+ 872A 00 00        	defw 0											; (Posicion_inicio).
 368+ 872C 00           	db 0											; (Cuad_objeto).
 369+ 872D
 370+ 872D 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 371+ 8731
 372+ 8731 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 373+ 8732
 374+ 8732 00 00 00...  	ds 6											; Variables_de_borrado
 375+ 8738
 376+ 8738 00 00        	db 0,0											; Variables_de_pintado
 377+ 873A 00 00        	defw 0											;	" " " " " " "
 378+ 873C 00 00        	defw 0											;	" " " " " " "
 379+ 873E 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 380+ 8742
 381+ 8742 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 382+ 8744
 383+ 8744 00           	db 0											; (Autoriza_movimiento).
 384+ 8745 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 384+ 8749 00 00
 385+ 874B 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 386+ 874E
 387+ 874E 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 388+ 8750 00           	db 0											; (Cola_de_desplazamiento).
 389+ 8751
 390+ 8751 00           	db 0 											; (Columnas).
 391+ 8752 00 00        	defw 0											; (Limite_horizontal).
 392+ 8754 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 393+ 8757
 394+ 8757              ; ---------- ---------- ---------- ---------- ----------
 395+ 8757
 396+ 8757 00 00        Caja_7 db 0,0										; (Filas) / (Columns).
 397+ 8759 00 00        	defw 0											; (Posicion_actual).
 398+ 875B 00 00        	defw 0 											; (Puntero_objeto).
 399+ 875D 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
 400+ 8760
 401+ 8760 00           	db %00000000 									; (Attr).
 402+ 8761
 403+ 8761 00 00        	defw 0											; (Indice_Sprite_der).
 404+ 8763 00 00        	defw 0											; (Indice_Sprite_izq).
 405+ 8765 00 00        	defw 0											; (Puntero_DESPLZ_der).
 406+ 8767 00 00        	defw 0											; (Puntero_DESPLZ_izq).
 407+ 8769
 408+ 8769 00 00        	defw 0											; (Posicion_inicio).
 409+ 876B 00           	db 0											; (Cuad_objeto).
 410+ 876C
 411+ 876C 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 412+ 8770
 413+ 8770 00           	db 0											; Impacto. "1" existe impacto en la entidad.
 414+ 8771
 415+ 8771 00 00 00...  	ds 6											; Variables_de_borrado
 416+ 8777
 417+ 8777 00 00        	db 0,0											; Variables_de_pintado
 418+ 8779 00 00        	defw 0											;	" " " " " " "
 419+ 877B 00 00        	defw 0											;	" " " " " " "
 420+ 877D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
 421+ 8781
 422+ 8781 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado)
 423+ 8783
 424+ 8783 00           	db 0											; (Autoriza_movimiento).
 425+ 8784 00 00 00 00  	defw 0,0,0	 									; (Puntero_indice_mov) / (Puntero_mov) / (Puntero_bucle).
 425+ 8788 00 00
 426+ 878A 00 00 00     	db 0,0,0										; (Incrementa_puntero) / (Incrementa_puntero_backup) / (Repetimos_desplazamiento).
 427+ 878D
 428+ 878D 00 00        	db 0,0											; (Repetimos_desplazamiento_backup) / (Repetimos_movimiento).
 429+ 878F 00           	db 0											; (Cola_de_desplazamiento).
 430+ 8790
 431+ 8790 00           	db 0 											; (Columnas).
 432+ 8791 00 00        	defw 0											; (Limite_horizontal).
 433+ 8793 00 00 00     	db 0,0,0										; (Limite_vertical), (Ctrl_2), (Frames_explosion).
 434+ 8796
 435+ 8796              ; -------------------------------------------------------------------------------------
 436+ 8796              ;
 437+ 8796              ;	20/05/23
 438+ 8796              ;
 439+ 8796              ;	TIPOS de "Entidades maliciosas". Quieren conquistar la Tierra.
 440+ 8796              ;
 441+ 8796              	;	Notas de funcionamiento: (Cuad_objeto) siempre será "1" independientemente de su (Posicion_inicio).
 442+ 8796              	;		De no ser así, la rutina [Recompone_posicion_inicio] generará problemas a la hora de hacer que_
 443+ 8796              	;		_ la entidad aparezca `al píxel', por la parte derecha de la pantalla. Esto se debe a como están_
 444+ 8796              	;		_ construidas las rutinas [Mov_right] y [Mov_left].
 445+ 8796
 446+ 8796              Indice_de_entidades
 447+ 8796
 448+ 8796 9A 87        	defw Entidad_1
 449+ 8798 AA 87        	defw Entidad_2
 450+ 879A
 451+ 879A              ;	BADSAT, (Satélite malvado).
 452+ 879A
 453+ 879A 02 02        Entidad_1 db 2,2		                     		; (Filas) / (Columns).
 454+ 879C 04           	db %00000100									; (Attr).
 455+ 879D A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 456+ 879F 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 457+ 87A1 03 40        	defw $4003	                             	    ; (Posicion_inicio).
 458+ 87A3 01           	db 1											; (Cuad_objeto).
 459+ 87A4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 460+ 87A8 A6 9D        	defw Indice_mov_Baile_de_BadSat					; (Puntero_indice_mov)
 461+ 87AA
 462+ 87AA 02 02        Entidad_2 db 2,2		                     		; (Filas) / (Columns).
 463+ 87AC 02           	db %00000010									; (Attr).
 464+ 87AD A0 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
 465+ 87AF 20 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
 466+ 87B1 40 50        	defw $5040                                      ; (Posicion_inicio).
 467+ 87B3 01           	db 1											; (Cuad_objeto).
 468+ 87B4 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
 469+ 87B8 A6 9D        	defw Indice_mov_Baile_de_BadSat				    ; (Puntero_indice_mov)
 470+ 87BA
# file closed: Cajas_y_disparos.asm
  61  87BA              	include "Niveles.asm"
# file opened: Niveles.asm
   1+ 87BA              ; 13/05/23
   2+ 87BA
   3+ 87BA              Indice_de_niveles
   4+ 87BA
   5+ 87BA C8 87        	defw Nivel_1
   6+ 87BC CB 87        	defw Nivel_2
   7+ 87BE D8 87        	defw Nivel_3
   8+ 87C0 E8 87        	defw Nivel_4
   9+ 87C2 FA 87        	defw Nivel_5
  10+ 87C4              ;	...
  11+ 87C4              ;	...
  12+ 87C4              ;	+ Niveles ...
  13+ 87C4
  14+ 87C4 00 00        	defw 0
  15+ 87C6 00 00        	defw 0
  16+ 87C8
  17+ 87C8 02           Nivel_1 db 2	                                ; Nº de entidades.
  18+ 87C9 01 01        	db 1,1										; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  19+ 87CB 0C           Nivel_2 db 12									; Nº de entidades.
  20+ 87CC 02 01 01 01  	db 2,1,1,1,1,2								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  20+ 87D0 01 02
  21+ 87D2 02 01 01 01  	db 2,1,1,1,1,2
  21+ 87D6 01 02
  22+ 87D8 0F           Nivel_3 db 15									; Nº de entidades.
  23+ 87D9 03 01 01 01  	db 3,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  23+ 87DD 01
  24+ 87DE 03 01 01 01  	db 3,1,1,1,1
  24+ 87E2 01
  25+ 87E3 03 01 01 01  	db 3,1,1,1,1
  25+ 87E7 01
  26+ 87E8 11           Nivel_4 db 17									; Nº de entidades.
  27+ 87E9 04 01 01 01  	db 4,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  27+ 87ED 01
  28+ 87EE 04 01 01 01  	db 4,1,1,1,1
  28+ 87F2 01
  29+ 87F3 04 01 01 01  	db 4,1,1,1,1
  29+ 87F7 01
  30+ 87F8 02 03        	db 2,3
  31+ 87FA 14           Nivel_5 db 20									; Nº de entidades.
  32+ 87FB 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  32+ 87FF 01
  33+ 8800 05 01 01 01  	db 5,1,1,1,1
  33+ 8804 01
  34+ 8805 05 01 01 01  	db 5,1,1,1,1 								; Tipo de entidad que vamos a introducir en las 7 cajas de DRAW.
  34+ 8809 01
  35+ 880A 05 01 01 01  	db 5,1,1,1,1
  35+ 880E 01
  36+ 880F
  37+ 880F              ;---------------------------------------------------------------------------------------------------------------
  38+ 880F              ;
  39+ 880F              ;   3/9/23
  40+ 880F              ;
  41+ 880F              ;	Sitúa (Puntero_indice_NIVELES) en el 1er Nivel del índice de niveles.
  42+ 880F              ;	Carga el nº de entidades del 1er nivel en (Numero_de_entidades).
  43+ 880F              ;	Sitúa el puntero (Datos_de_nivel) en el 1er byte que indica el tipo de entidad que se va a cargar_
  44+ 880F              ;	_en la caja DRAW correspondiente.
  45+ 880F              ;
  46+ 880F              ;	MODIFICA: HL,DE y A.
  47+ 880F              ;	ACTUALIZA: (Puntero_indice_NIVELES), (Numero_de_entidades) y (Datos_de_nivel).
  48+ 880F
  49+ 880F              Inicializa_Punteros_de_nivel
  50+ 880F
  51+ 880F 21 BA 87     	ld hl,Indice_de_niveles
  52+ 8812 22 5C 89     	ld (Puntero_indice_NIVELES),hl				 ; Situamos (Puntero_indice_NIVELES) en el 1er Nivel del índice.
  53+ 8815 CD DF 8C     	call Extrae_address
  54+ 8818 7E           	ld a,(hl)
  55+ 8819 32 0D 89     	ld (Numero_de_entidades),a					 ; Fijamos el nº de entidades que tiene el nivel.
  56+ 881C 23           	inc hl
  57+ 881D 22 5E 89     	ld (Datos_de_nivel),hl						 ; (Datos_de_nivel) ahora apunta a la dirección de mem. donde se encuentra el 1er dato que_
  58+ 8820 C9           	ret 										 ; _ construye el nivel, (tipo de la 1ª entidad).
  59+ 8821
  60+ 8821              ;---------------------------------------------------------------------------------------------------------------
  61+ 8821              ;
  62+ 8821              ;   13/5/23
  63+ 8821              ;
  64+ 8821              ;	Destruye A,BC,HL,DE
  65+ 8821
  66+ 8821              ;	Esta rutina se encarga de llenar las cajas de DRAW con el tipo de entidad que corresponde según el Nivel_
  67+ 8821              ;	_del juego.
  68+ 8821
  69+ 8821              Prepara_cajas
  70+ 8821
  71+ 8821              ; Preparamos los punteros de las cajas.
  72+ 8821
  73+ 8821 21 8C 85     	ld hl,Indice_de_cajas
  74+ 8824 CD DF 8C     	call Extrae_address
  75+ 8827 CD 64 88     	call Avanza_caja
  76+ 882A
  77+ 882A CD A8 88     	call Admin_num_entidades					; Actualiza (Numero_de_entidades) y (Numero_parcial_de_entidades).
  78+ 882D
  79+ 882D 2A 5E 89     	ld hl,(Datos_de_nivel)
  80+ 8830
  81+ 8830              ; HL está en los datos del nivel correspondiente.
  82+ 8830              ; B actuará como contador de cajas.
  83+ 8830
  84+ 8830 C5           1 push bc
  85+ 8831
  86+ 8831 7E           	ld a,(hl)									; A contiene el TIPO de ENTIDAD que almacenaremos en la 1ª caja.
  87+ 8832 CD 55 88     	call PreparaBC
  88+ 8835
  89+ 8835 21 96 87     	ld hl,Indice_de_entidades
  90+ 8838 CD 5D 88     	call SBC_HL_con_BC_y_Extrae
  91+ 883B 22 13 89         ld (Datos_de_entidad),hl					; Nos hemos situado en el tipo de entidad adecuado.
  92+ 883E
  93+ 883E CD 6E 88     	call Datos_de_entidad_a_caja
  94+ 8841
  95+ 8841 2A 0B 89     	ld hl,(Indice_restore_caja)
  96+ 8844 CD DF 8C     	call Extrae_address
  97+ 8847 CD 64 88     	call Avanza_caja
  98+ 884A
  99+ 884A 2A 5E 89     	ld hl,(Datos_de_nivel)
 100+ 884D 23           	inc hl
 101+ 884E 22 5E 89     	ld (Datos_de_nivel),hl						; Pasamos al dato que nos dice que tipo de entidad va en la siguiente caja.
 102+ 8851
 103+ 8851 C1           	pop bc
 104+ 8852 10 DC        	djnz 1B
 105+ 8854 C9           	ret
 106+ 8855
 107+ 8855 CB 27        PreparaBC sla a
 108+ 8857 D6 02        	sub 2										; [(Nivel)*2]-2.
 109+ 8859 4F           	ld c,a
 110+ 885A 06 00        	ld b,0 										; [(Nivel)*2]-2 en BC.
 111+ 885C C9           	ret
 112+ 885D
 113+ 885D A7           SBC_HL_con_BC_y_Extrae and a
 114+ 885E ED 4A        	adc hl,bc
 115+ 8860 CD DF 8C     	call Extrae_address
 116+ 8863 C9           	ret
 117+ 8864
 118+ 8864 22 07 89     Avanza_caja	ld (Puntero_store_caja),hl
 119+ 8867 13           	inc de
 120+ 8868 13           	inc de
 121+ 8869 EB           	ex de,hl
 122+ 886A 22 0B 89     	ld (Indice_restore_caja),hl 				; Indice_de_cajas +2.
 123+ 886D C9           	ret
 124+ 886E
 125+ 886E              Datos_de_entidad_a_caja
 126+ 886E
 127+ 886E              ; En este punto, HL apunta a los DATOS de la entidad que tenemos que volcar en la caja DRAW.
 128+ 886E
 129+ 886E
 130+ 886E ED 5B 07 89  	ld de,(Puntero_store_caja) 					; Datos de la entidad en HL, 1er byte de la caja en DE.
 131+ 8872
 132+ 8872 01 02 00     	ld bc,2
 133+ 8875 ED B0        	ldir 										; Hemos volcado (Filas) y (Columns).
 134+ 8877
 135+ 8877 01 07 00     	ld bc,7
 136+ 887A CD A2 88     	call Situa_DE
 137+ 887D
 138+ 887D 01 05 00     	ld bc,5
 139+ 8880 ED B0        	ldir										; Hemos volcado (Attr), (Indice_Sprite_der) y (Indice_Sprite_izq).
 140+ 8882
 141+ 8882 01 04 00     	ld bc,4
 142+ 8885 CD A2 88     	call Situa_DE
 143+ 8888
 144+ 8888 01 07 00     	ld bc,7
 145+ 888B ED B0        	ldir										; Hemos volcado (Posicion_inicio), (Cuad_objeto) y [(Vel_left) / (Vel_right) / (Vel_up) / (Vel_down)].
 146+ 888D
 147+ 888D 01 14 00     	ld bc,20
 148+ 8890 CD A2 88     	call Situa_DE
 149+ 8893
 150+ 8893 01 02 00     	ld bc,2
 151+ 8896 ED B0        	ldir 										; Hemos volcado (Puntero_indice_mov).
 152+ 8898
 153+ 8898              ; Nota importante: Si vamos a añadir nuevas variables a `cada entidad',(después de (Puntero_indice_mov)), hay que aumentar el valor de BC_
 154+ 8898              ; _con el nº de bytes que ocupe dicha variable/s. (Frames_explosion) es la última variable general de cada entidad.
 155+ 8898
 156+ 8898 01 0F 00     	ld bc,15									; *****
 157+ 889B CD A2 88     	call Situa_DE
 158+ 889E
 159+ 889E 3E 03        	ld a,3
 160+ 88A0 12           	ld (de),a 									; Vuelco (Frames_explosion).
 161+ 88A1
 162+ 88A1 C9           	ret
 163+ 88A2
 164+ 88A2 EB           Situa_DE ex de,hl
 165+ 88A3 A7           	and a
 166+ 88A4 ED 4A        	adc hl,bc
 167+ 88A6 EB           	ex de,hl
 168+ 88A7 C9           	ret
 169+ 88A8
 170+ 88A8              ;---------------------------------------------------------------------------------------------------------------
 171+ 88A8              ;
 172+ 88A8              ;	21/5/23
 173+ 88A8              ;
 174+ 88A8              ;	Las entidades cargadas en las cajas DRAW, se descuentan del total de (Numero_de_entidades).
 175+ 88A8              ;	El contador (Numero_parcial_de_entidades) indica las entidades que hay en las cajas.
 176+ 88A8              ;
 177+ 88A8              ;	Así, un nivel se completa cuando (Numero_de_entidades)="0".
 178+ 88A8              ;	Cuando (Numero_parcial_de_entidades)="0" hay que cargar de nuevo las cajas y restar esta cantidad al_
 179+ 88A8              ;	_ total de entidades que contiene (Numero_de_entidades).
 180+ 88A8              ;
 181+ 88A8              ;	OUTPUT: B contiene la cantidad de entidades que van a ser cargadas en las cajas DRAW.
 182+ 88A8              ;	MODIFICA: A y B.
 183+ 88A8              ;	ACTUALIZA: (Numero_de_entidades) y (Numero_parcial_de_entidades).
 184+ 88A8
 185+ 88A8              Admin_num_entidades
 186+ 88A8
 187+ 88A8              ;	Si (Numero_de_entidades)="0", hemos superado el nivel actual.
 188+ 88A8
 189+ 88A8 3A 0D 89     	ld a,(Numero_de_entidades)
 190+ 88AB A7           	and a
 191+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 192+ 88AC              ;	jr z,$
 193+ 88AC              ; !!!!!!!!!!! NIVEL SUPERADOOOOOOOOOOOOOO !!!!!!!!!!!!!
 194+ 88AC
 195+ 88AC 20 03        	jr nz,3F
 196+ 88AE
 197+ 88AE              ;! RESET para pruebas. Omitir esta línea en modo normal.
 198+ 88AE
 199+ 88AE CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 200+ 88B1
 201+ 88B1 3A 0D 89     3 ld a,(Numero_de_entidades)
 202+ 88B4 FE 0A        	cp 10
 203+ 88B6 38 08        	jr c,1F
 204+ 88B8
 205+ 88B8              ; El nº de entidades es superior al que cabe en las cajas DRAW.
 206+ 88B8              ; Actualizamos variables.
 207+ 88B8
 208+ 88B8 3E 0A        	ld a,10
 209+ 88BA 32 0E 89     	ld (Numero_parcial_de_entidades),a
 210+ 88BD 47           	ld b,a
 211+ 88BE 18 04        	jr 2F
 212+ 88C0
 213+ 88C0              ; El nº total de entidades no llena las 10 cajas DRAW. (Numero_parcial_de_entidades)=(Numero_de_entidades)
 214+ 88C0              ; (Numero_de_entidades)="0".
 215+ 88C0
 216+ 88C0 32 0E 89     1 ld (Numero_parcial_de_entidades),a
 217+ 88C3 47           	ld b,a
 218+ 88C4 C9           2 ret
# file closed: Niveles.asm
  62  88C5
  63  88C5              ; ******************************************************************************************************************************************************************************************
  64  88C5              ; Constantes.
  65  88C5              ; ******************************************************************************************************************************************************************************************
  66  88C5              ;
  67  88C5              ; 4/9/23
  68  88C5              ;
  69  88C5              ; Constantes generales.
  70  88C5              ;
  71  88C5
  72  88C5              Sprite_vacio equ $f000
  73  88C5              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
  74  88C5              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
  75  88C5              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
  76  88C5              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
  77  88C5
  78  88C5              Album_de_fotos equ $7000	;	(7000h - 7053h).		; En (Album_de_fotos) vamos a ir almacenando los valores_
  79  88C5              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
  80  88C5              ;                               				        ; De momento situamos este almacén en $7000. La capacidad del album será de 7 entidades.
  81  88C5              Album_de_fotos_disparos equ $7150 ; (7150h - 71a3).		; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
  82  88C5              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
  83  88C5              ;
  84  88C5              Album_de_fotos_1 equ $7054	; (7054h - 700a7).
  85  88C5              Album_de_fotos_disparos_1 equ $71a4	; (71a4h - 71f7h).
  86  88C5              Album_de_fotos_2 equ $70a8	; (70a8h - 70fbh).
  87  88C5              Album_de_fotos_disparos_2 equ $71f8	; (71f8hh - 724bh).
  88  88C5              Album_de_fotos_3 equ $70fc	; (70fch - 714fh).
  89  88C5              Album_de_fotos_disparos_3 equ $724c	; (724ch - 729fh).
  90  88C5
  91  88C5              Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
  92  88C5
  93  88C5              ; 54h es el espacio necesario en (Album_de_fotos) para 7 entidades/disparos en pantalla.
  94  88C5
  95  88C5              ; ******************************************************************************************************************************************************************************************
  96  88C5              ; Variables.
  97  88C5              ; ******************************************************************************************************************************************************************************************
  98  88C5              ;
  99  88C5              ; 28/07/23
 100  88C5              ;
 101  88C5              ; Variables de DRAW. (Motor principal).
 102  88C5              ;
 103  88C5              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 104  88C5
 105  88C5 00           Filas db 0												; Filas. [DRAW]
 106  88C6 00           Columns db 0  											; Nº de columnas. [DRAW]
 107  88C7 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 108  88C9 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 109  88CB 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 110  88CC 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 111  88CD
 112  88CD              ; ---------- ---------- ---------- ---------;      ;--------- ---------- ---------- ----------
 113  88CD
 114  88CD 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 115  88CE              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 116  88CE              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 117  88CE 00           Attr db 0												; Atributos de la entidad:
 118  88CF
 119  88CF              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 120  88CF              ;
 121  88CF              ;	COLORES: 0 ..... NEGRO
 122  88CF              ;    		 1 ..... AZUL
 123  88CF              ; 			 2 ..... ROJO
 124  88CF              ;			 3 ..... MAGENTA
 125  88CF              ; 			 4 ..... VERDE
 126  88CF              ; 			 5 ..... CIAN
 127  88CF              ;			 6 ..... AMARILLO
 128  88CF              ; 			 7 ..... BLANCO
 129  88CF
 130  88CF 00 00        Indice_Sprite_der defw 0
 131  88D1 00 00        Indice_Sprite_izq defw 0
 132  88D3 00 00        Puntero_DESPLZ_der defw 0
 133  88D5 00 00        Puntero_DESPLZ_izq defw 0
 134  88D7
 135  88D7 00 00        Posicion_inicio defw 0									; Dirección de pantalla donde aparece el objeto. [DRAW].
 136  88D9 00           Cuad_objeto db 0										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 137  88DA
 138  88DA              ; Variables de objeto. (Características).
 139  88DA
 140  88DA 00           Vel_left db 0 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 141  88DB 00           Vel_right db 0 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 142  88DC 00           Vel_up db 0 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 143  88DD 00           Vel_down db 0 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 144  88DE
 145  88DE 00           Impacto db 0											; Si después del movimiento de la entidad, (Impacto) se coloca a "1",_
 146  88DF              ;														; _ existen muchas posibilidades de que esta entidad haya colisionado con Amadeus.
 147  88DF              ; 														; Hay que comprobar la posible colisión después de mover Amadeus. En este caso, (Impacto2)="3".
 148  88DF 00 00 00...  Variables_de_borrado ds 6
 149  88E5
 150  88E5 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 151  88E7 00 00        	defw 0
 152  88E9 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 153  88EB 00 00 00 00  	db 0,0,0,0
 154  88EF
 155  88EF              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
 156  88EF
 157  88EF 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
 158  88F0              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
 159  88F0              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
 160  88F0              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
 161  88F0              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
 162  88F0              ;
 163  88F0              ; 														DESCRIPCIÖN:
 164  88F0              ;
 165  88F0              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
 166  88F0              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
 167  88F0              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
 168  88F0              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
 169  88F0              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
 170  88F0              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
 171  88F0              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
 172  88F0              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
 173  88F0              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
 174  88F0              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
 175  88F0              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
 176  88F0              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
 177  88F0              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
 178  88F0              ;
 179  88F0              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
 180  88F0              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
 181  88F0              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
 182  88F0
 183  88F0 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
 184  88F1
 185  88F1              ; Movimiento. ------------------------------------------------------------------------------------------------------
 186  88F1
 187  88F1 00           Autoriza_movimiento db 0                                ; "1" Autoriza el movimiento de la entidad. "0", no hay movimiento.
 188  88F2 00 00        Puntero_indice_mov defw 0							    ; Puntero índice del patrón de movimiento de la entidad. "0" No hay movimiento.
 189  88F4 00 00        Puntero_mov defw 0										; Guarda la posición de memoria en la que nos encontramos dentro de la cadena de movimiento.
 190  88F6 00 00        Puntero_indice_mov_bucle defw 0							;
 191  88F8              ;
 192  88F8              ;
 193  88F8 00           Incrementa_puntero db 0									; Byte que iremos sumando a (Puntero_indice_mov) para ir escalando por las_
 194  88F9              ;														; _ distintas cadenas de movimiento del índice de movimiento de la entidad._
 195  88F9              ;														; Va aumentando su valor en saltos de 2 uds, (0,2,4,6,8).
 196  88F9 00           Incrementa_puntero_backup db 0
 197  88FA 00           Repetimos_desplazamiento db 0							; El nibble bajo del 3er byte que compone un desplazamiento, indica el nº de veces que_
 198  88FB              ;														; repetimos dicho desplazamiento. Ese valor se almacena en esta variable, ($1-$f). NUNCA SERÁ "0".
 199  88FB 00           Repetimos_desplazamiento_backup db 0					; Restaura (Repetimos_desplazamiento) cuando este llega a "0".
 200  88FC 00           Repetimos_movimiento db 0								; Byte que indica el nº de veces que repetimos el último MOVIMIENTO.
 201  88FD 00           Cola_de_desplazamiento db 0								; Este byte indica:
 202  88FE              ;
 203  88FE              ;														;	"$00" ..... Hemos finalizado la cadena de movimiento.
 204  88FE              ;														;				En este caso hemos de incrementar (Puntero_indice_mov)_
 205  88FE              ;														;				_ y pasar a la siguiente cadena de movimiento del índice.
 206  88FE              ;
 207  88FE              ;														;	"$01 - "$fe" ..... Repetición del movimiento.
 208  88FE              ;														;						Nº de veces que vamos a repetir el movimiento completo.
 209  88FE              ;														;						En este caso, volveremos a inicializar (Puntero_mov),_
 210  88FE              ;														;						_ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
 211  88FE              ;
 212  88FE              ;														;	"$ff" ..... Bucle infinito de repetición.
 213  88FE              ;														;				Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
 214  88FE              ;														;				,_ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
 215  88FE
 216  88FE
 217  88FE              ; Variables de funcionamiento. [DRAW].
 218  88FE
 219  88FE 00           Columnas db 0
 220  88FF 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
 221  8901              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 222  8901 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
 223  8902
 224  8902              ; variables de control general.
 225  8902
 226  8902 00           Ctrl_2 db 0
 227  8903              ;														BIT 0, Los sprites se inician con un `sprite vacío', (sprite formado por "ceros"), cuando la rutina_
 228  8903              ;															_ [Guarda_foto_registros] guarda su 1ª imagen.
 229  8903              ;															_ Más adelante las rutinas [Mov_left] y [Mov_right] restauraran (Puntero_objeto). Si el 1er movimiento
 230  8903              ; 															_ que hace la entidad después de iniciarse es hacia arriba/abajo no se restaurará (Puntero_objeto), pués_
 231  8903              ; 															_ las rutinas [Mov_up] y [Mov_down] no necesitan modificar el sprite.
 232  8903              ;															_ El bit5 a "1" nos indica que el sprite se inicia por arriba o por abajo y por lo tanto hay que restaurar_
 233  8903              ;															_ (Puntero_objeto) con (Repone_puntero_objeto) una vez iniciado y realizada su 1ª `foto'.
 234  8903              ;
 235  8903              ;														BIT 1, Este bit a "1" indica que se ha iniciado el proceso de EXPLOSIÓN en una entidad.
 236  8903              ;														BIT 2, Este bit es activado por [Movimiento]. Indica que hemos `iniciado un desplazamiento'._
 237  8903              ;															_ Evita que volvamos a iniciar el desplazamiento cada vez que ejecutemos [Movimiento].
 238  8903              ;														BIT 3, Indica que (Cola_de_desplazamiento)="254". Esto quiere decir que repetiremos (1-255 veces),_
 239  8903              ;															_ el último MOVIMIENTO que hayamos ejecutado.
 240  8903
 241  8903 00           Frames_explosion db 0 									; Nº de Frames que tiene la explosión.
 242  8904
 243  8904              ;! 63 Bytes por entidad.
 244  8904
 245  8904              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
 246  8904              ;					         		---------;      ;---------
 247  8904
 248  8904
 249  8904              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
 250  8904
 251  8904 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
 252  8905
 253  8905              ;														DESCRIPCIÓN:
 254  8905              ;
 255  8905              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
 256  8905              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
 257  8905              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
 258  8905              ;														BIT 1, Este bit indica que el disparo sale de la pantalla, ($4000-$57ff).
 259  8905              ;														BIT 2, Este bit a "1" indica que un disparo de Amadeus ha alcanzado a una entidad. Como no sabemos cual,_
 260  8905              ;															_ hemos de comparar las coordenadas de (Coordenadas_disparo_certero) con las de cada entidad.
 261  8905
 262  8905              ;														BIT 3, Recarga de nueva oleada.
 263  8905              ;														BIT 4, Recarga de nueva oleada.
 264  8905              ;														BIT 5, **** Buffer lleno. Aplico HALT.
 265  8905              ;														BIT 6, **** Frame completo.
 266  8905              ;														BIT 7, Indica que ya está tomada la foto de Amadeus. No tomaremos otra hasta el próximo FRAME.
 267  8905
 268  8905 00 00        Repone_puntero_objeto defw 0							; Almacena (Puntero_objeto). Cuando el Sprite se inicia por arriba o por abajo,_
 269  8907              ; 														; _ hay que sustituirlo por un `sprite vacío' para que no se vea el 1er o último scanline.
 270  8907              ; 														; _ Cuando hemos terminado de iniciarlo y guardado su foto, hemos de recuperar su (Puntero_objeto).
 271  8907              ;														; (Repone_puntero_objeto) es una copia de respaldo de (Puntero_objeto) y su función es restaurarlo.
 272  8907
 273  8907
 274  8907
 275  8907              ; Gestión de ENTIDADES y CAJAS.
 276  8907
 277  8907 00 00        Puntero_store_caja defw 0
 278  8909 00 00        Puntero_restore_caja defw 0
 279  890B 00 00        Indice_restore_caja defw 0
 280  890D 00           Numero_de_entidades db 0								; Nº de entidades en pantalla, (contando con Amadeus).
 281  890E 00           Numero_parcial_de_entidades db 0
 282  890F 00           Entidades_en_curso db 0									; ..... ..... .....
 283  8910 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
 284  8911              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
 285  8911              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
 286  8911              ;														; _ (Numero_de_malotes)="0".
 287  8911 00 00        Puntero_indice_ENTIDADES defw 0 						; Se desplazará por el índice de entidades para `meterlas' en cajas.
 288  8913 00 00        Datos_de_entidad defw 0									; Contiene los bytes de información de la entidad hacia la que apunta el
 289  8915              ;														; _ puntero (Indice_entidades).
 290  8915
 291  8915
 292  8915              ;---------------------------------------------------------------------------------------------------------------
 293  8915              ;
 294  8915              ;	2/9/23
 295  8915              ;
 296  8915              ;	Álbumes.
 297  8915
 298  8915 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
 299  8917              ;														; _variable para almacenar lo posición del puntero_
 300  8917              ; 														; _de pila, SP.
 301  8917 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
 302  8919              ;														; La utiliza la rutina [Extrae_foto_registros].
 303  8919 00 00        Stack_3 defw 0											; Almacena el SP antes de ejecutar FRAME.
 304  891B 00 00        Stack_snapshot defw 0
 305  891D 00 00        Stack_snapshot_disparos defw 0
 306  891F
 307  891F 00 00        End_Snapshot defw 0
 308  8921              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
 309  8921 00 00        End_Snapshot_disparos defw 0							; Puntero que indica la posición de memoria donde vamos a guardar_
 310  8923              ;														; _el snapshot de los registros del siguiente disparo.
 311  8923              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
 312  8923 A0 72        End_Snapshot_Amadeus defw Album_de_fotos_Amadeus
 313  8925 00 00        End_Snapshot_1 defw 0
 314  8927 00 00        End_Snapshot_disparos_1 defw 0
 315  8929 00 00        End_Snapshot_2 defw 0
 316  892B 00 00        End_Snapshot_disparos_2 defw 0
 317  892D 00 00        End_Snapshot_3 defw 0
 318  892F 00 00        End_Snapshot_disparos_3 defw 0
 319  8931
 320  8931 00 00        Puntero_indice_album_de_fotos defw 0
 321  8933 00 00        Puntero_indice_album_de_fotos_disparos defw 0
 322  8935
 323  8935 00 00        Puntero_indice_End_Snapshot defw 0
 324  8937 00 00        Puntero_indice_End_Snapshot_disparos defw 0
 325  8939 00 00        Puntero_de_End_Snapshot defw 0
 326  893B 00 00        Puntero_de_End_Snapshot_disparos defw 0
 327  893D
 328  893D              ;---------------------------------------------------------------------------------------------------------------
 329  893D
 330  893D              ; Gestión de Disparos.
 331  893D
 332  893D 00           Numero_de_disparotes db 0
 333  893E 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
 334  8940 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
 335  8942 00           Impacto2 db 0											; Este byte indica que se ha producido impacto:
 336  8943              ; 														; (Impacto)="1". El impacto se produce en una entidad.
 337  8943              ;														; (Impacto)="2". El impacto se produce en Amadeus.
 338  8943 00 00        Entidad_sospechosa_de_colision defw 0					; Almacena la dirección de memoria donde se encuentra el .db_
 339  8945              ;														; _(Impacto) de la entidad que ocupa el mismo espacio que Amadeus.
 340  8945              ;														; Necesitaremos poner a "0" este .db en el caso de que finalmente no se_
 341  8945              ;														; _produzca colisión.
 342  8945 00 00        Coordenadas_disparo_certero ds 2						; Almacenamos aquí las coordenadas del disparo que ha alcanzado a Amadeus.
 343  8947              ;											            ; (Coordenadas_disparo_certero)=Y ..... (Coordenadas_disparo_certero +1)=X.
 344  8947 00 00 00     Coordenadas_X_Amadeus ds 3								; 3 Bytes reservados para almacenar las 3 posibles columnas_
 345  894A              ;														; _ que puede ocupar el sprite de Amadeus. (Colisión).
 346  894A 00 00 00     Coordenadas_X_Entidad ds 3  							; 3 Bytes reservados para almacenar las 3 posibles columnas_
 347  894D              ;														; _ que puede ocupar el sprite de una entidad. (Colisión).
 348  894D 00 00        Puntero_de_impresion_Amadeus defw 0						; Lo utilizaremos en la rutina de colisiones.
 349  894F 02           Velocidad_disparo_entidades db 2	  					; Nº de scanlines, (NextScan) que avanza el disparo de las entidades.
 350  8950
 351  8950              ;---------------------------------------------------------------------------------------------------------------
 352  8950
 353  8950              ; Relojes y temporizaciones.
 354  8950
 355  8950 00           Contador_de_frames db 0
 356  8951 00           Contador_de_frames_2 db 0
 357  8952
 358  8952 04           Clock_explosion db 4
 359  8953 1E           Clock_Entidades_en_curso db 30
 360  8954 00           Activa_recarga_cajas db 0								; Esta señal espera (Secundero)+X para habilitar el Loop.
 361  8955              ;														; Repite la oleada de entidades.
 362  8955 01           Disparo_Amadeus db 1									; A "1", se puede generar disparo.
 363  8956 1E           CLOCK_repone_disparo_Amadeus_BACKUP db 30				; Restaura (CLOCK_repone_disparo_Amadeus).
 364  8957 1E           CLOCK_repone_disparo_Amadeus db 30 						; Reloj, decreciente.
 365  8958
 366  8958 01           Disparo_entidad db 1									; A "1", se puede generar disparo.
 367  8959 14           CLOCK_repone_disparo_entidad_BACKUP db 20				; Restaura (CLOCK_repone_disparo_entidad).
 368  895A 14           CLOCK_repone_disparo_entidad db 20						; Reloj, decreciente.
 369  895B
 370  895B              ;---------------------------------------------------------------------------------------------------------------
 371  895B
 372  895B              ; Gestión de NIVELES.
 373  895B
 374  895B 00           Nivel db 0												; Nivel actual del juego.
 375  895C 00 00        Puntero_indice_NIVELES defw 0
 376  895E 00 00        Datos_de_nivel defw 0									; Este puntero se va desplazando por los distintos bytes_
 377  8960              ; 														; _ que definen el NIVEL.
 378  8960              ; Y todo comienza aquí .....
 379  8960              ;
 380  8960              ; Rutina principal *************************************************************************************************************************************************************************
 381  8960              ;
 382  8960              ;	14/11/22
 383  8960
 384  8960              START
 385  8960
 386  8960 31 FF FF     	ld sp,$ffff											; Situamos el inicio de Stack.
 387  8963 3E A9        	ld a,$a9 											; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a9ff
 388  8965 ED 47        	ld i,a 												; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($a9). El byte bajo será siempre $ff.
 389  8967 ED 5E        	IM 2 											    ; Habilitamos el modo 2 de INTERRUPCIONES.
 390  8969 F3           	DI
 391  896A
 392  896A 3E 07        	ld a,%00000111
 393  896C CD D3 99     	call Cls
 394  896F
 395  896F CD B8 8D     	call Pulsa_ENTER									 ; PULSA ENTER para disparar el programa.
 396  8972
 397  8972              ; INICIALIZACIÓN.
 398  8972
 399  8972 CD 0F 88     	call Inicializa_Punteros_de_nivel					 ; Inicializa. 1er NIVEL.
 400  8975
 401  8975 CD 21 88     4 call Prepara_cajas 									 ; (Niveles.asm).
 402  8978
 403  8978 CD E1 8B     	call Inicia_punteros_de_cajas 						 ; Sitúa (Puntero_store_caja) en la 1ª entidad del_
 404  897B              ;														 ; _ índice y (Puntero_restore-entidades) en la 2ª.
 405  897B CD F7 8B     	call Inicia_punteros_de_albumes_y_malotes			 ; Iniciamos los punteros de los álbumes de fotos y cajas de_
 406  897E              ;													     ; _ malotes antes de guardar ninguna foto.
 407  897E              ; ----------
 408  897E
 409  897E CD 68 8D     	call Restore_entidad
 410  8981
 411  8981 21 0E 89     	ld hl,Numero_parcial_de_entidades
 412  8984 46           	ld b,(hl)
 413  8985 04           	inc b
 414  8986 05           	dec b
 415  8987 28 0E        	jr z,3F										   		 ; Si no hay entidades, cargamos AMADEUS.
 416  8989
 417  8989              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_Puntero_objeto).
 418  8989              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
 419  8989              ;	Pintamos el resto de entidades:
 420  8989
 421  8989              ;	INICIA ENTIDADES !!!!!
 422  8989
 423  8989 C5           1 push bc  												; Guardo el contador de entidades.
 424  898A CD 84 8B     	call Inicia_entidad
 425  898D C1           	pop bc
 426  898E 10 F9        	djnz 1B  											; Decremento el contador de entidades.
 427  8990
 428  8990              ; Si Amadeus ya está iniciado, saltamos a [Inicia_punteros_de_cajas] y [Restore_entidad].
 429  8990              ; (Esto se dá cuando se inicia una nueva oleada).
 430  8990
 431  8990 3A 04 89     	ld a,(Ctrl_1)
 432  8993 CB 5F        	bit 3,a
 433  8995 20 15        	jr nz,5F											; Loop
 434  8997
 435  8997              ; 	INICIA AMADEUS !!!!!
 436  8997
 437  8997 CD 8F 8D     3 call Restore_Amadeus
 438  899A CD E5 8C     	call Inicia_Puntero_objeto
 439  899D CD C6 93     	call Draw
 440  89A0 CD A0 7F     	call Guarda_foto_registros
 441  89A3 CD 1E 8E     	call Guarda_datos_de_borrado_Amadeus
 442  89A6
 443  89A6 11 9E 85     	ld de,Amadeus_db
 444  89A9 CD A1 8D     	call Store_Amadeus
 445  89AC
 446  89AC              ; 	INICIA DISPAROS !!!!!
 447  89AC
 448  89AC              ;	call Inicia_Puntero_Disparo_Entidades
 449  89AC              ;	call Inicia_Puntero_Disparo_Amadeus
 450  89AC
 451  89AC              ; Una vez inicializadas las entidades y Amadeus, Cargamos la 1ª entidad en DRAW.
 452  89AC
 453  89AC CD E1 8B     5 call Inicia_punteros_de_cajas
 454  89AF CD 68 8D     	call Restore_entidad
 455  89B2
 456  89B2 3A 04 89     	ld a,(Ctrl_1)
 457  89B5 CB 5F        	bit 3,a
 458  89B7 28 07        	jr z,6F
 459  89B9
 460  89B9              ; Se ha producido `RECARGA' de las cajas DRAW, RES 3(HL).
 461  89B9
 462  89B9 21 04 89     	ld hl,Ctrl_1
 463  89BC CB 9E        	res 3,(hl)
 464  89BE 18 04        	jr Main
 465  89C0
 466  89C0
 467  89C0              ; En este punto tenemos el 1er FRAME preparado. Los datos del FRAME se encuentran en Album_de_fotos.
 468  89C0              ; Después del guardado de cada FRAME hemos de llamar a [Avanza_puntero_de_album_de_fotos_y_malotes]_
 469  89C0              ; _ para situarnos en el siguiente album.
 470  89C0
 471  89C0 CD 28 8C     6 call Avanza_puntero_de_album_de_fotos_y_malotes
 472  89C3 F3           	di
 473  89C4
 474  89C4              ; ------------------------------------
 475  89C4
 476  89C4              Main
 477  89C4              ;
 478  89C4              ;	3/8/23
 479  89C4
 480  89C4 3E 01            ld a,1
 481  89C6 D3 FE        	out ($fe),a											; Azul.
 482  89C8
 483  89C8 FB           	ei
 484  89C9
 485  89C9 3A 53 89     	ld a,(Clock_Entidades_en_curso)						; Inicialmente, (Clock_Entidades_en_curso)="30".
 486  89CC 47           	ld b,a
 487  89CD 3A 50 89     	ld a,(Contador_de_frames)
 488  89D0 B8           	cp b
 489  89D1 20 18        	jr nz,13F
 490  89D3
 491  89D3 3A 0E 89     	ld a,(Numero_parcial_de_entidades)
 492  89D6 47           	ld b,a
 493  89D7 3A 0F 89     	ld a,(Entidades_en_curso)
 494  89DA B8           	cp b
 495  89DB 28 0E        	jr z,13F
 496  89DD 30 0C        	jr nc,13F
 497  89DF
 498  89DF 3C           	inc a
 499  89E0 32 0F 89     	ld (Entidades_en_curso),a
 500  89E3
 501  89E3 3A 53 89     	ld a,(Clock_Entidades_en_curso)
 502  89E6
 503  89E6              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 504  89E6              ;! _ IMPREDECIBLE !!!!
 505  89E6
 506  89E6 C6 64        	add 100
 507  89E8 32 53 89     	ld (Clock_Entidades_en_curso),a
 508  89EB
 509  89EB              ; Habilita disparos.
 510  89EB
 511  89EB 21 55 89     13 ld hl,Disparo_Amadeus
 512  89EE 11 57 89     	ld de,CLOCK_repone_disparo_Amadeus
 513  89F1 CD 97 9D     	call Habilita_disparos 								; 30 Frames como mínimo entre cada disparo de Amadeus.
 514  89F4
 515  89F4 21 58 89     	ld hl,Disparo_entidad 								; El nº de frames mínimo entre disparos de entidad será_
 516  89F7 11 5A 89     	ld de,CLOCK_repone_disparo_entidad 					; _ variable y variará en función de la dificultad.
 517  89FA CD 97 9D     	call Habilita_disparos
 518  89FD
 519  89FD              ; COLISIONES.
 520  89FD
 521  89FD CD A8 92     	call Selector_de_impactos							; Analizamos el contenido de (Impacto2).
 522  8A00
 523  8A00              ; Bit 0 a "1" Impacto en entidad por disparo. ($01)
 524  8A00              ; Bit 1 a "1" Impacto en Amadeus por disparo. ($02)
 525  8A00              ; Bit 2 a "1" Colisión de Amadeus con entidad, (sin disparo). ($04)
 526  8A00
 527  8A00 AF           	xor a
 528  8A01 32 42 89     	ld (Impacto2),a										; Flag (Impacto2) a "0".
 529  8A04
 530  8A04 CD E1 8B     	call Inicia_punteros_de_cajas
 531  8A07 CD 68 8D     12 call Restore_entidad 								; Vuelca los datos de la entidad, hacia la que apunta (Puntero_store_caja),_
 532  8A0A              ; 														; _ en DRAW.
 533  8A0A 3A C5 88     	ld a,(Filas)
 534  8A0D A7           	and a
 535  8A0E 20 05        	jr nz,10F 											; Nos situamos en la 1ª entidad NO VACÍA del índice de ENTIDADES.
 536  8A10 CD 7A 8D     	call Incrementa_punteros_de_cajas
 537  8A13 18 F2        	jr 12B
 538  8A15
 539  8A15              ; ---------------------------------------------------------------------------------------
 540  8A15
 541  8A15 3A 0E 89     10 ld a,(Numero_parcial_de_entidades)
 542  8A18 47               ld b,a
 543  8A19 A7           	and a
 544  8A1A 20 14        	jr nz,11F
 545  8A1C
 546  8A1C 21 04 89     	ld hl,Ctrl_1
 547  8A1F CB 66        	bit 4,(hl)
 548  8A21 C2 B7 8A     	jp nz,16F
 549  8A24
 550  8A24 21 04 89     	ld hl,Ctrl_1
 551  8A27 CB DE        	set 3,(hl)											; Señal de RECARGA de las cajas DRAW activada. NUEVA OLEADA !!!!!!!!
 552  8A29
 553  8A29 3A 50 89     	ld a,(Contador_de_frames)
 554  8A2C 3C           	inc a
 555  8A2D 32 54 89     	ld (Activa_recarga_cajas),a
 556  8A30
 557  8A30              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 558  8A30
 559  8A30 3A 0F 89     11 ld a,(Entidades_en_curso)
 560  8A33 A7           	and a
 561  8A34 CA B7 8A     	jp z,16F											; Si no hay entidades en curso, RESTORE AMADEUS.
 562  8A37 47           	ld b,a												; (Entidades_en_curso) en A´ y B.
 563  8A38
 564  8A38              ; Código que ejecutamos con cada entidad:
 565  8A38              ;	--------------------------------------- GESTIÓN DE ENTIDADES. !!!!!!!!!!
 566  8A38
 567  8A38 C5           15 push bc 												; Nº de entidades en curso.
 568  8A39
 569  8A39              ; Impacto ???
 570  8A39
 571  8A39 3A DE 88     	ld a,(Impacto)
 572  8A3C A7           	and a
 573  8A3D 28 2D        	jr z,8F
 574  8A3F
 575  8A3F              ; Hay Impacto en esta entidad.
 576  8A3F
 577  8A3F 21 52 89     	ld hl,Clock_explosion								; _ a gestionar la siguiente entidad, JR 6F.
 578  8A42 35           	dec (hl)
 579  8A43 20 6C        	jr nz,17F
 580  8A45
 581  8A45              ;! Velocidad de la animación de la explosión.
 582  8A45
 583  8A45 36 04        	ld (hl),4 											; Reiniciamos el temporizador de la explosión,_
 584  8A47              ;														; _,(velocidad de la explosión).
 585  8A47 CD 98 8B     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la entidad `impactada´ para borrarla.
 586  8A4A
 587  8A4A              ;!!!!!! Desintegración/Explosión!!!!!!!!!!!
 588  8A4A
 589  8A4A 3A 02 89     	ld a,(Ctrl_2)
 590  8A4D CB 4F        	bit 1,a
 591  8A4F 20 3D        	jr nz,7F											; Se han iniciado los punteros de explosión???
 592  8A51
 593  8A51              ; Inicialización del proceso de explosión. Omitimos si ya hemos imprimido el 1er FRAME de la explosión.
 594  8A51
 595  8A51 3A CD 88     	ld a,(CTRL_DESPLZ)
 596  8A54 A7           	and a
 597  8A55 20 08        	jr nz,18F
 598  8A57
 599  8A57 21 84 84     	ld hl,Indice_Explosion_2x2-2
 600  8A5A 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 601  8A5D 18 06        	jr 19F
 602  8A5F
 603  8A5F 21 EE 83     18 ld hl,Indice_Explosion_2x3-2
 604  8A62 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 605  8A65
 606  8A65 21 02 89     19 ld hl,Ctrl_2											; Activamos el proceso de explosión.
 607  8A68 CB CE        	set 1,(hl)
 608  8A6A 18 22        	jr 7F
 609  8A6C
 610  8A6C              ; Si el bit2 de (Ctrl_1) está alzado, "1", hemos de comparar (Coordenadas_disparo_certero)_
 611  8A6C              ; _con las coordenadas de la entidad almacenada en DRAW.
 612  8A6C
 613  8A6C 3A 04 89     8 ld a,(Ctrl_1)
 614  8A6F CB 57        	bit 2,a
 615  8A71 28 1B        	jr z,7F
 616  8A73
 617  8A73 2A 45 89     	ld hl,(Coordenadas_disparo_certero)
 618  8A76 EB           	ex de,hl 											; D contiene la coordenada_y del disparo.
 619  8A77              ;														; E contiene la coordenada_X del disparo.
 620  8A77 2A CB 88     	ld hl,(Coordenada_X) 								; L COLUMNA (Coordenada_x de la entidad).
 621  8A7A              ;														; H FILA, (Coordenada_y de la entidad).
 622  8A7A A7           	and a
 623  8A7B ED 52        	sbc hl,de
 624  8A7D
 625  8A7D CD DF 92     	call Determina_resultado_comparativa
 626  8A80
 627  8A80 78           	ld a,b
 628  8A81 A7           	and a
 629  8A82 28 0A        	jr z,7F												; B="0" significa que esta entidad no es la impactada.
 630  8A84
 631  8A84              ; ----- ----- -----
 632  8A84
 633  8A84 3E 01        	ld a,1												; Esta entidad ha sido alcanzada por un disparo_
 634  8A86 32 DE 88     	ld (Impacto),a 										; _de Amadeus. Lo indicamos activando su .db (Impacto).
 635  8A89
 636  8A89 21 04 89     	ld hl,Ctrl_1
 637  8A8C CB 96        	res 2,(hl)
 638  8A8E
 639  8A8E CD 13 8B     7 call Mov_obj											; MOVEMOS y decrementamos (Numero_de_malotes)
 640  8A91
 641  8A91 3A EF 88     	ld a,(Ctrl_0)
 642  8A94 CB 67        	bit 4,a
 643  8A96 28 19        	jr z,17F                                       	    ; Omitimos BORRAR/PINTAR si no hay movimiento.
 644  8A98
 645  8A98              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
 646  8A98              ; [[[
 647  8A98 CD 03 8E     	call Detecta_disparo_entidad
 648  8A9B              ; ]]]
 649  8A9B
 650  8A9B
 651  8A9B
 652  8A9B              ; 18/09/23 ..... 9:30
 653  8A9B              ;! Debuggg
 654  8A9B F3           	di
 655  8A9C 3A 50 89     	ld a,(Contador_de_frames)
 656  8A9F 18 FE        	jr $
 657  8AA1 FB           	ei
 658  8AA2              ;! Debuggg
 659  8AA2
 660  8AA2
 661  8AA2
 662  8AA2
 663  8AA2 CD A8 8B     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
 664  8AA5 CD 09 8E     	call Guarda_datos_de_borrado
 665  8AA8
 666  8AA8 21 EF 88     	ld hl,Ctrl_0
 667  8AAB CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 668  8AAD AF           	xor a
 669  8AAE 32 F0 88     	ld (Obj_dibujado),a
 670  8AB1
 671  8AB1 CD 2D 8D     17 call Store_Restore_cajas
 672  8AB4
 673  8AB4 C1           	pop bc
 674  8AB5 10 81        	djnz 15B
 675  8AB7
 676  8AB7              ;! Activando estas líneas podemos habilitar 2 explosiones en el mismo FRAME.
 677  8AB7              ; Hemos gestionado todas las unidades.
 678  8AB7              ; Desactivamos el flag de impacto en entidad por disparo de amadeus.
 679  8AB7
 680  8AB7              ;	ld hl,Ctrl_1
 681  8AB7              ;	res 2,(hl)
 682  8AB7
 683  8AB7 CD 28 8C     16 call Avanza_puntero_de_album_de_fotos_y_malotes		; Cuando estamos dentro del FRAME RATE, esperamos dentro_
 684  8ABA              ;														; _ de esta rutina a que se produzca la llamada a la rutina de_
 685  8ABA              ;														; _ interrupción.
 686  8ABA              ; ----------------------------------------
 687  8ABA
 688  8ABA 3A 04 89     	ld a,(Ctrl_1) 										; Existe Loop?
 689  8ABD CB 5F        	bit 3,a												; Si este bit es "1". Hay recarga de nueva oleada.
 690  8ABF CA C4 89     	jp z,Main
 691  8AC2
 692  8AC2 3A 50 89     	ld a,(Contador_de_frames)
 693  8AC5 47           	ld b,a
 694  8AC6 3A 54 89     	ld a,(Activa_recarga_cajas)
 695  8AC9 B8           	cp b
 696  8ACA 28 08        	jr z,20F
 697  8ACC
 698  8ACC 21 04 89     	ld hl,Ctrl_1
 699  8ACF CB E6        	set 4,(hl)
 700  8AD1 C3 C4 89     	jp Main
 701  8AD4
 702  8AD4 21 04 89     20 ld hl,Ctrl_1
 703  8AD7 CB A6        	res 4,(hl)
 704  8AD9
 705  8AD9 F3           	di
 706  8ADA
 707  8ADA 3A 50 89     	ld a,(Contador_de_frames)
 708  8ADD
 709  8ADD              ;! Este valor ha de ser pseudo-aleatorio. El tiempo de aparición de cada entidad ha de ser parecido, pero_
 710  8ADD              ;! _ IMPREDECIBLE !!!!
 711  8ADD
 712  8ADD C6 0A        	add 10
 713  8ADF 32 53 89     	ld (Clock_Entidades_en_curso),a
 714  8AE2
 715  8AE2 C3 75 89     	jp 4B
 716  8AE5
 717  8AE5 C9           	ret
 718  8AE6
 719  8AE6              ; ----- ----- ----- ----- ----- ---------- ----- ----- ----- ----- ----- ---------- -----
 720  8AE6
 721  8AE6              Gestiona_Amadeus
 722  8AE6
 723  8AE6 3E 04            ld a,4
 724  8AE8 D3 FE        	out ($fe),a											; Azul.
 725  8AEA
 726  8AEA
 727  8AEA CD 8F 8D     	call Restore_Amadeus
 728  8AED
 729  8AED              ;! Activa/desactiva impacto con Amadeus.
 730  8AED
 731  8AED 3A DE 88     	ld a,(Impacto)
 732  8AF0 A7           	and a
 733  8AF1 20 FE        	jr nz,$
 734  8AF3
 735  8AF3 CD 6C 8B     	call Mov_Amadeus
 736  8AF6
 737  8AF6 3A EF 88     	ld a,(Ctrl_0)
 738  8AF9 CB 67        	bit 4,a
 739  8AFB 28 06        	jr z,14F                                            ; Omitimos BORRAR/PINTAR si no hay movimiento.
 740  8AFD
 741  8AFD CD A8 8B     	call Guarda_foto_entidad_a_pintar
 742  8B00 CD 1E 8E     	call Guarda_datos_de_borrado_Amadeus
 743  8B03
 744  8B03 21 EF 88     14 ld hl,Ctrl_0
 745  8B06 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
 746  8B08
 747  8B08 AF           	xor a
 748  8B09 32 F0 88     	ld (Obj_dibujado),a
 749  8B0C
 750  8B0C 11 9E 85     32 ld de,Amadeus_db 									; Antes de llamar a [Store_Amadeus], debemos cargar en DE_
 751  8B0F CD A1 8D     	call Store_Amadeus 									; _la dirección de memoria de la base de datos donde vamos a volcar.
 752  8B12
 753  8B12              ;	call Motor_de_disparos								; Borra/mueve/pinta cada uno de los disparos y crea un nuevo album de fotos.
 754  8B12
 755  8B12              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
 756  8B12
 757  8B12              ;	call Calcula_numero_de_disparotes
 758  8B12
 759  8B12 C9           	ret
 760  8B13
 761  8B13              ; --------------------------------------------------------------------------------------------------------------
 762  8B13              ;
 763  8B13              ;	27/05/23
 764  8B13
 765  8B13              Mov_obj
 766  8B13
 767  8B13 3A 02 89     	ld a,(Ctrl_2)
 768  8B16 CB 4F        	bit 1,a
 769  8B18 28 2E        	jr z,2F												; Se ha iniciado la EXPLOSIÓN???
 770  8B1A
 771  8B1A              ; Explosión:
 772  8B1A
 773  8B1A 3A 03 89     	ld a,(Frames_explosion)
 774  8B1D A7           	and a
 775  8B1E 20 11        	jr nz,4F
 776  8B20
 777  8B20              ; Una alimaña menos!!!!!!!!!1
 778  8B20
 779  8B20 CD AA 8D     	call Borra_datos_entidad							; Borramos todos los datos de la entidad.
 780  8B23 21 0E 89     	ld hl,Numero_parcial_de_entidades					; Una alimaña menos.
 781  8B26 35           	dec (hl)
 782  8B27 21 0F 89     	ld hl,Entidades_en_curso
 783  8B2A 35           	dec (hl)
 784  8B2B 21 0D 89     	ld hl,Numero_de_entidades
 785  8B2E 35           	dec (hl)
 786  8B2F 18 3A        	jr 3F
 787  8B31
 788  8B31              ; -----
 789  8B31
 790  8B31              ;	`Movemos´ la explosión.
 791  8B31
 792  8B31 2A D3 88     4 ld hl,(Puntero_DESPLZ_der)
 793  8B34 23           	inc hl
 794  8B35 23           	inc hl
 795  8B36 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 796  8B39 CD DF 8C     	call Extrae_address
 797  8B3C 22 C9 88     	ld (Puntero_objeto),hl
 798  8B3F
 799  8B3F 21 03 89     	ld hl,Frames_explosion
 800  8B42 35           	dec (hl)
 801  8B43
 802  8B43 CD 98 8B     	call Guarda_foto_entidad_a_borrar
 803  8B46 18 23        	jr 3F
 804  8B48
 805  8B48 AF           2 xor a
 806  8B49 32 EF 88     	ld (Ctrl_0),a 										; El bit4 de (Ctrl_0) puede estar alzado debido al movimiento de Amadeus.
 807  8B4C
 808  8B4C              ; Movemos Entidades malignas.
 809  8B4C
 810  8B4C CD 42 9F     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
 811  8B4F
 812  8B4F 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 813  8B52 CB 67        	bit 4,a
 814  8B54 C8           	ret z
 815  8B55
 816  8B55              ; Ha habido desplazamiento de la entidad maligna.
 817  8B55              ; Ha llegado a zona de AMADEUS ???
 818  8B55
 819  8B55 3A CC 88     	ld a,(Coordenada_y)
 820  8B58 FE 14        	cp $14
 821  8B5A D4 6D 90     	call nc,Compara_coordenadas_X 						; Si esta entidad ocupa alguna de las columnas que_
 822  8B5D              ;														; ocupa Amadeus, tendremos el .db (Impacto)="1".
 823  8B5D              ; ---------
 824  8B5D
 825  8B5D 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 826  8B5F 32 F0 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 827  8B62 CD B2 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 828  8B65
 829  8B65 CD 3E 8E     	call Repone_datos_de_borrado
 830  8B68 CD 81 8C     	call Limpia_Variables_de_borrado
 831  8B6B
 832  8B6B C9           3 ret													; _de la misma.
 833  8B6C
 834  8B6C              ; --------------------------------------------------------------------------------------------------------------
 835  8B6C              ;
 836  8B6C              ;	29/1/23
 837  8B6C
 838  8B6C              Mov_Amadeus
 839  8B6C
 840  8B6C CD CC 8D     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
 841  8B6F
 842  8B6F 3A EF 88     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
 843  8B72 CB 67        	bit 4,a
 844  8B74 C8           	ret z
 845  8B75
 846  8B75              ; ---------
 847  8B75
 848  8B75 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
 849  8B77 32 F0 88     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
 850  8B7A CD B2 8B         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
 851  8B7D
 852  8B7D CD 2E 8E     	call Repone_datos_de_borrado_Amadeus
 853  8B80 CD 81 8C     	call Limpia_Variables_de_borrado
 854  8B83
 855  8B83 C9           	ret
 856  8B84
 857  8B84              ; -----------------------------------------------------------------------------------
 858  8B84
 859  8B84 CD E5 8C     Inicia_entidad	call Inicia_Puntero_objeto
 860  8B87 CD E7 99     	call Recompone_posicion_inicio
 861  8B8A CD C6 93     	call Draw
 862  8B8D CD A0 7F     	call Guarda_foto_registros
 863  8B90 CD 09 8E     	call Guarda_datos_de_borrado
 864  8B93 F3           	di
 865  8B94 CD 2D 8D     	call Store_Restore_cajas	 					    ; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_caja) en la siguiente.
 866  8B97 C9           	ret
 867  8B98
 868  8B98              ; --------------------------------------------------------------------------------------------------------------
 869  8B98              ;
 870  8B98              ;	31/8/23
 871  8B98              ;
 872  8B98              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
 873  8B98
 874  8B98              Guarda_foto_entidad_a_borrar
 875  8B98
 876  8B98 CD AA 96     	call Prepara_draw
 877  8B9B CD DA 95     	call calcula_CColumnass
 878  8B9E CD 11 96     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 879  8BA1 CD 70 96     	call Define_rutina_de_impresion
 880  8BA4 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 881  8BA7 C9           	ret
 882  8BA8
 883  8BA8              ; --------------------------------------------------------------------------------------------------------------
 884  8BA8              ;
 885  8BA8              ;	31/08/23
 886  8BA8              ;
 887  8BA8              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
 888  8BA8              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
 889  8BA8
 890  8BA8              Guarda_foto_entidad_a_pintar
 891  8BA8
 892  8BA8 CD D5 8B     	call Repone_pintar
 893  8BAB CD C6 93     	call Draw
 894  8BAE CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
 895  8BB1 C9           	ret
 896  8BB2
 897  8BB2              ; --------------------------------------------------------------------------------------------------------------
 898  8BB2              ;
 899  8BB2              ;
 900  8BB2
 901  8BB2 21 C5 88     Prepara_var_pintado_borrado	ld hl,Filas
 902  8BB5 3A F0 88     	ld a,(Obj_dibujado)
 903  8BB8 A7           	and a
 904  8BB9 28 05        	jr z,1F
 905  8BBB 11 E5 88     	ld de,Variables_de_pintado
 906  8BBE 18 03        	jr 2F
 907  8BC0 11 DF 88     1 ld de,Variables_de_borrado
 908  8BC3 01 08 00     2 ld bc,8
 909  8BC6 ED B0        	ldir
 910  8BC8 C9           	ret
 911  8BC9
 912  8BC9              ; --------------------------------------------------------------------------------------------------------------
 913  8BC9
 914  8BC9 21 DF 88     Repone_borrar ld hl,Variables_de_borrado
 915  8BCC 11 C5 88     	ld de,Filas
 916  8BCF 01 08 00     	ld bc,8
 917  8BD2 ED B0        	ldir
 918  8BD4 C9           	ret
 919  8BD5
 920  8BD5 21 E5 88     Repone_pintar ld hl,Variables_de_pintado
 921  8BD8 11 C5 88     	ld de,Filas
 922  8BDB 01 08 00     	ld bc,8
 923  8BDE ED B0        	ldir
 924  8BE0 C9           	ret
 925  8BE1
 926  8BE1              ; *************************************************************************************************************************************************************
 927  8BE1              ;
 928  8BE1              ; 8/1/23
 929  8BE1              ;
 930  8BE1              ; (Puntero_store_caja) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
 931  8BE1              ; (Indice_restore_caja) se sitúa en la 2ª entidad del índice.
 932  8BE1              ; (Puntero_restore_caja) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
 933  8BE1
 934  8BE1              ; Destruye HL y DE !!!!!
 935  8BE1
 936  8BE1              Inicia_punteros_de_cajas
 937  8BE1
 938  8BE1 21 8C 85     	ld hl,Indice_de_cajas
 939  8BE4 CD DF 8C         call Extrae_address
 940  8BE7 22 07 89         ld (Puntero_store_caja),hl
 941  8BEA 21 8E 85     	ld hl,Indice_de_cajas+2
 942  8BED 22 0B 89     	ld (Indice_restore_caja),hl
 943  8BF0 CD DF 8C     	call Extrae_address
 944  8BF3 22 09 89     	ld (Puntero_restore_caja),hl
 945  8BF6 C9               ret
 946  8BF7
 947  8BF7              ; ---------------------------------------------------------------
 948  8BF7              ;
 949  8BF7              ;	9/8/23
 950  8BF7              ;
 951  8BF7              ;	Inicialización y gestión de álbumes de fotos y cajas.
 952  8BF7
 953  8BF7              Inicia_punteros_de_albumes_y_malotes
 954  8BF7
 955  8BF7 21 EC 84     	ld hl,Indice_album_de_fotos
 956  8BFA 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
 957  8BFD CD DF 8C     	call Extrae_address
 958  8C00 22 1B 89     	ld (Stack_snapshot),hl
 959  8C03
 960  8C03 21 F4 84     	ld hl,Indice_album_de_fotos_disparos
 961  8C06 22 33 89     	ld (Puntero_indice_album_de_fotos_disparos),hl
 962  8C09 CD DF 8C     	call Extrae_address
 963  8C0C 22 1D 89     	ld (Stack_snapshot_disparos),hl
 964  8C0F
 965  8C0F 21 FC 84     	ld hl,Indice_End_Snapshot
 966  8C12 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
 967  8C15 CD DF 8C     	call Extrae_address
 968  8C18 22 39 89     	ld (Puntero_de_End_Snapshot),hl
 969  8C1B
 970  8C1B 21 04 85     	ld hl,Indice_End_Snapshot_disparos
 971  8C1E 22 37 89     	ld (Puntero_indice_End_Snapshot_disparos),hl
 972  8C21 CD DF 8C     	call Extrae_address
 973  8C24 22 3B 89     	ld (Puntero_de_End_Snapshot_disparos),hl
 974  8C27
 975  8C27 C9           	ret
 976  8C28
 977  8C28              ;	2/9/23
 978  8C28
 979  8C28              Avanza_puntero_de_album_de_fotos_y_malotes
 980  8C28
 981  8C28              ; Caja_de_malotes equ $7419 ; (7419h - 741ch) 4 bytes.
 982  8C28
 983  8C28              ; Estamos en el último álbum del índice???.
 984  8C28
 985  8C28 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 986  8C2B 01 F2 84     	ld bc,Indice_album_de_fotos+6
 987  8C2E A7           	and a
 988  8C2F ED 42        	sbc hl,bc										; Estamos en el último álbum del índice.
 989  8C31 20 07        	jr nz,1F								 		; El buffer está lleno. HALT.
 990  8C33
 991  8C33 21 04 89     	ld hl,Ctrl_1									; Necesito saber si hemos terminado de guardar todas_
 992  8C36 CB EE        	set 5,(hl)										; _ las fotos de un FRAME.
 993  8C38 76           	halt
 994  8C39 C9           	ret
 995  8C3A
 996  8C3A F3           1 di
 997  8C3B 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
 998  8C3E 23           	inc hl
 999  8C3F 23           	inc hl
1000  8C40 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1001  8C43 CD DF 8C     	call Extrae_address
1002  8C46 22 1B 89     	ld (Stack_snapshot),hl							; Seleccionamos el siguiente álbum.
1003  8C49
1004  8C49 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1005  8C4C 23           	inc hl
1006  8C4D 23           	inc hl
1007  8C4E 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1008  8C51 CD DF 8C     	call Extrae_address
1009  8C54 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1010  8C57 FB           	ei
1011  8C58
1012  8C58 C9           	ret
1013  8C59
1014  8C59              ; *************************************************************************************************************************************************************
1015  8C59              ;
1016  8C59              ; 8/1/23
1017  8C59              ;
1018  8C59              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
1019  8C59
1020  8C59 21 24 85     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
1021  8C5C 22 3E 89     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
1022  8C5F C9           	ret
1023  8C60 21 0C 85     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
1024  8C63 22 40 89     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
1025  8C66 C9           	ret
1026  8C67
1027  8C67              ; -------------------------------------------------------------------------------------------------------------
1028  8C67              ;
1029  8C67              ; 4/9/23
1030  8C67              ;
1031  8C67
1032  8C67              ; Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72ach).
1033  8C67
1034  8C67 21 A0 72     Limpia_album_Amadeus ld hl,Album_de_fotos_Amadeus
1035  8C6A 7E           	ld a,(hl)
1036  8C6B A7           	and a
1037  8C6C C8           	ret z
1038  8C6D
1039  8C6D 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1040  8C70 11 A1 72     	ld de,Album_de_fotos_Amadeus+1
1041  8C73 01 0C 00     	ld bc,12
1042  8C76 AF           	xor a
1043  8C77 77           	ld (hl),a
1044  8C78 ED B0        	ldir
1045  8C7A
1046  8C7A 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1047  8C7D 22 23 89     	ld (End_Snapshot_Amadeus),hl
1048  8C80
1049  8C80 C9           	ret
1050  8C81
1051  8C81 21 DF 88     Limpia_Variables_de_borrado ld hl,Variables_de_borrado
1052  8C84 11 E0 88     	ld de,Variables_de_borrado+1
1053  8C87 01 05 00     	ld bc,5
1054  8C8A AF           	xor a
1055  8C8B 77           	ld (hl),a
1056  8C8C ED B0        	ldir
1057  8C8E C9           	ret
1058  8C8F
1059  8C8F              ; -------------------------------------------------------------------------------------------------------------
1060  8C8F              ;
1061  8C8F              ; 8/9/23
1062  8C8F              ;
1063  8C8F
1064  8C8F              ; (Numero_de_malotes) lo utiliza la rutina [Extrae_foto_entidades] para borrar/pintar entidades en pantalla.
1065  8C8F              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1066  8C8F
1067  8C8F              Calcula_numero_de_malotes
1068  8C8F
1069  8C8F 21 00 70     	ld hl,Album_de_fotos
1070  8C92 EB           	ex de,hl
1071  8C93 2A 1F 89     	ld hl,(End_Snapshot)
1072  8C96
1073  8C96 7C           	ld a,h
1074  8C97 A7           	and a
1075  8C98 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1076  8C9A
1077  8C9A 06 00        4 ld b,0
1078  8C9C 7D           	ld a,l
1079  8C9D 93           	sub e
1080  8C9E 28 07        	jr z,1F
1081  8CA0
1082  8CA0              ; Nº de malotes no es "0".
1083  8CA0
1084  8CA0 D6 06        2 sub 6
1085  8CA2 04           	inc b
1086  8CA3 A7           	and a
1087  8CA4 20 FA        	jr nz,2B
1088  8CA6 78           	ld a,b
1089  8CA7
1090  8CA7 32 10 89     1 ld (Numero_de_malotes),a
1091  8CAA C9           	ret
1092  8CAB
1093  8CAB              ; -------------------------------------------------------------------------------------------------------------
1094  8CAB              ;
1095  8CAB              ; 8/9/23
1096  8CAB              ;
1097  8CAB
1098  8CAB              ; (Numero_de_malotes_Amadeus) lo utiliza la rutina [Extrae_foto_Amadeus] para borrar/pintar la nave en pantalla.
1099  8CAB              ; Se calcula dividiendo entre 6 el nº de bytes que contiene el Album_de_fotos.
1100  8CAB
1101  8CAB              Calcula_malotes_Amadeus
1102  8CAB
1103  8CAB 21 A0 72     	ld hl,Album_de_fotos_Amadeus
1104  8CAE EB           	ex de,hl
1105  8CAF 2A 23 89     	ld hl,(End_Snapshot_Amadeus)
1106  8CB2
1107  8CB2 7C           	ld a,h
1108  8CB3 A7           	and a
1109  8CB4 28 0D        	jr z,1F										; (End_Snapshot_Amadeus) = "$0000" significa que el álbum está vacío.
1110  8CB6
1111  8CB6 06 00        	ld b,0
1112  8CB8 7D           	ld a,l
1113  8CB9 93           	sub e
1114  8CBA 28 07        	jr z,1F
1115  8CBC
1116  8CBC              ; Nº de malotes no es "0".
1117  8CBC
1118  8CBC D6 06        2 sub 6
1119  8CBE 04           	inc b
1120  8CBF A7           	and a
1121  8CC0 20 FA        	jr nz,2B
1122  8CC2 78           	ld a,b
1123  8CC3
1124  8CC3 32 10 89     1 ld (Numero_de_malotes),a
1125  8CC6 C9           	ret
1126  8CC7
1127  8CC7              ; -------------------------------------------------------------------------------------------------------------
1128  8CC7              ;
1129  8CC7              ; 28/2/23
1130  8CC7              ;
1131  8CC7
1132  8CC7              Calcula_numero_de_disparotes
1133  8CC7
1134  8CC7 21 50 71     	ld hl,Album_de_fotos_disparos
1135  8CCA EB           	ex de,hl
1136  8CCB 2A 3B 89     	ld hl,(Puntero_de_End_Snapshot_disparos)
1137  8CCE
1138  8CCE 06 00        	ld b,0
1139  8CD0 7D           	ld a,l
1140  8CD1 93           	sub e
1141  8CD2 28 07        	jr z,1F
1142  8CD4
1143  8CD4              ; Nº de malotes no es "0".
1144  8CD4
1145  8CD4 D6 06        2 sub 6
1146  8CD6 04           	inc b
1147  8CD7 A7           	and a
1148  8CD8 20 FA        	jr nz,2B
1149  8CDA 78           	ld a,b
1150  8CDB
1151  8CDB 32 3D 89     1 ld (Numero_de_disparotes),a
1152  8CDE C9           	ret
1153  8CDF
1154  8CDF              ; *************************************************************************************************************************************************************
1155  8CDF              ;
1156  8CDF              ; 20/10/22
1157  8CDF              ;
1158  8CDF              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
1159  8CDF              ;
1160  8CDF              ; Destruye el puntero y DE !!!!!
1161  8CDF
1162  8CDF 5E           Extrae_address ld e,(hl)
1163  8CE0 23           	inc hl
1164  8CE1 56           	ld d,(hl)
1165  8CE2 2B           	dec hl
1166  8CE3 EB           	ex de,hl
1167  8CE4 C9           	ret
1168  8CE5
1169  8CE5              ; *************************************************************************************************************************************************************
1170  8CE5              ;
1171  8CE5              ;	7/2/23
1172  8CE5              ;
1173  8CE5              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
1174  8CE5              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
1175  8CE5              ;
1176  8CE5              ;   Destruye HL y BC !!!!!,
1177  8CE5              ;
1178  8CE5              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
1179  8CE5              ;					"0" ..... Izquierda.
1180  8CE5
1181  8CE5              Inicia_Puntero_objeto
1182  8CE5
1183  8CE5 3A D9 88     	ld a,(Cuad_objeto)
1184  8CE8 E6 01        	and 1
1185  8CEA F5           	push af
1186  8CEB CC 09 8D     	call z,Inicia_puntero_objeto_izq
1187  8CEE F1           	pop af
1188  8CEF 28 2B        	jr z,1F
1189  8CF1 CD F6 8C     	call Inicia_puntero_objeto_der
1190  8CF4 18 26        	jr 1F
1191  8CF6
1192  8CF6              ; Arrancamos desde la parte izquierda de la pantalla.
1193  8CF6              ; Iniciamos (Indice_Sprite_der).
1194  8CF6
1195  8CF6 2A CF 88     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
1196  8CF9 22 D3 88     	ld (Puntero_DESPLZ_der),hl
1197  8CFC CD DF 8C     	call Extrae_address
1198  8CFF 22 C9 88     	ld (Puntero_objeto),hl
1199  8D02
1200  8D02 2A D1 88     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
1201  8D05 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1202  8D08 C9           	ret
1203  8D09
1204  8D09              ; Arrancamos desde la parte derecha de la pantalla.
1205  8D09              ; Iniciamos (Indice_Sprite_izq).
1206  8D09
1207  8D09 2A D1 88     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
1208  8D0C 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
1209  8D0F CD DF 8C     	call Extrae_address
1210  8D12 22 C9 88     	ld (Puntero_objeto),hl
1211  8D15
1212  8D15 2A CF 88     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
1213  8D18 22 D3 88     	ld (Puntero_DESPLZ_der),hl							; _situamos (Puntero_DESPLZ_der) en el último defw_
1214  8D1B C9           	ret
1215  8D1C
1216  8D1C              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
1217  8D1C
1218  8D1C 21 40 83     1 ld hl,Amadeus
1219  8D1F ED 4B C9 88  	ld bc,(Puntero_objeto)
1220  8D23 B7 ED 42     	sub hl,bc
1221  8D26 C0           	ret nz
1222  8D27 21 EF 88     	ld hl,Ctrl_0
1223  8D2A CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
1224  8D2C C9           	ret 												; _de nuestra nave en los extremos.
1225  8D2D
1226  8D2D              ; *************************************************************************************************************************************************************
1227  8D2D              ;
1228  8D2D              ;	14/5/23
1229  8D2D              ;
1230  8D2D              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
1231  8D2D              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
1232  8D2D
1233  8D2D              ;	Modifica (Puntero_store_caja)  y (Puntero_restore_caja) con las direcciones donde se encuentran los datos_
1234  8D2D              ;	_de la 2ª y 3ª entidad respectivamente.
1235  8D2D
1236  8D2D              Store_Restore_cajas
1237  8D2D
1238  8D2D E5           	push hl
1239  8D2E D5           	push de
1240  8D2F C5            	push bc
1241  8D30
1242  8D30              ;	STORE !!!!!
1243  8D30              ;	Guarda la entidad cargada en Draw en su correspondiente DB.
1244  8D30
1245  8D30 21 C5 88     	ld hl,Filas
1246  8D33 ED 5B 07 89  	ld de,(Puntero_store_caja) 							; Puntero que se desplaza por las distintas entidades.
1247  8D37 01 3F 00     	ld bc,63
1248  8D3A ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
1249  8D3C
1250  8D3C              ; 	Entidad_sospechosa. 20/4/23
1251  8D3C
1252  8D3C 3A DE 88     	ld a,(Impacto)
1253  8D3F A7           	and a
1254  8D40 28 0C        	jr z,1F
1255  8D42
1256  8D42 2A 07 89     	ld hl,(Puntero_store_caja) 							; Si la rutina [Compara_coordenadas_X] detecta que hay_
1257  8D45 01 19 00     	ld bc,25                          					; _ una entidad en zona de Amadeus, guardaremos la direccíon_
1258  8D48 A7           	and a 												; _ donde se encuentra su .db (Impacto) para poder ponerlo a_
1259  8D49 ED 4A        	adc hl,bc 											; _ "0" más adelante.
1260  8D4B 22 43 89     	ld (Entidad_sospechosa_de_colision),hl
1261  8D4E
1262  8D4E              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
1263  8D4E
1264  8D4E 2A 09 89     1 ld hl,(Puntero_restore_caja)
1265  8D51 7E           	ld a,(hl)
1266  8D52 A7           	and a
1267  8D53 F5           	push af
1268  8D54 28 08        	jr z,2F
1269  8D56
1270  8D56 11 C5 88     	ld de,Filas
1271  8D59 01 3F 00     	ld bc,63
1272  8D5C ED B0        	ldir
1273  8D5E
1274  8D5E CD 7A 8D     2 call Incrementa_punteros_de_cajas
1275  8D61 F1           	pop af
1276  8D62 28 EA        	jr z,1B
1277  8D64
1278  8D64 C1           	pop bc
1279  8D65 D1           	pop de
1280  8D66 E1           	pop hl
1281  8D67
1282  8D67 C9           	ret
1283  8D68
1284  8D68              ; **************************************************************************************************
1285  8D68              ;
1286  8D68              ;	12/05/23
1287  8D68              ;
1288  8D68              ;	Cargamos los datos de la entidad señalada por el puntero (Puntero_store_caja).
1289  8D68
1290  8D68 E5           Restore_entidad push hl
1291  8D69 D5           	push de
1292  8D6A C5            	push bc
1293  8D6B
1294  8D6B 2A 07 89     	ld hl,(Puntero_store_caja)						; (Puntero_store_caja) apunta a la dbase de la 1ª entidad.
1295  8D6E 11 C5 88     	ld de,Filas
1296  8D71 01 3F 00     	ld bc,63
1297  8D74 ED B0        	ldir
1298  8D76
1299  8D76 C1           	pop bc
1300  8D77 D1           	pop de
1301  8D78 E1           	pop hl
1302  8D79 C9           	ret
1303  8D7A
1304  8D7A
1305  8D7A              ; **************************************************************************************************
1306  8D7A              ;
1307  8D7A              ;	08/05/23
1308  8D7A              ;
1309  8D7A              ;	Incrementamos los dos punteros de entidades. (+1).
1310  8D7A
1311  8D7A 2A 09 89     Incrementa_punteros_de_cajas ld hl,(Puntero_restore_caja)
1312  8D7D 22 07 89     	ld (Puntero_store_caja),hl
1313  8D80 2A 0B 89     	ld hl,(Indice_restore_caja)
1314  8D83 23           	inc hl
1315  8D84 23           	inc hl
1316  8D85 22 0B 89     	ld (Indice_restore_caja),hl
1317  8D88 CD DF 8C         call Extrae_address
1318  8D8B 22 09 89         ld (Puntero_restore_caja),hl
1319  8D8E C9               ret
1320  8D8F
1321  8D8F              ; **************************************************************************************************
1322  8D8F              ;
1323  8D8F              ;	25/01/23
1324  8D8F              ;
1325  8D8F              ;	Restore_Amadeus
1326  8D8F              ;
1327  8D8F              ;	Cargamos en DRAW los parámetros de Amadeus.
1328  8D8F              ;
1329  8D8F
1330  8D8F E5           Restore_Amadeus	push hl
1331  8D90 D5           	push de
1332  8D91 C5            	push bc
1333  8D92 21 9E 85     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
1334  8D95 11 C5 88     	ld de,Filas
1335  8D98 01 3F 00     	ld bc,63
1336  8D9B ED B0        	ldir
1337  8D9D C1           	pop bc
1338  8D9E D1           	pop de
1339  8D9F E1           	pop hl
1340  8DA0 C9           	ret
1341  8DA1
1342  8DA1              ; *************************************************************************************************************************************************************
1343  8DA1              ;
1344  8DA1              ;	29/04/23
1345  8DA1              ;
1346  8DA1              ;	Store_Amadeus
1347  8DA1              ;
1348  8DA1              ;	Almacena los datos de la entidad alojada en DRAW, (incl. Amadeus), en su respectiva base de datos.
1349  8DA1              ;
1350  8DA1              ;	INPUT: DE contiene la dirección del 1er byte de la base de datos donde vamos a guardar los datos de la entidad.
1351  8DA1              ;
1352  8DA1              ;	DESTRUYE: HL y BC y DE.
1353  8DA1
1354  8DA1 21 C5 88     Store_Amadeus ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
1355  8DA4 01 3F 00     	ld bc,63
1356  8DA7 ED B0        	ldir
1357  8DA9 C9           	ret
1358  8DAA
1359  8DAA              ; -----------------------------------------------------------
1360  8DAA              ;
1361  8DAA              ;	27/04/23
1362  8DAA              ;
1363  8DAA              ; 	Limpia los datos del almacén de entidades de DRAW, (donde se encuentra la "entidad impactada").
1364  8DAA              ;
1365  8DAA              ;	Destruye: HL,BC,DE,A
1366  8DAA
1367  8DAA 21 C5 88     Borra_datos_entidad ld hl,Filas
1368  8DAD 01 3E 00     	ld bc,62
1369  8DB0 AF           	xor a
1370  8DB1 77           	ld (hl),a
1371  8DB2 11 C6 88     	ld de,Filas+1
1372  8DB5 ED B0        	ldir
1373  8DB7 C9           	ret
1374  8DB8
1375  8DB8              ; -----------------------------------------------------------
1376  8DB8
1377  8DB8              ; Teclado.
1378  8DB8
1379  8DB8 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
1380  8DBA DB FE        	in a,($fe)
1381  8DBC E6 01        	and $01
1382  8DBE 28 02        	jr z,1f
1383  8DC0 18 F6        	jr Pulsa_ENTER
1384  8DC2 C9           1 ret
1385  8DC3
1386  8DC3              ; **************************************************************************************************
1387  8DC3              ;
1388  8DC3              ; Temporización.
1389  8DC3
1390  8DC3              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
1391  8DC3              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
1392  8DC3              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
1393  8DC3              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
1394  8DC3
1395  8DC3              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
1396  8DC3              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
1397  8DC3              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
1398  8DC3
1399  8DC3              ; A partir de $4f61 no hace falta DELAY.
1400  8DC3
1401  8DC3              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
1402  8DC3
1403  8DC3 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
1404  8DC6 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
1405  8DC7 78           	LD A,B
1406  8DC8 A7           	AND A
1407  8DC9 20 FB        	JR NZ,wait
1408  8DCB C9           	RET
1409  8DCC
1410  8DCC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1411  8DCC              ;
1412  8DCC              ;	5/3/23
1413  8DCC              ;
1414  8DCC              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
1415  8DCC
1416  8DCC              Movimiento_Amadeus
1417  8DCC
1418  8DCC              ; Disparo.
1419  8DCC
1420  8DCC 3A 55 89     	ld a,(Disparo_Amadeus)
1421  8DCF A7           	and a
1422  8DD0 20 02        	jr nz,1F
1423  8DD2 18 15        	jr 2F
1424  8DD4
1425  8DD4 3E F7        1 ld a,$f7													; "5" para disparar.
1426  8DD6 DB FE        	in a,($fe)
1427  8DD8 E6 10        	and $10
1428  8DDA
1429  8DDA F5           	push af
1430  8DDB CC D0 8E     	call z,Genera_disparo
1431  8DDE F1           	pop af
1432  8DDF 20 08        	jr nz,2F
1433  8DE1
1434  8DE1 3A 55 89     	ld a,(Disparo_Amadeus)
1435  8DE4 EE 01        	xor 1
1436  8DE6 32 55 89     	ld (Disparo_Amadeus),a
1437  8DE9
1438  8DE9 3E F7        2 ld a,$f7		  											; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
1439  8DEB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1440  8DED E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
1441  8DEF CC A1 9B         call z,Mov_left											;			"			"			"			"			"			"			"			"
1442  8DF2
1443  8DF2 3E F7        	ld a,$f7
1444  8DF4 DB FE        	in a,($fe)
1445  8DF6 E6 01        	and $01
1446  8DF8 C8           	ret z
1447  8DF9
1448  8DF9 3E F7        	ld a,$f7
1449  8DFB DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
1450  8DFD E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
1451  8DFF CC 83 9A     	call z,Mov_right										;			"			"			"			"			"			"			"			"
1452  8E02 C9           	ret
1453  8E03
1454  8E03              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
1455  8E03              ;
1456  8E03              ;	Rutina provisional para que los malotes cagen balas.
1457  8E03
1458  8E03              Detecta_disparo_entidad
1459  8E03
1460  8E03 3A 58 89     	ld a,(Disparo_entidad)
1461  8E06 A7           	and a
1462  8E07 C8           	ret z
1463  8E08
1464  8E08              ;! Aquí hemos de implementar la rutina/s que generan disparo...
1465  8E08
1466  8E08              ;	ld a,$7f				; Detecta SPACE.
1467  8E08              ;	in a,($fe)
1468  8E08              ;	and 1
1469  8E08              ;	ret nz
1470  8E08
1471  8E08              ;	call Genera_disparo
1472  8E08 C9           	ret
1473  8E09
1474  8E09              ; ----------------------------------------------------------------------
1475  8E09              ;
1476  8E09              ;	8/9/23
1477  8E09
1478  8E09              Guarda_datos_de_borrado
1479  8E09
1480  8E09 F3           	di
1481  8E0A
1482  8E0A 2A 39 89     	ld hl,(Puntero_de_End_Snapshot)
1483  8E0D CD DF 8C     	call Extrae_address
1484  8E10
1485  8E10 2B           	dec hl
1486  8E11 7E           	ld a,(hl)
1487  8E12 A7           	and a
1488  8E13 C8           	ret z										; Salimos si es álbum está vacío.
1489  8E14
1490  8E14 11 E4 88     	ld de,Variables_de_borrado+5
1491  8E17 01 06 00     	ld bc,6
1492  8E1A ED B8        	lddr
1493  8E1C
1494  8E1C FB           	ei
1495  8E1D
1496  8E1D C9           	ret
1497  8E1E
1498  8E1E              ; ----------------------------------------------------------------------
1499  8E1E              ;
1500  8E1E              ;	8/9/23
1501  8E1E
1502  8E1E 2A 23 89     Guarda_datos_de_borrado_Amadeus	ld hl,(End_Snapshot_Amadeus)
1503  8E21 2B            	dec hl
1504  8E22 7E           	ld a,(hl)
1505  8E23 A7           	and a
1506  8E24 C8           	ret z										; Salimos si es álbum está vacío.
1507  8E25
1508  8E25 11 E4 88     	ld de,Variables_de_borrado+5
1509  8E28 01 06 00     	ld bc,6
1510  8E2B ED B8        	lddr
1511  8E2D C9           	ret
1512  8E2E
1513  8E2E              ; ----------------------------------------------------------------------
1514  8E2E              ;
1515  8E2E              ;	9/9/23
1516  8E2E
1517  8E2E              Repone_datos_de_borrado_Amadeus
1518  8E2E
1519  8E2E 21 DF 88     	ld hl,Variables_de_borrado
1520  8E31 11 A0 72     	ld de,Album_de_fotos_Amadeus
1521  8E34 01 06 00     	ld bc,6
1522  8E37 ED B0        	ldir
1523  8E39
1524  8E39 EB           	ex de,hl
1525  8E3A 22 23 89     	ld (End_Snapshot_Amadeus),hl
1526  8E3D
1527  8E3D C9           	ret
1528  8E3E
1529  8E3E              ; ----------------------------------------------------------------------
1530  8E3E              ;
1531  8E3E              ;	18/9/23
1532  8E3E              ;
1533  8E3E
1534  8E3E              ;	Si se ha producido movimiento de la entidad en curso, esta rutina vuelca las `Variables_de_borrado´ en el_
1535  8E3E              ;	_ Album_de_fotos correspondiente.
1536  8E3E
1537  8E3E              ;	DI.
1538  8E3E
1539  8E3E              Repone_datos_de_borrado
1540  8E3E
1541  8E3E F3           	di
1542  8E3F
1543  8E3F 2A 39 89     	ld hl,(Puntero_de_End_Snapshot)
1544  8E42 CD DF 8C     	call Extrae_address
1545  8E45
1546  8E45              ; Si (Puntero_de_End_Snapshot)="0" es que estamos al comienzo de uno de los álbumes de fotos.
1547  8E45              ; Averiguamos en que álbum nos encontramos y actualizamos el valor de (Puntero_indice_End_Snapshot).
1548  8E45
1549  8E45 24           	inc h
1550  8E46 25           	dec h
1551  8E47 20 09        	jr nz,1F
1552  8E49
1553  8E49 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1554  8E4C CD DF 8C     	call Extrae_address
1555  8E4F 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1556  8E52
1557  8E52 11 DF 88     1 ld de,Variables_de_borrado
1558  8E55 EB           	ex de,hl
1559  8E56 01 06 00     	ld bc,6
1560  8E59 ED B0        	ldir
1561  8E5B
1562  8E5B FB           	ei
1563  8E5C
1564  8E5C C9           	ret
1565  8E5D
1566  8E5D              ; ----------------------------------------------------------------------
1567  8E5D              ;
1568  8E5D              ;	11/8/23
1569  8E5D
1570  8E5D              Frame
1571  8E5D
1572  8E5D              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
1573  8E5D              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
1574  8E5D
1575  8E5D              ; PINTAMOS.
1576  8E5D
1577  8E5D 3E 02        	ld a,2
1578  8E5F D3 FE            out ($fe),a											; Rojo.
1579  8E61
1580  8E61              ; Hemos completado el 1er album?. Si (Puntero_indice_album_de_fotos) no está situado en el 2º Album_
1581  8E61              ; _ , no imprimimos FRAME. no gestionamos los álbumes de fotos.
1582  8E61
1583  8E61 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1584  8E64 01 EC 84     	ld bc,Indice_album_de_fotos
1585  8E67 A7           	and a
1586  8E68 ED 42        	sbc hl,bc
1587  8E6A
1588  8E6A 28 FE        	jr z,$
1589  8E6C 28 4E        	jr z,6F
1590  8E6E
1591  8E6E CD 8F 8C     	call Calcula_numero_de_malotes
1592  8E71 CD D4 96     	call Extrae_foto_entidades 							; Pintamos el fotograma anterior.
1593  8E74
1594  8E74              ;	call Extrae_foto_disparos
1595  8E74 3E 01            ld a,1
1596  8E76 D3 FE            out ($fe),a											; Azul.
1597  8E78
1598  8E78              ;	call Limpia_album_disparos 							; Después de borrar/pintar los disparos, limpiamos el album.
1599  8E78 CD AC 72     	call Gestiona_albumes_de_fotos 						; Escupe Álbum de fotos. 1a0, 2a1, 3a2.
1600  8E7B
1601  8E7B              ; 	Corrige (Stack_snapshot). Se sitúa al principio del último álbum libre para volver a guardar fotos.
1602  8E7B
1603  8E7B 3A 04 89     	ld a,(Ctrl_1)
1604  8E7E CB 6F        	bit 5,a
1605  8E80 20 24        	jr nz,1F
1606  8E82
1607  8E82              ; No hemos terminado de guardar el último FRAME.
1608  8E82
1609  8E82 2A 31 89     	ld hl,(Puntero_indice_album_de_fotos)
1610  8E85 2B           	dec hl
1611  8E86 2B           	dec hl
1612  8E87 22 31 89     	ld (Puntero_indice_album_de_fotos),hl
1613  8E8A
1614  8E8A 2A 35 89     	ld hl,(Puntero_indice_End_Snapshot)
1615  8E8D 2B           	dec hl
1616  8E8E 2B           	dec hl
1617  8E8F 22 35 89     	ld (Puntero_indice_End_Snapshot),hl
1618  8E92 CD DF 8C     	call Extrae_address
1619  8E95 22 39 89     	ld (Puntero_de_End_Snapshot),hl
1620  8E98
1621  8E98 CD DF 8C     	call Extrae_address
1622  8E9B
1623  8E9B              ; Esta vacío este album???
1624  8E9B
1625  8E9B 24           	inc h
1626  8E9C 25           	dec h
1627  8E9D 20 02        	jr nz,5F
1628  8E9F
1629  8E9F              ; Este album no contiene datos, por lo tanto nos tenemos que situar al comienzo del mismo.
1630  8E9F
1631  8E9F 18 05        	jr 1F
1632  8EA1
1633  8EA1 22 1B 89     5 ld (Stack_snapshot),hl
1634  8EA4 18 09        	jr 2F
1635  8EA6
1636  8EA6              ; FRAME completo.
1637  8EA6
1638  8EA6 2A 31 89     1 ld hl,(Puntero_indice_album_de_fotos)
1639  8EA9 CD DF 8C     	call Extrae_address
1640  8EAC 22 1B 89     	ld (Stack_snapshot),hl
1641  8EAF
1642  8EAF              ;	En este punto:
1643  8EAF
1644  8EAF              ;	Hemos pintado Album_de_fotos en pantalla y desplazado los demás álbumes una posición.
1645  8EAF              ;	Tenemos vacío el último álbum en el que se encuentra (Puntero_indice_album_de_fotos).
1646  8EAF
1647  8EAF              ; RELOJES.
1648  8EAF
1649  8EAF 21 50 89     2 ld hl,Contador_de_frames
1650  8EB2 7E           	ld a,(hl)
1651  8EB3 FE FF        	cp $ff
1652  8EB5 20 04        	jr nz,3F
1653  8EB7 34           	inc (hl)
1654  8EB8 21 51 89     	ld hl,Contador_de_frames_2
1655  8EBB 34           3 inc (hl)											; 0 - 255
1656  8EBC
1657  8EBC 21 04 89     6 ld hl,Ctrl_1
1658  8EBF CB AE        	res 5,(hl)
1659  8EC1 C9           	ret
1660  8EC2
1661  8EC2              Pinta_Amadeus
1662  8EC2
1663  8EC2 3E 06        	ld a,6
1664  8EC4 D3 FE            out ($fe),a										; Amarillo
1665  8EC6
1666  8EC6 CD AB 8C     	call Calcula_malotes_Amadeus
1667  8EC9 CD 56 97     	call Extrae_foto_Amadeus
1668  8ECC CD 67 8C     	call Limpia_album_Amadeus
1669  8ECF C9           	ret
1670  8ED0
1671  8ED0              ; ---------------------------------------------------------------
1672  8ED0
1673  8ED0              	include "Disparo.asm"
# file opened: Disparo.asm
   1+ 8ED0              ; ******************************************************************************************************************************************************************************************
   2+ 8ED0              ;
   3+ 8ED0              ;   21/07/23
   4+ 8ED0              ;
   5+ 8ED0              ; 	La rutina determina si es factible, o no, `generar' un disparo.
   6+ 8ED0              ;   En el caso de generar disparo la rutina proporciona 4 variables:
   7+ 8ED0              ;
   8+ 8ED0              ;
   9+ 8ED0              ;       -1 .defw ..... Control. %00000001 00000001
  10+ 8ED0              ;
  11+ 8ED0              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  12+ 8ED0              ;               _ hacen las entidades hacia abajo.
  13+ 8ED0              ;
  14+ 8ED0              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
  15+ 8ED0              ;
  16+ 8ED0              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
  17+ 8ED0              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
  18+ 8ED0              ;
  19+ 8ED0              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
  20+ 8ED0              ;           _ la bala.
  21+ 8ED0              ;
  22+ 8ED0              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
  23+ 8ED0              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
  24+ 8ED0              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
  25+ 8ED0              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
  26+ 8ED0              ;           _ en el momento de generarse la bala)).
  27+ 8ED0
  28+ 8ED0              Genera_disparo
  29+ 8ED0
  30+ 8ED0              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
  31+ 8ED0              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
  32+ 8ED0              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
  33+ 8ED0              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
  34+ 8ED0              ;   Amadeus, (al desplazarse a 2 pixels), podrá generar disparo en cualquier situación. Las entidades_
  35+ 8ED0              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga los valores, $00, $f9, $fb y $fd.
  36+ 8ED0              ;   IY contendrá la dirección de Puntero_objeto_disparo.
  37+ 8ED0
  38+ 8ED0              ; Exclusiones:
  39+ 8ED0
  40+ 8ED0 3A DD 88         ld a,(Vel_down)
  41+ 8ED3 47               ld b,a
  42+ 8ED4 3A 4F 89         ld a,(Velocidad_disparo_entidades)  ; No se genera disparo si (Vel_down) de la entidad es superior a_
  43+ 8ED7 B8               cp b                                ; _ la velocidad del disparo de las entidades. La entidad se _
  44+ 8ED8 D8               ret c                               ; _ atropellaría con su propio disparo.
  45+ 8ED9 3A FE 88         ld a,(Columnas)
  46+ 8EDC 47               ld b,a
  47+ 8EDD 3A C6 88         ld a,(Columns)
  48+ 8EE0 B8               cp b
  49+ 8EE1 C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
  50+ 8EE2
  51+ 8EE2              ; ----- ----- -----
  52+ 8EE2
  53+ 8EE2 3A EF 88         ld a,(Ctrl_0)
  54+ 8EE5 CB 77            bit 6,a
  55+ 8EE7 20 06            jr nz,14F
  56+ 8EE9
  57+ 8EE9 3A CC 88         ld a,(Coordenada_y)
  58+ 8EEC FE 13            cp $13                              ; Una entidad no podrá disparar si se encuentra por_
  59+ 8EEE D0               ret nc                              ; _ debajo de la fila "$14" de pantalla.
  60+ 8EEF
  61+ 8EEF 21 00 80     14 ld hl,Indice_disparo
  62+ 8EF2 3A CD 88         ld a,(CTRL_DESPLZ)
  63+ 8EF5 4F               ld c,a
  64+ 8EF6 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
  65+ 8EF8              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
  66+ 8EF8              ;                                            ""        ""       "f9", B="1"
  67+ 8EF8              ;                                            ""        ""       "fb", B="2"
  68+ 8EF8              ;                                            ""        ""       "fb", B="3"
  69+ 8EF8 A7               and a
  70+ 8EF9 28 10            jr z,1F
  71+ 8EFB E6 01            and 1
  72+ 8EFD C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
  73+ 8EFE
  74+ 8EFE 79               ld a,c
  75+ 8EFF 16 F9            ld d,$f9
  76+ 8F01 23           2 inc hl
  77+ 8F02 23               inc hl
  78+ 8F03 04               inc b
  79+ 8F04 BA               cp d
  80+ 8F05 28 04            jr z,1F
  81+ 8F07 14               inc d
  82+ 8F08 14               inc d
  83+ 8F09 18 F6            jr 2B
  84+ 8F0B
  85+ 8F0B CD DF 8C     1 call Extrae_address
  86+ 8F0E E5               push hl
  87+ 8F0F FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
  88+ 8F11 DD 21 9C 99  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
  89+ 8F15
  90+ 8F15              ;	Se cumplen las condiciones necesarias para generar un disparo.
  91+ 8F15              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
  92+ 8F15
  93+ 8F15 3A EF 88         ld a,(Ctrl_0)                       ; bit 6 NZ = "Amadeus".
  94+ 8F18 CB 77            bit 6,a
  95+ 8F1A 20 04            jr nz,19F
  96+ 8F1C
  97+ 8F1C AF               xor a
  98+ 8F1D 32 58 89         ld (Disparo_entidad),a              ; Deshabilitamos el disparo de entidades.
  99+ 8F20
 100+ 8F20 3A D9 88     19 ld a,(Cuad_objeto)
 101+ 8F23 FE 02            cp 2
 102+ 8F25 38 66            jr c,3F
 103+ 8F27 28 64            jr z,3F
 104+ 8F29
 105+ 8F29              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 106+ 8F29
 107+ 8F29 E6 01            and 1
 108+ 8F2B 28 30            jr z,4F
 109+ 8F2D
 110+ 8F2D              ; 	Estamos en el 3er cuadrante de pantalla.
 111+ 8F2D              ; 	3er CUAD. ----- ----- ----- ----- -----
 112+ 8F2D              ;
 113+ 8F2D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 114+ 8F2D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 115+ 8F2D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 116+ 8F2D
 117+ 8F2D 2A C7 88     	ld hl,(Posicion_actual)
 118+ 8F30
 119+ 8F30              ;   Amadeus o entidad ???.
 120+ 8F30
 121+ 8F30 3A EF 88         ld a,(Ctrl_0)
 122+ 8F33 CB 77            bit 6,a
 123+ 8F35 28 0A            jr z,8F
 124+ 8F37
 125+ 8F37              ; 	Dispara Amadeus.
 126+ 8F37
 127+ 8F37 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
 128+ 8F39 CD C5 96         call PreviousScan
 129+ 8F3C CD C5 96         call PreviousScan
 130+ 8F3F
 131+ 8F3F              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 132+ 8F3F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 133+ 8F3F              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 134+ 8F3F              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 135+ 8F3F
 136+ 8F3F 18 11            jr 10F
 137+ 8F41
 138+ 8F41              ; 	Dispara Entidad.
 139+ 8F41
 140+ 8F41 01 80 80     8 ld bc,$8080	                                    ; Dirección C="$80", hacia abajo.
 141+ 8F44              ;                                                   ; Impacto B="$80", no hay impacto.
 142+ 8F44
 143+ 8F44              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 144+ 8F44              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 145+ 8F44
 146+ 8F44 C5               push bc
 147+ 8F45 06 10            ld b,16
 148+ 8F47 CD B6 96     9 call NextScan
 149+ 8F4A 10 FB            djnz 9B
 150+ 8F4C C1               pop bc
 151+ 8F4D CD B7 8F         call Ajusta_disparo_parte_izquierda
 152+ 8F50 18 06            jr 17F
 153+ 8F52
 154+ 8F52              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 155+ 8F52              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 156+ 8F52              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 157+ 8F52              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 158+ 8F52
 159+ 8F52 CD B7 8F     10 call Ajusta_disparo_parte_izquierda
 160+ 8F55 CD 2C 90         call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 161+ 8F58              ;                                                      ; _al generar el disparo.
 162+ 8F58
 163+ 8F58              ; 	LLegados a este punto tendremos:
 164+ 8F58              ;
 165+ 8F58              ;       Puntero_objeto_disparo en IY.
 166+ 8F58              ;       Rutinas_de_impresion en IX.
 167+ 8F58              ;       Puntero_de_impresion en HL.
 168+ 8F58              ;       Impacto/Dirección en BC.
 169+ 8F58
 170+ 8F58 CD BF 8F     17 call Almacena_disparo
 171+ 8F5B 18 52            jr 6F                                             ; RET.
 172+ 8F5D
 173+ 8F5D              ; 	Estamos en el 4º cuadrante de pantalla.
 174+ 8F5D              ; 	4º CUAD. ----- ----- ----- ----- -----
 175+ 8F5D              ;
 176+ 8F5D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 177+ 8F5D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 178+ 8F5D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 179+ 8F5D
 180+ 8F5D 2A C7 88     4 ld hl,(Posicion_actual)
 181+ 8F60
 182+ 8F60              ;   Amadeus o entidad ???.
 183+ 8F60
 184+ 8F60 3A EF 88         ld a,(Ctrl_0)
 185+ 8F63 CB 77            bit 6,a
 186+ 8F65 28 0A            jr z,11F
 187+ 8F67
 188+ 8F67              ; 	Dispara Amadeus.
 189+ 8F67
 190+ 8F67 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
 191+ 8F69 CD C5 96         call PreviousScan
 192+ 8F6C CD C5 96         call PreviousScan
 193+ 8F6F
 194+ 8F6F              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
 195+ 8F6F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 196+ 8F6F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 197+ 8F6F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 198+ 8F6F
 199+ 8F6F 18 11            jr 13F
 200+ 8F71
 201+ 8F71              ; 	Dispara Entidad.
 202+ 8F71
 203+ 8F71 01 80 80     11 ld bc,$8080                                        ; Dirección C="$80", hacia abajo.
 204+ 8F74              ;                                                     ; Impacto B="$80", no hay impacto.
 205+ 8F74
 206+ 8F74              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
 207+ 8F74              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
 208+ 8F74
 209+ 8F74 C5               push bc
 210+ 8F75 06 10            ld b,16
 211+ 8F77 CD B6 96     12 call NextScan
 212+ 8F7A 10 FB            djnz 12B
 213+ 8F7C C1               pop bc
 214+ 8F7D
 215+ 8F7D CD B0 8F         call Ajusta_disparo_parte_derecha
 216+ 8F80 18 06            jr 18F
 217+ 8F82
 218+ 8F82              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
 219+ 8F82              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 220+ 8F82              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 221+ 8F82              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 222+ 8F82
 223+ 8F82 CD B0 8F     13 call Ajusta_disparo_parte_derecha
 224+ 8F85 CD 2C 90         call Comprueba_Colision                             ; Retorna "$81" o "$80" en B indicando si se produce Colisión
 225+ 8F88              ;                                                       ; _al generar el disparo.
 226+ 8F88
 227+ 8F88              ; LLegados a este punto tendremos:
 228+ 8F88              ;
 229+ 8F88              ;       Puntero_objeto_disparo en IY.
 230+ 8F88              ;       Rutinas_de_impresion en IX.
 231+ 8F88              ;       Puntero_de_impresion en HL.
 232+ 8F88              ;       Impacto/Dirección en BC.
 233+ 8F88
 234+ 8F88 CD BF 8F     18 call Almacena_disparo
 235+ 8F8B 18 22            jr 6F                                               ; RET.
 236+ 8F8D
 237+ 8F8D              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
 238+ 8F8D
 239+ 8F8D 28 11        3 jr z,5F
 240+ 8F8F
 241+ 8F8F              ; 	1er CUAD. ----- ----- ----- ----- -----
 242+ 8F8F              ;
 243+ 8F8F              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 244+ 8F8F              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 245+ 8F8F              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrantes 1º y 2º no se comprueba colision_
 246+ 8F8F              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 247+ 8F8F
 248+ 8F8F              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
 249+ 8F8F              ;	   ""        ""       "f9", B="1"
 250+ 8F8F              ;	   ""        ""       "fb", B="2"
 251+ 8F8F              ; 	   ""        ""       "fb", B="3"
 252+ 8F8F
 253+ 8F8F 2A C7 88     	ld hl,(Posicion_actual)
 254+ 8F92 CD B6 96     	call NextScan
 255+ 8F95
 256+ 8F95              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 257+ 8F95              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 258+ 8F95              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
 259+ 8F95              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
 260+ 8F95
 261+ 8F95 CD B7 8F         call Ajusta_disparo_parte_izquierda
 262+ 8F98
 263+ 8F98              ; 	No se produce impacto. B="$80"
 264+ 8F98              ; 	Dirección del proyectil hacia abajo. C="$80"
 265+ 8F98
 266+ 8F98 01 80 80         ld bc,$8080
 267+ 8F9B
 268+ 8F9B              ; 	LLegados a este punto tendremos:
 269+ 8F9B              ;
 270+ 8F9B              ;       Puntero_objeto_disparo en IY.
 271+ 8F9B              ;       Rutinas_de_impresion en IX.
 272+ 8F9B              ;       Puntero_de_impresion en HL.
 273+ 8F9B              ;       Impacto/Dirección en BC.
 274+ 8F9B
 275+ 8F9B CD BF 8F         call Almacena_disparo
 276+ 8F9E 18 0F            jr 6F                                           ; RET.
 277+ 8FA0
 278+ 8FA0              ; 	Estamos en el 2º cuadrante de pantalla.
 279+ 8FA0              ; 	2º CUAD. ----- ----- ----- ----- -----
 280+ 8FA0              ;
 281+ 8FA0              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
 282+ 8FA0              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
 283+ 8FA0              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
 284+ 8FA0              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
 285+ 8FA0
 286+ 8FA0 2A C7 88     5 ld hl,(Posicion_actual)
 287+ 8FA3 CD B6 96     	call NextScan
 288+ 8FA6
 289+ 8FA6              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
 290+ 8FA6              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
 291+ 8FA6              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
 292+ 8FA6              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
 293+ 8FA6
 294+ 8FA6 CD B0 8F         call Ajusta_disparo_parte_derecha
 295+ 8FA9
 296+ 8FA9              ; 	No se produce impacto. B="$80"
 297+ 8FA9              ; 	Dirección del proyectil hacia abajo. C="80"
 298+ 8FA9
 299+ 8FA9 01 80 80     15 ld bc,$8080
 300+ 8FAC
 301+ 8FAC              ; 	LLegados a este punto tendremos:
 302+ 8FAC              ;
 303+ 8FAC              ;       Puntero_objeto_disparo en IY.
 304+ 8FAC              ;       Rutinas_de_impresion en IX.
 305+ 8FAC              ;       Puntero_de_impresion en HL.
 306+ 8FAC              ;       Impacto/Dirección en BC.
 307+ 8FAC
 308+ 8FAC CD BF 8F         call Almacena_disparo
 309+ 8FAF
 310+ 8FAF C9           6 ret
 311+ 8FB0
 312+ 8FB0              ; ----------------------------------------------------------------
 313+ 8FB0              ;
 314+ 8FB0              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
 315+ 8FB0              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
 316+ 8FB0              ;	_ (lado izq. o derecho), de la entidad que lo genera.
 317+ 8FB0
 318+ 8FB0 78           Ajusta_disparo_parte_derecha ld a,b
 319+ 8FB1 FE 02            cp 2
 320+ 8FB3 38 01            jr c,1F
 321+ 8FB5 23               inc hl
 322+ 8FB6 C9           1 ret
 323+ 8FB7
 324+ 8FB7 78           Ajusta_disparo_parte_izquierda ld a,b
 325+ 8FB8 FE 01        	cp 1
 326+ 8FBA 20 01        	jr nz,1F
 327+ 8FBC 2B           	dec hl
 328+ 8FBD 2B           1 dec hl
 329+ 8FBE C9               ret
 330+ 8FBF
 331+ 8FBF              ; ----------------------------------------------------------------
 332+ 8FBF              ;
 333+ 8FBF              ;   25/02/23
 334+ 8FBF              ;
 335+ 8FBF              ;   La Rutina va almacenando disparos en sus respectivas bases de datos.
 336+ 8FBF              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
 337+ 8FBF              ;
 338+ 8FBF              ;   Antes de salir de la rutina `iniciamos` los punteros de disparos, así vamos almacenando_
 339+ 8FBF              ;   _ los disparos generados en el primer campo que quede libre de la base de datos.
 340+ 8FBF
 341+ 8FBF              Almacena_disparo
 342+ 8FBF
 343+ 8FBF E5               push hl  										; HL contiene el puntero de impresión.
 344+ 8FC0 F1               pop af
 345+ 8FC1 08               ex af,af                                        ; Puntero_de_impresion en AF'.
 346+ 8FC2
 347+ 8FC2 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
 348+ 8FC3 E6 01            and 1
 349+ 8FC5 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
 350+ 8FC7              ;                                                   ; _ es Amadeus o una entidad la que dispara.
 351+ 8FC7              ; 	Dispara AMADEUS.
 352+ 8FC7
 353+ 8FC7              ;	Comprobamos que a Amadeus aún le quedan disparos.
 354+ 8FC7              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
 355+ 8FC7              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
 356+ 8FC7              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
 357+ 8FC7
 358+ 8FC7 C5               push bc
 359+ 8FC8 01 10 85         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A. Indica que no quedan disparos. Final de índice.
 360+ 8FCB 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 361+ 8FCE A7               and a
 362+ 8FCF ED 42            sbc hl,bc
 363+ 8FD1 CC 60 8C         call z,Inicia_Puntero_Disparo_Amadeus           ; Iniciamos el puntero de desplazamiento del índice y salimos. Amadeus no tiene disparos.
 364+ 8FD4 C1               pop bc
 365+ 8FD5 28 54            jr z,4F
 366+ 8FD7
 367+ 8FD7 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
 368+ 8FDA 23               inc hl
 369+ 8FDB 23               inc hl
 370+ 8FDC 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
 371+ 8FDF              ;                                                   ; _ Disparo_(+1).
 372+ 8FDF 18 18            jr 2F
 373+ 8FE1
 374+ 8FE1              ; Dispara una entidad.
 375+ 8FE1
 376+ 8FE1 C5           1 push bc
 377+ 8FE2 01 38 85         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
 378+ 8FE5 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 379+ 8FE8 A7               and a
 380+ 8FE9 ED 42            sbc hl,bc
 381+ 8FEB CC 59 8C         call z,Inicia_Puntero_Disparo_Entidades
 382+ 8FEE C1               pop bc
 383+ 8FEF 28 3A            jr z,4F
 384+ 8FF1
 385+ 8FF1 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 386+ 8FF4 23               inc hl
 387+ 8FF5 23               inc hl
 388+ 8FF6 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
 389+ 8FF9              ;                                                   ; _ Disparo_(+1).
 390+ 8FF9 CD DF 8C     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
 391+ 8FFC              ;                                                   ; _ los 8 bytes que definen el disparo:
 392+ 8FFC              ;
 393+ 8FFC              ;                                                     Puntero_objeto_disparo en IY.
 394+ 8FFC              ;                                                     Rutinas_de_impresion en IX.
 395+ 8FFC              ;                                                     Puntero_de_impresion en HL.
 396+ 8FFC              ;                                                     Impacto/Dirección en BC.
 397+ 8FFC
 398+ 8FFC 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
 399+ 8FFD 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
 400+ 8FFE 23               inc hl                                          ; _ al siguiente.
 401+ 8FFF A7               and a
 402+ 9000 20 C0            jr nz,3B
 403+ 9002
 404+ 9002 08               ex af,af
 405+ 9003 ED 73 15 89      ld (Stack),sp                                   ; Guardo SP en (Stack).)
 406+ 9007 F9               ld sp,hl
 407+ 9008
 408+ 9008 DD E5            push ix                                         ; Rutina de impresión.
 409+ 900A F5               push af                                         ; Puntero de impresión.
 410+ 900B FD E5            push iy                                         ; Puntero objeto.
 411+ 900D C5               push bc                                         ; Control.
 412+ 900E
 413+ 900E ED 7B 15 89      ld sp,(Stack)
 414+ 9012
 415+ 9012              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
 416+ 9012
 417+ 9012 21 04 89     	ld hl,Ctrl_1
 418+ 9015 CB C6        	set 0,(hl)
 419+ 9017
 420+ 9017 DD E5        	push ix
 421+ 9019 E1               pop hl
 422+ 901A F5               push af
 423+ 901B DD E1            pop ix
 424+ 901D
 425+ 901D CD A0 7F     	call Guarda_foto_registros
 426+ 9020
 427+ 9020 21 04 89     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
 428+ 9023 CB 86        	res 0,(hl)
 429+ 9025
 430+ 9025              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
 431+ 9025              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
 432+ 9025
 433+ 9025 CD 60 8C         call Inicia_Puntero_Disparo_Amadeus
 434+ 9028 CD 59 8C         call Inicia_Puntero_Disparo_Entidades
 435+ 902B
 436+ 902B C9           4 ret
 437+ 902C
 438+ 902C              ; ----------------------------------------------------------------
 439+ 902C              ;
 440+ 902C              ;   4/3/23
 441+ 902C              ;
 442+ 902C              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
 443+ 902C              ;   _ al generarse el disparo.
 444+ 902C              ;
 445+ 902C              ;       "$80" ..... No se produce colisión.
 446+ 902C              ;       "$81" ..... Se produce colisión.
 447+ 902C              ;
 448+ 902C              ;   Nota: A fecha de 21/7/23, es necesario que se produzca IMPACTO en los dos primeros scanlines_
 449+ 902C              ;         _ que forman el disparo.
 450+ 902C
 451+ 902C
 452+ 902C              Comprueba_Colision
 453+ 902C
 454+ 902C              ; Siempre que ejecutemos esta rutina, será Amadeus el que esté alojado en DRAW.
 455+ 902C
 456+ 902C FD E5            push iy                                        ; Puntero objeto (disparo).
 457+ 902E E5               push hl                                        ; Puntero de impresión (disparo).
 458+ 902F
 459+ 902F CD 65 90         call Modifica_H_Velocidad_disparo
 460+ 9032
 461+ 9032 7C               ld a,h                                         ; Si (Velocidad_disparo_entidades)="2", hemos incrementado H.
 462+ 9033 FE 58            cp $58                                         ; Se puede dar el caso de que nos hayamos metido en zona de attr.
 463+ 9035 28 19            jr z,1F                                        ; En ese caso salimos de la rutina sin comprobar colisión.
 464+ 9037
 465+ 9037 1E 80            ld e,$80                                       ; E,(Impacto)="$80".
 466+ 9039 CD 55 90         call Bucle_2                                   ; Comprobamos el 1er scanline.
 467+ 903C
 468+ 903C 7B               ld a,e
 469+ 903D E6 01            and 1
 470+ 903F 20 0F            jr nz,1F    ;""""                              ; Salimos si E="$80". Necesitamos colisión en los 2 scanlines_
 471+ 9041              ;                                                  ; _ para activar IMPACTO.
 472+ 9041 E1               pop hl
 473+ 9042 E5               push hl
 474+ 9043 CD B6 96         call NextScan
 475+ 9046
 476+ 9046 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 477+ 9047 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 478+ 9049 28 05            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 479+ 904B              ;                                                  ; _ 2º scanline si esto es así.
 480+ 904B 1E 80            ld e,$80                                       ; ----- ( ) ----- -----
 481+ 904D CD 55 90         call Bucle_2
 482+ 9050
 483+ 9050 43           1 ld b,e
 484+ 9051 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
 485+ 9052 FD E1            pop iy
 486+ 9054 C9               ret
 487+ 9055
 488+ 9055              ; ---------- ----------
 489+ 9055
 490+ 9055 06 02        Bucle_2 ld b,2
 491+ 9057 FD 7E 00     2 ld a,(iy)
 492+ 905A A6               and (hl)
 493+ 905B 28 02            jr z,1F
 494+ 905D 1E 81            ld e,$81
 495+ 905F 23           1 inc hl
 496+ 9060 FD 23            inc iy
 497+ 9062 10 F3            djnz 2B
 498+ 9064 C9               ret
 499+ 9065
 500+ 9065              ; ---------- ----------
 501+ 9065              ;
 502+ 9065              ;   21/7/23
 503+ 9065
 504+ 9065              Modifica_H_Velocidad_disparo
 505+ 9065
 506+ 9065 3A 4F 89         ld a,(Velocidad_disparo_entidades)             ; Si avanzamos menos scanlines de los que ocupa_
 507+ 9068 FE 03            cp 3                                           ; _ un disparo, siempre habrá IMPACTO. Para evitar esto_
 508+ 906A D0               ret nc                                         ; _ incrementamos H.
 509+ 906B 24               inc h
 510+ 906C
 511+ 906C C9               ret
 512+ 906D
 513+ 906D              ; -------------------------------------------------------------------------------------------------------------
 514+ 906D              ;
 515+ 906D              ;   11/04/23
 516+ 906D              ;
 517+ 906D              ;   La entidad se encuentra en la fila $14,$15 o $16 de pantalla.
 518+ 906D              ;   Vamos a comprobar si la entidad ocupa alguna de las columnas ocupadas por Amadeus y por lo_
 519+ 906D              ;   _ tanto, existe riesgo alto de colisión entre ambas.
 520+ 906D              ;
 521+ 906D              ;   MODIFICA: HL,DE,BC,A y AF´.
 522+ 906D
 523+ 906D              Compara_coordenadas_X
 524+ 906D
 525+ 906D              ; Guardamos las coordenadas_X de la entidad y Amadeus en sus correspondientes almacenes.
 526+ 906D              ; DRAW tiene almacenados, en este momento, los datos de la última ENTIDAD que hemos desplazado.
 527+ 906D
 528+ 906D              ; Preparamos registros:
 529+ 906D
 530+ 906D 21 CB 88         ld hl,Filas+6
 531+ 9070 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 532+ 9071 23               inc hl
 533+ 9072 23               inc hl
 534+ 9073 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y B.
 535+ 9074 43               ld b,e
 536+ 9075
 537+ 9075 21 D9 88         ld hl,Filas+20
 538+ 9078 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 539+ 9079 21 4A 89         ld hl,Coordenadas_X_Entidad
 540+ 907C CD 98 92         call Guarda_coordenadas_X
 541+ 907F
 542+ 907F              ; Preparamos registros:
 543+ 907F
 544+ 907F 21 A4 85         ld hl,Amadeus_db+6
 545+ 9082 56               ld d,(hl)                                           ; Coordenada_X de Amadeus en D.
 546+ 9083 23               inc hl
 547+ 9084 23               inc hl
 548+ 9085 5E               ld e,(hl)                                           ; (CTRL_DESPLZ) de Amadeus en E y A'.
 549+ 9086 7B               ld a,e
 550+ 9087 08               ex af,af'
 551+ 9088 21 B2 85         ld hl,Amadeus_db+20
 552+ 908B 4E               ld c,(hl)                                           ; (Cuad_objeto) de Amadeus en C.
 553+ 908C 21 47 89         ld hl,Coordenadas_X_Amadeus
 554+ 908F CD 98 92         call Guarda_coordenadas_X
 555+ 9092
 556+ 9092              ; Vamos a comparar las columnas_X de Amadeus y la entidad.
 557+ 9092              ; B contendrá el nº de (Columns) de la entidad. 2 si (CTRL_DESPLZ)="0" y 3 si es distinto.
 558+ 9092
 559+ 9092 04               inc b
 560+ 9093 05               dec b
 561+ 9094 28 04            jr z,1F
 562+ 9096 06 03            ld b,3
 563+ 9098 18 02            jr 2F
 564+ 909A 06 02        1 ld b,2
 565+ 909C 08           2 ex af,af'
 566+ 909D 3C               inc a
 567+ 909E 3D               dec a
 568+ 909F 28 04            jr z,5F
 569+ 90A1 0E 03            ld c,3
 570+ 90A3 18 02            jr 6F
 571+ 90A5 0E 02        5 ld c,2
 572+ 90A7 79           6 ld a,c
 573+ 90A8 08               ex af,af'
 574+ 90A9 11 4A 89         ld de,Coordenadas_X_Entidad
 575+ 90AC 1A           4 ld a,(de)
 576+ 90AD 21 47 89         ld hl,Coordenadas_X_Amadeus
 577+ 90B0 BE           3 cp (hl)
 578+ 90B1 28 0E            jr z,7F
 579+ 90B3 23               inc hl
 580+ 90B4 0D               dec c
 581+ 90B5 20 F9            jr nz,3B
 582+ 90B7 13               inc de
 583+ 90B8 08               ex af,af'
 584+ 90B9 4F               ld c,a
 585+ 90BA 08               ex af,af'
 586+ 90BB 10 EF            djnz 4B
 587+ 90BD
 588+ 90BD              ; Limpiamos los almacenes de coordenadas y salimos.
 589+ 90BD
 590+ 90BD CD D4 92     8 call Limpia_Coordenadas_X
 591+ 90C0 C9               ret
 592+ 90C1
 593+ 90C1 3E 01        7 ld a,1                                                ; El .db (Impacto)="1" indica que es altamente probable que esta_
 594+ 90C3 32 DE 88         ld (Impacto),a                                      ; _ entidad colisione con Amadeus, (ha superado, o está en la fila $14) y
 595+ 90C6 21 42 89         ld hl,Impacto2                                      ; _ alguna de las columnas_X que ocupa coinciden con las de Amadeus.
 596+ 90C9 CB D6            set 2,(hl)
 597+ 90CB 18 F0            jr 8B
 598+ 90CD
 599+ 90CD              ; -----------------------------------------------------------------------
 600+ 90CD              ;
 601+ 90CD              ;   17/04/23
 602+ 90CD              ;
 603+ 90CD
 604+ 90CD              Detecta_colision_nave_entidad
 605+ 90CD
 606+ 90CD              ; LLegados a este punto, los datos que contiene DRAW son los de Amadeus.
 607+ 90CD
 608+ 90CD 2A C7 88         ld hl,(Posicion_actual)
 609+ 90D0 CD 11 96         call Calcula_puntero_de_impresion
 610+ 90D3
 611+ 90D3              ; Ahora, IX contiene el "puntero_de_impresión" de Amadeus, (arriba-izq).
 612+ 90D3              ;        IY contiene el "puntero_objeto" de Amadeus, (arriba-izq).
 613+ 90D3
 614+ 90D3 DD E5            push ix
 615+ 90D5 E1               pop hl
 616+ 90D6 E5               push hl
 617+ 90D7
 618+ 90D7              ; ----- ----- -----
 619+ 90D7 1E 00            ld e,0                                         ; Indica impacto.
 620+ 90D9 06 0A            ld b,10
 621+ 90DB CD 0B 91     2 call Bucle_3                                     ; Comprobamos el 1er scanline.
 622+ 90DE 7B               ld a,e
 623+ 90DF FE 05            cp 5
 624+ 90E1 38 0E            jr c,3F
 625+ 90E3
 626+ 90E3              ; LLegados a este punto:
 627+ 90E3              ;
 628+ 90E3              ;   HAY COLISIÓN !!!!!.
 629+ 90E3              ;
 630+ 90E3              ;   .db (Impacto) de Amadeus a "1".
 631+ 90E3              ;   SET el bit3 de (Impacto2).
 632+ 90E3              ;
 633+ 90E3              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 634+ 90E3
 635+ 90E3 21 B7 85         ld hl,Amadeus_db+25
 636+ 90E6 36 01            ld (hl),1
 637+ 90E8 21 42 89         ld hl,Impacto2                                 ; Cuando se produce Colisión, RES el bit2 de (Impacto2) y_
 638+ 90EB CB 96            res 2,(hl)                                     ; _ SET el bit3. El bit3 de (Impacto2) indica que hay contacto_
 639+ 90ED CB DE            set 3,(hl)                                     ; _  entre una entidad y Amadeus.
 640+ 90EF 18 18            jr 1F
 641+ 90F1
 642+ 90F1              ; -----
 643+ 90F1
 644+ 90F1 E1           3 pop hl
 645+ 90F2 CD B6 96         call NextScan
 646+ 90F5 E5               push hl
 647+ 90F6 7C               ld a,h                                         ; El 1er scanline de la bala se pinta en pantalla.
 648+ 90F7 FE 58            cp $58                                         ; El 2º scanline indica colisión porque entra en zona_
 649+ 90F9 28 0E            jr z,1F                                        ; _ de atributos. Evitamos comprobar colisión en el _
 650+ 90FB 30 0C            jr nc,1F
 651+ 90FD              ;                                                  ; _ 2º scanline si esto es así.
 652+ 90FD 10 DC            djnz 2B
 653+ 90FF
 654+ 90FF              ; Aqui tengo que fabricar una rutina que ponga a "0" el .db (Impacto) de la entidad implicada.
 655+ 90FF
 656+ 90FF              ; LLegados a este punto:
 657+ 90FF              ;
 658+ 90FF              ;   NO HAY COLISIÓN !!!!!.
 659+ 90FF              ;
 660+ 90FF              ;   .db (Impacto) de Amadeus a "0".
 661+ 90FF              ;   RES el bit2 de (Impacto2).
 662+ 90FF              ;
 663+ 90FF              ;   Nota: El .db (Impacto) de la entidad implicada lo puso a "1" la rutina [Compara_coordenadas_X].
 664+ 90FF              ;   Lo colocamos a "0".
 665+ 90FF
 666+ 90FF 21 42 89         ld hl,Impacto2
 667+ 9102 CB 96            res 2,(hl)
 668+ 9104 2A 43 89         ld hl,(Entidad_sospechosa_de_colision)
 669+ 9107 36 00            ld (hl),0
 670+ 9109
 671+ 9109 E1           1 pop hl                                           ; Puntero de impresión en HL e indicador de Impacto en B.
 672+ 910A C9               ret
 673+ 910B
 674+ 910B               ; ---------- ----------
 675+ 910B
 676+ 910B C5           Bucle_3 push bc                                    ; guardamos el contador de scanlines en la pila.
 677+ 910C 3A C6 88         ld a,(Columns)
 678+ 910F 47               ld b,a
 679+ 9110 FD 7E 00     2 ld a,(iy)
 680+ 9113 BE               cp (hl)
 681+ 9114 28 01            jr z,1F
 682+ 9116
 683+ 9116 1C               inc e
 684+ 9117
 685+ 9117 23           1 inc hl
 686+ 9118 FD 23            inc iy
 687+ 911A 10 F4            djnz 2B
 688+ 911C C1               pop bc
 689+ 911D C9               ret
 690+ 911E
 691+ 911E              ; -------------------------------------------------------------------------------------------------------------
 692+ 911E              ;
 693+ 911E              ;   13/03/23
 694+ 911E              ;
 695+ 911E              ;   Limpia el album de fotos de disparos después de cada borra/pinta. 50fps.
 696+ 911E              ;
 697+ 911E              ;   DESTRUYE: HL,BC,DE y A.
 698+ 911E
 699+ 911E 21 50 71     Limpia_album_disparos ld hl,Album_de_fotos_disparos
 700+ 9121 7E               ld a,(hl)
 701+ 9122 A7               and a
 702+ 9123 C8               ret z                                               ; Salimos de la rutina si no hay ningún disparo en pantalla.
 703+ 9124
 704+ 9124 44               ld b,h
 705+ 9125 4D               ld c,l
 706+ 9126 2A 1D 89         ld hl,(Stack_snapshot_disparos)
 707+ 9129 E5               push hl
 708+ 912A A7               and a
 709+ 912B ED 42            sbc hl,bc
 710+ 912D E5               push hl
 711+ 912E C1               pop bc                                              ; BC contiene el nº de bytes a limpiar.
 712+ 912F
 713+ 912F E1               pop hl
 714+ 9130 54               ld d,h
 715+ 9131 5D               ld e,l
 716+ 9132 1B               dec de
 717+ 9133 ED B8            lddr                                                ; Limpiamos.
 718+ 9135
 719+ 9135 21 50 71         ld hl,Album_de_fotos_disparos
 720+ 9138 22 1D 89         ld (Stack_snapshot_disparos),hl
 721+ 913B
 722+ 913B C9               ret
 723+ 913C
 724+ 913C              ; -------------------------------------------------------------------------------------------------------------
 725+ 913C              ;
 726+ 913C              ;   18/07/23
 727+ 913C              ;
 728+ 913C
 729+ 913C              Motor_de_disparos
 730+ 913C
 731+ 913C              ; Gestiona DISPAROS DE AMADEUS.
 732+ 913C
 733+ 913C 01 22 85         ld bc,Disparo_3A                                     ; Último disparo del índice.
 734+ 913F 2A 40 89         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)               ; Puntero del índice de disparos de Amadeus.
 735+ 9142
 736+ 9142 CD DF 8C     2 call Extrae_address
 737+ 9145 7E               ld a,(hl)
 738+ 9146 A7               and a
 739+ 9147 28 31            jr z,1F                                              ; Disparo vacio, saltamos al siguiente.
 740+ 9149
 741+ 9149              ; ----- ----- ----- ----- ----- -----
 742+ 9149
 743+ 9149 C5               push bc
 744+ 914A CD 0E 92         call foto_disparo_a_borrar
 745+ 914D
 746+ 914D              ; Existe colisión con este disparo???
 747+ 914D
 748+ 914D 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 749+ 914E 7E               ld a,(hl)
 750+ 914F 2B               dec hl
 751+ 9150 E6 01            and 1
 752+ 9152 28 1D            jr z,9F
 753+ 9154
 754+ 9154              ;   En este punto:
 755+ 9154              ;
 756+ 9154              ;   HL está situado en el 1er byte de la DB del disparo que ha impactado en Amadeus.
 757+ 9154              ;   IX contiene el puntero de impresión, (zona de pantalla donde se ha producido el impacto_
 758+ 9154              ;   _con la entidad).
 759+ 9154              ;
 760+ 9154              ;   Disparo_2A defw 0                                ; Control.
 761+ 9154              ;    defw 0                                          ; Puntero objeto.
 762+ 9154              ;    defw 0                                          ; Puntero de impresión.
 763+ 9154              ;    defw 0                                          ; Rutina de impresión.
 764+ 9154
 765+ 9154 E5               push hl
 766+ 9155
 767+ 9155 06 04            ld b,4
 768+ 9157 23           19 inc hl
 769+ 9158 10 FD            djnz 19B
 770+ 915A
 771+ 915A CD DF 8C         call Extrae_address
 772+ 915D CD 7F 9D         call Genera_coordenadas_disparo
 773+ 9160
 774+ 9160              ; Ahora tenemos la coordenada_X del disparo en D y la coordenada_y en E.
 775+ 9160
 776+ 9160 21 45 89         ld hl,Coordenadas_disparo_certero
 777+ 9163 72               ld (hl),d
 778+ 9164 23               inc hl
 779+ 9165 73               ld (hl),e
 780+ 9166
 781+ 9166              ; Elimino el disparo de la base de datos.
 782+ 9166
 783+ 9166 E1               pop hl
 784+ 9167 CD 8D 92         call Elimina_disparo_de_base_de_datos
 785+ 916A 21 42 89         ld hl,Impacto2
 786+ 916D CB C6            set 0,(hl)                                           ; Indicamos que se ha producido Impacto en una entidad.
 787+ 916F
 788+ 916F 18 06            jr 11F
 789+ 9171
 790+ 9171 CD 37 92     9 call Mueve_disparo
 791+ 9174 CD 0E 92         call foto_disparo_a_borrar
 792+ 9177
 793+ 9177 C1           11 pop bc
 794+ 9178 18 04            jr 7F
 795+ 917A
 796+ 917A              ; ----- ----- ----- ----- ----- -----
 797+ 917A
 798+ 917A ED 42        1 sbc hl,bc
 799+ 917C 28 0A            jr z,3F                                              ; Hemos llegado al final del índice de disparos de Amadeus??
 800+ 917E
 801+ 917E 2A 40 89     7 ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)                 ; Nos situamos en el 2º disparo de Amadeus.
 802+ 9181 23               inc hl
 803+ 9182 23               inc hl
 804+ 9183 22 40 89         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
 805+ 9186 18 BA            jr 2B
 806+ 9188
 807+ 9188 CD 60 8C     3 call Inicia_Puntero_Disparo_Amadeus                    ; (Banco_de_pruebas.asm). Sitúa el puntero del índice_
 808+ 918B              ;                                                        ; _ de disparos de Amadeus en el 1er disparo de nuestra nave.
 809+ 918B
 810+ 918B              ; Gestiona DISPAROS DE ENTIDADES.
 811+ 918B
 812+ 918B 01 8A 85         ld bc,Disparo_11
 813+ 918E 2A 3E 89         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 814+ 9191
 815+ 9191 CD DF 8C     5 call Extrae_address
 816+ 9194 7E               ld a,(hl)
 817+ 9195 A7               and a
 818+ 9196 28 61            jr z,4F                                              ; Disparo vacio, saltamos al siguiente.
 819+ 9198
 820+ 9198              ; ----- ----- ----- ----- ----- -----
 821+ 9198
 822+ 9198 C5               push bc
 823+ 9199 CD 0E 92         call foto_disparo_a_borrar
 824+ 919C
 825+ 919C              ; Existe colisión con este disparo???
 826+ 919C
 827+ 919C 23               inc hl                                               ; El 1er byte indica dirección, el 2º, IMPACTO.
 828+ 919D 7E               ld a,(hl)
 829+ 919E 2B               dec hl
 830+ 919F E6 01            and 1
 831+ 91A1 28 4D            jr z,10F
 832+ 91A3
 833+ 91A3              ;! La colisión se produce con Amadeus???
 834+ 91A3              ;! Amadeus siempre tiene (Coordenada_y)="$16".
 835+ 91A3
 836+ 91A3 E5               push hl
 837+ 91A4
 838+ 91A4 06 04            ld b,4
 839+ 91A6 23           16 inc hl
 840+ 91A7 10 FD            djnz 16B                                             ; Sitúa HL en el Puntero_de_impresion del disparo.
 841+ 91A9
 842+ 91A9 CD DF 8C         call Extrae_address
 843+ 91AC CD 7F 9D         call Genera_coordenadas_disparo
 844+ 91AF
 845+ 91AF 7B               ld a,e                                               ; Fila en la que se encuentra el disparo en A.
 846+ 91B0 FE 16            cp $16
 847+ 91B2 38 2A            jr c,15F
 848+ 91B4
 849+ 91B4
 850+ 91B4              ; EXISTE COLISIÓN EN ZONA DE AMADEUS. -------------------------------------
 851+ 91B4
 852+ 91B4 D5               push de                                              ; DE contiene las coordenadas del disparo que ha colisionado.
 853+ 91B5
 854+ 91B5              ; Preparamos los registros para llamar a [Guarda_coordenadas_X]. Necesitamos averiguar que columnas ocupa Amadeus.
 855+ 91B5
 856+ 91B5
 857+ 91B5 2A 4D 89         ld hl,(Puntero_de_impresion_Amadeus)
 858+ 91B8
 859+ 91B8              ; Coordenada X de Amadeus en D.
 860+ 91B8
 861+ 91B8 7D               ld a,l
 862+ 91B9 E6 1F            and $1F
 863+ 91BB 57               ld d,a
 864+ 91BC
 865+ 91BC 21 A6 85         ld hl,Amadeus_db+8
 866+ 91BF 5E               ld e,(hl)                                            ; (CTRL_DESPLZ) de Amadeus en E.
 867+ 91C0
 868+ 91C0 21 47 89         ld hl,Coordenadas_X_Amadeus
 869+ 91C3 CD 98 92         call Guarda_coordenadas_X
 870+ 91C6
 871+ 91C6 D1               pop de                                              ; Coordenadas del disparo en DE. D Coordenada_X.
 872+ 91C7
 873+ 91C7              ; Comparamos la coordenada_X del disparo con las coordenadas_X de Amadeus.
 874+ 91C7
 875+ 91C7 06 02            ld b,2
 876+ 91C9 C5           20 push bc
 877+ 91CA
 878+ 91CA 06 03            ld b,3
 879+ 91CC 21 47 89         ld hl,Coordenadas_X_Amadeus
 880+ 91CF 7E           18 ld a,(hl)
 881+ 91D0 BA               cp d
 882+ 91D1 20 04            jr nz,17F
 883+ 91D3
 884+ 91D3              ;! Colisión Amadeus !!!!!!!!!!
 885+ 91D3
 886+ 91D3 C1               pop bc
 887+ 91D4 E1               pop hl
 888+ 91D5 18 0D            jr 14F
 889+ 91D7
 890+ 91D7 23           17 inc hl
 891+ 91D8 10 F5            djnz 18B
 892+ 91DA
 893+ 91DA 14               inc d                       ; 2ª Coordenada_X del disparo.
 894+ 91DB
 895+ 91DB C1               pop bc
 896+ 91DC 10 EB            djnz 20B
 897+ 91DE
 898+ 91DE
 899+ 91DE              ; No hay colisión. Amadeus se encuentra en una línea inferior.
 900+ 91DE              ; Restauramos el indicador de colisión y movemos el disparo, (JR 10F).
 901+ 91DE
 902+ 91DE E1           15 pop hl
 903+ 91DF 23               inc hl
 904+ 91E0 35               dec (hl)
 905+ 91E1 2B               dec hl
 906+ 91E2 18 0C            jr 10F
 907+ 91E4
 908+ 91E4              ; Elimino el disparo de la base de datos, indicamos el impacto, SET1,(Impacto2) y limpiamos el_
 909+ 91E4              ; _ almacén de coordenadas_X de Amadeus.
 910+ 91E4
 911+ 91E4 E5           14 push hl
 912+ 91E5 CD 8D 92         call Elimina_disparo_de_base_de_datos
 913+ 91E8 21 42 89         ld hl,Impacto2
 914+ 91EB CB CE            set 1,(hl)
 915+ 91ED E1               pop hl
 916+ 91EE 18 06            jr 12F
 917+ 91F0
 918+ 91F0              ; No existe colisión con este disparo, MOVEMOS DISPARO.
 919+ 91F0
 920+ 91F0 CD 37 92     10 call Mueve_disparo
 921+ 91F3 CD 0E 92         call foto_disparo_a_borrar
 922+ 91F6 C1           12 pop bc
 923+ 91F7
 924+ 91F7 18 04            jr 8F
 925+ 91F9
 926+ 91F9              ; ----- ----- ----- ----- ----- -----
 927+ 91F9
 928+ 91F9 ED 42        4 sbc hl,bc
 929+ 91FB 28 0A            jr z,6F
 930+ 91FD
 931+ 91FD 2A 3E 89     8 ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
 932+ 9200 23               inc hl
 933+ 9201 23               inc hl
 934+ 9202 22 3E 89         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
 935+ 9205 18 8A            jr 5B
 936+ 9207
 937+ 9207 CD 59 8C     6 call Inicia_Puntero_Disparo_Entidades
 938+ 920A CD D4 92         call Limpia_Coordenadas_X
 939+ 920D C9               ret
 940+ 920E
 941+ 920E              ; ------------------------------------------------------------------
 942+ 920E
 943+ 920E              foto_disparo_a_borrar
 944+ 920E
 945+ 920E 7E               ld a,(hl)                                            ; Si el disparo está vacio salimos de la rutina.
 946+ 920F A7               and a                                                ; [Mueve_disparo] a eliminado el disparo de la base de datos_
 947+ 9210 C8               ret z                                                ; _ al sobrepasar los límites de pantalla.
 948+ 9211
 949+ 9211 E5               push hl
 950+ 9212 23               inc hl
 951+ 9213 23               inc hl
 952+ 9214 ED 73 15 89      ld (Stack),sp
 953+ 9218 F9               ld sp,hl                                             ; Situamos el sp en Puntero objeto
 954+ 9219 FD E1            pop iy
 955+ 921B DD E1            pop ix
 956+ 921D E1               pop hl
 957+ 921E ED 7B 15 89      ld sp,(Stack)
 958+ 9222 3A 04 89         ld a,(Ctrl_1)
 959+ 9225 CB C7            set 0,a
 960+ 9227 32 04 89         ld (Ctrl_1),a
 961+ 922A CD A0 7F         call Guarda_foto_registros
 962+ 922D 3A 04 89         ld a,(Ctrl_1)
 963+ 9230 CB 87            res 0,a
 964+ 9232 32 04 89         ld (Ctrl_1),a
 965+ 9235 E1               pop hl
 966+ 9236 C9               ret
 967+ 9237
 968+ 9237              ;---------------------------------------------------
 969+ 9237              ;
 970+ 9237              ;   18/07/23
 971+ 9237              ;
 972+ 9237
 973+ 9237              Mueve_disparo
 974+ 9237
 975+ 9237              ;   HL apunta al 1er byte, (Control), del disparo en curso.
 976+ 9237              ;   El 1er byte indica dirección, el 2º, IMPACTO.
 977+ 9237              ;   Dirección del disparo en A. ("$80" hacia abajo, "$81" hacia arriba).
 978+ 9237
 979+ 9237 E5               push hl
 980+ 9238
 981+ 9238 7E               ld a,(hl)
 982+ 9239
 983+ 9239 06 04            ld b,4
 984+ 923B 23           1 inc hl
 985+ 923C 10 FD            djnz 1B
 986+ 923E
 987+ 923E              ;   HL apunta ahora a la dirección donde se encuentra el puntero de impresión del disparo.
 988+ 923E
 989+ 923E CD DF 8C         call Extrae_address
 990+ 9241
 991+ 9241 E6 01            and 1
 992+ 9243 28 2E            jr z,2F                             ; Disparamos hacia arriba o abajo???
 993+ 9245
 994+ 9245              ; Disparo hacia arriba, (Amadeus).
 995+ 9245
 996+ 9245              ; Nota: Aquí podemos implementar una variable para modificar la velocidad del disparo en función_
 997+ 9245              ; _ de la dificultad.
 998+ 9245
 999+ 9245 CD C5 96         call PreviousScan
1000+ 9248 CD C5 96         call PreviousScan
1001+ 924B CD C5 96         call PreviousScan
1002+ 924E CD C5 96         call PreviousScan
1003+ 9251
1004+ 9251              ; Detecta si el disparo de Amadeus sale de pantalla:
1005+ 9251
1006+ 9251 7C               ld a,h
1007+ 9252 FE 40            cp $40
1008+ 9254 30 0C            jr nc,3F                                    ; El disparo no ha salido de la pantalla. Compreba colisión.
1009+ 9256
1010+ 9256              ; Si el proyectil sale de pantalla borramos el disparo de la base de datos.
1011+ 9256
1012+ 9256 EB               ex de,hl
1013+ 9257 06 04            ld b,4
1014+ 9259 2B           6 dec hl
1015+ 925A 10 FD            djnz 6B
1016+ 925C
1017+ 925C CD 8D 92         call Elimina_disparo_de_base_de_datos
1018+ 925F E1               pop hl
1019+ 9260 18 10            jr 7F
1020+ 9262
1021+ 9262              ; Se ha desplazado la bala actualizo el puntero de impresión y compruebo colisión.
1022+ 9262              ; HL contiene el puntero de impresión del disparo.
1023+ 9262              ; DE contiene la dirección donde se encuentra el puntero de impresión del disparo.
1024+ 9262
1025+ 9262 D5           3 push de
1026+ 9263 C5               push bc
1027+ 9264
1028+ 9264 CD 2C 90         call Comprueba_Colision
1029+ 9267
1030+ 9267              ; B="$80", no hay colisión. B="$81", existe colisión.
1031+ 9267
1032+ 9267 78               ld a,b
1033+ 9268
1034+ 9268 C1               pop bc
1035+ 9269 D1               pop de
1036+ 926A
1037+ 926A EB               ex de,hl
1038+ 926B
1039+ 926B 73               ld (hl),e                                   ; Acualizamos el (Puntero_de_impresion) del disparo tras el_
1040+ 926C 23               inc hl                                      ; _ movimiento.
1041+ 926D 72               ld (hl),d
1042+ 926E
1043+ 926E E1               pop hl                                      ; Volvemos a situarnos en el 1er byte, (Control), del disparo_
1044+ 926F
1045+ 926F 23               inc hl                                      ; _ en curso.
1046+ 9270 77               ld (hl),a                                   ; Modificamos el byte "impacto" de la base de datos del disparo si es necesario.
1047+ 9271 2B               dec hl
1048+ 9272
1049+ 9272 C9           7 ret
1050+ 9273
1051+ 9273              ; Disparo hacia abajo, (Entidad).
1052+ 9273
1053+ 9273 3A 4F 89     2 ld a,(Velocidad_disparo_entidades)
1054+ 9276 47               ld b,a
1055+ 9277
1056+ 9277 CD B6 96     4 call NextScan
1057+ 927A 10 FB            djnz 4B
1058+ 927C
1059+ 927C              ; Detecta si el disparo de la entidad sale de la pantalla.
1060+ 927C
1061+ 927C 7C               ld a,h
1062+ 927D FE 58            cp $58
1063+ 927F 38 E1            jr c,3B                                     ; El disparo no ha salido de la pantalla. Compreba colisión.
1064+ 9281
1065+ 9281 EB               ex de,hl
1066+ 9282 06 04            ld b,4
1067+ 9284 2B           5 dec hl
1068+ 9285 10 FD            djnz 5B
1069+ 9287
1070+ 9287 CD 8D 92         call Elimina_disparo_de_base_de_datos
1071+ 928A E1               pop hl
1072+ 928B 18 E5            jr 7B
1073+ 928D
1074+ 928D              ; HL apunta al primer byte de la base de datos del disparo.
1075+ 928D
1076+ 928D 01 07 00     Elimina_disparo_de_base_de_datos ld bc,7
1077+ 9290 AF               xor a
1078+ 9291 77               ld (hl),a
1079+ 9292 54               ld d,h
1080+ 9293 5D               ld e,l
1081+ 9294 13               inc de
1082+ 9295 ED B0            ldir
1083+ 9297 C9               ret
1084+ 9298
1085+ 9298              ; -----------------------------------------------------------------
1086+ 9298              ;
1087+ 9298              ;   19/7/23
1088+ 9298              ;
1089+ 9298              ;   Guarda las Coordenadas_X que ocupa Amadeus/Entidad en la pantalla.
1090+ 9298              ;
1091+ 9298              ;   2 Coordenadas_X, (si CTRL_DESPLZ es "0").
1092+ 9298              ;   3 Coordenadas_X, (si CTRL_DESPLZ es distinto de "0").
1093+ 9298              ;
1094+ 9298              ;   Esta información se almacenará en un pequeño almacen de 3 bytes: Coordenadas_X_Amadeus o Coordenadas_X_Entidad.
1095+ 9298              ;
1096+ 9298              ;   INPUTS:
1097+ 9298              ;
1098+ 9298              ;   DE contiene (Coordenada_X)/(CTRL_DESPLZ) de la Entidad/Amadeus respectivamente.
1099+ 9298              ;   HL contiene la dirección del 1er byte de los almacenes de 3 bytes, (Coordenadas_X_Amadeus) o (Coordenadas_X_Entidad).
1100+ 9298
1101+ 9298              ;   MODIFICA: A, HL, BC y DE.
1102+ 9298
1103+ 9298              Guarda_coordenadas_X
1104+ 9298
1105+ 9298 7B               ld a,e
1106+ 9299 A7               and a
1107+ 929A 20 04            jr nz,1F
1108+ 929C
1109+ 929C 06 02            ld b,2
1110+ 929E 18 02            jr 2F
1111+ 92A0
1112+ 92A0 06 03        1 ld b,3
1113+ 92A2 72           2 ld (hl),d
1114+ 92A3 23               inc hl
1115+ 92A4 14               inc d
1116+ 92A5 10 FB            djnz 2B
1117+ 92A7
1118+ 92A7 C9               ret
1119+ 92A8
1120+ 92A8              ; -----------------------------------------------------------------
1121+ 92A8              ;
1122+ 92A8              ;   12/04/23
1123+ 92A8              ;
1124+ 92A8
1125+ 92A8 3A 42 89     Selector_de_impactos ld a,(Impacto2)
1126+ 92AB A7               and a
1127+ 92AC C8               ret z
1128+ 92AD
1129+ 92AD FE 04            cp 4
1130+ 92AF 20 09            jr nz,1F
1131+ 92B1
1132+ 92B1
1133+ 92B1              ; La colisión se produce por contacto entre Amadeus y una entidad.
1134+ 92B1
1135+ 92B1 CD CD 90         call Detecta_colision_nave_entidad
1136+ 92B4
1137+ 92B4 21 42 89         ld hl,Impacto2
1138+ 92B7 CB 5E            bit 3,(hl)
1139+ 92B9 C0               ret nz                                               ; Existe colisión, RET.
1140+ 92BA
1141+ 92BA              ; No hay colisión SIN disparos. Analizamos si hay impacto por disparos.
1142+ 92BA              ; Primero analizamos si algún disparo impacta en Amadeus.
1143+ 92BA
1144+ 92BA 21 42 89     1 ld hl,Impacto2
1145+ 92BD CB 4E            bit 1,(hl)
1146+ 92BF 28 07            jr z,2F
1147+ 92C1
1148+ 92C1 21 B7 85         ld hl,Amadeus_db+25                                  ; Existe colisión con Amadeus.
1149+ 92C4 36 01            ld (hl),1                                            ; (Impacto) de Amadeus a "1".
1150+ 92C6 18 0B            jr 3F
1151+ 92C8
1152+ 92C8 21 42 89     2 ld hl,Impacto2
1153+ 92CB CB 46            bit 0,(hl)
1154+ 92CD C8               ret z
1155+ 92CE
1156+ 92CE              ; Aquí llamaremos a la rutina que detecta a que entidad hemos alcanzado.
1157+ 92CE
1158+ 92CE 21 04 89         ld hl,Ctrl_1
1159+ 92D1 CB D6            set 2,(hl)
1160+ 92D3
1161+ 92D3 C9           3 ret
1162+ 92D4
1163+ 92D4              ; -----------------------------------------------------------------
1164+ 92D4              ;
1165+ 92D4              ;   19/7/23
1166+ 92D4              ;
1167+ 92D4              ;   Limpia las coordenadas_x de Amadeus y entidad.
1168+ 92D4
1169+ 92D4 AF           Limpia_Coordenadas_X xor a
1170+ 92D5 06 06            ld b,6
1171+ 92D7 21 47 89         ld hl,Coordenadas_X_Amadeus
1172+ 92DA 77           1 ld (hl),a
1173+ 92DB 23               inc hl
1174+ 92DC 10 FC            djnz 1B
1175+ 92DE C9               ret
1176+ 92DF
1177+ 92DF              ; -----------------------------------------------------------------
1178+ 92DF              ;
1179+ 92DF              ;   25/04/23
1180+ 92DF              ;
1181+ 92DF
1182+ 92DF              Determina_resultado_comparativa
1183+ 92DF
1184+ 92DF              ;   Tenemos en Hl el resultado de comparar las coordenadas de esta entidad con las del dispar_
1185+ 92DF              ;   _ que tiene colisión, (Coordenadas_disparo_certero).
1186+ 92DF              ;
1187+ 92DF              ;   HL ..... Coordenada_Y / Coordenada_X de la entidad en curso.
1188+ 92DF              ;   DE ..... Coordenada_Y / Coordenada_X de (Coordenadas_disparo_certero).
1189+ 92DF              ;
1190+ 92DF              ;   SBC HL,DE
1191+ 92DF
1192+ 92DF              ; 2º Cuad H = "$ff","$00","$01","$02" .......... 1er Cuad H = "$00","$01","$02","$03"
1193+ 92DF              ;         L = "$ff","$00","$01"       ..........          L = "$00","$01","$02"
1194+ 92DF
1195+ 92DF              ; 3º Cuad H = "$fe","$ff","$01"             .......... 4º Cuad  H = "$ff",$00","$01","$02","$03"
1196+ 92DF              ;         L = "$01","$02","$03"             ..........          L = "$fe",$00","$01","$02"
1197+ 92DF
1198+ 92DF
1199+ 92DF 3A D9 88         ld a,(Cuad_objeto)
1200+ 92E2 FE 02            cp 2
1201+ 92E4 28 26            jr z,2F
1202+ 92E6 38 24            jr c,2F
1203+ 92E8
1204+ 92E8              ; Cuadrantes 3º y 4º
1205+ 92E8
1206+ 92E8 E6 01            and 1
1207+ 92EA 28 10            jr z,4F
1208+ 92EC
1209+ 92EC              ; Cuadrante 3º
1210+ 92EC
1211+ 92EC 7C               ld a,h
1212+ 92ED 06 00            ld b,0
1213+ 92EF
1214+ 92EF CD 7A 93         call Compara_cositas_H3
1215+ 92F2
1216+ 92F2 04               inc b
1217+ 92F3 05               dec b
1218+ 92F4 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1219+ 92F5
1220+ 92F5 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1221+ 92F6 06 00            ld b,0
1222+ 92F8
1223+ 92F8 CD 8C 93         call Compara_cositas_L3
1224+ 92FB C9               ret
1225+ 92FC
1226+ 92FC              ; Cuadrante 4º
1227+ 92FC
1228+ 92FC 7C           4 ld a,h
1229+ 92FD 06 00            ld b,0
1230+ 92FF
1231+ 92FF CD 9E 93         call Compara_cositas_H4
1232+ 9302
1233+ 9302 04               inc b
1234+ 9303 05               dec b
1235+ 9304 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1236+ 9305
1237+ 9305 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1238+ 9306 06 00            ld b,0
1239+ 9308
1240+ 9308 CD B4 93         call Compara_cositas_L4
1241+ 930B C9               ret
1242+ 930C
1243+ 930C              ; Cuadrantes 1º y 2º.
1244+ 930C
1245+ 930C 28 10        2 jr z,3F
1246+ 930E
1247+ 930E              ; 1er Cuadrante
1248+ 930E
1249+ 930E 7C               ld a,h
1250+ 930F 06 00            ld b,0
1251+ 9311
1252+ 9311 CD 52 93         call Compara_cositas_H1
1253+ 9314
1254+ 9314 04               inc b
1255+ 9315 05               dec b
1256+ 9316 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1257+ 9317
1258+ 9317 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1259+ 9318 06 00            ld b,0
1260+ 931A
1261+ 931A CD 68 93         call Compara_cositas_L1
1262+ 931D C9               ret
1263+ 931E
1264+ 931E
1265+ 931E              ; 2º Cuadrante
1266+ 931E
1267+ 931E 7C           3 ld a,h
1268+ 931F 06 00            ld b,0
1269+ 9321
1270+ 9321 CD 2E 93         call Compara_cositas_H2
1271+ 9324
1272+ 9324 04               inc b
1273+ 9325 05               dec b
1274+ 9326 C8               ret z                                   ; B="0". Indica que H es distinto de "0, $fe, $ff o $01". Salimos de la rutina.
1275+ 9327
1276+ 9327 7D               ld a,l                                  ; B="1". La comparación de H es satisfactoria, pasamos a comparar L.
1277+ 9328 06 00            ld b,0
1278+ 932A
1279+ 932A CD 40 93         call Compara_cositas_L2
1280+ 932D C9               ret
1281+ 932E
1282+ 932E A7           Compara_cositas_H2 and a
1283+ 932F 28 0D            jr z,1F
1284+ 9331              ;    cp $fd
1285+ 9331              ;    jr z,1F
1286+ 9331              ;    cp $fe
1287+ 9331              ;    jr z,1F
1288+ 9331 FE FF            cp $ff
1289+ 9333 28 09            jr z,1F
1290+ 9335 FE 01            cp $01
1291+ 9337 28 05            jr z,1F
1292+ 9339 FE 02            cp $02
1293+ 933B 28 01            jr z,1F
1294+ 933D C0               ret nz
1295+ 933E 04           1 inc b
1296+ 933F C9               ret
1297+ 9340
1298+ 9340 A7           Compara_cositas_L2 and a
1299+ 9341 28 0D            jr z,1F
1300+ 9343              ;    cp $fd
1301+ 9343              ;    jr z,1F
1302+ 9343 FE FE            cp $fe
1303+ 9345 28 09            jr z,1F
1304+ 9347 FE FF            cp $ff
1305+ 9349 28 05            jr z,1F
1306+ 934B FE 01            cp $01
1307+ 934D 28 01            jr z,1F
1308+ 934F              ;    cp $02
1309+ 934F              ;    jr z,1F
1310+ 934F C0               ret nz
1311+ 9350 04           1 inc b
1312+ 9351 C9               ret
1313+ 9352
1314+ 9352 A7           Compara_cositas_H1 and a
1315+ 9353 28 11            jr z,1F
1316+ 9355              ;    cp $fd
1317+ 9355              ;    jr z,1F
1318+ 9355              ;    cp $fe
1319+ 9355              ;    jr z,1F
1320+ 9355 FE FF            cp $ff
1321+ 9357 28 0D            jr z,1F
1322+ 9359 FE 01            cp $01
1323+ 935B 28 09            jr z,1F
1324+ 935D FE 02            cp $02
1325+ 935F 28 05            jr z,1F
1326+ 9361 FE 03            cp $03
1327+ 9363 28 01            jr z,1F
1328+ 9365 C0               ret nz
1329+ 9366 04           1 inc b
1330+ 9367 C9               ret
1331+ 9368
1332+ 9368 A7           Compara_cositas_L1 and a
1333+ 9369 28 0D            jr z,1F
1334+ 936B              ;    cp $fd
1335+ 936B              ;    jr z,1F
1336+ 936B              ;    cp $fe
1337+ 936B              ;    jr z,1F
1338+ 936B              ;    cp $ff
1339+ 936B              ;    jr z,1F
1340+ 936B FE 01            cp $01
1341+ 936D 28 09            jr z,1F
1342+ 936F FE 02            cp $02
1343+ 9371 28 05            jr z,1F
1344+ 9373 FE 03            cp $03
1345+ 9375 28 01            jr z,1F
1346+ 9377 C0               ret nz
1347+ 9378 04           1 inc b
1348+ 9379 C9               ret
1349+ 937A
1350+ 937A A7           Compara_cositas_H3 and a
1351+ 937B 28 0D            jr z,1F
1352+ 937D              ;    cp $fd
1353+ 937D              ;    jr z,1F
1354+ 937D FE FE            cp $fe
1355+ 937F 28 09            jr z,1F
1356+ 9381 FE FF            cp $ff
1357+ 9383 28 05            jr z,1F
1358+ 9385 FE 01            cp $01
1359+ 9387 28 01            jr z,1F
1360+ 9389              ;    cp $02
1361+ 9389              ;    jr z,1F
1362+ 9389              ;    cp $03
1363+ 9389              ;    jr z,1F
1364+ 9389 C0               ret nz
1365+ 938A 04           1 inc b
1366+ 938B C9               ret
1367+ 938C
1368+ 938C A7           Compara_cositas_L3 and a
1369+ 938D 28 0D            jr z,1F
1370+ 938F              ;    cp $fd
1371+ 938F              ;    jr z,1F
1372+ 938F              ;    cp $fe
1373+ 938F              ;    jr z,1F
1374+ 938F              ;    cp $ff
1375+ 938F              ;    jr z,1F
1376+ 938F FE 01            cp $01
1377+ 9391 28 09            jr z,1F
1378+ 9393 FE 02            cp $02
1379+ 9395 28 05            jr z,1F
1380+ 9397 FE 03            cp $03
1381+ 9399 28 01            jr z,1F
1382+ 939B C0               ret nz
1383+ 939C 04           1 inc b
1384+ 939D C9               ret
1385+ 939E
1386+ 939E A7           Compara_cositas_H4 and a
1387+ 939F 28 11            jr z,1F
1388+ 93A1 FE FD            cp $fd
1389+ 93A3 28 0D            jr z,1F
1390+ 93A5 FE FE            cp $fe
1391+ 93A7 28 09            jr z,1F
1392+ 93A9 FE FF            cp $ff
1393+ 93AB 28 05            jr z,1F
1394+ 93AD FE 01            cp $01
1395+ 93AF 28 01            jr z,1F
1396+ 93B1              ;    cp $02
1397+ 93B1              ;    jr z,1F
1398+ 93B1              ;    cp $03
1399+ 93B1              ;    jr z,1F
1400+ 93B1 C0               ret nz
1401+ 93B2 04           1 inc b
1402+ 93B3 C9               ret
1403+ 93B4
1404+ 93B4 A7           Compara_cositas_L4 and a
1405+ 93B5 28 0D            jr z,1F
1406+ 93B7              ;    cp $fd
1407+ 93B7              ;    jr z,1F
1408+ 93B7 FE FE            cp $fe
1409+ 93B9 28 09            jr z,1F
1410+ 93BB FE FF            cp $ff
1411+ 93BD 28 05            jr z,1F
1412+ 93BF FE 01            cp $01
1413+ 93C1 28 01            jr z,1F
1414+ 93C3              ;    cp $02
1415+ 93C3              ;    jr z,1F
1416+ 93C3              ;    cp $03
1417+ 93C3              ;    jr z,1F
1418+ 93C3 C0               ret nz
1419+ 93C4 04           1 inc b
1420+ 93C5 C9               ret
# file closed: Disparo.asm
1674  93C6              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
   1+ 93C6              ; ******************************************************************************************************************************************************************************************
   2+ 93C6              ;
   3+ 93C6              ; 26/06/23
   4+ 93C6              ;
   5+ 93C6              ; DRAW. ************************************************************************************************************************************************************************************
   6+ 93C6
   7+ 93C6 CD AA 96     Draw call Prepara_draw
   8+ 93C9 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
   9+ 93CA A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
  10+ 93CB 28 05        	jr z,2F
  11+ 93CD
  12+ 93CD 3A D9 88     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
  13+ 93D0 18 0C        	jr 1F
  14+ 93D2
  15+ 93D2 2A D7 88     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
  16+ 93D5 22 C7 88     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
  17+ 93D8 CD 67 95     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
  18+ 93DB              ;													; _la esquina superior izquierda de la pantalla.
  19+ 93DB CD 0C A0     	call  Inicia_Puntero_mov						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento de la entidad.
  20+ 93DE
  21+ 93DE 3A EF 88     1 ld a,(Ctrl_0)
  22+ 93E1 CB 6F        	bit 5,a
  23+ 93E3 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
  24+ 93E5
  25+ 93E5 CD FD 93     	call Comprueba_limite_horizontal
  26+ 93E8 CD 8D 94     	call Comprueba_limite_vertical
  27+ 93EB
  28+ 93EB              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
  29+ 93EB              ; -----------------------
  30+ 93EB              ; -----------------------
  31+ 93EB              ; -----------------------
  32+ 93EB
  33+ 93EB CD DA 95     3 call calcula_CColumnass							; Define el valor de la variable (Columnas). Nº de columnas que se van a pintar de la entidad.
  34+ 93EE CD 11 96     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
  35+ 93F1 CD 70 96     	call Define_rutina_de_impresion
  36+ 93F4
  37+ 93F4 3A EF 88     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
  38+ 93F7 CB AF        	res 5,a											; _a ser de utilidad.
  39+ 93F9 32 EF 88     	ld (Ctrl_0),a
  40+ 93FC
  41+ 93FC C9           	ret
  42+ 93FD
  43+ 93FD              ; *******************************************************************************************************************************************************************************************
  44+ 93FD              ;	21/01/23
  45+ 93FD              ;
  46+ 93FD              ; 	Comprueba_limite_horizontal.
  47+ 93FD              ;
  48+ 93FD              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
  49+ 93FD              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
  50+ 93FD              ;
  51+ 93FD              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
  52+ 93FD              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
  53+ 93FD              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
  54+ 93FD              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
  55+ 93FD
  56+ 93FD
  57+ 93FD
  58+ 93FD 3A EF 88     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
  59+ 9400 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
  60+ 9402 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
  61+ 9404 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
  62+ 9406 32 EF 88     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
  63+ 9409 18 09            jr 6F
  64+ 940B CB 5F        1 bit 3,a
  65+ 940D 28 0A            jr z,2F
  66+ 940F E6 F7            and $f7
  67+ 9411 32 EF 88         ld (Ctrl_0),a
  68+ 9414 CD 67 95     6 call Inicializacion
  69+ 9417 18 5B            jr 5F
  70+ 9419 E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
  71+ 941A
  72+ 941A              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
  73+ 941A              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
  74+ 941A
  75+ 941A EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
  76+ 941B 2A FF 88     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
  77+ 941E CD C9 99     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
  78+ 9421 67           	ld h,a
  79+ 9422 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
  80+ 9423 CD C9 99     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
  81+ 9426 67           	ld h,a
  82+ 9427 A7           	and a
  83+ 9428 ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
  84+ 942A 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
  85+ 942B 3A D9 88     	ld a,(Cuad_objeto)
  86+ 942E FE 02        	cp 2
  87+ 9430 38 1E        	jr c,3F
  88+ 9432 28 1C        	jr z,3F
  89+ 9434 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
  90+ 9435 28 23            jr z,7F
  91+ 9437 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
  92+ 9439 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
  93+ 943B E1           	pop hl
  94+ 943C
  95+ 943C              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
  96+ 943C              ; _para indicar con E="2" en caso necesario.
  97+ 943C
  98+ 943C E5               push hl
  99+ 943D C5               push bc
 100+ 943E CD C9 99     	call calcula_tercio
 101+ 9441 FE 01        	cp 1
 102+ 9443 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 103+ 9445 CD 75 94         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 104+ 9448 28 26            jr z,9F
 105+ 944A 38 24            jr c,9F
 106+ 944C 1E 00        11 ld e,0
 107+ 944E 18 22            jr 8F
 108+ 9450 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 109+ 9451 28 07        	jr z, 7F
 110+ 9453 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
 111+ 9455 1E 00         	ld e,0
 112+ 9457 E1           	pop hl
 113+ 9458 18 04        	jr 4F
 114+ 945A 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
 115+ 945C 18 15            jr 10F
 116+ 945E
 117+ 945E              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 118+ 945E              ; _para indicar con E="2" en caso necesario.
 119+ 945E
 120+ 945E E5           4 push hl
 121+ 945F C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
 122+ 9460 CD C9 99     	call calcula_tercio
 123+ 9463 FE 01        	cp 1
 124+ 9465 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 125+ 9467 CD 75 94         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
 126+ 946A 28 04            jr z,9F
 127+ 946C 30 02            jr nc,9F
 128+ 946E 18 02        	jr 8F
 129+ 9470 1E 02        9 ld e,2
 130+ 9472 C1           8 pop bc
 131+ 9473 E1           10 pop hl
 132+ 9474 C9           5 ret
 133+ 9475
 134+ 9475              ; --------------------
 135+ 9475              ;
 136+ 9475              ; 25/08/22
 137+ 9475
 138+ 9475 CD C9 99     Comprueba_centro call calcula_tercio
 139+ 9478 67               ld h,a
 140+ 9479 08           	ex af,af
 141+ 947A FE 02        	cp 2
 142+ 947C 38 07        	jr c,1F
 143+ 947E 28 05        	jr z,1F
 144+ 9480 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
 145+ 9483 18 03        	jr 2F
 146+ 9485 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
 147+ 9488 08           2 ex af,af
 148+ 9489 A7               and a
 149+ 948A ED 42            sbc hl,bc
 150+ 948C C9               ret
 151+ 948D
 152+ 948D              ; *********************************************************************************************************************************************************************************************
 153+ 948D              ;
 154+ 948D              ;   16/8/22
 155+ 948D              ;
 156+ 948D              ;	Comprueba_limite_vertical
 157+ 948D              ;
 158+ 948D              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
 159+ 948D              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
 160+ 948D              ;
 161+ 948D
 162+ 948D 2A C7 88     Comprueba_limite_vertical ld hl,(Posicion_actual)
 163+ 9490 7D           	ld a,l
 164+ 9491 E6 1F        	and $1F
 165+ 9493 57           	ld d,a
 166+ 9494 3A 01 89     	ld a,(Limite_vertical)
 167+ 9497 BA           	cp d 											; Límite - Posición.
 168+ 9498 08           	ex af,af 										; Resultado de CP d en F'.
 169+ 9499 3A D9 88     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
 170+ 949C CB 47        	bit 0,a
 171+ 949E 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
 172+ 94A0
 173+ 94A0              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
 174+ 94A0
 175+ 94A0 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
 176+ 94A1 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
 177+ 94A3
 178+ 94A3              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
 179+ 94A3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 180+ 94A3
 181+ 94A3 3A CB 88         ld a,(Coordenada_X)
 182+ 94A6 16 0F            ld d,Centro_izquierda
 183+ 94A8 A7               and a
 184+ 94A9 92               sub d 											 ; Posición - Centro_izquierda.
 185+ 94AA 28 1E            jr z,3F
 186+ 94AC 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 187+ 94AE              ;                                                    ; _salimos sin modificar nada.
 188+ 94AE 18 0E            jr 2F
 189+ 94B0 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
 190+ 94B1 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
 191+ 94B3
 192+ 94B3              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
 193+ 94B3              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
 194+ 94B3
 195+ 94B3 3A CB 88         ld a,(Coordenada_X)
 196+ 94B6 16 10            ld d,Centro_derecha
 197+ 94B8 A7               and a
 198+ 94B9 92               sub d
 199+ 94BA 28 0E            jr z,3F
 200+ 94BC 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
 201+ 94BE              ;                                                    ; _salimos sin modificar nada.
 202+ 94BE CB 43        2 bit 0,e
 203+ 94C0 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
 204+ 94C2 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
 205+ 94C3 CD 57 95         call Modificaccionne
 206+ 94C6 C1           	pop bc
 207+ 94C7 CD 67 95         call Inicializacion
 208+ 94CA C9           3 ret 				 								 ; Salimos de la rutina.
 209+ 94CB
 210+ 94CB              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
 211+ 94CB
 212+ 94CB C5           4 push bc
 213+ 94CC 01 C6 88     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
 214+ 94CF 0A           	ld a,(bc)
 215+ 94D0 3D           	dec a
 216+ 94D1 47           	ld b,a 											 ; Columnas-1 en B.
 217+ 94D2 7D           	ld a,l
 218+ 94D3 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
 219+ 94D4 CB 47        	bit 0,a
 220+ 94D6 28 03        	jr z,5F
 221+ 94D8 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
 222+ 94D9 18 2E        	jr 7F
 223+ 94DB
 224+ 94DB              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
 225+ 94DB
 226+ 94DB 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
 227+ 94DC F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
 228+ 94DD 3A EF 88     	ld a,(Ctrl_0)
 229+ 94E0 CB 4F        	bit 1,a
 230+ 94E2 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
 231+ 94E4 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
 232+ 94E5
 233+ 94E5              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
 234+ 94E5
 235+ 94E5 1C               inc e
 236+ 94E6 1D               dec e
 237+ 94E7 20 07            jr nz,12F
 238+ 94E9 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 239+ 94EA 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 240+ 94EB 22 C7 88     	ld (Posicion_actual),hl
 241+ 94EE 18 44        13 jr 9F
 242+ 94F0 CB 43        12 bit 0,e
 243+ 94F2 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 244+ 94F4              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 245+ 94F4 C1           	pop bc
 246+ 94F5 18 D3        	jr 3B
 247+ 94F7 80           14 add b
 248+ 94F8 6F               ld l,a
 249+ 94F9 22 C7 88     	ld (Posicion_actual),hl
 250+ 94FC CD 57 95         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 251+ 94FF 18 33            jr 9F 											 ; _inicializamos y salimos.
 252+ 9501 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
 253+ 9503 32 EF 88         ld (Ctrl_0),a
 254+ 9506 F1           	pop af
 255+ 9507 18 2B        	jr 9F
 256+ 9509
 257+ 9509              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
 258+ 9509
 259+ 9509 F5           7 push af
 260+ 950A 3A EF 88     	ld a,(Ctrl_0)
 261+ 950D CB 47        	bit 0,a
 262+ 950F 20 1D        	jr nz,8F
 263+ 9511 F1           	pop af
 264+ 9512
 265+ 9512              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
 266+ 9512
 267+ 9512 1C           	inc e
 268+ 9513 1D               dec e
 269+ 9514 20 07            jr nz,10F
 270+ 9516 90           	sub b
 271+ 9517 6F               ld l,a
 272+ 9518 22 C7 88     	ld (Posicion_actual),hl
 273+ 951B 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
 274+ 951D              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
 275+ 951D CB 43        10 bit 0,e
 276+ 951F 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
 277+ 9521              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
 278+ 9521 C1           	pop bc
 279+ 9522 18 A6        	jr 3B
 280+ 9524 90           16 sub b
 281+ 9525 6F               ld l,a
 282+ 9526 22 C7 88     	ld (Posicion_actual),hl
 283+ 9529 CD 57 95         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
 284+ 952C 18 06            jr 9F
 285+ 952E E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
 286+ 9530 32 EF 88         ld (Ctrl_0),a
 287+ 9533 F1           	pop af
 288+ 9534 C1           9 pop bc
 289+ 9535 1E 00        	ld e,0
 290+ 9537 CD 67 95         call Inicializacion
 291+ 953A F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
 292+ 953B 08           	ex af,af
 293+ 953C F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
 294+ 953D 18 8B            jr 3B
 295+ 953F
 296+ 953F              ; --------------------
 297+ 953F
 298+ 953F 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
 299+ 9541 CD C5 96     1 call PreviousScan
 300+ 9544 10 FB            djnz 1B
 301+ 9546 22 C7 88     	ld (Posicion_actual),hl
 302+ 9549 AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
 303+ 954A C9           	ret
 304+ 954B
 305+ 954B              ; --------------------
 306+ 954B
 307+ 954B 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
 308+ 954D CD B6 96     1 call NextScan
 309+ 9550 10 FB            djnz 1B
 310+ 9552 22 C7 88     	ld (Posicion_actual),hl
 311+ 9555 AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
 312+ 9556 C9           	ret
 313+ 9557
 314+ 9557              ; --------------------
 315+ 9557              ;
 316+ 9557              ;	22/01/23
 317+ 9557              ;
 318+ 9557              ;	E="1". Hemos cambiado de cuadrante.
 319+ 9557              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
 320+ 9557              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
 321+ 9557
 322+ 9557
 323+ 9557              Modificaccionne
 324+ 9557
 325+ 9557 3A D9 88     	ld a,(Cuad_objeto)
 326+ 955A FE 02        	cp 2
 327+ 955C CC 3F 95         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
 328+ 955F DC 3F 95         call c,Modifica_Pos_actual
 329+ 9562 C8           	ret z
 330+ 9563 CD 4B 95         call Modifica_Pos_actual2
 331+ 9566 C9               ret
 332+ 9567
 333+ 9567              ; *************************************************************************************************************************************************************************************************
 334+ 9567              ;
 335+ 9567              ;	13/8/22
 336+ 9567              ;
 337+ 9567              ;	Inicializacion
 338+ 9567              ;
 339+ 9567              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
 340+ 9567              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
 341+ 9567              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
 342+ 9567              ;
 343+ 9567              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
 344+ 9567              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
 345+ 9567              ;	_ desaparece/aparece.
 346+ 9567
 347+ 9567              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
 348+ 9567              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
 349+ 9567              ;
 350+ 9567              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
 351+ 9567              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
 352+ 9567              ; 		   [E] ="0"
 353+ 9567
 354+ 9567              ; 	OUTPUT: DESTRUYE [AF] y [D].
 355+ 9567
 356+ 9567 CD C9 99     Inicializacion call calcula_tercio
 357+ 956A 28 36        	jr z,primit
 358+ 956C E6 02        	and 2
 359+ 956E 20 07        	jr nz,segmit
 360+ 9570 7D           	ld a,l
 361+ 9571 FE 7F        	cp $7f
 362+ 9573 38 2D        	jr c,primit
 363+ 9575 28 2B        	jr z,primit
 364+ 9577 CD D4 95     segmit call column
 365+ 957A 38 13        	jr c,tercuad
 366+ 957C 3E 04        cuarcuad ld a,4
 367+ 957E 32 D9 88     	ld (Cuad_objeto),a
 368+ 9581 21 20 48     	ld hl,$4820
 369+ 9584 22 FF 88     	ld (Limite_horizontal),hl
 370+ 9587 21 01 89     	ld hl,Limite_vertical
 371+ 958A 36 0D        	ld (hl),$0d
 372+ 958C 08           	ex af,af
 373+ 958D 18 3C        	jr 1F
 374+ 958F              tercuad
 375+ 958F 3E 03        	ld a,3
 376+ 9591 32 D9 88     	ld (Cuad_objeto),a
 377+ 9594 21 20 48     	ld hl,$4820
 378+ 9597 22 FF 88     	ld (Limite_horizontal),hl
 379+ 959A 21 01 89     	ld hl,Limite_vertical
 380+ 959D 36 12        	ld (hl),$12
 381+ 959F 08           	ex af,af
 382+ 95A0 18 29        	jr 1F
 383+ 95A2 CD D4 95     primit call column
 384+ 95A5 38 13        	jr c, primcuad
 385+ 95A7              segcuad
 386+ 95A7 3E 02        	ld a,2
 387+ 95A9 32 D9 88     	ld (Cuad_objeto),a
 388+ 95AC 21 C0 4F     	ld hl,$4fc0
 389+ 95AF 22 FF 88     	ld (Limite_horizontal),hl
 390+ 95B2 21 01 89     	ld hl,Limite_vertical
 391+ 95B5 36 0D        	ld (hl),$0d
 392+ 95B7 08           	ex af,af
 393+ 95B8 18 11        	jr 1F
 394+ 95BA              primcuad
 395+ 95BA 3E 01        	ld a,1
 396+ 95BC 32 D9 88     	ld (Cuad_objeto),a
 397+ 95BF 21 C0 4F     	ld hl,$4fc0
 398+ 95C2 22 FF 88     	ld (Limite_horizontal),hl
 399+ 95C5 21 01 89     	ld hl,Limite_vertical
 400+ 95C8 36 12        	ld (hl),$12
 401+ 95CA 08           	ex af,af
 402+ 95CB CD 54 9D     1 call Genera_coordenadas
 403+ 95CE 21 EF 88     	ld hl,Ctrl_0
 404+ 95D1 CB EE        	set 5,(hl)
 405+ 95D3 C9           	ret
 406+ 95D4
 407+ 95D4              ; ------------------------------------------------------------------------------------------------------------------
 408+ 95D4
 409+ 95D4              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
 410+ 95D4              ;
 411+ 95D4              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
 412+ 95D4
 413+ 95D4 7D           column ld a,l
 414+ 95D5 E6 1F        	and $1f
 415+ 95D7 FE 10         	cp $10
 416+ 95D9 C9            	ret
 417+ 95DA
 418+ 95DA              ; --------------------------------------------------------------------------------------------------------------------
 419+ 95DA              ;
 420+ 95DA              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
 421+ 95DA              ;
 422+ 95DA              ; 14/12/22
 423+ 95DA              ;
 424+ 95DA              ;	Modifica: A y BC.
 425+ 95DA
 426+ 95DA 3A D9 88     calcula_CColumnass ld a,(Cuad_objeto)
 427+ 95DD E6 01        	and 1
 428+ 95DF 28 17        	jr z,1F
 429+ 95E1
 430+ 95E1              ; Nos encontramos en la parte izquierda de la pantalla
 431+ 95E1
 432+ 95E1 3A CB 88     	ld a,(Coordenada_X)
 433+ 95E4 47           	ld b,a
 434+ 95E5 04           	inc b											; (Coordenada_X)+1 en B.
 435+ 95E6 79           	ld a,c
 436+ 95E7 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
 437+ 95E8 38 08        	jr c,2F
 438+ 95EA 47           	ld b,a
 439+ 95EB 79           	ld a,c
 440+ 95EC 90           	sub b
 441+ 95ED 32 FE 88     	ld (Columnas),a
 442+ 95F0 18 1B        	jr 4F
 443+ 95F2 79           2 ld a,c
 444+ 95F3 32 FE 88     	ld (Columnas),a
 445+ 95F6 18 15        	jr 4F
 446+ 95F8
 447+ 95F8              ; Nos encontramos en la parte derecha de la pantalla.
 448+ 95F8
 449+ 95F8 3A CB 88     1 ld a,(Coordenada_X)
 450+ 95FB 81           	add c
 451+ 95FC 3D           	dec a
 452+ 95FD D6 1F        	sub $1f
 453+ 95FF 38 08        	jr c,3F
 454+ 9601 47           	ld b,a
 455+ 9602 79           	ld a,c
 456+ 9603 90           	sub b
 457+ 9604 32 FE 88     	ld (Columnas),a
 458+ 9607 18 04        	jr 4F
 459+ 9609 79           3 ld a,c
 460+ 960A 32 FE 88     	ld (Columnas),a
 461+ 960D D9           4 exx
 462+ 960E 4F           	ld c,a
 463+ 960F D9           	exx
 464+ 9610 C9            ret
 465+ 9611
 466+ 9611              ; --------------------------------------------------------------------------------------------------------------------
 467+ 9611              ;
 468+ 9611              ;   19/7/23
 469+ 9611              ;
 470+ 9611              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
 471+ 9611              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
 472+ 9611              ;
 473+ 9611              ;	OUTPUT: IX Contienen el puntero de impresión.
 474+ 9611              ;			HL e IY Contienen (Puntero_objeto).
 475+ 9611              ;
 476+ 9611              ;	DESTRUYE: HL,B Y A.
 477+ 9611
 478+ 9611 3A D9 88     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
 479+ 9614 FE 02        	cp 2
 480+ 9616 38 18        	jr c,1F
 481+ 9618 28 16        	jr z,1F
 482+ 961A E6 01        	and 1
 483+ 961C 28 0D        	jr z,3F
 484+ 961E
 485+ 961E              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
 486+ 961E
 487+ 961E CD 64 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 488+ 9621
 489+ 9621 7D           9 ld a,l
 490+ 9622 E6 1F        	and $1f
 491+ 9624 28 2A        	jr z,7F
 492+ 9626 2B           	dec hl
 493+ 9627 10 F8        	djnz 9B
 494+ 9629 18 25        	jr 7F
 495+ 962B
 496+ 962B              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
 497+ 962B
 498+ 962B 2A C7 88     3 ld hl,(Posicion_actual)
 499+ 962E 18 20        	jr 7F
 500+ 9630
 501+ 9630 28 14        1 jr z,2F
 502+ 9632
 503+ 9632              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
 504+ 9632
 505+ 9632 CD 64 96     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 506+ 9635
 507+ 9635 7D           4 ld a,l
 508+ 9636 E6 1F        	and $1f
 509+ 9638 28 03        	jr z,6F
 510+ 963A 2B           	dec hl
 511+ 963B 10 F8        	djnz 4B
 512+ 963D 06 0F        6 ld b,15
 513+ 963F CD C5 96     5 call PreviousScan
 514+ 9642 10 FB        	djnz 5B
 515+ 9644 18 0A        	jr 7F
 516+ 9646
 517+ 9646              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
 518+ 9646
 519+ 9646 CD 64 96     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
 520+ 9649 06 0F        	ld b,15
 521+ 964B CD C5 96     8 call PreviousScan
 522+ 964E 10 FB        	djnz 8B
 523+ 9650
 524+ 9650 E5           7 push hl
 525+ 9651 DD E1        	pop ix
 526+ 9653
 527+ 9653 2A C9 88     	ld hl,(Puntero_objeto)
 528+ 9656 E5           	push hl
 529+ 9657 FD E1        	pop iy
 530+ 9659
 531+ 9659              ; Hemos calculado el puntero_de_impresion de Amadeus ????.
 532+ 9659
 533+ 9659 3A EF 88     	ld a,(Ctrl_0)
 534+ 965C CB 77        	bit 6,a
 535+ 965E C8           	ret z
 536+ 965F
 537+ 965F              ; Almacenaremos el puntero de impresión de Amadeus para usarlo en la rutina de colisión `disparo de_
 538+ 965F              ; _ entidad / Amadeus´.
 539+ 965F
 540+ 965F DD 22 4D 89  	ld (Puntero_de_impresion_Amadeus),ix
 541+ 9663
 542+ 9663 C9           	ret
 543+ 9664
 544+ 9664              ; --------------------------------------------------------------------------------------------------------------------
 545+ 9664              ;
 546+ 9664              ;	2/1/23
 547+ 9664              ;
 548+ 9664              ;	Sub-rutina de [Calcula_puntero_de_impresion].
 549+ 9664              ;
 550+ 9664              ;	Tras esta rutina tenemos:
 551+ 9664              ;
 552+ 9664              ;	OUTPUT: HL contiene (Posicion_actual).
 553+ 9664              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
 554+ 9664              ;
 555+ 9664              ;	DESTRUYE!!!!! HL,B y A.
 556+ 9664
 557+ 9664 2A C7 88     Operandos ld hl,(Posicion_actual)
 558+ 9667 3A FE 88     	ld a,(Columnas)
 559+ 966A 3D           	dec a
 560+ 966B 20 01        	jr nz,1F
 561+ 966D 3C           	inc a
 562+ 966E 47           1 ld b,a
 563+ 966F C9           	ret
 564+ 9670
 565+ 9670              ; --------------------------------------------------------------------------------------------------------------------
 566+ 9670              ;
 567+ 9670              ;	3/1/23
 568+ 9670              ;
 569+ 9670              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
 570+ 9670              ;
 571+ 9670              ;	Destruye: A,B,HL y DE.
 572+ 9670
 573+ 9670              Define_rutina_de_impresion
 574+ 9670
 575+ 9670 3A C6 88     	ld a,(Columns)
 576+ 9673 47           	ld b,a
 577+ 9674 3A FE 88     	ld a,(Columnas)
 578+ 9677 B8           	cp b
 579+ 9678 20 0D        	jr nz,2f
 580+ 967A
 581+ 967A              ;	La entidad se imprime entera.
 582+ 967A
 583+ 967A 21 99 97     	ld hl, Indice_entidades_completas
 584+ 967D E6 01        	and 1
 585+ 967F 28 02        	jr z,1F
 586+ 9681
 587+ 9681 23           	inc hl
 588+ 9682 23           	inc hl
 589+ 9683
 590+ 9683 CD DF 8C     1 call Extrae_address
 591+ 9686 C9           	ret		;	ret
 592+ 9687
 593+ 9687              ;	La entidad no se imprime entera en pantalla.
 594+ 9687
 595+ 9687 3A D9 88     2 ld a,(Cuad_objeto)
 596+ 968A E6 01        	and 1
 597+ 968C 28 17        	jr z,3F
 598+ 968E
 599+ 968E              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
 600+ 968E
 601+ 968E 21 9D 97     	ld hl, Indice_entidades_incompletas_izquierda
 602+ 9691 3A C6 88     4 ld a,(Columns)
 603+ 9694 E6 01        	and 1
 604+ 9696 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
 605+ 9698
 606+ 9698 23           	inc hl
 607+ 9699 23           	inc hl
 608+ 969A
 609+ 969A 3A FE 88     	ld a,(Columnas)
 610+ 969D E6 01        	and 1
 611+ 969F 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
 612+ 96A1
 613+ 96A1 23           	inc hl
 614+ 96A2 23           	inc hl
 615+ 96A3
 616+ 96A3 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
 617+ 96A5
 618+ 96A5 21 A3 97     3 ld hl, Indice_entidades_incompletas_derecha
 619+ 96A8 18 E7        	jr 4B
 620+ 96AA
 621+ 96AA              ; --------------------------------------------------------------------------------------------------------------------
 622+ 96AA              ;
 623+ 96AA              ;	Prepara_draw
 624+ 96AA              ;
 625+ 96AA              ;	Es una rutina de carga.
 626+ 96AA              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
 627+ 96AA              ;
 628+ 96AA              ;	FUNCIONAMIENTO:
 629+ 96AA              ;
 630+ 96AA              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
 631+ 96AA              ;	- LD (Posicion_actual) del objeto en [HL].
 632+ 96AA              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
 633+ 96AA              ;
 634+ 96AA              ;	DESTRUYE:
 635+ 96AA              ;
 636+ 96AA              ;	Logicamente, BC,HL y E quedan destruidos.
 637+ 96AA
 638+ 96AA 21 C5 88     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
 639+ 96AD 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
 640+ 96AE 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
 641+ 96AF 4E           	ld c,(hl)
 642+ 96B0 2A C7 88     	ld hl,(Posicion_actual)
 643+ 96B3 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
 644+ 96B5 C9           	ret
 645+ 96B6
 646+ 96B6              ;----------------------------------------------------------------------------------------------------------------
 647+ 96B6              ;
 648+ 96B6              ;	5/08/22
 649+ 96B6              ;
 650+ 96B6              ;   NextScan.
 651+ 96B6              ;
 652+ 96B6              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
 653+ 96B6              ;
 654+ 96B6              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
 655+ 96B6              ;
 656+ 96B6              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 657+ 96B6              ;
 658+ 96B6              ;       DESTRUIDOS: AF y HL !!!
 659+ 96B6              ;
 660+ 96B6              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 661+ 96B6              ;
 662+ 96B6
 663+ 96B6 24           NextScan inc h          ; Incrementamos el scanline.
 664+ 96B7 7C               ld a,h
 665+ 96B8 E6 07            and 7
 666+ 96BA C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 667+ 96BB
 668+ 96BB 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
 669+ 96BC C6 20            add a,$20           ; Vamos a comprobarlo...
 670+ 96BE 6F               ld l,a
 671+ 96BF D8               ret c               ; Salimos si se produce el cambio de tercio.
 672+ 96C0
 673+ 96C0 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
 674+ 96C1 D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
 675+ 96C3 67               ld h,a
 676+ 96C4 C9               ret
 677+ 96C5
 678+ 96C5              ;----------------------------------------------------------------------------------------------------------------
 679+ 96C5              ;
 680+ 96C5              ;	5/08/22
 681+ 96C5              ;
 682+ 96C5              ;   PreviousScan.
 683+ 96C5              ;
 684+ 96C5              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
 685+ 96C5              ;
 686+ 96C5              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
 687+ 96C5              ;
 688+ 96C5              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
 689+ 96C5              ;
 690+ 96C5              ;       DESTRUIDOS: AF y HL !!!
 691+ 96C5              ;
 692+ 96C5              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
 693+ 96C5              ;
 694+ 96C5
 695+ 96C5 7C           PreviousScan ld a,h
 696+ 96C6 25               dec h               ; Dec H.
 697+ 96C7 E6 07            and 7
 698+ 96C9 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
 699+ 96CA
 700+ 96CA 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
 701+ 96CB D6 20            sub $20             ; Vamos a comprobarlo...
 702+ 96CD 6F               ld l,a
 703+ 96CE D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
 704+ 96CF
 705+ 96CF 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
 706+ 96D0 C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
 707+ 96D2 67               ld h,a
 708+ 96D3 C9               ret
 709+ 96D4
 710+ 96D4              ; -----------------------------------------------------------------------------------
 711+ 96D4              ;
 712+ 96D4              ;	31/7/23
 713+ 96D4              ;
 714+ 96D4              ;	Rutina principal de pintado de entidades/Amadeus.
 715+ 96D4              ;	Extrae fotos de Album_de_fotos.
 716+ 96D4
 717+ 96D4              Extrae_foto_entidades
 718+ 96D4
 719+ 96D4 21 01 70     	ld hl,Album_de_fotos+1
 720+ 96D7 7E           	ld a,(hl)
 721+ 96D8 A7           	and a
 722+ 96D9 C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 723+ 96DA
 724+ 96DA 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 725+ 96DD A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 726+ 96DE C8           	ret z
 727+ 96DF
 728+ 96DF              ; -----------------------------------
 729+ 96DF
 730+ 96DF ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 731+ 96E3 31 00 70     	ld sp,Album_de_fotos
 732+ 96E6
 733+ 96E6 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 734+ 96E8 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 735+ 96E9 D1           	pop de																	; Dirección de la rutina de impresión en DE.
 736+ 96EA
 737+ 96EA ED 73 17 89  	ld (Stack_2),sp
 738+ 96EE ED 7B 15 89  	ld sp,(Stack)
 739+ 96F2
 740+ 96F2              ; Fabrica la llamada a la correspondiente rutina de impresión.
 741+ 96F2
 742+ 96F2 3E CD        	ld a,$cd
 743+ 96F4 32 FC 96     	ld (Imprime),a
 744+ 96F7 EB           	ex de,hl
 745+ 96F8 22 FD 96     	ld (Imprime+1),hl
 746+ 96FB EB           	ex de,hl
 747+ 96FC
 748+ 96FC              ; Ejecuta la llamada:	CALL $xx,xx
 749+ 96FC
 750+ 96FC 00 00 00     Imprime db 0,0,0
 751+ 96FF
 752+ 96FF ED 73 15 89  	ld (Stack),sp
 753+ 9703
 754+ 9703 3A 10 89     	ld a,(Numero_de_malotes)
 755+ 9706 3D           	dec a
 756+ 9707 28 09        	jr z,1F
 757+ 9709 32 10 89      	ld (Numero_de_malotes),a
 758+ 970C
 759+ 970C ED 7B 17 89  	ld sp,(Stack_2)
 760+ 9710 18 D4        	jr 2B
 761+ 9712
 762+ 9712 AF           1 xor a
 763+ 9713 32 17 89     	ld (Stack_2),a
 764+ 9716
 765+ 9716 C9           	ret
 766+ 9717
 767+ 9717              ; -----------------------------------------------------------------------------------
 768+ 9717              ;
 769+ 9717              ;	28/2/23
 770+ 9717              ;
 771+ 9717              ;	Pinta los disparos generados.
 772+ 9717
 773+ 9717              Extrae_foto_disparos
 774+ 9717
 775+ 9717 21 51 71     	ld hl,Album_de_fotos_disparos+1
 776+ 971A 7E               ld a,(hl)
 777+ 971B A7               and a
 778+ 971C C8               ret z
 779+ 971D
 780+ 971D 3A 3D 89     	ld a,(Numero_de_disparotes)
 781+ 9720 A7           	and a
 782+ 9721 C8           	ret z
 783+ 9722 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 784+ 9726 31 50 71     	ld sp,Album_de_fotos_disparos
 785+ 9729
 786+ 9729 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 787+ 972B E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 788+ 972C D1           	pop de																	; Dirección de la rutina de impresión en DE.
 789+ 972D
 790+ 972D ED 73 17 89  	ld (Stack_2),sp
 791+ 9731 ED 7B 15 89  	ld sp,(Stack)
 792+ 9735
 793+ 9735              ; Fabrica la llamada a la correspondiente rutina de impresión.
 794+ 9735
 795+ 9735 3E CD        	ld a,$cd
 796+ 9737 32 3F 97     	ld (Imprime2),a
 797+ 973A EB           	ex de,hl
 798+ 973B 22 40 97     	ld (Imprime2+1),hl
 799+ 973E EB           	ex de,hl
 800+ 973F
 801+ 973F              ; Ejecuta la llamada:	CALL $xx,xx
 802+ 973F
 803+ 973F 00 00 00     Imprime2 db 0,0,0
 804+ 9742
 805+ 9742 3A 3D 89     	ld a,(Numero_de_disparotes)
 806+ 9745 3D           	dec a
 807+ 9746 28 09        	jr z,1F
 808+ 9748 32 3D 89      	ld (Numero_de_disparotes),a
 809+ 974B
 810+ 974B ED 7B 17 89  	ld sp,(Stack_2)
 811+ 974F 18 D8        	jr 2B
 812+ 9751
 813+ 9751 AF           1 xor a
 814+ 9752 32 17 89     	ld (Stack_2),a
 815+ 9755 C9           	ret
 816+ 9756
 817+ 9756              ; -----------------------------------------------------------------------------------
 818+ 9756              ;
 819+ 9756              ;	4/9/23
 820+ 9756              ;
 821+ 9756              ;	Rutina principal de pintado de Amadeus.
 822+ 9756              ;	Extrae fotos de Album_de_fotos_Amadeus.
 823+ 9756
 824+ 9756              Extrae_foto_Amadeus
 825+ 9756
 826+ 9756 21 A0 72     	ld hl,Album_de_fotos_Amadeus
 827+ 9759 7E           	ld a,(hl)
 828+ 975A A7           	and a
 829+ 975B C8           	ret z 																	; Salimos si no hay datos en el álbum. VACÍO.
 830+ 975C
 831+ 975C 3A 10 89     	ld a,(Numero_de_malotes)												; No hay MALOTES. No se ha producido movimiento.
 832+ 975F A7           	and a																	; No ha aparecido ninguna `nueva entidad'.
 833+ 9760 C8           	ret z
 834+ 9761
 835+ 9761              ; -----------------------------------
 836+ 9761
 837+ 9761 ED 73 15 89  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
 838+ 9765 31 A0 72     	ld sp,Album_de_fotos_Amadeus
 839+ 9768
 840+ 9768 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
 841+ 976A E1           	pop hl																	; Puntero de impresión de pantalla en HL.
 842+ 976B D1           	pop de																	; Dirección de la rutina de impresión en DE.
 843+ 976C
 844+ 976C ED 73 17 89  	ld (Stack_2),sp
 845+ 9770 ED 7B 15 89  	ld sp,(Stack)
 846+ 9774
 847+ 9774              ; Fabrica la llamada a la correspondiente rutina de impresión.
 848+ 9774
 849+ 9774 3E CD        	ld a,$cd
 850+ 9776 32 7E 97     	ld (Imprime_Amadeus),a
 851+ 9779 EB           	ex de,hl
 852+ 977A 22 7F 97     	ld (Imprime_Amadeus+1),hl
 853+ 977D EB           	ex de,hl
 854+ 977E
 855+ 977E              ; Ejecuta la llamada:	CALL $xx,xx
 856+ 977E
 857+ 977E 00 00 00     Imprime_Amadeus db 0,0,0
 858+ 9781
 859+ 9781 ED 73 15 89  	ld (Stack),sp
 860+ 9785
 861+ 9785 3A 10 89     	ld a,(Numero_de_malotes)
 862+ 9788 3D           	dec a
 863+ 9789 28 09        	jr z,1F
 864+ 978B 32 10 89      	ld (Numero_de_malotes),a
 865+ 978E
 866+ 978E ED 7B 17 89  	ld sp,(Stack_2)
 867+ 9792 18 D4        	jr 2B
 868+ 9794
 869+ 9794 AF           1 xor a
 870+ 9795 32 17 89     	ld (Stack_2),a
 871+ 9798
 872+ 9798 C9           	ret
# file closed: Draw_XOR.asm
1675  9799              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
   1+ 9799              ;   índices de Rutinas de impresión.
   2+ 9799
   3+ 9799 A9 97        Indice_entidades_completas defw Pinta_Amadeus_2x2
   4+ 979B D6 97            defw Pinta_Amadeus_3x2
   5+ 979D
   6+ 979D 2C 98        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
   7+ 979F CC 98            defw Pinta_enemigo_3x2_izquierda_1columna
   8+ 97A1 80 98            defw Pinta_enemigo_3x2_izquierda_2columnas
   9+ 97A3
  10+ 97A3 56 98        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
  11+ 97A5 5A 99            defw Pinta_enemigo_3x2_derecha_1columna
  12+ 97A7 0E 99            defw Pinta_enemigo_3x2_derecha_2columnas
  13+ 97A9
  14+ 97A9
  15+ 97A9              ;   Conjunto de rutinas de impresión de Sprites.
  16+ 97A9              ;
  17+ 97A9              ;   12/12/22
  18+ 97A9              ;
  19+ 97A9              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
  20+ 97A9              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
  21+ 97A9              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
  22+ 97A9              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
  23+ 97A9              ;
  24+ 97A9              ;   Modifica: DE y HL.
  25+ 97A9
  26+ 97A9 ED 73 15 89  Pinta_Amadeus_2x2 ld (Stack),sp
  27+ 97AD FD F9        	ld sp,iy
  28+ 97AF 06 10            ld b,16
  29+ 97B1 D1           1 pop de
  30+ 97B2 7B               ld a,e
  31+ 97B3 AE               xor (hl)
  32+ 97B4 77           	ld (hl),a
  33+ 97B5 23           	inc hl
  34+ 97B6 7A               ld a,d
  35+ 97B7 AE               xor (hl)
  36+ 97B8 77           	ld (hl),a
  37+ 97B9 2B           	dec hl
  38+ 97BA 24           	inc h
  39+ 97BB 7C               ld a,h
  40+ 97BC E6 07            and 7
  41+ 97BE 20 0A            jr nz,2F
  42+ 97C0 7D               ld a,l
  43+ 97C1 C6 20            add a,$20
  44+ 97C3 6F               ld l,a
  45+ 97C4 38 04            jr c,2F
  46+ 97C6 7C               ld a,h
  47+ 97C7 D6 08            sub 8
  48+ 97C9 67               ld h,a
  49+ 97CA 7C           2 ld a,h
  50+ 97CB FE 58            cp $58
  51+ 97CD 28 02            jr z,3F
  52+ 97CF 10 E0            djnz 1B
  53+ 97D1 ED 7B 15 89  3 ld sp,(Stack)
  54+ 97D5 C9           	ret
  55+ 97D6
  56+ 97D6 ED 73 15 89  Pinta_Amadeus_3x2 ld (Stack),sp
  57+ 97DA FD F9        	ld sp,iy
  58+ 97DC 06 08            ld b,8
  59+ 97DE D1           1 pop de
  60+ 97DF 7B               ld a,e
  61+ 97E0 AE               xor (hl)
  62+ 97E1 77           	ld (hl),a
  63+ 97E2 23           	inc hl
  64+ 97E3 7A               ld a,d
  65+ 97E4 AE               xor (hl)
  66+ 97E5 77           	ld (hl),a
  67+ 97E6 23           	inc hl
  68+ 97E7 D1           	pop de
  69+ 97E8 7B               ld a,e
  70+ 97E9 AE               xor (hl)
  71+ 97EA 77           	ld (hl),a
  72+ 97EB 2B           	dec hl
  73+ 97EC 2B           	dec hl
  74+ 97ED 24           	inc h
  75+ 97EE 7C               ld a,h
  76+ 97EF E6 07            and 7
  77+ 97F1 20 0A            jr nz,2F
  78+ 97F3 7D               ld a,l
  79+ 97F4 C6 20            add a,$20
  80+ 97F6 6F               ld l,a
  81+ 97F7 38 04            jr c,2F
  82+ 97F9 7C               ld a,h
  83+ 97FA D6 08            sub 8
  84+ 97FC 67               ld h,a
  85+ 97FD 7C           2 ld a,h
  86+ 97FE FE 58            cp $58
  87+ 9800 28 25            jr z,4F
  88+ 9802 7A               ld a,d
  89+ 9803 AE               xor (hl)
  90+ 9804 77               ld (hl),a
  91+ 9805 D1           	pop de
  92+ 9806 23           	inc hl
  93+ 9807 7B               ld a,e
  94+ 9808 AE               xor (hl)
  95+ 9809 77           	ld (hl),a
  96+ 980A 23           	inc hl
  97+ 980B 7A               ld a,d
  98+ 980C AE               xor (hl)
  99+ 980D 77           	ld (hl),a
 100+ 980E 2B           	dec hl
 101+ 980F 2B           	dec hl
 102+ 9810 24           	inc h
 103+ 9811 7C               ld a,h
 104+ 9812 E6 07            and 7
 105+ 9814 20 0A            jr nz,3F
 106+ 9816 7D               ld a,l
 107+ 9817 C6 20            add a,$20
 108+ 9819 6F               ld l,a
 109+ 981A 38 04            jr c,3F
 110+ 981C 7C               ld a,h
 111+ 981D D6 08            sub 8
 112+ 981F 67               ld h,a
 113+ 9820 7C           3 ld a,h
 114+ 9821 FE 58            cp $58
 115+ 9823 28 02            jr z,4F
 116+ 9825 10 B7            djnz 1B
 117+ 9827 ED 7B 15 89  4 ld sp,(Stack)
 118+ 982B C9           	ret
 119+ 982C
 120+ 982C              ; ---------------------------------------------------
 121+ 982C
 122+ 982C ED 73 15 89  Pinta_enemigo_2x2_izquierda ld (Stack),sp
 123+ 9830 FD F9        	ld sp,iy
 124+ 9832
 125+ 9832              ; >>>
 126+ 9832
 127+ 9832 06 10            ld b,16
 128+ 9834 D1           1 pop de
 129+ 9835 7A           	ld a,d
 130+ 9836 AE           	xor (hl)
 131+ 9837 77           	ld (hl),a
 132+ 9838 24           	inc h
 133+ 9839 7C               ld a,h
 134+ 983A E6 07            and 7
 135+ 983C 20 0C            jr nz,2F
 136+ 983E 7D               ld a,l
 137+ 983F C6 20            add a,$20
 138+ 9841 6F               ld l,a
 139+ 9842 38 06            jr c,2F
 140+ 9844 7C               ld a,h
 141+ 9845 D6 08            sub 8
 142+ 9847 67               ld h,a
 143+ 9848 18 00            jr 2F
 144+ 984A 7C           2 ld a,h
 145+ 984B FE 58            cp $58
 146+ 984D 28 02            jr z,3F
 147+ 984F 10 E3            djnz 1B
 148+ 9851 ED 7B 15 89  3 ld sp,(Stack)
 149+ 9855 C9           	ret
 150+ 9856
 151+ 9856 ED 73 15 89  Pinta_enemigo_2x2_derecha ld (Stack),sp
 152+ 985A FD F9        	ld sp,iy
 153+ 985C
 154+ 985C              ; >>>
 155+ 985C
 156+ 985C 06 10            ld b,16
 157+ 985E D1           1 pop de
 158+ 985F 7B           	ld a,e
 159+ 9860 AE           	xor (hl)
 160+ 9861 77           	ld (hl),a
 161+ 9862 24           	inc h
 162+ 9863 7C               ld a,h
 163+ 9864 E6 07            and 7
 164+ 9866 20 0C            jr nz,2F
 165+ 9868 7D               ld a,l
 166+ 9869 C6 20            add a,$20
 167+ 986B 6F               ld l,a
 168+ 986C 38 06            jr c,2F
 169+ 986E 7C               ld a,h
 170+ 986F D6 08            sub 8
 171+ 9871 67               ld h,a
 172+ 9872 18 00            jr 2F
 173+ 9874 7C           2 ld a,h
 174+ 9875 FE 58            cp $58
 175+ 9877 28 02            jr z,3F
 176+ 9879 10 E3            djnz 1B
 177+ 987B ED 7B 15 89  3 ld sp,(Stack)
 178+ 987F C9           	ret
 179+ 9880
 180+ 9880              ; ---------------------------------------------------
 181+ 9880
 182+ 9880 ED 73 15 89  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
 183+ 9884 FD F9        	ld sp,iy
 184+ 9886 06 08            ld b,8
 185+ 9888 D1           1 pop de
 186+ 9889 7A           	ld a,d
 187+ 988A AE           	xor (hl)
 188+ 988B 77           	ld (hl),a
 189+ 988C 23           	inc hl
 190+ 988D D1           	pop de
 191+ 988E 7B           	ld a,e
 192+ 988F AE           	xor (hl)
 193+ 9890 77           	ld (hl),a
 194+ 9891 2B           	dec hl
 195+ 9892 24            	inc h
 196+ 9893 7C               ld a,h
 197+ 9894 E6 07            and 7
 198+ 9896 20 0A            jr nz,2F
 199+ 9898 7D               ld a,l
 200+ 9899 C6 20            add a,$20
 201+ 989B 6F               ld l,a
 202+ 989C 38 04            jr c,2F
 203+ 989E 7C               ld a,h
 204+ 989F D6 08            sub 8
 205+ 98A1 67               ld h,a
 206+ 98A2 7C           2 ld a,h
 207+ 98A3 FE 58            cp $58
 208+ 98A5 28 20            jr z,4F
 209+ 98A7 D1               pop de
 210+ 98A8 7B           	ld a,e
 211+ 98A9 AE           	xor (hl)
 212+ 98AA 77           	ld (hl),a
 213+ 98AB 23           	inc hl
 214+ 98AC 7A           	ld a,d
 215+ 98AD AE           	xor (hl)
 216+ 98AE 77           	ld (hl),a
 217+ 98AF 2B           	dec hl
 218+ 98B0 24           	inc h
 219+ 98B1 7C               ld a,h
 220+ 98B2 E6 07            and 7
 221+ 98B4 20 0A            jr nz,3F
 222+ 98B6 7D               ld a,l
 223+ 98B7 C6 20            add a,$20
 224+ 98B9 6F               ld l,a
 225+ 98BA 38 04            jr c,3F
 226+ 98BC 7C               ld a,h
 227+ 98BD D6 08            sub 8
 228+ 98BF 67               ld h,a
 229+ 98C0 7C           3 ld a,h
 230+ 98C1 FE 58            cp $58
 231+ 98C3 28 02            jr z,4F
 232+ 98C5 10 C1            djnz 1B
 233+ 98C7 ED 7B 15 89  4 ld sp,(Stack)
 234+ 98CB C9           	ret
 235+ 98CC
 236+ 98CC ED 73 15 89  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
 237+ 98D0 FD F9        	ld sp,iy
 238+ 98D2 06 08            ld b,8
 239+ 98D4 D1           1 pop de
 240+ 98D5 D1           	pop de
 241+ 98D6 7B           	ld a,e
 242+ 98D7 AE           	xor (hl)
 243+ 98D8 77           	ld (hl),a
 244+ 98D9 24            	inc h
 245+ 98DA 7C               ld a,h
 246+ 98DB E6 07            and 7
 247+ 98DD 20 0A            jr nz,2F
 248+ 98DF 7D               ld a,l
 249+ 98E0 C6 20            add a,$20
 250+ 98E2 6F               ld l,a
 251+ 98E3 38 04            jr c,2F
 252+ 98E5 7C               ld a,h
 253+ 98E6 D6 08            sub 8
 254+ 98E8 67               ld h,a
 255+ 98E9 7C           2 ld a,h
 256+ 98EA FE 58            cp $58
 257+ 98EC 28 1B            jr z,4F
 258+ 98EE D1               pop de
 259+ 98EF 7A           	ld a,d
 260+ 98F0 AE           	xor (hl)
 261+ 98F1 77           	ld (hl),a
 262+ 98F2 24           	inc h
 263+ 98F3 7C               ld a,h
 264+ 98F4 E6 07            and 7
 265+ 98F6 20 0A            jr nz,3F
 266+ 98F8 7D               ld a,l
 267+ 98F9 C6 20            add a,$20
 268+ 98FB 6F               ld l,a
 269+ 98FC 38 04            jr c,3F
 270+ 98FE 7C               ld a,h
 271+ 98FF D6 08            sub 8
 272+ 9901 67               ld h,a
 273+ 9902 7C           3 ld a,h
 274+ 9903 FE 58            cp $58
 275+ 9905 28 02            jr z,4F
 276+ 9907 10 CB            djnz 1B
 277+ 9909 ED 7B 15 89  4 ld sp,(Stack)
 278+ 990D C9           	ret
 279+ 990E
 280+ 990E ED 73 15 89  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
 281+ 9912 FD F9        	ld sp,iy
 282+ 9914 06 08            ld b,8
 283+ 9916 D1           1 pop de
 284+ 9917 7B           	ld a,e
 285+ 9918 AE           	xor (hl)
 286+ 9919 77           	ld (hl),a
 287+ 991A 23           	inc hl
 288+ 991B 7A           	ld a,d
 289+ 991C AE           	xor (hl)
 290+ 991D 77           	ld (hl),a
 291+ 991E 2B           	dec hl
 292+ 991F 24             	inc h
 293+ 9920 7C               ld a,h
 294+ 9921 E6 07            and 7
 295+ 9923 20 0A            jr nz,2F
 296+ 9925 7D               ld a,l
 297+ 9926 C6 20            add a,$20
 298+ 9928 6F               ld l,a
 299+ 9929 38 04            jr c,2F
 300+ 992B 7C               ld a,h
 301+ 992C D6 08            sub 8
 302+ 992E 67               ld h,a
 303+ 992F 7C           2 ld a,h
 304+ 9930 FE 58            cp $58
 305+ 9932 28 21            jr z,4F
 306+ 9934 D1               pop de
 307+ 9935 7A           	ld a,d
 308+ 9936 AE           	xor (hl)
 309+ 9937 77           	ld (hl),a
 310+ 9938 23           	inc hl
 311+ 9939 D1               pop de
 312+ 993A 7B           	ld a,e
 313+ 993B AE           	xor (hl)
 314+ 993C 77           	ld (hl),a
 315+ 993D 2B           	dec hl
 316+ 993E 24           	inc h
 317+ 993F 7C               ld a,h
 318+ 9940 E6 07            and 7
 319+ 9942 20 0A            jr nz,3F
 320+ 9944 7D               ld a,l
 321+ 9945 C6 20            add a,$20
 322+ 9947 6F               ld l,a
 323+ 9948 38 04            jr c,3F
 324+ 994A 7C               ld a,h
 325+ 994B D6 08            sub 8
 326+ 994D 67               ld h,a
 327+ 994E 7C           3 ld a,h
 328+ 994F FE 58            cp $58
 329+ 9951 28 02            jr z,4F
 330+ 9953 10 C1            djnz 1B
 331+ 9955 ED 7B 15 89  4 ld sp,(Stack)
 332+ 9959 C9           	ret
 333+ 995A
 334+ 995A ED 73 15 89  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
 335+ 995E FD F9        	ld sp,iy
 336+ 9960 06 08            ld b,8
 337+ 9962 D1           1 pop de
 338+ 9963 7B           	ld a,e
 339+ 9964 AE           	xor (hl)
 340+ 9965 77           	ld (hl),a
 341+ 9966 24            	inc h
 342+ 9967 7C               ld a,h
 343+ 9968 E6 07            and 7
 344+ 996A 20 0A            jr nz,2F
 345+ 996C 7D               ld a,l
 346+ 996D C6 20            add a,$20
 347+ 996F 6F               ld l,a
 348+ 9970 38 04            jr c,2F
 349+ 9972 7C               ld a,h
 350+ 9973 D6 08            sub 8
 351+ 9975 67               ld h,a
 352+ 9976 7C           2 ld a,h
 353+ 9977 FE 58            cp $58
 354+ 9979 28 1C            jr z,4F
 355+ 997B D1               pop de
 356+ 997C 7A           	ld a,d
 357+ 997D AE           	xor (hl)
 358+ 997E 77           	ld (hl),a
 359+ 997F 24           	inc h
 360+ 9980 7C               ld a,h
 361+ 9981 E6 07            and 7
 362+ 9983 20 0A            jr nz,3F
 363+ 9985 7D               ld a,l
 364+ 9986 C6 20            add a,$20
 365+ 9988 6F               ld l,a
 366+ 9989 38 04            jr c,3F
 367+ 998B 7C               ld a,h
 368+ 998C D6 08            sub 8
 369+ 998E 67               ld h,a
 370+ 998F 7C           3 ld a,h
 371+ 9990 FE 58            cp $58
 372+ 9992 28 03            jr z,4F
 373+ 9994 D1               pop de
 374+ 9995 10 CB            djnz 1B
 375+ 9997 ED 7B 15 89  4 ld sp,(Stack)
 376+ 999B C9           	ret
 377+ 999C
 378+ 999C              ; ---------------------------------------------------
 379+ 999C              ;
 380+ 999C              ;   27/02/23
 381+ 999C              ;
 382+ 999C              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
 383+ 999C              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
 384+ 999C              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
 385+ 999C
 386+ 999C ED 73 15 89  Pinta_Disparo ld (Stack),sp
 387+ 99A0 FD F9            ld sp,iy
 388+ 99A2 06 03            ld b,3
 389+ 99A4 D1           1 pop de
 390+ 99A5 7B               ld a,e
 391+ 99A6 AE               xor (hl)
 392+ 99A7 77               ld (hl),a
 393+ 99A8 23               inc hl
 394+ 99A9 7A               ld a,d
 395+ 99AA AE               xor (hl)
 396+ 99AB 77               ld (hl),a
 397+ 99AC 2B               dec hl
 398+ 99AD
 399+ 99AD 24               inc h
 400+ 99AE 7C               ld a,h
 401+ 99AF E6 07            and 7
 402+ 99B1 20 0A            jr nz,2F
 403+ 99B3 7D               ld a,l
 404+ 99B4 C6 20            add a,$20
 405+ 99B6 6F               ld l,a
 406+ 99B7 38 04            jr c,2F
 407+ 99B9 7C               ld a,h
 408+ 99BA D6 08            sub 8
 409+ 99BC 67               ld h,a
 410+ 99BD 7C           2 ld a,h
 411+ 99BE FE 58            cp $58
 412+ 99C0 28 02            jr z,3F
 413+ 99C2
 414+ 99C2 10 E0            djnz 1B
 415+ 99C4 ED 7B 15 89  3 ld sp,(Stack)
 416+ 99C8 C9               ret
 417+ 99C9
# file closed: Rutinas_de_impresion_sprites.asm
1676  99C9              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
   1+ 99C9              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
   2+ 99C9              ;
   3+ 99C9              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
   4+ 99C9              ;
   5+ 99C9              ; *****************************************************************************************************************************************************************************************
   6+ 99C9              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
   7+ 99C9
   8+ 99C9 7C           calcula_tercio ld a,h
   9+ 99CA E6 18        	and $18
  10+ 99CC CB 2F        	sra a
  11+ 99CE CB 2F        	sra a
  12+ 99D0 CB 2F        	sra a
  13+ 99D2 C9           	ret
  14+ 99D3
# file closed: calcula_tercio.asm
1677  99D3              	include "Cls.asm"
# file opened: Cls.asm
   1+ 99D3              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
   2+ 99D3              ;
   3+ 99D3              ;
   4+ 99D3              ;	CLS.
   5+ 99D3              ;
   6+ 99D3              ;	Limpia la pantalla y define sus atributos.
   7+ 99D3              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
   8+ 99D3              ;
   9+ 99D3              ;	COLORES: 0 ..... NEGRO
  10+ 99D3              ;    		 1 ..... AZUL
  11+ 99D3              ; 			 2 ..... ROJO
  12+ 99D3              ;			 3 ..... MAGENTA
  13+ 99D3              ; 			 4 ..... VERDE
  14+ 99D3              ; 			 5 ..... CIAN
  15+ 99D3              ;			 6 ..... AMARILLO
  16+ 99D3              ; 			 7 ..... BLANCO
  17+ 99D3              ;
  18+ 99D3              ;	INPUT: A contiene los atributos de pantalla.
  19+ 99D3              ;
  20+ 99D3              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
  21+ 99D3
  22+ 99D3
  23+ 99D3 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
  24+ 99D6 11 01 40     	LD DE,$4001
  25+ 99D9 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
  26+ 99DC 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
  27+ 99DE ED B0        	LDIR
  28+ 99E0 01 FF 02     	LD BC,767
  29+ 99E3 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
  30+ 99E4 ED B0        	LDIR
  31+ 99E6 C9           	ret
  32+ 99E7
# file closed: Cls.asm
1678  99E7              	include "Direcciones.asm"
# file opened: Direcciones.asm
   1+ 99E7              ; ******************************************************************************************************************************************************************************************
   2+ 99E7              ;
   3+ 99E7              ;   20/05/23
   4+ 99E7              ;
   5+ 99E7              ;	Recompone_posicion_inicio
   6+ 99E7              ;
   7+ 99E7              ; 	La rutina hace una llamada a [Mov_right] o [Mov_left] según su posición de inicio.
   8+ 99E7              ;	Así conseguimios que la entidad esté completamente oculta a la hora de aparecer por la izquierda_
   9+ 99E7              ;	_ o derecha. Tomaremos la columna de (Posicion_inicio) como referencia para hacer la llamada_
  10+ 99E7              ;	_ a una u otra rutina.
  11+ 99E7
  12+ 99E7              Recompone_posicion_inicio
  13+ 99E7
  14+ 99E7 2A D7 88     	ld hl,(Posicion_inicio)
  15+ 99EA 7D           	ld a,l
  16+ 99EB E6 1F        	and $1f
  17+ 99ED 28 16        	jr z,1F
  18+ 99EF
  19+ 99EF FE 1F        	cp $1f
  20+ 99F1 28 0D        	jr z,3F
  21+ 99F3
  22+ 99F3 21 02 89     	ld hl,Ctrl_2
  23+ 99F6 CB C6        	set 0,(hl)
  24+ 99F8 2A C9 88     	ld hl,(Puntero_objeto)
  25+ 99FB 22 05 89     	ld (Repone_puntero_objeto),hl
  26+ 99FE 18 08        	jr 2F
  27+ 9A00
  28+ 9A00 CD A1 9B     3 call Mov_left
  29+ 9A03 18 03        	jr 2F
  30+ 9A05
  31+ 9A05 CD 83 9A     1 call Mov_right
  32+ 9A08 21 00 F0     2 ld hl,Sprite_vacio
  33+ 9A0B 22 C9 88     	ld (Puntero_objeto),hl
  34+ 9A0E C9           	ret
  35+ 9A0F
  36+ 9A0F              ; ******************************************************************************************************************************************************************************************
  37+ 9A0F              ;
  38+ 9A0F              ;   27/05/23
  39+ 9A0F              ;
  40+ 9A0F              ;	Mov_down
  41+ 9A0F              ;
  42+ 9A0F              ; 	Mueve el Sprite X px hacia abajo.
  43+ 9A0F              ;
  44+ 9A0F              ;
  45+ 9A0F              Mov_down
  46+ 9A0F
  47+ 9A0F CD 71 9A     	call Reponne_punntero_objeto									; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  48+ 9A12              ;																	; _ repone (Puntero_objeto).
  49+ 9A12 21 EF 88     	ld hl,Ctrl_0
  50+ 9A15 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  51+ 9A17              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
  52+ 9A17              ; 																	; _ en el caso de que no lo haya.
  53+ 9A17 3A DD 88     	ld a,(Vel_down)
  54+ 9A1A 47           	ld b,a
  55+ 9A1B 2A C7 88         ld hl,(Posicion_actual)
  56+ 9A1E CD C9 99     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
  57+ 9A21 E6 02        	and 2
  58+ 9A23 28 0F        	jr z,1F
  59+ 9A25
  60+ 9A25              ; Nos encontramos en el último tercio de pantalla.
  61+ 9A25              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
  62+ 9A25
  63+ 9A25 7C           	ld a,h
  64+ 9A26 FE 57        	cp $57
  65+ 9A28 20 0A        	jr nz,1F
  66+ 9A2A
  67+ 9A2A 7D           	ld a,l
  68+ 9A2B C6 20        	add $20
  69+ 9A2D 30 05        	jr nc,1F
  70+ 9A2F
  71+ 9A2F              ; ------------------------------
  72+ 9A2F              ;	call Reaparece_arriba
  73+ 9A2F CD 2E 9D     	call Reinicio
  74+ 9A32              ; ------------------------------
  75+ 9A32
  76+ 9A32 18 08        	jr 3F
  77+ 9A34 CD B6 96     1 call NextScan
  78+ 9A37 22 C7 88     	ld (Posicion_actual),hl
  79+ 9A3A 10 E2            djnz 2B
  80+ 9A3C CD 54 9D     3 call Genera_coordenadas
  81+ 9A3F C9           	ret
  82+ 9A40
  83+ 9A40              ; ******************************************************************************************************************************************************************************************
  84+ 9A40              ;
  85+ 9A40              ;   27/05/23
  86+ 9A40              ;
  87+ 9A40              ;	Mov_up
  88+ 9A40              ;
  89+ 9A40              ; 	Mueve el Sprite hacia arriba.
  90+ 9A40              ;
  91+ 9A40              ;
  92+ 9A40              Mov_up
  93+ 9A40
  94+ 9A40 CD 71 9A     	call Reponne_punntero_objeto										; Si la entidad no se inició en la 1ª o última columna de pantalla,_
  95+ 9A43              ;																		; _ repone (Puntero_objeto).	call Reponne_punntero_objeto
  96+ 9A43 21 EF 88     	ld hl,Ctrl_0
  97+ 9A46 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
  98+ 9A48              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
  99+ 9A48              ; 																		; _ en el caso de que no lo haya.
 100+ 9A48 3A DC 88     	ld a,(Vel_up)
 101+ 9A4B 47           	ld b,a
 102+ 9A4C 2A C7 88     	ld hl,(Posicion_actual)
 103+ 9A4F CD C9 99     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 104+ 9A52 A7           	and a
 105+ 9A53 20 10        	jr nz,1F
 106+ 9A55
 107+ 9A55              ; Nos encontramos en el 1er tercio de pantalla.
 108+ 9A55              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 109+ 9A55
 110+ 9A55 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 111+ 9A56 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 112+ 9A58 20 0B            jr nz,1F
 113+ 9A5A 7D               ld a,l
 114+ 9A5B D6 20            sub $20
 115+ 9A5D 30 06            jr nc,1F
 116+ 9A5F 25               dec h
 117+ 9A60
 118+ 9A60              ; -----------------------------
 119+ 9A60 CD 0F 9D         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 120+ 9A63              ;	call Reinicio
 121+ 9A63              ; -----------------------------
 122+ 9A63
 123+ 9A63 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 124+ 9A65 CD C5 96     1 call PreviousScan
 125+ 9A68 22 C7 88     	ld (Posicion_actual),hl
 126+ 9A6B 10 E2            djnz 3B
 127+ 9A6D CD 54 9D     2 call Genera_coordenadas
 128+ 9A70 C9           	ret
 129+ 9A71
 130+ 9A71              ; -----------------------------
 131+ 9A71              ;
 132+ 9A71              ;	27/5/23
 133+ 9A71              ;
 134+ 9A71              ;	Si la rutina [Recompone_posicion_inicio] no inició la entidad en la 1ª o última columna de pantalla,_
 135+ 9A71              ;	_restaurará (Puntero_objeto) con el contenido de (Repone_puntero_objeto).
 136+ 9A71              ;
 137+ 9A71              ;	Esta rutina sólo será llamada desde las rutinas de movimiento vertical, [Mov_down] y [Mov_up].
 138+ 9A71              ;	Las rutinas [Mov_left] y [Mov_right] modifican (Puntero_objeto) cada vez que se ejecutan.
 139+ 9A71              ;
 140+ 9A71              ;	Modifica: A y (Puntero_objeto).
 141+ 9A71
 142+ 9A71 3A 02 89     Reponne_punntero_objeto	ld a,(Ctrl_2)
 143+ 9A74 CB 47        	bit 0,a
 144+ 9A76 C8           	ret z
 145+ 9A77 CB 87        	res 0,a
 146+ 9A79 32 02 89     	ld (Ctrl_2),a
 147+ 9A7C 2A 05 89     	ld hl,(Repone_puntero_objeto)
 148+ 9A7F 22 C9 88     	ld (Puntero_objeto),hl
 149+ 9A82 C9           	ret
 150+ 9A83
 151+ 9A83              ; ******************************************************************************************************************************************************************************************
 152+ 9A83              ;
 153+ 9A83              ;	19/10/22
 154+ 9A83              ;
 155+ 9A83              ;	Mov_right.
 156+ 9A83              ;
 157+ 9A83              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 158+ 9A83              ;
 159+ 9A83
 160+ 9A83 21 EF 88     Mov_right ld hl,Ctrl_0
 161+ 9A86 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 162+ 9A88              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 163+ 9A88              ; 																	; _ en el caso de que no lo haya.
 164+ 9A88 3A EF 88     	ld a,(Ctrl_0)
 165+ 9A8B CB 77        	bit 6,a
 166+ 9A8D 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
 167+ 9A8F
 168+ 9A8F CD BD 9C     	call Stop_Amadeus_right
 169+ 9A92 C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
 170+ 9A93 18 4D        	jr 8F
 171+ 9A95
 172+ 9A95 3A CB 88     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
 173+ 9A98 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
 174+ 9A9A 20 46        	jr nz,8F
 175+ 9A9C
 176+ 9A9C 3A CD 88     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
 177+ 9A9F A7           	and a 															; _[3] para continuar con el DESPLZ.
 178+ 9AA0 28 40        	jr z,8F
 179+ 9AA2
 180+ 9AA2              ; ---------- ---------- ----------
 181+ 9AA2              ;
 182+ 9AA2              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
 183+ 9AA2
 184+ 9AA2 3A DB 88     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
 185+ 9AA5 FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
 186+ 9AA7 28 11        	jr z,1F
 187+ 9AA9 38 06        	jr c,6F
 188+ 9AAB FE 04        	cp 4
 189+ 9AAD 28 14        	jr z,7F
 190+ 9AAF 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
 191+ 9AB1
 192+ 9AB1              ; ---------- ---------- ----------
 193+ 9AB1              ;
 194+ 9AB1              ; Perfiles de velocidad
 195+ 9AB1              ;
 196+ 9AB1
 197+ 9AB1 3A CD 88     6 ld a,(CTRL_DESPLZ) 												; Velocidad 1
 198+ 9AB4 FE FE        	cp $fe
 199+ 9AB6 20 2A        	jr nz,8F
 200+ 9AB8 18 10        	jr 3F
 201+ 9ABA 3A CD 88     1 ld a,(CTRL_DESPLZ) 												; Velocidad 2
 202+ 9ABD FE FD        	cp $fd
 203+ 9ABF 20 21        	jr nz,8F
 204+ 9AC1 18 07        	jr 3F
 205+ 9AC3 3A CD 88     7 ld a,(CTRL_DESPLZ) 												; Velocidad 4
 206+ 9AC6 FE FB        	cp $fb
 207+ 9AC8 20 18        	jr nz,8F
 208+ 9ACA
 209+ 9ACA              ; ---------- ---------- ----------
 210+ 9ACA
 211+ 9ACA              3
 212+ 9ACA CD FD 9C     	call Reaparece_izquierda 										; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 213+ 9ACD              ;	call Reinicio
 214+ 9ACD
 215+ 9ACD              ; ---------- ---------- ----------
 216+ 9ACD              ;
 217+ 9ACD              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
 218+ 9ACD
 219+ 9ACD 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 220+ 9ACF C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 221+ 9AD0 CD E9 9A     	call DESPLZ_DER
 222+ 9AD3 C1           	pop bc
 223+ 9AD4 10 F9        	djnz 5B
 224+ 9AD6 2A C7 88     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
 225+ 9AD9 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
 226+ 9ADA 22 C7 88     	ld (Posicion_actual),hl
 227+ 9ADD CD 54 9D     	call Genera_coordenadas
 228+ 9AE0 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 229+ 9AE2
 230+ 9AE2              ; ---------- ---------- ----------
 231+ 9AE2
 232+ 9AE2 2A C7 88     8 ld hl,(Posicion_actual)
 233+ 9AE5 CD E9 9A     	call DESPLZ_DER
 234+ 9AE8 C9           2 ret
 235+ 9AE9
 236+ 9AE9              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 237+ 9AE9              ;
 238+ 9AE9              ;	22/9/22
 239+ 9AE9              ;
 240+ 9AE9
 241+ 9AE9 CD F8 9A     DESPLZ_DER call Desplaza_derecha
 242+ 9AEC CD 44 9B         call modifica_parametros_1er_DESPLZ_2
 243+ 9AEF CD 6D 9B         call Ciclo_completo
 244+ 9AF2 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
 245+ 9AF5 CB FE        	set 7,(hl)
 246+ 9AF7 C9           	ret
 247+ 9AF8
 248+ 9AF8              ; ******************************************************************************************************************************************************************************************
 249+ 9AF8              ;	15/02/23
 250+ 9AF8              ;
 251+ 9AF8
 252+ 9AF8 3A DB 88     Desplaza_derecha ld a,(Vel_right)
 253+ 9AFB 47           	ld b,a
 254+ 9AFC 2A D3 88     	ld hl,(Puntero_DESPLZ_der)
 255+ 9AFF 23           1 inc hl
 256+ 9B00 23           	inc hl
 257+ 9B01 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
 258+ 9B03 22 D3 88     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
 259+ 9B06 CD DF 8C     	call Extrae_address
 260+ 9B09 22 C9 88     	ld (Puntero_objeto),hl
 261+ 9B0C
 262+ 9B0C              ; Modifica (Puntero_DESPLZ_izq).
 263+ 9B0C
 264+ 9B0C              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
 265+ 9B0C              ; Cuántos movimientos hemos hecho ??
 266+ 9B0C              ; DE contiene (Puntero_DESPLZ_der).
 267+ 9B0C
 268+ 9B0C 2A CF 88     7 ld hl,(Indice_Sprite_der)
 269+ 9B0F EB           	ex de,hl
 270+ 9B10 A7           	and a
 271+ 9B11 ED 52        	sbc hl,de
 272+ 9B13 CB 3D        	srl l
 273+ 9B15 3E 08        6 ld a,8
 274+ 9B17 95           	sub l
 275+ 9B18 30 1E        	jr nc,3F
 276+ 9B1A
 277+ 9B1A              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
 278+ 9B1A              ; B="0".
 279+ 9B1A
 280+ 9B1A 04           4 inc b
 281+ 9B1B 3C           	inc a
 282+ 9B1C 20 FC        	jr nz,4B
 283+ 9B1E 78           	ld a,b
 284+ 9B1F 08           	ex af,af
 285+ 9B20 2A CF 88     	ld hl,(Indice_Sprite_der)
 286+ 9B23 23           5 inc hl
 287+ 9B24 23           	inc hl
 288+ 9B25 10 FC        	djnz 5B
 289+ 9B27 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 290+ 9B2A CD DF 8C     	call Extrae_address
 291+ 9B2D 22 C9 88     	ld (Puntero_objeto),hl
 292+ 9B30
 293+ 9B30              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 294+ 9B30              ; _(Posicion_actual).
 295+ 9B30
 296+ 9B30 21 C7 88     	ld hl,Posicion_actual
 297+ 9B33 34           	inc (hl)
 298+ 9B34 08               ex af,af
 299+ 9B35 6F           	ld l,a
 300+ 9B36 18 DD        	jr 6B
 301+ 9B38
 302+ 9B38              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 303+ 9B38
 304+ 9B38 47           3 ld b,a
 305+ 9B39 2A D1 88     	ld hl,(Indice_Sprite_izq)
 306+ 9B3C 23           2 inc hl
 307+ 9B3D 23           	inc hl
 308+ 9B3E 10 FC        	djnz 2B
 309+ 9B40 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 310+ 9B43 C9           8 ret
 311+ 9B44
 312+ 9B44              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 313+ 9B44              ;
 314+ 9B44              ;	24/7/22
 315+ 9B44              ;
 316+ 9B44              ;	modifica_parametros_1er_DESPLZ_2
 317+ 9B44              ;
 318+ 9B44              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 319+ 9B44              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 320+ 9B44              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 321+ 9B44
 322+ 9B44 3A CD 88     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 323+ 9B47 A7           	and a
 324+ 9B48 20 1F        	jr nz,1F
 325+ 9B4A D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 326+ 9B4C 32 CD 88         ld (CTRL_DESPLZ),a
 327+ 9B4F
 328+ 9B4F 21 C6 88     	ld hl,Columns
 329+ 9B52 34           	inc (hl)
 330+ 9B53 3A D9 88     	ld a,(Cuad_objeto)
 331+ 9B56 E6 01        	and 1
 332+ 9B58 28 0F        	jr z,1F
 333+ 9B5A 2A C7 88     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 334+ 9B5D 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
 335+ 9B5E 22 C7 88     	ld (Posicion_actual),hl
 336+ 9B61 CD 54 9D     	call Genera_coordenadas
 337+ 9B64 CD C9 9C     	call Inc_CTRL_DESPLZ
 338+ 9B67 18 03        	jr 2F
 339+ 9B69 CD C9 9C     1 call Inc_CTRL_DESPLZ
 340+ 9B6C C9           2 ret
 341+ 9B6D
 342+ 9B6D              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 343+ 9B6D              ;
 344+ 9B6D              ;	24/7/22
 345+ 9B6D              ;
 346+ 9B6D              ;	Ciclo_completo.
 347+ 9B6D              ;
 348+ 9B6D              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
 349+ 9B6D              ;
 350+ 9B6D              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
 351+ 9B6D              ; 	Decrementamos (Columns).
 352+ 9B6D              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
 353+ 9B6D              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
 354+ 9B6D
 355+ 9B6D
 356+ 9B6D 3A CD 88     Ciclo_completo ld a,(CTRL_DESPLZ)
 357+ 9B70 FE FF        	cp $ff
 358+ 9B72 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 359+ 9B74 E6 F0        	and $f0
 360+ 9B76 20 28        	jr nz,3F
 361+ 9B78
 362+ 9B78              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
 363+ 9B78
 364+ 9B78 3A CD 88     	ld a,(CTRL_DESPLZ)
 365+ 9B7B 47           	ld b,a
 366+ 9B7C 3E F8        	ld a,$f8
 367+ 9B7E 80           	add b
 368+ 9B7F 32 CD 88     	ld (CTRL_DESPLZ),a
 369+ 9B82 18 1C        	jr 3F
 370+ 9B84 21 C6 88     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
 371+ 9B87 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
 372+ 9B88 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
 373+ 9B89 32 CD 88     	ld (CTRL_DESPLZ),a
 374+ 9B8C 3A D9 88     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
 375+ 9B8F E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
 376+ 9B91 20 0A        	jr nz,2F
 377+ 9B93 2A C7 88     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 378+ 9B96 23           	inc hl
 379+ 9B97 22 C7 88     	ld (Posicion_actual),hl
 380+ 9B9A CD 54 9D     	call Genera_coordenadas
 381+ 9B9D
 382+ 9B9D              ; Inicia el puntero de Sprite.
 383+ 9B9D
 384+ 9B9D CD F6 8C     2 call Inicia_puntero_objeto_der
 385+ 9BA0 C9           3 ret
 386+ 9BA1
 387+ 9BA1              ; ******************************************************************************************************************************************************************************************
 388+ 9BA1              ;
 389+ 9BA1              ;	15/02/23
 390+ 9BA1              ;
 391+ 9BA1              ;	Mov_left.
 392+ 9BA1              ;
 393+ 9BA1              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
 394+ 9BA1              ;
 395+ 9BA1              Mov_left
 396+ 9BA1
 397+ 9BA1 21 EF 88     	ld hl,Ctrl_0
 398+ 9BA4 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 399+ 9BA6              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 400+ 9BA6              ; 																	; _ en el caso de que no lo haya.
 401+ 9BA6 3A EF 88     	ld a,(Ctrl_0)
 402+ 9BA9 CB 77        	bit 6,a
 403+ 9BAB 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
 404+ 9BAD
 405+ 9BAD CD C3 9C     	call Stop_Amadeus_left
 406+ 9BB0 C8           	ret z
 407+ 9BB1 20 4A        	jr nz,8F
 408+ 9BB3
 409+ 9BB3 3A CB 88     11 ld a,(Coordenada_X)
 410+ 9BB6 A7           	and a
 411+ 9BB7 20 44        	jr nz,8F
 412+ 9BB9
 413+ 9BB9 3A CD 88     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
 414+ 9BBC A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
 415+ 9BBD 28 3E        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
 416+ 9BBF
 417+ 9BBF              ; ---------- ---------- ----------
 418+ 9BBF
 419+ 9BBF 3A DA 88     	ld a,(Vel_left)
 420+ 9BC2 FE 02        	cp 2
 421+ 9BC4 28 0F        	jr z,1F
 422+ 9BC6 38 04        	jr c,6F
 423+ 9BC8 FE 04        	cp 4
 424+ 9BCA 28 12        	jr z,7F
 425+ 9BCC
 426+ 9BCC              ; ---------- ---------- ----------
 427+ 9BCC
 428+ 9BCC 3A CD 88     6 ld a,(CTRL_DESPLZ)
 429+ 9BCF FE F8        	cp $f8
 430+ 9BD1 20 2A        	jr nz,8F
 431+ 9BD3 18 10        	jr 4F
 432+ 9BD5 3A CD 88     1 ld a,(CTRL_DESPLZ)
 433+ 9BD8 FE F9        	cp $f9
 434+ 9BDA 20 21        	jr nz,8F
 435+ 9BDC 18 07        	jr 4F
 436+ 9BDE 3A CD 88     7 ld a,(CTRL_DESPLZ)
 437+ 9BE1 FE FB        	cp $fb
 438+ 9BE3 20 18        	jr nz,8F
 439+ 9BE5
 440+ 9BE5              ; ---------- ---------- ----------
 441+ 9BE5
 442+ 9BE5              4
 443+ 9BE5 CD EB 9C     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
 444+ 9BE8              ;	call Reinicio
 445+ 9BE8
 446+ 9BE8              ; ---------- ---------- ----------
 447+ 9BE8
 448+ 9BE8 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
 449+ 9BEA C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
 450+ 9BEB
 451+ 9BEB              ;	ld hl,(Indice_Sprite_izq)
 452+ 9BEB              ;	ld (Puntero_DESPLZ_izq),hl
 453+ 9BEB
 454+ 9BEB CD 04 9C     	call DESPLZ_IZQ
 455+ 9BEE C1           	pop bc
 456+ 9BEF 10 F9        	djnz 5B
 457+ 9BF1 2A C7 88     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
 458+ 9BF4 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
 459+ 9BF5 22 C7 88     	ld (Posicion_actual),hl
 460+ 9BF8 CD 54 9D     	call Genera_coordenadas
 461+ 9BFB 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
 462+ 9BFD
 463+ 9BFD              ; ---------- ---------- ----------
 464+ 9BFD
 465+ 9BFD              ; Movemos, no hay recolocación.
 466+ 9BFD
 467+ 9BFD 2A C7 88     8 ld hl,(Posicion_actual)
 468+ 9C00 CD 04 9C     	call DESPLZ_IZQ
 469+ 9C03 C9           2 ret
 470+ 9C04
 471+ 9C04              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 472+ 9C04              ;
 473+ 9C04              ;	22/9/22
 474+ 9C04
 475+ 9C04              DESPLZ_IZQ
 476+ 9C04
 477+ 9C04 CD 13 9C     	call Desplaza_izquierda
 478+ 9C07 CD 5F 9C         call modifica_parametros_1er_DESPLZ
 479+ 9C0A CD 87 9C     	call Ciclo_completo_2
 480+ 9C0D 21 EF 88     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
 481+ 9C10 CB BE        	res 7,(hl)
 482+ 9C12 C9           	ret
 483+ 9C13
 484+ 9C13              Desplaza_izquierda
 485+ 9C13
 486+ 9C13 3A DA 88     	ld a,(Vel_left)
 487+ 9C16 47           	ld b,a
 488+ 9C17 2A D5 88     	ld hl,(Puntero_DESPLZ_izq)
 489+ 9C1A 23           1 inc hl
 490+ 9C1B 23           	inc hl
 491+ 9C1C 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
 492+ 9C1E 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 493+ 9C21 CD DF 8C     	call Extrae_address
 494+ 9C24 22 C9 88     	ld (Puntero_objeto),hl
 495+ 9C27
 496+ 9C27              ; Modifica (Puntero_DESPLZ_der).
 497+ 9C27
 498+ 9C27              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
 499+ 9C27              ; Cuántos movimientos hemos hecho ??
 500+ 9C27              ; DE contiene (Puntero_DESPLZ_izq).
 501+ 9C27
 502+ 9C27 2A D1 88     7 ld hl,(Indice_Sprite_izq)
 503+ 9C2A EB           	ex de,hl
 504+ 9C2B A7           	and a
 505+ 9C2C ED 52        	sbc hl,de
 506+ 9C2E CB 3D        	srl l
 507+ 9C30 3E 08        6 ld a,8
 508+ 9C32 95           	sub l
 509+ 9C33 30 1E        	jr nc,3F
 510+ 9C35
 511+ 9C35              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
 512+ 9C35              ; B="0".
 513+ 9C35
 514+ 9C35 04           4 inc b
 515+ 9C36 3C           	inc a
 516+ 9C37 20 FC        	jr nz,4B
 517+ 9C39 78           	ld a,b
 518+ 9C3A 08           	ex af,af
 519+ 9C3B 2A D1 88     	ld hl,(Indice_Sprite_izq)
 520+ 9C3E 23           5 inc hl
 521+ 9C3F 23           	inc hl
 522+ 9C40 10 FC        	djnz 5B
 523+ 9C42 22 D5 88     	ld (Puntero_DESPLZ_izq),hl
 524+ 9C45 CD DF 8C     	call Extrae_address
 525+ 9C48 22 C9 88     	ld (Puntero_objeto),hl
 526+ 9C4B
 527+ 9C4B              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
 528+ 9C4B              ; _(Posicion_actual).
 529+ 9C4B
 530+ 9C4B 21 C7 88     	ld hl,Posicion_actual
 531+ 9C4E 35           	dec (hl)
 532+ 9C4F 08           	ex af,af
 533+ 9C50 6F           	ld l,a
 534+ 9C51 18 DD        	jr 6B
 535+ 9C53
 536+ 9C53              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
 537+ 9C53
 538+ 9C53 47           3 ld b,a
 539+ 9C54 2A CF 88     	ld hl,(Indice_Sprite_der)
 540+ 9C57 23           2 inc hl
 541+ 9C58 23           	inc hl
 542+ 9C59 10 FC        	djnz 2B
 543+ 9C5B 22 D3 88     	ld (Puntero_DESPLZ_der),hl
 544+ 9C5E C9           8 ret
 545+ 9C5F
 546+ 9C5F              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 547+ 9C5F              ;
 548+ 9C5F              ;	modifica_parametros_1er_DESPLZ
 549+ 9C5F              ;
 550+ 9C5F              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
 551+ 9C5F              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
 552+ 9C5F              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
 553+ 9C5F
 554+ 9C5F 3A CD 88     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
 555+ 9C62 A7           	and a
 556+ 9C63 20 1E        	jr nz,1F
 557+ 9C65 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
 558+ 9C66 32 CD 88         ld (CTRL_DESPLZ),a
 559+ 9C69 21 C6 88     	ld hl,Columns
 560+ 9C6C 34           	inc (hl)
 561+ 9C6D 3A D9 88     	ld a,(Cuad_objeto)
 562+ 9C70 E6 01        	and 1
 563+ 9C72 20 0F        	jr nz,1F
 564+ 9C74 2A C7 88     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
 565+ 9C77 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
 566+ 9C78 22 C7 88     	ld (Posicion_actual),hl
 567+ 9C7B CD 54 9D     	call Genera_coordenadas
 568+ 9C7E CD DA 9C     	call Dec_CTRL_DESPLZ
 569+ 9C81 18 03        	jr 2F
 570+ 9C83 CD DA 9C     1 call Dec_CTRL_DESPLZ
 571+ 9C86 C9           2 ret
 572+ 9C87
 573+ 9C87              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 574+ 9C87
 575+ 9C87 3A CD 88     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
 576+ 9C8A FE F7        	cp $f7
 577+ 9C8C 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
 578+ 9C8E 30 2C        	jr nc,3F
 579+ 9C90
 580+ 9C90              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
 581+ 9C90
 582+ 9C90 06 00        	ld b,0
 583+ 9C92 04           4 inc b
 584+ 9C93 3C           	inc a
 585+ 9C94 FE F7        	cp $f7
 586+ 9C96 20 FA        	jr nz,4B
 587+ 9C98 3E FF        	ld a,$ff
 588+ 9C9A 90           	sub b
 589+ 9C9B 32 CD 88     	ld (CTRL_DESPLZ),a
 590+ 9C9E 18 1C        	jr 3F
 591+ 9CA0
 592+ 9CA0              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
 593+ 9CA0
 594+ 9CA0 21 C6 88     1 ld hl,Columns
 595+ 9CA3 35           	dec (hl)
 596+ 9CA4 AF           	xor a
 597+ 9CA5 32 CD 88     	ld (CTRL_DESPLZ),a
 598+ 9CA8 3A D9 88     	ld a,(Cuad_objeto)
 599+ 9CAB E6 01        	and 1
 600+ 9CAD 28 0A        	jr z,2F
 601+ 9CAF 2A C7 88     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
 602+ 9CB2 2B           	dec hl
 603+ 9CB3 22 C7 88     	ld (Posicion_actual),hl
 604+ 9CB6 CD 54 9D     	call Genera_coordenadas
 605+ 9CB9
 606+ 9CB9              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
 607+ 9CB9
 608+ 9CB9 CD 09 8D     2 call Inicia_puntero_objeto_izq
 609+ 9CBC C9           3 ret
 610+ 9CBD
 611+ 9CBD              ; ---------- ---------- ---------- ---------- ---------- ----------
 612+ 9CBD              ;
 613+ 9CBD              ;	19/10/22
 614+ 9CBD              ;
 615+ 9CBD              ;	(cp 29) para un Amadeus de 3 Columns.
 616+ 9CBD              ;	(cp 30)   ""  ""    ""     2 Columns.
 617+ 9CBD
 618+ 9CBD 3A CB 88     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 619+ 9CC0 FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
 620+ 9CC2 C9           	ret
 621+ 9CC3
 622+ 9CC3              ; ---------- ---------- ---------- ---------- ---------- ----------
 623+ 9CC3              ;
 624+ 9CC3              ;	19/10/22
 625+ 9CC3              ;
 626+ 9CC3              ;	(cp 2) para un Amadeus de 3 Columns.
 627+ 9CC3              ;	(cp 1)   ""  ""    ""     2 Columns.
 628+ 9CC3
 629+ 9CC3 3A CB 88     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
 630+ 9CC6 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
 631+ 9CC8 C9           	ret
 632+ 9CC9
 633+ 9CC9              ; ---------- ---------- ---------- ---------- ---------- ----------
 634+ 9CC9              ;
 635+ 9CC9              ;	24/7/22
 636+ 9CC9              ;
 637+ 9CC9              ;	Inc_CTRL_DESPLZ
 638+ 9CC9              ;
 639+ 9CC9              ;
 640+ 9CC9              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 641+ 9CC9
 642+ 9CC9 21 CD 88     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 643+ 9CCC 3A DB 88     	ld a,(Vel_right)
 644+ 9CCF A7           	and a
 645+ 9CD0 28 06        	jr z,1F
 646+ 9CD2 47           	ld b,a
 647+ 9CD3 34           3 inc (hl)
 648+ 9CD4 10 FD        	djnz 3B
 649+ 9CD6 18 01        	jr 2F
 650+ 9CD8 34           1 inc (hl)
 651+ 9CD9 C9           2 ret
 652+ 9CDA
 653+ 9CDA              ; ---------- ---------- ---------- ---------- ---------- ----------
 654+ 9CDA              ;
 655+ 9CDA              ;	5/2/23
 656+ 9CDA              ;
 657+ 9CDA              ;	Dec_CTRL_DESPLZ
 658+ 9CDA              ;
 659+ 9CDA              ;
 660+ 9CDA              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
 661+ 9CDA
 662+ 9CDA 21 CD 88     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
 663+ 9CDD 3A DA 88     	ld a,(Vel_left)
 664+ 9CE0 A7           	and a
 665+ 9CE1 28 06        	jr z,1F
 666+ 9CE3 47           	ld b,a
 667+ 9CE4 35           3 dec (hl)
 668+ 9CE5 10 FD        	djnz 3B
 669+ 9CE7 18 01        	jr 2F
 670+ 9CE9 35           1 dec (hl)
 671+ 9CEA C9           2 ret
 672+ 9CEB
 673+ 9CEB              ; ---------- ---------- ---------- ---------- ---------- ----------
 674+ 9CEB
 675+ 9CEB 2A C7 88     Reaparece_derecha ld hl,(Posicion_actual)
 676+ 9CEE 01 1F 00     	ld bc,31
 677+ 9CF1 A7           	and a
 678+ 9CF2 ED 4A        	adc hl,bc
 679+ 9CF4 22 C7 88     	ld (Posicion_actual),hl
 680+ 9CF7 21 EF 88     	ld hl,Ctrl_0														; $xxx1
 681+ 9CFA CB C6        	set 0,(hl)
 682+ 9CFC C9           	ret
 683+ 9CFD
 684+ 9CFD              ; ---------- ---------- ---------- ---------- ---------- ----------
 685+ 9CFD
 686+ 9CFD 2A C7 88     Reaparece_izquierda ld hl,(Posicion_actual)
 687+ 9D00 01 1F 00     	ld bc,31
 688+ 9D03 A7           	and a
 689+ 9D04 ED 42        	sbc hl,bc
 690+ 9D06 22 C7 88     	ld (Posicion_actual),hl 											; $xx1x
 691+ 9D09 21 EF 88     	ld hl,Ctrl_0
 692+ 9D0C CB CE        	set 1,(hl)
 693+ 9D0E C9           	ret
 694+ 9D0F
 695+ 9D0F              ; ---------- ---------- ---------- ---------- ---------- ----------
 696+ 9D0F
 697+ 9D0F 24           Reaparece_abajo inc h
 698+ 9D10 01 E0 17     	ld bc,$17e0
 699+ 9D13 A7           	and a
 700+ 9D14 ED 4A        	adc hl,bc
 701+ 9D16 22 C7 88     	ld (Posicion_actual),hl
 702+ 9D19 21 EF 88     	ld hl,Ctrl_0
 703+ 9D1C CB D6        	set 2,(hl)
 704+ 9D1E C9           	ret
 705+ 9D1F
 706+ 9D1F              ; ---------- ---------- ---------- ---------- ---------- ----------
 707+ 9D1F
 708+ 9D1F 01 E0 17     Reaparece_arriba ld bc,$17e0
 709+ 9D22 A7           	and a
 710+ 9D23 ED 42        	sbc hl,bc
 711+ 9D25 22 C7 88     	ld (Posicion_actual),hl
 712+ 9D28 21 EF 88     	ld hl,Ctrl_0
 713+ 9D2B CB DE        	set 3,(hl)
 714+ 9D2D C9           	ret
 715+ 9D2E
 716+ 9D2E              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
 717+ 9D2E              ;
 718+ 9D2E              ;	15/07/23
 719+ 9D2E
 720+ 9D2E              Reinicio
 721+ 9D2E
 722+ 9D2E              ; Vamos a reiniciar los punteros y variables de movimiento.
 723+ 9D2E
 724+ 9D2E AF           	xor a
 725+ 9D2F 21 F6 88     	ld hl,Puntero_indice_mov_bucle
 726+ 9D32 CD 50 9D     	call Limpia_contenido_hl
 727+ 9D35
 728+ 9D35 21 C7 88     	ld hl,Posicion_actual
 729+ 9D38 CD 50 9D     	call Limpia_contenido_hl
 730+ 9D3B
 731+ 9D3B CD 82 A0     	call Inicializa_Puntero_indice_mov
 732+ 9D3E CD 0C A0     	call Inicia_Puntero_mov
 733+ 9D41
 734+ 9D41 21 F8 88     	ld hl,Incrementa_puntero
 735+ 9D44 06 05        	ld b,5
 736+ 9D46 77           1 ld (hl),a
 737+ 9D47 23           	inc hl
 738+ 9D48 10 FC        	djnz 1B
 739+ 9D4A
 740+ 9D4A 21 02 89     	ld hl,Ctrl_2
 741+ 9D4D CB 96        	res 2,(hl)							; El movimiento de la entidad, deja de estar iniciado.
 742+ 9D4F
 743+ 9D4F C9           	ret
 744+ 9D50
 745+ 9D50 77           Limpia_contenido_hl	ld (hl),a
 746+ 9D51 23           	inc hl
 747+ 9D52 77           	ld (hl),a
 748+ 9D53 C9           	ret
 749+ 9D54
 750+ 9D54
# file closed: Direcciones.asm
1679  9D54              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
   1+ 9D54              ; ------------------------------------------------------------------------
   2+ 9D54              ;
   3+ 9D54              ;	02/04/23
   4+ 9D54              ;
   5+ 9D54              ;	Proporciona las coordenadas del objeto a imprimir.
   6+ 9D54              ;	Fila superior "0", Columna izquierda "0".
   7+ 9D54              ;
   8+ 9D54              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
   9+ 9D54              ;
  10+ 9D54              ;	Modifica: A,BC y DE.
  11+ 9D54
  12+ 9D54 C5           Genera_coordenadas push bc
  13+ 9D55 E5           	push hl
  14+ 9D56 D5           	push de
  15+ 9D57
  16+ 9D57 2A C7 88     	ld hl,(Posicion_actual)
  17+ 9D5A
  18+ 9D5A 7D           	ld a,l
  19+ 9D5B E6 1F        	and $1f
  20+ 9D5D 32 CB 88     	ld (Coordenada_X),a 								; Coordenada Y del sprite, (0-$1f). Columnas.
  21+ 9D60
  22+ 9D60 CD C9 99     	call calcula_tercio
  23+ 9D63 47           	ld b,a 												; "0", "1" o "1" en función del tercio de pantalla.
  24+ 9D64
  25+ 9D64 1E 00        	ld e,0
  26+ 9D66 7D           	ld a,l
  27+ 9D67 E6 E0        	and $e0
  28+ 9D69 28 01        	jr z,1F
  29+ 9D6B 04           	inc b
  30+ 9D6C
  31+ 9D6C 04           1 inc b
  32+ 9D6D 05           	dec b
  33+ 9D6E 28 07        	jr z,2F												; Si estamos en el 1er tercio de pantalla y en la línea "0".
  34+ 9D70              ;														; _ , salimos.
  35+ 9D70 1C           3 inc e
  36+ 9D71 D6 20        	sub 32
  37+ 9D73 20 FB        	jr nz,3B
  38+ 9D75 10 F5        	djnz 1B
  39+ 9D77
  40+ 9D77 7B           2 ld a,e
  41+ 9D78 32 CC 88     	ld (Coordenada_y),a
  42+ 9D7B
  43+ 9D7B D1           	pop de
  44+ 9D7C E1           	pop hl
  45+ 9D7D C1           	pop bc
  46+ 9D7E
  47+ 9D7E C9           	ret
  48+ 9D7F
  49+ 9D7F              ; ------------------------------------------------------------------------
  50+ 9D7F              ;	28/05/23
  51+ 9D7F              ;
  52+ 9D7F              ;	Proporciona las coordenadas del disparo a imprimir `sospechoso de colisión'.
  53+ 9D7F              ;	Fila superior "0", Columna izquierda "0".
  54+ 9D7F              ;
  55+ 9D7F              ;	Input: HL contendrá la posición del proyectil en pantalla.
  56+ 9D7F              ;	Output: DE contendrá las coordenadas del disparo:
  57+ 9D7F              ;
  58+ 9D7F              ;		DE="$120d"
  59+ 9D7F              ;
  60+ 9D7F              ;		D, (Coordenada_X), Columnas, $12
  61+ 9D7F              ;		E, (Coordenada_y), Filas, $0d
  62+ 9D7F              ;
  63+ 9D7F              ;	Nota: El char. de la esquina superior izquierda de pantalla sería: $0000, Columna "0", Fila "0".
  64+ 9D7F
  65+ 9D7F              ;	Modifica: A,BC y DE.
  66+ 9D7F
  67+ 9D7F
  68+ 9D7F              Genera_coordenadas_disparo
  69+ 9D7F
  70+ 9D7F              ; HL contendrá la dirección de pantalla del disparo. (Puntero de impresión).
  71+ 9D7F
  72+ 9D7F 7D           	ld a,l
  73+ 9D80 E6 1F        	and $1f
  74+ 9D82 57           	ld d,a 												; Columnas en D. Coordenada_X.
  75+ 9D83 CD C9 99     	call calcula_tercio
  76+ 9D86 47           	ld b,a 												; "1", "2" o "3" en función del tercio de pantalla.
  77+ 9D87 1E 00        	ld e,0
  78+ 9D89 7D           	ld a,l
  79+ 9D8A E6 E0        	and $e0
  80+ 9D8C 28 01        	jr z,1F
  81+ 9D8E 04           	inc b
  82+ 9D8F 1C           1 inc e
  83+ 9D90 D6 20        	sub 32
  84+ 9D92 20 FB        	jr nz,1B
  85+ 9D94 10 F9        	djnz 1B 											; Filas en E. Coordenada_y.
  86+ 9D96 C9           	ret
  87+ 9D97
# file closed: Genera_coordenadas.asm
1680  9D97              	include "Relojes_y_temporizaciones.asm"
# file opened: Relojes_y_temporizaciones.asm
   1+ 9D97              ; Relojes y temporizaciones.
   2+ 9D97
   3+ 9D97              ; ------------------------------------------------------
   4+ 9D97              ;
   5+ 9D97              ;	16/7/23
   6+ 9D97              ;
   7+ 9D97              ;	Cuando se produce un disparo de Amadeus, la variable: (Disparo_Amadeus) se_
   8+ 9D97              ;	_ fija a "0". Con esto, desactivamos la posibilidad de disparo de nuestra nave hasta_
   9+ 9D97              ;	_ que dicha variable vualva a fijarse en "1". Para que esto suceda, el contador: _
  10+ 9D97              ;	_ (Temporiza_disparo_Amadeus) ha de llegar a "0".
  11+ 9D97              ;
  12+ 9D97              ;	INPUTS:			HL ..... Habilita_disparo_(Amadeus/entidad).
  13+ 9D97              ;					DE ..... Temporiza_disparo_(Amadeus/entidad).
  14+ 9D97
  15+ 9D97              ; Disparo_entidad db 1
  16+ 9D97              ; Tiempo_disparo_entidad db 15							; Restaura (Temporiza_disparo_entidad).
  17+ 9D97              ; Temporiza_disparo_entidad db 127						; Reloj, decreciente.
  18+ 9D97
  19+ 9D97              Habilita_disparos
  20+ 9D97
  21+ 9D97 7E           	ld a,(hl)
  22+ 9D98 A7           	and a
  23+ 9D99 C0           	ret nz							; Salimos de la rutina pues el disparo de entidad ya está habilitado.
  24+ 9D9A
  25+ 9D9A EB           	ex de,hl
  26+ 9D9B
  27+ 9D9B 35           	dec (hl)						; Decrementamos el contador del CLOCK que habilita el siguiente disparo_
  28+ 9D9C C0           	ret nz							; _ y salimos de la rutina si éste no ha llegado a "0".
  29+ 9D9D
  30+ 9D9D              ; El CLOCK que habilita el siguiente disparo a llegado a "0". Reponemos su valor con el respaldo (CLOCK_repone_disparo_entidad_BACKUP).
  31+ 9D9D
  32+ 9D9D 2B           	dec hl							; CLOCK_repone_disparo_entidad/Amadeus recupera su valor inicial.
  33+ 9D9E 7E           	ld a,(hl)
  34+ 9D9F 23           	inc hl
  35+ 9DA0 77           	ld (hl),a
  36+ 9DA1
  37+ 9DA1 EB           	ex de,hl						; Habilitamos disparo.
  38+ 9DA2 3E 01        	ld a,1
  39+ 9DA4 77           	ld (hl),a
  40+ 9DA5 C9           	ret
# file closed: Relojes_y_temporizaciones.asm
1681  9DA6              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
   1+ 9DA6
   2+ 9DA6
   3+ 9DA6              ;   07/07/23
   4+ 9DA6              ;
   5+ 9DA6              ;   Base de datos. PATRONES DE MOVIMIENTO.
   6+ 9DA6              ;
   7+ 9DA6              ;   Codificación:
   8+ 9DA6              ;
   9+ 9DA6              ;   La descripción de un movimiento consta de 1 o más desplazamientos.
  10+ 9DA6              ;
  11+ 9DA6              ;   Un desplazamiento tiene la siguiente estructura:
  12+ 9DA6              ;
  13+ 9DA6              ;   (Byte1),(Byte2),(Byte3),(Cola_de_desplazamiento).   (4 Bytes).
  14+ 9DA6              ;
  15+ 9DA6              ;                       Los bytes 1 y 2 definen la velocidad del desplazamiento.
  16+ 9DA6              ;
  17+ 9DA6              ;                       (Byte1) ..... % (Vel_up),(Vel_down)
  18+ 9DA6              ;                               ..... %01000010 Vel_up 4
  19+ 9DA6              ;                                               Vel_down 2
  20+ 9DA6              ;                               ..... $42
  21+ 9DA6              ;
  22+ 9DA6              ;                       (Byte2) ..... % (Vel_left),(Vel_right)
  23+ 9DA6              ;
  24+ 9DA6              ;                               ..... %01000010 Vel_left 4
  25+ 9DA6              ;                                               Vel_right 2
  26+ 9DA6              ;                               ..... $42
  27+ 9DA6              ;
  28+ 9DA6              ;                       El 3er byte describe la dirección y repeticiones del desplazamiento.
  29+ 9DA6              ;
  30+ 9DA6              ;                       (Byte3) ..... Descripción del desplazamiento.
  31+ 9DA6              ;
  32+ 9DA6              ;                       % up,down,left,right, Repetición del desplazamiento, (1-15).
  33+ 9DA6              ;
  34+ 9DA6              ;                                     %01010011 ..... (Abajo-derecha), 3 veces.
  35+ 9DA6              ;                                     $53
  36+ 9DA6              ;
  37+ 9DA6              ;                       Nota: (Repetimos_desplazamiento) nunca será "0".
  38+ 9DA6              ;
  39+ 9DA6              ;                       Esta tabla nos ayudará a codificar rápido los desplazamientos del mov.
  40+ 9DA6              ;                       Supongamos que solo ejecutamos 1 vez, cada desplazamiento:
  41+ 9DA6              ;
  42+ 9DA6              ;                       Arriba ..... $81
  43+ 9DA6              ;                       Arriba - izquierda ..... $a1
  44+ 9DA6              ;                       Arriba - derecha ..... $91
  45+ 9DA6              ;
  46+ 9DA6              ;                       Abajo ..... $41
  47+ 9DA6              ;                       Abajo - izquierda ..... $61
  48+ 9DA6              ;                       Abajo - derecha ..... $51
  49+ 9DA6              ;
  50+ 9DA6              ;   (Cola_de_desplazamiento) db 0			; Este byte indica:
  51+ 9DA6              ;
  52+ 9DA6              ;											;	"$00" , "0" ..... Hemos finalizado la cadena de movimiento.
  53+ 9DA6              ;											;				En este caso hemos de incrementar (Puntero_indice_mov)_
  54+ 9DA6              ;											;				_ y pasar a la siguiente cadena de movimiento del índice.
  55+ 9DA6              ;
  56+ 9DA6              ;											;	"$fd" , "1-253" ..... Repetición del MOVIMIENTO.
  57+ 9DA6              ;											;						         Nº de veces que vamos a repetir el movimiento completo.
  58+ 9DA6              ;											;					             En este caso, volveremos a inicializar (Puntero_mov),_
  59+ 9DA6              ;							    			;						         _ con (Puntero_indice_mov) y decrementaremos (Cola_de_desplazamiento).
  60+ 9DA6              ;
  61+ 9DA6              ;											;	"$ff"  , "255" ..... Bucle infinito de repetición del último MOVIMIENTO.
  62+ 9DA6              ;											;				         Nunca vamos a saltar a la siguiente cadena de movimiento del índice,_
  63+ 9DA6              ;											;				         _ (si es que la hay). Volvemos a inicializar (Puntero_mov) con (Puntero_indice_mov).
  64+ 9DA6              ;
  65+ 9DA6              ;                                           ;   "$fe" ..... Activamos el bucle principal del patrón de movimiento. La direccíon de memoria_
  66+ 9DA6              ;                                           ;               _ del siguiente MOVIMIENTO del índice se almacenará en la variable (Puntero_indice_mov_bucle).
  67+ 9DA6              ;                                           ;               La subrutina [Inicializa_Puntero_indice_mov] inicializará (Puntero_indice_mov) con_
  68+ 9DA6              ;                                           ;               _ esta dirección y no se situará al comienzo del índice del patrón de movimiento.
  69+ 9DA6
  70+ 9DA6              ; ----- ----- ----- ----- -----
  71+ 9DA6
  72+ 9DA6 D2 9D        Indice_mov_Baile_de_BadSat defw Bajo_decelerando
  73+ 9DA8 DA 9D            defw F_1
  74+ 9DAA E4 9D            defw F_2
  75+ 9DAC EE 9D            defw Codo_abajo_derecha
  76+ 9DAE 22 9E            defw Derecha_y_subiendo
  77+ 9DB0 2C 9E            defw Derecha_y_subiendo_1
  78+ 9DB2 36 9E            defw F_3
  79+ 9DB4 40 9E            defw F_4
  80+ 9DB6 4A 9E            defw Derecha_y_bajando
  81+ 9DB8 54 9E            defw Derecha_y_bajando_1
  82+ 9DBA 5E 9E            defw Derecha_y_bajando_2
  83+ 9DBC 68 9E            defw Codo_derecha_abajo
  84+ 9DBE 98 9E            defw Codo_abajo_izq.
  85+ 9DC0 CC 9E            defw Izquierda_y_subiendo
  86+ 9DC2 D6 9E            defw Izquierda_y_subiendo_1
  87+ 9DC4 E0 9E            defw F_5
  88+ 9DC6 EA 9E            defw F_6
  89+ 9DC8 F4 9E            defw Izquierda_y_bajando
  90+ 9DCA FE 9E            defw Izquierda_y_bajando_1
  91+ 9DCC 08 9F            defw Izquierda_y_bajando_2
  92+ 9DCE 12 9F            defw Codo_izquierda_abajo
  93+ 9DD0 00 00            defw 0                                  ; Fin de patrón de movimiento.
  94+ 9DD2
  95+ 9DD2 12 11 4F 01  Bajo_decelerando db $12,$11,$4f,1           ; Abajo. 15rep. vel.2
  96+ 9DD6 11 11 42 00      db $11,$11,$42,0                        ; Abajo.  2rep. --- Termina movimiento.
  97+ 9DDA
  98+ 9DDA 11 11 41 01  F_1 db $11,$11,$41,1
  99+ 9DDE 11 11 01 FD      db $11,$11,$01,253,8,0                  ; Abajo - Pausa1. 8rep.
  99+ 9DE2 08 00
 100+ 9DE4 11 11 41 01  F_2 db $11,$11,$41,1
 101+ 9DE8 11 11 02 FD      db $11,$11,$02,253,15,254               ; Abajo - Pausa2. 15rep --- Fija puntero de bucle. (Voy por aquí 23/7/23).
 101+ 9DEC 0F FE
 102+ 9DEE
 103+ 9DEE 11 11 51 01  Codo_abajo_derecha db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 104+ 9DF2 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 105+ 9DF6 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 106+ 9DFA 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 107+ 9DFE 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 108+ 9E02 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.s
 109+ 9E06 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 110+ 9E0A 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 111+ 9E0E 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 112+ 9E12 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 113+ 9E16 11 11 91 01      db $11,$11,$91,1                        ; Arriba/Derecha. 1rep.
 114+ 9E1A 11 12 12 01      db $11,$12,$12,1                        ; Derecha. 2rep. vel.2
 115+ 9E1E 11 11 92 00      db $11,$11,$92,0                        ; Arriba/Derecha. 2rep. --- Termina movimiento.
 116+ 9E22
 117+ 9E22 11 12 13 01  Derecha_y_subiendo db $11,$12,$13,1         ; Derecha. 4rep. vel.2
 118+ 9E26 11 11 91 FD      db $11,$11,$91,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 118+ 9E2A 06 00
 119+ 9E2C
 120+ 9E2C 11 11 16 01  Derecha_y_subiendo_1 db $11,$11,$16,1       ; Derecha. 4rep. vel.2
 121+ 9E30 11 11 91 FD      db $11,$11,$91,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 121+ 9E34 02 00
 122+ 9E36
 123+ 9E36 11 11 11 01  F_3 db $11,$11,$11,1
 124+ 9E3A 11 11 01 FD      db $11,$11,$01,253,4,0
 124+ 9E3E 04 00
 125+ 9E40 11 11 11 01  F_4 db $11,$11,$11,1
 126+ 9E44 11 11 02 FD      db $11,$11,$02,253,8,0
 126+ 9E48 08 00
 127+ 9E4A
 128+ 9E4A 11 11 16 01  Derecha_y_bajando db $11,$11,$16,1          ; Derecha. 4rep. vel.2
 129+ 9E4E 11 11 51 FD      db $11,$11,$51,253,2,0
 129+ 9E52 02 00
 130+ 9E54
 131+ 9E54 11 12 13 01  Derecha_y_bajando_1 db $11,$12,$13,1        ; Derecha. 4rep. vel.2
 132+ 9E58 11 11 51 FD      db $11,$11,$51,253,6,0
 132+ 9E5C 06 00
 133+ 9E5E
 134+ 9E5E 11 11 16 01  Derecha_y_bajando_2 db $11,$11,$16,1        ; Derecha. 4rep. vel.2
 135+ 9E62 11 11 51 FD      db $11,$11,$51,253,6,0
 135+ 9E66 06 00
 136+ 9E68
 137+ 9E68              ; Medio círculo bajando. Entra de izq. a derecha y sale de derecha a izq.
 138+ 9E68
 139+ 9E68 11 11 51 01  Codo_derecha_abajo db $11,$11,$51,1         ; Abajo/Derecha. 1rep.
 140+ 9E6C 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 141+ 9E70 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 142+ 9E74 11 11 13 01      db $11,$11,$13,1                        ; Derecha. 3rep.
 143+ 9E78 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 144+ 9E7C 11 11 11 01      db $11,$11,$11,1                        ; Derecha. 1rep.
 145+ 9E80 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 146+ 9E84 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 147+ 9E88 11 11 52 01      db $11,$11,$52,1                        ; Abajo/Derecha. 2rep.
 148+ 9E8C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 149+ 9E90 11 11 51 01      db $11,$11,$51,1                        ; Abajo/Derecha. 1rep.
 150+ 9E94 11 11 43 00      db $11,$11,$43,0                        ; Abajo. 3rep.
 151+ 9E98
 152+ 9E98 11 11 61 01  Codo_abajo_izq. db $11,$11,$61,1            ; Abajo/izq. 1rep.
 153+ 9E9C 11 11 43 01      db $11,$11,$43,1                        ; Abajo. 3rep.
 154+ 9EA0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 155+ 9EA4 11 11 41 01      db $11,$11,$41,1                        ; Abajo. 1rep.
 156+ 9EA8 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 157+ 9EAC 11 11 21 01      db $11,$11,$21,1                        ; izq. 1rep.
 158+ 9EB0 11 11 62 01      db $11,$11,$62,1                        ; Abajo/izq. 2rep.
 159+ 9EB4 11 11 23 01      db $11,$11,$23,1                        ; izq. 3rep.
 160+ 9EB8 11 11 61 01      db $11,$11,$61,1                        ; Abajo/izq. 1rep.
 161+ 9EBC 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 162+ 9EC0 11 11 A1 01      db $11,$11,$a1,1                        ; Arriba/izq. 1rep.
 163+ 9EC4 11 21 22 01      db $11,$21,$22,1                        ; izq. 2rep. vel.2
 164+ 9EC8 11 11 A2 00      db $11,$11,$a2,0                        ; Arriba/izq. 2rep. --- Termina movimiento.
 165+ 9ECC
 166+ 9ECC 11 21 23 01  Izquierda_y_subiendo db $11,$21,$23,1       ; Derecha. 4rep. vel.2
 167+ 9ED0 11 11 A1 FD      db $11,$11,$a1,253,6,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 167+ 9ED4 06 00
 168+ 9ED6
 169+ 9ED6 11 11 26 01  Izquierda_y_subiendo_1 db $11,$11,$26,1     ; Derecha. 4rep. vel.2
 170+ 9EDA 11 11 A1 FD      db $11,$11,$a1,253,2,0                  ; Arriba/Derecha. 1rep. --- Repite Mov 12rep. --- Termina movimiento.
 170+ 9EDE 02 00
 171+ 9EE0
 172+ 9EE0 11 11 21 01  F_5 db $11,$11,$21,1
 173+ 9EE4 11 11 01 FD      db $11,$11,$01,253,4,0
 173+ 9EE8 04 00
 174+ 9EEA 11 11 21 01  F_6 db $11,$11,$21,1
 175+ 9EEE 11 11 02 FD      db $11,$11,$02,253,8,0
 175+ 9EF2 08 00
 176+ 9EF4
 177+ 9EF4 11 11 26 01  Izquierda_y_bajando db $11,$11,$26,1          ; Derecha. 4rep. vel.2
 178+ 9EF8 11 11 61 FD      db $11,$11,$61,253,2,0
 178+ 9EFC 02 00
 179+ 9EFE
 180+ 9EFE 11 21 23 01  Izquierda_y_bajando_1 db $11,$21,$23,1        ; Derecha. 4rep. vel.2
 181+ 9F02 11 11 61 FD      db $11,$11,$61,253,6,0
 181+ 9F06 06 00
 182+ 9F08
 183+ 9F08 11 11 26 01  Izquierda_y_bajando_2 db $11,$11,$26,1        ; Derecha. 4rep. vel.2
 184+ 9F0C 11 11 61 FD      db $11,$11,$61,253,6,0
 184+ 9F10 06 00
 185+ 9F12
 186+ 9F12 11 11 A1 01  Codo_izquierda_abajo db $11,$11,$a1,1          ; Arriba/Izq. 1rep.
 187+ 9F16 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 188+ 9F1A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 189+ 9F1E 11 11 23 01      db $11,$11,$23,1                           ; Izq. 3rep.
 190+ 9F22 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 191+ 9F26 11 11 21 01      db $11,$11,$21,1                           ; Izq. 1rep.
 192+ 9F2A 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 193+ 9F2E 11 11 41 01      db $11,$11,$41,1                           ; Abajo. 1rep.
 194+ 9F32 11 11 62 01      db $11,$11,$62,1                           ; Abajo/Izq. 2rep.
 195+ 9F36 11 11 43 01      db $11,$11,$43,1                           ; Abajo. 3rep.
 196+ 9F3A 11 11 61 01      db $11,$11,$61,1                           ; Abajo/Izq. 1rep.
 197+ 9F3E 11 11 43 00      db $11,$11,$43,0                           ; Abajo. 3rep.
 198+ 9F42
 199+ 9F42              ; ----- ----- ----- ----- -----
 200+ 9F42              ;
 201+ 9F42              ;   27/06/23
 202+ 9F42
 203+ 9F42              Movimiento
 204+ 9F42
 205+ 9F42              ; Nota: Previamente, la rutina [DRAW], ha iniciado la entidad, (Puntero_mov) ya apunta a su cadena de movimiento correspondiente.
 206+ 9F42
 207+ 9F42              ;    ld hl,(Posicion_actual)
 208+ 9F42
 209+ 9F42 FB               ei
 210+ 9F43
 211+ 9F43 3A 02 89         ld a,(Ctrl_2)
 212+ 9F46 CB 57            bit 2,a
 213+ 9F48 20 1B            jr nz, Desplazamiento_iniciado
 214+ 9F4A
 215+ 9F4A 2A F4 88         ld hl,(Puntero_mov)
 216+ 9F4D 7E               ld a,(hl)
 217+ 9F4E
 218+ 9F4E              ; HL contiene (Puntero_mov) y este se encuentra en el 1er byte de la cadena de movimiento, (Byte1) ..... % (Vel_up),(Vel_down).
 219+ 9F4E
 220+ 9F4E              Inicia_desplazamiento.
 221+ 9F4E
 222+ 9F4E              ; Preparamos (Incrementa_puntero). Cada vez que iniciemos un nuevo movimiento le sumaremos 2 uds.
 223+ 9F4E
 224+ 9F4E CD 43 A0         call Ajusta_velocidad_desplazamiento
 225+ 9F51
 226+ 9F51              ; Iniciamos (Repetimos_mov).
 227+ 9F51
 228+ 9F51 7E               ld a,(hl)
 229+ 9F52 E6 0F            and $0f
 230+ 9F54 32 FA 88         ld (Repetimos_desplazamiento),a
 231+ 9F57 32 FB 88         ld (Repetimos_desplazamiento_backup),a
 232+ 9F5A
 233+ 9F5A              ; Iniciamos (Cola_de_desplazamiento).
 234+ 9F5A
 235+ 9F5A 23               inc hl
 236+ 9F5B 7E               ld a,(hl)
 237+ 9F5C 32 FD 88         ld (Cola_de_desplazamiento),a
 238+ 9F5F 2B               dec hl
 239+ 9F60
 240+ 9F60 21 02 89         ld hl,Ctrl_2
 241+ 9F63 CB D6            set 2,(hl)
 242+ 9F65
 243+ 9F65              ; Hemos ajustado la velocidad del desplazamiento con los 2 primeros bytes del desplazamiento.
 244+ 9F65              ; El 3er byte indica la dirección del desplz., (nibble alto) y las veces que lo ejecutamos, (nibble bajo).
 245+ 9F65
 246+ 9F65              Desplazamiento_iniciado
 247+ 9F65
 248+ 9F65 CD 17 A0         call Aplica_desplazamiento
 249+ 9F68
 250+ 9F68 3A 02 89         ld a,(Ctrl_2)
 251+ 9F6B CB 67            bit 4,a
 252+ 9F6D C0               ret nz                              ; Salimos si se ha producido reinicio.
 253+ 9F6E
 254+ 9F6E 21 FA 88     3 ld hl,Repetimos_desplazamiento
 255+ 9F71 35               dec (hl)
 256+ 9F72 C0               ret nz
 257+ 9F73
 258+ 9F73              ; Hemos terminado de ejecutar el desplazamiento y sus ($0-$f repeticiones).
 259+ 9F73              ; Hay que volver a ejecutar este desplazamiento ???.
 260+ 9F73              ; Analiza (Cola_de_desplazamiento).
 261+ 9F73
 262+ 9F73 3A FD 88     Cola ld a,(Cola_de_desplazamiento)
 263+ 9F76 A7               and a
 264+ 9F77 CC 6C A0         call z,Incrementa_Puntero_indice_mov                        ; Fin de la cadena de MOVIMIENTO ???.
 265+ 9F7A 28 30            jr z,Reinicia_el_movimiento
 266+ 9F7C
 267+ 9F7C FE FF            cp $ff
 268+ 9F7E 28 2C            jr z,Reinicia_el_movimiento                                 ; Bucle infinito del MOVIMIENTO?.
 269+ 9F80
 270+ 9F80 FE FE            cp $fe
 271+ 9F82 CC F0 9F         call z,Fijamos_bucle
 272+ 9F85 28 25            jr z,Reinicia_el_movimiento
 273+ 9F87
 274+ 9F87 FE FD            cp $fd
 275+ 9F89 20 11            jr nz,1F
 276+ 9F8B
 277+ 9F8B              ; ---
 278+ 9F8B              ; Ya estamos ejecutando una repetición del último MOVIMIENTO ???.
 279+ 9F8B
 280+ 9F8B 3A 02 89         ld a,(Ctrl_2)
 281+ 9F8E CB 5F            bit 3,a
 282+ 9F90 20 1A            jr nz,Reinicia_el_movimiento
 283+ 9F92
 284+ 9F92              ; Si no es así, iniciamos la REPETICIÓN del movimiento activando el BIT 3 de Ctrl_2.
 285+ 9F92
 286+ 9F92 21 02 89         ld hl,Ctrl_2                                                ; Vamos a indicar con este BIT a la rutina [Reinicia_el_movimiento],_
 287+ 9F95 CB DE            set 3,(hl)                                                  ; _ que (Cola_de_desplazamiento)="$fe", por lo que vamos a REINICIAR el_
 288+ 9F97
 289+ 9F97 CD 01 A0         call Inicia_Repetimos_movimiento
 290+ 9F9A 28 10            jr z,Reinicia_el_movimiento                                 ; _ MOVIMIENTO (X nº de veces), siendo X un valor comprendido entre (1-255).
 291+ 9F9C              ; ---
 292+ 9F9C
 293+ 9F9C FE 01        1 cp 1
 294+ 9F9E CA DA 9F         jp z,Siguiente_desplazamiento                               ; Pasamos al siguiente desplazamiento del movimiento?.
 295+ 9FA1
 296+ 9FA1 3D               dec a
 297+ 9FA2 32 FD 88         ld (Cola_de_desplazamiento),a
 298+ 9FA5
 299+ 9FA5 3A FB 88         ld a,(Repetimos_desplazamiento_backup)                      ; Cuando (Cola_de_desplazamiento) actúa como contador del_
 300+ 9FA8 32 FA 88         ld (Repetimos_desplazamiento),a                             ; _ desplazamiento y este no ha llegado a "0", decrementamos_
 301+ 9FAB              ;                                                               ; _ el contador y RESTAURAMOS (Repetimos_desplazamiento).
 302+ 9FAB C9               ret
 303+ 9FAC
 304+ 9FAC              Reinicia_el_movimiento
 305+ 9FAC
 306+ 9FAC F3               di
 307+ 9FAD
 308+ 9FAD 3A 02 89         ld a,(Ctrl_2)
 309+ 9FB0 CB 5F            bit 3,a
 310+ 9FB2 28 1B            jr z,2F
 311+ 9FB4
 312+ 9FB4              ; (Cola_de_desplazamiento)="254".
 313+ 9FB4
 314+ 9FB4 21 FC 88         ld hl,Repetimos_movimiento                                  ; Decrementamos (Repetimos_movimiento) hasta completar repeticiones.
 315+ 9FB7 35               dec (hl)
 316+ 9FB8 20 15            jr nz,2F
 317+ 9FBA
 318+ 9FBA              ; Fin de las repeticiones del último movimiento.
 319+ 9FBA
 320+ 9FBA 21 02 89         ld hl,Ctrl_2
 321+ 9FBD CB 9E            res 3,(hl)                                                  ; Decrementamos el BIT de repeticiones de movimiento.
 322+ 9FBF
 323+ 9FBF 2A F4 88         ld hl,(Puntero_mov)
 324+ 9FC2 23               inc hl
 325+ 9FC3 23               inc hl
 326+ 9FC4 23               inc hl
 327+ 9FC5 22 F4 88         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en (Cola_de_desplazamiento) y saltamos a `Cola'_
 328+ 9FC8              ;                                                               ; _ para ejecutar su mandato. :)
 329+ 9FC8 7E               ld a,(hl)
 330+ 9FC9 32 FD 88         ld (Cola_de_desplazamiento),a
 331+ 9FCC
 332+ 9FCC C3 73 9F         jp Cola
 333+ 9FCF
 334+ 9FCF CD 0C A0     2 call Inicia_Puntero_mov
 335+ 9FD2
 336+ 9FD2 21 02 89         ld hl,Ctrl_2
 337+ 9FD5 CB 96            res 2,(hl)
 338+ 9FD7
 339+ 9FD7 C3 42 9F         jp Movimiento
 340+ 9FDA
 341+ 9FDA              Siguiente_desplazamiento
 342+ 9FDA
 343+ 9FDA              ;   Situamos (Puntero_mov) en el siguiente desplazamiento del movimiento.
 344+ 9FDA              ;   Indicamos que hay que iniciar un nuevo desplazamiento.
 345+ 9FDA
 346+ 9FDA 21 02 89         ld hl,Ctrl_2
 347+ 9FDD CB 96            res 2,(hl)
 348+ 9FDF
 349+ 9FDF 2A F4 88         ld hl,(Puntero_mov)
 350+ 9FE2 23               inc hl
 351+ 9FE3 23               inc hl
 352+ 9FE4 22 F4 88         ld (Puntero_mov),hl
 353+ 9FE7
 354+ 9FE7 7E               ld a,(hl)
 355+ 9FE8 A7               and a
 356+ 9FE9 CC 6C A0         call z,Incrementa_Puntero_indice_mov
 357+ 9FEC CA AC 9F         jp z,Reinicia_el_movimiento
 358+ 9FEF
 359+ 9FEF C9               ret
 360+ 9FF0              ; Subrutinas -----------------------------------------
 361+ 9FF0              ; ---------- --------- --------- ---------- ----------
 362+ 9FF0              ;
 363+ 9FF0              ;   24/07/23
 364+ 9FF0              ;
 365+ 9FF0              ;   Fijamos_bucle
 366+ 9FF0              ;
 367+ 9FF0              ;
 368+ 9FF0
 369+ 9FF0              Fijamos_bucle
 370+ 9FF0
 371+ 9FF0 3A F8 88         ld a,(Incrementa_puntero)
 372+ 9FF3 3C               inc a
 373+ 9FF4 32 F9 88         ld (Incrementa_puntero_backup),a
 374+ 9FF7
 375+ 9FF7 CD 6C A0         call Incrementa_Puntero_indice_mov
 376+ 9FFA 2A F2 88         ld hl,(Puntero_indice_mov)
 377+ 9FFD 22 F6 88         ld (Puntero_indice_mov_bucle),hl
 378+ A000 C9               ret
 379+ A001
 380+ A001              ; ---------- --------- --------- ---------- ----------
 381+ A001              ;
 382+ A001              ;   07/7/23
 383+ A001              ;
 384+ A001              ;   Inicia_Repetimos_movimiento
 385+ A001              ;
 386+ A001              ;
 387+ A001
 388+ A001              Inicia_Repetimos_movimiento
 389+ A001
 390+ A001              ; Iniciamos (Repetimos_movimiento).
 391+ A001
 392+ A001 DD 2A F4 88      ld ix,(Puntero_mov)
 393+ A005 DD 7E 02         ld a,(ix+2)
 394+ A008 32 FC 88         ld (Repetimos_movimiento),a
 395+ A00B
 396+ A00B C9               ret
 397+ A00C
 398+ A00C              ; ---------- --------- --------- ---------- ----------
 399+ A00C              ;
 400+ A00C              ;   26/6/23
 401+ A00C              ;
 402+ A00C              ;   Inicia_Puntero_mov
 403+ A00C              ;
 404+ A00C              ;
 405+ A00C
 406+ A00C 2A F2 88     Inicia_Puntero_mov ld hl,(Puntero_indice_mov)
 407+ A00F 5E               ld e,(hl)
 408+ A010 23               inc hl
 409+ A011 56               ld d,(hl)
 410+ A012 EB               ex de,hl
 411+ A013 22 F4 88         ld (Puntero_mov),hl
 412+ A016 C9               ret
 413+ A017
 414+ A017              ; ---------- --------- --------- ---------- ----------
 415+ A017              ;
 416+ A017              ;   27/06/23
 417+ A017              ;
 418+ A017              ;   Aplica_movimiento.
 419+ A017
 420+ A017              Aplica_desplazamiento
 421+ A017
 422+ A017              ; Analizamos (bit a bit) el nibble alto del 3er byte que compone el desplazamiento y ejecutamos.
 423+ A017
 424+ A017 2A F4 88         ld hl, (Puntero_mov)
 425+ A01A
 426+ A01A 7E               ld a,(hl)
 427+ A01B E6 F0            and $f0
 428+ A01D C8               ret z                       ; Salimos de la rutina si no hay desplazamiento.
 429+ A01E
 430+ A01E CB 7E            bit 7,(hl)
 431+ A020 28 03            jr z,1F
 432+ A022 CD 40 9A         call Mov_up
 433+ A025 2A F4 88     1 ld hl, (Puntero_mov)
 434+ A028 CB 76            bit 6,(hl)
 435+ A02A 28 03            jr z,2F
 436+ A02C CD 0F 9A         call Mov_down
 437+ A02F 2A F4 88     2 ld hl, (Puntero_mov)
 438+ A032 CB 6E            bit 5,(hl)
 439+ A034 28 03            jr z,3F
 440+ A036 CD A1 9B         call Mov_left
 441+ A039 2A F4 88     3 ld hl, (Puntero_mov)
 442+ A03C CB 66            bit 4,(hl)
 443+ A03E C8               ret z
 444+ A03F CD 83 9A         call Mov_right
 445+ A042 C9               ret
 446+ A043
 447+ A043              ; ---------- --------- --------- ---------- ----------
 448+ A043              ;
 449+ A043              ;   26/06/23
 450+ A043              ;
 451+ A043              ;   Ajusta_velocidad_desplazamiento.
 452+ A043
 453+ A043              Ajusta_velocidad_desplazamiento
 454+ A043
 455+ A043              ; 1er byte de la cadena de movimiento.
 456+ A043              ; Indica (Vel_up), (nibble alto) y (Vel_down) el nibble bajo.
 457+ A043
 458+ A043 CD 61 A0         call Extrae_nibble_alto
 459+ A046
 460+ A046 32 DC 88         ld (Vel_up),a
 461+ A049 79               ld a,c
 462+ A04A E6 0F            and $0f
 463+ A04C 32 DD 88         ld (Vel_down),a
 464+ A04F
 465+ A04F              ; Saltamos al 2º byte de la cadena de movimiento.
 466+ A04F              ; Indica (Vel_left), (nibble alto) y (Vel_right) el nibble bajo.
 467+ A04F
 468+ A04F 23               inc hl
 469+ A050 CD 61 A0         call Extrae_nibble_alto
 470+ A053
 471+ A053 32 DA 88         ld (Vel_left),a
 472+ A056 79               ld a,c
 473+ A057 E6 0F            and $0f
 474+ A059 32 DB 88         ld (Vel_right),a
 475+ A05C
 476+ A05C              ; Nos situamos en el 3er byte del desplazamiento. Actualizamos (Puntero_mov).
 477+ A05C
 478+ A05C 23               inc hl
 479+ A05D 22 F4 88         ld (Puntero_mov),hl
 480+ A060 C9               ret
 481+ A061
 482+ A061 06 04        Extrae_nibble_alto ld b,4
 483+ A063 7E               ld a,(hl)
 484+ A064 4F               ld c,a
 485+ A065 E6 F0            and $f0
 486+ A067 CB 3F        1 srl a
 487+ A069 10 FC            djnz 1B
 488+ A06B C9               ret
 489+ A06C
 490+ A06C              ; ---------- --------- --------- ---------- ----------
 491+ A06C              ;
 492+ A06C              ;   5/7/23
 493+ A06C              ;
 494+ A06C              ;   Incrementa_Puntero_indice_mov
 495+ A06C
 496+ A06C              Incrementa_Puntero_indice_mov
 497+ A06C
 498+ A06C 21 F8 88         ld hl,Incrementa_puntero
 499+ A06F 34               inc (hl)
 500+ A070
 501+ A070 2A F2 88         ld hl,(Puntero_indice_mov)
 502+ A073 01 02 00         ld bc,2
 503+ A076 A7               and a
 504+ A077 09               add hl,bc
 505+ A078 22 F2 88         ld (Puntero_indice_mov),hl
 506+ A07B
 507+ A07B 7E               ld a,(hl)
 508+ A07C A7               and a
 509+ A07D
 510+ A07D              ;! STOP. Fin del patrón de movimiento de la entidad.
 511+ A07D
 512+ A07D              ;    jr z,$
 513+ A07D
 514+ A07D              ;! Reinicia el Patrón de movimiento.
 515+ A07D
 516+ A07D CC 82 A0         call z,Inicializa_Puntero_indice_mov
 517+ A080
 518+ A080 AF               xor a                                   ; Siempre salimos de la rutina con el flag "Z" activo.
 519+ A081
 520+ A081 C9               ret
 521+ A082
 522+ A082
 523+ A082              ; ---------- --------- --------- ---------- ----------
 524+ A082              ;
 525+ A082              ;   24/07/23
 526+ A082              ;
 527+ A082              ;   Inicializa_Puntero_indice_mov
 528+ A082
 529+ A082              Inicializa_Puntero_indice_mov
 530+ A082
 531+ A082              ; Existe etiqueta de bucle principal???
 532+ A082
 533+ A082 2A F6 88         ld hl,(Puntero_indice_mov_bucle)
 534+ A085 24               inc h
 535+ A086 25               dec h
 536+ A087 28 05            jr z,2F
 537+ A089
 538+ A089 22 F2 88         ld (Puntero_indice_mov),hl
 539+ A08C 18 14            jr 3F
 540+ A08E
 541+ A08E              ; Inicializamos (Puntero_indice_mov) con la 1ª dirección del índice del patrón de movimiento.
 542+ A08E
 543+ A08E 3A F8 88     2 ld a,(Incrementa_puntero)
 544+ A091 47               ld b,a
 545+ A092
 546+ A092 2A F2 88         ld hl,(Puntero_indice_mov)
 547+ A095 2B           1 dec hl
 548+ A096 2B               dec hl
 549+ A097 10 FC            djnz 1B
 550+ A099 22 F2 88         ld (Puntero_indice_mov),hl
 551+ A09C
 552+ A09C AF               xor a
 553+ A09D 32 F8 88         ld (Incrementa_puntero),a
 554+ A0A0 18 06            jr 4F
 555+ A0A2
 556+ A0A2 3A F9 88     3 ld a,(Incrementa_puntero_backup)
 557+ A0A5 32 F8 88         ld (Incrementa_puntero),a
 558+ A0A8 C9           4 ret
 559+ A0A9
 560+ A0A9
 561+ A0A9
# file closed: Patrones_de_mov.asm
1682  A0A9              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
   1+ A0A9              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
   2+ A0A9              ;
   3+ A0A9              ;	4/9/23
   4+ A0A9              ;
   5+ A0A9              ;	Instrucciones donde interviene el Stack Pointer, (SP).
   6+ A0A9
   7+ A0A9              ;	ADC HL,SP	LD (addr),SP
   8+ A0A9              ;	ADD HL,SP	LD SP,(addr)
   9+ A0A9              ;	ADD IX,SP	LD SP,nn
  10+ A0A9              ; 	ADD IY,SP	LD SP,HL
  11+ A0A9              ;				LD SP,IX
  12+ A0A9              ;	DEC SP		LD SP,IY
  13+ A0A9
  14+ A0A9              ;	EX (SP),HL
  15+ A0A9              ;	EX (SP),IX
  16+ A0A9              ;	EX (SP),IY
  17+ A0A9
  18+ A0A9              ;	INC SP
  19+ A0A9
  20+ A0A9                  org $7fa0
  21+ 7FA0
  22+ 7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
  23+ 7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
  24+ 7FA0              ;
  25+ 7FA0              ;   $7000 / 01 ..... Puntero objeto.
  26+ 7FA0              ;   $7002 / 03 ..... Puntero de impresion.
  27+ 7FA0              ;   $7004 / 05 ..... Rutina de impresión.
  28+ 7FA0
  29+ 7FA0              Guarda_foto_registros
  30+ 7FA0
  31+ 7FA0 F3               di
  32+ 7FA1
  33+ 7FA1 ED 73 15 89      ld (Stack),sp                                 ; Guardo SP en (Stack).
  34+ 7FA5 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
  35+ 7FA8
  36+ 7FA8 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
  37+ 7FA9 DD E5            push ix                                       ; IX contiene el puntero de impresión.
  38+ 7FAB FD E5            push iy                                       ; IY contiene (Puntero_objeto).
  39+ 7FAD
  40+ 7FAD 3A 04 89         ld a,(Ctrl_1)
  41+ 7FB0 CB 47            bit 0,a
  42+ 7FB2 28 05            jr z,2F
  43+ 7FB4
  44+ 7FB4 2A 1D 89         ld hl,(Stack_snapshot_disparos)
  45+ 7FB7 18 0F            jr 4F
  46+ 7FB9
  47+ 7FB9              ; No es disparo. Entidad/Amadeus ????
  48+ 7FB9
  49+ 7FB9 3A EF 88     2 ld a,(Ctrl_0)
  50+ 7FBC CB 77            bit 6,a
  51+ 7FBE 28 05            jr z,7F
  52+ 7FC0
  53+ 7FC0              ; Guardamos foto de Amadeus.
  54+ 7FC0
  55+ 7FC0 2A 23 89         ld hl,(End_Snapshot_Amadeus)
  56+ 7FC3 18 03            jr 4F
  57+ 7FC5
  58+ 7FC5 2A 1B 89     7 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
  59+ 7FC8
  60+ 7FC8 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
  61+ 7FCA
  62+ 7FCA D1           1 pop de
  63+ 7FCB 73               ld (hl),e
  64+ 7FCC 23               inc hl
  65+ 7FCD 72               ld (hl),d
  66+ 7FCE 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
  67+ 7FCF 10 F9            djnz 1B
  68+ 7FD1
  69+ 7FD1 3A 04 89         ld a,(Ctrl_1)
  70+ 7FD4 CB 47            bit 0,a
  71+ 7FD6 28 05            jr z,5F
  72+ 7FD8
  73+ 7FD8 22 1D 89         ld (Stack_snapshot_disparos),hl
  74+ 7FDB 18 13            jr 6F
  75+ 7FDD
  76+ 7FDD 3A EF 88     5 ld a,(Ctrl_0)
  77+ 7FE0 CB 77            bit 6,a
  78+ 7FE2 28 09            jr z,8F
  79+ 7FE4
  80+ 7FE4 22 23 89         ld (End_Snapshot_Amadeus),hl
  81+ 7FE7 ED 7B 15 89      ld sp,(Stack)
  82+ 7FEB FB               ei
  83+ 7FEC C9               ret
  84+ 7FED
  85+ 7FED 22 1B 89     8 ld (Stack_snapshot),hl
  86+ 7FF0 ED 7B 15 89  6 ld sp,(Stack)
  87+ 7FF4
  88+ 7FF4              ; Aquí tengo que copiar (Stack_snapshot) en la dirección hacia donde apunta (Puntero_de_End_Snapshot).
  89+ 7FF4
  90+ 7FF4 5D               ld e,l
  91+ 7FF5 54               ld d,h                                        ; DE contiene la dirección donde terminan los datos de este álbum.
  92+ 7FF6
  93+ 7FF6 2A 39 89         ld hl,(Puntero_de_End_Snapshot)               ; Guardamos la dirección de `fin de álbum', en la dirección que_
  94+ 7FF9 73               ld (hl),e                                     ; _ contiene (Puntero_de_End_Snapshot). Esta dirección la utilizará la_
  95+ 7FFA 23               inc hl                                        ; _ rutina [Gestiona_albumes_de_fotos] para copiar los datos de un_
  96+ 7FFB 72               ld (hl),d                                     ; _ álbum a otro.
  97+ 7FFC
  98+ 7FFC FB               ei
  99+ 7FFD C9               ret
 100+ 7FFE
 101+ 7FFE              ; ------------------------------------------------
 102+ 7FFE              ;
 103+ 7FFE              ;   3/08/23
 104+ 7FFE              ;
 105+ 7FFE              ;   La rutina estará situada justo después de:
 106+ 7FFE              ;   Album_de_fotos_Amadeus equ $72a0 ; (72a0h - 72abh) ; 12 bytes.
 107+ 7FFE              ;
 108+ 7FFE              ;   Limpia Album_de_fotos después de imprimir pantalla y desplaza el buffer una posición.
 109+ 7FFE              ;   Si el buffer estaba lleno, dejará libre Album_de_fotos_3.
 110+ 7FFE
 111+ 7FFE                  org $72ac
 112+ 72AC
 113+ 72AC              Gestiona_albumes_de_fotos
 114+ 72AC
 115+ 72AC              ;   En 1er lugar limpiamos el FRAME pintado.
 116+ 72AC              ;   Vaciamos Album_de_fotos.
 117+ 72AC
 118+ 72AC              ;   Album_de_fotos. Contiene datos ???
 119+ 72AC
 120+ 72AC 21 01 70         ld hl,Album_de_fotos+1
 121+ 72AF 7E               ld a,(hl)
 122+ 72B0 A7               and a
 123+ 72B1 28 14            jr z,3F                     ; Album_de_fotos está vacío. NO HAY QUE LIMPIARLO.
 124+ 72B3
 125+ 72B3 2A 1F 89         ld hl,(End_Snapshot)
 126+ 72B6 01 00 70         ld bc,Album_de_fotos
 127+ 72B9 11 01 70         ld de,Album_de_fotos+1
 128+ 72BC AF               xor a
 129+ 72BD 02               ld (bc),a                   ; "0" en el 1er byte de origen.
 130+ 72BE
 131+ 72BE CD 4E 73         call Limpia_album
 132+ 72C1
 133+ 72C1 21 00 00         ld hl,0
 134+ 72C4 22 1F 89         ld (End_Snapshot),hl        ; Limpia (End_Snapshot).
 135+ 72C7
 136+ 72C7              ; ----- ----- ----- -----
 137+ 72C7
 138+ 72C7              ;   Album_de_fotos_1. Contiene datos ???
 139+ 72C7
 140+ 72C7 21 55 70     3 ld hl,Album_de_fotos_1+1
 141+ 72CA 7E               ld a,(hl)
 142+ 72CB A7               and a
 143+ 72CC 28 26            jr z,1F                     ; Album_de_fotos y Album_de_fotos_1 están vacíos. Hay que volcar la_
 144+ 72CE              ;                               ; _ información del album2 al album1.
 145+ 72CE
 146+ 72CE              ; ----- ----- ----- -----
 147+ 72CE              ;   Volcamos los datos del Album_de_fotos_1 a Album_de_fotos.
 148+ 72CE
 149+ 72CE 2A 25 89         ld hl,(End_Snapshot_1)      ; Final, (origen).
 150+ 72D1 01 54 70         ld bc,Album_de_fotos_1      ; Origen.
 151+ 72D4 11 00 70         ld de,Album_de_fotos        ; Destino.
 152+ 72D7
 153+ 72D7 CD 4E 73         call Limpia_album
 154+ 72DA
 155+ 72DA              ;   Calculamos (End_Snapshot)
 156+ 72DA
 157+ 72DA A7               and a
 158+ 72DB ED 4A            adc hl,bc
 159+ 72DD 22 1F 89         ld (End_Snapshot),hl
 160+ 72E0
 161+ 72E0              ;   Limpiamos Album_de_fotos_1.
 162+ 72E0
 163+ 72E0 2A 25 89         ld hl,(End_Snapshot_1)
 164+ 72E3 01 54 70         ld bc,Album_de_fotos_1
 165+ 72E6 11 55 70         ld de,Album_de_fotos_1+1
 166+ 72E9 AF               xor a
 167+ 72EA 02               ld (bc),a
 168+ 72EB
 169+ 72EB CD 4E 73         call Limpia_album
 170+ 72EE
 171+ 72EE 21 00 00         ld hl,0
 172+ 72F1 22 25 89         ld (End_Snapshot_1),hl        ; Limpia (End_Snapshot_1).
 173+ 72F4
 174+ 72F4              ; ----- ----- ----- -----
 175+ 72F4
 176+ 72F4              ;   Album_de_fotos_2. Contiene datos ???
 177+ 72F4
 178+ 72F4 21 A9 70     1 ld hl,Album_de_fotos_2+1
 179+ 72F7 7E               ld a,(hl)
 180+ 72F8 A7               and a
 181+ 72F9 28 26            jr z,2F                     ; Album_de_fotos_2 y Album_de_fotos_1 están vacíos. Hay que volcar la_
 182+ 72FB              ;                               ; _ información del album3 al album2.
 183+ 72FB              ; ----- ----- ----- -----
 184+ 72FB              ;   Volcamos los datos del Album_de_fotos_2 a Album_de_fotos_1.
 185+ 72FB
 186+ 72FB 2A 29 89         ld hl,(End_Snapshot_2)      ; Final, (origen).
 187+ 72FE 01 A8 70         ld bc,Album_de_fotos_2      ; Origen.
 188+ 7301 11 54 70         ld de,Album_de_fotos_1      ; Destino.
 189+ 7304
 190+ 7304 CD 4E 73         call Limpia_album
 191+ 7307
 192+ 7307              ;   Calculamos (End_Snapshot_1):
 193+ 7307
 194+ 7307 A7               and a
 195+ 7308 ED 4A            adc hl,bc
 196+ 730A 22 25 89         ld (End_Snapshot_1),hl
 197+ 730D
 198+ 730D              ;   Limpiamos Album_de_fotos_2.
 199+ 730D
 200+ 730D 2A 29 89         ld hl,(End_Snapshot_2)
 201+ 7310 01 A8 70         ld bc,Album_de_fotos_2
 202+ 7313 11 A9 70         ld de,Album_de_fotos_2+1
 203+ 7316 AF               xor a
 204+ 7317 02               ld (bc),a
 205+ 7318
 206+ 7318 CD 4E 73         call Limpia_album
 207+ 731B
 208+ 731B 21 00 00         ld hl,0
 209+ 731E 22 29 89         ld (End_Snapshot_2),hl        ; Limpia (End_Snapshot_2).
 210+ 7321
 211+ 7321              ; ----- ----- ----- -----
 212+ 7321
 213+ 7321              ;   Album_de_fotos_3. Contiene datos ???
 214+ 7321
 215+ 7321 21 FD 70     2 ld hl,Album_de_fotos_3+1
 216+ 7324 7E               ld a,(hl)
 217+ 7325 A7               and a
 218+ 7326 C8               ret z                       ; Album_de_fotos_3 y Album_de_fotos_2 están vacíos. RET.
 219+ 7327
 220+ 7327              ; ----- ----- ----- -----
 221+ 7327              ;   Volcamos los datos del Album_de_fotos_3 a Album_de_fotos_2.
 222+ 7327
 223+ 7327 2A 2D 89         ld hl,(End_Snapshot_3)      ; Final, (origen).
 224+ 732A 01 FC 70         ld bc,Album_de_fotos_3      ; Origen.
 225+ 732D 11 A8 70         ld de,Album_de_fotos_2      ; Destino.
 226+ 7330
 227+ 7330 CD 4E 73         call Limpia_album
 228+ 7333
 229+ 7333              ;   Calculamos (End_Snapshot_2):
 230+ 7333
 231+ 7333 A7               and a
 232+ 7334 ED 4A            adc hl,bc
 233+ 7336 22 29 89         ld (End_Snapshot_2),hl
 234+ 7339
 235+ 7339              ;   Limpiamos Album_de_fotos_3.
 236+ 7339
 237+ 7339 2A 2D 89         ld hl,(End_Snapshot_3)
 238+ 733C 01 FC 70         ld bc,Album_de_fotos_3
 239+ 733F 11 FD 70         ld de,Album_de_fotos_3+1
 240+ 7342 AF               xor a
 241+ 7343 02               ld (bc),a
 242+ 7344
 243+ 7344 CD 4E 73         call Limpia_album
 244+ 7347
 245+ 7347 21 00 00         ld hl,0
 246+ 734A 22 2D 89         ld (End_Snapshot_3),hl        ; Limpia (End_Snapshot_3).
 247+ 734D C9               ret
 248+ 734E
 249+ 734E              ; ----------------------------------------------------
 250+ 734E              ;
 251+ 734E              ;   10/8/23
 252+ 734E              ;
 253+ 734E              ;   Limpia o transfiere el contenido de un album_de_fotos o disparos a otro álbum.
 254+ 734E              ;
 255+ 734E              ;   INPUTS: HL ..... Contiene el nº de bytes a borrar.
 256+ 734E              ;           BC ..... Dirección de inicio del álbum.
 257+ 734E              ;           DE ..... Dirección de inicio del álbum. +1
 258+ 734E
 259+ 734E              ;    ld hl,(End_Snapshot)
 260+ 734E              ;    ld bc,Album_de_fotos
 261+ 734E              ;    ld de,Album_de_fotos+1
 262+ 734E
 263+ 734E              ;   MODIFICA: A,HL,BC y DE.
 264+ 734E
 265+ 734E              Limpia_album
 266+ 734E D5               push de                     ; Guardo DESTINO.
 267+ 734F C5               push bc                     ; Guardo ORIGEN.
 268+ 7350 ED 42            sbc hl,bc
 269+ 7352 4D               ld c,l
 270+ 7353 44               ld b,h
 271+ 7354 E1               pop hl
 272+ 7355 C5               push bc
 273+ 7356 ED B0            ldir
 274+ 7358 C1               pop bc                      ; Esta cantidad la utilizaré para calcular (End_Snapshot_X), _
 275+ 7359 E1               pop hl                      ; _ al salir de la rutina, (cuando estamos pasando datos de un álbum_
 276+ 735A C9               ret                         ; _ a otro).
 277+ 735B              ;
 278+ 735B
 279+ 735B              ; -----------------------------------------------
 280+ 735B
 281+ 735B
 282+ 735B
 283+ 735B
 284+ 735B
# file closed: Guarda_foto_registros.asm
1683  735B
1684  735B              	SAVESNA "Pruebas.sna", START
1685  735B
1686  735B
1687  735B
1688  735B
# file closed: Banco_de_Pruebas.asm
