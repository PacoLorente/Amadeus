# file opened: Banco_de_pruebas.asm
  1   0000              ;	25/9/22
  2   0000
  3   0000
  4   0000              	DEVICE ZXSPECTRUM48
  5   0000
  6   0000              	org $a0ff
  7   A0FF
  8   A0FF              ;	Vector de interrupciones.
  9   A0FF
 10   A0FF 01 A1         	defw $a101											; $9000. Rutina de interrupciones.
 11   A101
 12   A101              	org $a101
 13   A101
 14   A101 CD 43 86     	call Frame
 15   A104 ED 4D        	reti
 16   A106
 17   A106              ; ----- ----- ----- ----- -----
 18   A106
 19   A106              	include "Sprites_e_indices.asm"
# file opened: Sprites_e_indices.asm
  1+  A106              ; ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  A106              ;
  3+  A106              ;	17/02/23
  4+  A106              ;
  5+  A106              ;	Sprites e índices.
  6+  A106
  7+  A106              	org $8000
  8+  8000
  9+  8000              ; Disparo.
 10+  8000
 11+  8000 08 80        Indice_disparo defw Disparo_0
 12+  8002 0C 80        	defw Disparo_f9
 13+  8004 10 80        	defw Disparo_fb
 14+  8006 14 80        	defw Disparo_fd
 15+  8008
 16+  8008              ; Disparo (CTRL_DESPLZ)="0".
 17+  8008 01 80 01 80  Disparo_0 DEFB $01,$80,$01,$80
 18+  800C              ; Disparo (CTRL_DESPLZ)="f9"
 19+  800C 00 60 00 60  Disparo_f9 DEFB $00,$60,$00,$60
 20+  8010              ; Disparo (CTRL_DESPLZ)="fb"
 21+  8010 18 00 18 00  Disparo_fb DEFB $18,$00,$18,$00
 22+  8014              ; Disparo (CTRL_DESPLZ)="fd"
 23+  8014 06 00 06 00  Disparo_fd DEFB $06,$00,$06,$00
 24+  8018
 25+  8018              ; ----------------------------------------------------------------------------------------
 26+  8018
 27+  8018              ; Badsat_izq. 2x2.
 28+  8018
 29+  8018 28 80        Indice_Badsat_izq defw Badsat_izquierda
 30+  801A 68 81        	defw Badsat_izq_fe
 31+  801C 38 81        	defw Badsat_izq_fd
 32+  801E 08 81        	defw Badsat_izq_fc
 33+  8020 D8 80        	defw Badsat_izq_fb
 34+  8022 A8 80        	defw Badsat_izq_fa
 35+  8024 78 80        	defw Badsat_izq_f9
 36+  8026 48 80        	defw Badsat_izq_f8
 37+  8028
 38+  8028 00 08 02 14  Badsat_izquierda DEFB $00,$08,$02,$14,$02,$2A,$02,$55
 38+  802C 02 2A 02 55
 39+  8030 02 AA 02 54  	DEFB	$02,$AA,$02,$54,$7F,$E8,$03,$60
 39+  8034 7F E8 03 60
 40+  8038 0A E0 17 F8  	DEFB	$0A,$E0,$17,$F8,$2B,$E8,$54,$40
 40+  803C 2B E8 54 40
 41+  8040 AA 60 54 00  	DEFB	$AA,$60,$54,$00,$28,$00,$10,$00 ; Sprite principal a izquierda, (sin desplazar).
 41+  8044 28 00 10 00
 42+  8048
 43+  8048 00 04 00 01  Badsat_izq_f8 DEFB $00,$04,$00,$01,$0A,$00,$01,$15
 43+  804C 0A 00 01 15
 44+  8050 00 01 2A 80  	DEFB	$00,$01,$2A,$80,$01,$55,$00,$01
 44+  8054 01 55 00 01
 45+  8058 2A 00 3F F4  	DEFB	$2A,$00,$3F,$F4,$00,$01,$B0,$00
 45+  805C 00 01 B0 00
 46+  8060 05 70 00 0B  	DEFB	$05,$70,$00,$0B,$FC,$00,$15,$F4
 46+  8064 FC 00 15 F4
 47+  8068 00 2A 20 00  	DEFB	$00,$2A,$20,$00,$55,$30,$00,$2A
 47+  806C 55 30 00 2A
 48+  8070 00 00 14 00  	DEFB	$00,$00,$14,$00,$00,$08,$00,$00 ; $F8 (7º DESPLZ a izquierda).
 48+  8074 00 08 00 00
 49+  8078
 50+  8078 00 02 00 00  Badsat_izq_f9 DEFB $00,$02,$00,$00,$85,$00,$00,$8A
 50+  807C 85 00 00 8A
 51+  8080 80 00 95 40  	DEFB	$80,$00,$95,$40,$00,$AA,$80,$00
 51+  8084 00 AA 80 00
 52+  8088 95 00 1F FA  	DEFB	$95,$00,$1F,$FA,$00,$00,$D8,$00
 52+  808C 00 00 D8 00
 53+  8090 02 B8 00 05  	DEFB	$02,$B8,$00,$05,$FE,$00,$0A,$FA
 53+  8094 FE 00 0A FA
 54+  8098 00 15 10 00  	DEFB	$00,$15,$10,$00,$2A,$98,$00,$15
 54+  809C 2A 98 00 15
 55+  80A0 00 00 0A 00  	DEFB	$00,$00,$0A,$00,$00,$04,$00,$00 ; $F9 (6º DESPLZ a izquierda).
 55+  80A4 00 04 00 00
 56+  80A8
 57+  80A8 00 01 00 00  Badsat_izq_fa DEFB $00,$01,$00,$00,$42,$80,$00,$45
 57+  80AC 42 80 00 45
 58+  80B0 40 00 4A A0  	DEFB	$40,$00,$4A,$A0,$00,$55,$40,$00
 58+  80B4 00 55 40 00
 59+  80B8 4A 80 0F FD  	DEFB	$4A,$80,$0F,$FD,$00,$00,$6C,$00
 59+  80BC 00 00 6C 00
 60+  80C0 01 5C 00 02  	DEFB	$01,$5C,$00,$02,$FF,$00,$05,$7D
 60+  80C4 FF 00 05 7D
 61+  80C8 00 0A 88 00  	DEFB	$00,$0A,$88,$00,$15,$4C,$00,$0A
 61+  80CC 15 4C 00 0A
 62+  80D0 80 00 05 00  	DEFB	$80,$00,$05,$00,$00,$02,$00,$00 ; $Fa (5º DESPLZ a izquierda).
 62+  80D4 00 02 00 00
 63+  80D8
 64+  80D8 00 00 80 00  Badsat_izq_fb DEFB $00,$00,$80,$00,$21,$40,$00,$22
 64+  80DC 21 40 00 22
 65+  80E0 A0 00 25 50  	DEFB	$A0,$00,$25,$50,$00,$2A,$A0,$00
 65+  80E4 00 2A A0 00
 66+  80E8 25 40 07 FE  	DEFB	$25,$40,$07,$FE,$80,$00,$36,$00
 66+  80EC 80 00 36 00
 67+  80F0 00 AE 00 01  	DEFB	$00,$AE,$00,$01,$7F,$80,$02,$BE
 67+  80F4 7F 80 02 BE
 68+  80F8 80 05 44 00  	DEFB	$80,$05,$44,$00,$0A,$A6,$00,$05
 68+  80FC 0A A6 00 05
 69+  8100 40 00 02 80  	DEFB	$40,$00,$02,$80,$00,$01,$00,$00 ; $Fb (4º DESPLZ a izquierda).
 69+  8104 00 01 00 00
 70+  8108
 71+  8108 00 00 40 00  Badsat_izq_fc DEFB $00,$00,$40,$00,$10,$A0,$00,$11
 71+  810C 10 A0 00 11
 72+  8110 50 00 12 A8  	DEFB	$50,$00,$12,$A8,$00,$15,$50,$00
 72+  8114 00 15 50 00
 73+  8118 12 A0 03 FF  	DEFB	$12,$A0,$03,$FF,$40,$00,$1B,$00
 73+  811C 40 00 1B 00
 74+  8120 00 57 00 00  	DEFB	$00,$57,$00,$00,$BF,$C0,$01,$5F
 74+  8124 BF C0 01 5F
 75+  8128 40 02 A2 00  	DEFB	$40,$02,$A2,$00,$05,$53,$00,$02
 75+  812C 05 53 00 02
 76+  8130 A0 00 01 40  	DEFB	$A0,$00,$01,$40,$00,$00,$80,$00 ; $Fc (3er DESPLZ a izquierda).
 76+  8134 00 00 80 00
 77+  8138
 78+  8138 00 00 20 00  Badsat_izq_fd DEFB $00,$00,$20,$00,$08,$50,$00,$08
 78+  813C 08 50 00 08
 79+  8140 A8 00 09 54  	DEFB	$A8,$00,$09,$54,$00,$0A,$A8,$00
 79+  8144 00 0A A8 00
 80+  8148 09 50 01 FF  	DEFB	$09,$50,$01,$FF,$A0,$00,$0D,$80
 80+  814C A0 00 0D 80
 81+  8150 00 2B 80 00  	DEFB	$00,$2B,$80,$00,$5F,$F8,$00,$AF
 81+  8154 5F F8 00 AF
 82+  8158 80 01 51 00  	DEFB	$80,$01,$51,$00,$02,$A9,$00,$01
 82+  815C 02 A9 00 01
 83+  8160 51 00 00 A0  	DEFB	$51,$00,$00,$A0,$00,$00,$40,$00 ; $Fd (2º DESPLZ a izquierda).
 83+  8164 00 00 40 00
 84+  8168
 85+  8168 00 00 10 00  Badsat_izq_fe DEFB $00,$00,$10,$00,$04,$28,$00,$04
 85+  816C 04 28 00 04
 86+  8170 54 00 04 AA  	DEFB	$54,$00,$04,$AA,$00,$05,$54,$00
 86+  8174 00 05 54 00
 87+  8178 04 A8 00 FF  	DEFB	$04,$A8,$00,$FF,$D0,$00,$06,$C0
 87+  817C D0 00 06 C0
 88+  8180 00 15 C0 00  	DEFB	$00,$15,$C0,$00,$2F,$FC,$00,$57
 88+  8184 2F FC 00 57
 89+  8188 C0 00 A8 80  	DEFB	$C0,$00,$A8,$80,$01,$54,$80,$00
 89+  818C 01 54 80 00
 90+  8190 A8 80 00 50  	DEFB	$A8,$80,$00,$50,$00,$00,$20,$00 ; $Fe (1er DESPLZ a izquierda).
 90+  8194 00 00 20 00
 91+  8198
 92+  8198
 93+  8198 A8 81        Indice_Badsat_der defw Badsat_derecha
 94+  819A C8 81        	defw Badsat_der_f8
 95+  819C F8 81        	defw Badsat_der_f9
 96+  819E 28 82        	defw Badsat_der_fa
 97+  81A0 58 82        	defw Badsat_der_fb
 98+  81A2 88 82        	defw Badsat_der_fc
 99+  81A4 B8 82        	defw Badsat_der_fd
100+  81A6 E8 82        	defw Badsat_der_fe
101+  81A8
102+  81A8 10 00 28 40  Badsat_derecha DEFB	$10,$00,$28,$40,$54,$40,$AA,$40
102+  81AC 54 40 AA 40
103+  81B0 55 40 2A 40  	DEFB	$55,$40,$2A,$40,$17,$FE,$06,$C0
103+  81B4 17 FE 06 C0
104+  81B8 07 50 1F E8  	DEFB	$07,$50,$1F,$E8,$17,$D4,$02,$2A
104+  81BC 17 D4 02 2A
105+  81C0 06 55 00 2A  	DEFB	$06,$55,$00,$2A,$00,$14,$00,$08 ; Sprite principal a derecha, (sin desplazar).
105+  81C4 00 14 00 08
106+  81C8
107+  81C8 08 00 00 14  Badsat_der_f8 DEFB $08,$00,$00,$14,$20,$00,$2A,$20
107+  81CC 20 00 2A 20
108+  81D0 00 55 20 00  	DEFB	$00,$55,$20,$00,$2A,$A0,$00,$15
108+  81D4 2A A0 00 15
109+  81D8 20 00 0B FF  	DEFB	$20,$00,$0B,$FF,$00,$03,$60,$00
109+  81DC 00 03 60 00
110+  81E0 03 A8 00 0F  	DEFB	$03,$A8,$00,$0F,$F4,$00,$0B,$EA
110+  81E4 F4 00 0B EA
111+  81E8 00 01 15 00  	DEFB	$00,$01,$15,$00,$03,$2A,$80,$00
111+  81EC 03 2A 80 00
112+  81F0 15 00 00 0A  	DEFB	$15,$00,$00,$0A,$00,$00,$04,$00 ; $F8 (1er DESPLZ a derecha).
112+  81F4 00 00 04 00
113+  81F8
114+  81F8 04 00 00 0A  Badsat_der_f9 DEFB $04,$00,$00,$0A,$10,$00,$15,$10
114+  81FC 10 00 15 10
115+  8200 00 2A 90 00  	DEFB	$00,$2A,$90,$00,$15,$50,$00,$0A
115+  8204 15 50 00 0A
116+  8208 90 00 05 FF  	DEFB	$90,$00,$05,$FF,$80,$01,$B0,$00
116+  820C 80 01 B0 00
117+  8210 01 D4 00 07  	DEFB	$01,$D4,$00,$07,$FA,$00,$05,$F5
117+  8214 FA 00 05 F5
118+  8218 00 00 8A 80  	DEFB	$00,$00,$8A,$80,$01,$95,$40,$00
118+  821C 01 95 40 00
119+  8220 0A 80 00 05  	DEFB	$0A,$80,$00,$05,$00,$00,$02,$00 ; $F9 (2º DESPLZ a derecha).
119+  8224 00 00 02 00
120+  8228
121+  8228 02 00 00 05  Badsat_der_fa DEFB $02,$00,$00,$05,$08,$00,$0A,$88
121+  822C 08 00 0A 88
122+  8230 00 15 48 00  	DEFB	$00,$15,$48,$00,$0A,$A8,$00,$05
122+  8234 0A A8 00 05
123+  8238 48 00 02 FF  	DEFB	$48,$00,$02,$FF,$C0,$00,$D8,$00
123+  823C C0 00 D8 00
124+  8240 00 EA 00 03  	DEFB	$00,$EA,$00,$03,$FD,$00,$02,$FA
124+  8244 FD 00 02 FA
125+  8248 80 00 45 40  	DEFB	$80,$00,$45,$40,$00,$CA,$A0,$00
125+  824C 00 CA A0 00
126+  8250 05 40 00 02  	DEFB	$05,$40,$00,$02,$80,$00,$01,$00 ; $Fa (3er DESPLZ a derecha).
126+  8254 80 00 01 00
127+  8258
128+  8258 01 00 00 02  Badsat_der_fb DEFB $01,$00,$00,$02,$84,$00,$05,$44
128+  825C 84 00 05 44
129+  8260 00 0A A4 00  	DEFB	$00,$0A,$A4,$00,$05,$54,$00,$02
129+  8264 05 54 00 02
130+  8268 A4 00 01 7F  	DEFB	$A4,$00,$01,$7F,$E0,$00,$6C,$00
130+  826C E0 00 6C 00
131+  8270 00 75 00 01  	DEFB	$00,$75,$00,$01,$FE,$80,$01,$7D
131+  8274 FE 80 01 7D
132+  8278 40 00 22 A0  	DEFB	$40,$00,$22,$A0,$00,$65,$50,$00
132+  827C 00 65 50 00
133+  8280 02 A0 00 01  	DEFB	$02,$A0,$00,$01,$40,$00,$00,$80 ; $Fb (4º DESPLZ a derecha).
133+  8284 40 00 00 80
134+  8288
135+  8288 00 80 00 01  Badsat_der_fc DEFB $00,$80,$00,$01,$42,$00,$02,$A2
135+  828C 42 00 02 A2
136+  8290 00 05 52 00  	DEFB	$00,$05,$52,$00,$02,$AA,$00,$01
136+  8294 02 AA 00 01
137+  8298 52 00 00 BF  	DEFB	$52,$00,$00,$BF,$F0,$00,$36,$00
137+  829C F0 00 36 00
138+  82A0 00 3A 80 00  	DEFB	$00,$3A,$80,$00,$FF,$40,$00,$BE
138+  82A4 FF 40 00 BE
139+  82A8 A0 00 11 50  	DEFB	$A0,$00,$11,$50,$00,$32,$A8,$00
139+  82AC 00 32 A8 00
140+  82B0 01 50 00 00  	DEFB	$01,$50,$00,$00,$A0,$00,$00,$40 ; $Fc (5º DESPLZ a derecha).
140+  82B4 A0 00 00 40
141+  82B8
142+  82B8 00 40 00 00  Badsat_der_fd DEFB $00,$40,$00,$00,$A1,$00,$01,$51
142+  82BC A1 00 01 51
143+  82C0 00 02 A9 00  	DEFB	$00,$02,$A9,$00,$01,$55,$00,$00
143+  82C4 01 55 00 00
144+  82C8 A9 00 00 5F  	DEFB	$A9,$00,$00,$5F,$F8,$00,$1B,$00
144+  82CC F8 00 1B 00
145+  82D0 00 1D 40 01  	DEFB	$00,$1D,$40,$01,$FF,$A0,$00,$1F
145+  82D4 FF A0 00 1F
146+  82D8 50 00 08 A8  	DEFB	$50,$00,$08,$A8,$00,$09,$54,$00
146+  82DC 00 09 54 00
147+  82E0 08 A8 00 00  	DEFB	$08,$A8,$00,$00,$50,$00,$00,$20 ; $Fd (6º DESPLZ a derecha).
147+  82E4 50 00 00 20
148+  82E8
149+  82E8 00 20 00 00  Badsat_der_fe DEFB $00,$20,$00,$00,$50,$80,$00,$A8
149+  82EC 50 80 00 A8
150+  82F0 80 01 54 80  	DEFB	$80,$01,$54,$80,$00,$AA,$80,$00
150+  82F4 00 AA 80 00
151+  82F8 54 80 00 2F  	DEFB	$54,$80,$00,$2F,$FC,$00,$0D,$80
151+  82FC FC 00 0D 80
152+  8300 00 0E A0 00  	DEFB	$00,$0E,$A0,$00,$FF,$D0,$00,$0F
152+  8304 FF D0 00 0F
153+  8308 A8 00 04 54  	DEFB	$A8,$00,$04,$54,$00,$04,$AA,$00
153+  830C 00 04 AA 00
154+  8310 04 54 00 00  	DEFB	$04,$54,$00,$00,$28,$00,$00,$10 ; $Fe (7º DESPLZ a derecha).
154+  8314 28 00 00 10
155+  8318
156+  8318              ; ----------------------------------------------------------------------------------------
157+  8318
158+  8318              ; Amadeus. 2x2.
159+  8318
160+  8318 38 83        Indice_Amadeus_der defw Amadeus
161+  831A 00 00        	defw 0
162+  831C 58 83        	defw Amadeus_F9							; [$F9] right - [$FA] left
163+  831E 00 00        	defw 0
164+  8320 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
165+  8322 00 00        	defw 0
166+  8324 B8 83        	defw Amadeus_Fd							; [$FD] right - [$FE] left
167+  8326 00 00        	defw 0	 								; (Fín de índice).
168+  8328
169+  8328 38 83        Indice_Amadeus_izq defw Amadeus
170+  832A 00 00        	defw 0
171+  832C B8 83        	defw Amadeus_Fd							; [$F9] right - [$FA] left
172+  832E 00 00        	defw 0
173+  8330 88 83        	defw Amadeus_Fb     					; [$FB] right - [$FC] left
174+  8332 00 00        	defw 0
175+  8334 58 83        	defw Amadeus_F9							; [$FD] right - [$FE] left
176+  8336 00 00        	defw 0	 								; (Fín de índice).
177+  8338
178+  8338 01 80 23 C4  Amadeus DEFB $01,$80,$23,$C4,$26,$64,$24,$24
178+  833C 26 64 24 24
179+  8340 2C 34 6D B6  	DEFB	$2C,$34,$6D,$B6,$6F,$F6,$67,$E6
179+  8344 6F F6 67 E6
180+  8348 E7 E7 F3 CF  	DEFB	$E7,$E7,$F3,$CF,$F7,$EF,$FF,$FF
180+  834C F7 EF FF FF
181+  8350 FB DF FB DF  	DEFB	$FB,$DF,$FB,$DF,$8B,$D1,$71,$8E ; Sprite principal, (sin desplazar).
181+  8354 8B D1 71 8E
182+  8358
183+  8358 00 60 00 08  Amadeus_F9 DEFB	$00,$60,$00,$08,$F1,$00,$09,$99
183+  835C F1 00 09 99
184+  8360 00 09 09 00  	DEFB	$00,$09,$09,$00,$0B,$0D,$00,$1B
184+  8364 0B 0D 00 1B
185+  8368 6D 80 1B FD  	DEFB	$6D,$80,$1B,$FD,$80,$19,$F9,$80
185+  836C 80 19 F9 80
186+  8370 39 F9 C0 3C  	DEFB	$39,$F9,$C0,$3C,$F3,$C0,$3D,$FB
186+  8374 F3 C0 3D FB
187+  8378 C0 3F FF C0  	DEFB	$C0,$3F,$FF,$C0,$3E,$F7,$C0,$3E
187+  837C 3E F7 C0 3E
188+  8380 F7 C0 22 F4  	DEFB	$F7,$C0,$22,$F4,$40,$1C,$63,$80 ; $F9 (2º DESPLZ a derecha).
188+  8384 40 1C 63 80
189+  8388
190+  8388 00 18 00 02  Amadeus_Fb DEFB	$00,$18,$00,$02,$3C,$40,$02,$66
190+  838C 3C 40 02 66
191+  8390 40 02 42 40  	DEFB	$40,$02,$42,$40,$02,$C3,$40,$06
191+  8394 02 C3 40 06
192+  8398 DB 60 06 FF  	DEFB	$DB,$60,$06,$FF,$60,$06,$7E,$60
192+  839C 60 06 7E 60
193+  83A0 0E 7E 70 0F  	DEFB	$0E,$7E,$70,$0F,$3C,$F0,$0F,$7E
193+  83A4 3C F0 0F 7E
194+  83A8 F0 0F FF F0  	DEFB	$F0,$0F,$FF,$F0,$0F,$BD,$F0,$0F
194+  83AC 0F BD F0 0F
195+  83B0 BD F0 08 BD  	DEFB	$BD,$F0,$08,$BD,$10,$07,$18,$E0 ; $Fb (4º DESPLZ a derecha).
195+  83B4 10 07 18 E0
196+  83B8
197+  83B8 00 06 00 00  Amadeus_Fd DEFB	$00,$06,$00,$00,$8F,$10,$00,$99
197+  83BC 8F 10 00 99
198+  83C0 90 00 90 90  	DEFB	$90,$00,$90,$90,$00,$B0,$D0,$01
198+  83C4 00 B0 D0 01
199+  83C8 B6 D8 01 BF  	DEFB	$B6,$D8,$01,$BF,$D8,$01,$9F,$98
199+  83CC D8 01 9F 98
200+  83D0 03 9F 9C 03  	DEFB	$03,$9F,$9C,$03,$CF,$3C,$03,$DF
200+  83D4 CF 3C 03 DF
201+  83D8 BC 03 FF FC  	DEFB	$BC,$03,$FF,$FC,$03,$EF,$7C,$03
201+  83DC 03 EF 7C 03
202+  83E0 EF 7C 02 2F  	DEFB	$EF,$7C,$02,$2F,$44,$01,$C6,$38 ; $Fd (6º DESPLZ a derecha).
202+  83E4 44 01 C6 38
203+  83E8
204+  83E8              ; ----------------------------------------------------------------------------------------
# file closed: Sprites_e_indices.asm
 20   83E8              	include "Entidades_y_disparos.asm"
# file opened: Entidades_y_disparos.asm
  1+  83E8
  2+  83E8              ; Base de datos de entidades e Índice.
  3+  83E8              ;
  4+  83E8              ; 17/02/23
  5+  83E8
  6+  83E8              ; Control. %00000001 00000001
  7+  83E8              ;
  8+  83E8              ;     [Bit0] ..... Impacto. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
  9+  83E8              ;                  _ hacen las entidades hacia abajo.
 10+  83E8              ;
 11+  83E8              ;     [Bit8] ..... Dirección. "1" Cuando se produce colisión al generar un disparo.
 12+  83E8
 13+  83E8 EE 83        Indice_de_disparos_Amadeus defw Disparo_1A
 14+  83EA F6 83        	defw Disparo_2A
 15+  83EC FE 83        	defw Disparo_3A
 16+  83EE
 17+  83EE 00 00        Disparo_1A defw 0									; Control.
 18+  83F0 00 00        	defw 0											; Puntero objeto.
 19+  83F2 00 00        	defw 0											; Puntero de impresión.
 20+  83F4 00 00        	defw 0											; Rutina de impresión.
 21+  83F6
 22+  83F6 00 00        Disparo_2A defw 0									; Control.
 23+  83F8 00 00        	defw 0											; Puntero objeto.
 24+  83FA 00 00        	defw 0											; Puntero de impresión.
 25+  83FC 00 00        	defw 0											; Rutina de impresión.
 26+  83FE
 27+  83FE 00 00        Disparo_3A defw 0
 28+  8400
 29+  8400 16 84        Indice_de_disparos_entidades defw Disparo_1
 30+  8402 1E 84        	defw Disparo_2
 31+  8404 26 84        	defw Disparo_3
 32+  8406 2E 84        	defw Disparo_4
 33+  8408 36 84        	defw Disparo_5
 34+  840A 3E 84        	defw Disparo_6
 35+  840C 46 84        	defw Disparo_7
 36+  840E 4E 84        	defw Disparo_8
 37+  8410 56 84        	defw Disparo_9
 38+  8412 5E 84        	defw Disparo_10
 39+  8414 66 84        	defw Disparo_11
 40+  8416
 41+  8416 00 00        Disparo_1 defw 0									; Control.
 42+  8418 00 00        	defw 0											; Puntero objeto.
 43+  841A 00 00        	defw 0											; Puntero de impresión.
 44+  841C 00 00        	defw 0											; Rutina de impresión.
 45+  841E
 46+  841E 00 00        Disparo_2 defw 0									; Control.
 47+  8420 00 00        	defw 0											; Puntero objeto.
 48+  8422 00 00        	defw 0											; Puntero de impresión.
 49+  8424 00 00        	defw 0											; Rutina de impresión.
 50+  8426
 51+  8426 00 00        Disparo_3 defw 0									; Control.
 52+  8428 00 00        	defw 0											; Puntero objeto.
 53+  842A 00 00        	defw 0											; Puntero de impresión.
 54+  842C 00 00        	defw 0											; Rutina de impresión.
 55+  842E
 56+  842E 00 00        Disparo_4 defw 0									; Control.
 57+  8430 00 00        	defw 0											; Puntero objeto.
 58+  8432 00 00        	defw 0											; Puntero de impresión.
 59+  8434 00 00        	defw 0											; Rutina de impresión.
 60+  8436
 61+  8436 00 00        Disparo_5 defw 0									; Control.
 62+  8438 00 00        	defw 0											; Puntero objeto.
 63+  843A 00 00        	defw 0											; Puntero de impresión.
 64+  843C 00 00        	defw 0
 65+  843E
 66+  843E 00 00        Disparo_6 defw 0									; Control.
 67+  8440 00 00        	defw 0											; Puntero objeto.
 68+  8442 00 00        	defw 0											; Puntero de impresión.
 69+  8444 00 00        	defw 0											; Rutina de impresión.
 70+  8446
 71+  8446 00 00        Disparo_7 defw 0									; Control.
 72+  8448 00 00        	defw 0											; Puntero objeto.
 73+  844A 00 00        	defw 0											; Puntero de impresión.
 74+  844C 00 00        	defw 0											; Rutina de impresión.
 75+  844E
 76+  844E 00 00        Disparo_8 defw 0									; Control.
 77+  8450 00 00        	defw 0											; Puntero objeto.
 78+  8452 00 00        	defw 0											; Puntero de impresión.
 79+  8454 00 00        	defw 0											; Rutina de impresión.
 80+  8456
 81+  8456 00 00        Disparo_9 defw 0									; Control.
 82+  8458 00 00        	defw 0											; Puntero objeto.
 83+  845A 00 00        	defw 0											; Puntero de impresión.
 84+  845C 00 00        	defw 0											; Rutina de impresión.
 85+  845E
 86+  845E 00 00        Disparo_10 defw 0									; Control.
 87+  8460 00 00        	defw 0											; Puntero objeto.
 88+  8462 00 00        	defw 0											; Puntero de impresión.
 89+  8464 00 00        	defw 0											; Rutina de impresión.
 90+  8466
 91+  8466 00 00        Disparo_11 defw 0
 92+  8468
 93+  8468              ; -------------------------------------------------------------------------------------
 94+  8468
 95+  8468              Indice_de_entidades									; 58 Bytes por entidad.
 96+  8468
 97+  8468 AE 84        	defw Entidad_1
 98+  846A E8 84        	defw Entidad_2
 99+  846C 22 85        	defw Entidad_3
100+  846E 5C 85        	defw Entidad_4
101+  8470              ;	...
102+  8470              ;	...
103+  8470              ;	+ entidades ...
104+  8470
105+  8470 00 00        	defw 0
106+  8472 00 00        	defw 0
107+  8474
108+  8474              ; ---------- ---------- ---------- ---------- ----------
109+  8474
110+  8474 02 02        Amadeus_db db 2,2									; (Filas) / (Columns).
111+  8476 00 00        	defw 0		 									; (Posicion_actual).
112+  8478 00 00        	defw 0	 										; (Puntero_objeto).
113+  847A 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
114+  847D
115+  847D 05           	db %00000101									; (Attr).
116+  847E
117+  847E 18 83        	defw Indice_Amadeus_der							; (Indice_Sprite_der).
118+  8480 28 83        	defw Indice_Amadeus_izq							; (Indice_Sprite_izq).
119+  8482 00 00        	defw 0		 									; (Puntero_DESPLZ_der).
120+  8484 00 00        	defw 0											; (Puntero_DESPLZ_izq).
121+  8486
122+  8486 D0 50        	defw $50d0										; (Posicion_inicio).
123+  8488 04           	db 4 											; (Cuad_objeto).
124+  8489
125+  8489 02 02 00 00  	db 2,2,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
126+  848D
127+  848D 00 00        	db 0,0											; Variables_de_borrado
128+  848F 00 00        	defw 0											;	" " " " " " "
129+  8491 00 00        	defw 0											;	" " " " " " "
130+  8493 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
131+  8497
132+  8497 00 00        	db 0,0											; Variables_de_pintado
133+  8499 00 00        	defw 0											;	" " " " " " "
134+  849B 00 00        	defw 0											;	" " " " " " "
135+  849D 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
136+  84A1
137+  84A1 40 00        	db $40,0										; (Ctrl_0) / (Obj_dibujado).
138+  84A3
139+  84A3 00 00 00 00  	defw 0,0	 									; (Puntero_indice_mov) / (Puntero_mov).
140+  84A7 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
141+  84AA
142+  84AA 00           	db 0 											; (Columnas).
143+  84AB 00 00        	defw 0											; (Limite_horizontal).
144+  84AD 00           	db 0											; (Limite_vertical).
145+  84AE
146+  84AE              ; ---------- ---------- ---------- ---------- ----------
147+  84AE
148+  84AE 00 00        Entidad_1 db 0,0									; (Filas) / (Columns).
149+  84B0 00 00        	defw 0											; (Posicion_actual).
150+  84B2 00 00        	defw 0 											; (Puntero_objeto).
151+  84B4 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
152+  84B7
153+  84B7 00           	db %00000000 									; (Attr).
154+  84B8
155+  84B8 00 00        	defw 0											; (Indice_Sprite_der).
156+  84BA 00 00        	defw 0											; (Indice_Sprite_izq).
157+  84BC 00 00        	defw 0											; (Puntero_DESPLZ_der).
158+  84BE 00 00        	defw 0											; (Puntero_DESPLZ_izq).
159+  84C0
160+  84C0 00 00        	defw 0											; (Posicion_inicio).
161+  84C2 00           	db 0											; (Cuad_objeto).
162+  84C3
163+  84C3 00 00 00 00  	db 0,0,0,0										; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
164+  84C7
165+  84C7 00 00        	db 0,0										    ; Variables_de_borrado
166+  84C9 00 00        	defw 0											;	" " " " " " "
167+  84CB 00 00        	defw 0											;	" " " " " " "
168+  84CD 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
169+  84D1
170+  84D1 00 00        	db 0,0											; Variables_de_pintado
171+  84D3 00 00        	defw 0											;	" " " " " " "
172+  84D5 00 00        	defw 0											;	" " " " " " "
173+  84D7 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
174+  84DB
175+  84DB 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
176+  84DD
177+  84DD 00 00 00 00  	defw 0,0					 					; (Puntero_indice_mov) / (Puntero_mov).
178+  84E1 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
179+  84E4
180+  84E4 00           	db 0 											; (Columnas).
181+  84E5 00 00        	defw 0											; (Limite_horizontal).
182+  84E7 00           	db 0											; (Limite_vertical).
183+  84E8
184+  84E8              ; ---------- ---------- ---------- ---------- ----------
185+  84E8
186+  84E8 02 02        Entidad_2 db 2,2		                            ; (Filas) / (Columns).
187+  84EA 00 00        	defw 0                                          ; (Posicion_actual).
188+  84EC 00 00        	defw 0											; (Puntero_objeto).
189+  84EE 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
190+  84F1
191+  84F1 02           	db %00000010									; (Attr).
192+  84F2
193+  84F2 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
194+  84F4 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
195+  84F6 00 00        	defw 0											; (Puntero_DESPLZ_der).
196+  84F8 00 00        	defw 0											; (Puntero_DESPLZ_izq).
197+  84FA
198+  84FA 7E 47        	defw $477e                                      ; (Posicion_inicio).
199+  84FC 02           	db 2											; (Cuad_objeto).
200+  84FD
201+  84FD 02 01 01 01  	db 2,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
202+  8501
203+  8501 00 00        	db 0,0											; Variables_de_borrado
204+  8503 00 00        	defw 0										 	;	" " " " " " "
205+  8505 00 00        	defw 0											;	" " " " " " "
206+  8507 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
207+  850B
208+  850B 00 00        	db 0,0											; Variables_de_pintado
209+  850D 00 00        	defw 0											;	" " " " " " "
210+  850F 00 00        	defw 0											;	" " " " " " "
211+  8511 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
212+  8515
213+  8515 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
214+  8517
215+  8517 94 93 00 00  	defw Indice_mov_Escaloncitos_izquierda_abajo,0  ; (Puntero_indice_mov) / (Puntero_mov).
216+  851B 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
217+  851E
218+  851E 00           	db 0 											; (Columnas).
219+  851F 00 00        	defw 0											; (Limite_horizontal).
220+  8521 00           	db 0											; (Limite_vertical).
221+  8522
222+  8522              ; ---------- ---------- ---------- ---------- ----------
223+  8522
224+  8522 02 02        Entidad_3 db 2,2                                 	; (Filas) / (Columns).
225+  8524 00 00        	defw 0                                          ; (Posicion_actual).
226+  8526 00 00        	defw 0											; (Puntero_objeto).
227+  8528 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
228+  852B
229+  852B 04           	db %00000100									; (Attr).
230+  852C
231+  852C 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
232+  852E 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
233+  8530
234+  8530 00 00        	defw 0											; (Puntero_DESPLZ_der).
235+  8532 00 00        	defw 0											; (Puntero_DESPLZ_izq).
236+  8534
237+  8534 A1 47        	defw $47a1                                      ; (Posicion_inicio).
238+  8536 01           	db 1											; (Cuad_objeto).
239+  8537
240+  8537 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
241+  853B
242+  853B 00 00        	db 0,0											; Variables_de_borrado
243+  853D 00 00        	defw 0										 	;	" " " " " " "
244+  853F 00 00        	defw 0											;	" " " " " " "
245+  8541 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
246+  8545
247+  8545 00 00        	db 0,0											; Variables_de_pintado
248+  8547 00 00        	defw 0											;	" " " " " " "
249+  8549 00 00        	defw 0											;	" " " " " " "
250+  854B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
251+  854F
252+  854F 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
253+  8551
254+  8551 96 93 00 00  	defw Indice_mov_Onda_senoidal,0					; (Puntero_indice_mov) / (Puntero_mov).
255+  8555 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
256+  8558
257+  8558 00           	db 0 											; (Columnas).
258+  8559 00 00        	defw 0											; (Limite_horizontal).
259+  855B 00           	db 0											; (Limite_vertical).
260+  855C
261+  855C              ; ---------- ---------- ---------- ---------- ----------
262+  855C
263+  855C 02 02        Entidad_4 db 2,2                                  	; (Filas) / (Columns).
264+  855E 00 00        	defw 0                                          ; (Posicion_actual).
265+  8560 00 00        	defw 0 											; (Puntero_objeto).
266+  8562 00 00 00     	db 0,0,0										; (Coordenada_X) / (Coordenada_Y) / (CTRL_DESPLZ).
267+  8565
268+  8565 01           	db %00000001									; (Attr).
269+  8566
270+  8566 98 81        	defw Indice_Badsat_der							; (Indice_Sprite_der).
271+  8568 18 80        	defw Indice_Badsat_izq							; (Indice_Sprite_izq).
272+  856A
273+  856A 00 00        	defw 0											; (Puntero_DESPLZ_der).
274+  856C 00 00        	defw 0											; (Puntero_DESPLZ_izq).
275+  856E
276+  856E BE 47        	defw $47be                                      ; (Posicion_inicio).
277+  8570 00           	db 0											; (Cuad_objeto).
278+  8571
279+  8571 01 01 01 01  	db 1,1,1,1                                      ; (Vel_left) / (Vel_right) / (Vel_up) / (Vel_down).
280+  8575
281+  8575 00 00        	db 0,0											; Variables_de_borrado
282+  8577 00 00        	defw 0										 	;	" " " " " " "
283+  8579 00 00        	defw 0											;	" " " " " " "
284+  857B 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
285+  857F
286+  857F 00 00        	db 0,0											; Variables_de_pintado
287+  8581 00 00        	defw 0											;	" " " " " " "
288+  8583 00 00        	defw 0											;	" " " " " " "
289+  8585 00 00 00 00  	db 0,0,0,0										;	" " " " " " "
290+  8589
291+  8589 00 00        	db 0,0											; (Ctrl_0) / (Obj_dibujado).
292+  858B
293+  858B 86 93 00 00  	defw Indice_mov_Izquierda,0                     ; (Puntero_indice_mov) / (Puntero_mov).
294+  858F 00 00 00     	db 0,0,0										; (Contador_db_mov) / (Incrementa_puntero) / (Repetimos_db).
295+  8592
296+  8592 00           	db 0 											; (Columnas).
297+  8593 00 00        	defw 0											; (Limite_horizontal).
298+  8595 00           	db 0											; (Limite_vertical).
299+  8596
# file closed: Entidades_y_disparos.asm
 21   8596
 22   8596              ; ******************************************************************************************************************************************************************************************
 23   8596              ; Constantes.
 24   8596              ; ******************************************************************************************************************************************************************************************
 25   8596              ;
 26   8596              ; 8/11/22
 27   8596              ;
 28   8596              ; Constantes generales.
 29   8596              ;
 30   8596
 31   8596              Centro_arriba equ $0160 								; Emplearemos estas constantes en la rutina de `recolocación´ del objeto:_
 32   8596              Centro_abajo equ $0180 									; _[Comprueba_limite_horizontal]. El byte alto en las dos primeras constantes_
 33   8596              Centro_izquierda equ $0f 								; _indica el tercio de pantalla, (línea $60 y $80 del 2º tercio de pantalla).
 34   8596              Centro_derecha equ $10 									; Las constantes (Centro_izquierda) y (Centro_derecha) indican la columna $0f y $10 de pantalla.
 35   8596
 36   8596              Album_de_fotos equ $7000								; En (Album_de_fotos) vamos a ir almacenando los valores_
 37   8596              ;                                   				    ; _de los registros y las llamadas a las rutinas de impresión.
 38   8596              ;                               				        ; De momento situamos este almacén en $7000.
 39   8596              Album_de_fotos_disparos equ $7060						; En (Album_de_fotos_disparos) vamos a ir almacenando los valores_
 40   8596              ;                                   				    ; _de los registros y llamadas a las distintas rutinas de impresión para poder pintar `disparos´.
 41   8596              ;                               				        ; De momento situamos este almacén en $7060.
 42   8596
 43   8596              ; ******************************************************************************************************************************************************************************************
 44   8596              ; Variables.
 45   8596              ; ******************************************************************************************************************************************************************************************
 46   8596              ;
 47   8596              ; 10/11/22
 48   8596              ;
 49   8596              ; Variables de DRAW. (Motor principal).
 50   8596              ;
 51   8596              ; (Variables_de_borrado) *** (Variables_de_pintado).	8 Bytes.
 52   8596
 53   8596 02           Filas db 2												; Filas. [DRAW]
 54   8597 02           Columns db 2  											; Nº de columnas. [DRAW]
 55   8598 00 00        Posicion_actual defw 0									; Dirección actual del Sprite. [DRAW]
 56   859A 00 00        Puntero_objeto defw 0									; Donde están los datos para pintar el Sprite.
 57   859C 00           Coordenada_X db 0 										; Coordenada X del objeto. (En chars.)
 58   859D 00           Coordenada_y db 0 										; Coordenada Y del objeto. (En chars.)
 59   859E
 60   859E              ; ---------- ---------- ---------- ---------;      ;---------
 61   859E
 62   859E 00           CTRL_DESPLZ db 0										; Este byte nos indica la posición que tiene el Sprite dentro del mapa de desplazamientos.
 63   859F              ; 														; El hecho de que este byte sea distinto de "0", indica que se ha modificado el nº de columnas del objeto.
 64   859F              ; 														; Cuando vamos a imprimir un Sprite en pantalla, la rutina de pintado consultará este byte para situar (Puntero_objeto). [Mov_left].
 65   859F 04           Attr db %00000100										; Atributos de la entidad:
 66   85A0
 67   85A0              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
 68   85A0              ;
 69   85A0              ;	COLORES: 0 ..... NEGRO
 70   85A0              ;    		 1 ..... AZUL
 71   85A0              ; 			 2 ..... ROJO
 72   85A0              ;			 3 ..... MAGENTA
 73   85A0              ; 			 4 ..... VERDE
 74   85A0              ; 			 5 ..... CIAN
 75   85A0              ;			 6 ..... AMARILLO
 76   85A0              ; 			 7 ..... BLANCO
 77   85A0
 78   85A0 98 81        Indice_Sprite_der defw Indice_Badsat_der
 79   85A2 18 80        Indice_Sprite_izq defw Indice_Badsat_izq
 80   85A4 00 00        Puntero_DESPLZ_der defw 0
 81   85A6 00 00        Puntero_DESPLZ_izq defw 0
 82   85A8
 83   85A8 3E 47        Posicion_inicio defw $473e								; Dirección de pantalla donde aparece el objeto. [DRAW].
 84   85AA 02           Cuad_objeto db 2										; Almacena el cuadrante de pantalla donde se encuentra el objeto, (1,2,3,4). [DRAW]
 85   85AB
 86   85AB              ; Variables de objeto. (Características).
 87   85AB
 88   85AB 01           Vel_left db 1 											; Velocidad izquierda. Nº de píxeles que desplazamos el objeto a izquierda. 1, 2, 4 u 8 px.
 89   85AC 01           Vel_right db 1 											; Velocidad derecha. Nº de píxeles que desplazamos el objeto a derecha. 1, 2, 4 u 8 px.
 90   85AD 01           Vel_up db 1 											; Velocidad subida. Nº de píxeles que desplazamos el objeto hacia arriba. (De 1 a 7px).
 91   85AE 01           Vel_down db 1 											; Velocidad bajada. Nº de píxeles que desplazamos el objeto hacia abajo. (De 1 a 7px).
 92   85AF
 93   85AF 00 00        Variables_de_borrado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 94   85B1 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
 95   85B3 00 00        	defw 0
 96   85B5 00 00 00 00  	db 0,0,0,0
 97   85B9
 98   85B9 00 00        Variables_de_pintado db 0,0 							; Pequeño almacén donde guardaremos, (ANTES DE DESPLAZAR), las variables requeridas por [DRAW]. Filas, Columns, Posicion_actual y CTRL_DESPLZ.
 99   85BB 00 00        	defw 0
100   85BD 00 00        	defw 0 												; Estas variables se modifican una vez desplazado el objeto. Nuestra intención es: PINTAR1-MOVER-BORRAR1-PINTAR2...
101   85BF 00 00 00 00  	db 0,0,0,0
102   85C3
103   85C3              ; Variables de funcionamiento de las rutinas de movimiento. (Mov_left), (Mov_right), (Mov_up), (Mov_down).
104   85C3
105   85C3 00           Ctrl_0 db 0 											; Byte de control. A través de este byte de control. Las rutinas de desplazamiento: [Mov_right], [Mov_left], [Mov_up] y [Mov_down],_
106   85C4              ;														; _indican a las subrutinas de recolocación del objeto de la rutina [DRAW]: [Comprueba_limite_horizontal] y [Comprueba_limite_vertical],_
107   85C4              ; 														; _que desaparecemos por un extremo de la pantalla y hemos de `reaparecer´ por el contrario.
108   85C4              ; 														; Este dato es necesario debido a que las rutinas de recolocación, están ideadas para recolocar el puntero (Posicion_actual), cuando pasamos_
109   85C4              ; 														; _de un cuadrante a otro de la pantalla pero no preveen la `desaparición´ por un extremo del cuadrante y la `reaparición´ por el otro.
110   85C4              ;
111   85C4              ; 														DESCRIPCIÖN:
112   85C4              ;
113   85C4              ; 														SET 0, [Reaparece_derecha]. El bit 0 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_left] detecta que el objeto ha `desaparecido´ por el_
114   85C4              ; 																_lado izquierdo de la pantalla y ha de `reaparecer´ por el derecho. ([Comprueba_limite_vertical]).
115   85C4              ; 														SET 1, [Reaparece_izquierda]. El bit 1 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_right] detecta que el objeto ha `desaparecido´ por el_
116   85C4              ; 																_lado derecho de la pantalla y ha de `reaparecer´ por el izquierdo. ([Comprueba_limite_vertical]).
117   85C4              ; 														SET 2, [Reaparece_abajo]. El bit 2 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_up] detecta que el objeto ha `desaparecido´ por la_
118   85C4              ; 																_parte superior de la pantalla y ha de `reaparecer´ por el inferior. ([Comprueba_limite_horizontal]).
119   85C4              ; 														SET 3, [Reaparece_arriba]. El bit 3 de (Ctrl_0) se coloca a "1" cuando la rutina [Mov_down] detecta que el objeto ha `desaparecido´ por la_
120   85C4              ; 																_parte inferior de la pantalla y ha de `reaparecer´ por la superior. ([Comprueba_limite_horizontal]).
121   85C4              ; 														SET 4, El Bit4 a "1", indica que hubo movimiento de la entidad. Necesitamos esta información
122   85C4              ;												                _para "NO BORRAR/PINTAR" en objeto si NO hubo MOVIMIENTO.
123   85C4              ;														SET 5, La rutina [Inicializacion] de Draw_XOR.asm, pone este bit a "1". Con esta información evitamos ejecutar las
124   85C4              ;																_rutinas: (Comprueba_limite_horizontal) y (Comprueba_limite_vertical) justo después de `inicializar´ un objeto.
125   85C4              ; 														SET 6, Está a "1" si el Sprite que tenemos cargado en el `Engine´ es AMADEUS.
126   85C4              ;
127   85C4              ; 														SET 7, El bit 7 se encuentra alto, ("1"), cuando el último movimiento horizontal se ha producido a la "DERECHA".
128   85C4              ; 															   _ Utilizo la información que proporciona este BIT para modificar (CTRL_DESPLZ) si el siguiente movimiento_
129   85C4              ; 															   _ se va a producir a la izquierda. "1" DERECHA - "0" IZQUIERDA.
130   85C4
131   85C4 00           Obj_dibujado db 0 										; Indica a [DRAW] si hay que PINTAR o BORRAR el objeto.
132   85C5
133   85C5              ; Movimiento.
134   85C5
135   85C5 82 93        Puntero_indice_mov defw Indice_mov_Izquierda_y_derecha
136   85C7 00 00        Puntero_mov defw 0
137   85C9 00           Contador_db_mov db 0
138   85CA 00           Incrementa_puntero db 0
139   85CB 00           Repetimos_db db 0
140   85CC
141   85CC              ; Variables de funcionamiento. [DRAW].
142   85CC
143   85CC 00           Columnas db 0
144   85CD 00 00        Limite_horizontal defw 0 								; Dirección de pantalla, (scanline), calculado en función del tamaño del Sprite. Si el objeto llega a esta línea se modifica_
145   85CF              ; 														; _(Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
146   85CF 00           Limite_vertical db 0 									; Nº de columna. Si el objeto llega a esta columna se modifica (Posicion_actual) para poder asignar un nuevo (Cuad_objeto).
147   85D0
148   85D0              ; 59 Bytes por entidad.
149   85D0              ; ----- ----- De aquí para arriba son datos que hemos de guardar en los almacenes de entidades.
150   85D0              ;					         		---------;      ;---------
151   85D0
152   85D0
153   85D0              ; Variables de funcionamiento, (No incluidas en base de datos de entidades), a partir de aquí!!!!!
154   85D0
155   85D0 00           Ctrl_1 db 0 											; 2º Byte de control de propósito general.
156   85D1
157   85D1              ;														DESCRIPCIÓN:
158   85D1              ;
159   85D1              ;														BIT 0, La rutina de generación de disparos, [Genera_disparo], pone este bit a "1" para indicar a la_
160   85D1              ;															_ rutina [Guarda_foto_registros] que los datos a guardar pertenecen a un disparo y no a una entidad,_
161   85D1              ;															_ por lo tanto hemos de almacenarlos en `Album_de_fotos_disparos´ en lugar de `Album_de_fotos´.
162   85D1              ; Gestión de ENTIDADES.
163   85D1
164   85D1 00 00        Puntero_store_entidades defw 0
165   85D3 00 00        Puntero_restore_entidades defw 0
166   85D5 00 00        Indice_restore defw 0
167   85D7 01           Numero_de_entidades db 1								; Nº de objetos en pantalla, (contando con Amadeus).
168   85D8 00           Numero_de_malotes db 0									; Inicialmente, (Numero_de_malotes)=(Numero_de_entidades).
169   85D9              ;														; Esta variable es utilizada por la rutina [Guarda_foto_registros]_
170   85D9              ;														; _ para actualizar el puntero (Stack_snapshot) o reiniciarlo cuando_
171   85D9              ;														; _ (Numero_de_malotes)="0".
172   85D9 00 00        Stack defw 0 											; La rutinas de pintado, utilizan esta_
173   85DB              ;														; _variable para almacenar lo posición del puntero_
174   85DB              ; 														; _de pila, SP.
175   85DB 00 00        Stack_2 defw 0											; 2º variable destinada a almacenar el puntero de pila, SP.
176   85DD              ;														; La utiliza la rutina [Extrae_foto_registros].
177   85DD 00 70        Stack_snapshot defw Album_de_fotos						; Puntero que indica la posición de memoria donde vamos a guardar_
178   85DF              ;														; _el snapshot de los registros de la siguiente entidad.
179   85DF              ;														; Inicialmente está situado el la posición $7000, Album_de_fotos.
180   85DF 60 70        Stack_snapshot_disparos defw Album_de_fotos_disparos	; Puntero que indica la posición de memoria donde vamos a guardar_
181   85E1              ;														; _el snapshot de los registros del siguiente disparo.
182   85E1              ;														; Inicialmente está situado en la posición $7060, Album_de_fotos_disparos.
183   85E1
184   85E1              ; Gestión de Disparos.
185   85E1
186   85E1 00 00        Puntero_extraccion_disparo_Amadeus defw 0
187   85E3 00 00        Puntero_extraccion_disparo_entidades defw 0
188   85E5 00           Numero_de_disparotes db 0
189   85E6 00 00        Puntero_DESPLZ_DISPARO_ENTIDADES defw 0
190   85E8 00 00        Puntero_DESPLZ_DISPARO_AMADEUS defw 0
191   85EA
192   85EA              ; Gestión de FRAMES.
193   85EA
194   85EA 00           Switch db 0
195   85EB
196   85EB              ; Variables de Raster y localización en pantalla.
197   85EB
198   85EB 00 FF        Temp_Raster defw $ff00
199   85ED
200   85ED              ; Rutina principal *************************************************************************************************************************************************************************
201   85ED              ;
202   85ED              ;	14/11/22
203   85ED
204   85ED 31 FF FF     START ld sp,$ffff										 ; Situamos el inicio de Stack.
205   85F0
206   85F0 3E A0        	ld a,$a0 											 ; Habilitamos el modo 2 de interrupciones y fijamos el salto a $a0ff
207   85F2 ED 47        	ld i,a 												 ; Byte alto de la dirección donde se encuentra nuestro vector de interrupciones en el registro I. ($90). El byte bajo será siempre $ff.
208   85F4 ED 5E        	IM 2 											     ; Habilitamos el modo 2 de INTERRUPCIONES.
209   85F6 F3           	DI
210   85F7
211   85F7 3E 01        	ld a,1
212   85F9 D3 FE        	out ($fe),a
213   85FB
214   85FB 3E 07        	ld a,%00000111
215   85FD CD BB 8F     	call Cls
216   8600
217   8600              ;	call Pinta_FILAS
218   8600
219   8600 CD 39 88     	call Pulsa_ENTER
220   8603
221   8603 21 D7 85     	ld hl,Numero_de_entidades
222   8606 46           	ld b,(hl)
223   8607 04           	inc b
224   8608 05           	dec b
225   8609 28 13        	jr z,3F												; Si no hay entidades, cargamos AMADEUS.
226   860B
227   860B              ;	Cada vez que iniciamos una entidad, hay que hacer una llamada a (Inicia_sprite). Sólo al iniciar!!!!!
228   860B              ;   Inicialmente tengo cargada la 1ª entidad en DRAW.
229   860B              ;	Pintamos el resto de entidades:
230   860B
231   860B CD 32 87     	call Inicia_punteros_de_entidades
232   860E
233   860E              ;	INICIA ENTIDADES!!!!!
234   860E
235   860E C5           1 push bc  												; Guardo el contador de entidades.
236   860F CD 8C 87      	call Inicia_Puntero_objeto
237   8612 CD 0B 8A     	call Draw
238   8615 CD A0 7F     	call Guarda_foto_registros
239   8618 CD D4 87     	call Store_Restore_entidades 				    	; Guardo los parámetros de la 1ª entidad y sitúa (Puntero_store_entidades) en la siguiente.
240   861B C1           	pop bc
241   861C 10 F0        	djnz 1B  											; Decremento el contador de entidades.
242   861E
243   861E              ; 	INICIA AMADEUS!!!!!
244   861E
245   861E CD 15 88     3 call Restore_Amadeus
246   8621 CD 8C 87     	call Inicia_Puntero_objeto
247   8624 CD 0B 8A     	call Draw
248   8627 CD A0 7F     	call Guarda_foto_registros
249   862A CD 27 88     	call Store_Amadeus
250   862D
251   862D              ; Iniciamos los punteros de los índices de las dos bases de datos de disparo, (Amadeus/Entidades).
252   862D
253   862D CD 48 87     	call Inicia_Puntero_Disparo_Entidades
254   8630 CD 4F 87     	call Inicia_Puntero_Disparo_Amadeus
255   8633
256   8633              ; Volvemos a situar los punteros STORE/RESTORE de entidades en la 1ª entidad.
257   8633
258   8633 CD 32 87     	call Inicia_punteros_de_entidades
259   8636 CD 03 88     	call Restore_Primera_entidad
260   8639
261   8639 3A D7 85     	ld a,(Numero_de_entidades)
262   863C 3C           	inc a
263   863D 32 D8 85     	ld (Numero_de_malotes),a
264   8640
265   8640 FB           2 ei
266   8641 18 FD        	jr 2B
267   8643
268   8643              ; -----------------------------------------------------------------------------------
269   8643
270   8643              Frame
271   8643
272   8643              ; He de imprimir sólo el nº de fotos que he hecho. Sólo BORRAMOS/PINTAMOS los objetos que se han desplazado.
273   8643              ; Necesito calcular nª de malotes, para ello utilizaré (Stack_snapshot)-(Album_de_fotos).
274   8643
275   8643 3E 02            ld a,2
276   8645 D3 FE            out ($fe),a
277   8647 CD 0F 8D     	call Extrae_foto_registros 							; Pintamos el fotograma anterior.
278   864A CD 48 8D     	call Extrae_foto_disparos
279   864D 3E 01            ld a,1
280   864F D3 FE            out ($fe),a
281   8651
282   8651              ; ----------------------------------------------------------------------
283   8651
284   8651 21 00 70     	ld hl,Album_de_fotos
285   8654 22 DD 85         ld (Stack_snapshot),hl								; Hemos impreso en pantalla el total de entidades. Iniciamos el puntero_
286   8657              ;														; _(Stack_snapshot), (lo situamos al principio de Album_de_fotos).
287   8657 3A D7 85         ld a,(Numero_de_entidades)
288   865A 47               ld b,a
289   865B A7           	and a
290   865C 28 20        	jr z,4F												; Entidades="0". Saltamos a Amadeus.
291   865E
292   865E C5           2 push bc
293   865F CD AB 86     	call Mov_obj										; MOVEMOS y decrementamos (Numero_de_malotes)
294   8662 3A C3 85     	ld a,(Ctrl_0)
295   8665 CB 67        	bit 4,a
296   8667 28 06        	jr z,1F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
297   8669
298   8669              ; Voy a utilizar una rutina de lectura de teclado para disparar con cualquier entidad.
299   8669              ; Las entidades sólo generan disparo cuando se mueven.
300   8669              ; 16/02/23.
301   8669              ; [[[
302   8669 CD 70 88     	call Detecta_disparo_entidad
303   866C              ; ]]]
304   866C CD F9 86     	call Guarda_foto_entidad_a_pintar					; BORRAMOS/PINTAMOS !!!!!!!!!!!!!!!!!!
305   866F
306   866F 21 C3 85     1 ld hl,Ctrl_0
307   8672 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
308   8674 AF           	xor a
309   8675 32 C4 85     	ld (Obj_dibujado),a
310   8678 CD D4 87     	call Store_Restore_entidades
311   867B C1           	pop bc
312   867C 10 E0        	djnz 2B
313   867E
314   867E              ; Tras la gestión de las entidades, ... AMADEUS.
315   867E
316   867E CD 15 88     4 call Restore_Amadeus
317   8681 CD CA 86     	call Mov_Amadeus
318   8684 3A C3 85     	ld a,(Ctrl_0)
319   8687 CB 67        	bit 4,a
320   8689 28 03        	jr z,3F                                             ; Omitimos BORRAR/PINTAR si no hay movimiento.
321   868B CD F9 86     	call Guarda_foto_entidad_a_pintar
322   868E
323   868E 21 C3 85     3 ld hl,Ctrl_0
324   8691 CB A6            res 4,(hl)											; Inicializamos el FLAG de movimiento de la entidad.
325   8693 AF           	xor a
326   8694 32 C4 85     	ld (Obj_dibujado),a
327   8697 CD 27 88     	call Store_Amadeus
328   869A
329   869A              ; -----
330   869A
331   869A CD 32 87     	call Inicia_punteros_de_entidades
332   869D CD 03 88     	call Restore_Primera_entidad
333   86A0
334   86A0              ; Calculamos el nº de malotes y de disparotes para pintarlos nada más comenzar el siguiente FRAME.
335   86A0
336   86A0 CD 56 87     	call Calcula_numero_de_malotes
337   86A3 CD 6E 87     	call Calcula_numero_de_disparotes
338   86A6
339   86A6 3E 04        	ld a,4
340   86A8 D3 FE        	out ($fe),a
341   86AA C9           	ret
342   86AB
343   86AB              ; --------------------------------------------------------------------------------------------------------------
344   86AB              ;
345   86AB              ;	29/1/23
346   86AB
347   86AB              Mov_obj
348   86AB
349   86AB              ; En este punto Draw tiene cargado los 52 bytes, (parámetros), de la primera entidad de Indice_de_entidades.
350   86AB
351   86AB AF           	xor a
352   86AC 32 C4 85     	ld (Obj_dibujado),a
353   86AF CD 03 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´. de la entidad almacenada en DRAW en (Variables_de_borrado).
354   86B2              ;														; Obj_dibujado="0".
355   86B2              ; Movemos Entidades malignas.
356   86B2
357   86B2 CD 98 93     	call Movimiento										; Desplazamos el objeto. MOVEMOS !!!!!
358   86B5 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
359   86B8 CB 67        	bit 4,a
360   86BA C8           	ret z
361   86BB
362   86BB              ; ---------
363   86BB
364   86BB 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
365   86BD 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
366   86C0 CD 03 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
367   86C3 CD 1A 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
368   86C6 CD E9 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen de la "ENTIDAD a borrar", pues ha habido movimiento_
369   86C9 C9           	ret													; _de la misma.
370   86CA
371   86CA              ; --------------------------------------------------------------------------------------------------------------
372   86CA              ;
373   86CA              ;	29/1/23
374   86CA
375   86CA              Mov_Amadeus
376   86CA
377   86CA AF           	xor a
378   86CB 32 C4 85     	ld (Obj_dibujado),a
379   86CE CD 03 87         call Prepara_var_pintado_borrado                    ; Almaceno las `VARIABLES DE BORRADO´ de Amadeus, (cargadas en DRAW), en (Variables_de_borrado).
380   86D1              ;														; Obj_dibujado="0".
381   86D1              ; Movemos Amadeus.
382   86D1
383   86D1 CD 4D 88     	call Movimiento_Amadeus 							; MOVEMOS AMADEUS.
384   86D4 3A C3 85     	ld a,(Ctrl_0) 										; Salimos de la rutina SI NO HA HABIDO MOVIMIENTO !!!!!
385   86D7 CB 67        	bit 4,a
386   86D9 C8           	ret z
387   86DA
388   86DA              ; ---------
389   86DA
390   86DA 3E 01        	ld a,1 				 								; Cambiamos (Obj_dibujado) a "1" para poder almacenar el contenido de DRAW en_
391   86DC 32 C4 85     	ld (Obj_dibujado),a 								; _(Variables_de_pintado).
392   86DF CD 03 87         call Prepara_var_pintado_borrado	                ; HEMOS DESPLAZADO LA ENTIDAD!!!. Almaceno las `VARIABLES DE PINTADO´.
393   86E2 CD 1A 87         call Repone_borrar                                  ; Si ha habido movimiento de la entidad, borraremos el FRAME anterior.
394   86E5 CD E9 86     	call Guarda_foto_entidad_a_borrar 					; Guarda la imagen a borrar de Amadeus, pues ha habido movimiento_
395   86E8 C9           	ret													; _de la nave.
396   86E9
397   86E9              ; --------------------------------------------------------------------------------------------------------------
398   86E9              ;
399   86E9              ;	31/01/23
400   86E9              ;
401   86E9              ;	(Guardo la foto de Amadeus sin ejecutar DRAW, "no RECOLOCACIÓN"). IMÁGEN DE AMADEUS A BORRAR.
402   86E9
403   86E9              Guarda_foto_entidad_a_borrar
404   86E9
405   86E9 CD E5 8C     	call Prepara_draw
406   86EC CD 1F 8C     	call calcula_CColumnass
407   86EF CD 56 8C     	call Calcula_puntero_de_impresion					; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
408   86F2 CD AB 8C     	call Define_rutina_de_impresion
409   86F5 CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
410   86F8 C9           	ret
411   86F9
412   86F9              ; --------------------------------------------------------------------------------------------------------------
413   86F9              ;
414   86F9              ;	31/01/23
415   86F9              ;
416   86F9              ;	(Guardo la foto de la entidad ejecutando DRAW, pues ha habido movimiento del Sprite y una posible_
417   86F9              ;   _recolocación. Guarda la IMÁGEN DE LA ENTIDAD A PINTAR.
418   86F9
419   86F9              Guarda_foto_entidad_a_pintar
420   86F9
421   86F9 CD 26 87     	call Repone_pintar
422   86FC CD 0B 8A     	call Draw
423   86FF CD A0 7F     	call Guarda_foto_registros							; Hemos modificado (Stack_snapshot), +6.
424   8702 C9           	ret
425   8703
426   8703              ; --------------------------------------------------------------------------------------------------------------
427   8703              ;
428   8703              ;
429   8703
430   8703 21 96 85     Prepara_var_pintado_borrado	ld hl,Filas
431   8706 3A C4 85     	ld a,(Obj_dibujado)
432   8709 A7           	and a
433   870A 28 05        	jr z,1F
434   870C 11 B9 85     	ld de,Variables_de_pintado
435   870F 18 03        	jr 2F
436   8711 11 AF 85     1 ld de,Variables_de_borrado
437   8714 01 08 00     2 ld bc,8
438   8717 ED B0        	ldir
439   8719 C9           	ret
440   871A
441   871A              ; --------------------------------------------------------------------------------------------------------------
442   871A
443   871A 21 AF 85     Repone_borrar ld hl,Variables_de_borrado
444   871D 11 96 85     	ld de,Filas
445   8720 01 08 00     	ld bc,8
446   8723 ED B0        	ldir
447   8725 C9           	ret
448   8726
449   8726 21 B9 85     Repone_pintar ld hl,Variables_de_pintado
450   8729 11 96 85     	ld de,Filas
451   872C 01 08 00     	ld bc,8
452   872F ED B0        	ldir
453   8731 C9           	ret
454   8732
455   8732              ; *************************************************************************************************************************************************************
456   8732              ;
457   8732              ; 8/1/23
458   8732              ;
459   8732              ; (Puntero_store_entidades) contendrá la dirección donde se encuentran los parámetros de la 1ª entidad del índice.
460   8732              ; (Indice_restore) se sitúa en la 2ª entidad del índice.
461   8732              ; (Puntero_restore_entidades) contendrá la dirección donde se encuentran los parámetros de la 2ª entidad del índice.
462   8732
463   8732              ; Destruye HL y DE !!!!!
464   8732
465   8732              Inicia_punteros_de_entidades
466   8732
467   8732 21 68 84     	ld hl,Indice_de_entidades
468   8735 CD 86 87         call Extrae_address
469   8738 22 D1 85         ld (Puntero_store_entidades),hl
470   873B 21 6A 84     	ld hl,Indice_de_entidades+2
471   873E 22 D5 85     	ld (Indice_restore),hl
472   8741 CD 86 87     	call Extrae_address
473   8744 22 D3 85     	ld (Puntero_restore_entidades),hl
474   8747 C9               ret
475   8748
476   8748              ; *************************************************************************************************************************************************************
477   8748              ;
478   8748              ; 8/1/23
479   8748              ;
480   8748              ;	Inicializamos los punteros de selección de los 2 índices de disparo, Amadeus y Entidades.
481   8748
482   8748 21 00 84     Inicia_Puntero_Disparo_Entidades ld hl,Indice_de_disparos_entidades
483   874B 22 E6 85     	ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl
484   874E C9           	ret
485   874F 21 E8 83     Inicia_Puntero_Disparo_Amadeus ld hl,Indice_de_disparos_Amadeus
486   8752 22 E8 85     	ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl
487   8755 C9           	ret
488   8756
489   8756              ; -------------------------------------------------------------------------------------------------------------
490   8756              ;
491   8756              ; 28/2/23
492   8756              ;
493   8756
494   8756              Calcula_numero_de_malotes
495   8756
496   8756 21 00 70     	ld hl,Album_de_fotos
497   8759 EB           	ex de,hl
498   875A 2A DD 85     	ld hl,(Stack_snapshot)
499   875D
500   875D 06 00        	ld b,0
501   875F 7D           	ld a,l
502   8760 93           	sub e
503   8761 28 07        	jr z,1F
504   8763
505   8763              ; Nº de malotes no es "0".
506   8763
507   8763 D6 06        2 sub 6
508   8765 04           	inc b
509   8766 A7           	and a
510   8767 20 FA        	jr nz,2B
511   8769 78           	ld a,b
512   876A
513   876A 32 D8 85     1 ld (Numero_de_malotes),a
514   876D C9           	ret
515   876E
516   876E              ; -------------------------------------------------------------------------------------------------------------
517   876E              ;
518   876E              ; 28/2/23
519   876E              ;
520   876E
521   876E              Calcula_numero_de_disparotes
522   876E
523   876E 21 60 70     	ld hl,Album_de_fotos_disparos
524   8771 EB           	ex de,hl
525   8772 2A DF 85     	ld hl,(Stack_snapshot_disparos)
526   8775
527   8775 06 00        	ld b,0
528   8777 7D           	ld a,l
529   8778 93           	sub e
530   8779 28 07        	jr z,1F
531   877B
532   877B              ; Nº de malotes no es "0".
533   877B
534   877B D6 06        2 sub 6
535   877D 04           	inc b
536   877E A7           	and a
537   877F 20 FA        	jr nz,2B
538   8781 78           	ld a,b
539   8782
540   8782 32 E5 85     1 ld (Numero_de_disparotes),a
541   8785 C9           	ret
542   8786              ; *************************************************************************************************************************************************************
543   8786              ;
544   8786              ; 20/10/22
545   8786              ;
546   8786              ; Extrae la direccioń que contiene un puntero, (HL), también en HL.
547   8786              ;
548   8786              ; Destruye el puntero y DE !!!!!
549   8786
550   8786 5E           Extrae_address ld e,(hl)
551   8787 23           	inc hl
552   8788 56           	ld d,(hl)
553   8789 2B           	dec hl
554   878A EB           	ex de,hl
555   878B C9           	ret
556   878C
557   878C              ; *************************************************************************************************************************************************************
558   878C              ;
559   878C              ;	7/2/23
560   878C              ;
561   878C              ;	Iniciamos (Puntero_DESPLZ_der) y (Puntero_DESPLZ_izq).
562   878C              ;	Estos punteros señalan al Sprite a pintar tras cada movimiento.
563   878C              ;
564   878C              ;   Destruye HL y BC !!!!!,
565   878C              ;
566   878C              ;	BIT 7 (Ctrl_0). "1" ..... Derecha.
567   878C              ;					"0" ..... Izquierda.
568   878C
569   878C              Inicia_Puntero_objeto
570   878C
571   878C 3A AA 85     	ld a,(Cuad_objeto)
572   878F E6 01        	and 1
573   8791 F5           	push af
574   8792 CC B0 87     	call z,Inicia_puntero_objeto_izq
575   8795 F1           	pop af
576   8796 28 2B        	jr z,1F
577   8798 CD 9D 87     	call Inicia_puntero_objeto_der
578   879B 18 26        	jr 1F
579   879D
580   879D              ; Arrancamos desde la parte izquierda de la pantalla.
581   879D              ; Iniciamos (Indice_Sprite_der).
582   879D
583   879D 2A A0 85     Inicia_puntero_objeto_der ld hl,(Indice_Sprite_der)
584   87A0 22 A4 85     	ld (Puntero_DESPLZ_der),hl
585   87A3 CD 86 87     	call Extrae_address
586   87A6 22 9A 85     	ld (Puntero_objeto),hl
587   87A9
588   87A9 2A A2 85     	ld hl,(Indice_Sprite_izq)							; Cuando "Iniciamos el Sprite a derecha",_
589   87AC              ;	call Extrae_address
590   87AC 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
591   87AF C9           	ret
592   87B0
593   87B0              ; Arrancamos desde la parte derecha de la pantalla.
594   87B0              ; Iniciamos (Indice_Sprite_izq).
595   87B0
596   87B0 2A A2 85     Inicia_puntero_objeto_izq ld hl,(Indice_Sprite_izq)
597   87B3 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
598   87B6 CD 86 87     	call Extrae_address
599   87B9 22 9A 85     	ld (Puntero_objeto),hl
600   87BC
601   87BC 2A A0 85     	ld hl,(Indice_Sprite_der)							; Cuando "Iniciamos el Sprite a izquierda",_
602   87BF              ;	call Extrae_address									; _situamos (Puntero_DESPLZ_der) en el último defw_
603   87BF 22 A4 85     	ld (Puntero_DESPLZ_der),hl
604   87C2 C9           	ret
605   87C3
606   87C3              ; Tenemos que activar el bit6 de (Ctrl_0) si el Sprite que hemos cargado es AMADEUS.
607   87C3
608   87C3 21 38 83     1 ld hl,Amadeus
609   87C6 ED 4B 9A 85  	ld bc,(Puntero_objeto)
610   87CA B7 ED 42     	sub hl,bc
611   87CD C0           	ret nz
612   87CE 21 C3 85     	ld hl,Ctrl_0
613   87D1 CB F6        	set 6,(hl) 											; Cuando activamos Amadeus lo indicamos alzando el bit6 de (Ctrl_0). Esta información la utilizaremos para limitar los movimientos_
614   87D3 C9           	ret 												; _de nuestra nave en los extremos.
615   87D4
616   87D4              ; *************************************************************************************************************************************************************
617   87D4              ;
618   87D4              ;	8/1/23
619   87D4              ;
620   87D4              ;	Almacena los datos de la 1ª entidad del Indice_de_entidades, (que tenemos cargado en DRAW), en su respectiva BASE DE DATOS.
621   87D4              ;	Cargamos en DRAW los datos de la 2ª entidad del Indice_de_entidades, (de su BASE DE DATOS).
622   87D4
623   87D4              ;	Modifica (Puntero_store_entidades)  y (Puntero_restore_entidades) con las direcciones donde se encuentran los datos_
624   87D4              ;	_de la 2ª y 3ª entidad respectivamente.
625   87D4
626   87D4              Store_Restore_entidades
627   87D4
628   87D4 E5           	push hl
629   87D5 D5           	push de
630   87D6 C5            	push bc
631   87D7
632   87D7              ;	STORE !!!!!
633   87D7              ;	Guarda lo que hay en Draw en la correspondiente `Entidad´.
634   87D7
635   87D7 21 96 85     	ld hl,Filas
636   87DA ED 5B D1 85  	ld de,(Puntero_store_entidades) 					; Puntero que se desplaza por las distintas entidades.
637   87DE 01 3A 00     	ld bc,58
638   87E1 ED B0        	ldir												; Hemos GUARDADO los parámetros de la 1ª entidad en su base de datos.
639   87E3
640   87E3              ;	Incrementa el puntero STORE. Guarda los datos de `Entidad´+1 en Draw, (Puntero RESTORE).
641   87E3
642   87E3 2A D3 85     	ld hl,(Puntero_restore_entidades)
643   87E6 22 D1 85     	ld (Puntero_store_entidades),hl 					; Situamos (Puntero_store_entidades) en la 2ª entidad.
644   87E9 11 96 85     	ld de,Filas 										; Hemos RECUPERADO los parámetros de la 2ª entidad de su base de datos.
645   87EC 01 3A 00     	ld bc,58
646   87EF ED B0        	ldir
647   87F1
648   87F1              ;	Incrementa RESTORE !!!!!
649   87F1
650   87F1 2A D5 85         ld hl,(Indice_restore)
651   87F4 23           	inc hl
652   87F5 23           	inc hl
653   87F6 22 D5 85     	ld (Indice_restore),hl
654   87F9 CD 86 87         call Extrae_address
655   87FC 22 D3 85         ld (Puntero_restore_entidades),hl
656   87FF C1           	pop bc
657   8800 D1           	pop de
658   8801 E1           	pop hl
659   8802 C9           	ret
660   8803
661   8803              ; **************************************************************************************************
662   8803              ;
663   8803              ;	29/10/22
664   8803              ;
665   8803              ;	Cargamos los datos de la 1º entidad del índice_de_entidades
666   8803
667   8803 E5           Restore_Primera_entidad push hl
668   8804 D5           	push de
669   8805 C5            	push bc
670   8806 2A D1 85     	ld hl,(Puntero_store_entidades)						; (Puntero_store_entidades) apunta a la dbase de la 1ª entidad.
671   8809 11 96 85     	ld de,Filas
672   880C 01 3A 00     	ld bc,58
673   880F ED B0        	ldir
674   8811 C1           	pop bc
675   8812 D1           	pop de
676   8813 E1           	pop hl
677   8814 C9           	ret
678   8815
679   8815              ; **************************************************************************************************
680   8815              ;
681   8815              ;	25/01/23
682   8815              ;
683   8815              ;	Restore_Amadeus
684   8815              ;
685   8815              ;	Cargamos en DRAW los parámetros de Amadeus.
686   8815              ;
687   8815
688   8815 E5           Restore_Amadeus	push hl
689   8816 D5           	push de
690   8817 C5            	push bc
691   8818 21 74 84     	ld hl,Amadeus_db									; Cargamos en DRAW los parámetros de Amadeus.
692   881B 11 96 85     	ld de,Filas
693   881E 01 3A 00     	ld bc,58
694   8821 ED B0        	ldir
695   8823 C1           	pop bc
696   8824 D1           	pop de
697   8825 E1           	pop hl
698   8826 C9           	ret
699   8827
700   8827              ; *************************************************************************************************************************************************************
701   8827              ;
702   8827              ;	29/01/23
703   8827              ;
704   8827              ;	Store_Amadeus
705   8827              ;
706   8827              ;	Almacenamos los parámetros de Amadeus, contenidos en DRAW en su base de datos.
707   8827              ;
708   8827
709   8827 E5           Store_Amadeus push hl
710   8828 D5           	push de
711   8829 C5            	push bc
712   882A 21 96 85     	ld hl,Filas											; Cargamos en DRAW los parámetros de Amadeus.
713   882D 11 74 84     	ld de,Amadeus_db
714   8830 01 3A 00     	ld bc,58
715   8833 ED B0        	ldir
716   8835 C1           	pop bc
717   8836 D1           	pop de
718   8837 E1           	pop hl
719   8838 C9           	ret
720   8839
721   8839              ; **************************************************************************************************
722   8839
723   8839              ; Teclado.
724   8839
725   8839 3E BF        Pulsa_ENTER ld a,$bf 									; Esperamos la pulsación de la tecla "ENTER".
726   883B DB FE        	in a,($fe)
727   883D E6 01        	and $01
728   883F 28 02        	jr z,1f
729   8841 18 F6        	jr Pulsa_ENTER
730   8843 C9           1 ret
731   8844
732   8844              ; **************************************************************************************************
733   8844              ;
734   8844              ; Temporización.
735   8844
736   8844              ; $0320 ..... El RASTER va a empezar a pintar el 1er scanline de la primera FILA de la pantalla.
737   8844              ;       ..... (14175 T/States) + 71 es lo que tarda el RASTER en llegar al 1er SCANLINE de la 1ª FILA.
738   8844              ; $00ff ..... Es lo que tarda el RASTER en pintar 1 SCANLINE. (31 T/States) + 71. ..... 102 T/States aprox.
739   8844              ;		..... 224 T/States es lo que tarda el raster en pintar 1 scanline.
740   8844
741   8844              ; $0045 ..... Es lo que tardamos en pintar 1 FILA completa, (8 Scanlines). (1794 T/States) + 71 ..... 1 FILA.
742   8844              ;       ..... (14920 T/States) + 71  ..... Es lo que tarda el RASTER en pintar 1 TERCIO.
743   8844              ; $0365 ..... Llegamos al final de la 1ª FILA, (8 Scanlines).
744   8844
745   8844              ; A partir de $4f61 no hace falta DELAY.
746   8844
747   8844              ;	!!!!!!!! DESTRUYE BC !!!!!!!!!!!
748   8844
749   8844 01 20 03     DELAY LD BC,$0320							;$0320 ..... Delay mínimo
750   8847 0B           wait DEC BC  								;Sumaremos $0045 por FILA a esta cantidad inicial. Ejempl: si el Sprite ocupa la 1ª y 2ª_
751   8848 78           	LD A,B
752   8849 A7           	AND A
753   884A 20 FB        	JR NZ,wait
754   884C C9           	RET
755   884D
756   884D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
757   884D              ;
758   884D              ;	5/3/23
759   884D              ;
760   884D              ;	En 1er lugar detectamos disparo (5), seguido de los movimientos a izq. / derecha.
761   884D
762   884D              Movimiento_Amadeus
763   884D
764   884D              ; Disparo.
765   884D
766   884D 3E F7        	ld a,$f7												; "5" para disparar.
767   884F DB FE        	in a,($fe)
768   8851 E6 10        	and $10
769   8853 CC A4 88     	call z,Genera_disparo
770   8856
771   8856 3E F7        	ld a,$f7		  										; Rutina de TECLADO. Detecta cuando se pulsan las teclas "1" y "2"  y llama a las rutinas de "Mov_izq" y "Mov_der". $f7  detecta fila de teclas: (5,4,3,2,1).
772   8858 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
773   885A E6 01        	and $01													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $01 resulta "0"  llama a la rutina "Mov_izq".
774   885C CC 49 91         call z,Mov_left											;			"			"			"			"			"			"			"			"
775   885F 3E F7        	ld a,$f7
776   8861 DB FE        	in a,($fe)
777   8863 E6 01        	and $01
778   8865 C8           	ret z
779   8866
780   8866 3E F7        	ld a,$f7
781   8868 DB FE        	in a,($fe)												; Carga en A la información proveniente del puerto $FE, teclado.
782   886A E6 02        	and $02													; Detecta cuando la tecla (1) está actuada. "1" no pulsada "0" pulsada. Cuando la operación AND $02 resulta "0"  llama a la rutina "Mov_der".
783   886C CC 2B 90     	call z,Mov_right										;			"			"			"			"			"			"			"			"
784   886F C9           	ret
785   8870
786   8870              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
787   8870              ;
788   8870              ;	Rutina provisional para que los malotes cagen balas.
789   8870
790   8870 3E 7F        Detecta_disparo_entidad ld a,$7f
791   8872 DB FE        	in a,($fe)
792   8874 E6 01        	and 1
793   8876 C0           	ret nz
794   8877 CD A4 88     	call Genera_disparo
795   887A C9           	ret
796   887B
797   887B              ; Pinta indicadores de FILAS. ------------------------------------------------------
798   887B
799   887B 21 10 40     Pinta_FILAS ld hl,$4010
800   887E              ;	ld b,9
801   887E              ;2 push hl
802   887E              ;	push bc
803   887E 06 BF        	ld b,$bf
804   8880 36 80        1 ld (hl),%10000000
805   8882 CD F1 8C     	call NextScan
806   8885 10 F9        	djnz 1B
807   8887              ;	pop bc
808   8887              ;	pop hl
809   8887              ;	inc l
810   8887              ;	djnz 2B
811   8887 06 03        	ld b,3
812   8889 21 00 47         ld hl,$4700
813   888C CD 92 88     3 call Bucle_1
814   888F 10 FB            djnz 3B
815   8891 C9               ret
816   8892
817   8892 C5           Bucle_1 push bc
818   8893 E5                   push hl
819   8894 D1                   pop de
820   8895 13                   inc de
821   8896 01 FF 00             ld bc,255
822   8899 36 FF                ld (hl),255
823   889B ED B0                ldir
824   889D 23                   inc hl
825   889E 3E 07                ld a,7
826   88A0 84                   add a,h
827   88A1 67                   ld h,a
828   88A2 C1                   pop bc
829   88A3 C9                   ret
830   88A4
831   88A4              ; ---------------------------------------------------------------
832   88A4
833   88A4              	include "Disparo.asm"
# file opened: Disparo.asm
  1+  88A4              ; ******************************************************************************************************************************************************************************************
  2+  88A4              ;
  3+  88A4              ;   19/02/23
  4+  88A4              ;
  5+  88A4              ; 	La rutina determina si es factible, o no, `generar' un disparo.
  6+  88A4              ;   En el caso de generar disparo la rutina proporciona 4 variables:
  7+  88A4              ;
  8+  88A4              ;
  9+  88A4              ;       -1 .defw ..... Control. %00000001 00000001
 10+  88A4              ;
 11+  88A4              ;           [Bit0] ..... Dirección. "1" Cuando dispara Amadeus, (hacia arriba), "0" cuando lo_
 12+  88A4              ;               _ hacen las entidades hacia abajo.
 13+  88A4              ;
 14+  88A4              ;           [Bit8] ..... Impacto. "1" Cuando se produce colisión al generar un disparo.
 15+  88A4              ;
 16+  88A4              ;       - 2 .defw ..... Direccíón de memoria de la rutina que imprime el disparo en pantalla.
 17+  88A4              ;           Siempre será la misma: [Pinta_Amadeus_2x2].
 18+  88A4              ;
 19+  88A4              ;       - 3 .defw ..... Puntero de impresión. Dirección de pantalla donde empezamos a pintar_
 20+  88A4              ;           _ la bala.
 21+  88A4              ;
 22+  88A4              ;       - 4 .defw ..... Puntero_objeto_disparo. Dirección donde se encuentran los .db que pintan_
 23+  88A4              ;           _ la bala. El Sprite de la bala consta de 2 columnas y 2 scanlines. Una vez que se_
 24+  88A4              ;           _ genera el proyectil esta dirección permanece inalterable. Esta dirección puede tener_
 25+  88A4              ;           _ 4 valores distintos, ((el valor dependerá del que tenga la variable (CTRL_DESPLZ)_
 26+  88A4              ;           _ en el momento de generarse la bala)).
 27+  88A4
 28+  88A4              Genera_disparo
 29+  88A4
 30+  88A4              ;   Esta parte de la rutina se encarga de `RETORNAR' sin generar disparo cuando (CTRL_DESPLZ)_
 31+  88A4              ;   _ tenga valores distintos de $00, $f9, $fb y $fd.
 32+  88A4              ;   NO SE GENERA disparo cuando la entidad no está impresa en su totalidad en pantalla, (está_
 33+  88A4              ;   _ apareciendo o desapareciendo). (Columns)<>(Columnas).
 34+  88A4              ;   Amadeus al desplazarse a 2 pixels, podrá generar disparo en cualquier situación pero las Entidades_
 35+  88A4              ;   _ sólo podran generar disparo cuando (CTRL_DESPLZ) tenga estos valores, $00, $f9, $fb y $fd.
 36+  88A4              ;   IY contendrá la dirección de Puntero_objeto_disparo.
 37+  88A4
 38+  88A4 3A CC 85         ld a,(Columnas)
 39+  88A7 47               ld b,a
 40+  88A8 3A 97 85         ld a,(Columns)
 41+  88AB B8               cp b
 42+  88AC C0               ret nz                              ; Salimos si la entidad no está completa en pantalla.
 43+  88AD
 44+  88AD              ; ----- ----- -----
 45+  88AD
 46+  88AD 21 00 80         ld hl,Indice_disparo
 47+  88B0 3A 9E 85         ld a,(CTRL_DESPLZ)
 48+  88B3 4F               ld c,a
 49+  88B4 06 00            ld b,0	                            ; B será 0,1,2 o 3 en función del valor de (CTRL_DESPLZ).
 50+  88B6              ;                                           Cuando (CTRL_DESPLZ)="0", B="0"
 51+  88B6              ;                                            ""        ""       "f9", B="1"
 52+  88B6              ;                                            ""        ""       "fb", B="2"
 53+  88B6              ;                                            ""        ""       "fb", B="3"
 54+  88B6 A7               and a
 55+  88B7 28 10            jr z,1F
 56+  88B9 E6 01            and 1
 57+  88BB C8               ret z                               ; Salimos si (CTRL_DESPLZ) es distinto de $00, $f9, $fb y $fd.
 58+  88BC
 59+  88BC 79               ld a,c
 60+  88BD 16 F9            ld d,$f9
 61+  88BF 23           2 inc hl
 62+  88C0 23               inc hl
 63+  88C1 04               inc b
 64+  88C2 BA               cp d
 65+  88C3 28 04            jr z,1F
 66+  88C5 14               inc d
 67+  88C6 14               inc d
 68+  88C7 18 F6            jr 2B
 69+  88C9
 70+  88C9 CD 86 87     1 call Extrae_address
 71+  88CC E5               push hl
 72+  88CD FD E1            pop iy                              ; Puntero_objeto_disparo en IY.
 73+  88CF DD 21 84 8F  	ld ix, Pinta_Disparo        		; Rutinas_de_impresion en IX.
 74+  88D3
 75+  88D3              ;	Se cumplen las condiciones necesarias para generar un disparo.
 76+  88D3              ;   Las variables de disparo varían en función del cuadrante en el que se encuentre la entidad/Amadeus.
 77+  88D3
 78+  88D3 3A AA 85     	ld a,(Cuad_objeto)
 79+  88D6 FE 02            cp 2
 80+  88D8 38 60            jr c,3F
 81+  88DA 28 5E            jr z,3F
 82+  88DC
 83+  88DC              ; 	Nos encontramos en la mitad inferior de la pantalla, (3er y 4º cuadrante).
 84+  88DC
 85+  88DC E6 01            and 1
 86+  88DE 28 2D            jr z,4F
 87+  88E0
 88+  88E0              ; 	Estamos en el 3er cuadrante de pantalla.
 89+  88E0              ; 	3er CUAD. ----- ----- ----- ----- -----
 90+  88E0              ;
 91+  88E0              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
 92+  88E0              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
 93+  88E0              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
 94+  88E0
 95+  88E0 2A 98 85     	ld hl,(Posicion_actual)
 96+  88E3
 97+  88E3              ;   Amadeus o entidad ???.
 98+  88E3
 99+  88E3 3A C3 85         ld a,(Ctrl_0)
100+  88E6 CB 77            bit 6,a
101+  88E8 28 0D            jr z,8F
102+  88EA
103+  88EA              ; 	Dispara Amadeus.
104+  88EA
105+  88EA 0E 81            ld c,$81	                                    ; Dirección "$81", hacia arriba.
106+  88EC CD 00 8D         call PreviousScan
107+  88EF CD 00 8D         call PreviousScan
108+  88F2
109+  88F2              ;	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
110+  88F2              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
111+  88F2              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
112+  88F2              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
113+  88F2
114+  88F2 CD 64 89         call Ajusta_disparo_parte_izquierda
115+  88F5 18 0E            jr 10F
116+  88F7
117+  88F7              ; 	Dispara Entidad.
118+  88F7
119+  88F7 0E 80        8 ld c,$80	                                        ; Dirección "$80", hacia abajo.
120+  88F9
121+  88F9              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
122+  88F9              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
123+  88F9
124+  88F9 C5               push bc
125+  88FA 06 10            ld b,16
126+  88FC CD F1 8C     9 call NextScan
127+  88FF 10 FB            djnz 9B
128+  8901 C1               pop bc
129+  8902
130+  8902              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
131+  8902              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
132+  8902              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
133+  8902              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
134+  8902
135+  8902 CD 64 89         call Ajusta_disparo_parte_izquierda
136+  8905
137+  8905 CD E5 89     10 call Comprueba_Colision                          ; Retorna "$81" o "$80" en B indicando si se produce Colisión
138+  8908              ;                                                   ; _al generar el disparo.
139+  8908
140+  8908              ; 	LLegados a este punto tendremos:
141+  8908              ;
142+  8908              ;       Puntero_objeto_disparo en IY.
143+  8908              ;       Rutinas_de_impresion en IX.
144+  8908              ;       Puntero_de_impresion en HL.
145+  8908              ;       Impacto/Dirección en BC.
146+  8908
147+  8908 CD 6C 89         call Almacena_disparo
148+  890B 18 4F            jr 6F                                           ; RET.
149+  890D
150+  890D
151+  890D              ; 	Estamos en el 4º cuadrante de pantalla.
152+  890D              ; 	4º CUAD. ----- ----- ----- ----- -----
153+  890D              ;
154+  890D              ;	En el 3er y 4º cuadrante de pantalla, cabe la posibilidad de que sea una entidad o Amadeus el que dispara.
155+  890D              ;	En función del elemento que dispare variara el Puntero_de_impresión y su `Dirección'.
156+  890D              ;   En estos cuadrantes también es posible que se genere `Colisión', hay que comprobarlo.
157+  890D
158+  890D 2A 98 85     4 ld hl,(Posicion_actual)
159+  8910
160+  8910              ;   Amadeus o entidad ???.
161+  8910
162+  8910 3A C3 85         ld a,(Ctrl_0)
163+  8913 CB 77            bit 6,a
164+  8915 28 0D            jr z,11F
165+  8917
166+  8917              ; 	Dispara Amadeus.
167+  8917
168+  8917 0E 81            ld c,$81                                          ; Dirección "$81", hacia arriba.
169+  8919 CD 00 8D         call PreviousScan
170+  891C CD 00 8D         call PreviousScan
171+  891F
172+  891F              ; 	Ahora HL apunta 2 scanlines por encima de (Posicion_actual).
173+  891F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
174+  891F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
175+  891F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
176+  891F
177+  891F CD 5D 89         call Ajusta_disparo_parte_derecha
178+  8922 18 0E            jr 13F
179+  8924
180+  8924              ; 	Dispara Entidad.
181+  8924
182+  8924 0E 80        11 ld c,$80                                        	  ; Dirección "$80", hacia abajo.
183+  8926
184+  8926              ; 	Guardamos el contenido de BC en la pila pues voy a utilizar el registro B como contador.
185+  8926              ;   B contiene "0,1,2 o 3", dato necesario para fijar el puntero de impresión.
186+  8926
187+  8926 C5               push bc
188+  8927
189+  8927 06 10            ld b,16
190+  8929 CD F1 8C     12 call NextScan
191+  892C 10 FB            djnz 12B
192+  892E
193+  892E C1               pop bc
194+  892F
195+  892F              ; 	Ahora HL apunta un scanline por debajo de (Posicion_actual).
196+  892F              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
197+  892F              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
198+  892F              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
199+  892F
200+  892F CD 5D 89         call Ajusta_disparo_parte_derecha
201+  8932
202+  8932 CD E5 89     13 call Comprueba_Colision                            ; Retorna "$81" o "$80" en B indicando si se produce Colisión
203+  8935              ;                                                     ; _al generar el disparo.
204+  8935
205+  8935              ; LLegados a este punto tendremos:
206+  8935              ;
207+  8935              ;       Puntero_objeto_disparo en IY.
208+  8935              ;       Rutinas_de_impresion en IX.
209+  8935              ;       Puntero_de_impresion en HL.
210+  8935              ;       Impacto/Dirección en BC.
211+  8935
212+  8935 CD 6C 89         call Almacena_disparo
213+  8938 18 22            jr 6F                                           ; RET.
214+  893A
215+  893A              ; 	La entidad que dispara se encuentra en la mitad superior de pantalla, (cuadrantes 1º y 2º).
216+  893A
217+  893A 28 11        3 jr z,5F
218+  893C
219+  893C              ; 	1er CUAD. ----- ----- ----- ----- -----
220+  893C              ;
221+  893C              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
222+  893C              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
223+  893C              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
224+  893C              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
225+  893C
226+  893C              ; 	Cuando (CTRL_DESPLZ)="0", B="0"
227+  893C              ;	   ""        ""       "f9", B="1"
228+  893C              ;	   ""        ""       "fb", B="2"
229+  893C              ; 	   ""        ""       "fb", B="3"
230+  893C
231+  893C 2A 98 85     	ld hl,(Posicion_actual)
232+  893F CD F1 8C     	call NextScan
233+  8942
234+  8942              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
235+  8942              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
236+  8942              ; 	En los cuadrantes 1º y3º de pantalla, sólo cuando (CTRL_DESPLZ)="$f9", B="1" ..... (DEC HL)*2.
237+  8942              ;   _ El resto de combinaciones, B="0","2" o "3" ..... DEC HL.
238+  8942
239+  8942 CD 64 89         call Ajusta_disparo_parte_izquierda
240+  8945
241+  8945              ; 	No se produce impacto. B="$80"
242+  8945              ; 	Dirección del proyectil hacia abajo. C="$80"
243+  8945
244+  8945 01 80 80         ld bc,$8080
245+  8948
246+  8948              ; 	LLegados a este punto tendremos:
247+  8948              ;
248+  8948              ;       Puntero_objeto_disparo en IY.
249+  8948              ;       Rutinas_de_impresion en IX.
250+  8948              ;       Puntero_de_impresion en HL.
251+  8948              ;       Impacto/Dirección en BC.
252+  8948
253+  8948 CD 6C 89         call Almacena_disparo
254+  894B 18 0F            jr 6F                                           ; RET.
255+  894D
256+  894D              ; 	Estamos en el 2º cuadrante de pantalla.
257+  894D              ; 	2º CUAD. ----- ----- ----- ----- -----
258+  894D              ;
259+  894D              ;	En el 1er y 2º cuadrante de pantalla, sólo cabe la posibilidad de que sea una entidad la que dispare,_
260+  894D              ;	_ por lo tanto siempre se iniciara el disparo en la parte `baja´ del sprite.
261+  894D              ;   La dirección del proyectil siempre será hacia abajo. En los cuadrante 1º y 2º no se comprueba colision_
262+  894D              ;   _ pues sabemos que Amadeus sólo puede estar situado en los cuadrantes 3º y 4º.
263+  894D
264+  894D 2A 98 85     5 ld hl,(Posicion_actual)
265+  8950 CD F1 8C     	call NextScan
266+  8953
267+  8953              ; 	Ahora HL apunta una FILA por debajo de (Posicion_actual).
268+  8953              ; 	En función de (CTRL-DESPLZ) variará, (en un char., a derecha o izquierda), el puntero de impresión.
269+  8953              ; 	En los cuadrantes 2º y 4º, cuando (CTRL_DESPLZ)="$fb" o "$fd"; B="2" y B="3" ..... (INC HL).
270+  8953              ;	En el resto de combinaciones, B="0" o "1", no se corrige el puntero de impresión.
271+  8953
272+  8953 CD 5D 89         call Ajusta_disparo_parte_derecha
273+  8956
274+  8956              ; 	No se produce impacto. B="$80"
275+  8956              ; 	Dirección del proyectil hacia abajo. C="80"
276+  8956
277+  8956 01 80 80     15 ld bc,$8080
278+  8959
279+  8959              ; 	LLegados a este punto tendremos:
280+  8959              ;
281+  8959              ;       Puntero_objeto_disparo en IY.
282+  8959              ;       Rutinas_de_impresion en IX.
283+  8959              ;       Puntero_de_impresion en HL.
284+  8959              ;       Impacto/Dirección en BC.
285+  8959
286+  8959 CD 6C 89         call Almacena_disparo
287+  895C
288+  895C C9           6 ret
289+  895D
290+  895D              ; ----------------------------------------------------------------
291+  895D              ;
292+  895D              ;	Estas dos subrutinas se encargan de `corregir´, el puntero de impresión del proyectil_
293+  895D              ;	_ en función del valor de la variable (CTRL_DESPLZ) y de la situación en pantalla,_
294+  895D              ;	_ (lado izq. o derecho), de la entidad que lo genera.
295+  895D
296+  895D 78           Ajusta_disparo_parte_derecha ld a,b
297+  895E FE 02            cp 2
298+  8960 38 01            jr c,1F
299+  8962 23               inc hl
300+  8963 C9           1 ret
301+  8964
302+  8964 78           Ajusta_disparo_parte_izquierda ld a,b
303+  8965 FE 01        	cp 1
304+  8967 20 01        	jr nz,1F
305+  8969 2B           	dec hl
306+  896A 2B           1 dec hl
307+  896B C9               ret
308+  896C
309+  896C              ; ----------------------------------------------------------------
310+  896C              ;
311+  896C              ;   25/02/23
312+  896C              ;
313+  896C              ;   La Rutina va almacenando disparos en sus respectiva bases de datos.
314+  896C              ;   Amadeus dispone de 2 disparos mientras que las entidades disponen de un máximo de 10.
315+  896C
316+  896C              Almacena_disparo
317+  896C
318+  896C E5               push hl  										; HL contiene el puntero de impresión.
319+  896D F1               pop af
320+  896E 08               ex af,af                                        ; Puntero_de_impresion en AF'.
321+  896F
322+  896F 79           3 ld a,c 											; C contiene la "dirección" del proyectil.
323+  8970 E6 01            and 1
324+  8972 28 1A            jr z,1F                                         ; Según la `Dirección' del proyectil sabemos si_
325+  8974              ;                                                   ; _ es Amadeus o una entidad la que dispara.
326+  8974              ; 	Dispara AMADEUS.
327+  8974
328+  8974              ;	Comprobamos que a Amadeus aún le quedan disparos.
329+  8974              ;	Si es así, nos situamos en la siguiente dirección del índice de disparos de Amadeus.
330+  8974              ;	Si por el contrario, estamos al final de índice, (no disponemos de más disparos),_
331+  8974              ;	_ iniciamos (Puntero_DESPLZ_DISPARO_AMADEUS) situándolo al comienzo del índice y salimos.
332+  8974
333+  8974 C5               push bc
334+  8975 01 EC 83         ld bc,Indice_de_disparos_Amadeus+4              ; Disparo_3A
335+  8978 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
336+  897B A7               and a
337+  897C ED 42            sbc hl,bc
338+  897E CC 4F 87         call z,Inicia_Puntero_Disparo_Amadeus
339+  8981 C1               pop bc
340+  8982 28 60            jr z,4F
341+  8984
342+  8984 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
343+  8987 23               inc hl
344+  8988 23               inc hl
345+  8989 22 E8 85         ld (Puntero_DESPLZ_DISPARO_AMADEUS),hl          ; (Puntero_DESPLZ_DISPARO_AMADEUS) ya apunta al siguiente_
346+  898C              ;                                                   ; _ Disparo_(+1).
347+  898C 18 18            jr 2F
348+  898E
349+  898E              ; Dispara una entidad.
350+  898E
351+  898E C5           1 push bc
352+  898F 01 14 84         ld bc,Indice_de_disparos_entidades+20           ; Disparo_11
353+  8992 2A E6 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
354+  8995 A7               and a
355+  8996 ED 42            sbc hl,bc
356+  8998 CC 48 87         call z,Inicia_Puntero_Disparo_Entidades
357+  899B C1               pop bc
358+  899C 28 46            jr z,4F
359+  899E
360+  899E 2A E6 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
361+  89A1 23               inc hl
362+  89A2 23               inc hl
363+  89A3 22 E6 85         ld (Puntero_DESPLZ_DISPARO_ENTIDADES),hl        ; El (Puntero_DESPLZ_IND_DISPARO) ya apunta al siguiente_
364+  89A6              ;                                                   ; _ Disparo_(+1).
365+  89A6 CD 86 87     2 call Extrae_address                               ; HL contiene la dirección donde vamos a almacenar_
366+  89A9              ;                                                   ; _ los 8 bytes que definen el disparo:
367+  89A9              ;
368+  89A9              ;                                                     Puntero_objeto_disparo en IY.
369+  89A9              ;                                                     Rutinas_de_impresion en IX.
370+  89A9              ;                                                     Puntero_de_impresion en HL.
371+  89A9              ;                                                     Impacto/Dirección en BC.
372+  89A9
373+  89A9 2B               dec hl                                          ; Esta parte de la rutina comprueba si este_
374+  89AA 7E               ld a,(hl)                                       ; _ almacén de disparo está vacio. Si no es así, saltamos_
375+  89AB 23               inc hl                                          ; _ al siguiente.
376+  89AC A7               and a
377+  89AD 20 C0            jr nz,3B
378+  89AF
379+  89AF 08               ex af,af
380+  89B0 ED 73 D9 85      ld (Stack),sp                                   ; Guardo SP en (Stack).)
381+  89B4 F9               ld sp,hl
382+  89B5
383+  89B5 DD E5            push ix                                         ; Rutina de impresión.
384+  89B7 F5               push af                                         ; Puntero de impresión.
385+  89B8 FD E5            push iy                                         ; Puntero objeto.
386+  89BA C5               push bc                                         ; Control.
387+  89BB
388+  89BB ED 7B D9 85      ld sp,(Stack)
389+  89BF
390+  89BF              ; Guardamos en Album_de_fotos_disparos los proyectiles generados.
391+  89BF
392+  89BF 21 D0 85     	ld hl,Ctrl_1
393+  89C2 CB C6        	set 0,(hl)
394+  89C4
395+  89C4 DD E5        	push ix
396+  89C6 E1               pop hl
397+  89C7 F5               push af
398+  89C8 DD E1            pop ix
399+  89CA
400+  89CA CD A0 7F     	call Guarda_foto_registros
401+  89CD
402+  89CD 21 D0 85     	ld hl,Ctrl_1									; Restauramos el indicador de disparo antes de salir.
403+  89D0 CB 86        	res 0,(hl)
404+  89D2
405+  89D2              ;   Preparamos los punteros de extraccion de disparos para utilizarlos más tarde en la rutina: Extrae_foto_registros_disparos.
406+  89D2
407+  89D2 2A E8 85         ld hl,(Puntero_DESPLZ_DISPARO_AMADEUS)
408+  89D5 22 E1 85         ld (Puntero_extraccion_disparo_Amadeus),hl
409+  89D8 2A E6 85         ld hl,(Puntero_DESPLZ_DISPARO_ENTIDADES)
410+  89DB 22 E3 85         ld (Puntero_extraccion_disparo_entidades),hl
411+  89DE
412+  89DE              ;   Inicializamos los punteros de disparos antes de salir. Pretendemos que los campos vacíos del índice siempre estén
413+  89DE              ;   _ al final. Los disparos nuevos que se generen se guardarán en el primer cajón vacío del índice.
414+  89DE
415+  89DE CD 4F 87         call Inicia_Puntero_Disparo_Amadeus
416+  89E1 CD 48 87         call Inicia_Puntero_Disparo_Entidades
417+  89E4
418+  89E4 C9           4 ret
419+  89E5
420+  89E5              ; ----------------------------------------------------------------
421+  89E5              ;
422+  89E5              ;   4/3/23
423+  89E5              ;
424+  89E5              ;   Entrega el siguiente dato en el registro B en función de si se produce colisión, o no,_
425+  89E5              ;   _ al generarse el disparo.
426+  89E5              ;       "$80" ..... No se produce colisión.
427+  89E5              ;       "$81" ..... Se produce colisión.
428+  89E5
429+  89E5 E5           Comprueba_Colision push hl
430+  89E6 1E 80            ld e,$80                                       ; E,(Impacto)="0".
431+  89E8 CD FD 89         call Bucle_2                                   ; Comprobamos el 1er scanline.
432+  89EB
433+  89EB 7B               ld a,e
434+  89EC E6 01            and 1
435+  89EE 28 03            jr z,1F                                        ; Si no se produce impacto comprobamos el 2º scanline.
436+  89F0
437+  89F0              ; Hay impacto.
438+  89F0
439+  89F0 43           2 ld b,e
440+  89F1 E1               pop hl                                         ; Puntero de impresión en HL e indicador de Impacto en B.
441+  89F2 C9           3 ret
442+  89F3
443+  89F3 E1           1 pop hl
444+  89F4 E5               push hl
445+  89F5 CD F1 8C         call NextScan
446+  89F8 CD FD 89         call Bucle_2
447+  89FB 18 F3            jr 2B
448+  89FD
449+  89FD              ; ---------- ----------
450+  89FD
451+  89FD 06 02        Bucle_2 ld b,2
452+  89FF 7E           2 ld a,(hl)
453+  8A00 A7               and a
454+  8A01 20 04            jr nz,1F
455+  8A03 23               inc hl
456+  8A04 10 F9            djnz 2B
457+  8A06 C9           3 ret
458+  8A07 1E 81        1 ld e,$81
459+  8A09 18 FB            jr 3B
460+  8A0B
461+  8A0B              ; -------------------------------------------------------------------------------------------------------------
462+  8A0B
463+  8A0B
464+  8A0B
465+  8A0B
466+  8A0B
# file closed: Disparo.asm
834   8A0B              	include "Draw_XOR.asm"
# file opened: Draw_XOR.asm
  1+  8A0B              ; ******************************************************************************************************************************************************************************************
  2+  8A0B              ;
  3+  8A0B              ; 01/23
  4+  8A0B              ;
  5+  8A0B              ; DRAW. ************************************************************************************************************************************************************************************
  6+  8A0B
  7+  8A0B CD E5 8C     Draw call Prepara_draw
  8+  8A0E 7C           	ld a,h 						 					; El objeto existe, o se está iniciando?. Si se está iniciando, (Posicion_inicio = Posicion_actual) y saltamos_
  9+  8A0F A7           	and a 											; _a la subrutina [Inicializacion] donde asignaremos cuadrante y límites.
 10+  8A10 28 05        	jr z,2F
 11+  8A12
 12+  8A12 3A AA 85     	ld a,(Cuad_objeto)			 					; El objeto ya se inició. Cargamos en A el cuadrante de pantalla en el que lo hizo y saltamos a 1F.
 13+  8A15 18 0C        	jr 1F
 14+  8A17 2A A8 85     2 ld hl,(Posicion_inicio) 							; No hay (Posicion_actual), por lo que el objeto se está iniciando.
 15+  8A1A 22 98 85     	ld (Posicion_actual),hl							; Indicamos que (Posicion_actual) = (Posicion_inicio) y saltamos a la subrutina [Inicializacion], (donde asignaremos_
 16+  8A1D CD AC 8B     	call Inicializacion   							; _(Limite_horizontal), (Limite_vertical) y (Cuad_objeto). También asignaremos las coordenadas X e Y. (Posición 0,0)_
 17+  8A20              ;													; _la esquina superior izquierda de la pantalla.
 18+  8A20 CD 1A 94     	call Prepara_Puntero_mov 						; El objeto está inicializado. Antes de salir inicializamos tb el puntero de movimiento del objeto.
 19+  8A23 3A C3 85     1 ld a,(Ctrl_0)
 20+  8A26 CB 6F        	bit 5,a
 21+  8A28 20 06        	jr nz,3F										; Si acabamos de inicializar un objeto, NO COMPROBAMOS LÍMITES.
 22+  8A2A
 23+  8A2A CD 42 8A     	call Comprueba_limite_horizontal
 24+  8A2D CD D2 8A     	call Comprueba_limite_vertical
 25+  8A30
 26+  8A30              ; Llegados a este punto, tengo Filas/Columnas en BC y (Cuad_objeto) en A´.
 27+  8A30
 28+  8A30 CD 1F 8C     3 call calcula_CColumnass
 29+  8A33 CD 56 8C     	call Calcula_puntero_de_impresion				; Después de ejecutar esta rutina tenemos el puntero de impresión en HL.
 30+  8A36 CD AB 8C     	call Define_rutina_de_impresion
 31+  8A39
 32+  8A39 3A C3 85     	ld a,(Ctrl_0)									; Antes de salir de la rutina REStauramos el bit5 de Ctrl_0 para que nos vuelva_
 33+  8A3C CB AF        	res 5,a											; _a ser de utilidad.
 34+  8A3E 32 C3 85     	ld (Ctrl_0),a
 35+  8A41
 36+  8A41 C9           	ret
 37+  8A42
 38+  8A42              ; *******************************************************************************************************************************************************************************************
 39+  8A42              ;	21/01/23
 40+  8A42              ;
 41+  8A42              ; 	Comprueba_limite_horizontal.
 42+  8A42              ;
 43+  8A42              ;	La rutina comprueba si hemos sobrepasado el (Limite_horizontal) definido en la rutina [Inicializacion]. Este será:_
 44+  8A42              ;	_ $4fc0 si partimos de los cuadrantes 1 o 2 de pantalla o $4820 si partimos de los cuadrantes 3 o 4.
 45+  8A42              ;
 46+  8A42              ;	Si sobrepasamos o alcanzamos el límite horizontal establecido, la rutina cargará el registro E con un "1".
 47+  8A42              ;	Si NO HEMOS SOBREPASADO (Limite_horizontal), E="0".
 48+  8A42              ;	E="1" indica que HEMOS SOBREPASADO el (Limite_horizontal).
 49+  8A42              ;	E="2" indica que NO HEMOS SOBREPASADO el (Limite_horizontal) pero hemos alcanzado o superado EL CENTRO DE PANTALLA.
 50+  8A42
 51+  8A42
 52+  8A42
 53+  8A42 3A C3 85     Comprueba_limite_horizontal ld a,(Ctrl_0)          	; Si no hemos desaparecido por arriba o por abajo, saltamos a 1F para comprobar_
 54+  8A45 CB 57        	bit 2,a                                         ; _si hemos llegado o sobrepasado (Limite_horizontal). Seguimos con la rutina.
 55+  8A47 28 07        	jr z,1F                                         ; Si por el contrario hemos desaparecido por arriba o por abajo, (bit2/bit3 de (Ctrl_0)="1"))_
 56+  8A49 E6 FB        	and $fb 										; _hay que modificar el puntero de posición. (E="1" y salimos de la rutina). Antes inicializaremos los_
 57+  8A4B 32 C3 85     	ld (Ctrl_0),a 									; _ bits 2 y 3 de (Ctrl_0).
 58+  8A4E 18 09            jr 6F
 59+  8A50 CB 5F        1 bit 3,a
 60+  8A52 28 0A            jr z,2F
 61+  8A54 E6 F7            and $f7
 62+  8A56 32 C3 85         ld (Ctrl_0),a
 63+  8A59 CD AC 8B     6 call Inicializacion
 64+  8A5C 18 5B            jr 5F
 65+  8A5E E5           2 push hl						        			; Guardo (Posicion_actual), HL en la pila.
 66+  8A5F
 67+  8A5F              ; ----- ----- ----- ----- ----- ----- ----- ----- ----- -----
 68+  8A5F              ; Comprobamos si hemos llegado al (Limite_horizontal). E="0".
 69+  8A5F
 70+  8A5F EB           	ex de,hl 										; Averiguamos si hemos llegado o sobrepasado el (Limite_horizontal). Hemos simplificado la operación SBC_
 71+  8A60 2A CD 85     	ld hl,(Limite_horizontal) 						; _cargando el tercio de pantalla en el byte alto.
 72+  8A63 CD B1 8F     	call calcula_tercio 							; (Posicion_actual) - (Limite_horizontal).
 73+  8A66 67           	ld h,a
 74+  8A67 EB           	ex de,hl 										; ARRIBA a ABAJO .......... E="1" cuando ( Z y NC ).
 75+  8A68 CD B1 8F     	call calcula_tercio                             ; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ).
 76+  8A6B 67           	ld h,a
 77+  8A6C A7           	and a
 78+  8A6D ED 52        	sbc hl,de 										; Posicíon <"menos"> Límite.
 79+  8A6F 08           	ex af,af 										; Guardo el registro F con los flags resultantes de la operación SBC.
 80+  8A70 3A AA 85     	ld a,(Cuad_objeto)
 81+  8A73 FE 02        	cp 2
 82+  8A75 38 1E        	jr c,3F
 83+  8A77 28 1C        	jr z,3F
 84+  8A79 08           	ex af,af 										; Partimos de LA MITAD INFERIOR. Recupero resultado de (Posicíon - Límite) en AF.
 85+  8A7A 28 23            jr z,7F
 86+  8A7C 38 21            jr c,7F 										; ABAJO a ARRIBA .......... E="1" cuando ( Z y C ). HEMOS SOBREPASADO_
 87+  8A7E 1E 00         	ld e,0											; _ (Limite_horizontal), saltamos a 7F.
 88+  8A80 E1           	pop hl
 89+  8A81
 90+  8A81              ; Partimos de la mitad INFERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
 91+  8A81              ; _para indicar con E="2" en caso necesario.
 92+  8A81
 93+  8A81 E5               push hl
 94+  8A82 C5               push bc
 95+  8A83 CD B1 8F     	call calcula_tercio
 96+  8A86 FE 01        	cp 1
 97+  8A88 20 07        	jr nz,11F 										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
 98+  8A8A CD BA 8A         call Comprueba_centro 							; ABAJO A ARRIBA .......... E="2" cuando ( Z y C ).
 99+  8A8D 28 26            jr z,9F
100+  8A8F 38 24            jr c,9F
101+  8A91 1E 00        11 ld e,0
102+  8A93 18 22            jr 8F
103+  8A95 08           3 ex af,af 											; Partimos de LA MITAD SUPERIOR. Recupero resultado de (Posicíon - Límite) en AF.
104+  8A96 28 07        	jr z, 7F
105+  8A98 30 05        	jr nc, 7F										; E="1" cuando ( Z y NC ).
106+  8A9A 1E 00         	ld e,0
107+  8A9C E1           	pop hl
108+  8A9D 18 04        	jr 4F
109+  8A9F 1E 01        7 ld e,1 											; SOBREPASAMOS (Limite_horizontal) !!!. E="1", pop HL y RET.
110+  8AA1 18 15            jr 10F
111+  8AA3
112+  8AA3              ; Partimos de la mitad SUPERIOR de pantalla y `NO HEMOS´ superado (Limite_horizontal). Tenemos que averiguar si hemos superado el centro de pantalla_
113+  8AA3              ; _para indicar con E="2" en caso necesario.
114+  8AA3
115+  8AA3 E5           4 push hl
116+  8AA4 C5               push bc											; Guardamos (Posicion_actual) y (Filas/Columns) en la pila.
117+  8AA5 CD B1 8F     	call calcula_tercio
118+  8AA8 FE 01        	cp 1
119+  8AAA 20 0B        	jr nz,8F										; Sólo comprobamos la línea centro cuando nos encontramos en el 2º tercio de pantalla.
120+  8AAC CD BA 8A         call Comprueba_centro 							; ARRIBA a ABAJO .......... E="2" cuando ( Z y NC ).
121+  8AAF 28 04            jr z,9F
122+  8AB1 30 02            jr nc,9F
123+  8AB3 18 02        	jr 8F
124+  8AB5 1E 02        9 ld e,2
125+  8AB7 C1           8 pop bc
126+  8AB8 E1           10 pop hl
127+  8AB9 C9           5 ret
128+  8ABA
129+  8ABA              ; --------------------
130+  8ABA              ;
131+  8ABA              ; 25/08/22
132+  8ABA
133+  8ABA CD B1 8F     Comprueba_centro call calcula_tercio
134+  8ABD 67               ld h,a
135+  8ABE 08           	ex af,af
136+  8ABF FE 02        	cp 2
137+  8AC1 38 07        	jr c,1F
138+  8AC3 28 05        	jr z,1F
139+  8AC5 01 A0 01     	ld bc,$01a0 								  	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad inferior de la misma. !!!!!
140+  8AC8 18 03        	jr 2F
141+  8ACA 01 60 01     1 ld bc,$0160                                     	 ; ¡¡¡¡¡ CENTRO DE PANTALLA cuando estamos en la mitad superior de la misma. !!!!!
142+  8ACD 08           2 ex af,af
143+  8ACE A7               and a
144+  8ACF ED 42            sbc hl,bc
145+  8AD1 C9               ret
146+  8AD2
147+  8AD2              ; *********************************************************************************************************************************************************************************************
148+  8AD2              ;
149+  8AD2              ;   16/8/22
150+  8AD2              ;
151+  8AD2              ;	Comprueba_limite_vertical
152+  8AD2              ;
153+  8AD2              ;	Modifica el registro L del puntero de pantalla cuando se sobrepasa la columna límite, (Limite2).
154+  8AD2              ;	Dependiendo del cuadrante en el que nos encontremos, sumaremos o restaremos, (Columnas-1) a L.
155+  8AD2              ;
156+  8AD2
157+  8AD2 2A 98 85     Comprueba_limite_vertical ld hl,(Posicion_actual)
158+  8AD5 7D           	ld a,l
159+  8AD6 E6 1F        	and $1F
160+  8AD8 57           	ld d,a
161+  8AD9 3A CF 85     	ld a,(Limite_vertical)
162+  8ADC BA           	cp d 											; Límite - Posición.
163+  8ADD 08           	ex af,af 										; Resultado de CP d en F'.
164+  8ADE 3A AA 85     	ld a,(Cuad_objeto)								; Averiguamos en que cuadrante estamos.
165+  8AE1 CB 47        	bit 0,a
166+  8AE3 28 10        	jr z,1F 										; Si A´es PAR, estamos en el 2º o 4º cuadrante. Saltamos a [3F], (cuadrantes 2º y 4º).
167+  8AE5
168+  8AE5              ; Hemos comparado la posición Y de la entidad con (Limite_vertical) y estamos en la mitad IZQUIERDA de la pantalla.
169+  8AE5
170+  8AE5 08           	ex af,af 										; LADO IZQUIERDO !!!!!!!!!!
171+  8AE6 38 28        	jr c,4F 										; Superamos (lIMITE_VERTICAL) cuando hay "acarreo".
172+  8AE8
173+  8AE8              ; No hay cambio de cuadrante!!!!! Estamos en el lado izquierdo de la pantalla y no hemos sobrepasado (Limite_vertical).
174+  8AE8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
175+  8AE8
176+  8AE8 3A 9C 85         ld a,(Coordenada_X)
177+  8AEB 16 0F            ld d,Centro_izquierda
178+  8AED A7               and a
179+  8AEE 92               sub d 											 ; Posición - Centro_izquierda.
180+  8AEF 28 1E            jr z,3F
181+  8AF1 30 1C            jr nc,3F                                         ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
182+  8AF3              ;                                                    ; _salimos sin modificar nada.
183+  8AF3 18 0E            jr 2F
184+  8AF5 08           1 ex af,af 											 ; LADO DERECHO de la pantalla !!!!!!!!!!!
185+  8AF6 30 18        	jr nc,4F 										 ; Superamos (lIMITE_VERTICAL) cuando NC.
186+  8AF8
187+  8AF8              ; No hay cambio de cuadrante!!!!! Estamos en el lado derecho de la pantalla y no hemos sobrepasado (Limite_vertical).
188+  8AF8              ; Lo primero que haremos será comprobar si hemos llegado o superado el centro de la pantalla.
189+  8AF8
190+  8AF8 3A 9C 85         ld a,(Coordenada_X)
191+  8AFB 16 10            ld d,Centro_derecha
192+  8AFD A7               and a
193+  8AFE 92               sub d
194+  8AFF 28 0E            jr z,3F
195+  8B01 38 0C            jr c,3F                                          ; Si no hemos superado (Limite_vertical) pero si hemos superado el centro de la pantalla,_
196+  8B03              ;                                                    ; _salimos sin modificar nada.
197+  8B03 CB 43        2 bit 0,e
198+  8B05 28 08            jr z,3F 										 ; No hemos sobrepasado (Centro_izquierda). Si E="0", salimos sin modificar posición.
199+  8B07 C5           	push bc 										 ; Reservo (Filas) / (Columns) en la pila.
200+  8B08 CD 9C 8B         call Modificaccionne
201+  8B0B C1           	pop bc
202+  8B0C CD AC 8B         call Inicializacion
203+  8B0F C9           3 ret 				 								 ; Salimos de la rutina.
204+  8B10
205+  8B10              ; ----- ----- ----- Cambio de cuadrante ----- ----- -----
206+  8B10
207+  8B10 C5           4 push bc
208+  8B11 01 97 85     	ld bc,Columns 		 	 						 ; Cambio de cuadrante. Sobrepasamos (Limite_vertical).
209+  8B14 0A           	ld a,(bc)
210+  8B15 3D           	dec a
211+  8B16 47           	ld b,a 											 ; Columnas-1 en B.
212+  8B17 7D           	ld a,l
213+  8B18 08           	ex af,af                                         ; Cambio de cuadrante, estamos en la parte derecha de la pantalla.
214+  8B19 CB 47        	bit 0,a
215+  8B1B 28 03        	jr z,5F
216+  8B1D 08           	ex af,af 										 ; Estamos en la parte izquierda de la pantalla, (cuadrantes 1º o 3º). En ese caso, restamos (Columnas-1) a L.
217+  8B1E 18 2E        	jr 7F
218+  8B20
219+  8B20              ; Cambio de cuadrante, partimos de la parte DERECHA de la pantalla. Por el centro ?? o desaparecemos ??.
220+  8B20
221+  8B20 08           5 ex af,af 											 ; Estamos en la parte derecha de la pantalla, (cuadrantes 2º o 4º). En ese caso, sumamos (Columnas-1) a L.
222+  8B21 F5           	push af                                          ; Guardo la posición, (L), en la pila, (la contiene el acumulador).
223+  8B22 3A C3 85     	ld a,(Ctrl_0)
224+  8B25 CB 4F        	bit 1,a
225+  8B27 20 1D        	jr nz,6F                                         ; Cambio de cuadrante por desaparecer por la derecha!!!
226+  8B29 F1           	pop af                                           ; Cambio de cuadrante por desaparecer por el centro!!!
227+  8B2A
228+  8B2A              ; Hemos sobrepasado el (Limite_vertical) de la mitad derecha a la izquierda. Ahora necesitamos saber si E="0".
229+  8B2A
230+  8B2A 1C               inc e
231+  8B2B 1D               dec e
232+  8B2C 20 07            jr nz,12F
233+  8B2E 80           	add b 				 							 ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
234+  8B2F 6F               ld l,a	 										 ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
235+  8B30 22 98 85     	ld (Posicion_actual),hl
236+  8B33 18 44        13 jr 9F
237+  8B35 CB 43        12 bit 0,e
238+  8B37 20 03            jr nz,14F                                        ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
239+  8B39              ;                                                    ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
240+  8B39 C1           	pop bc
241+  8B3A 18 D3        	jr 3B
242+  8B3C 80           14 add b
243+  8B3D 6F               ld l,a
244+  8B3E 22 98 85     	ld (Posicion_actual),hl
245+  8B41 CD 9C 8B         call Modificaccionne                             ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
246+  8B44 18 33            jr 9F 											 ; _inicializamos y salimos.
247+  8B46 E6 FD        6 and $fd 											 ; Cambio de cuadrante por desaparecer por la derecha!!!. Reinicializo el bit 1 de (Ctrl_0).
248+  8B48 32 C3 85         ld (Ctrl_0),a
249+  8B4B F1           	pop af
250+  8B4C 18 2B        	jr 9F
251+  8B4E
252+  8B4E              ; Cambio de cuadrante, partimos de la parte IZQUIERDA de la pantalla. Por el centro ?? o desaparecemos ??.
253+  8B4E
254+  8B4E F5           7 push af
255+  8B4F 3A C3 85     	ld a,(Ctrl_0)
256+  8B52 CB 47        	bit 0,a
257+  8B54 20 1D        	jr nz,8F
258+  8B56 F1           	pop af
259+  8B57
260+  8B57              ; Hemos sobrepasado el (Limite_vertical) de la mitad IZQUIERDA a la DERECHA. Ahora necesitamos saber si E="0".
261+  8B57
262+  8B57 1C           	inc e
263+  8B58 1D               dec e
264+  8B59 20 07            jr nz,10F
265+  8B5B 90           	sub b
266+  8B5C 6F               ld l,a
267+  8B5D 22 98 85     	ld (Posicion_actual),hl
268+  8B60 18 17            jr 9F                                           ; Si hemos sobrepasado el (Limite_vertical) pero no hemos llegado al centro horizontal_
269+  8B62              ;                                                   ; _de la pantalla, E="0" modificamos L, Inicializamos el objeto y salimos.
270+  8B62 CB 43        10 bit 0,e
271+  8B64 20 03            jr nz,16F                                       ; Si hemos sobrepasado (Limite_vertical) y hemos llegado o superado_
272+  8B66              ;                                                   ; _el centro horizontal de la pantalla, E="2", salimos sin modificar nada.
273+  8B66 C1           	pop bc
274+  8B67 18 A6        	jr 3B
275+  8B69 90           16 sub b
276+  8B6A 6F               ld l,a
277+  8B6B 22 98 85     	ld (Posicion_actual),hl
278+  8B6E CD 9C 8B         call Modificaccionne                            ; Si hemos sobrepasado (Limite_vertical) y (Limite_horizontal), E="1". Modificamos HL,L,_
279+  8B71 18 06            jr 9F
280+  8B73 E6 FE        8 and $fe 											; ; Cambio de cuadrante por desaparecer por la izquierda !!!!!. Reinicializo el bit 0 de (Ctrl_0).
281+  8B75 32 C3 85         ld (Ctrl_0),a
282+  8B78 F1           	pop af
283+  8B79 C1           9 pop bc
284+  8B7A 1E 00        	ld e,0
285+  8B7C CD AC 8B         call Inicializacion
286+  8B7F F5               push af	 										; Antes de nada, guardo (Cuad_objeto) en A´ para acceder a él más rapido, (me va a hacer falta en la rutina calcolum).
287+  8B80 08           	ex af,af
288+  8B81 F1           	pop af 											; Ahora tengo (Cuad_objeto) en A y A´.
289+  8B82 18 8B            jr 3B
290+  8B84
291+  8B84              ; --------------------
292+  8B84
293+  8B84 06 0F        Modifica_Pos_actual ld b,15                                         ; Scanlines-1 en B.
294+  8B86 CD 00 8D     1 call PreviousScan
295+  8B89 10 FB            djnz 1B
296+  8B8B 22 98 85     	ld (Posicion_actual),hl
297+  8B8E AF           	xor a 											; Carry a "0". Evita que vuelva a entrar consecutivamente.
298+  8B8F C9           	ret
299+  8B90
300+  8B90              ; --------------------
301+  8B90
302+  8B90 06 0F        Modifica_Pos_actual2 ld b,15                                         ; Scanlines-1 en B.
303+  8B92 CD F1 8C     1 call NextScan
304+  8B95 10 FB            djnz 1B
305+  8B97 22 98 85     	ld (Posicion_actual),hl
306+  8B9A AF           	xor a 											; Fijo el acarreo a "0" para asegurarme de no volver a entrar en la rutina.
307+  8B9B C9           	ret
308+  8B9C
309+  8B9C              ; --------------------
310+  8B9C              ;
311+  8B9C              ;	22/01/23
312+  8B9C              ;
313+  8B9C              ;	E="1". Hemos cambiado de cuadrante.
314+  8B9C              ;	Si estamos en la mitad superior de pantalla: CALL [Modifica_Pos_actual].
315+  8B9C              ;	Si estamos en la mitad inferior de pantalla: CALL [Modifica_Pos_actual2].
316+  8B9C
317+  8B9C
318+  8B9C              Modificaccionne
319+  8B9C
320+  8B9C 3A AA 85     	ld a,(Cuad_objeto)
321+  8B9F FE 02        	cp 2
322+  8BA1 CC 84 8B         call z,Modifica_Pos_actual                      ; Si por el contrario estamos en la mitad inferior, call Modifica_Pos_actual2.
323+  8BA4 DC 84 8B         call c,Modifica_Pos_actual
324+  8BA7 C8           	ret z
325+  8BA8 CD 90 8B         call Modifica_Pos_actual2
326+  8BAB C9               ret
327+  8BAC
328+  8BAC              ; *************************************************************************************************************************************************************************************************
329+  8BAC              ;
330+  8BAC              ;	13/8/22
331+  8BAC              ;
332+  8BAC              ;	Inicializacion
333+  8BAC              ;
334+  8BAC              ;	Entrega "1", "2", "3" o "4" en (Cuad_objeto) en función del cuadrante de pantalla en el que nos encontremos.
335+  8BAC              ;	Fija los punteros del objeto a pintar, (varían en función del cuadrante en el que nos encontremos).
336+  8BAC              ;	También calcula los límites horizontal y vertical. Estos dependen del tamaño del objeto a imprimir.
337+  8BAC              ;
338+  8BAC              ; 	La rutina se ejecuta cada vez que el objeto supera el (Limite_horizontal) y el (Limite_vertical). Esto sucede_
339+  8BAC              ;	_ cada vez que el objeto supera el centro de la pantalla tanto en sentido horizontal como vertical y cuando_
340+  8BAC              ;	_ desaparece/aparece.
341+  8BAC
342+  8BAC              ;	[Puntero_datas]: Dirección de memoria donde se encuentra el 1er byte que pinta el objeto.
343+  8BAC              ;	[Puntero_attr_datas]: Dirección de memoria donde se encuentra el byte de atributos del objeto.
344+  8BAC              ;
345+  8BAC              ;	INPUT: [HL] contendrá la dirección de pantalla a la que queremos asignar cuadrante. HL=(Posicion_inicio).
346+  8BAC              ; 		   [BC] contendrá (Filas)/(Columns) del objeto a inicializar.
347+  8BAC              ; 		   [E] ="0"
348+  8BAC
349+  8BAC              ; 	OUTPUT: DESTRUYE [AF] y [D].
350+  8BAC
351+  8BAC CD B1 8F     Inicializacion call calcula_tercio
352+  8BAF 28 36        	jr z,primit
353+  8BB1 E6 02        	and 2
354+  8BB3 20 07        	jr nz,segmit
355+  8BB5 7D           	ld a,l
356+  8BB6 FE 7F        	cp $7f
357+  8BB8 38 2D        	jr c,primit
358+  8BBA 28 2B        	jr z,primit
359+  8BBC CD 19 8C     segmit call column
360+  8BBF 38 13        	jr c,tercuad
361+  8BC1 3E 04        cuarcuad ld a,4
362+  8BC3 32 AA 85     	ld (Cuad_objeto),a
363+  8BC6 21 20 48     	ld hl,$4820
364+  8BC9 22 CD 85     	ld (Limite_horizontal),hl
365+  8BCC 21 CF 85     	ld hl,Limite_vertical
366+  8BCF 36 0D        	ld (hl),$0d
367+  8BD1 08           	ex af,af
368+  8BD2 18 3C        	jr 1F
369+  8BD4              tercuad
370+  8BD4 3E 03        	ld a,3
371+  8BD6 32 AA 85     	ld (Cuad_objeto),a
372+  8BD9 21 20 48     	ld hl,$4820
373+  8BDC 22 CD 85     	ld (Limite_horizontal),hl
374+  8BDF 21 CF 85     	ld hl,Limite_vertical
375+  8BE2 36 12        	ld (hl),$12
376+  8BE4 08           	ex af,af
377+  8BE5 18 29        	jr 1F
378+  8BE7 CD 19 8C     primit call column
379+  8BEA 38 13        	jr c, primcuad
380+  8BEC              segcuad
381+  8BEC 3E 02        	ld a,2
382+  8BEE 32 AA 85     	ld (Cuad_objeto),a
383+  8BF1 21 C0 4F     	ld hl,$4fc0
384+  8BF4 22 CD 85     	ld (Limite_horizontal),hl
385+  8BF7 21 CF 85     	ld hl,Limite_vertical
386+  8BFA 36 0D        	ld (hl),$0d
387+  8BFC 08           	ex af,af
388+  8BFD 18 11        	jr 1F
389+  8BFF              primcuad
390+  8BFF 3E 01        	ld a,1
391+  8C01 32 AA 85     	ld (Cuad_objeto),a
392+  8C04 21 C0 4F     	ld hl,$4fc0
393+  8C07 22 CD 85     	ld (Limite_horizontal),hl
394+  8C0A 21 CF 85     	ld hl,Limite_vertical
395+  8C0D 36 12        	ld (hl),$12
396+  8C0F 08           	ex af,af
397+  8C10 CD E3 92     1 call Genera_coordenadas
398+  8C13 21 C3 85     	ld hl,Ctrl_0
399+  8C16 CB EE        	set 5,(hl)
400+  8C18 C9           	ret
401+  8C19
402+  8C19              ; ------------------------------------------------------------------------------------------------------------------
403+  8C19
404+  8C19              ; Esta pequeña subrutina determina el nº de columna en la que nos encontramos, Introducimos en A el valor absoluto de L, (0-31).
405+  8C19              ;
406+  8C19              ; OUTPUT: "FLAG C". Si se produce 1, nos encontramos en las primeras 16 columnas de pantalla, (cuadrantes 1 y 3). Si no es así, (cuadrantes 2 y 4).
407+  8C19
408+  8C19 7D           column ld a,l
409+  8C1A E6 1F        	and $1f
410+  8C1C FE 10         	cp $10
411+  8C1E C9            	ret
412+  8C1F
413+  8C1F              ; --------------------------------------------------------------------------------------------------------------------
414+  8C1F              ;
415+  8C1F              ; Esta subrutina se encarga de asignar valor a la variable (Columnas), (nº de columnas del objeto que podemos pintar).
416+  8C1F              ;
417+  8C1F              ; 14/12/22
418+  8C1F              ;
419+  8C1F              ;	Modifica: A y BC.
420+  8C1F
421+  8C1F 3A AA 85     calcula_CColumnass ld a,(Cuad_objeto)
422+  8C22 E6 01        	and 1
423+  8C24 28 17        	jr z,1F
424+  8C26
425+  8C26              ; Nos encontramos en la parte izquierda de la pantalla
426+  8C26
427+  8C26 3A 9C 85     	ld a,(Coordenada_X)
428+  8C29 47           	ld b,a
429+  8C2A 04           	inc b											; (Coordenada_X)+1 en B.
430+  8C2B 79           	ld a,c
431+  8C2C 90           	sub b											; (Columns)-[(Coordenada_X)+1] en A.
432+  8C2D 38 08        	jr c,2F
433+  8C2F 47           	ld b,a
434+  8C30 79           	ld a,c
435+  8C31 90           	sub b
436+  8C32 32 CC 85     	ld (Columnas),a
437+  8C35 18 1B        	jr 4F
438+  8C37 79           2 ld a,c
439+  8C38 32 CC 85     	ld (Columnas),a
440+  8C3B 18 15        	jr 4F
441+  8C3D
442+  8C3D              ; Nos encontramos en la parte derecha de la pantalla.
443+  8C3D
444+  8C3D 3A 9C 85     1 ld a,(Coordenada_X)
445+  8C40 81           	add c
446+  8C41 3D           	dec a
447+  8C42 D6 1F        	sub $1f
448+  8C44 38 08        	jr c,3F
449+  8C46 47           	ld b,a
450+  8C47 79           	ld a,c
451+  8C48 90           	sub b
452+  8C49 32 CC 85     	ld (Columnas),a
453+  8C4C 18 04        	jr 4F
454+  8C4E 79           3 ld a,c
455+  8C4F 32 CC 85     	ld (Columnas),a
456+  8C52 D9           4 exx
457+  8C53 4F           	ld c,a
458+  8C54 D9           	exx
459+  8C55 C9            ret
460+  8C56
461+  8C56              ; --------------------------------------------------------------------------------------------------------------------
462+  8C56              ;
463+  8C56              ; 7/1/23
464+  8C56              ;
465+  8C56              ;	Calcula el puntero de impresión del sprite, (arriba-izquierda).
466+  8C56              ;	Almacena en IY (Puntero_objeto). La rutina de impresión requiere de esta dirección para situar el SP a la hora de pintar.
467+  8C56              ;
468+  8C56              ;	OUTPUT: HL e IX Contienen el puntero de impresión.
469+  8C56              ;	DESTRUYE: HL,B Y A.
470+  8C56
471+  8C56 3A AA 85     Calcula_puntero_de_impresion ld a,(Cuad_objeto)
472+  8C59 FE 02        	cp 2
473+  8C5B 38 18        	jr c,1F
474+  8C5D 28 16        	jr z,1F
475+  8C5F E6 01        	and 1
476+  8C61 28 0D        	jr z,3F
477+  8C63
478+  8C63              ; Estamos situados en el 3er cuadrante de pantalla. ----- ----- -----
479+  8C63
480+  8C63 CD 9F 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
481+  8C66
482+  8C66 7D           9 ld a,l
483+  8C67 E6 1F        	and $1f
484+  8C69 28 2A        	jr z,7F
485+  8C6B 2B           	dec hl
486+  8C6C 10 F8        	djnz 9B
487+  8C6E 18 25        	jr 7F
488+  8C70
489+  8C70              ; Estamos situados en el 4º cuadrante de pantalla. ----- ----- -----
490+  8C70
491+  8C70 2A 98 85     3 ld hl,(Posicion_actual)
492+  8C73 18 20        	jr 7F
493+  8C75
494+  8C75 28 14        1 jr z,2F
495+  8C77
496+  8C77              ; Estamos situados en el 1er cuadrante de pantalla. ----- ----- -----
497+  8C77
498+  8C77 CD 9F 8C     	call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
499+  8C7A 7D           4 ld a,l
500+  8C7B E6 1F        	and $1f
501+  8C7D 28 03        	jr z,6F
502+  8C7F 2B           	dec hl
503+  8C80 10 F8        	djnz 4B
504+  8C82 06 0F        6 ld b,15
505+  8C84 CD 00 8D     5 call PreviousScan
506+  8C87 10 FB        	djnz 5B
507+  8C89 18 0A        	jr 7F
508+  8C8B
509+  8C8B              ; Estamos situados en el 2º cuadrante de pantalla. ----- ----- -----
510+  8C8B
511+  8C8B CD 9F 8C     2 call Operandos					; (Posicion_actual) en HL y (Columnas)-1 en B.
512+  8C8E 06 0F        	ld b,15
513+  8C90 CD 00 8D     8 call PreviousScan
514+  8C93 10 FB        	djnz 8B
515+  8C95
516+  8C95 E5           7 push hl
517+  8C96 DD E1        	pop ix
518+  8C98
519+  8C98 2A 9A 85     	ld hl,(Puntero_objeto)
520+  8C9B E5           	push hl
521+  8C9C FD E1        	pop iy
522+  8C9E
523+  8C9E C9           	ret
524+  8C9F
525+  8C9F              ; --------------------------------------------------------------------------------------------------------------------
526+  8C9F              ;
527+  8C9F              ;	2/1/23
528+  8C9F              ;
529+  8C9F              ;	Sub-rutina de [Calcula_puntero_de_impresion].
530+  8C9F              ;
531+  8C9F              ;	Tras esta rutina tenemos:
532+  8C9F              ;
533+  8C9F              ;	OUTPUT: HL contiene (Posicion_actual).
534+  8C9F              ;			B contiene (Columnas)-1. Nota: Este valor `nunca' será "0". El valor mínimo es "1".
535+  8C9F              ;
536+  8C9F              ;	DESTRUYE!!!!! HL,B y A.
537+  8C9F
538+  8C9F 2A 98 85     Operandos ld hl,(Posicion_actual)
539+  8CA2 3A CC 85     	ld a,(Columnas)
540+  8CA5 3D           	dec a
541+  8CA6 20 01        	jr nz,1F
542+  8CA8 3C           	inc a
543+  8CA9 47           1 ld b,a
544+  8CAA C9           	ret
545+  8CAB
546+  8CAB              ; --------------------------------------------------------------------------------------------------------------------
547+  8CAB              ;
548+  8CAB              ;	3/1/23
549+  8CAB              ;
550+  8CAB              ;	La Rutina entrega en HL la dirección de memoria donde se encuentra la rutina de impresión que debemos ejecutar.
551+  8CAB              ;
552+  8CAB              ;	Destruye: A,B,HL y DE.
553+  8CAB
554+  8CAB              Define_rutina_de_impresion
555+  8CAB
556+  8CAB 3A 97 85     	ld a,(Columns)
557+  8CAE 47           	ld b,a
558+  8CAF 3A CC 85     	ld a,(Columnas)
559+  8CB2 B8           	cp b
560+  8CB3 20 0D        	jr nz,2f
561+  8CB5
562+  8CB5              ;	La entidad se imprime entera.
563+  8CB5
564+  8CB5 21 81 8D     	ld hl, Indice_entidades_completas
565+  8CB8 E6 01        	and 1
566+  8CBA 28 02        	jr z,1F
567+  8CBC
568+  8CBC 23           	inc hl
569+  8CBD 23           	inc hl
570+  8CBE
571+  8CBE CD 86 87     1 call Extrae_address
572+  8CC1 C9           	ret		;	ret
573+  8CC2
574+  8CC2              ;	La entidad no se imprime entera en pantalla.
575+  8CC2
576+  8CC2 3A AA 85     2 ld a,(Cuad_objeto)
577+  8CC5 E6 01        	and 1
578+  8CC7 28 17        	jr z,3F
579+  8CC9
580+  8CC9              ; 	La entidad no se imprime entera en pantalla, nos encontramos en el extremo izquierdo de la misma.
581+  8CC9
582+  8CC9 21 85 8D     	ld hl, Indice_entidades_incompletas_izquierda
583+  8CCC 3A 97 85     4 ld a,(Columns)
584+  8CCF E6 01        	and 1
585+  8CD1 28 EB        	jr z,1B					; Sólo imprimimos 1 (Columnas) de un objeto de 2 Columns.
586+  8CD3
587+  8CD3 23           	inc hl
588+  8CD4 23           	inc hl
589+  8CD5
590+  8CD5 3A CC 85     	ld a,(Columnas)
591+  8CD8 E6 01        	and 1
592+  8CDA 20 E2        	jr nz,1B				; Sólo imprimimos 1 (Columnas) de un objeto de 3 Columns.
593+  8CDC
594+  8CDC 23           	inc hl
595+  8CDD 23           	inc hl
596+  8CDE
597+  8CDE 18 DE        	jr 1B					; Sólo imprimimos 2 (Columnas) de un objeto de 3 Columns.
598+  8CE0
599+  8CE0 21 8B 8D     3 ld hl, Indice_entidades_incompletas_derecha
600+  8CE3 18 E7        	jr 4B
601+  8CE5
602+  8CE5              ; --------------------------------------------------------------------------------------------------------------------
603+  8CE5              ;
604+  8CE5              ;	Prepara_draw
605+  8CE5              ;
606+  8CE5              ;	Es una rutina de carga.
607+  8CE5              ;	Carga los registros BC,HL y E para posteriormente llamar a la rutina de pintado [DRAW].
608+  8CE5              ;
609+  8CE5              ;	FUNCIONAMIENTO:
610+  8CE5              ;
611+  8CE5              ;	- LD (Filas/Columns) del objeto a pintar en [BC].
612+  8CE5              ;	- LD (Posicion_actual) del objeto en [HL].
613+  8CE5              ;	- LD E,0. (Dígito de control utilizado por Draw para cálculos internos de la rutina. Ha de estar a "0").
614+  8CE5              ;
615+  8CE5              ;	DESTRUYE:
616+  8CE5              ;
617+  8CE5              ;	Logicamente, BC,HL y E quedan destruidos.
618+  8CE5
619+  8CE5 21 96 85     Prepara_draw ld hl,Filas 		 					 					 ; Prepara los registros BC, E y HL.
620+  8CE8 46           	ld b,(hl) 														     ; Carga Filas/Columns del objeto a pintar o inicializar en BC.
621+  8CE9 23           	inc hl 												 				 ; Carga (Posicion_actual) en HL.
622+  8CEA 4E           	ld c,(hl)
623+  8CEB 2A 98 85     	ld hl,(Posicion_actual)
624+  8CEE 1E 00        	ld e,0 																 ; Byte de control. Ha de estar a "0" cuando llamamos a [DRAW].
625+  8CF0 C9           	ret
626+  8CF1
627+  8CF1              ;----------------------------------------------------------------------------------------------------------------
628+  8CF1              ;
629+  8CF1              ;	5/08/22
630+  8CF1              ;
631+  8CF1              ;   NextScan.
632+  8CF1              ;
633+  8CF1              ;   Calcula la dirección de mem. de pantalla donde se sitúa el siguiente scanline. (Inc H, línea abajo).
634+  8CF1              ;
635+  8CF1              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el siguiente scanline.
636+  8CF1              ;
637+  8CF1              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
638+  8CF1              ;
639+  8CF1              ;       DESTRUIDOS: AF y HL !!!
640+  8CF1              ;
641+  8CF1              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
642+  8CF1              ;
643+  8CF1
644+  8CF1 24           NextScan inc h          ; Incrementamos el scanline.
645+  8CF2 7C               ld a,h
646+  8CF3 E6 07            and 7
647+  8CF5 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
648+  8CF6
649+  8CF6 7D           	ld a,l              ; Scanlines a "0", cambiamos de tercio. (Siempre que estemos en la última línea, LLL).
650+  8CF7 C6 20            add a,$20           ; Vamos a comprobarlo...
651+  8CF9 6F               ld l,a
652+  8CFA D8               ret c               ; Salimos si se produce el cambio de tercio.
653+  8CFB
654+  8CFB 7C               ld a,h              ; No estamos en la última línea del tercio, por lo que inicializamos H restando una_
655+  8CFC D6 08            sub 8               ; _unidad a los bits que definen el tercio TT, (sub $08).
656+  8CFE 67               ld h,a
657+  8CFF C9               ret
658+  8D00
659+  8D00              ;----------------------------------------------------------------------------------------------------------------
660+  8D00              ;
661+  8D00              ;	5/08/22
662+  8D00              ;
663+  8D00              ;   PreviousScan.
664+  8D00              ;
665+  8D00              ;   Calcula la dirección de mem. de pantalla donde se sitúa el scanline anterior. (Dec H, línea arriba).
666+  8D00              ;
667+  8D00              ;   INPUT: HL contendra la dirección de mem. de video sobre la que queremos calcular el scanline anterior.
668+  8D00              ;
669+  8D00              ;   OUTPUT: HL contendrá la nueva dirección de memoria de pantalla.
670+  8D00              ;
671+  8D00              ;       DESTRUIDOS: AF y HL !!!
672+  8D00              ;
673+  8D00              ;   010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
674+  8D00              ;
675+  8D00
676+  8D00 7C           PreviousScan ld a,h
677+  8D01 25               dec h               ; Dec H.
678+  8D02 E6 07            and 7
679+  8D04 C0               ret nz              ; Salimos de la rutina si el scanline se encuentra entre (1-7).
680+  8D05
681+  8D05 7D               ld a,l              ; Estabamos en el scanline "0" y al decrementar nos situamos en el "7" y cambiamos de tercio.
682+  8D06 D6 20            sub $20             ; Vamos a comprobarlo...
683+  8D08 6F               ld l,a
684+  8D09 D8               ret c               ; Salimos si estábamos en la primera línea y se produce el cambio de tercio.
685+  8D0A
686+  8D0A 7C               ld a,h              ; No estamos en la primera línea del tercio, por lo que inicializamos H sumando una_
687+  8D0B C6 08            add a,8             ; _unidad a los bits que definen el tercio TT, (add a,$08).
688+  8D0D 67               ld h,a
689+  8D0E C9               ret
690+  8D0F
691+  8D0F              ; -----------------------------------------------------------------------------------
692+  8D0F              ;
693+  8D0F              ;	28/2/23
694+  8D0F              ;
695+  8D0F              ;	Rutina principal de pintado de entidades/Amadeus.
696+  8D0F              ;	Extrae fotos de Album_de_fotos.
697+  8D0F
698+  8D0F 3A D8 85     Extrae_foto_registros ld a,(Numero_de_malotes)
699+  8D12 A7           	and a
700+  8D13 C8           	ret z
701+  8D14 ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
702+  8D18 31 00 70     	ld sp,Album_de_fotos
703+  8D1B
704+  8D1B FD E1        2 pop iy																	; (Puntero_objeto) en IY.
705+  8D1D E1           	pop hl																	; Puntero de impresión de pantalla en HL.
706+  8D1E D1           	pop de																	; Dirección de la rutina de impresión en DE.
707+  8D1F
708+  8D1F ED 73 DB 85  	ld (Stack_2),sp
709+  8D23 ED 7B D9 85  	ld sp,(Stack)
710+  8D27
711+  8D27              ; Fabrica la llamada a la correspondiente rutina de impresión.
712+  8D27
713+  8D27 3E CD        	ld a,$cd
714+  8D29 32 31 8D     	ld (Imprime),a
715+  8D2C EB           	ex de,hl
716+  8D2D 22 32 8D     	ld (Imprime+1),hl
717+  8D30 EB           	ex de,hl
718+  8D31
719+  8D31              ; Ejecuta la llamada:	CALL $xx,xx
720+  8D31
721+  8D31 00 00 00     Imprime db 0,0,0
722+  8D34
723+  8D34 3A D8 85     	ld a,(Numero_de_malotes)
724+  8D37 3D           	dec a
725+  8D38 28 09        	jr z,1F
726+  8D3A 32 D8 85      	ld (Numero_de_malotes),a
727+  8D3D
728+  8D3D ED 7B DB 85   	ld sp,(Stack_2)
729+  8D41 18 D8        	jr 2B
730+  8D43
731+  8D43 AF           1 xor a
732+  8D44 32 DB 85     	ld (Stack_2),a
733+  8D47 C9           	ret
734+  8D48
735+  8D48              ; -----------------------------------------------------------------------------------
736+  8D48              ;
737+  8D48              ;	28/2/23
738+  8D48              ;
739+  8D48              ;	Pinta los disparos generados.
740+  8D48
741+  8D48              Extrae_foto_disparos
742+  8D48
743+  8D48 3A E5 85     	ld a,(Numero_de_disparotes)
744+  8D4B A7           	and a
745+  8D4C C8           	ret z
746+  8D4D ED 73 D9 85  	ld (Stack),sp															; Guardo el puntero de pila y lo sitúo al principio del Album_de_fotos
747+  8D51 31 60 70     	ld sp,Album_de_fotos_disparos
748+  8D54
749+  8D54 FD E1        2 pop iy																	; (Puntero_objeto) en IY.
750+  8D56 E1           	pop hl																	; Puntero de impresión de pantalla en HL.
751+  8D57 D1           	pop de																	; Dirección de la rutina de impresión en DE.
752+  8D58
753+  8D58 ED 73 DB 85  	ld (Stack_2),sp
754+  8D5C ED 7B D9 85  	ld sp,(Stack)
755+  8D60
756+  8D60              ; Fabrica la llamada a la correspondiente rutina de impresión.
757+  8D60
758+  8D60 3E CD        	ld a,$cd
759+  8D62 32 6A 8D     	ld (Imprime2),a
760+  8D65 EB           	ex de,hl
761+  8D66 22 6B 8D     	ld (Imprime2+1),hl
762+  8D69 EB           	ex de,hl
763+  8D6A
764+  8D6A              ; Ejecuta la llamada:	CALL $xx,xx
765+  8D6A
766+  8D6A 00 00 00     Imprime2 db 0,0,0
767+  8D6D
768+  8D6D 3A E5 85     	ld a,(Numero_de_disparotes)
769+  8D70 3D           	dec a
770+  8D71 28 09        	jr z,1F
771+  8D73 32 E5 85      	ld (Numero_de_disparotes),a
772+  8D76
773+  8D76 ED 7B DB 85  	ld sp,(Stack_2)
774+  8D7A 18 D8        	jr 2B
775+  8D7C
776+  8D7C AF           1 xor a
777+  8D7D 32 DB 85     	ld (Stack_2),a
778+  8D80 C9           	ret
779+  8D81
# file closed: Draw_XOR.asm
835   8D81              	include "Rutinas_de_impresion_sprites.asm"
# file opened: Rutinas_de_impresion_sprites.asm
  1+  8D81              ;   índices de Rutinas de impresión.
  2+  8D81
  3+  8D81 91 8D        Indice_entidades_completas defw Pinta_Amadeus_2x2
  4+  8D83 BE 8D            defw Pinta_Amadeus_3x2
  5+  8D85
  6+  8D85 14 8E        Indice_entidades_incompletas_izquierda defw Pinta_enemigo_2x2_izquierda
  7+  8D87 B4 8E            defw Pinta_enemigo_3x2_izquierda_1columna
  8+  8D89 68 8E            defw Pinta_enemigo_3x2_izquierda_2columnas
  9+  8D8B
 10+  8D8B 3E 8E        Indice_entidades_incompletas_derecha defw Pinta_enemigo_2x2_derecha
 11+  8D8D 42 8F            defw Pinta_enemigo_3x2_derecha_1columna
 12+  8D8F F6 8E            defw Pinta_enemigo_3x2_derecha_2columnas
 13+  8D91
 14+  8D91
 15+  8D91              ;   Conjunto de rutinas de impresión de Sprites.
 16+  8D91              ;
 17+  8D91              ;   12/12/22
 18+  8D91              ;
 19+  8D91              ;   Inputs: HL contiene (Posicion_actual) de la entidad.
 20+  8D91              ;           B contendrá: el nº de scanlines que `podemos´ imprimir en pantalla. (ENTIDAD DE 2X2).
 21+  8D91              ;                        LA MITAD del nº de scanlines que `podemos´imprimir en pantalla. (ENTIDAD DE 3X2).
 22+  8D91              ;           El puntero de pila apuntará a la dirección de mem. que contenga la variable (Puntero_datas).
 23+  8D91              ;
 24+  8D91              ;   Modifica: DE y HL.
 25+  8D91
 26+  8D91 ED 73 D9 85  Pinta_Amadeus_2x2 ld (Stack),sp
 27+  8D95 FD F9        	ld sp,iy
 28+  8D97 06 10            ld b,16
 29+  8D99 D1           1 pop de
 30+  8D9A 7B               ld a,e
 31+  8D9B AE               xor (hl)
 32+  8D9C 77           	ld (hl),a
 33+  8D9D 23           	inc hl
 34+  8D9E 7A               ld a,d
 35+  8D9F AE               xor (hl)
 36+  8DA0 77           	ld (hl),a
 37+  8DA1 2B           	dec hl
 38+  8DA2 24           	inc h
 39+  8DA3 7C               ld a,h
 40+  8DA4 E6 07            and 7
 41+  8DA6 20 0A            jr nz,2F
 42+  8DA8 7D               ld a,l
 43+  8DA9 C6 20            add a,$20
 44+  8DAB 6F               ld l,a
 45+  8DAC 38 04            jr c,2F
 46+  8DAE 7C               ld a,h
 47+  8DAF D6 08            sub 8
 48+  8DB1 67               ld h,a
 49+  8DB2 7C           2 ld a,h
 50+  8DB3 FE 58            cp $58
 51+  8DB5 28 02            jr z,3F
 52+  8DB7 10 E0            djnz 1B
 53+  8DB9 ED 7B D9 85  3 ld sp,(Stack)
 54+  8DBD C9           	ret
 55+  8DBE
 56+  8DBE ED 73 D9 85  Pinta_Amadeus_3x2 ld (Stack),sp
 57+  8DC2 FD F9        	ld sp,iy
 58+  8DC4 06 08            ld b,8
 59+  8DC6 D1           1 pop de
 60+  8DC7 7B               ld a,e
 61+  8DC8 AE               xor (hl)
 62+  8DC9 77           	ld (hl),a
 63+  8DCA 23           	inc hl
 64+  8DCB 7A               ld a,d
 65+  8DCC AE               xor (hl)
 66+  8DCD 77           	ld (hl),a
 67+  8DCE 23           	inc hl
 68+  8DCF D1           	pop de
 69+  8DD0 7B               ld a,e
 70+  8DD1 AE               xor (hl)
 71+  8DD2 77           	ld (hl),a
 72+  8DD3 2B           	dec hl
 73+  8DD4 2B           	dec hl
 74+  8DD5 24           	inc h
 75+  8DD6 7C               ld a,h
 76+  8DD7 E6 07            and 7
 77+  8DD9 20 0A            jr nz,2F
 78+  8DDB 7D               ld a,l
 79+  8DDC C6 20            add a,$20
 80+  8DDE 6F               ld l,a
 81+  8DDF 38 04            jr c,2F
 82+  8DE1 7C               ld a,h
 83+  8DE2 D6 08            sub 8
 84+  8DE4 67               ld h,a
 85+  8DE5 7C           2 ld a,h
 86+  8DE6 FE 58            cp $58
 87+  8DE8 28 25            jr z,4F
 88+  8DEA 7A               ld a,d
 89+  8DEB AE               xor (hl)
 90+  8DEC 77               ld (hl),a
 91+  8DED D1           	pop de
 92+  8DEE 23           	inc hl
 93+  8DEF 7B               ld a,e
 94+  8DF0 AE               xor (hl)
 95+  8DF1 77           	ld (hl),a
 96+  8DF2 23           	inc hl
 97+  8DF3 7A               ld a,d
 98+  8DF4 AE               xor (hl)
 99+  8DF5 77           	ld (hl),a
100+  8DF6 2B           	dec hl
101+  8DF7 2B           	dec hl
102+  8DF8 24           	inc h
103+  8DF9 7C               ld a,h
104+  8DFA E6 07            and 7
105+  8DFC 20 0A            jr nz,3F
106+  8DFE 7D               ld a,l
107+  8DFF C6 20            add a,$20
108+  8E01 6F               ld l,a
109+  8E02 38 04            jr c,3F
110+  8E04 7C               ld a,h
111+  8E05 D6 08            sub 8
112+  8E07 67               ld h,a
113+  8E08 7C           3 ld a,h
114+  8E09 FE 58            cp $58
115+  8E0B 28 02            jr z,4F
116+  8E0D 10 B7            djnz 1B
117+  8E0F ED 7B D9 85  4 ld sp,(Stack)
118+  8E13 C9           	ret
119+  8E14
120+  8E14              ; ---------------------------------------------------
121+  8E14
122+  8E14 ED 73 D9 85  Pinta_enemigo_2x2_izquierda ld (Stack),sp
123+  8E18 FD F9        	ld sp,iy
124+  8E1A
125+  8E1A              ; >>>
126+  8E1A
127+  8E1A 06 10            ld b,16
128+  8E1C D1           1 pop de
129+  8E1D 7A           	ld a,d
130+  8E1E AE           	xor (hl)
131+  8E1F 77           	ld (hl),a
132+  8E20 24           	inc h
133+  8E21 7C               ld a,h
134+  8E22 E6 07            and 7
135+  8E24 20 0C            jr nz,2F
136+  8E26 7D               ld a,l
137+  8E27 C6 20            add a,$20
138+  8E29 6F               ld l,a
139+  8E2A 38 06            jr c,2F
140+  8E2C 7C               ld a,h
141+  8E2D D6 08            sub 8
142+  8E2F 67               ld h,a
143+  8E30 18 00            jr 2F
144+  8E32 7C           2 ld a,h
145+  8E33 FE 58            cp $58
146+  8E35 28 02            jr z,3F
147+  8E37 10 E3            djnz 1B
148+  8E39 ED 7B D9 85  3 ld sp,(Stack)
149+  8E3D C9           	ret
150+  8E3E
151+  8E3E ED 73 D9 85  Pinta_enemigo_2x2_derecha ld (Stack),sp
152+  8E42 FD F9        	ld sp,iy
153+  8E44
154+  8E44              ; >>>
155+  8E44
156+  8E44 06 10            ld b,16
157+  8E46 D1           1 pop de
158+  8E47 7B           	ld a,e
159+  8E48 AE           	xor (hl)
160+  8E49 77           	ld (hl),a
161+  8E4A 24           	inc h
162+  8E4B 7C               ld a,h
163+  8E4C E6 07            and 7
164+  8E4E 20 0C            jr nz,2F
165+  8E50 7D               ld a,l
166+  8E51 C6 20            add a,$20
167+  8E53 6F               ld l,a
168+  8E54 38 06            jr c,2F
169+  8E56 7C               ld a,h
170+  8E57 D6 08            sub 8
171+  8E59 67               ld h,a
172+  8E5A 18 00            jr 2F
173+  8E5C 7C           2 ld a,h
174+  8E5D FE 58            cp $58
175+  8E5F 28 02            jr z,3F
176+  8E61 10 E3            djnz 1B
177+  8E63 ED 7B D9 85  3 ld sp,(Stack)
178+  8E67 C9           	ret
179+  8E68
180+  8E68              ; ---------------------------------------------------
181+  8E68
182+  8E68 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_2columnas ld (Stack),sp
183+  8E6C FD F9        	ld sp,iy
184+  8E6E 06 08            ld b,8
185+  8E70 D1           1 pop de
186+  8E71 7A           	ld a,d
187+  8E72 AE           	xor (hl)
188+  8E73 77           	ld (hl),a
189+  8E74 23           	inc hl
190+  8E75 D1           	pop de
191+  8E76 7B           	ld a,e
192+  8E77 AE           	xor (hl)
193+  8E78 77           	ld (hl),a
194+  8E79 2B           	dec hl
195+  8E7A 24            	inc h
196+  8E7B 7C               ld a,h
197+  8E7C E6 07            and 7
198+  8E7E 20 0A            jr nz,2F
199+  8E80 7D               ld a,l
200+  8E81 C6 20            add a,$20
201+  8E83 6F               ld l,a
202+  8E84 38 04            jr c,2F
203+  8E86 7C               ld a,h
204+  8E87 D6 08            sub 8
205+  8E89 67               ld h,a
206+  8E8A 7C           2 ld a,h
207+  8E8B FE 58            cp $58
208+  8E8D 28 20            jr z,4F
209+  8E8F D1               pop de
210+  8E90 7B           	ld a,e
211+  8E91 AE           	xor (hl)
212+  8E92 77           	ld (hl),a
213+  8E93 23           	inc hl
214+  8E94 7A           	ld a,d
215+  8E95 AE           	xor (hl)
216+  8E96 77           	ld (hl),a
217+  8E97 2B           	dec hl
218+  8E98 24           	inc h
219+  8E99 7C               ld a,h
220+  8E9A E6 07            and 7
221+  8E9C 20 0A            jr nz,3F
222+  8E9E 7D               ld a,l
223+  8E9F C6 20            add a,$20
224+  8EA1 6F               ld l,a
225+  8EA2 38 04            jr c,3F
226+  8EA4 7C               ld a,h
227+  8EA5 D6 08            sub 8
228+  8EA7 67               ld h,a
229+  8EA8 7C           3 ld a,h
230+  8EA9 FE 58            cp $58
231+  8EAB 28 02            jr z,4F
232+  8EAD 10 C1            djnz 1B
233+  8EAF ED 7B D9 85  4 ld sp,(Stack)
234+  8EB3 C9           	ret
235+  8EB4
236+  8EB4 ED 73 D9 85  Pinta_enemigo_3x2_izquierda_1columna ld (Stack),sp
237+  8EB8 FD F9        	ld sp,iy
238+  8EBA 06 08            ld b,8
239+  8EBC D1           1 pop de
240+  8EBD D1           	pop de
241+  8EBE 7B           	ld a,e
242+  8EBF AE           	xor (hl)
243+  8EC0 77           	ld (hl),a
244+  8EC1 24            	inc h
245+  8EC2 7C               ld a,h
246+  8EC3 E6 07            and 7
247+  8EC5 20 0A            jr nz,2F
248+  8EC7 7D               ld a,l
249+  8EC8 C6 20            add a,$20
250+  8ECA 6F               ld l,a
251+  8ECB 38 04            jr c,2F
252+  8ECD 7C               ld a,h
253+  8ECE D6 08            sub 8
254+  8ED0 67               ld h,a
255+  8ED1 7C           2 ld a,h
256+  8ED2 FE 58            cp $58
257+  8ED4 28 1B            jr z,4F
258+  8ED6 D1               pop de
259+  8ED7 7A           	ld a,d
260+  8ED8 AE           	xor (hl)
261+  8ED9 77           	ld (hl),a
262+  8EDA 24           	inc h
263+  8EDB 7C               ld a,h
264+  8EDC E6 07            and 7
265+  8EDE 20 0A            jr nz,3F
266+  8EE0 7D               ld a,l
267+  8EE1 C6 20            add a,$20
268+  8EE3 6F               ld l,a
269+  8EE4 38 04            jr c,3F
270+  8EE6 7C               ld a,h
271+  8EE7 D6 08            sub 8
272+  8EE9 67               ld h,a
273+  8EEA 7C           3 ld a,h
274+  8EEB FE 58            cp $58
275+  8EED 28 02            jr z,4F
276+  8EEF 10 CB            djnz 1B
277+  8EF1 ED 7B D9 85  4 ld sp,(Stack)
278+  8EF5 C9           	ret
279+  8EF6
280+  8EF6 ED 73 D9 85  Pinta_enemigo_3x2_derecha_2columnas ld (Stack),sp
281+  8EFA FD F9        	ld sp,iy
282+  8EFC 06 08            ld b,8
283+  8EFE D1           1 pop de
284+  8EFF 7B           	ld a,e
285+  8F00 AE           	xor (hl)
286+  8F01 77           	ld (hl),a
287+  8F02 23           	inc hl
288+  8F03 7A           	ld a,d
289+  8F04 AE           	xor (hl)
290+  8F05 77           	ld (hl),a
291+  8F06 2B           	dec hl
292+  8F07 24             	inc h
293+  8F08 7C               ld a,h
294+  8F09 E6 07            and 7
295+  8F0B 20 0A            jr nz,2F
296+  8F0D 7D               ld a,l
297+  8F0E C6 20            add a,$20
298+  8F10 6F               ld l,a
299+  8F11 38 04            jr c,2F
300+  8F13 7C               ld a,h
301+  8F14 D6 08            sub 8
302+  8F16 67               ld h,a
303+  8F17 7C           2 ld a,h
304+  8F18 FE 58            cp $58
305+  8F1A 28 21            jr z,4F
306+  8F1C D1               pop de
307+  8F1D 7A           	ld a,d
308+  8F1E AE           	xor (hl)
309+  8F1F 77           	ld (hl),a
310+  8F20 23           	inc hl
311+  8F21 D1               pop de
312+  8F22 7B           	ld a,e
313+  8F23 AE           	xor (hl)
314+  8F24 77           	ld (hl),a
315+  8F25 2B           	dec hl
316+  8F26 24           	inc h
317+  8F27 7C               ld a,h
318+  8F28 E6 07            and 7
319+  8F2A 20 0A            jr nz,3F
320+  8F2C 7D               ld a,l
321+  8F2D C6 20            add a,$20
322+  8F2F 6F               ld l,a
323+  8F30 38 04            jr c,3F
324+  8F32 7C               ld a,h
325+  8F33 D6 08            sub 8
326+  8F35 67               ld h,a
327+  8F36 7C           3 ld a,h
328+  8F37 FE 58            cp $58
329+  8F39 28 02            jr z,4F
330+  8F3B 10 C1            djnz 1B
331+  8F3D ED 7B D9 85  4 ld sp,(Stack)
332+  8F41 C9           	ret
333+  8F42
334+  8F42 ED 73 D9 85  Pinta_enemigo_3x2_derecha_1columna ld (Stack),sp
335+  8F46 FD F9        	ld sp,iy
336+  8F48 06 08            ld b,8
337+  8F4A D1           1 pop de
338+  8F4B 7B           	ld a,e
339+  8F4C AE           	xor (hl)
340+  8F4D 77           	ld (hl),a
341+  8F4E 24            	inc h
342+  8F4F 7C               ld a,h
343+  8F50 E6 07            and 7
344+  8F52 20 0A            jr nz,2F
345+  8F54 7D               ld a,l
346+  8F55 C6 20            add a,$20
347+  8F57 6F               ld l,a
348+  8F58 38 04            jr c,2F
349+  8F5A 7C               ld a,h
350+  8F5B D6 08            sub 8
351+  8F5D 67               ld h,a
352+  8F5E 7C           2 ld a,h
353+  8F5F FE 58            cp $58
354+  8F61 28 1C            jr z,4F
355+  8F63 D1               pop de
356+  8F64 7A           	ld a,d
357+  8F65 AE           	xor (hl)
358+  8F66 77           	ld (hl),a
359+  8F67 24           	inc h
360+  8F68 7C               ld a,h
361+  8F69 E6 07            and 7
362+  8F6B 20 0A            jr nz,3F
363+  8F6D 7D               ld a,l
364+  8F6E C6 20            add a,$20
365+  8F70 6F               ld l,a
366+  8F71 38 04            jr c,3F
367+  8F73 7C               ld a,h
368+  8F74 D6 08            sub 8
369+  8F76 67               ld h,a
370+  8F77 7C           3 ld a,h
371+  8F78 FE 58            cp $58
372+  8F7A 28 03            jr z,4F
373+  8F7C D1               pop de
374+  8F7D 10 CB            djnz 1B
375+  8F7F ED 7B D9 85  4 ld sp,(Stack)
376+  8F83 C9           	ret
377+  8F84
378+  8F84              ; ---------------------------------------------------
379+  8F84              ;
380+  8F84              ;   27/02/23
381+  8F84              ;
382+  8F84              ;   Rutina idéntica a Pinta_Amadeus_2x2, sólo difiere de esta en el nº de scanlines_
383+  8F84              ;   _ que imprime. No utilizamos [Pinta_Amadeus_2x2] porque cuando el programa está_
384+  8F84              ;   _ imprimiendo elementos, no discrimina el tipo de Sprite que está pintando.
385+  8F84
386+  8F84 ED 73 D9 85  Pinta_Disparo ld (Stack),sp
387+  8F88 FD F9            ld sp,iy
388+  8F8A 06 02            ld b,2
389+  8F8C D1           1 pop de
390+  8F8D 7B               ld a,e
391+  8F8E AE               xor (hl)
392+  8F8F 77               ld (hl),a
393+  8F90 23               inc hl
394+  8F91 7A               ld a,d
395+  8F92 AE               xor (hl)
396+  8F93 77               ld (hl),a
397+  8F94 2B               dec hl
398+  8F95 24               inc h
399+  8F96 7C               ld a,h
400+  8F97 E6 07            and 7
401+  8F99 20 0A            jr nz,2F
402+  8F9B 7D               ld a,l
403+  8F9C C6 20            add a,$20
404+  8F9E 6F               ld l,a
405+  8F9F 38 04            jr c,2F
406+  8FA1 7C               ld a,h
407+  8FA2 D6 08            sub 8
408+  8FA4 67               ld h,a
409+  8FA5 7C           2 ld a,h
410+  8FA6 FE 58            cp $58
411+  8FA8 28 02            jr z,3F
412+  8FAA 10 E0            djnz 1B
413+  8FAC ED 7B D9 85  3 ld sp,(Stack)
414+  8FB0 C9               ret
415+  8FB1
# file closed: Rutinas_de_impresion_sprites.asm
836   8FB1              	include "calcula_tercio.asm"
# file opened: calcula_tercio.asm
  1+  8FB1              ; ******************************************* Indica el tercio de pantalla en el que nos encontramos según el valor del registro H ********************************************************
  2+  8FB1              ;
  3+  8FB1              ;	NOTA: Entrega "0", "1" o "2" en A en función del tercio en el que nos encontremos.
  4+  8FB1              ;
  5+  8FB1              ; *****************************************************************************************************************************************************************************************
  6+  8FB1              ; 010T TSSS LLLC CCCC (Codificación de la memoria de pantalla). $4000 - $57FF, (256 x 192 pixeles).
  7+  8FB1
  8+  8FB1 7C           calcula_tercio ld a,h
  9+  8FB2 E6 18        	and $18
 10+  8FB4 CB 2F        	sra a
 11+  8FB6 CB 2F        	sra a
 12+  8FB8 CB 2F        	sra a
 13+  8FBA C9           	ret
 14+  8FBB
# file closed: calcula_tercio.asm
837   8FBB              	include "Cls.asm"
# file opened: Cls.asm
  1+  8FBB              ; *********************************** Limpia la pantalla, CLEAR SCREEN ****************************************************************
  2+  8FBB              ;
  3+  8FBB              ;
  4+  8FBB              ;	CLS.
  5+  8FBB              ;
  6+  8FBB              ;	Limpia la pantalla y define sus atributos.
  7+  8FBB              ;	El formato: FBPPPIII (Flash, Brillo, Papel, Tinta).
  8+  8FBB              ;
  9+  8FBB              ;	COLORES: 0 ..... NEGRO
 10+  8FBB              ;    		 1 ..... AZUL
 11+  8FBB              ; 			 2 ..... ROJO
 12+  8FBB              ;			 3 ..... MAGENTA
 13+  8FBB              ; 			 4 ..... VERDE
 14+  8FBB              ; 			 5 ..... CIAN
 15+  8FBB              ;			 6 ..... AMARILLO
 16+  8FBB              ; 			 7 ..... BLANCO
 17+  8FBB              ;
 18+  8FBB              ;	INPUT: A contiene los atributos de pantalla.
 19+  8FBB              ;
 20+  8FBB              ;	DESTRUIDOS: F,BC,DE,HL !!!!!
 21+  8FBB
 22+  8FBB
 23+  8FBB 21 00 40     Cls LD HL,$4000											; HL => Comienzo de pantalla.
 24+  8FBE 11 01 40     	LD DE,$4001
 25+  8FC1 01 00 18     	LD BC,6144											; Tamaño de la pantalla, $17ff
 26+  8FC4 36 00        	LD (HL),0 											; Ponemos a "0" todos los pixels de la pantalla.
 27+  8FC6 ED B0        	LDIR
 28+  8FC8 01 FF 02     	LD BC,767
 29+  8FCB 77           	LD (HL),a						 					; Atributos de pantalla, % 00 xxx xxx en [A].
 30+  8FCC ED B0        	LDIR
 31+  8FCE C9           	ret
 32+  8FCF
# file closed: Cls.asm
838   8FCF              	include "Direcciones.asm"
# file opened: Direcciones.asm
  1+  8FCF              ; ******************************************************************************************************************************************************************************************
  2+  8FCF              ;
  3+  8FCF              ;   22/01/23
  4+  8FCF              ;
  5+  8FCF              ;	Mov_down
  6+  8FCF              ;
  7+  8FCF              ; 	Mueve el Sprite X px hacia abajo.
  8+  8FCF              ;
  9+  8FCF              ;
 10+  8FCF 21 C3 85     Mov_down ld hl,Ctrl_0
 11+  8FD2 CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 12+  8FD4              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 13+  8FD4              ; 																	; _ en el caso de que no lo haya.
 14+  8FD4 3A AE 85     	ld a,(Vel_down)
 15+  8FD7 47           	ld b,a
 16+  8FD8 2A 98 85         ld hl,(Posicion_actual)
 17+  8FDB CD B1 8F     2 call calcula_tercio 												; Averiguamos el tercio de pantalla en el que nos encontramos.
 18+  8FDE E6 02        	and 2
 19+  8FE0 28 0F        	jr z,1F
 20+  8FE2
 21+  8FE2              ; Nos encontramos en el último tercio de pantalla.
 22+  8FE2              ; Averiguamos si estamos en el último scanline de la última línea de pantalla.
 23+  8FE2
 24+  8FE2 7C           	ld a,h
 25+  8FE3 FE 57        	cp $57
 26+  8FE5 20 0A        	jr nz,1F
 27+  8FE7 7D           	ld a,l
 28+  8FE8 C6 20        	add $20
 29+  8FEA 30 05        	jr nc,1F
 30+  8FEC
 31+  8FEC              ; ------------------------------
 32+  8FEC CD CD 92     	call Reaparece_arriba
 33+  8FEF              ;	call Reinicio
 34+  8FEF              ; ------------------------------
 35+  8FEF 18 08        	jr 3F
 36+  8FF1 CD F1 8C     1 call NextScan
 37+  8FF4 22 98 85     	ld (Posicion_actual),hl
 38+  8FF7 10 E2            djnz 2B
 39+  8FF9 CD E3 92     3 call Genera_coordenadas
 40+  8FFC C9           	ret
 41+  8FFD
 42+  8FFD
 43+  8FFD              ; ******************************************************************************************************************************************************************************************
 44+  8FFD              ;
 45+  8FFD              ;   22/01/23
 46+  8FFD              ;
 47+  8FFD              ;	Mov_up
 48+  8FFD              ;
 49+  8FFD              ; 	Mueve el Sprite hacia arriba.
 50+  8FFD              ;
 51+  8FFD              ;
 52+  8FFD 21 C3 85     Mov_up ld hl,Ctrl_0
 53+  9000 CB E6        	set 4,(hl) 															; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 54+  9002              ; 																		; _esta información para evitar que la entidad se vuelva borrar/pintar_
 55+  9002              ; 																		; _ en el caso de que no lo haya.
 56+  9002 3A AD 85     	ld a,(Vel_up)
 57+  9005 47           	ld b,a
 58+  9006 2A 98 85     	ld hl,(Posicion_actual)
 59+  9009 CD B1 8F     3 call calcula_tercio 													; Si no estamos en el 1er tercio de la pantalla no nos preocupamos de la reaparición.
 60+  900C A7           	and a
 61+  900D 20 10        	jr nz,1F
 62+  900F
 63+  900F              ; Nos encontramos en el 1er tercio de pantalla.
 64+  900F              ; Averiguamos si estamos en el primer scanline de la primera línea de pantalla.
 65+  900F
 66+  900F 7C               ld a,h 																; Si estamos en el 1er tercio de pantalla pero no nos encontramos en el 1er scanline_
 67+  9010 FE 40            cp $40 																; _del mismo, podemos seguir subiendo.
 68+  9012 20 0B            jr nz,1F
 69+  9014 7D               ld a,l
 70+  9015 D6 20            sub $20
 71+  9017 30 06            jr nc,1F
 72+  9019 25               dec h
 73+  901A
 74+  901A              ; -----------------------------
 75+  901A CD BD 92         call Reaparece_abajo                                                ; El objeto ha desaparecido por la parte superior de la pantalla, H="$3f". Hacemos llamada a _
 76+  901D              ;	call Reinicio
 77+  901D              ; -----------------------------
 78+  901D
 79+  901D 18 08            jr 2F                                                               ; _ [Reaparece_abajo] para preparar la `reaparición´ por la parte inferior.
 80+  901F CD 00 8D     1 call PreviousScan
 81+  9022 22 98 85     	ld (Posicion_actual),hl
 82+  9025 10 E2            djnz 3B
 83+  9027 CD E3 92     2 call Genera_coordenadas
 84+  902A C9           	ret
 85+  902B
 86+  902B              ; ******************************************************************************************************************************************************************************************
 87+  902B              ;
 88+  902B              ;	19/10/22
 89+  902B              ;
 90+  902B              ;	Mov_right.
 91+  902B              ;
 92+  902B              ; 	Desplaza el Sprite (x)Pixels a la derecha.
 93+  902B              ;
 94+  902B
 95+  902B 21 C3 85     Mov_right ld hl,Ctrl_0
 96+  902E CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
 97+  9030              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
 98+  9030              ; 																	; _ en el caso de que no lo haya.
 99+  9030 3A C3 85     	ld a,(Ctrl_0)
100+  9033 CB 77        	bit 6,a
101+  9035 28 06        	jr z,10F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que no hemos llegado al char.30 de la línea, [Stop_Amadeus].
102+  9037
103+  9037 CD 6B 92     	call Stop_Amadeus_right
104+  903A C8           	ret z 															; Salimos de Mov_right si hemos llegado al char.30.
105+  903B 18 4D        	jr 8F
106+  903D
107+  903D 3A 9C 85     10 ld a,(Coordenada_X)	 	  										; Estamos en el char. 31?
108+  9040 FE 1F        	cp 31															; Si no es así, saltamos a [3] para seguir con el desplazamiento progrmado.
109+  9042 20 46        	jr nz,8F
110+  9044
111+  9044 3A 9E 85     	ld a,(CTRL_DESPLZ) 		 										; Estamos en el último char. de la línea. Si (CTRL_DESPLZ)="0" saltamos a_
112+  9047 A7           	and a 															; _[3] para continuar con el DESPLZ.
113+  9048 28 40        	jr z,8F
114+  904A
115+  904A              ; ---------- ---------- ----------
116+  904A              ;
117+  904A              ;	Estamos en el último char. de la fila y (CTRL_DESPLZ) es distinto de "0".
118+  904A
119+  904A 3A AC 85     	ld a,(Vel_right) 												; En función del factor de velocidad, iniciaremos la salida de la pantalla,_									;
120+  904D FE 02        	cp 2 															; _(Reaparece_izquierda), cuando (CTRL_DESPLZ) alcance un valor determinado.
121+  904F 28 11        	jr z,1F
122+  9051 38 06        	jr c,6F
123+  9053 FE 04        	cp 4
124+  9055 28 14        	jr z,7F
125+  9057 18 FE        	jr $ 															; Sólo se permite velocidad 1,2,4 y 8.
126+  9059
127+  9059              ; ---------- ---------- ----------
128+  9059              ;
129+  9059              ; Perfiles de velocidad
130+  9059              ;
131+  9059
132+  9059 3A 9E 85     6 ld a,(CTRL_DESPLZ) 											; Velocidad 1
133+  905C FE FE        	cp $fe
134+  905E 20 2A        	jr nz,8F
135+  9060 18 10        	jr 3F
136+  9062 3A 9E 85     1 ld a,(CTRL_DESPLZ) 											; Velocidad 2
137+  9065 FE FD        	cp $fd
138+  9067 20 21        	jr nz,8F
139+  9069 18 07        	jr 3F
140+  906B 3A 9E 85     7 ld a,(CTRL_DESPLZ) 											; Velocidad 4
141+  906E FE FB        	cp $fb
142+  9070 20 18        	jr nz,8F
143+  9072
144+  9072              ; ---------- ---------- ----------
145+  9072
146+  9072              3
147+  9072 CD AB 92     	call Reaparece_izquierda 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
148+  9075              ;	call Reinicio
149+  9075
150+  9075              ; ---------- ---------- ----------
151+  9075              ;
152+  9075              ;	Esta parte de la rutina se encarga de hacer que el Sprite aparezca pixel a pixel por la izquierda.
153+  9075
154+  9075 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
155+  9077 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
156+  9078 CD 91 90     	call DESPLZ_DER
157+  907B C1           	pop bc
158+  907C 10 F9        	djnz 5B
159+  907E 2A 98 85     	ld hl,(Posicion_actual) 										; Decrementamos su posición actual, pués al desplazarlo a la derecha, volvemos a incrementar el nº de (Columns) y _
160+  9081 2B           	dec hl 															; _ (Posicion_actual) ha pasado de $00 a $01.
161+  9082 22 98 85     	ld (Posicion_actual),hl
162+  9085 CD E3 92     	call Genera_coordenadas
163+  9088 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
164+  908A
165+  908A              ; ---------- ---------- ----------
166+  908A
167+  908A 2A 98 85     8 ld hl,(Posicion_actual)
168+  908D CD 91 90     	call DESPLZ_DER
169+  9090 C9           2 ret
170+  9091
171+  9091              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
172+  9091              ;
173+  9091              ;	22/9/22
174+  9091              ;
175+  9091
176+  9091 CD A0 90     DESPLZ_DER call Desplaza_derecha
177+  9094 CD EC 90         call modifica_parametros_1er_DESPLZ_2
178+  9097 CD 15 91         call Ciclo_completo
179+  909A 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la derecha.
180+  909D CB FE        	set 7,(hl)
181+  909F C9           	ret
182+  90A0
183+  90A0              ; ******************************************************************************************************************************************************************************************
184+  90A0              ;	15/02/23
185+  90A0              ;
186+  90A0
187+  90A0 3A AC 85     Desplaza_derecha ld a,(Vel_right)
188+  90A3 47           	ld b,a
189+  90A4 2A A4 85     	ld hl,(Puntero_DESPLZ_der)
190+  90A7 23           1 inc hl
191+  90A8 23           	inc hl
192+  90A9 10 FC        	djnz 1B 														; (Vel_right) indica cuantas posiciones desplazaremos el (Puntero_DESPLZ)_
193+  90AB 22 A4 85     	ld (Puntero_DESPLZ_der),hl 										; _por el índice del Sprite.
194+  90AE CD 86 87     	call Extrae_address
195+  90B1 22 9A 85     	ld (Puntero_objeto),hl
196+  90B4
197+  90B4              ; Modifica (Puntero_DESPLZ_izq).
198+  90B4
199+  90B4              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la derecha.
200+  90B4              ; Cuántos movimientos hemos hecho ??
201+  90B4              ; DE contiene (Puntero_DESPLZ_der).
202+  90B4
203+  90B4 2A A0 85     7 ld hl,(Indice_Sprite_der)
204+  90B7 EB           	ex de,hl
205+  90B8 A7           	and a
206+  90B9 ED 52        	sbc hl,de
207+  90BB CB 3D        	srl l
208+  90BD 3E 08        6 ld a,8
209+  90BF 95           	sub l
210+  90C0 30 1E        	jr nc,3F
211+  90C2
212+  90C2              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_der) dentro del mismo.
213+  90C2              ; B="0".
214+  90C2
215+  90C2 04           4 inc b
216+  90C3 3C           	inc a
217+  90C4 20 FC        	jr nz,4B
218+  90C6 78           	ld a,b
219+  90C7 08           	ex af,af
220+  90C8 2A A0 85     	ld hl,(Indice_Sprite_der)
221+  90CB 23           5 inc hl
222+  90CC 23           	inc hl
223+  90CD 10 FC        	djnz 5B
224+  90CF 22 A4 85     	ld (Puntero_DESPLZ_der),hl
225+  90D2 CD 86 87     	call Extrae_address
226+  90D5 22 9A 85     	ld (Puntero_objeto),hl
227+  90D8
228+  90D8              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
229+  90D8              ; _(Posicion_actual).
230+  90D8
231+  90D8 21 98 85     	ld hl,Posicion_actual
232+  90DB 34           	inc (hl)
233+  90DC 08               ex af,af
234+  90DD 6F           	ld l,a
235+  90DE 18 DD        	jr 6B
236+  90E0
237+  90E0              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
238+  90E0
239+  90E0 47           3 ld b,a
240+  90E1 2A A2 85     	ld hl,(Indice_Sprite_izq)
241+  90E4 23           2 inc hl
242+  90E5 23           	inc hl
243+  90E6 10 FC        	djnz 2B
244+  90E8 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
245+  90EB C9           8 ret
246+  90EC
247+  90EC              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
248+  90EC              ;
249+  90EC              ;	24/7/22
250+  90EC              ;
251+  90EC              ;	modifica_parametros_1er_DESPLZ_2
252+  90EC              ;
253+  90EC              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
254+  90EC              ; 	También incrementa el byte de control de desplazamiento, (desplz. a derecha) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
255+  90EC              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
256+  90EC
257+  90EC 3A 9E 85     modifica_parametros_1er_DESPLZ_2 ld a,(CTRL_DESPLZ)		 		  ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
258+  90EF A7           	and a
259+  90F0 20 1F        	jr nz,1F
260+  90F2 D6 09            sub 9                							              ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
261+  90F4 32 9E 85         ld (CTRL_DESPLZ),a
262+  90F7
263+  90F7 21 97 85     	ld hl,Columns
264+  90FA 34           	inc (hl)
265+  90FB 3A AA 85     	ld a,(Cuad_objeto)
266+  90FE E6 01        	and 1
267+  9100 28 0F        	jr z,1F
268+  9102 2A 98 85     	ld hl,(Posicion_actual) 									  ; Incrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
269+  9105 23           	inc hl 														  ; _ cuadrantes 1 y 3 de pantalla.
270+  9106 22 98 85     	ld (Posicion_actual),hl
271+  9109 CD E3 92     	call Genera_coordenadas
272+  910C CD 77 92     	call Inc_CTRL_DESPLZ
273+  910F 18 03        	jr 2F
274+  9111 CD 77 92     1 call Inc_CTRL_DESPLZ
275+  9114 C9           2 ret
276+  9115
277+  9115              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
278+  9115              ;
279+  9115              ;	24/7/22
280+  9115              ;
281+  9115              ;	Ciclo_completo.
282+  9115              ;
283+  9115              ;	FUNCIONAMIENTO: Si (CTRL_DESPLZ)="$ff" significa que nos hemos desplazado 1 char.
284+  9115              ;
285+  9115              ;	En ese caso, inicializamos (CTRL_DESPLZ). (CTRL_DESPLZ)="0".
286+  9115              ; 	Decrementamos (Columns).
287+  9115              ;	Modificamos (Posicion_actual) en función del cuadrante en el que nos encontremos.
288+  9115              ;	Borramos la caja de desplazamientos, call Limpia_caja_de_DESPLZ.
289+  9115
290+  9115
291+  9115 3A 9E 85     Ciclo_completo ld a,(CTRL_DESPLZ)
292+  9118 FE FF        	cp $ff
293+  911A 28 10        	jr z,1F 												     ; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
294+  911C E6 F0        	and $f0
295+  911E 20 28        	jr nz,3F
296+  9120
297+  9120              ; (CTRL_DESPLZ) fuera de rango, (por encima de $ff), hay que reajustar.
298+  9120
299+  9120 3A 9E 85     	ld a,(CTRL_DESPLZ)
300+  9123 47           	ld b,a
301+  9124 3E F8        	ld a,$f8
302+  9126 80           	add b
303+  9127 32 9E 85     	ld (CTRL_DESPLZ),a
304+  912A 18 1C        	jr 3F
305+  912C 21 97 85     1 ld hl,Columns													 ; Tras 8 desplazamientos el objeto desplazado es igual al original.
306+  912F 35           	dec (hl) 													 ; Decrementamos el nº de (Columns).
307+  9130 AF           	xor a 														 ; Reiniciamos (CTRL_DESPLZ).
308+  9131 32 9E 85     	ld (CTRL_DESPLZ),a
309+  9134 3A AA 85     	ld a,(Cuad_objeto) 											 ; Si estamos situados en el cuadrante 1º o 3º de la pantalla no modificamos_
310+  9137 E6 01        	and 1 														 ; _(Posicion_actual). Limpiamos la (Caja_de_DESPLZ) y salimos.
311+  9139 20 0A        	jr nz,2F
312+  913B 2A 98 85     	ld hl,(Posicion_actual)                                      ; Incrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
313+  913E 23           	inc hl
314+  913F 22 98 85     	ld (Posicion_actual),hl
315+  9142 CD E3 92     	call Genera_coordenadas
316+  9145
317+  9145              ; Inicia el puntero de Sprite.
318+  9145
319+  9145 CD 9D 87     2 call Inicia_puntero_objeto_der
320+  9148 C9           3 ret
321+  9149
322+  9149              ; ******************************************************************************************************************************************************************************************
323+  9149              ;
324+  9149              ;	15/02/23
325+  9149              ;
326+  9149              ;	Mov_left.
327+  9149              ;
328+  9149              ; 	Desplaza el Sprite (x)Pixels a la izquierda.
329+  9149              ;
330+  9149              Mov_left
331+  9149
332+  9149 21 C3 85     	ld hl,Ctrl_0
333+  914C CB E6        	set 4,(hl) 														; Indicamos con el Bit4 de (Ctrl_0) que hay movimiento. Vamos a utilizar_
334+  914E              ; 																	; _esta información para evitar que la entidad se vuelva borrar/pintar_
335+  914E              ; 																	; _ en el caso de que no lo haya.
336+  914E 3A C3 85     	ld a,(Ctrl_0)
337+  9151 CB 77        	bit 6,a
338+  9153 28 06        	jr z,11F 														; Estamos moviendo Amadeus???????. Si es así hemos de comprobar que que no hemos llegado al char.1 de la línea, [Stop_Amadeus].
339+  9155
340+  9155 CD 71 92     	call Stop_Amadeus_left
341+  9158 C8           	ret z
342+  9159 20 50        	jr nz,8F
343+  915B
344+  915B 3A 9C 85     11 ld a,(Coordenada_X)
345+  915E A7           	and a
346+  915F 20 4A        	jr nz,8F
347+  9161
348+  9161 3A 9E 85     	ld a,(CTRL_DESPLZ) 			 									; Si el Sprite no está en el 1er char de la línea, (desaparece por la izquierda), o estando en este, _
349+  9164 A7           	and a 															; _ (CTRL_DESPLZ)="0", cargamos HL con la (Posicion_actual) y ejecutamos la rutina de desplazamiento, _
350+  9165 28 44        	jr z,8F 														; _ pués aún podemos desplazarlo antes de desaparecer.
351+  9167
352+  9167              ; ---------- ---------- ----------
353+  9167
354+  9167 3A AB 85     	ld a,(Vel_left)
355+  916A FE 02        	cp 2
356+  916C 28 0F        	jr z,1F
357+  916E 38 04        	jr c,6F
358+  9170 FE 04        	cp 4
359+  9172 28 12        	jr z,7F
360+  9174
361+  9174              ; ---------- ---------- ----------
362+  9174
363+  9174 3A 9E 85     6 ld a,(CTRL_DESPLZ)
364+  9177 FE F9        	cp $f9
365+  9179 20 30        	jr nz,8F
366+  917B 18 10        	jr 4F
367+  917D 3A 9E 85     1 ld a,(CTRL_DESPLZ)
368+  9180 FE FA        	cp $fa
369+  9182 20 27        	jr nz,8F
370+  9184 18 07        	jr 4F
371+  9186 3A 9E 85     7 ld a,(CTRL_DESPLZ)
372+  9189 FE FC        	cp $fc
373+  918B 20 1E        	jr nz,8F
374+  918D
375+  918D              ; ---------- ---------- ----------
376+  918D
377+  918D              4
378+  918D CD 99 92     	call Reaparece_derecha 											; Despues de haber actualizado la coordenada X del Sprite, (de 0 a 31). Si el movimiento es al char. _
379+  9190              ;	call Reinicio
380+  9190
381+  9190              ; ---------- ---------- ----------
382+  9190
383+  9190 06 02        	ld b,2 															; Para hacer que el objeto aparezca poco a poco, hemos de desplazarlo 2 veces: El primer desplazamiento_
384+  9192 C5           5 push bc 															; _pone (CTRL_DESPLZ) a "0" y el segundo a "$ff". Con esto hacemos que el Sprite tenga espacio en blanco delante_
385+  9193
386+  9193 2A A2 85     	ld hl,(Indice_Sprite_izq)
387+  9196 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
388+  9199
389+  9199 CD B2 91     	call DESPLZ_IZQ
390+  919C C1           	pop bc
391+  919D 10 F3        	djnz 5B
392+  919F 2A 98 85     	ld hl,(Posicion_actual) 										; Incrementamos su posición actual, pués al desplazarlo a la izquierda, volvemos a incrementar el nº de (Columns) y _
393+  91A2 23           	inc hl 															; _ (Posicion_actual) ha pasado de $1f a $1e.
394+  91A3 22 98 85     	ld (Posicion_actual),hl
395+  91A6 CD E3 92     	call Genera_coordenadas
396+  91A9 18 06        	jr 2F 															; Salimos para pintar la nueva posición.
397+  91AB
398+  91AB              ; ---------- ---------- ----------
399+  91AB              ; Movemos, no hay recolocación.
400+  91AB
401+  91AB 2A 98 85     8 ld hl,(Posicion_actual)
402+  91AE CD B2 91     	call DESPLZ_IZQ
403+  91B1 C9           2 ret
404+  91B2
405+  91B2              ; ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
406+  91B2              ;
407+  91B2              ;	22/9/22
408+  91B2
409+  91B2              DESPLZ_IZQ
410+  91B2
411+  91B2 CD C1 91     	call Desplaza_izquierda
412+  91B5 CD 0D 92         call modifica_parametros_1er_DESPLZ
413+  91B8 CD 35 92     	call Ciclo_completo_2
414+  91BB 21 C3 85     	ld hl,Ctrl_0 													; Indica que nos hemos desplazado a la izquierda
415+  91BE CB BE        	res 7,(hl)
416+  91C0 C9           	ret
417+  91C1
418+  91C1              Desplaza_izquierda
419+  91C1
420+  91C1 3A AB 85     	ld a,(Vel_left)
421+  91C4 47           	ld b,a
422+  91C5 2A A6 85     	ld hl,(Puntero_DESPLZ_izq)
423+  91C8 23           1 inc hl
424+  91C9 23           	inc hl
425+  91CA 10 FC        	djnz 1B 														; Seleccionamos FRAME en función de la velocidad del Sprite.
426+  91CC 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
427+  91CF CD 86 87     	call Extrae_address
428+  91D2 22 9A 85     	ld (Puntero_objeto),hl
429+  91D5
430+  91D5              ; Modifica (Puntero_DESPLZ_der).
431+  91D5
432+  91D5              ; Vamos a descontar a "8" el nº de movimientos que hemos efectuado a la izq.
433+  91D5              ; Cuántos movimientos hemos hecho ??
434+  91D5              ; DE contiene (Puntero_DESPLZ_izq).
435+  91D5
436+  91D5 2A A2 85     7 ld hl,(Indice_Sprite_izq)
437+  91D8 EB           	ex de,hl
438+  91D9 A7           	and a
439+  91DA ED 52        	sbc hl,de
440+  91DC CB 3D        	srl l
441+  91DE 3E 08        6 ld a,8
442+  91E0 95           	sub l
443+  91E1 30 1E        	jr nc,3F
444+  91E3
445+  91E3              ; Hemos salido del índice. Hay que ajustar (Puntero_DESPLZ_izq) dentro del mismo.
446+  91E3              ; B="0".
447+  91E3
448+  91E3 04           4 inc b
449+  91E4 3C           	inc a
450+  91E5 20 FC        	jr nz,4B
451+  91E7 78           	ld a,b
452+  91E8 08           	ex af,af
453+  91E9 2A A2 85     	ld hl,(Indice_Sprite_izq)
454+  91EC 23           5 inc hl
455+  91ED 23           	inc hl
456+  91EE 10 FC        	djnz 5B
457+  91F0 22 A6 85     	ld (Puntero_DESPLZ_izq),hl
458+  91F3 CD 86 87     	call Extrae_address
459+  91F6 22 9A 85     	ld (Puntero_objeto),hl
460+  91F9
461+  91F9              ; Si nos hemos salido del índice es porque hemos completado un ciclo completo. Habrá que actualizar_
462+  91F9              ; _(Posicion_actual).
463+  91F9
464+  91F9 21 98 85     	ld hl,Posicion_actual
465+  91FC 35           	dec (hl)
466+  91FD 08           	ex af,af
467+  91FE 6F           	ld l,a
468+  91FF 18 DD        	jr 6B
469+  9201
470+  9201              ; Permanecemos en el índice. No hay que reajustar (Puntero_DESPLZ_izq).
471+  9201
472+  9201 47           3 ld b,a
473+  9202 2A A0 85     	ld hl,(Indice_Sprite_der)
474+  9205 23           2 inc hl
475+  9206 23           	inc hl
476+  9207 10 FC        	djnz 2B
477+  9209 22 A4 85     	ld (Puntero_DESPLZ_der),hl
478+  920C C9           8 ret
479+  920D
480+  920D              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
481+  920D              ;
482+  920D              ;	modifica_parametros_1er_DESPLZ
483+  920D              ;
484+  920D              ;	La rutina modifica el nº de columnas del objeto en el 1er desplazamiento.
485+  920D              ; 	También decrementa el byte de control de desplazamiento, (desplz. a izq) y modifica la posición de (Puntero_datas) en función del cuadrante de pantalla en el que nos encontremos.
486+  920D              ; 	Si el desplazamiento se produce en el 2º o 4º cuadrante, la rutina decrementará (Posicion_actual).
487+  920D
488+  920D 3A 9E 85     modifica_parametros_1er_DESPLZ ld a,(CTRL_DESPLZ) 				    ; Incrementamos el nª de (Columns) cuando desplazamos el objeto por 1ª vez.
489+  9210 A7           	and a
490+  9211 20 1E        	jr nz,1F
491+  9213 3D               dec a              							            	    ; Situamos en $f7 el valor de partida de (CTRL_DESPLZ) tras el 1er desplazamiento.
492+  9214 32 9E 85         ld (CTRL_DESPLZ),a
493+  9217 21 97 85     	ld hl,Columns
494+  921A 34           	inc (hl)
495+  921B 3A AA 85     	ld a,(Cuad_objeto)
496+  921E E6 01        	and 1
497+  9220 20 0F        	jr nz,1F
498+  9222 2A 98 85     	ld hl,(Posicion_actual) 									    ; Decrementamos 1 char. el valor de (Posicion_actual), la primera vez que desplazamos el objeto y se encuentra en los _
499+  9225 2B           	dec hl 														    ; _ cuadrantes 2 y 4 de pantalla.
500+  9226 22 98 85     	ld (Posicion_actual),hl
501+  9229 CD E3 92     	call Genera_coordenadas
502+  922C CD 88 92     	call Dec_CTRL_DESPLZ
503+  922F 18 03        	jr 2F
504+  9231 CD 88 92     1 call Dec_CTRL_DESPLZ
505+  9234 C9           2 ret
506+  9235
507+  9235              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
508+  9235
509+  9235 3A 9E 85     Ciclo_completo_2 ld a,(CTRL_DESPLZ)
510+  9238 FE F7        	cp $f7
511+  923A 28 12        	jr z,1F 												   		; Salimos de la rutina si no hemos completado 8 o más desplazamientos.
512+  923C 30 2C        	jr nc,3F
513+  923E
514+  923E              ; (CTRL_DESPLZ) fuera de rango, (por debajo de $f7), hay que reajustar.
515+  923E
516+  923E 06 00        	ld b,0
517+  9240 04           4 inc b
518+  9241 3C           	inc a
519+  9242 FE F7        	cp $f7
520+  9244 20 FA        	jr nz,4B
521+  9246 3E FF        	ld a,$ff
522+  9248 90           	sub b
523+  9249 32 9E 85     	ld (CTRL_DESPLZ),a
524+  924C 18 1C        	jr 3F
525+  924E
526+  924E              ; Se completa el ciclo de movimiento. (CTRL_DESPLZ)="0", se generan coordenadas y se corrige (Posicion_actual).
527+  924E
528+  924E 21 97 85     1 ld hl,Columns
529+  9251 35           	dec (hl)
530+  9252 AF           	xor a
531+  9253 32 9E 85     	ld (CTRL_DESPLZ),a
532+  9256 3A AA 85     	ld a,(Cuad_objeto)
533+  9259 E6 01        	and 1
534+  925B 28 0A        	jr z,2F
535+  925D 2A 98 85     	ld hl,(Posicion_actual)                                         ; Decrementamos (Posicion_actual) en los cuadrantes 2º y 4º.
536+  9260 2B           	dec hl
537+  9261 22 98 85     	ld (Posicion_actual),hl
538+  9264 CD E3 92     	call Genera_coordenadas
539+  9267
540+  9267              ; Inicia (Puntero_DESPLZ_izq) y (Puntero_objeto).
541+  9267
542+  9267 CD B0 87     2 call Inicia_puntero_objeto_izq
543+  926A C9           3 ret
544+  926B
545+  926B              ; ---------- ---------- ---------- ---------- ---------- ----------
546+  926B              ;
547+  926B              ;	19/10/22
548+  926B              ;
549+  926B              ;	(cp 29) para un Amadeus de 3 Columns.
550+  926B              ;	(cp 30)   ""  ""    ""     2 Columns.
551+  926B
552+  926B 3A 9C 85     Stop_Amadeus_right ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
553+  926E FE 1E        	cp 30																			 ; Hemos llegado al límite derecho de la pantalla??.
554+  9270 C9           	ret
555+  9271
556+  9271              ; ---------- ---------- ---------- ---------- ---------- ----------
557+  9271              ;
558+  9271              ;	19/10/22
559+  9271              ;
560+  9271              ;	(cp 2) para un Amadeus de 3 Columns.
561+  9271              ;	(cp 1)   ""  ""    ""     2 Columns.
562+  9271
563+  9271 3A 9C 85     Stop_Amadeus_left ld a,(Coordenada_X)	 	  										 ; Posición horizontal de Amadeus.
564+  9274 FE 01        	cp 1																			 ; Hemos llegado al límite izquierdo de la pantalla??.
565+  9276 C9           	ret
566+  9277
567+  9277              ; ---------- ---------- ---------- ---------- ---------- ----------
568+  9277              ;
569+  9277              ;	24/7/22
570+  9277              ;
571+  9277              ;	Inc_CTRL_DESPLZ
572+  9277              ;
573+  9277              ;
574+  9277              ;   Incrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
575+  9277
576+  9277 21 9E 85     Inc_CTRL_DESPLZ ld hl,CTRL_DESPLZ
577+  927A 3A AC 85     	ld a,(Vel_right)
578+  927D A7           	and a
579+  927E 28 06        	jr z,1F
580+  9280 47           	ld b,a
581+  9281 34           3 inc (hl)
582+  9282 10 FD        	djnz 3B
583+  9284 18 01        	jr 2F
584+  9286 34           1 inc (hl)
585+  9287 C9           2 ret
586+  9288
587+  9288              ; ---------- ---------- ---------- ---------- ---------- ----------
588+  9288              ;
589+  9288              ;	5/2/23
590+  9288              ;
591+  9288              ;	Dec_CTRL_DESPLZ
592+  9288              ;
593+  9288              ;
594+  9288              ;   Decrementa el valor del byte de control, (CTRL_DESPLZ) en función del nº de veces que hayamos desplazado el objeto, (Vel_right).
595+  9288
596+  9288 21 9E 85     Dec_CTRL_DESPLZ ld hl,CTRL_DESPLZ
597+  928B 3A AB 85     	ld a,(Vel_left)
598+  928E A7           	and a
599+  928F 28 06        	jr z,1F
600+  9291 47           	ld b,a
601+  9292 35           3 dec (hl)
602+  9293 10 FD        	djnz 3B
603+  9295 18 01        	jr 2F
604+  9297 35           1 dec (hl)
605+  9298 C9           2 ret
606+  9299
607+  9299              ; ---------- ---------- ---------- ---------- ---------- ----------
608+  9299
609+  9299 2A 98 85     Reaparece_derecha ld hl,(Posicion_actual)
610+  929C 01 1F 00     	ld bc,31
611+  929F A7           	and a
612+  92A0 ED 4A        	adc hl,bc
613+  92A2 22 98 85     	ld (Posicion_actual),hl
614+  92A5 21 C3 85     	ld hl,Ctrl_0														; $xxx1
615+  92A8 CB C6        	set 0,(hl)
616+  92AA C9           	ret
617+  92AB
618+  92AB              ; ---------- ---------- ---------- ---------- ---------- ----------
619+  92AB
620+  92AB 2A 98 85     Reaparece_izquierda ld hl,(Posicion_actual)
621+  92AE 01 1F 00     	ld bc,31
622+  92B1 A7           	and a
623+  92B2 ED 42        	sbc hl,bc
624+  92B4 22 98 85     	ld (Posicion_actual),hl 											; $xx1x
625+  92B7 21 C3 85     	ld hl,Ctrl_0
626+  92BA CB CE        	set 1,(hl)
627+  92BC C9           	ret
628+  92BD
629+  92BD              ; ---------- ---------- ---------- ---------- ---------- ----------
630+  92BD
631+  92BD 24           Reaparece_abajo inc h
632+  92BE 01 E0 17     	ld bc,$17e0
633+  92C1 A7           	and a
634+  92C2 ED 4A        	adc hl,bc
635+  92C4 22 98 85     	ld (Posicion_actual),hl
636+  92C7 21 C3 85     	ld hl,Ctrl_0
637+  92CA CB D6        	set 2,(hl)
638+  92CC C9           	ret
639+  92CD
640+  92CD              ; ---------- ---------- ---------- ---------- ---------- ----------
641+  92CD
642+  92CD 01 E0 17     Reaparece_arriba ld bc,$17e0
643+  92D0 A7           	and a
644+  92D1 ED 42        	sbc hl,bc
645+  92D3 22 98 85     	ld (Posicion_actual),hl
646+  92D6 21 C3 85     	ld hl,Ctrl_0
647+  92D9 CB DE        	set 3,(hl)
648+  92DB C9           	ret
649+  92DC
650+  92DC              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
651+  92DC
652+  92DC 2A A8 85     Reinicio ld hl,(Posicion_inicio)
653+  92DF 22 98 85     	ld (Posicion_actual),hl
654+  92E2 C9           	ret
# file closed: Direcciones.asm
839   92E3              	include "Genera_coordenadas.asm"
# file opened: Genera_coordenadas.asm
  1+  92E3              ;	12/12/22
  2+  92E3              ;
  3+  92E3              ;	Proporciona las coordenadas del objeto a imprimir.
  4+  92E3              ;	Fila superior "0", Columna izquierda "0".
  5+  92E3              ;
  6+  92E3              ;	Input: HL contendrá la (Posicion_actual) del Sprite.
  7+  92E3              ;
  8+  92E3              ;	Modifica: A
  9+  92E3
 10+  92E3 C5           Genera_coordenadas push bc
 11+  92E4 E5           	push hl
 12+  92E5 2A 98 85     	ld hl,(Posicion_actual)
 13+  92E8 7D           	ld a,l
 14+  92E9 E6 1F        	and $1f
 15+  92EB 32 9C 85     	ld (Coordenada_X),a 								; Coordenada X del sprite, (0-$1f).
 16+  92EE CD B1 8F     	call calcula_tercio
 17+  92F1 47           	ld b,a
 18+  92F2 04           	inc b												; Tercio de pantalla+1 en B, (1,2 o 3).
 19+  92F3 0E 00        	ld c,0 												; Contador de filas a "0".
 20+  92F5 7D           	ld a,l
 21+  92F6 E6 E0        	and $e0 											; Ahora (A) apunta al 1er char. de la fila en la que se encuentra el objeto.
 22+  92F8 28 05        	jr z,2F
 23+  92FA 0C           1 inc c
 24+  92FB D6 20        	sub 32
 25+  92FD 20 FB        	jr nz,1B
 26+  92FF 0C           2 inc c
 27+  9300 04           	inc b
 28+  9301 05           	dec b
 29+  9302 28 04        	jr z,3F
 30+  9304 3E E0        	ld a,$e0
 31+  9306 10 F2        	djnz 1B
 32+  9308 79           3 ld a,c
 33+  9309 3D           	dec a
 34+  930A 32 9D 85     	ld (Coordenada_y),a
 35+  930D E1           	pop hl
 36+  930E C1           	pop bc
 37+  930F C9           	ret
# file closed: Genera_coordenadas.asm
840   9310              	include "Patrones_de_mov.asm"
# file opened: Patrones_de_mov.asm
  1+  9310
  2+  9310
  3+  9310              ;   11/8/22
  4+  9310              ;
  5+  9310              ;   Base de datos. PATRONES DE MOVIMIENTO.
  6+  9310              ;
  7+  9310              ;   Mov_obj.asm
  8+  9310              ;
  9+  9310              ;   Coordenada_X db 0 									    	; Coordenada X del objeto. (En chars.)
 10+  9310              ;   Coordenada_y db 0 									    	; Coordenada Y del objeto. (En chars.)
 11+  9310              ;
 12+  9310              ;   Codificación:
 13+  9310              ;
 14+  9310              ;   % abajo,arriba,derecha,izquierda ..... nº de repeticiones del movimiento.
 15+  9310
 16+  9310              ;   El "0"; último .db indica que ya hemos terminado de ejecutar todas las cadenas de movimiento.
 17+  9310
 18+  9310 02 40 00     Arriba db 2,%01000000,0
 19+  9313 02 80 00     Abajo db 2,%10000000,0
 20+  9316 02 20 00     Derecha db 2,%00100000,0
 21+  9319 02 10 00     Izquierda db 2,%00010000,0
 22+  931C 2C 44 60 42  Onda_senoidal db 44,%01000100,%01100000,%01000010,%01100000,%01000010,%01100000,%01000000,%01100011
 22+  9320 60 42 60 40
 22+  9324 63
 23+  9325 22 60 25 A0      db %00100010,%01100000,%00100101,%10100000,%00100010,%10100011,%10000000,%10100000
 23+  9329 22 A3 80 A0
 24+  932D 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000100,%10100000,%10000011,%10100000
 24+  9331 84 A0 83 A0
 25+  9335 82 A0 82 A0      db %10000010,%10100000,%10000010,%10100000,%10000000,%10100011,%00100010,%10100000
 25+  9339 80 A3 22 A0
 26+  933D 25 60 22 63      db %00100101,%01100000,%00100010,%01100011,%01000000,%01100000,%01000010,%01100000
 26+  9341 40 60 42 60
 27+  9345 42 60 44 00      db %01000010,%01100000,%01000100,0
 28+  9349 03 14 44 00  Escaloncitos_izquierda_arriba db 3,%00010100,%01000100,0
 29+  934D 03 24 44 00  Escaloncitos_derecha_arriba db 3,%00100100,%01000100,0
 30+  9351 04 24 84 24  Escaloncitos_derecha_abajo db 4,%00100100,%10000100,%00100100,%10000100
 30+  9355 84
 31+  9356 05 14 84 14  Escaloncitos_izquierda_abajo db 5,%00010100,%10000100,%00010100,%10000100,0
 31+  935A 84 00
 32+  935C 03 2F 1F 00  Derecha_e_izquierda db 3,%00101111,%00011111,0
 33+  9360 21 1F 1F 1F  Izquierda_y_derecha db 33,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 33+  9364 1F 1F 1F 1F
 34+  9368 1F 1F 1F 1F      db %00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111,%00011111
 34+  936C 1F 1F 1F 1F
 34+  9370 1F
 35+  9371 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111,%00101111
 35+  9375 2F 2F 2F 2F
 35+  9379 2F 2F
 36+  937B 2F 2F 2F 2F      db %00101111,%00101111,%00101111,%00101111,%00101111,%00101111,0
 36+  937F 2F 2F 00
 37+  9382
 38+  9382
 39+  9382              ; ----- ----- ----- ----- -----
 40+  9382
 41+  9382 60 93        Indice_mov_Izquierda_y_derecha defw Izquierda_y_derecha
 42+  9384 5C 93        Indice_mov_Derecha_e_izquierda defw Derecha_e_izquierda
 43+  9386 19 93        Indice_mov_Izquierda defw Izquierda
 44+  9388 16 93        Indice_mov_Derecha defw Derecha
 45+  938A 13 93        Indice_mov_Abajo defw Abajo
 46+  938C 10 93        Indice_mov_Arriba defw Arriba
 47+  938E 4D 93        Indice_mov_Escaloncitos_derecha_arriba defw Escaloncitos_derecha_arriba
 48+  9390 51 93        Indice_mov_Escaloncitos_derecha_abajo defw Escaloncitos_derecha_abajo
 49+  9392 49 93        Indice_mov_Escaloncitos_izquierda_arriba defw Escaloncitos_izquierda_arriba
 50+  9394 56 93        Indice_mov_Escaloncitos_izquierda_abajo defw Escaloncitos_izquierda_abajo
 51+  9396 1C 93        Indice_mov_Onda_senoidal defw Onda_senoidal
 52+  9398              ; ----- ----- ----- ----- -----
 53+  9398
 54+  9398 3A C9 85     Movimiento ld a,(Contador_db_mov)                               ; Hemos iniciado la cadena de movimiento ?. Si (Contador_db_mov) aún es "0" hay que inicializarlo._
 55+  939B A7               and a                                                       ; _Para hacerlo, hemos de fijar antes (Puntero_mov).
 56+  939C 28 02            jr z,1F
 57+  939E 18 13            jr Decoder                                                  ; Saltamos a [Decoder] si ya hemos iniciado la cadena.
 58+  93A0 3A CA 85     1 ld a,(Incrementa_puntero)                                     ; Vamos a inicializar las variables de movimiento. El contador (Incrementa_puntero) es un byte que inicialmente está a "0"._
 59+  93A3 C6 02            add 2                                                       ; _va incrementando su valor en 2 unidades cada vez que iniciamos una cadena. Se utiliza para ir incrementando (Puntero_mov)_
 60+  93A5 32 CA 85         ld (Incrementa_puntero),a                                   ; _ por el índice de cadenas de movimiento correspondiente. Su valor se restablecerá a "0" cuando encontremos
 61+  93A8              ;                                                               ; _ el .db0. (Indica que hemos terminado de leer la secuencia de movimiento completa de la entidad).
 62+  93A8 2A C7 85         ld hl,(Puntero_mov)
 63+  93AB 7E               ld a,(hl)
 64+  93AC 32 C9 85         ld (Contador_db_mov),a                                      ; Contador de bytes de la cadena inicializado. (El 1er byte de cada cadena de mov. indica el nº de bytes de_
 65+  93AF 23               inc hl                                                      ; _movimiento que hemos de ejecutar).
 66+  93B0 22 C7 85         ld (Puntero_mov),hl                                         ; Situamos (Puntero_mov) en el 1er byte de instrucciones.
 67+  93B3
 68+  93B3 3A CB 85     Decoder ld a,(Repetimos_db)
 69+  93B6 A7               and a
 70+  93B7 20 0C            jr nz,12F
 71+  93B9 2A C7 85         ld hl,(Puntero_mov)
 72+  93BC 7E               ld a,(hl)
 73+  93BD A7               and a
 74+  93BE 28 69            jr z, Reinicia_el_movimiento                              ; Hemos terminado de ejecutar todas las cadenas de movimiento. Llamamos a [Fin_de_movimiento].
 75+  93C0 E6 0F            and $0f
 76+  93C2 32 CB 85         ld (Repetimos_db),a                                         ; Si la variable de repetición de .db es "0" hemos de inicializar dicha variable antes de empezar con la decodificación del .db de_
 77+  93C5              ;                                                               ; _movimiento. Este valor lo proporciona el nibble `bajo´ del byte.
 78+  93C5 2A C7 85     12 ld hl,(Puntero_mov)
 79+  93C8 CB 7E            bit 7,(hl)
 80+  93CA 28 03            jr z,2F
 81+  93CC CD CF 8F         call Mov_down
 82+  93CF 2A C7 85     2 ld hl, (Puntero_mov)
 83+  93D2 CB 76            bit 6,(hl)
 84+  93D4 28 03            jr z,3F
 85+  93D6 CD FD 8F         call Mov_up
 86+  93D9 2A C7 85     3 ld hl, (Puntero_mov)
 87+  93DC CB 6E            bit 5,(hl)
 88+  93DE 28 03            jr z,4F
 89+  93E0 CD 2B 90         call Mov_right
 90+  93E3 2A C7 85     4 ld hl, (Puntero_mov)
 91+  93E6 CB 66            bit 4,(hl)
 92+  93E8 28 03            jr z,5F
 93+  93EA CD 49 91         call Mov_left
 94+  93ED
 95+  93ED              ; ---------- --------- --------- ---------- ----------
 96+  93ED
 97+  93ED 3A CB 85     5 ld a,(Repetimos_db)
 98+  93F0 A7               and a
 99+  93F1 28 07            jr z,6F
100+  93F3 3D               dec a
101+  93F4 32 CB 85         ld (Repetimos_db),a
102+  93F7 28 01            jr z,6f
103+  93F9 C9           11 ret
104+  93FA 21 C9 85     6 ld hl,Contador_db_mov
105+  93FD 35               dec (hl)                                                       ; Decrementamos el contador de .db de la cadena, (pués ya hemos ejecutado un byte de la misma).
106+  93FE 2A C7 85         ld hl,(Puntero_mov)                                            ; No repetimos el mismo byte. Incrementamos (Puntero_mov) y salimos.
107+  9401 23               inc hl
108+  9402 22 C7 85         ld (Puntero_mov),hl
109+  9405 18 F2            jr 11B
110+  9407 2A C5 85     7 ld hl,(Puntero_indice_mov)                                       ; PASAMOS A LA CADENA SIGUIENTE !!!!!!
111+  940A 3A CA 85         ld a,(Incrementa_puntero)
112+  940D 47               ld b,a
113+  940E 23           8 inc hl
114+  940F 10 FD            djnz 8B                                                        ; Indice_patrones_coracao +2, +4, +6, etc...
115+  9411 5E               ld e,(hl)
116+  9412 23               inc hl
117+  9413 56               ld d,(hl)
118+  9414 EB               ex de,hl
119+  9415 22 C7 85         ld (Puntero_mov),hl                                            ; (Puntero_mov) situado el el 1er .db de la siguiente cadena de movimiento.
120+  9418 18 DF            jr 11B
121+  941A
122+  941A              ; ---------- --------- --------- ---------- ----------
123+  941A              ;
124+  941A              ;   11/8/22
125+  941A              ;
126+  941A              ;   Prepara_Puntero_mov
127+  941A
128+  941A E5           Prepara_Puntero_mov push hl
129+  941B D5               push de
130+  941C 2A C5 85         ld hl,(Puntero_indice_mov)
131+  941F 5E               ld e,(hl)
132+  9420 23               inc hl
133+  9421 56               ld d,(hl)
134+  9422 EB               ex de,hl
135+  9423 22 C7 85         ld (Puntero_mov),hl
136+  9426 D1               pop de
137+  9427 E1               pop hl
138+  9428 C9               ret
139+  9429
140+  9429              ; ---------- --------- --------- ---------- ----------
141+  9429              ;
142+  9429              ;   11/8/22
143+  9429              ;
144+  9429              ;   Reinicia_el_movimiento
145+  9429
146+  9429 CD 1A 94     Reinicia_el_movimiento call Prepara_Puntero_mov
147+  942C AF               xor a
148+  942D 32 C9 85         ld (Contador_db_mov),a
149+  9430 32 CA 85         ld (Incrementa_puntero),a
150+  9433
151+  9433              ;    jr $
152+  9433
153+  9433 C3 98 93         jp Movimiento
154+  9436 C9               ret
155+  9437              ; ---------- --------- --------- ---------- ----------
156+  9437
157+  9437
158+  9437
159+  9437
160+  9437
161+  9437
162+  9437
163+  9437
164+  9437
165+  9437
166+  9437
167+  9437
168+  9437
169+  9437
170+  9437
171+  9437
172+  9437
173+  9437
# file closed: Patrones_de_mov.asm
841   9437              	include "Guarda_foto_registros.asm"
# file opened: Guarda_foto_registros.asm
  1+  9437              ; ----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
  2+  9437              ;
  3+  9437              ;	3/1/23
  4+  9437              ;
  5+  9437              ;	Instrucciones donde interviene el Stack Pointer, (SP).
  6+  9437
  7+  9437              ;	ADC HL,SP	LD (addr),SP
  8+  9437              ;	ADD HL,SP	LD SP,(addr)
  9+  9437              ;	ADD IX,SP	LD SP,nn
 10+  9437              ; 	ADD IY,SP	LD SP,HL
 11+  9437              ;				LD SP,IX
 12+  9437              ;	DEC SP		LD SP,IY
 13+  9437
 14+  9437              ;	EX (SP),HL
 15+  9437              ;	EX (SP),IX
 16+  9437              ;	EX (SP),IY
 17+  9437
 18+  9437              ;	INC SP
 19+  9437
 20+  9437
 21+  9437                  org $7fa0
 22+  7FA0
 23+  7FA0              ;   (Stack_snapshot) se sitúa inicialmente en (Album_de_fotos)=$7000.
 24+  7FA0              ;   Almacenaremos los datos/registros necesarios de la siguiente manera:
 25+  7FA0              ;
 26+  7FA0              ;   $7000 / 01 ..... Puntero objeto.
 27+  7FA0              ;   $7002 / 03 ..... Puntero de impresion.
 28+  7FA0              ;   $7004 / 05 ..... Rutina de impresión.
 29+  7FA0
 30+  7FA0 ED 73 D9 85  Guarda_foto_registros ld (Stack),sp               ; Guardo SP en (Stack).
 31+  7FA4 31 A0 7F         ld sp,Guarda_foto_registros                   ; Sitúo el Stack Pointer en la dirección actual -1
 32+  7FA7
 33+  7FA7 E5               push hl                                       ; HL contiene la dirección de la rutina de impresión.
 34+  7FA8 DD E5            push ix                                       ; IX contiene el puntero de impresión.
 35+  7FAA FD E5            push iy                                       ; IY contiene (Puntero_objeto).
 36+  7FAC
 37+  7FAC 3A D0 85         ld a,(Ctrl_1)
 38+  7FAF CB 47            bit 0,a
 39+  7FB1 28 05            jr z,2F
 40+  7FB3
 41+  7FB3 2A DF 85         ld hl,(Stack_snapshot_disparos)
 42+  7FB6
 43+  7FB6 18 03            jr 4F
 44+  7FB8
 45+  7FB8 2A DD 85     2 ld hl,(Stack_snapshot)                          ; Album_de_fotos contiene la imagen de los registros implicados en el_
 46+  7FBB 06 03        4 ld b,3                                          ; _correcto funcionamiento de las distintas rutinas de impresión.
 47+  7FBD
 48+  7FBD D1           1 pop de
 49+  7FBE 73               ld (hl),e
 50+  7FBF 23               inc hl
 51+  7FC0 72               ld (hl),d
 52+  7FC1 23               inc hl                                        ; Volvemos a tener al puntero SP en la posición inicial, (Snapshot)-1.
 53+  7FC2 10 F9            djnz 1B
 54+  7FC4
 55+  7FC4 A7               and a
 56+  7FC5 28 05            jr z,5F
 57+  7FC7
 58+  7FC7 22 DF 85         ld (Stack_snapshot_disparos),hl
 59+  7FCA 18 03            jr 6F
 60+  7FCC
 61+  7FCC 22 DD 85     5 ld (Stack_snapshot),hl
 62+  7FCF ED 7B D9 85  6 ld sp,(Stack)
 63+  7FD3
 64+  7FD3 C9           3 ret                                             ; Antes de salir de la rutina recuperamos SP y actualizamos,(o no), (Stack_snapshot).
 65+  7FD4
 66+  7FD4
# file closed: Guarda_foto_registros.asm
842   7FD4
843   7FD4              	SAVESNA "Pruebas.sna", START
844   7FD4
845   7FD4
846   7FD4
# file closed: Banco_de_pruebas.asm
